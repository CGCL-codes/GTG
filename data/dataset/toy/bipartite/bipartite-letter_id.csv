task,graph,graph_adj,graph_nl,nodes,num_nodes,num_edges,directed,question,answer,steps,n1,n2,id
bipartite,"[(PBP, MTZ), (IGZ, UBJ), (IGZ, LNA), (IGZ, MTZ)]","{PBP: [MTZ],
IGZ: [UBJ, LNA, MTZ],
UBJ: [IGZ],
LNA: [IGZ],
MTZ: [PBP, IGZ]}","Node PBP is connected to node MTZ.
Node IGZ is connected to nodes UBJ, LNA, MTZ.
Node UBJ is connected to node IGZ.
Node LNA is connected to node IGZ.
Node MTZ is connected to nodes PBP, IGZ.","[PBP, IGZ, UBJ, LNA, MTZ]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PBP IGZ.
Nodes set 2 contains: UBJ LNA MTZ.","[(PBP, MTZ), (IGZ, UBJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PBP. Updated matching: {MTZ: PBP}.
Search from node IGZ. Updated matching: {MTZ: PBP, UBJ: IGZ}.
So the maximum matching is ",2,3,0
bipartite,"[(ZEA, WSL), (ZEA, YCA), (HYS, WSL), (HYS, EJX), (HYS, XBN), (HYS, JHV)]","{ZEA: [WSL, YCA],
HYS: [WSL, EJX, XBN, JHV],
WSL: [ZEA, HYS],
EJX: [HYS],
XBN: [HYS],
YCA: [ZEA],
JHV: [HYS]}","Node ZEA is connected to nodes WSL, YCA.
Node HYS is connected to nodes WSL, EJX, XBN, JHV.
Node WSL is connected to nodes ZEA, HYS.
Node EJX is connected to node HYS.
Node XBN is connected to node HYS.
Node YCA is connected to node ZEA.
Node JHV is connected to node HYS.","[ZEA, HYS, WSL, EJX, XBN, YCA, JHV]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZEA HYS.
Nodes set 2 contains: WSL EJX XBN YCA JHV.","[(ZEA, YCA), (HYS, WSL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZEA. Updated matching: {WSL: ZEA}.
Search from node HYS. Updated matching: {WSL: HYS, YCA: ZEA}.
So the maximum matching is ",2,5,1
bipartite,"[(VPO, GTL), (VPO, TPM), (BTF, GTL), (BTF, GKZ), (BTF, WYW), (MZQ, WYW)]","{VPO: [GTL, TPM],
BTF: [GTL, GKZ, WYW],
MZQ: [WYW],
GTL: [VPO, BTF],
GKZ: [BTF],
WYW: [BTF, MZQ],
TPM: [VPO]}","Node VPO is connected to nodes GTL, TPM.
Node BTF is connected to nodes GTL, GKZ, WYW.
Node MZQ is connected to node WYW.
Node GTL is connected to nodes VPO, BTF.
Node GKZ is connected to node BTF.
Node WYW is connected to nodes BTF, MZQ.
Node TPM is connected to node VPO.","[VPO, BTF, MZQ, GTL, GKZ, WYW, TPM]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VPO BTF MZQ.
Nodes set 2 contains: GTL GKZ WYW TPM.","[(VPO, TPM), (BTF, GTL), (MZQ, WYW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VPO. Updated matching: {GTL: VPO}.
Search from node BTF. Updated matching: {GTL: BTF, TPM: VPO}.
Search from node MZQ. Updated matching: {GTL: BTF, TPM: VPO, WYW: MZQ}.
So the maximum matching is ",3,4,2
bipartite,"[(SHU, ILM), (VJD, BIT), (VJD, JOT), (VJD, ILM)]","{SHU: [ILM],
VJD: [BIT, JOT, ILM],
BIT: [VJD],
JOT: [VJD],
ILM: [SHU, VJD]}","Node SHU is connected to node ILM.
Node VJD is connected to nodes BIT, JOT, ILM.
Node BIT is connected to node VJD.
Node JOT is connected to node VJD.
Node ILM is connected to nodes SHU, VJD.","[SHU, VJD, BIT, JOT, ILM]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SHU VJD.
Nodes set 2 contains: BIT JOT ILM.","[(SHU, ILM), (VJD, BIT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SHU. Updated matching: {ILM: SHU}.
Search from node VJD. Updated matching: {ILM: SHU, BIT: VJD}.
So the maximum matching is ",2,3,3
bipartite,"[(SKX, NVS), (SKX, NSY), (SUZ, NVS), (SUZ, ITQ)]","{SKX: [NVS, NSY],
SUZ: [NVS, ITQ],
NVS: [SKX, SUZ],
NSY: [SKX],
ITQ: [SUZ]}","Node SKX is connected to nodes NVS, NSY.
Node SUZ is connected to nodes NVS, ITQ.
Node NVS is connected to nodes SKX, SUZ.
Node NSY is connected to node SKX.
Node ITQ is connected to node SUZ.","[SKX, SUZ, NVS, NSY, ITQ]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SKX SUZ.
Nodes set 2 contains: NVS NSY ITQ.","[(SKX, NSY), (SUZ, NVS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SKX. Updated matching: {NVS: SKX}.
Search from node SUZ. Updated matching: {NVS: SUZ, NSY: SKX}.
So the maximum matching is ",2,3,4
bipartite,"[(GSG, KQN), (GSG, AGA), (GSG, UGB), (WMF, GIX), (WMF, QDJ), (WMF, AGA), (WMF, UGB)]","{GSG: [KQN, AGA, UGB],
WMF: [GIX, QDJ, AGA, UGB],
GIX: [WMF],
QDJ: [WMF],
KQN: [GSG],
AGA: [GSG, WMF],
UGB: [GSG, WMF]}","Node GSG is connected to nodes KQN, AGA, UGB.
Node WMF is connected to nodes GIX, QDJ, AGA, UGB.
Node GIX is connected to node WMF.
Node QDJ is connected to node WMF.
Node KQN is connected to node GSG.
Node AGA is connected to nodes GSG, WMF.
Node UGB is connected to nodes GSG, WMF.","[GSG, WMF, GIX, QDJ, KQN, AGA, UGB]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GSG WMF.
Nodes set 2 contains: GIX QDJ KQN AGA UGB.","[(GSG, KQN), (WMF, GIX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GSG. Updated matching: {KQN: GSG}.
Search from node WMF. Updated matching: {KQN: GSG, GIX: WMF}.
So the maximum matching is ",2,5,5
bipartite,"[(PQX, SMF), (PQX, IOY), (PQX, SXF), (PQX, FIE)]","{PQX: [SMF, IOY, SXF, FIE],
SMF: [PQX],
IOY: [PQX],
SXF: [PQX],
FIE: [PQX]}","Node PQX is connected to nodes SMF, IOY, SXF, FIE.
Node SMF is connected to node PQX.
Node IOY is connected to node PQX.
Node SXF is connected to node PQX.
Node FIE is connected to node PQX.","[PQX, SMF, IOY, SXF, FIE]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PQX.
Nodes set 2 contains: SMF IOY SXF FIE.","[(PQX, SMF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PQX. Updated matching: {SMF: PQX}.
So the maximum matching is ",1,4,6
bipartite,"[(JAR, XCT), (JAR, CMS), (JAR, MGU), (FNL, QJI), (FNL, CMS), (FNL, MGU)]","{JAR: [XCT, CMS, MGU],
FNL: [QJI, CMS, MGU],
XCT: [JAR],
QJI: [FNL],
CMS: [JAR, FNL],
MGU: [JAR, FNL]}","Node JAR is connected to nodes XCT, CMS, MGU.
Node FNL is connected to nodes QJI, CMS, MGU.
Node XCT is connected to node JAR.
Node QJI is connected to node FNL.
Node CMS is connected to nodes JAR, FNL.
Node MGU is connected to nodes JAR, FNL.","[JAR, FNL, XCT, QJI, CMS, MGU]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JAR FNL.
Nodes set 2 contains: XCT QJI CMS MGU.","[(JAR, XCT), (FNL, QJI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JAR. Updated matching: {XCT: JAR}.
Search from node FNL. Updated matching: {XCT: JAR, QJI: FNL}.
So the maximum matching is ",2,4,7
bipartite,"[(BLL, LGB), (BLL, CCP), (MDB, YGH), (MDB, LGB), (MDB, FNE), (MDB, QDX)]","{BLL: [LGB, CCP],
MDB: [YGH, LGB, FNE, QDX],
YGH: [MDB],
LGB: [BLL, MDB],
FNE: [MDB],
CCP: [BLL],
QDX: [MDB]}","Node BLL is connected to nodes LGB, CCP.
Node MDB is connected to nodes YGH, LGB, FNE, QDX.
Node YGH is connected to node MDB.
Node LGB is connected to nodes BLL, MDB.
Node FNE is connected to node MDB.
Node CCP is connected to node BLL.
Node QDX is connected to node MDB.","[BLL, MDB, YGH, LGB, FNE, CCP, QDX]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BLL MDB.
Nodes set 2 contains: YGH LGB FNE CCP QDX.","[(BLL, LGB), (MDB, YGH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BLL. Updated matching: {LGB: BLL}.
Search from node MDB. Updated matching: {LGB: BLL, YGH: MDB}.
So the maximum matching is ",2,5,8
bipartite,"[(FWT, GJQ), (FWT, UYH), (AJO, GJQ), (AJO, AXL)]","{FWT: [GJQ, UYH],
AJO: [GJQ, AXL],
GJQ: [FWT, AJO],
UYH: [FWT],
AXL: [AJO]}","Node FWT is connected to nodes GJQ, UYH.
Node AJO is connected to nodes GJQ, AXL.
Node GJQ is connected to nodes FWT, AJO.
Node UYH is connected to node FWT.
Node AXL is connected to node AJO.","[FWT, AJO, GJQ, UYH, AXL]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FWT AJO.
Nodes set 2 contains: GJQ UYH AXL.","[(FWT, UYH), (AJO, GJQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FWT. Updated matching: {GJQ: FWT}.
Search from node AJO. Updated matching: {GJQ: AJO, UYH: FWT}.
So the maximum matching is ",2,3,9
bipartite,"[(RAM, VYY), (RAM, ULE), (IHN, HXH), (IHN, QQQ), (IHN, ULE)]","{RAM: [VYY, ULE],
IHN: [HXH, QQQ, ULE],
HXH: [IHN],
VYY: [RAM],
QQQ: [IHN],
ULE: [RAM, IHN]}","Node RAM is connected to nodes VYY, ULE.
Node IHN is connected to nodes HXH, QQQ, ULE.
Node HXH is connected to node IHN.
Node VYY is connected to node RAM.
Node QQQ is connected to node IHN.
Node ULE is connected to nodes RAM, IHN.","[RAM, IHN, HXH, VYY, QQQ, ULE]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RAM IHN.
Nodes set 2 contains: HXH VYY QQQ ULE.","[(RAM, VYY), (IHN, HXH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RAM. Updated matching: {VYY: RAM}.
Search from node IHN. Updated matching: {VYY: RAM, HXH: IHN}.
So the maximum matching is ",2,4,10
bipartite,"[(DYJ, QWO), (DYJ, QGT), (TFC, QWO), (TFC, CBI)]","{DYJ: [QWO, QGT],
TFC: [QWO, CBI],
QWO: [DYJ, TFC],
QGT: [DYJ],
CBI: [TFC]}","Node DYJ is connected to nodes QWO, QGT.
Node TFC is connected to nodes QWO, CBI.
Node QWO is connected to nodes DYJ, TFC.
Node QGT is connected to node DYJ.
Node CBI is connected to node TFC.","[DYJ, TFC, QWO, QGT, CBI]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DYJ TFC.
Nodes set 2 contains: QWO QGT CBI.","[(DYJ, QGT), (TFC, QWO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DYJ. Updated matching: {QWO: DYJ}.
Search from node TFC. Updated matching: {QWO: TFC, QGT: DYJ}.
So the maximum matching is ",2,3,11
bipartite,"[(MQZ, UGR), (LXT, AIU), (LXT, UXC), (LXT, NUE), (OVK, AIU), (OVK, UGR), (OVK, UXC)]","{MQZ: [UGR],
LXT: [AIU, UXC, NUE],
OVK: [AIU, UGR, UXC],
AIU: [LXT, OVK],
UGR: [MQZ, OVK],
UXC: [LXT, OVK],
NUE: [LXT]}","Node MQZ is connected to node UGR.
Node LXT is connected to nodes AIU, UXC, NUE.
Node OVK is connected to nodes AIU, UGR, UXC.
Node AIU is connected to nodes LXT, OVK.
Node UGR is connected to nodes MQZ, OVK.
Node UXC is connected to nodes LXT, OVK.
Node NUE is connected to node LXT.","[MQZ, LXT, OVK, AIU, UGR, UXC, NUE]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MQZ LXT OVK.
Nodes set 2 contains: AIU UGR UXC NUE.","[(MQZ, UGR), (LXT, UXC), (OVK, AIU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MQZ. Updated matching: {UGR: MQZ}.
Search from node LXT. Updated matching: {UGR: MQZ, AIU: LXT}.
Search from node OVK. Updated matching: {UGR: MQZ, AIU: OVK, UXC: LXT}.
So the maximum matching is ",3,4,12
bipartite,"[(ERE, PLF), (MKW, STD), (MKW, PLF), (MKW, WFM), (MKW, NZX)]","{ERE: [PLF],
MKW: [STD, PLF, WFM, NZX],
STD: [MKW],
PLF: [ERE, MKW],
WFM: [MKW],
NZX: [MKW]}","Node ERE is connected to node PLF.
Node MKW is connected to nodes STD, PLF, WFM, NZX.
Node STD is connected to node MKW.
Node PLF is connected to nodes ERE, MKW.
Node WFM is connected to node MKW.
Node NZX is connected to node MKW.","[ERE, MKW, STD, PLF, WFM, NZX]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ERE MKW.
Nodes set 2 contains: STD PLF WFM NZX.","[(ERE, PLF), (MKW, STD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ERE. Updated matching: {PLF: ERE}.
Search from node MKW. Updated matching: {PLF: ERE, STD: MKW}.
So the maximum matching is ",2,4,13
bipartite,"[(KNL, ZNO), (KNL, GCO), (KNL, NZD), (LRD, ZNO), (LRD, GCO), (LRD, RPE), (LRD, NZD)]","{KNL: [ZNO, GCO, NZD],
LRD: [ZNO, GCO, RPE, NZD],
ZNO: [KNL, LRD],
GCO: [KNL, LRD],
RPE: [LRD],
NZD: [KNL, LRD]}","Node KNL is connected to nodes ZNO, GCO, NZD.
Node LRD is connected to nodes ZNO, GCO, RPE, NZD.
Node ZNO is connected to nodes KNL, LRD.
Node GCO is connected to nodes KNL, LRD.
Node RPE is connected to node LRD.
Node NZD is connected to nodes KNL, LRD.","[KNL, LRD, ZNO, GCO, RPE, NZD]",6,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: KNL LRD.
Nodes set 2 contains: ZNO GCO RPE NZD.","[(KNL, GCO), (LRD, ZNO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node KNL. Updated matching: {ZNO: KNL}.
Search from node LRD. Updated matching: {ZNO: LRD, GCO: KNL}.
So the maximum matching is ",2,4,14
bipartite,"[(UIW, AXL), (UIW, YYP), (UIW, HRI), (RYB, AXL), (RYB, AJH), (RYB, PTN)]","{UIW: [AXL, YYP, HRI],
RYB: [AXL, AJH, PTN],
AXL: [UIW, RYB],
AJH: [RYB],
YYP: [UIW],
HRI: [UIW],
PTN: [RYB]}","Node UIW is connected to nodes AXL, YYP, HRI.
Node RYB is connected to nodes AXL, AJH, PTN.
Node AXL is connected to nodes UIW, RYB.
Node AJH is connected to node RYB.
Node YYP is connected to node UIW.
Node HRI is connected to node UIW.
Node PTN is connected to node RYB.","[UIW, RYB, AXL, AJH, YYP, HRI, PTN]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UIW RYB.
Nodes set 2 contains: AXL AJH YYP HRI PTN.","[(UIW, YYP), (RYB, AXL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UIW. Updated matching: {AXL: UIW}.
Search from node RYB. Updated matching: {AXL: RYB, YYP: UIW}.
So the maximum matching is ",2,5,15
bipartite,"[(LXM, SUB), (LXM, RMN), (JBM, TJU), (JBM, SUB), (JBM, BVN), (JBM, GRT)]","{LXM: [SUB, RMN],
JBM: [TJU, SUB, BVN, GRT],
TJU: [JBM],
SUB: [LXM, JBM],
RMN: [LXM],
BVN: [JBM],
GRT: [JBM]}","Node LXM is connected to nodes SUB, RMN.
Node JBM is connected to nodes TJU, SUB, BVN, GRT.
Node TJU is connected to node JBM.
Node SUB is connected to nodes LXM, JBM.
Node RMN is connected to node LXM.
Node BVN is connected to node JBM.
Node GRT is connected to node JBM.","[LXM, JBM, TJU, SUB, RMN, BVN, GRT]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LXM JBM.
Nodes set 2 contains: TJU SUB RMN BVN GRT.","[(LXM, SUB), (JBM, TJU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LXM. Updated matching: {SUB: LXM}.
Search from node JBM. Updated matching: {SUB: LXM, TJU: JBM}.
So the maximum matching is ",2,5,16
bipartite,"[(XBH, HAK), (XBH, QMX), (HVQ, HAK), (HVQ, BQV)]","{XBH: [HAK, QMX],
HVQ: [HAK, BQV],
HAK: [XBH, HVQ],
BQV: [HVQ],
QMX: [XBH]}","Node XBH is connected to nodes HAK, QMX.
Node HVQ is connected to nodes HAK, BQV.
Node HAK is connected to nodes XBH, HVQ.
Node BQV is connected to node HVQ.
Node QMX is connected to node XBH.","[XBH, HVQ, HAK, BQV, QMX]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XBH HVQ.
Nodes set 2 contains: HAK BQV QMX.","[(XBH, QMX), (HVQ, HAK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XBH. Updated matching: {HAK: XBH}.
Search from node HVQ. Updated matching: {HAK: HVQ, QMX: XBH}.
So the maximum matching is ",2,3,17
bipartite,"[(WHU, EOY), (WHU, PYD), (WHU, OYA), (WHU, ZLB)]","{WHU: [EOY, PYD, OYA, ZLB],
EOY: [WHU],
PYD: [WHU],
OYA: [WHU],
ZLB: [WHU]}","Node WHU is connected to nodes EOY, PYD, OYA, ZLB.
Node EOY is connected to node WHU.
Node PYD is connected to node WHU.
Node OYA is connected to node WHU.
Node ZLB is connected to node WHU.","[WHU, EOY, PYD, OYA, ZLB]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WHU.
Nodes set 2 contains: EOY PYD OYA ZLB.","[(WHU, EOY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WHU. Updated matching: {EOY: WHU}.
So the maximum matching is ",1,4,18
bipartite,"[(SKS, SMO), (SKS, FZF), (SKS, NHI), (QYY, LTY), (QYY, NHI)]","{SKS: [SMO, FZF, NHI],
QYY: [LTY, NHI],
SMO: [SKS],
LTY: [QYY],
FZF: [SKS],
NHI: [SKS, QYY]}","Node SKS is connected to nodes SMO, FZF, NHI.
Node QYY is connected to nodes LTY, NHI.
Node SMO is connected to node SKS.
Node LTY is connected to node QYY.
Node FZF is connected to node SKS.
Node NHI is connected to nodes SKS, QYY.","[SKS, QYY, SMO, LTY, FZF, NHI]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SKS QYY.
Nodes set 2 contains: SMO LTY FZF NHI.","[(SKS, SMO), (QYY, LTY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SKS. Updated matching: {SMO: SKS}.
Search from node QYY. Updated matching: {SMO: SKS, LTY: QYY}.
So the maximum matching is ",2,4,19
bipartite,"[(ENI, OYV), (ENI, KFD), (ENI, THM), (PSF, THM)]","{ENI: [OYV, KFD, THM],
PSF: [THM],
OYV: [ENI],
KFD: [ENI],
THM: [ENI, PSF]}","Node ENI is connected to nodes OYV, KFD, THM.
Node PSF is connected to node THM.
Node OYV is connected to node ENI.
Node KFD is connected to node ENI.
Node THM is connected to nodes ENI, PSF.","[ENI, PSF, OYV, KFD, THM]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ENI PSF.
Nodes set 2 contains: OYV KFD THM.","[(ENI, OYV), (PSF, THM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ENI. Updated matching: {OYV: ENI}.
Search from node PSF. Updated matching: {OYV: ENI, THM: PSF}.
So the maximum matching is ",2,3,20
bipartite,"[(MKB, VZA), (MKB, MAF), (MKB, VQS), (IOJ, YXN), (IOJ, VQS), (IOJ, IRF)]","{MKB: [VZA, MAF, VQS],
IOJ: [YXN, VQS, IRF],
VZA: [MKB],
YXN: [IOJ],
MAF: [MKB],
VQS: [MKB, IOJ],
IRF: [IOJ]}","Node MKB is connected to nodes VZA, MAF, VQS.
Node IOJ is connected to nodes YXN, VQS, IRF.
Node VZA is connected to node MKB.
Node YXN is connected to node IOJ.
Node MAF is connected to node MKB.
Node VQS is connected to nodes MKB, IOJ.
Node IRF is connected to node IOJ.","[MKB, IOJ, VZA, YXN, MAF, VQS, IRF]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MKB IOJ.
Nodes set 2 contains: VZA YXN MAF VQS IRF.","[(MKB, VZA), (IOJ, YXN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MKB. Updated matching: {VZA: MKB}.
Search from node IOJ. Updated matching: {VZA: MKB, YXN: IOJ}.
So the maximum matching is ",2,5,21
bipartite,"[(REV, SUX), (REV, UKD), (WWE, HJZ), (WWE, UKD), (WWE, YZI)]","{REV: [SUX, UKD],
WWE: [HJZ, UKD, YZI],
SUX: [REV],
HJZ: [WWE],
UKD: [REV, WWE],
YZI: [WWE]}","Node REV is connected to nodes SUX, UKD.
Node WWE is connected to nodes HJZ, UKD, YZI.
Node SUX is connected to node REV.
Node HJZ is connected to node WWE.
Node UKD is connected to nodes REV, WWE.
Node YZI is connected to node WWE.","[REV, WWE, SUX, HJZ, UKD, YZI]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: REV WWE.
Nodes set 2 contains: SUX HJZ UKD YZI.","[(REV, SUX), (WWE, HJZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node REV. Updated matching: {SUX: REV}.
Search from node WWE. Updated matching: {SUX: REV, HJZ: WWE}.
So the maximum matching is ",2,4,22
bipartite,"[(DXW, LEA), (DXW, LQQ), (DXW, KBT), (BKY, LEA)]","{DXW: [LEA, LQQ, KBT],
BKY: [LEA],
LEA: [DXW, BKY],
LQQ: [DXW],
KBT: [DXW]}","Node DXW is connected to nodes LEA, LQQ, KBT.
Node BKY is connected to node LEA.
Node LEA is connected to nodes DXW, BKY.
Node LQQ is connected to node DXW.
Node KBT is connected to node DXW.","[DXW, BKY, LEA, LQQ, KBT]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DXW BKY.
Nodes set 2 contains: LEA LQQ KBT.","[(DXW, LQQ), (BKY, LEA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DXW. Updated matching: {LEA: DXW}.
Search from node BKY. Updated matching: {LEA: BKY, LQQ: DXW}.
So the maximum matching is ",2,3,23
bipartite,"[(YOY, LVI), (YOY, DQY), (YOY, OIL), (DYX, DKQ), (DYX, OIL), (DYX, RKG)]","{YOY: [LVI, DQY, OIL],
DYX: [DKQ, OIL, RKG],
LVI: [YOY],
DKQ: [DYX],
DQY: [YOY],
OIL: [YOY, DYX],
RKG: [DYX]}","Node YOY is connected to nodes LVI, DQY, OIL.
Node DYX is connected to nodes DKQ, OIL, RKG.
Node LVI is connected to node YOY.
Node DKQ is connected to node DYX.
Node DQY is connected to node YOY.
Node OIL is connected to nodes YOY, DYX.
Node RKG is connected to node DYX.","[YOY, DYX, LVI, DKQ, DQY, OIL, RKG]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YOY DYX.
Nodes set 2 contains: LVI DKQ DQY OIL RKG.","[(YOY, LVI), (DYX, DKQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YOY. Updated matching: {LVI: YOY}.
Search from node DYX. Updated matching: {LVI: YOY, DKQ: DYX}.
So the maximum matching is ",2,5,24
bipartite,"[(URV, QPC), (PRO, QPC), (PRO, EHU), (PRO, BAL)]","{URV: [QPC],
PRO: [QPC, EHU, BAL],
QPC: [URV, PRO],
EHU: [PRO],
BAL: [PRO]}","Node URV is connected to node QPC.
Node PRO is connected to nodes QPC, EHU, BAL.
Node QPC is connected to nodes URV, PRO.
Node EHU is connected to node PRO.
Node BAL is connected to node PRO.","[URV, PRO, QPC, EHU, BAL]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: URV PRO.
Nodes set 2 contains: QPC EHU BAL.","[(URV, QPC), (PRO, EHU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node URV. Updated matching: {QPC: URV}.
Search from node PRO. Updated matching: {QPC: URV, EHU: PRO}.
So the maximum matching is ",2,3,25
bipartite,"[(CUO, LCV), (CUO, TQR), (CUO, OLJ), (CUO, ONI), (HAW, LCV), (HAW, TQR), (HAW, HSQ)]","{CUO: [LCV, TQR, OLJ, ONI],
HAW: [LCV, TQR, HSQ],
LCV: [CUO, HAW],
TQR: [CUO, HAW],
HSQ: [HAW],
OLJ: [CUO],
ONI: [CUO]}","Node CUO is connected to nodes LCV, TQR, OLJ, ONI.
Node HAW is connected to nodes LCV, TQR, HSQ.
Node LCV is connected to nodes CUO, HAW.
Node TQR is connected to nodes CUO, HAW.
Node HSQ is connected to node HAW.
Node OLJ is connected to node CUO.
Node ONI is connected to node CUO.","[CUO, HAW, LCV, TQR, HSQ, OLJ, ONI]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CUO HAW.
Nodes set 2 contains: LCV TQR HSQ OLJ ONI.","[(CUO, TQR), (HAW, LCV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CUO. Updated matching: {LCV: CUO}.
Search from node HAW. Updated matching: {LCV: HAW, TQR: CUO}.
So the maximum matching is ",2,5,26
bipartite,"[(NTO, MCU), (TUO, MCK), (TUO, ELK), (TUO, MCU)]","{NTO: [MCU],
TUO: [MCK, ELK, MCU],
MCK: [TUO],
ELK: [TUO],
MCU: [NTO, TUO]}","Node NTO is connected to node MCU.
Node TUO is connected to nodes MCK, ELK, MCU.
Node MCK is connected to node TUO.
Node ELK is connected to node TUO.
Node MCU is connected to nodes NTO, TUO.","[NTO, TUO, MCK, ELK, MCU]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NTO TUO.
Nodes set 2 contains: MCK ELK MCU.","[(NTO, MCU), (TUO, MCK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NTO. Updated matching: {MCU: NTO}.
Search from node TUO. Updated matching: {MCU: NTO, MCK: TUO}.
So the maximum matching is ",2,3,27
bipartite,"[(MPR, MZQ), (MPR, MAZ), (OSU, AQW), (OSU, NJL), (OSU, MAZ)]","{MPR: [MZQ, MAZ],
OSU: [AQW, NJL, MAZ],
MZQ: [MPR],
AQW: [OSU],
NJL: [OSU],
MAZ: [MPR, OSU]}","Node MPR is connected to nodes MZQ, MAZ.
Node OSU is connected to nodes AQW, NJL, MAZ.
Node MZQ is connected to node MPR.
Node AQW is connected to node OSU.
Node NJL is connected to node OSU.
Node MAZ is connected to nodes MPR, OSU.","[MPR, OSU, MZQ, AQW, NJL, MAZ]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MPR OSU.
Nodes set 2 contains: MZQ AQW NJL MAZ.","[(MPR, MZQ), (OSU, AQW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MPR. Updated matching: {MZQ: MPR}.
Search from node OSU. Updated matching: {MZQ: MPR, AQW: OSU}.
So the maximum matching is ",2,4,28
bipartite,"[(OQZ, BJL), (OQZ, SLG), (OQZ, DSM), (LBQ, DSM)]","{OQZ: [BJL, SLG, DSM],
LBQ: [DSM],
BJL: [OQZ],
SLG: [OQZ],
DSM: [OQZ, LBQ]}","Node OQZ is connected to nodes BJL, SLG, DSM.
Node LBQ is connected to node DSM.
Node BJL is connected to node OQZ.
Node SLG is connected to node OQZ.
Node DSM is connected to nodes OQZ, LBQ.","[OQZ, LBQ, BJL, SLG, DSM]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OQZ LBQ.
Nodes set 2 contains: BJL SLG DSM.","[(OQZ, BJL), (LBQ, DSM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OQZ. Updated matching: {BJL: OQZ}.
Search from node LBQ. Updated matching: {BJL: OQZ, DSM: LBQ}.
So the maximum matching is ",2,3,29
bipartite,"[(ZAM, INQ), (ZAM, PXK), (IEQ, OTF), (IEQ, LNG), (IEQ, INQ), (IEQ, PXK)]","{ZAM: [INQ, PXK],
IEQ: [OTF, LNG, INQ, PXK],
OTF: [IEQ],
LNG: [IEQ],
INQ: [ZAM, IEQ],
PXK: [ZAM, IEQ]}","Node ZAM is connected to nodes INQ, PXK.
Node IEQ is connected to nodes OTF, LNG, INQ, PXK.
Node OTF is connected to node IEQ.
Node LNG is connected to node IEQ.
Node INQ is connected to nodes ZAM, IEQ.
Node PXK is connected to nodes ZAM, IEQ.","[ZAM, IEQ, OTF, LNG, INQ, PXK]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZAM IEQ.
Nodes set 2 contains: OTF LNG INQ PXK.","[(ZAM, INQ), (IEQ, OTF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZAM. Updated matching: {INQ: ZAM}.
Search from node IEQ. Updated matching: {INQ: ZAM, OTF: IEQ}.
So the maximum matching is ",2,4,30
bipartite,"[(CRI, CGY), (BEJ, VWH), (BEJ, CGY), (BEJ, LEV)]","{CRI: [CGY],
BEJ: [VWH, CGY, LEV],
VWH: [BEJ],
CGY: [CRI, BEJ],
LEV: [BEJ]}","Node CRI is connected to node CGY.
Node BEJ is connected to nodes VWH, CGY, LEV.
Node VWH is connected to node BEJ.
Node CGY is connected to nodes CRI, BEJ.
Node LEV is connected to node BEJ.","[CRI, BEJ, VWH, CGY, LEV]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CRI BEJ.
Nodes set 2 contains: VWH CGY LEV.","[(CRI, CGY), (BEJ, VWH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CRI. Updated matching: {CGY: CRI}.
Search from node BEJ. Updated matching: {CGY: CRI, VWH: BEJ}.
So the maximum matching is ",2,3,31
bipartite,"[(ULS, CMQ), (ULS, TGP), (KPB, BCP), (KPB, TGP), (KPB, XGS)]","{ULS: [CMQ, TGP],
KPB: [BCP, TGP, XGS],
CMQ: [ULS],
BCP: [KPB],
TGP: [ULS, KPB],
XGS: [KPB]}","Node ULS is connected to nodes CMQ, TGP.
Node KPB is connected to nodes BCP, TGP, XGS.
Node CMQ is connected to node ULS.
Node BCP is connected to node KPB.
Node TGP is connected to nodes ULS, KPB.
Node XGS is connected to node KPB.","[ULS, KPB, CMQ, BCP, TGP, XGS]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ULS KPB.
Nodes set 2 contains: CMQ BCP TGP XGS.","[(ULS, CMQ), (KPB, BCP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ULS. Updated matching: {CMQ: ULS}.
Search from node KPB. Updated matching: {CMQ: ULS, BCP: KPB}.
So the maximum matching is ",2,4,32
bipartite,"[(EWX, NGI), (EWX, GKY), (EWX, MJL), (BMW, NGI), (BMW, MJL), (BMW, IOT), (EDF, NGI), (EDF, GKY)]","{EWX: [NGI, GKY, MJL],
BMW: [NGI, MJL, IOT],
EDF: [NGI, GKY],
NGI: [EWX, BMW, EDF],
GKY: [EWX, EDF],
MJL: [EWX, BMW],
IOT: [BMW]}","Node EWX is connected to nodes NGI, GKY, MJL.
Node BMW is connected to nodes NGI, MJL, IOT.
Node EDF is connected to nodes NGI, GKY.
Node NGI is connected to nodes EWX, BMW, EDF.
Node GKY is connected to nodes EWX, EDF.
Node MJL is connected to nodes EWX, BMW.
Node IOT is connected to node BMW.","[EWX, BMW, EDF, NGI, GKY, MJL, IOT]",7,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: EWX BMW EDF.
Nodes set 2 contains: NGI GKY MJL IOT.","[(EWX, GKY), (BMW, MJL), (EDF, NGI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node EWX. Updated matching: {NGI: EWX}.
Search from node BMW. Updated matching: {NGI: BMW, GKY: EWX}.
Search from node EDF. Updated matching: {NGI: EDF, GKY: EWX, MJL: BMW}.
So the maximum matching is ",3,4,33
bipartite,"[(WZS, RTH), (WZS, XGA), (WZS, JEK), (WZS, TNT)]","{WZS: [RTH, XGA, JEK, TNT],
RTH: [WZS],
XGA: [WZS],
JEK: [WZS],
TNT: [WZS]}","Node WZS is connected to nodes RTH, XGA, JEK, TNT.
Node RTH is connected to node WZS.
Node XGA is connected to node WZS.
Node JEK is connected to node WZS.
Node TNT is connected to node WZS.","[WZS, RTH, XGA, JEK, TNT]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WZS.
Nodes set 2 contains: RTH XGA JEK TNT.","[(WZS, RTH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WZS. Updated matching: {RTH: WZS}.
So the maximum matching is ",1,4,34
bipartite,"[(AXA, PXP), (AGG, PXP), (AGG, PDL), (AGG, TAA)]","{AXA: [PXP],
AGG: [PXP, PDL, TAA],
PXP: [AXA, AGG],
PDL: [AGG],
TAA: [AGG]}","Node AXA is connected to node PXP.
Node AGG is connected to nodes PXP, PDL, TAA.
Node PXP is connected to nodes AXA, AGG.
Node PDL is connected to node AGG.
Node TAA is connected to node AGG.","[AXA, AGG, PXP, PDL, TAA]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: AXA AGG.
Nodes set 2 contains: PXP PDL TAA.","[(AXA, PXP), (AGG, PDL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node AXA. Updated matching: {PXP: AXA}.
Search from node AGG. Updated matching: {PXP: AXA, PDL: AGG}.
So the maximum matching is ",2,3,35
bipartite,"[(FRX, FUA), (FRX, ZLC), (FRX, OGQ), (CEN, KWB), (CEN, ZLC), (CEN, OGQ), (CEN, NNG)]","{FRX: [FUA, ZLC, OGQ],
CEN: [KWB, ZLC, OGQ, NNG],
KWB: [CEN],
FUA: [FRX],
ZLC: [FRX, CEN],
OGQ: [FRX, CEN],
NNG: [CEN]}","Node FRX is connected to nodes FUA, ZLC, OGQ.
Node CEN is connected to nodes KWB, ZLC, OGQ, NNG.
Node KWB is connected to node CEN.
Node FUA is connected to node FRX.
Node ZLC is connected to nodes FRX, CEN.
Node OGQ is connected to nodes FRX, CEN.
Node NNG is connected to node CEN.","[FRX, CEN, KWB, FUA, ZLC, OGQ, NNG]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FRX CEN.
Nodes set 2 contains: KWB FUA ZLC OGQ NNG.","[(FRX, FUA), (CEN, KWB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FRX. Updated matching: {FUA: FRX}.
Search from node CEN. Updated matching: {FUA: FRX, KWB: CEN}.
So the maximum matching is ",2,5,36
bipartite,"[(DGL, YOG), (DGL, KDA), (DGL, ZYM), (RUU, IJB), (RUU, YOG)]","{DGL: [YOG, KDA, ZYM],
RUU: [IJB, YOG],
IJB: [RUU],
YOG: [DGL, RUU],
KDA: [DGL],
ZYM: [DGL]}","Node DGL is connected to nodes YOG, KDA, ZYM.
Node RUU is connected to nodes IJB, YOG.
Node IJB is connected to node RUU.
Node YOG is connected to nodes DGL, RUU.
Node KDA is connected to node DGL.
Node ZYM is connected to node DGL.","[DGL, RUU, IJB, YOG, KDA, ZYM]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DGL RUU.
Nodes set 2 contains: IJB YOG KDA ZYM.","[(DGL, YOG), (RUU, IJB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DGL. Updated matching: {YOG: DGL}.
Search from node RUU. Updated matching: {YOG: DGL, IJB: RUU}.
So the maximum matching is ",2,4,37
bipartite,"[(GXZ, XKV), (GXZ, MLN), (GXZ, YAM), (IFK, MLN), (IFK, YAM), (IFK, QFN), (QSH, MLN), (QSH, YAM), (QSH, QFN)]","{GXZ: [XKV, MLN, YAM],
IFK: [MLN, YAM, QFN],
QSH: [MLN, YAM, QFN],
XKV: [GXZ],
MLN: [GXZ, IFK, QSH],
YAM: [GXZ, IFK, QSH],
QFN: [IFK, QSH]}","Node GXZ is connected to nodes XKV, MLN, YAM.
Node IFK is connected to nodes MLN, YAM, QFN.
Node QSH is connected to nodes MLN, YAM, QFN.
Node XKV is connected to node GXZ.
Node MLN is connected to nodes GXZ, IFK, QSH.
Node YAM is connected to nodes GXZ, IFK, QSH.
Node QFN is connected to nodes IFK, QSH.","[GXZ, IFK, QSH, XKV, MLN, YAM, QFN]",7,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GXZ IFK QSH.
Nodes set 2 contains: XKV MLN YAM QFN.","[(GXZ, XKV), (IFK, YAM), (QSH, MLN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GXZ. Updated matching: {XKV: GXZ}.
Search from node IFK. Updated matching: {XKV: GXZ, MLN: IFK}.
Search from node QSH. Updated matching: {XKV: GXZ, MLN: QSH, YAM: IFK}.
So the maximum matching is ",3,4,38
bipartite,"[(PRZ, TJI), (KPR, TJI), (KPR, JKZ), (RZN, WFG), (RZN, JKZ), (RZN, IPM)]","{PRZ: [TJI],
KPR: [TJI, JKZ],
RZN: [WFG, JKZ, IPM],
WFG: [RZN],
TJI: [PRZ, KPR],
JKZ: [KPR, RZN],
IPM: [RZN]}","Node PRZ is connected to node TJI.
Node KPR is connected to nodes TJI, JKZ.
Node RZN is connected to nodes WFG, JKZ, IPM.
Node WFG is connected to node RZN.
Node TJI is connected to nodes PRZ, KPR.
Node JKZ is connected to nodes KPR, RZN.
Node IPM is connected to node RZN.","[PRZ, KPR, RZN, WFG, TJI, JKZ, IPM]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PRZ KPR RZN.
Nodes set 2 contains: WFG TJI JKZ IPM.","[(PRZ, TJI), (KPR, JKZ), (RZN, WFG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PRZ. Updated matching: {TJI: PRZ}.
Search from node KPR. Updated matching: {TJI: PRZ, JKZ: KPR}.
Search from node RZN. Updated matching: {TJI: PRZ, JKZ: KPR, WFG: RZN}.
So the maximum matching is ",3,4,39
bipartite,"[(WXA, WWK), (WWO, WWK), (WWO, ATH), (WWO, FOT)]","{WXA: [WWK],
WWO: [WWK, ATH, FOT],
WWK: [WXA, WWO],
ATH: [WWO],
FOT: [WWO]}","Node WXA is connected to node WWK.
Node WWO is connected to nodes WWK, ATH, FOT.
Node WWK is connected to nodes WXA, WWO.
Node ATH is connected to node WWO.
Node FOT is connected to node WWO.","[WXA, WWO, WWK, ATH, FOT]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WXA WWO.
Nodes set 2 contains: WWK ATH FOT.","[(WXA, WWK), (WWO, ATH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WXA. Updated matching: {WWK: WXA}.
Search from node WWO. Updated matching: {WWK: WXA, ATH: WWO}.
So the maximum matching is ",2,3,40
bipartite,"[(OND, GMX), (OND, BLE), (BVM, GMX), (BVM, BLE), (VMJ, IJF), (VMJ, GMX), (VMJ, BLE), (VMJ, KZI)]","{OND: [GMX, BLE],
BVM: [GMX, BLE],
VMJ: [IJF, GMX, BLE, KZI],
IJF: [VMJ],
GMX: [OND, BVM, VMJ],
BLE: [OND, BVM, VMJ],
KZI: [VMJ]}","Node OND is connected to nodes GMX, BLE.
Node BVM is connected to nodes GMX, BLE.
Node VMJ is connected to nodes IJF, GMX, BLE, KZI.
Node IJF is connected to node VMJ.
Node GMX is connected to nodes OND, BVM, VMJ.
Node BLE is connected to nodes OND, BVM, VMJ.
Node KZI is connected to node VMJ.","[OND, BVM, VMJ, IJF, GMX, BLE, KZI]",7,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OND BVM VMJ.
Nodes set 2 contains: IJF GMX BLE KZI.","[(OND, BLE), (BVM, GMX), (VMJ, IJF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OND. Updated matching: {GMX: OND}.
Search from node BVM. Updated matching: {GMX: BVM, BLE: OND}.
Search from node VMJ. Updated matching: {GMX: BVM, BLE: OND, IJF: VMJ}.
So the maximum matching is ",3,4,41
bipartite,"[(BWX, SIE), (BWX, MIO), (RFN, XXJ), (RFN, MIO)]","{BWX: [SIE, MIO],
RFN: [XXJ, MIO],
SIE: [BWX],
XXJ: [RFN],
MIO: [BWX, RFN]}","Node BWX is connected to nodes SIE, MIO.
Node RFN is connected to nodes XXJ, MIO.
Node SIE is connected to node BWX.
Node XXJ is connected to node RFN.
Node MIO is connected to nodes BWX, RFN.","[BWX, RFN, SIE, XXJ, MIO]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BWX RFN.
Nodes set 2 contains: SIE XXJ MIO.","[(BWX, SIE), (RFN, XXJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BWX. Updated matching: {SIE: BWX}.
Search from node RFN. Updated matching: {SIE: BWX, XXJ: RFN}.
So the maximum matching is ",2,3,42
bipartite,"[(RXU, OAZ), (RXU, PUJ), (RXU, RDJ), (HQA, AEJ), (HQA, OAZ), (BCI, PUJ)]","{RXU: [OAZ, PUJ, RDJ],
HQA: [AEJ, OAZ],
BCI: [PUJ],
AEJ: [HQA],
OAZ: [RXU, HQA],
PUJ: [RXU, BCI],
RDJ: [RXU]}","Node RXU is connected to nodes OAZ, PUJ, RDJ.
Node HQA is connected to nodes AEJ, OAZ.
Node BCI is connected to node PUJ.
Node AEJ is connected to node HQA.
Node OAZ is connected to nodes RXU, HQA.
Node PUJ is connected to nodes RXU, BCI.
Node RDJ is connected to node RXU.","[RXU, HQA, BCI, AEJ, OAZ, PUJ, RDJ]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RXU HQA BCI.
Nodes set 2 contains: AEJ OAZ PUJ RDJ.","[(RXU, OAZ), (HQA, AEJ), (BCI, PUJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RXU. Updated matching: {OAZ: RXU}.
Search from node HQA. Updated matching: {OAZ: RXU, AEJ: HQA}.
Search from node BCI. Updated matching: {OAZ: RXU, AEJ: HQA, PUJ: BCI}.
So the maximum matching is ",3,4,43
bipartite,"[(CYZ, TRE), (CYZ, PGS), (CYZ, SKU), (ZHZ, TRE), (NJO, YQX), (NJO, PGS)]","{CYZ: [TRE, PGS, SKU],
ZHZ: [TRE],
NJO: [YQX, PGS],
YQX: [NJO],
TRE: [CYZ, ZHZ],
PGS: [CYZ, NJO],
SKU: [CYZ]}","Node CYZ is connected to nodes TRE, PGS, SKU.
Node ZHZ is connected to node TRE.
Node NJO is connected to nodes YQX, PGS.
Node YQX is connected to node NJO.
Node TRE is connected to nodes CYZ, ZHZ.
Node PGS is connected to nodes CYZ, NJO.
Node SKU is connected to node CYZ.","[CYZ, ZHZ, NJO, YQX, TRE, PGS, SKU]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CYZ ZHZ NJO.
Nodes set 2 contains: YQX TRE PGS SKU.","[(CYZ, PGS), (ZHZ, TRE), (NJO, YQX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CYZ. Updated matching: {TRE: CYZ}.
Search from node ZHZ. Updated matching: {TRE: ZHZ, PGS: CYZ}.
Search from node NJO. Updated matching: {TRE: ZHZ, PGS: CYZ, YQX: NJO}.
So the maximum matching is ",3,4,44
bipartite,"[(FAA, SFX), (QKQ, NZM), (QKQ, IKM), (QKQ, ZFV), (QKQ, SFX)]","{FAA: [SFX],
QKQ: [NZM, IKM, ZFV, SFX],
NZM: [QKQ],
IKM: [QKQ],
ZFV: [QKQ],
SFX: [FAA, QKQ]}","Node FAA is connected to node SFX.
Node QKQ is connected to nodes NZM, IKM, ZFV, SFX.
Node NZM is connected to node QKQ.
Node IKM is connected to node QKQ.
Node ZFV is connected to node QKQ.
Node SFX is connected to nodes FAA, QKQ.","[FAA, QKQ, NZM, IKM, ZFV, SFX]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FAA QKQ.
Nodes set 2 contains: NZM IKM ZFV SFX.","[(FAA, SFX), (QKQ, NZM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FAA. Updated matching: {SFX: FAA}.
Search from node QKQ. Updated matching: {SFX: FAA, NZM: QKQ}.
So the maximum matching is ",2,4,45
bipartite,"[(URP, ZSB), (URP, QXK), (IOC, EIK), (IOC, ZSB)]","{URP: [ZSB, QXK],
IOC: [EIK, ZSB],
EIK: [IOC],
ZSB: [URP, IOC],
QXK: [URP]}","Node URP is connected to nodes ZSB, QXK.
Node IOC is connected to nodes EIK, ZSB.
Node EIK is connected to node IOC.
Node ZSB is connected to nodes URP, IOC.
Node QXK is connected to node URP.","[URP, IOC, EIK, ZSB, QXK]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: URP IOC.
Nodes set 2 contains: EIK ZSB QXK.","[(URP, ZSB), (IOC, EIK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node URP. Updated matching: {ZSB: URP}.
Search from node IOC. Updated matching: {ZSB: URP, EIK: IOC}.
So the maximum matching is ",2,3,46
bipartite,"[(FFC, ERL), (FFC, IYX), (FFC, USI), (ZUP, ERL), (ZUP, SKT)]","{FFC: [ERL, IYX, USI],
ZUP: [ERL, SKT],
ERL: [FFC, ZUP],
SKT: [ZUP],
IYX: [FFC],
USI: [FFC]}","Node FFC is connected to nodes ERL, IYX, USI.
Node ZUP is connected to nodes ERL, SKT.
Node ERL is connected to nodes FFC, ZUP.
Node SKT is connected to node ZUP.
Node IYX is connected to node FFC.
Node USI is connected to node FFC.","[FFC, ZUP, ERL, SKT, IYX, USI]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FFC ZUP.
Nodes set 2 contains: ERL SKT IYX USI.","[(FFC, IYX), (ZUP, ERL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FFC. Updated matching: {ERL: FFC}.
Search from node ZUP. Updated matching: {ERL: ZUP, IYX: FFC}.
So the maximum matching is ",2,4,47
bipartite,"[(YFL, IPN), (YFL, AAO), (YFL, UWS), (YFL, PEN), (DFV, IPN), (DFV, AAO), (DFV, UWS), (DFV, PEN)]","{YFL: [IPN, AAO, UWS, PEN],
DFV: [IPN, AAO, UWS, PEN],
IPN: [YFL, DFV],
AAO: [YFL, DFV],
UWS: [YFL, DFV],
PEN: [YFL, DFV]}","Node YFL is connected to nodes IPN, AAO, UWS, PEN.
Node DFV is connected to nodes IPN, AAO, UWS, PEN.
Node IPN is connected to nodes YFL, DFV.
Node AAO is connected to nodes YFL, DFV.
Node UWS is connected to nodes YFL, DFV.
Node PEN is connected to nodes YFL, DFV.","[YFL, DFV, IPN, AAO, UWS, PEN]",6,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YFL DFV.
Nodes set 2 contains: IPN AAO UWS PEN.","[(YFL, AAO), (DFV, IPN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YFL. Updated matching: {IPN: YFL}.
Search from node DFV. Updated matching: {IPN: DFV, AAO: YFL}.
So the maximum matching is ",2,4,48
bipartite,"[(UBZ, OVA), (EPV, OVA), (EPV, GFC), (ZYT, OTM), (ZYT, MJH), (ZYT, GFC)]","{UBZ: [OVA],
EPV: [OVA, GFC],
ZYT: [OTM, MJH, GFC],
OTM: [ZYT],
MJH: [ZYT],
OVA: [UBZ, EPV],
GFC: [EPV, ZYT]}","Node UBZ is connected to node OVA.
Node EPV is connected to nodes OVA, GFC.
Node ZYT is connected to nodes OTM, MJH, GFC.
Node OTM is connected to node ZYT.
Node MJH is connected to node ZYT.
Node OVA is connected to nodes UBZ, EPV.
Node GFC is connected to nodes EPV, ZYT.","[UBZ, EPV, ZYT, OTM, MJH, OVA, GFC]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UBZ EPV ZYT.
Nodes set 2 contains: OTM MJH OVA GFC.","[(UBZ, OVA), (EPV, GFC), (ZYT, OTM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UBZ. Updated matching: {OVA: UBZ}.
Search from node EPV. Updated matching: {OVA: UBZ, GFC: EPV}.
Search from node ZYT. Updated matching: {OVA: UBZ, GFC: EPV, OTM: ZYT}.
So the maximum matching is ",3,4,49
bipartite,"[(DLY, FFY), (UYU, FFY), (UYU, HTQ), (UYU, IAC)]","{DLY: [FFY],
UYU: [FFY, HTQ, IAC],
FFY: [DLY, UYU],
HTQ: [UYU],
IAC: [UYU]}","Node DLY is connected to node FFY.
Node UYU is connected to nodes FFY, HTQ, IAC.
Node FFY is connected to nodes DLY, UYU.
Node HTQ is connected to node UYU.
Node IAC is connected to node UYU.","[DLY, UYU, FFY, HTQ, IAC]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DLY UYU.
Nodes set 2 contains: FFY HTQ IAC.","[(DLY, FFY), (UYU, HTQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DLY. Updated matching: {FFY: DLY}.
Search from node UYU. Updated matching: {FFY: DLY, HTQ: UYU}.
So the maximum matching is ",2,3,50
bipartite,"[(KIH, GHC), (KIH, OAN), (LIA, RFH), (LIA, OAN), (LIA, IYY)]","{KIH: [GHC, OAN],
LIA: [RFH, OAN, IYY],
RFH: [LIA],
GHC: [KIH],
OAN: [KIH, LIA],
IYY: [LIA]}","Node KIH is connected to nodes GHC, OAN.
Node LIA is connected to nodes RFH, OAN, IYY.
Node RFH is connected to node LIA.
Node GHC is connected to node KIH.
Node OAN is connected to nodes KIH, LIA.
Node IYY is connected to node LIA.","[KIH, LIA, RFH, GHC, OAN, IYY]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: KIH LIA.
Nodes set 2 contains: RFH GHC OAN IYY.","[(KIH, GHC), (LIA, RFH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node KIH. Updated matching: {GHC: KIH}.
Search from node LIA. Updated matching: {GHC: KIH, RFH: LIA}.
So the maximum matching is ",2,4,51
bipartite,"[(ZBR, QBE), (ZBR, UIJ), (ZBR, PWD), (LBC, HMF), (LBC, PWD)]","{ZBR: [QBE, UIJ, PWD],
LBC: [HMF, PWD],
QBE: [ZBR],
HMF: [LBC],
UIJ: [ZBR],
PWD: [ZBR, LBC]}","Node ZBR is connected to nodes QBE, UIJ, PWD.
Node LBC is connected to nodes HMF, PWD.
Node QBE is connected to node ZBR.
Node HMF is connected to node LBC.
Node UIJ is connected to node ZBR.
Node PWD is connected to nodes ZBR, LBC.","[ZBR, LBC, QBE, HMF, UIJ, PWD]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZBR LBC.
Nodes set 2 contains: QBE HMF UIJ PWD.","[(ZBR, QBE), (LBC, HMF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZBR. Updated matching: {QBE: ZBR}.
Search from node LBC. Updated matching: {QBE: ZBR, HMF: LBC}.
So the maximum matching is ",2,4,52
bipartite,"[(QCP, DZQ), (QCP, JQL), (QCP, OYC), (QCP, DJW), (QMC, DZQ), (QMC, JQL), (QMC, OYC)]","{QCP: [DZQ, JQL, OYC, DJW],
QMC: [DZQ, JQL, OYC],
DZQ: [QCP, QMC],
JQL: [QCP, QMC],
OYC: [QCP, QMC],
DJW: [QCP]}","Node QCP is connected to nodes DZQ, JQL, OYC, DJW.
Node QMC is connected to nodes DZQ, JQL, OYC.
Node DZQ is connected to nodes QCP, QMC.
Node JQL is connected to nodes QCP, QMC.
Node OYC is connected to nodes QCP, QMC.
Node DJW is connected to node QCP.","[QCP, QMC, DZQ, JQL, OYC, DJW]",6,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QCP QMC.
Nodes set 2 contains: DZQ JQL OYC DJW.","[(QCP, JQL), (QMC, DZQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QCP. Updated matching: {DZQ: QCP}.
Search from node QMC. Updated matching: {DZQ: QMC, JQL: QCP}.
So the maximum matching is ",2,4,53
bipartite,"[(TVC, MHJ), (TVC, BSB), (TVC, EFH), (TVC, FJF), (UXG, IWA), (UXG, BSB)]","{TVC: [MHJ, BSB, EFH, FJF],
UXG: [IWA, BSB],
MHJ: [TVC],
IWA: [UXG],
BSB: [TVC, UXG],
EFH: [TVC],
FJF: [TVC]}","Node TVC is connected to nodes MHJ, BSB, EFH, FJF.
Node UXG is connected to nodes IWA, BSB.
Node MHJ is connected to node TVC.
Node IWA is connected to node UXG.
Node BSB is connected to nodes TVC, UXG.
Node EFH is connected to node TVC.
Node FJF is connected to node TVC.","[TVC, UXG, MHJ, IWA, BSB, EFH, FJF]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TVC UXG.
Nodes set 2 contains: MHJ IWA BSB EFH FJF.","[(TVC, MHJ), (UXG, IWA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TVC. Updated matching: {MHJ: TVC}.
Search from node UXG. Updated matching: {MHJ: TVC, IWA: UXG}.
So the maximum matching is ",2,5,54
bipartite,"[(ATK, QNE), (ATK, OBF), (ATK, NEJ), (DGL, QNE), (DGL, FZC), (DGL, NEJ)]","{ATK: [QNE, OBF, NEJ],
DGL: [QNE, FZC, NEJ],
QNE: [ATK, DGL],
FZC: [DGL],
OBF: [ATK],
NEJ: [ATK, DGL]}","Node ATK is connected to nodes QNE, OBF, NEJ.
Node DGL is connected to nodes QNE, FZC, NEJ.
Node QNE is connected to nodes ATK, DGL.
Node FZC is connected to node DGL.
Node OBF is connected to node ATK.
Node NEJ is connected to nodes ATK, DGL.","[ATK, DGL, QNE, FZC, OBF, NEJ]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ATK DGL.
Nodes set 2 contains: QNE FZC OBF NEJ.","[(ATK, OBF), (DGL, QNE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ATK. Updated matching: {QNE: ATK}.
Search from node DGL. Updated matching: {QNE: DGL, OBF: ATK}.
So the maximum matching is ",2,4,55
bipartite,"[(TQP, JDI), (TQP, NJP), (NGF, JDI), (NGF, YPM)]","{TQP: [JDI, NJP],
NGF: [JDI, YPM],
JDI: [TQP, NGF],
YPM: [NGF],
NJP: [TQP]}","Node TQP is connected to nodes JDI, NJP.
Node NGF is connected to nodes JDI, YPM.
Node JDI is connected to nodes TQP, NGF.
Node YPM is connected to node NGF.
Node NJP is connected to node TQP.","[TQP, NGF, JDI, YPM, NJP]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TQP NGF.
Nodes set 2 contains: JDI YPM NJP.","[(TQP, NJP), (NGF, JDI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TQP. Updated matching: {JDI: TQP}.
Search from node NGF. Updated matching: {JDI: NGF, NJP: TQP}.
So the maximum matching is ",2,3,56
bipartite,"[(CYQ, YXA), (CYQ, IFR), (FVW, HOA), (FVW, IFR)]","{CYQ: [YXA, IFR],
FVW: [HOA, IFR],
YXA: [CYQ],
HOA: [FVW],
IFR: [CYQ, FVW]}","Node CYQ is connected to nodes YXA, IFR.
Node FVW is connected to nodes HOA, IFR.
Node YXA is connected to node CYQ.
Node HOA is connected to node FVW.
Node IFR is connected to nodes CYQ, FVW.","[CYQ, FVW, YXA, HOA, IFR]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CYQ FVW.
Nodes set 2 contains: YXA HOA IFR.","[(CYQ, YXA), (FVW, HOA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CYQ. Updated matching: {YXA: CYQ}.
Search from node FVW. Updated matching: {YXA: CYQ, HOA: FVW}.
So the maximum matching is ",2,3,57
bipartite,"[(TTX, FQU), (TTX, GTA), (TTX, MCV), (ZZZ, FQU), (ZZZ, GTA)]","{TTX: [FQU, GTA, MCV],
ZZZ: [FQU, GTA],
FQU: [TTX, ZZZ],
GTA: [TTX, ZZZ],
MCV: [TTX]}","Node TTX is connected to nodes FQU, GTA, MCV.
Node ZZZ is connected to nodes FQU, GTA.
Node FQU is connected to nodes TTX, ZZZ.
Node GTA is connected to nodes TTX, ZZZ.
Node MCV is connected to node TTX.","[TTX, ZZZ, FQU, GTA, MCV]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TTX ZZZ.
Nodes set 2 contains: FQU GTA MCV.","[(TTX, GTA), (ZZZ, FQU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TTX. Updated matching: {FQU: TTX}.
Search from node ZZZ. Updated matching: {FQU: ZZZ, GTA: TTX}.
So the maximum matching is ",2,3,58
bipartite,"[(VXL, ORR), (VXL, VUU), (VXL, BTO), (OYY, BTO), (OYY, ZGX)]","{VXL: [ORR, VUU, BTO],
OYY: [BTO, ZGX],
ORR: [VXL],
VUU: [VXL],
BTO: [VXL, OYY],
ZGX: [OYY]}","Node VXL is connected to nodes ORR, VUU, BTO.
Node OYY is connected to nodes BTO, ZGX.
Node ORR is connected to node VXL.
Node VUU is connected to node VXL.
Node BTO is connected to nodes VXL, OYY.
Node ZGX is connected to node OYY.","[VXL, OYY, ORR, VUU, BTO, ZGX]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VXL OYY.
Nodes set 2 contains: ORR VUU BTO ZGX.","[(VXL, ORR), (OYY, BTO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VXL. Updated matching: {ORR: VXL}.
Search from node OYY. Updated matching: {ORR: VXL, BTO: OYY}.
So the maximum matching is ",2,4,59
bipartite,"[(ZTW, JFR), (ZTW, GKQ), (ZTW, UTL), (EWV, GKQ)]","{ZTW: [JFR, GKQ, UTL],
EWV: [GKQ],
JFR: [ZTW],
GKQ: [ZTW, EWV],
UTL: [ZTW]}","Node ZTW is connected to nodes JFR, GKQ, UTL.
Node EWV is connected to node GKQ.
Node JFR is connected to node ZTW.
Node GKQ is connected to nodes ZTW, EWV.
Node UTL is connected to node ZTW.","[ZTW, EWV, JFR, GKQ, UTL]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZTW EWV.
Nodes set 2 contains: JFR GKQ UTL.","[(ZTW, JFR), (EWV, GKQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZTW. Updated matching: {JFR: ZTW}.
Search from node EWV. Updated matching: {JFR: ZTW, GKQ: EWV}.
So the maximum matching is ",2,3,60
bipartite,"[(BEC, CLL), (BEC, XIQ), (GGO, TZC), (GGO, XIQ)]","{BEC: [CLL, XIQ],
GGO: [TZC, XIQ],
CLL: [BEC],
TZC: [GGO],
XIQ: [BEC, GGO]}","Node BEC is connected to nodes CLL, XIQ.
Node GGO is connected to nodes TZC, XIQ.
Node CLL is connected to node BEC.
Node TZC is connected to node GGO.
Node XIQ is connected to nodes BEC, GGO.","[BEC, GGO, CLL, TZC, XIQ]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BEC GGO.
Nodes set 2 contains: CLL TZC XIQ.","[(BEC, CLL), (GGO, TZC)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BEC. Updated matching: {CLL: BEC}.
Search from node GGO. Updated matching: {CLL: BEC, TZC: GGO}.
So the maximum matching is ",2,3,61
bipartite,"[(UGJ, VQL), (UGJ, DID), (UGJ, RLL), (DTI, VQL), (DTI, DID)]","{UGJ: [VQL, DID, RLL],
DTI: [VQL, DID],
VQL: [UGJ, DTI],
DID: [UGJ, DTI],
RLL: [UGJ]}","Node UGJ is connected to nodes VQL, DID, RLL.
Node DTI is connected to nodes VQL, DID.
Node VQL is connected to nodes UGJ, DTI.
Node DID is connected to nodes UGJ, DTI.
Node RLL is connected to node UGJ.","[UGJ, DTI, VQL, DID, RLL]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UGJ DTI.
Nodes set 2 contains: VQL DID RLL.","[(UGJ, DID), (DTI, VQL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UGJ. Updated matching: {VQL: UGJ}.
Search from node DTI. Updated matching: {VQL: DTI, DID: UGJ}.
So the maximum matching is ",2,3,62
bipartite,"[(EZW, UOK), (ZZS, EDZ), (ZZS, UOK), (ZZS, ACW)]","{EZW: [UOK],
ZZS: [EDZ, UOK, ACW],
EDZ: [ZZS],
UOK: [EZW, ZZS],
ACW: [ZZS]}","Node EZW is connected to node UOK.
Node ZZS is connected to nodes EDZ, UOK, ACW.
Node EDZ is connected to node ZZS.
Node UOK is connected to nodes EZW, ZZS.
Node ACW is connected to node ZZS.","[EZW, ZZS, EDZ, UOK, ACW]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: EZW ZZS.
Nodes set 2 contains: EDZ UOK ACW.","[(EZW, UOK), (ZZS, EDZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node EZW. Updated matching: {UOK: EZW}.
Search from node ZZS. Updated matching: {UOK: EZW, EDZ: ZZS}.
So the maximum matching is ",2,3,63
bipartite,"[(MKB, SQL), (MKB, YGF), (MKB, KYB), (WNW, SQL), (WNW, YGF)]","{MKB: [SQL, YGF, KYB],
WNW: [SQL, YGF],
SQL: [MKB, WNW],
YGF: [MKB, WNW],
KYB: [MKB]}","Node MKB is connected to nodes SQL, YGF, KYB.
Node WNW is connected to nodes SQL, YGF.
Node SQL is connected to nodes MKB, WNW.
Node YGF is connected to nodes MKB, WNW.
Node KYB is connected to node MKB.","[MKB, WNW, SQL, YGF, KYB]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MKB WNW.
Nodes set 2 contains: SQL YGF KYB.","[(MKB, YGF), (WNW, SQL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MKB. Updated matching: {SQL: MKB}.
Search from node WNW. Updated matching: {SQL: WNW, YGF: MKB}.
So the maximum matching is ",2,3,64
bipartite,"[(RFL, JZE), (RFL, HIW), (JCE, BXV), (JCE, HIW), (YSR, JZE), (YSR, ALE), (YSR, BXV)]","{RFL: [JZE, HIW],
JCE: [BXV, HIW],
YSR: [JZE, ALE, BXV],
JZE: [RFL, YSR],
ALE: [YSR],
BXV: [JCE, YSR],
HIW: [RFL, JCE]}","Node RFL is connected to nodes JZE, HIW.
Node JCE is connected to nodes BXV, HIW.
Node YSR is connected to nodes JZE, ALE, BXV.
Node JZE is connected to nodes RFL, YSR.
Node ALE is connected to node YSR.
Node BXV is connected to nodes JCE, YSR.
Node HIW is connected to nodes RFL, JCE.","[RFL, JCE, YSR, JZE, ALE, BXV, HIW]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RFL JCE YSR.
Nodes set 2 contains: JZE ALE BXV HIW.","[(RFL, HIW), (JCE, BXV), (YSR, JZE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RFL. Updated matching: {JZE: RFL}.
Search from node JCE. Updated matching: {JZE: RFL, BXV: JCE}.
Search from node YSR. Updated matching: {JZE: YSR, BXV: JCE, HIW: RFL}.
So the maximum matching is ",3,4,65
bipartite,"[(EQV, ALV), (EQV, UGW), (EQV, JZN), (QKA, ALV), (QKA, JZN), (PCU, EXI), (PCU, JZN)]","{EQV: [ALV, UGW, JZN],
QKA: [ALV, JZN],
PCU: [EXI, JZN],
ALV: [EQV, QKA],
EXI: [PCU],
UGW: [EQV],
JZN: [EQV, QKA, PCU]}","Node EQV is connected to nodes ALV, UGW, JZN.
Node QKA is connected to nodes ALV, JZN.
Node PCU is connected to nodes EXI, JZN.
Node ALV is connected to nodes EQV, QKA.
Node EXI is connected to node PCU.
Node UGW is connected to node EQV.
Node JZN is connected to nodes EQV, QKA, PCU.","[EQV, QKA, PCU, ALV, EXI, UGW, JZN]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: EQV QKA PCU.
Nodes set 2 contains: ALV EXI UGW JZN.","[(EQV, UGW), (QKA, ALV), (PCU, EXI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node EQV. Updated matching: {ALV: EQV}.
Search from node QKA. Updated matching: {ALV: QKA, UGW: EQV}.
Search from node PCU. Updated matching: {ALV: QKA, UGW: EQV, EXI: PCU}.
So the maximum matching is ",3,4,66
bipartite,"[(DIR, DDB), (DIR, YDY), (DIR, YCS), (ZII, DDB), (ZII, MLJ), (ZII, YCS)]","{DIR: [DDB, YDY, YCS],
ZII: [DDB, MLJ, YCS],
DDB: [DIR, ZII],
YDY: [DIR],
MLJ: [ZII],
YCS: [DIR, ZII]}","Node DIR is connected to nodes DDB, YDY, YCS.
Node ZII is connected to nodes DDB, MLJ, YCS.
Node DDB is connected to nodes DIR, ZII.
Node YDY is connected to node DIR.
Node MLJ is connected to node ZII.
Node YCS is connected to nodes DIR, ZII.","[DIR, ZII, DDB, YDY, MLJ, YCS]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DIR ZII.
Nodes set 2 contains: DDB YDY MLJ YCS.","[(DIR, YDY), (ZII, DDB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DIR. Updated matching: {DDB: DIR}.
Search from node ZII. Updated matching: {DDB: ZII, YDY: DIR}.
So the maximum matching is ",2,4,67
bipartite,"[(JBB, YAA), (JBB, MGM), (JBB, CTJ), (JBB, BNB), (UKQ, OOB), (UKQ, CTJ)]","{JBB: [YAA, MGM, CTJ, BNB],
UKQ: [OOB, CTJ],
YAA: [JBB],
OOB: [UKQ],
MGM: [JBB],
CTJ: [JBB, UKQ],
BNB: [JBB]}","Node JBB is connected to nodes YAA, MGM, CTJ, BNB.
Node UKQ is connected to nodes OOB, CTJ.
Node YAA is connected to node JBB.
Node OOB is connected to node UKQ.
Node MGM is connected to node JBB.
Node CTJ is connected to nodes JBB, UKQ.
Node BNB is connected to node JBB.","[JBB, UKQ, YAA, OOB, MGM, CTJ, BNB]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JBB UKQ.
Nodes set 2 contains: YAA OOB MGM CTJ BNB.","[(JBB, YAA), (UKQ, OOB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JBB. Updated matching: {YAA: JBB}.
Search from node UKQ. Updated matching: {YAA: JBB, OOB: UKQ}.
So the maximum matching is ",2,5,68
bipartite,"[(MHM, UWJ), (MHM, LWJ), (ASJ, UWJ), (ASJ, PZB)]","{MHM: [UWJ, LWJ],
ASJ: [UWJ, PZB],
UWJ: [MHM, ASJ],
PZB: [ASJ],
LWJ: [MHM]}","Node MHM is connected to nodes UWJ, LWJ.
Node ASJ is connected to nodes UWJ, PZB.
Node UWJ is connected to nodes MHM, ASJ.
Node PZB is connected to node ASJ.
Node LWJ is connected to node MHM.","[MHM, ASJ, UWJ, PZB, LWJ]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MHM ASJ.
Nodes set 2 contains: UWJ PZB LWJ.","[(MHM, LWJ), (ASJ, UWJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MHM. Updated matching: {UWJ: MHM}.
Search from node ASJ. Updated matching: {UWJ: ASJ, LWJ: MHM}.
So the maximum matching is ",2,3,69
bipartite,"[(IDU, XJH), (IDU, VMQ), (VGM, XJH), (VGM, XVW), (VGM, COX)]","{IDU: [XJH, VMQ],
VGM: [XJH, XVW, COX],
XJH: [IDU, VGM],
XVW: [VGM],
VMQ: [IDU],
COX: [VGM]}","Node IDU is connected to nodes XJH, VMQ.
Node VGM is connected to nodes XJH, XVW, COX.
Node XJH is connected to nodes IDU, VGM.
Node XVW is connected to node VGM.
Node VMQ is connected to node IDU.
Node COX is connected to node VGM.","[IDU, VGM, XJH, XVW, VMQ, COX]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IDU VGM.
Nodes set 2 contains: XJH XVW VMQ COX.","[(IDU, VMQ), (VGM, XJH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IDU. Updated matching: {XJH: IDU}.
Search from node VGM. Updated matching: {XJH: VGM, VMQ: IDU}.
So the maximum matching is ",2,4,70
bipartite,"[(ZNG, VJU), (ZNG, SLZ), (ZNG, ZLC), (ZNG, GLH)]","{ZNG: [VJU, SLZ, ZLC, GLH],
VJU: [ZNG],
SLZ: [ZNG],
ZLC: [ZNG],
GLH: [ZNG]}","Node ZNG is connected to nodes VJU, SLZ, ZLC, GLH.
Node VJU is connected to node ZNG.
Node SLZ is connected to node ZNG.
Node ZLC is connected to node ZNG.
Node GLH is connected to node ZNG.","[ZNG, VJU, SLZ, ZLC, GLH]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZNG.
Nodes set 2 contains: VJU SLZ ZLC GLH.","[(ZNG, VJU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZNG. Updated matching: {VJU: ZNG}.
So the maximum matching is ",1,4,71
bipartite,"[(NFE, BRM), (NFE, QQB), (NFE, XEL), (NFE, LTK)]","{NFE: [BRM, QQB, XEL, LTK],
BRM: [NFE],
QQB: [NFE],
XEL: [NFE],
LTK: [NFE]}","Node NFE is connected to nodes BRM, QQB, XEL, LTK.
Node BRM is connected to node NFE.
Node QQB is connected to node NFE.
Node XEL is connected to node NFE.
Node LTK is connected to node NFE.","[NFE, BRM, QQB, XEL, LTK]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NFE.
Nodes set 2 contains: BRM QQB XEL LTK.","[(NFE, BRM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NFE. Updated matching: {BRM: NFE}.
So the maximum matching is ",1,4,72
bipartite,"[(TYZ, LZQ), (TYZ, PXJ), (TYZ, AWE), (TYZ, TUH), (AEY, AWE), (AEY, TUH)]","{TYZ: [LZQ, PXJ, AWE, TUH],
AEY: [AWE, TUH],
LZQ: [TYZ],
PXJ: [TYZ],
AWE: [TYZ, AEY],
TUH: [TYZ, AEY]}","Node TYZ is connected to nodes LZQ, PXJ, AWE, TUH.
Node AEY is connected to nodes AWE, TUH.
Node LZQ is connected to node TYZ.
Node PXJ is connected to node TYZ.
Node AWE is connected to nodes TYZ, AEY.
Node TUH is connected to nodes TYZ, AEY.","[TYZ, AEY, LZQ, PXJ, AWE, TUH]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TYZ AEY.
Nodes set 2 contains: LZQ PXJ AWE TUH.","[(TYZ, LZQ), (AEY, AWE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TYZ. Updated matching: {LZQ: TYZ}.
Search from node AEY. Updated matching: {LZQ: TYZ, AWE: AEY}.
So the maximum matching is ",2,4,73
bipartite,"[(PFM, URB), (PFM, GWE), (PFM, UOL), (RAZ, ETL), (RAZ, UOL)]","{PFM: [URB, GWE, UOL],
RAZ: [ETL, UOL],
URB: [PFM],
ETL: [RAZ],
GWE: [PFM],
UOL: [PFM, RAZ]}","Node PFM is connected to nodes URB, GWE, UOL.
Node RAZ is connected to nodes ETL, UOL.
Node URB is connected to node PFM.
Node ETL is connected to node RAZ.
Node GWE is connected to node PFM.
Node UOL is connected to nodes PFM, RAZ.","[PFM, RAZ, URB, ETL, GWE, UOL]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PFM RAZ.
Nodes set 2 contains: URB ETL GWE UOL.","[(PFM, URB), (RAZ, ETL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PFM. Updated matching: {URB: PFM}.
Search from node RAZ. Updated matching: {URB: PFM, ETL: RAZ}.
So the maximum matching is ",2,4,74
bipartite,"[(COC, SCH), (COC, GNJ), (COC, FWQ), (DKI, GNJ), (DKI, VTS)]","{COC: [SCH, GNJ, FWQ],
DKI: [GNJ, VTS],
SCH: [COC],
GNJ: [COC, DKI],
FWQ: [COC],
VTS: [DKI]}","Node COC is connected to nodes SCH, GNJ, FWQ.
Node DKI is connected to nodes GNJ, VTS.
Node SCH is connected to node COC.
Node GNJ is connected to nodes COC, DKI.
Node FWQ is connected to node COC.
Node VTS is connected to node DKI.","[COC, DKI, SCH, GNJ, FWQ, VTS]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: COC DKI.
Nodes set 2 contains: SCH GNJ FWQ VTS.","[(COC, SCH), (DKI, GNJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node COC. Updated matching: {SCH: COC}.
Search from node DKI. Updated matching: {SCH: COC, GNJ: DKI}.
So the maximum matching is ",2,4,75
bipartite,"[(XKZ, OPM), (XKZ, ZAL), (XKZ, JWU), (HAJ, ZAL), (HAJ, JWU)]","{XKZ: [OPM, ZAL, JWU],
HAJ: [ZAL, JWU],
OPM: [XKZ],
ZAL: [XKZ, HAJ],
JWU: [XKZ, HAJ]}","Node XKZ is connected to nodes OPM, ZAL, JWU.
Node HAJ is connected to nodes ZAL, JWU.
Node OPM is connected to node XKZ.
Node ZAL is connected to nodes XKZ, HAJ.
Node JWU is connected to nodes XKZ, HAJ.","[XKZ, HAJ, OPM, ZAL, JWU]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XKZ HAJ.
Nodes set 2 contains: OPM ZAL JWU.","[(XKZ, OPM), (HAJ, ZAL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XKZ. Updated matching: {OPM: XKZ}.
Search from node HAJ. Updated matching: {OPM: XKZ, ZAL: HAJ}.
So the maximum matching is ",2,3,76
bipartite,"[(HZT, TJA), (HZT, UFL), (NNU, TJA), (NNU, OPW), (SVX, TJA), (SVX, OPW), (SVX, FWZ)]","{HZT: [TJA, UFL],
NNU: [TJA, OPW],
SVX: [TJA, OPW, FWZ],
TJA: [HZT, NNU, SVX],
OPW: [NNU, SVX],
FWZ: [SVX],
UFL: [HZT]}","Node HZT is connected to nodes TJA, UFL.
Node NNU is connected to nodes TJA, OPW.
Node SVX is connected to nodes TJA, OPW, FWZ.
Node TJA is connected to nodes HZT, NNU, SVX.
Node OPW is connected to nodes NNU, SVX.
Node FWZ is connected to node SVX.
Node UFL is connected to node HZT.","[HZT, NNU, SVX, TJA, OPW, FWZ, UFL]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HZT NNU SVX.
Nodes set 2 contains: TJA OPW FWZ UFL.","[(HZT, UFL), (NNU, OPW), (SVX, TJA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HZT. Updated matching: {TJA: HZT}.
Search from node NNU. Updated matching: {TJA: NNU, UFL: HZT}.
Search from node SVX. Updated matching: {TJA: SVX, UFL: HZT, OPW: NNU}.
So the maximum matching is ",3,4,77
bipartite,"[(RRL, JJB), (RRL, FCD), (RRL, UNV), (TTU, JJB), (TTU, FCD)]","{RRL: [JJB, FCD, UNV],
TTU: [JJB, FCD],
JJB: [RRL, TTU],
FCD: [RRL, TTU],
UNV: [RRL]}","Node RRL is connected to nodes JJB, FCD, UNV.
Node TTU is connected to nodes JJB, FCD.
Node JJB is connected to nodes RRL, TTU.
Node FCD is connected to nodes RRL, TTU.
Node UNV is connected to node RRL.","[RRL, TTU, JJB, FCD, UNV]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RRL TTU.
Nodes set 2 contains: JJB FCD UNV.","[(RRL, FCD), (TTU, JJB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RRL. Updated matching: {JJB: RRL}.
Search from node TTU. Updated matching: {JJB: TTU, FCD: RRL}.
So the maximum matching is ",2,3,78
bipartite,"[(MHC, HSF), (MHC, GCE), (MHC, MNH), (VFW, HSF), (VFW, MNH), (VFW, UZV)]","{MHC: [HSF, GCE, MNH],
VFW: [HSF, MNH, UZV],
HSF: [MHC, VFW],
GCE: [MHC],
MNH: [MHC, VFW],
UZV: [VFW]}","Node MHC is connected to nodes HSF, GCE, MNH.
Node VFW is connected to nodes HSF, MNH, UZV.
Node HSF is connected to nodes MHC, VFW.
Node GCE is connected to node MHC.
Node MNH is connected to nodes MHC, VFW.
Node UZV is connected to node VFW.","[MHC, VFW, HSF, GCE, MNH, UZV]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MHC VFW.
Nodes set 2 contains: HSF GCE MNH UZV.","[(MHC, GCE), (VFW, HSF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MHC. Updated matching: {HSF: MHC}.
Search from node VFW. Updated matching: {HSF: VFW, GCE: MHC}.
So the maximum matching is ",2,4,79
bipartite,"[(NWY, HSI), (NWY, ALL), (NWY, KZN), (NWY, TWM), (NWY, JHD), (XGI, JHD)]","{NWY: [HSI, ALL, KZN, TWM, JHD],
XGI: [JHD],
HSI: [NWY],
ALL: [NWY],
KZN: [NWY],
TWM: [NWY],
JHD: [NWY, XGI]}","Node NWY is connected to nodes HSI, ALL, KZN, TWM, JHD.
Node XGI is connected to node JHD.
Node HSI is connected to node NWY.
Node ALL is connected to node NWY.
Node KZN is connected to node NWY.
Node TWM is connected to node NWY.
Node JHD is connected to nodes NWY, XGI.","[NWY, XGI, HSI, ALL, KZN, TWM, JHD]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NWY XGI.
Nodes set 2 contains: HSI ALL KZN TWM JHD.","[(NWY, HSI), (XGI, JHD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NWY. Updated matching: {HSI: NWY}.
Search from node XGI. Updated matching: {HSI: NWY, JHD: XGI}.
So the maximum matching is ",2,5,80
bipartite,"[(FJA, IAN), (FJA, DGU), (RST, ZOX), (RST, IAN), (RST, XPW), (RST, DGU), (HLV, XPW), (HLV, DGU)]","{FJA: [IAN, DGU],
RST: [ZOX, IAN, XPW, DGU],
HLV: [XPW, DGU],
ZOX: [RST],
IAN: [FJA, RST],
XPW: [RST, HLV],
DGU: [FJA, RST, HLV]}","Node FJA is connected to nodes IAN, DGU.
Node RST is connected to nodes ZOX, IAN, XPW, DGU.
Node HLV is connected to nodes XPW, DGU.
Node ZOX is connected to node RST.
Node IAN is connected to nodes FJA, RST.
Node XPW is connected to nodes RST, HLV.
Node DGU is connected to nodes FJA, RST, HLV.","[FJA, RST, HLV, ZOX, IAN, XPW, DGU]",7,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FJA RST HLV.
Nodes set 2 contains: ZOX IAN XPW DGU.","[(FJA, IAN), (RST, ZOX), (HLV, XPW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FJA. Updated matching: {IAN: FJA}.
Search from node RST. Updated matching: {IAN: FJA, ZOX: RST}.
Search from node HLV. Updated matching: {IAN: FJA, ZOX: RST, XPW: HLV}.
So the maximum matching is ",3,4,81
bipartite,"[(YOT, CME), (YOT, AKD), (OXS, CME), (OXS, AKD), (OXS, HNC), (IBJ, KTV), (IBJ, AKD)]","{YOT: [CME, AKD],
OXS: [CME, AKD, HNC],
IBJ: [KTV, AKD],
CME: [YOT, OXS],
KTV: [IBJ],
AKD: [YOT, OXS, IBJ],
HNC: [OXS]}","Node YOT is connected to nodes CME, AKD.
Node OXS is connected to nodes CME, AKD, HNC.
Node IBJ is connected to nodes KTV, AKD.
Node CME is connected to nodes YOT, OXS.
Node KTV is connected to node IBJ.
Node AKD is connected to nodes YOT, OXS, IBJ.
Node HNC is connected to node OXS.","[YOT, OXS, IBJ, CME, KTV, AKD, HNC]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YOT OXS IBJ.
Nodes set 2 contains: CME KTV AKD HNC.","[(YOT, AKD), (OXS, CME), (IBJ, KTV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YOT. Updated matching: {CME: YOT}.
Search from node OXS. Updated matching: {CME: OXS, AKD: YOT}.
Search from node IBJ. Updated matching: {CME: OXS, AKD: YOT, KTV: IBJ}.
So the maximum matching is ",3,4,82
bipartite,"[(LSP, WFJ), (LSP, ASI), (LSP, JYU), (FMV, WFJ), (FMV, ASI)]","{LSP: [WFJ, ASI, JYU],
FMV: [WFJ, ASI],
WFJ: [LSP, FMV],
ASI: [LSP, FMV],
JYU: [LSP]}","Node LSP is connected to nodes WFJ, ASI, JYU.
Node FMV is connected to nodes WFJ, ASI.
Node WFJ is connected to nodes LSP, FMV.
Node ASI is connected to nodes LSP, FMV.
Node JYU is connected to node LSP.","[LSP, FMV, WFJ, ASI, JYU]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LSP FMV.
Nodes set 2 contains: WFJ ASI JYU.","[(LSP, ASI), (FMV, WFJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LSP. Updated matching: {WFJ: LSP}.
Search from node FMV. Updated matching: {WFJ: FMV, ASI: LSP}.
So the maximum matching is ",2,3,83
bipartite,"[(AKT, TVT), (GFD, ZCT), (GFD, TVT), (GFD, FXX), (JZF, ZCT), (JZF, ICR), (JZF, FXX)]","{AKT: [TVT],
GFD: [ZCT, TVT, FXX],
JZF: [ZCT, ICR, FXX],
ZCT: [GFD, JZF],
ICR: [JZF],
TVT: [AKT, GFD],
FXX: [GFD, JZF]}","Node AKT is connected to node TVT.
Node GFD is connected to nodes ZCT, TVT, FXX.
Node JZF is connected to nodes ZCT, ICR, FXX.
Node ZCT is connected to nodes GFD, JZF.
Node ICR is connected to node JZF.
Node TVT is connected to nodes AKT, GFD.
Node FXX is connected to nodes GFD, JZF.","[AKT, GFD, JZF, ZCT, ICR, TVT, FXX]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: AKT GFD JZF.
Nodes set 2 contains: ZCT ICR TVT FXX.","[(AKT, TVT), (GFD, FXX), (JZF, ZCT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node AKT. Updated matching: {TVT: AKT}.
Search from node GFD. Updated matching: {TVT: AKT, ZCT: GFD}.
Search from node JZF. Updated matching: {TVT: AKT, ZCT: JZF, FXX: GFD}.
So the maximum matching is ",3,4,84
bipartite,"[(PYF, BKQ), (AZY, ECK), (AZY, BKQ), (AZY, RUR)]","{PYF: [BKQ],
AZY: [ECK, BKQ, RUR],
ECK: [AZY],
BKQ: [PYF, AZY],
RUR: [AZY]}","Node PYF is connected to node BKQ.
Node AZY is connected to nodes ECK, BKQ, RUR.
Node ECK is connected to node AZY.
Node BKQ is connected to nodes PYF, AZY.
Node RUR is connected to node AZY.","[PYF, AZY, ECK, BKQ, RUR]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PYF AZY.
Nodes set 2 contains: ECK BKQ RUR.","[(PYF, BKQ), (AZY, ECK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PYF. Updated matching: {BKQ: PYF}.
Search from node AZY. Updated matching: {BKQ: PYF, ECK: AZY}.
So the maximum matching is ",2,3,85
bipartite,"[(DXW, MWZ), (DXW, YZM), (DXW, WCL), (XPL, NWX), (JPO, NWX), (JPO, WCL)]","{DXW: [MWZ, YZM, WCL],
XPL: [NWX],
JPO: [NWX, WCL],
MWZ: [DXW],
NWX: [XPL, JPO],
YZM: [DXW],
WCL: [DXW, JPO]}","Node DXW is connected to nodes MWZ, YZM, WCL.
Node XPL is connected to node NWX.
Node JPO is connected to nodes NWX, WCL.
Node MWZ is connected to node DXW.
Node NWX is connected to nodes XPL, JPO.
Node YZM is connected to node DXW.
Node WCL is connected to nodes DXW, JPO.","[DXW, XPL, JPO, MWZ, NWX, YZM, WCL]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DXW XPL JPO.
Nodes set 2 contains: MWZ NWX YZM WCL.","[(DXW, MWZ), (XPL, NWX), (JPO, WCL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DXW. Updated matching: {MWZ: DXW}.
Search from node XPL. Updated matching: {MWZ: DXW, NWX: XPL}.
Search from node JPO. Updated matching: {MWZ: DXW, NWX: XPL, WCL: JPO}.
So the maximum matching is ",3,4,86
bipartite,"[(DJF, UYV), (DJF, QOA), (DJF, BNS), (DJF, KNZ), (CQJ, KNZ)]","{DJF: [UYV, QOA, BNS, KNZ],
CQJ: [KNZ],
UYV: [DJF],
QOA: [DJF],
BNS: [DJF],
KNZ: [DJF, CQJ]}","Node DJF is connected to nodes UYV, QOA, BNS, KNZ.
Node CQJ is connected to node KNZ.
Node UYV is connected to node DJF.
Node QOA is connected to node DJF.
Node BNS is connected to node DJF.
Node KNZ is connected to nodes DJF, CQJ.","[DJF, CQJ, UYV, QOA, BNS, KNZ]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DJF CQJ.
Nodes set 2 contains: UYV QOA BNS KNZ.","[(DJF, UYV), (CQJ, KNZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DJF. Updated matching: {UYV: DJF}.
Search from node CQJ. Updated matching: {UYV: DJF, KNZ: CQJ}.
So the maximum matching is ",2,4,87
bipartite,"[(LTC, ETG), (LTC, PLM), (MRT, ETG), (MRT, CTP)]","{LTC: [ETG, PLM],
MRT: [ETG, CTP],
ETG: [LTC, MRT],
CTP: [MRT],
PLM: [LTC]}","Node LTC is connected to nodes ETG, PLM.
Node MRT is connected to nodes ETG, CTP.
Node ETG is connected to nodes LTC, MRT.
Node CTP is connected to node MRT.
Node PLM is connected to node LTC.","[LTC, MRT, ETG, CTP, PLM]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LTC MRT.
Nodes set 2 contains: ETG CTP PLM.","[(LTC, PLM), (MRT, ETG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LTC. Updated matching: {ETG: LTC}.
Search from node MRT. Updated matching: {ETG: MRT, PLM: LTC}.
So the maximum matching is ",2,3,88
bipartite,"[(XII, DSR), (XII, DFU), (XII, TMO), (WTA, DFU), (WTA, AQI), (WTA, AQL)]","{XII: [DSR, DFU, TMO],
WTA: [DFU, AQI, AQL],
DSR: [XII],
DFU: [XII, WTA],
AQI: [WTA],
AQL: [WTA],
TMO: [XII]}","Node XII is connected to nodes DSR, DFU, TMO.
Node WTA is connected to nodes DFU, AQI, AQL.
Node DSR is connected to node XII.
Node DFU is connected to nodes XII, WTA.
Node AQI is connected to node WTA.
Node AQL is connected to node WTA.
Node TMO is connected to node XII.","[XII, WTA, DSR, DFU, AQI, AQL, TMO]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XII WTA.
Nodes set 2 contains: DSR DFU AQI AQL TMO.","[(XII, DSR), (WTA, DFU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XII. Updated matching: {DSR: XII}.
Search from node WTA. Updated matching: {DSR: XII, DFU: WTA}.
So the maximum matching is ",2,5,89
bipartite,"[(IMW, UCU), (IMW, EGH), (IMW, SOU), (CAY, TBM), (CAY, SOU)]","{IMW: [UCU, EGH, SOU],
CAY: [TBM, SOU],
TBM: [CAY],
UCU: [IMW],
EGH: [IMW],
SOU: [IMW, CAY]}","Node IMW is connected to nodes UCU, EGH, SOU.
Node CAY is connected to nodes TBM, SOU.
Node TBM is connected to node CAY.
Node UCU is connected to node IMW.
Node EGH is connected to node IMW.
Node SOU is connected to nodes IMW, CAY.","[IMW, CAY, TBM, UCU, EGH, SOU]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IMW CAY.
Nodes set 2 contains: TBM UCU EGH SOU.","[(IMW, UCU), (CAY, TBM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IMW. Updated matching: {UCU: IMW}.
Search from node CAY. Updated matching: {UCU: IMW, TBM: CAY}.
So the maximum matching is ",2,4,90
bipartite,"[(PFB, QSJ), (GSE, NQS), (GSE, ZQF), (AWD, DSP), (AWD, QSJ), (AWD, NQS), (AWD, ZQF)]","{PFB: [QSJ],
GSE: [NQS, ZQF],
AWD: [DSP, QSJ, NQS, ZQF],
DSP: [AWD],
QSJ: [PFB, AWD],
NQS: [GSE, AWD],
ZQF: [GSE, AWD]}","Node PFB is connected to node QSJ.
Node GSE is connected to nodes NQS, ZQF.
Node AWD is connected to nodes DSP, QSJ, NQS, ZQF.
Node DSP is connected to node AWD.
Node QSJ is connected to nodes PFB, AWD.
Node NQS is connected to nodes GSE, AWD.
Node ZQF is connected to nodes GSE, AWD.","[PFB, GSE, AWD, DSP, QSJ, NQS, ZQF]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PFB GSE AWD.
Nodes set 2 contains: DSP QSJ NQS ZQF.","[(PFB, QSJ), (GSE, NQS), (AWD, DSP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PFB. Updated matching: {QSJ: PFB}.
Search from node GSE. Updated matching: {QSJ: PFB, NQS: GSE}.
Search from node AWD. Updated matching: {QSJ: PFB, NQS: GSE, DSP: AWD}.
So the maximum matching is ",3,4,91
bipartite,"[(BJF, FOR), (JIR, FOR), (JIR, XXJ), (JIR, FNI)]","{BJF: [FOR],
JIR: [FOR, XXJ, FNI],
FOR: [BJF, JIR],
XXJ: [JIR],
FNI: [JIR]}","Node BJF is connected to node FOR.
Node JIR is connected to nodes FOR, XXJ, FNI.
Node FOR is connected to nodes BJF, JIR.
Node XXJ is connected to node JIR.
Node FNI is connected to node JIR.","[BJF, JIR, FOR, XXJ, FNI]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BJF JIR.
Nodes set 2 contains: FOR XXJ FNI.","[(BJF, FOR), (JIR, XXJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BJF. Updated matching: {FOR: BJF}.
Search from node JIR. Updated matching: {FOR: BJF, XXJ: JIR}.
So the maximum matching is ",2,3,92
bipartite,"[(GJW, WNO), (GJW, ZWD), (GJW, DLB), (EPS, ZWD), (EPS, MIL), (EPS, ZCJ), (EPS, DLB)]","{GJW: [WNO, ZWD, DLB],
EPS: [ZWD, MIL, ZCJ, DLB],
WNO: [GJW],
ZWD: [GJW, EPS],
MIL: [EPS],
ZCJ: [EPS],
DLB: [GJW, EPS]}","Node GJW is connected to nodes WNO, ZWD, DLB.
Node EPS is connected to nodes ZWD, MIL, ZCJ, DLB.
Node WNO is connected to node GJW.
Node ZWD is connected to nodes GJW, EPS.
Node MIL is connected to node EPS.
Node ZCJ is connected to node EPS.
Node DLB is connected to nodes GJW, EPS.","[GJW, EPS, WNO, ZWD, MIL, ZCJ, DLB]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GJW EPS.
Nodes set 2 contains: WNO ZWD MIL ZCJ DLB.","[(GJW, WNO), (EPS, ZWD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GJW. Updated matching: {WNO: GJW}.
Search from node EPS. Updated matching: {WNO: GJW, ZWD: EPS}.
So the maximum matching is ",2,5,93
bipartite,"[(GYP, JGC), (GYP, UZM), (TIK, TNQ), (TIK, JMU), (TIK, JGC), (TIK, IRV)]","{GYP: [JGC, UZM],
TIK: [TNQ, JMU, JGC, IRV],
TNQ: [TIK],
JMU: [TIK],
JGC: [GYP, TIK],
UZM: [GYP],
IRV: [TIK]}","Node GYP is connected to nodes JGC, UZM.
Node TIK is connected to nodes TNQ, JMU, JGC, IRV.
Node TNQ is connected to node TIK.
Node JMU is connected to node TIK.
Node JGC is connected to nodes GYP, TIK.
Node UZM is connected to node GYP.
Node IRV is connected to node TIK.","[GYP, TIK, TNQ, JMU, JGC, UZM, IRV]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GYP TIK.
Nodes set 2 contains: TNQ JMU JGC UZM IRV.","[(GYP, JGC), (TIK, TNQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GYP. Updated matching: {JGC: GYP}.
Search from node TIK. Updated matching: {JGC: GYP, TNQ: TIK}.
So the maximum matching is ",2,5,94
bipartite,"[(RIN, JFF), (RIN, OPC), (RIN, NIZ), (LWU, PHH), (LWU, NIZ)]","{RIN: [JFF, OPC, NIZ],
LWU: [PHH, NIZ],
PHH: [LWU],
JFF: [RIN],
OPC: [RIN],
NIZ: [RIN, LWU]}","Node RIN is connected to nodes JFF, OPC, NIZ.
Node LWU is connected to nodes PHH, NIZ.
Node PHH is connected to node LWU.
Node JFF is connected to node RIN.
Node OPC is connected to node RIN.
Node NIZ is connected to nodes RIN, LWU.","[RIN, LWU, PHH, JFF, OPC, NIZ]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RIN LWU.
Nodes set 2 contains: PHH JFF OPC NIZ.","[(RIN, JFF), (LWU, PHH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RIN. Updated matching: {JFF: RIN}.
Search from node LWU. Updated matching: {JFF: RIN, PHH: LWU}.
So the maximum matching is ",2,4,95
bipartite,"[(QCG, SDN), (QCG, IEN), (QCG, RJM), (QCG, BEI), (QCG, GJF)]","{QCG: [SDN, IEN, RJM, BEI, GJF],
SDN: [QCG],
IEN: [QCG],
RJM: [QCG],
BEI: [QCG],
GJF: [QCG]}","Node QCG is connected to nodes SDN, IEN, RJM, BEI, GJF.
Node SDN is connected to node QCG.
Node IEN is connected to node QCG.
Node RJM is connected to node QCG.
Node BEI is connected to node QCG.
Node GJF is connected to node QCG.","[QCG, SDN, IEN, RJM, BEI, GJF]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QCG.
Nodes set 2 contains: SDN IEN RJM BEI GJF.","[(QCG, SDN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QCG. Updated matching: {SDN: QCG}.
So the maximum matching is ",1,5,96
bipartite,"[(AZY, VIO), (AZY, BLP), (AZY, BGH), (YTH, BLP), (YTH, BGH)]","{AZY: [VIO, BLP, BGH],
YTH: [BLP, BGH],
VIO: [AZY],
BLP: [AZY, YTH],
BGH: [AZY, YTH]}","Node AZY is connected to nodes VIO, BLP, BGH.
Node YTH is connected to nodes BLP, BGH.
Node VIO is connected to node AZY.
Node BLP is connected to nodes AZY, YTH.
Node BGH is connected to nodes AZY, YTH.","[AZY, YTH, VIO, BLP, BGH]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: AZY YTH.
Nodes set 2 contains: VIO BLP BGH.","[(AZY, VIO), (YTH, BLP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node AZY. Updated matching: {VIO: AZY}.
Search from node YTH. Updated matching: {VIO: AZY, BLP: YTH}.
So the maximum matching is ",2,3,97
bipartite,"[(ESQ, SSH), (ESQ, ELQ), (LHV, SSH), (LHV, ELQ), (LHV, FPM)]","{ESQ: [SSH, ELQ],
LHV: [SSH, ELQ, FPM],
SSH: [ESQ, LHV],
ELQ: [ESQ, LHV],
FPM: [LHV]}","Node ESQ is connected to nodes SSH, ELQ.
Node LHV is connected to nodes SSH, ELQ, FPM.
Node SSH is connected to nodes ESQ, LHV.
Node ELQ is connected to nodes ESQ, LHV.
Node FPM is connected to node LHV.","[ESQ, LHV, SSH, ELQ, FPM]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ESQ LHV.
Nodes set 2 contains: SSH ELQ FPM.","[(ESQ, ELQ), (LHV, SSH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ESQ. Updated matching: {SSH: ESQ}.
Search from node LHV. Updated matching: {SSH: LHV, ELQ: ESQ}.
So the maximum matching is ",2,3,98
bipartite,"[(XXD, SUA), (XXD, EWY), (XXD, QLS), (LME, EWY)]","{XXD: [SUA, EWY, QLS],
LME: [EWY],
SUA: [XXD],
EWY: [XXD, LME],
QLS: [XXD]}","Node XXD is connected to nodes SUA, EWY, QLS.
Node LME is connected to node EWY.
Node SUA is connected to node XXD.
Node EWY is connected to nodes XXD, LME.
Node QLS is connected to node XXD.","[XXD, LME, SUA, EWY, QLS]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XXD LME.
Nodes set 2 contains: SUA EWY QLS.","[(XXD, SUA), (LME, EWY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XXD. Updated matching: {SUA: XXD}.
Search from node LME. Updated matching: {SUA: XXD, EWY: LME}.
So the maximum matching is ",2,3,99
bipartite,"[(JWI, QJD), (JWI, UCO), (JWI, JKZ), (JWI, UJE), (JWI, QQH), (SQL, UCO), (SQL, JKZ), (SQL, UJE), (SQL, QQH)]","{JWI: [QJD, UCO, JKZ, UJE, QQH],
SQL: [UCO, JKZ, UJE, QQH],
QJD: [JWI],
UCO: [JWI, SQL],
JKZ: [JWI, SQL],
UJE: [JWI, SQL],
QQH: [JWI, SQL]}","Node JWI is connected to nodes QJD, UCO, JKZ, UJE, QQH.
Node SQL is connected to nodes UCO, JKZ, UJE, QQH.
Node QJD is connected to node JWI.
Node UCO is connected to nodes JWI, SQL.
Node JKZ is connected to nodes JWI, SQL.
Node UJE is connected to nodes JWI, SQL.
Node QQH is connected to nodes JWI, SQL.","[JWI, SQL, QJD, UCO, JKZ, UJE, QQH]",7,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JWI SQL.
Nodes set 2 contains: QJD UCO JKZ UJE QQH.","[(JWI, QJD), (SQL, UCO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JWI. Updated matching: {QJD: JWI}.
Search from node SQL. Updated matching: {QJD: JWI, UCO: SQL}.
So the maximum matching is ",2,5,100
bipartite,"[(CBX, VJJ), (CBX, EEB), (CBX, IHB), (CBX, BZE), (JYW, EEB), (JYW, IHB)]","{CBX: [VJJ, EEB, IHB, BZE],
JYW: [EEB, IHB],
VJJ: [CBX],
EEB: [CBX, JYW],
IHB: [CBX, JYW],
BZE: [CBX]}","Node CBX is connected to nodes VJJ, EEB, IHB, BZE.
Node JYW is connected to nodes EEB, IHB.
Node VJJ is connected to node CBX.
Node EEB is connected to nodes CBX, JYW.
Node IHB is connected to nodes CBX, JYW.
Node BZE is connected to node CBX.","[CBX, JYW, VJJ, EEB, IHB, BZE]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CBX JYW.
Nodes set 2 contains: VJJ EEB IHB BZE.","[(CBX, VJJ), (JYW, EEB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CBX. Updated matching: {VJJ: CBX}.
Search from node JYW. Updated matching: {VJJ: CBX, EEB: JYW}.
So the maximum matching is ",2,4,101
bipartite,"[(VUV, SQL), (VUV, VZK), (VUV, BIF), (VUV, ZQI)]","{VUV: [SQL, VZK, BIF, ZQI],
SQL: [VUV],
VZK: [VUV],
BIF: [VUV],
ZQI: [VUV]}","Node VUV is connected to nodes SQL, VZK, BIF, ZQI.
Node SQL is connected to node VUV.
Node VZK is connected to node VUV.
Node BIF is connected to node VUV.
Node ZQI is connected to node VUV.","[VUV, SQL, VZK, BIF, ZQI]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VUV.
Nodes set 2 contains: SQL VZK BIF ZQI.","[(VUV, SQL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VUV. Updated matching: {SQL: VUV}.
So the maximum matching is ",1,4,102
bipartite,"[(ALK, RSG), (ALK, OKC), (XBJ, OKC), (XBJ, SOK)]","{ALK: [RSG, OKC],
XBJ: [OKC, SOK],
RSG: [ALK],
OKC: [ALK, XBJ],
SOK: [XBJ]}","Node ALK is connected to nodes RSG, OKC.
Node XBJ is connected to nodes OKC, SOK.
Node RSG is connected to node ALK.
Node OKC is connected to nodes ALK, XBJ.
Node SOK is connected to node XBJ.","[ALK, XBJ, RSG, OKC, SOK]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ALK XBJ.
Nodes set 2 contains: RSG OKC SOK.","[(ALK, RSG), (XBJ, OKC)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ALK. Updated matching: {RSG: ALK}.
Search from node XBJ. Updated matching: {RSG: ALK, OKC: XBJ}.
So the maximum matching is ",2,3,103
bipartite,"[(QZS, MDB), (QZS, ZML), (QZS, NST), (QUM, NDS), (QUM, ZML), (CAJ, NDS), (CAJ, MDB)]","{QZS: [MDB, ZML, NST],
QUM: [NDS, ZML],
CAJ: [NDS, MDB],
NDS: [QUM, CAJ],
MDB: [QZS, CAJ],
ZML: [QZS, QUM],
NST: [QZS]}","Node QZS is connected to nodes MDB, ZML, NST.
Node QUM is connected to nodes NDS, ZML.
Node CAJ is connected to nodes NDS, MDB.
Node NDS is connected to nodes QUM, CAJ.
Node MDB is connected to nodes QZS, CAJ.
Node ZML is connected to nodes QZS, QUM.
Node NST is connected to node QZS.","[QZS, QUM, CAJ, NDS, MDB, ZML, NST]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QZS QUM CAJ.
Nodes set 2 contains: NDS MDB ZML NST.","[(QZS, MDB), (QUM, ZML), (CAJ, NDS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QZS. Updated matching: {MDB: QZS}.
Search from node QUM. Updated matching: {MDB: QZS, NDS: QUM}.
Search from node CAJ. Updated matching: {MDB: QZS, NDS: CAJ, ZML: QUM}.
So the maximum matching is ",3,4,104
bipartite,"[(HQE, LCH), (HQE, NDF), (HQE, NJX), (DMQ, NDF), (DMQ, MKZ), (DMQ, NJX), (VAC, LCH), (VAC, NDF)]","{HQE: [LCH, NDF, NJX],
DMQ: [NDF, MKZ, NJX],
VAC: [LCH, NDF],
LCH: [HQE, VAC],
NDF: [HQE, DMQ, VAC],
MKZ: [DMQ],
NJX: [HQE, DMQ]}","Node HQE is connected to nodes LCH, NDF, NJX.
Node DMQ is connected to nodes NDF, MKZ, NJX.
Node VAC is connected to nodes LCH, NDF.
Node LCH is connected to nodes HQE, VAC.
Node NDF is connected to nodes HQE, DMQ, VAC.
Node MKZ is connected to node DMQ.
Node NJX is connected to nodes HQE, DMQ.","[HQE, DMQ, VAC, LCH, NDF, MKZ, NJX]",7,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HQE DMQ VAC.
Nodes set 2 contains: LCH NDF MKZ NJX.","[(HQE, NDF), (DMQ, MKZ), (VAC, LCH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HQE. Updated matching: {LCH: HQE}.
Search from node DMQ. Updated matching: {LCH: HQE, NDF: DMQ}.
Search from node VAC. Updated matching: {LCH: VAC, NDF: HQE, MKZ: DMQ}.
So the maximum matching is ",3,4,105
bipartite,"[(HYL, IXK), (HYL, UYO), (HYL, KOY), (UGH, VTD), (UGH, UYO)]","{HYL: [IXK, UYO, KOY],
UGH: [VTD, UYO],
VTD: [UGH],
IXK: [HYL],
UYO: [HYL, UGH],
KOY: [HYL]}","Node HYL is connected to nodes IXK, UYO, KOY.
Node UGH is connected to nodes VTD, UYO.
Node VTD is connected to node UGH.
Node IXK is connected to node HYL.
Node UYO is connected to nodes HYL, UGH.
Node KOY is connected to node HYL.","[HYL, UGH, VTD, IXK, UYO, KOY]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HYL UGH.
Nodes set 2 contains: VTD IXK UYO KOY.","[(HYL, IXK), (UGH, VTD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HYL. Updated matching: {IXK: HYL}.
Search from node UGH. Updated matching: {IXK: HYL, VTD: UGH}.
So the maximum matching is ",2,4,106
bipartite,"[(WXS, THP), (WXS, PQH), (WXS, ZSF), (WXS, NCE), (RXI, THP), (RXI, PQH), (RXI, NCE), (IYD, NCE)]","{WXS: [THP, PQH, ZSF, NCE],
RXI: [THP, PQH, NCE],
IYD: [NCE],
THP: [WXS, RXI],
PQH: [WXS, RXI],
ZSF: [WXS],
NCE: [WXS, RXI, IYD]}","Node WXS is connected to nodes THP, PQH, ZSF, NCE.
Node RXI is connected to nodes THP, PQH, NCE.
Node IYD is connected to node NCE.
Node THP is connected to nodes WXS, RXI.
Node PQH is connected to nodes WXS, RXI.
Node ZSF is connected to node WXS.
Node NCE is connected to nodes WXS, RXI, IYD.","[WXS, RXI, IYD, THP, PQH, ZSF, NCE]",7,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WXS RXI IYD.
Nodes set 2 contains: THP PQH ZSF NCE.","[(WXS, PQH), (RXI, THP), (IYD, NCE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WXS. Updated matching: {THP: WXS}.
Search from node RXI. Updated matching: {THP: RXI, PQH: WXS}.
Search from node IYD. Updated matching: {THP: RXI, PQH: WXS, NCE: IYD}.
So the maximum matching is ",3,4,107
bipartite,"[(RST, LZY), (RST, MLX), (RST, ZIY), (RST, KKX), (YMQ, MLX), (YMQ, ZIY), (YMQ, DWD)]","{RST: [LZY, MLX, ZIY, KKX],
YMQ: [MLX, ZIY, DWD],
LZY: [RST],
MLX: [RST, YMQ],
ZIY: [RST, YMQ],
DWD: [YMQ],
KKX: [RST]}","Node RST is connected to nodes LZY, MLX, ZIY, KKX.
Node YMQ is connected to nodes MLX, ZIY, DWD.
Node LZY is connected to node RST.
Node MLX is connected to nodes RST, YMQ.
Node ZIY is connected to nodes RST, YMQ.
Node DWD is connected to node YMQ.
Node KKX is connected to node RST.","[RST, YMQ, LZY, MLX, ZIY, DWD, KKX]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RST YMQ.
Nodes set 2 contains: LZY MLX ZIY DWD KKX.","[(RST, LZY), (YMQ, MLX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RST. Updated matching: {LZY: RST}.
Search from node YMQ. Updated matching: {LZY: RST, MLX: YMQ}.
So the maximum matching is ",2,5,108
bipartite,"[(YLS, DQZ), (YLS, SJO), (YLS, PLF), (KXM, DQZ), (KXM, CIC), (KXM, SJO)]","{YLS: [DQZ, SJO, PLF],
KXM: [DQZ, CIC, SJO],
DQZ: [YLS, KXM],
CIC: [KXM],
SJO: [YLS, KXM],
PLF: [YLS]}","Node YLS is connected to nodes DQZ, SJO, PLF.
Node KXM is connected to nodes DQZ, CIC, SJO.
Node DQZ is connected to nodes YLS, KXM.
Node CIC is connected to node KXM.
Node SJO is connected to nodes YLS, KXM.
Node PLF is connected to node YLS.","[YLS, KXM, DQZ, CIC, SJO, PLF]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YLS KXM.
Nodes set 2 contains: DQZ CIC SJO PLF.","[(YLS, SJO), (KXM, DQZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YLS. Updated matching: {DQZ: YLS}.
Search from node KXM. Updated matching: {DQZ: KXM, SJO: YLS}.
So the maximum matching is ",2,4,109
bipartite,"[(BUL, DBF), (BUL, BSI), (BUL, KIV), (RUL, DBF), (RUL, WSK), (RUL, BSI)]","{BUL: [DBF, BSI, KIV],
RUL: [DBF, WSK, BSI],
DBF: [BUL, RUL],
WSK: [RUL],
BSI: [BUL, RUL],
KIV: [BUL]}","Node BUL is connected to nodes DBF, BSI, KIV.
Node RUL is connected to nodes DBF, WSK, BSI.
Node DBF is connected to nodes BUL, RUL.
Node WSK is connected to node RUL.
Node BSI is connected to nodes BUL, RUL.
Node KIV is connected to node BUL.","[BUL, RUL, DBF, WSK, BSI, KIV]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BUL RUL.
Nodes set 2 contains: DBF WSK BSI KIV.","[(BUL, BSI), (RUL, DBF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BUL. Updated matching: {DBF: BUL}.
Search from node RUL. Updated matching: {DBF: RUL, BSI: BUL}.
So the maximum matching is ",2,4,110
bipartite,"[(WDA, OAS), (WDA, NOF), (VPV, TFU), (VPV, NOF)]","{WDA: [OAS, NOF],
VPV: [TFU, NOF],
OAS: [WDA],
TFU: [VPV],
NOF: [WDA, VPV]}","Node WDA is connected to nodes OAS, NOF.
Node VPV is connected to nodes TFU, NOF.
Node OAS is connected to node WDA.
Node TFU is connected to node VPV.
Node NOF is connected to nodes WDA, VPV.","[WDA, VPV, OAS, TFU, NOF]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WDA VPV.
Nodes set 2 contains: OAS TFU NOF.","[(WDA, OAS), (VPV, TFU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WDA. Updated matching: {OAS: WDA}.
Search from node VPV. Updated matching: {OAS: WDA, TFU: VPV}.
So the maximum matching is ",2,3,111
bipartite,"[(MXU, SGG), (MXU, GRK), (MXU, BHQ), (ELM, KQJ), (ELM, GRK), (ELM, BHQ)]","{MXU: [SGG, GRK, BHQ],
ELM: [KQJ, GRK, BHQ],
KQJ: [ELM],
SGG: [MXU],
GRK: [MXU, ELM],
BHQ: [MXU, ELM]}","Node MXU is connected to nodes SGG, GRK, BHQ.
Node ELM is connected to nodes KQJ, GRK, BHQ.
Node KQJ is connected to node ELM.
Node SGG is connected to node MXU.
Node GRK is connected to nodes MXU, ELM.
Node BHQ is connected to nodes MXU, ELM.","[MXU, ELM, KQJ, SGG, GRK, BHQ]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MXU ELM.
Nodes set 2 contains: KQJ SGG GRK BHQ.","[(MXU, SGG), (ELM, KQJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MXU. Updated matching: {SGG: MXU}.
Search from node ELM. Updated matching: {SGG: MXU, KQJ: ELM}.
So the maximum matching is ",2,4,112
bipartite,"[(HAJ, RLB), (HAJ, TSE), (YYA, SXA), (YYA, TSE)]","{HAJ: [RLB, TSE],
YYA: [SXA, TSE],
RLB: [HAJ],
SXA: [YYA],
TSE: [HAJ, YYA]}","Node HAJ is connected to nodes RLB, TSE.
Node YYA is connected to nodes SXA, TSE.
Node RLB is connected to node HAJ.
Node SXA is connected to node YYA.
Node TSE is connected to nodes HAJ, YYA.","[HAJ, YYA, RLB, SXA, TSE]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HAJ YYA.
Nodes set 2 contains: RLB SXA TSE.","[(HAJ, RLB), (YYA, SXA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HAJ. Updated matching: {RLB: HAJ}.
Search from node YYA. Updated matching: {RLB: HAJ, SXA: YYA}.
So the maximum matching is ",2,3,113
bipartite,"[(EGW, UXP), (EGW, VXR), (MLH, UXP), (MLH, IBN)]","{EGW: [UXP, VXR],
MLH: [UXP, IBN],
UXP: [EGW, MLH],
VXR: [EGW],
IBN: [MLH]}","Node EGW is connected to nodes UXP, VXR.
Node MLH is connected to nodes UXP, IBN.
Node UXP is connected to nodes EGW, MLH.
Node VXR is connected to node EGW.
Node IBN is connected to node MLH.","[EGW, MLH, UXP, VXR, IBN]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: EGW MLH.
Nodes set 2 contains: UXP VXR IBN.","[(EGW, VXR), (MLH, UXP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node EGW. Updated matching: {UXP: EGW}.
Search from node MLH. Updated matching: {UXP: MLH, VXR: EGW}.
So the maximum matching is ",2,3,114
bipartite,"[(OKO, UYK), (OKO, YRH), (ZGJ, WAV), (ZGJ, UYK), (ZGJ, YRH), (ZGJ, SHC), (SOG, UYK)]","{OKO: [UYK, YRH],
ZGJ: [WAV, UYK, YRH, SHC],
SOG: [UYK],
WAV: [ZGJ],
UYK: [OKO, ZGJ, SOG],
YRH: [OKO, ZGJ],
SHC: [ZGJ]}","Node OKO is connected to nodes UYK, YRH.
Node ZGJ is connected to nodes WAV, UYK, YRH, SHC.
Node SOG is connected to node UYK.
Node WAV is connected to node ZGJ.
Node UYK is connected to nodes OKO, ZGJ, SOG.
Node YRH is connected to nodes OKO, ZGJ.
Node SHC is connected to node ZGJ.","[OKO, ZGJ, SOG, WAV, UYK, YRH, SHC]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OKO ZGJ SOG.
Nodes set 2 contains: WAV UYK YRH SHC.","[(OKO, YRH), (ZGJ, WAV), (SOG, UYK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OKO. Updated matching: {UYK: OKO}.
Search from node ZGJ. Updated matching: {UYK: OKO, WAV: ZGJ}.
Search from node SOG. Updated matching: {UYK: SOG, WAV: ZGJ, YRH: OKO}.
So the maximum matching is ",3,4,115
bipartite,"[(PNU, NWM), (PNU, WVT), (LOZ, NWM), (LOZ, FZB)]","{PNU: [NWM, WVT],
LOZ: [NWM, FZB],
NWM: [PNU, LOZ],
WVT: [PNU],
FZB: [LOZ]}","Node PNU is connected to nodes NWM, WVT.
Node LOZ is connected to nodes NWM, FZB.
Node NWM is connected to nodes PNU, LOZ.
Node WVT is connected to node PNU.
Node FZB is connected to node LOZ.","[PNU, LOZ, NWM, WVT, FZB]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PNU LOZ.
Nodes set 2 contains: NWM WVT FZB.","[(PNU, WVT), (LOZ, NWM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PNU. Updated matching: {NWM: PNU}.
Search from node LOZ. Updated matching: {NWM: LOZ, WVT: PNU}.
So the maximum matching is ",2,3,116
bipartite,"[(PGO, BMB), (PGO, TCF), (YHE, AIE), (YHE, BMB)]","{PGO: [BMB, TCF],
YHE: [AIE, BMB],
AIE: [YHE],
BMB: [PGO, YHE],
TCF: [PGO]}","Node PGO is connected to nodes BMB, TCF.
Node YHE is connected to nodes AIE, BMB.
Node AIE is connected to node YHE.
Node BMB is connected to nodes PGO, YHE.
Node TCF is connected to node PGO.","[PGO, YHE, AIE, BMB, TCF]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PGO YHE.
Nodes set 2 contains: AIE BMB TCF.","[(PGO, BMB), (YHE, AIE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PGO. Updated matching: {BMB: PGO}.
Search from node YHE. Updated matching: {BMB: PGO, AIE: YHE}.
So the maximum matching is ",2,3,117
bipartite,"[(MZP, WRQ), (MZP, DRY), (XUR, BQV), (XUR, DRY)]","{MZP: [WRQ, DRY],
XUR: [BQV, DRY],
BQV: [XUR],
WRQ: [MZP],
DRY: [MZP, XUR]}","Node MZP is connected to nodes WRQ, DRY.
Node XUR is connected to nodes BQV, DRY.
Node BQV is connected to node XUR.
Node WRQ is connected to node MZP.
Node DRY is connected to nodes MZP, XUR.","[MZP, XUR, BQV, WRQ, DRY]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MZP XUR.
Nodes set 2 contains: BQV WRQ DRY.","[(MZP, WRQ), (XUR, BQV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MZP. Updated matching: {WRQ: MZP}.
Search from node XUR. Updated matching: {WRQ: MZP, BQV: XUR}.
So the maximum matching is ",2,3,118
bipartite,"[(CFZ, QQU), (CFZ, ETY), (EYL, QQU), (EYL, ETY), (EYL, PCR)]","{CFZ: [QQU, ETY],
EYL: [QQU, ETY, PCR],
QQU: [CFZ, EYL],
ETY: [CFZ, EYL],
PCR: [EYL]}","Node CFZ is connected to nodes QQU, ETY.
Node EYL is connected to nodes QQU, ETY, PCR.
Node QQU is connected to nodes CFZ, EYL.
Node ETY is connected to nodes CFZ, EYL.
Node PCR is connected to node EYL.","[CFZ, EYL, QQU, ETY, PCR]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CFZ EYL.
Nodes set 2 contains: QQU ETY PCR.","[(CFZ, ETY), (EYL, QQU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CFZ. Updated matching: {QQU: CFZ}.
Search from node EYL. Updated matching: {QQU: EYL, ETY: CFZ}.
So the maximum matching is ",2,3,119
bipartite,"[(JYH, PGV), (JYH, DMU), (JYH, QTZ), (DYT, ARE), (DYT, DMU), (DYT, QTZ), (DYT, LYU)]","{JYH: [PGV, DMU, QTZ],
DYT: [ARE, DMU, QTZ, LYU],
ARE: [DYT],
PGV: [JYH],
DMU: [JYH, DYT],
QTZ: [JYH, DYT],
LYU: [DYT]}","Node JYH is connected to nodes PGV, DMU, QTZ.
Node DYT is connected to nodes ARE, DMU, QTZ, LYU.
Node ARE is connected to node DYT.
Node PGV is connected to node JYH.
Node DMU is connected to nodes JYH, DYT.
Node QTZ is connected to nodes JYH, DYT.
Node LYU is connected to node DYT.","[JYH, DYT, ARE, PGV, DMU, QTZ, LYU]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JYH DYT.
Nodes set 2 contains: ARE PGV DMU QTZ LYU.","[(JYH, PGV), (DYT, ARE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JYH. Updated matching: {PGV: JYH}.
Search from node DYT. Updated matching: {PGV: JYH, ARE: DYT}.
So the maximum matching is ",2,5,120
bipartite,"[(URV, SFA), (URV, KJB), (YCG, MTL), (TFV, LMO), (TFV, KJB), (TFV, MTL)]","{URV: [SFA, KJB],
YCG: [MTL],
TFV: [LMO, KJB, MTL],
SFA: [URV],
LMO: [TFV],
KJB: [URV, TFV],
MTL: [YCG, TFV]}","Node URV is connected to nodes SFA, KJB.
Node YCG is connected to node MTL.
Node TFV is connected to nodes LMO, KJB, MTL.
Node SFA is connected to node URV.
Node LMO is connected to node TFV.
Node KJB is connected to nodes URV, TFV.
Node MTL is connected to nodes YCG, TFV.","[URV, YCG, TFV, SFA, LMO, KJB, MTL]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: URV YCG TFV.
Nodes set 2 contains: SFA LMO KJB MTL.","[(URV, SFA), (YCG, MTL), (TFV, LMO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node URV. Updated matching: {SFA: URV}.
Search from node YCG. Updated matching: {SFA: URV, MTL: YCG}.
Search from node TFV. Updated matching: {SFA: URV, MTL: YCG, LMO: TFV}.
So the maximum matching is ",3,4,121
bipartite,"[(BSX, BLE), (BSX, TGJ), (BSX, USL), (BSX, RTH), (BSX, ODB), (NGA, BLE), (NGA, TGJ), (NGA, USL), (NGA, RTH)]","{BSX: [BLE, TGJ, USL, RTH, ODB],
NGA: [BLE, TGJ, USL, RTH],
BLE: [BSX, NGA],
TGJ: [BSX, NGA],
USL: [BSX, NGA],
RTH: [BSX, NGA],
ODB: [BSX]}","Node BSX is connected to nodes BLE, TGJ, USL, RTH, ODB.
Node NGA is connected to nodes BLE, TGJ, USL, RTH.
Node BLE is connected to nodes BSX, NGA.
Node TGJ is connected to nodes BSX, NGA.
Node USL is connected to nodes BSX, NGA.
Node RTH is connected to nodes BSX, NGA.
Node ODB is connected to node BSX.","[BSX, NGA, BLE, TGJ, USL, RTH, ODB]",7,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BSX NGA.
Nodes set 2 contains: BLE TGJ USL RTH ODB.","[(BSX, TGJ), (NGA, BLE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BSX. Updated matching: {BLE: BSX}.
Search from node NGA. Updated matching: {BLE: NGA, TGJ: BSX}.
So the maximum matching is ",2,5,122
bipartite,"[(YYE, OYJ), (YYE, IBP), (YYE, TLX), (YYE, ICI)]","{YYE: [OYJ, IBP, TLX, ICI],
OYJ: [YYE],
IBP: [YYE],
TLX: [YYE],
ICI: [YYE]}","Node YYE is connected to nodes OYJ, IBP, TLX, ICI.
Node OYJ is connected to node YYE.
Node IBP is connected to node YYE.
Node TLX is connected to node YYE.
Node ICI is connected to node YYE.","[YYE, OYJ, IBP, TLX, ICI]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YYE.
Nodes set 2 contains: OYJ IBP TLX ICI.","[(YYE, OYJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YYE. Updated matching: {OYJ: YYE}.
So the maximum matching is ",1,4,123
bipartite,"[(TQG, QMF), (TQG, VJS), (EVC, VJS), (EVC, YZW)]","{TQG: [QMF, VJS],
EVC: [VJS, YZW],
QMF: [TQG],
VJS: [TQG, EVC],
YZW: [EVC]}","Node TQG is connected to nodes QMF, VJS.
Node EVC is connected to nodes VJS, YZW.
Node QMF is connected to node TQG.
Node VJS is connected to nodes TQG, EVC.
Node YZW is connected to node EVC.","[TQG, EVC, QMF, VJS, YZW]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TQG EVC.
Nodes set 2 contains: QMF VJS YZW.","[(TQG, QMF), (EVC, VJS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TQG. Updated matching: {QMF: TQG}.
Search from node EVC. Updated matching: {QMF: TQG, VJS: EVC}.
So the maximum matching is ",2,3,124
bipartite,"[(UZA, FDN), (UZA, ODQ), (ZWX, FDN), (ZWX, PAN), (ZWX, RRC)]","{UZA: [FDN, ODQ],
ZWX: [FDN, PAN, RRC],
FDN: [UZA, ZWX],
PAN: [ZWX],
ODQ: [UZA],
RRC: [ZWX]}","Node UZA is connected to nodes FDN, ODQ.
Node ZWX is connected to nodes FDN, PAN, RRC.
Node FDN is connected to nodes UZA, ZWX.
Node PAN is connected to node ZWX.
Node ODQ is connected to node UZA.
Node RRC is connected to node ZWX.","[UZA, ZWX, FDN, PAN, ODQ, RRC]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UZA ZWX.
Nodes set 2 contains: FDN PAN ODQ RRC.","[(UZA, ODQ), (ZWX, FDN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UZA. Updated matching: {FDN: UZA}.
Search from node ZWX. Updated matching: {FDN: ZWX, ODQ: UZA}.
So the maximum matching is ",2,4,125
bipartite,"[(HEM, ZYZ), (HEM, XHT), (DOM, XHT), (DOM, OJT)]","{HEM: [ZYZ, XHT],
DOM: [XHT, OJT],
ZYZ: [HEM],
XHT: [HEM, DOM],
OJT: [DOM]}","Node HEM is connected to nodes ZYZ, XHT.
Node DOM is connected to nodes XHT, OJT.
Node ZYZ is connected to node HEM.
Node XHT is connected to nodes HEM, DOM.
Node OJT is connected to node DOM.","[HEM, DOM, ZYZ, XHT, OJT]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HEM DOM.
Nodes set 2 contains: ZYZ XHT OJT.","[(HEM, ZYZ), (DOM, XHT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HEM. Updated matching: {ZYZ: HEM}.
Search from node DOM. Updated matching: {ZYZ: HEM, XHT: DOM}.
So the maximum matching is ",2,3,126
bipartite,"[(QWN, SDT), (QWN, LBO), (QWN, RDW), (ECO, LBO), (ECO, GRE)]","{QWN: [SDT, LBO, RDW],
ECO: [LBO, GRE],
SDT: [QWN],
LBO: [QWN, ECO],
RDW: [QWN],
GRE: [ECO]}","Node QWN is connected to nodes SDT, LBO, RDW.
Node ECO is connected to nodes LBO, GRE.
Node SDT is connected to node QWN.
Node LBO is connected to nodes QWN, ECO.
Node RDW is connected to node QWN.
Node GRE is connected to node ECO.","[QWN, ECO, SDT, LBO, RDW, GRE]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QWN ECO.
Nodes set 2 contains: SDT LBO RDW GRE.","[(QWN, SDT), (ECO, LBO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QWN. Updated matching: {SDT: QWN}.
Search from node ECO. Updated matching: {SDT: QWN, LBO: ECO}.
So the maximum matching is ",2,4,127
bipartite,"[(INO, OIX), (INO, WEU), (INO, PNQ), (GMN, PNQ), (GMN, MDJ), (UDF, OIX), (UDF, WEU), (UDF, PNQ), (UDF, MDJ)]","{INO: [OIX, WEU, PNQ],
GMN: [PNQ, MDJ],
UDF: [OIX, WEU, PNQ, MDJ],
OIX: [INO, UDF],
WEU: [INO, UDF],
PNQ: [INO, GMN, UDF],
MDJ: [GMN, UDF]}","Node INO is connected to nodes OIX, WEU, PNQ.
Node GMN is connected to nodes PNQ, MDJ.
Node UDF is connected to nodes OIX, WEU, PNQ, MDJ.
Node OIX is connected to nodes INO, UDF.
Node WEU is connected to nodes INO, UDF.
Node PNQ is connected to nodes INO, GMN, UDF.
Node MDJ is connected to nodes GMN, UDF.","[INO, GMN, UDF, OIX, WEU, PNQ, MDJ]",7,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: INO GMN UDF.
Nodes set 2 contains: OIX WEU PNQ MDJ.","[(INO, WEU), (GMN, PNQ), (UDF, OIX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node INO. Updated matching: {OIX: INO}.
Search from node GMN. Updated matching: {OIX: INO, PNQ: GMN}.
Search from node UDF. Updated matching: {OIX: UDF, PNQ: GMN, WEU: INO}.
So the maximum matching is ",3,4,128
bipartite,"[(RUW, QPI), (RUW, LFX), (RUW, ELV), (LXU, QPI), (LXU, LFX), (LXU, ELV), (NBS, QPI), (NBS, IWW), (NBS, ELV)]","{RUW: [QPI, LFX, ELV],
LXU: [QPI, LFX, ELV],
NBS: [QPI, IWW, ELV],
QPI: [RUW, LXU, NBS],
IWW: [NBS],
LFX: [RUW, LXU],
ELV: [RUW, LXU, NBS]}","Node RUW is connected to nodes QPI, LFX, ELV.
Node LXU is connected to nodes QPI, LFX, ELV.
Node NBS is connected to nodes QPI, IWW, ELV.
Node QPI is connected to nodes RUW, LXU, NBS.
Node IWW is connected to node NBS.
Node LFX is connected to nodes RUW, LXU.
Node ELV is connected to nodes RUW, LXU, NBS.","[RUW, LXU, NBS, QPI, IWW, LFX, ELV]",7,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RUW LXU NBS.
Nodes set 2 contains: QPI IWW LFX ELV.","[(RUW, ELV), (LXU, LFX), (NBS, QPI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RUW. Updated matching: {QPI: RUW}.
Search from node LXU. Updated matching: {QPI: LXU, LFX: RUW}.
Search from node NBS. Updated matching: {QPI: NBS, LFX: LXU, ELV: RUW}.
So the maximum matching is ",3,4,129
bipartite,"[(UFX, UJQ), (UFX, QKQ), (UFX, FTT), (MMS, FTT)]","{UFX: [UJQ, QKQ, FTT],
MMS: [FTT],
UJQ: [UFX],
QKQ: [UFX],
FTT: [UFX, MMS]}","Node UFX is connected to nodes UJQ, QKQ, FTT.
Node MMS is connected to node FTT.
Node UJQ is connected to node UFX.
Node QKQ is connected to node UFX.
Node FTT is connected to nodes UFX, MMS.","[UFX, MMS, UJQ, QKQ, FTT]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UFX MMS.
Nodes set 2 contains: UJQ QKQ FTT.","[(UFX, UJQ), (MMS, FTT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UFX. Updated matching: {UJQ: UFX}.
Search from node MMS. Updated matching: {UJQ: UFX, FTT: MMS}.
So the maximum matching is ",2,3,130
bipartite,"[(QWS, PNB), (WXN, LKS), (WXN, VSQ), (WXN, PNB)]","{QWS: [PNB],
WXN: [LKS, VSQ, PNB],
LKS: [WXN],
VSQ: [WXN],
PNB: [QWS, WXN]}","Node QWS is connected to node PNB.
Node WXN is connected to nodes LKS, VSQ, PNB.
Node LKS is connected to node WXN.
Node VSQ is connected to node WXN.
Node PNB is connected to nodes QWS, WXN.","[QWS, WXN, LKS, VSQ, PNB]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QWS WXN.
Nodes set 2 contains: LKS VSQ PNB.","[(QWS, PNB), (WXN, LKS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QWS. Updated matching: {PNB: QWS}.
Search from node WXN. Updated matching: {PNB: QWS, LKS: WXN}.
So the maximum matching is ",2,3,131
bipartite,"[(GCV, BON), (GCV, EFN), (GCV, RYO), (GCV, VPM), (AMP, BON), (AMP, EFN), (OLZ, RYO), (OLZ, VPM)]","{GCV: [BON, EFN, RYO, VPM],
AMP: [BON, EFN],
OLZ: [RYO, VPM],
BON: [GCV, AMP],
EFN: [GCV, AMP],
RYO: [GCV, OLZ],
VPM: [GCV, OLZ]}","Node GCV is connected to nodes BON, EFN, RYO, VPM.
Node AMP is connected to nodes BON, EFN.
Node OLZ is connected to nodes RYO, VPM.
Node BON is connected to nodes GCV, AMP.
Node EFN is connected to nodes GCV, AMP.
Node RYO is connected to nodes GCV, OLZ.
Node VPM is connected to nodes GCV, OLZ.","[GCV, AMP, OLZ, BON, EFN, RYO, VPM]",7,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GCV AMP OLZ.
Nodes set 2 contains: BON EFN RYO VPM.","[(GCV, EFN), (AMP, BON), (OLZ, RYO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GCV. Updated matching: {BON: GCV}.
Search from node AMP. Updated matching: {BON: AMP, EFN: GCV}.
Search from node OLZ. Updated matching: {BON: AMP, EFN: GCV, RYO: OLZ}.
So the maximum matching is ",3,4,132
bipartite,"[(ZZW, BTV), (ZZW, BBV), (ZZW, HZM), (ZZW, OJI)]","{ZZW: [BTV, BBV, HZM, OJI],
BTV: [ZZW],
BBV: [ZZW],
HZM: [ZZW],
OJI: [ZZW]}","Node ZZW is connected to nodes BTV, BBV, HZM, OJI.
Node BTV is connected to node ZZW.
Node BBV is connected to node ZZW.
Node HZM is connected to node ZZW.
Node OJI is connected to node ZZW.","[ZZW, BTV, BBV, HZM, OJI]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZZW.
Nodes set 2 contains: BTV BBV HZM OJI.","[(ZZW, BTV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZZW. Updated matching: {BTV: ZZW}.
So the maximum matching is ",1,4,133
bipartite,"[(NAZ, BIP), (NAZ, IYR), (NAZ, EGP), (ZCM, RIG), (ZCM, BIP), (FOK, RIG), (FOK, IYR)]","{NAZ: [BIP, IYR, EGP],
ZCM: [RIG, BIP],
FOK: [RIG, IYR],
RIG: [ZCM, FOK],
BIP: [NAZ, ZCM],
IYR: [NAZ, FOK],
EGP: [NAZ]}","Node NAZ is connected to nodes BIP, IYR, EGP.
Node ZCM is connected to nodes RIG, BIP.
Node FOK is connected to nodes RIG, IYR.
Node RIG is connected to nodes ZCM, FOK.
Node BIP is connected to nodes NAZ, ZCM.
Node IYR is connected to nodes NAZ, FOK.
Node EGP is connected to node NAZ.","[NAZ, ZCM, FOK, RIG, BIP, IYR, EGP]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NAZ ZCM FOK.
Nodes set 2 contains: RIG BIP IYR EGP.","[(NAZ, IYR), (ZCM, BIP), (FOK, RIG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NAZ. Updated matching: {BIP: NAZ}.
Search from node ZCM. Updated matching: {BIP: NAZ, RIG: ZCM}.
Search from node FOK. Updated matching: {BIP: ZCM, RIG: FOK, IYR: NAZ}.
So the maximum matching is ",3,4,134
bipartite,"[(BSX, ZHM), (BSX, DAL), (BSX, KGH), (NWJ, AZE), (NWJ, KGH), (QDV, AZE)]","{BSX: [ZHM, DAL, KGH],
NWJ: [AZE, KGH],
QDV: [AZE],
AZE: [NWJ, QDV],
ZHM: [BSX],
DAL: [BSX],
KGH: [BSX, NWJ]}","Node BSX is connected to nodes ZHM, DAL, KGH.
Node NWJ is connected to nodes AZE, KGH.
Node QDV is connected to node AZE.
Node AZE is connected to nodes NWJ, QDV.
Node ZHM is connected to node BSX.
Node DAL is connected to node BSX.
Node KGH is connected to nodes BSX, NWJ.","[BSX, NWJ, QDV, AZE, ZHM, DAL, KGH]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BSX NWJ QDV.
Nodes set 2 contains: AZE ZHM DAL KGH.","[(BSX, ZHM), (NWJ, KGH), (QDV, AZE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BSX. Updated matching: {ZHM: BSX}.
Search from node NWJ. Updated matching: {ZHM: BSX, AZE: NWJ}.
Search from node QDV. Updated matching: {ZHM: BSX, AZE: QDV, KGH: NWJ}.
So the maximum matching is ",3,4,135
bipartite,"[(OPG, UDL), (FPE, PYN), (FPE, UDL), (FPE, PEO), (FPE, FEH)]","{OPG: [UDL],
FPE: [PYN, UDL, PEO, FEH],
PYN: [FPE],
UDL: [OPG, FPE],
PEO: [FPE],
FEH: [FPE]}","Node OPG is connected to node UDL.
Node FPE is connected to nodes PYN, UDL, PEO, FEH.
Node PYN is connected to node FPE.
Node UDL is connected to nodes OPG, FPE.
Node PEO is connected to node FPE.
Node FEH is connected to node FPE.","[OPG, FPE, PYN, UDL, PEO, FEH]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OPG FPE.
Nodes set 2 contains: PYN UDL PEO FEH.","[(OPG, UDL), (FPE, PYN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OPG. Updated matching: {UDL: OPG}.
Search from node FPE. Updated matching: {UDL: OPG, PYN: FPE}.
So the maximum matching is ",2,4,136
bipartite,"[(SRU, XDW), (SRU, QKY), (SRU, NLZ), (GNT, QKY), (GNT, LIY), (GNT, NLZ)]","{SRU: [XDW, QKY, NLZ],
GNT: [QKY, LIY, NLZ],
XDW: [SRU],
QKY: [SRU, GNT],
LIY: [GNT],
NLZ: [SRU, GNT]}","Node SRU is connected to nodes XDW, QKY, NLZ.
Node GNT is connected to nodes QKY, LIY, NLZ.
Node XDW is connected to node SRU.
Node QKY is connected to nodes SRU, GNT.
Node LIY is connected to node GNT.
Node NLZ is connected to nodes SRU, GNT.","[SRU, GNT, XDW, QKY, LIY, NLZ]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SRU GNT.
Nodes set 2 contains: XDW QKY LIY NLZ.","[(SRU, XDW), (GNT, QKY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SRU. Updated matching: {XDW: SRU}.
Search from node GNT. Updated matching: {XDW: SRU, QKY: GNT}.
So the maximum matching is ",2,4,137
bipartite,"[(HFB, PJK), (HFB, UBL), (YXI, UBL), (YXI, BTJ), (WOE, YRD), (WOE, PJK), (WOE, UBL), (WOE, BTJ)]","{HFB: [PJK, UBL],
YXI: [UBL, BTJ],
WOE: [YRD, PJK, UBL, BTJ],
YRD: [WOE],
PJK: [HFB, WOE],
UBL: [HFB, YXI, WOE],
BTJ: [YXI, WOE]}","Node HFB is connected to nodes PJK, UBL.
Node YXI is connected to nodes UBL, BTJ.
Node WOE is connected to nodes YRD, PJK, UBL, BTJ.
Node YRD is connected to node WOE.
Node PJK is connected to nodes HFB, WOE.
Node UBL is connected to nodes HFB, YXI, WOE.
Node BTJ is connected to nodes YXI, WOE.","[HFB, YXI, WOE, YRD, PJK, UBL, BTJ]",7,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HFB YXI WOE.
Nodes set 2 contains: YRD PJK UBL BTJ.","[(HFB, PJK), (YXI, UBL), (WOE, YRD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HFB. Updated matching: {PJK: HFB}.
Search from node YXI. Updated matching: {PJK: HFB, UBL: YXI}.
Search from node WOE. Updated matching: {PJK: HFB, UBL: YXI, YRD: WOE}.
So the maximum matching is ",3,4,138
bipartite,"[(OEH, PTX), (LOW, PTX), (LOW, RKU), (IKV, PTX), (IKV, YIL), (IKV, ZVE)]","{OEH: [PTX],
LOW: [PTX, RKU],
IKV: [PTX, YIL, ZVE],
PTX: [OEH, LOW, IKV],
YIL: [IKV],
RKU: [LOW],
ZVE: [IKV]}","Node OEH is connected to node PTX.
Node LOW is connected to nodes PTX, RKU.
Node IKV is connected to nodes PTX, YIL, ZVE.
Node PTX is connected to nodes OEH, LOW, IKV.
Node YIL is connected to node IKV.
Node RKU is connected to node LOW.
Node ZVE is connected to node IKV.","[OEH, LOW, IKV, PTX, YIL, RKU, ZVE]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OEH LOW IKV.
Nodes set 2 contains: PTX YIL RKU ZVE.","[(OEH, PTX), (LOW, RKU), (IKV, YIL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OEH. Updated matching: {PTX: OEH}.
Search from node LOW. Updated matching: {PTX: OEH, RKU: LOW}.
Search from node IKV. Updated matching: {PTX: OEH, RKU: LOW, YIL: IKV}.
So the maximum matching is ",3,4,139
bipartite,"[(ECL, OVC), (ECL, ANV), (YGU, HZE), (YGU, GHL), (YGU, OVC), (YGU, FRM), (YGU, ANV)]","{ECL: [OVC, ANV],
YGU: [HZE, GHL, OVC, FRM, ANV],
HZE: [YGU],
GHL: [YGU],
OVC: [ECL, YGU],
FRM: [YGU],
ANV: [ECL, YGU]}","Node ECL is connected to nodes OVC, ANV.
Node YGU is connected to nodes HZE, GHL, OVC, FRM, ANV.
Node HZE is connected to node YGU.
Node GHL is connected to node YGU.
Node OVC is connected to nodes ECL, YGU.
Node FRM is connected to node YGU.
Node ANV is connected to nodes ECL, YGU.","[ECL, YGU, HZE, GHL, OVC, FRM, ANV]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ECL YGU.
Nodes set 2 contains: HZE GHL OVC FRM ANV.","[(ECL, OVC), (YGU, HZE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ECL. Updated matching: {OVC: ECL}.
Search from node YGU. Updated matching: {OVC: ECL, HZE: YGU}.
So the maximum matching is ",2,5,140
bipartite,"[(ZUS, MII), (ZUS, NQL), (ZUS, FAC), (ZUS, DWD), (RIH, NQL)]","{ZUS: [MII, NQL, FAC, DWD],
RIH: [NQL],
MII: [ZUS],
NQL: [ZUS, RIH],
FAC: [ZUS],
DWD: [ZUS]}","Node ZUS is connected to nodes MII, NQL, FAC, DWD.
Node RIH is connected to node NQL.
Node MII is connected to node ZUS.
Node NQL is connected to nodes ZUS, RIH.
Node FAC is connected to node ZUS.
Node DWD is connected to node ZUS.","[ZUS, RIH, MII, NQL, FAC, DWD]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZUS RIH.
Nodes set 2 contains: MII NQL FAC DWD.","[(ZUS, MII), (RIH, NQL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZUS. Updated matching: {MII: ZUS}.
Search from node RIH. Updated matching: {MII: ZUS, NQL: RIH}.
So the maximum matching is ",2,4,141
bipartite,"[(ELM, MTN), (ELM, MWR), (ELM, KCJ), (DWZ, MTN), (DWZ, KCJ)]","{ELM: [MTN, MWR, KCJ],
DWZ: [MTN, KCJ],
MTN: [ELM, DWZ],
MWR: [ELM],
KCJ: [ELM, DWZ]}","Node ELM is connected to nodes MTN, MWR, KCJ.
Node DWZ is connected to nodes MTN, KCJ.
Node MTN is connected to nodes ELM, DWZ.
Node MWR is connected to node ELM.
Node KCJ is connected to nodes ELM, DWZ.","[ELM, DWZ, MTN, MWR, KCJ]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ELM DWZ.
Nodes set 2 contains: MTN MWR KCJ.","[(ELM, MWR), (DWZ, MTN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ELM. Updated matching: {MTN: ELM}.
Search from node DWZ. Updated matching: {MTN: DWZ, MWR: ELM}.
So the maximum matching is ",2,3,142
bipartite,"[(NTT, NFJ), (NTT, XUD), (NTT, QQW), (NTT, GRL), (XBB, NFJ), (XBB, XUD), (HHN, NFJ), (HHN, XUD), (HHN, GRL)]","{NTT: [NFJ, XUD, QQW, GRL],
XBB: [NFJ, XUD],
HHN: [NFJ, XUD, GRL],
NFJ: [NTT, XBB, HHN],
XUD: [NTT, XBB, HHN],
QQW: [NTT],
GRL: [NTT, HHN]}","Node NTT is connected to nodes NFJ, XUD, QQW, GRL.
Node XBB is connected to nodes NFJ, XUD.
Node HHN is connected to nodes NFJ, XUD, GRL.
Node NFJ is connected to nodes NTT, XBB, HHN.
Node XUD is connected to nodes NTT, XBB, HHN.
Node QQW is connected to node NTT.
Node GRL is connected to nodes NTT, HHN.","[NTT, XBB, HHN, NFJ, XUD, QQW, GRL]",7,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NTT XBB HHN.
Nodes set 2 contains: NFJ XUD QQW GRL.","[(NTT, QQW), (XBB, XUD), (HHN, NFJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NTT. Updated matching: {NFJ: NTT}.
Search from node XBB. Updated matching: {NFJ: XBB, XUD: NTT}.
Search from node HHN. Updated matching: {NFJ: HHN, XUD: XBB, QQW: NTT}.
So the maximum matching is ",3,4,143
bipartite,"[(BEN, VWQ), (YYN, YNA), (YYN, CPV), (YYN, VZQ), (YYN, VWQ), (ZIQ, VWQ)]","{BEN: [VWQ],
YYN: [YNA, CPV, VZQ, VWQ],
ZIQ: [VWQ],
YNA: [YYN],
CPV: [YYN],
VZQ: [YYN],
VWQ: [BEN, YYN, ZIQ]}","Node BEN is connected to node VWQ.
Node YYN is connected to nodes YNA, CPV, VZQ, VWQ.
Node ZIQ is connected to node VWQ.
Node YNA is connected to node YYN.
Node CPV is connected to node YYN.
Node VZQ is connected to node YYN.
Node VWQ is connected to nodes BEN, YYN, ZIQ.","[BEN, YYN, ZIQ, YNA, CPV, VZQ, VWQ]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BEN YYN ZIQ.
Nodes set 2 contains: YNA CPV VZQ VWQ.","[(BEN, VWQ), (YYN, YNA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BEN. Updated matching: {VWQ: BEN}.
Search from node YYN. Updated matching: {VWQ: BEN, YNA: YYN}.
Search from node ZIQ. Updated matching: {VWQ: BEN, YNA: YYN}.
So the maximum matching is ",3,4,144
bipartite,"[(DQR, EXV), (DQR, YIS), (DQR, LJV), (TJN, EXV), (TJN, WAK), (TJN, LJV)]","{DQR: [EXV, YIS, LJV],
TJN: [EXV, WAK, LJV],
EXV: [DQR, TJN],
YIS: [DQR],
WAK: [TJN],
LJV: [DQR, TJN]}","Node DQR is connected to nodes EXV, YIS, LJV.
Node TJN is connected to nodes EXV, WAK, LJV.
Node EXV is connected to nodes DQR, TJN.
Node YIS is connected to node DQR.
Node WAK is connected to node TJN.
Node LJV is connected to nodes DQR, TJN.","[DQR, TJN, EXV, YIS, WAK, LJV]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DQR TJN.
Nodes set 2 contains: EXV YIS WAK LJV.","[(DQR, YIS), (TJN, EXV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DQR. Updated matching: {EXV: DQR}.
Search from node TJN. Updated matching: {EXV: TJN, YIS: DQR}.
So the maximum matching is ",2,4,145
bipartite,"[(ZGC, AOA), (ZGC, ECE), (ZGC, TRP), (ZGC, CUZ), (XKV, AOA), (XKV, TRP)]","{ZGC: [AOA, ECE, TRP, CUZ],
XKV: [AOA, TRP],
AOA: [ZGC, XKV],
ECE: [ZGC],
TRP: [ZGC, XKV],
CUZ: [ZGC]}","Node ZGC is connected to nodes AOA, ECE, TRP, CUZ.
Node XKV is connected to nodes AOA, TRP.
Node AOA is connected to nodes ZGC, XKV.
Node ECE is connected to node ZGC.
Node TRP is connected to nodes ZGC, XKV.
Node CUZ is connected to node ZGC.","[ZGC, XKV, AOA, ECE, TRP, CUZ]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZGC XKV.
Nodes set 2 contains: AOA ECE TRP CUZ.","[(ZGC, ECE), (XKV, AOA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZGC. Updated matching: {AOA: ZGC}.
Search from node XKV. Updated matching: {AOA: XKV, ECE: ZGC}.
So the maximum matching is ",2,4,146
bipartite,"[(EUC, FCS), (EUC, RPZ), (LQI, QZX), (LQI, UNT), (LQI, RPZ)]","{EUC: [FCS, RPZ],
LQI: [QZX, UNT, RPZ],
QZX: [LQI],
FCS: [EUC],
UNT: [LQI],
RPZ: [EUC, LQI]}","Node EUC is connected to nodes FCS, RPZ.
Node LQI is connected to nodes QZX, UNT, RPZ.
Node QZX is connected to node LQI.
Node FCS is connected to node EUC.
Node UNT is connected to node LQI.
Node RPZ is connected to nodes EUC, LQI.","[EUC, LQI, QZX, FCS, UNT, RPZ]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: EUC LQI.
Nodes set 2 contains: QZX FCS UNT RPZ.","[(EUC, FCS), (LQI, QZX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node EUC. Updated matching: {FCS: EUC}.
Search from node LQI. Updated matching: {FCS: EUC, QZX: LQI}.
So the maximum matching is ",2,4,147
bipartite,"[(WBO, HNF), (WBO, HQM), (OER, HNF), (OER, WAD), (OER, JSP)]","{WBO: [HNF, HQM],
OER: [HNF, WAD, JSP],
HNF: [WBO, OER],
HQM: [WBO],
WAD: [OER],
JSP: [OER]}","Node WBO is connected to nodes HNF, HQM.
Node OER is connected to nodes HNF, WAD, JSP.
Node HNF is connected to nodes WBO, OER.
Node HQM is connected to node WBO.
Node WAD is connected to node OER.
Node JSP is connected to node OER.","[WBO, OER, HNF, HQM, WAD, JSP]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WBO OER.
Nodes set 2 contains: HNF HQM WAD JSP.","[(WBO, HQM), (OER, HNF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WBO. Updated matching: {HNF: WBO}.
Search from node OER. Updated matching: {HNF: OER, HQM: WBO}.
So the maximum matching is ",2,4,148
bipartite,"[(HDD, IDS), (HDD, KUD), (HDD, WGY), (EXE, KUD), (JNM, UPH), (JNM, KUD)]","{HDD: [IDS, KUD, WGY],
EXE: [KUD],
JNM: [UPH, KUD],
UPH: [JNM],
IDS: [HDD],
KUD: [HDD, EXE, JNM],
WGY: [HDD]}","Node HDD is connected to nodes IDS, KUD, WGY.
Node EXE is connected to node KUD.
Node JNM is connected to nodes UPH, KUD.
Node UPH is connected to node JNM.
Node IDS is connected to node HDD.
Node KUD is connected to nodes HDD, EXE, JNM.
Node WGY is connected to node HDD.","[HDD, EXE, JNM, UPH, IDS, KUD, WGY]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HDD EXE JNM.
Nodes set 2 contains: UPH IDS KUD WGY.","[(HDD, IDS), (EXE, KUD), (JNM, UPH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HDD. Updated matching: {IDS: HDD}.
Search from node EXE. Updated matching: {IDS: HDD, KUD: EXE}.
Search from node JNM. Updated matching: {IDS: HDD, KUD: EXE, UPH: JNM}.
So the maximum matching is ",3,4,149
bipartite,"[(XCC, KBX), (XCC, UTN), (PKZ, UTN), (PKZ, REA)]","{XCC: [KBX, UTN],
PKZ: [UTN, REA],
KBX: [XCC],
UTN: [XCC, PKZ],
REA: [PKZ]}","Node XCC is connected to nodes KBX, UTN.
Node PKZ is connected to nodes UTN, REA.
Node KBX is connected to node XCC.
Node UTN is connected to nodes XCC, PKZ.
Node REA is connected to node PKZ.","[XCC, PKZ, KBX, UTN, REA]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XCC PKZ.
Nodes set 2 contains: KBX UTN REA.","[(XCC, KBX), (PKZ, UTN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XCC. Updated matching: {KBX: XCC}.
Search from node PKZ. Updated matching: {KBX: XCC, UTN: PKZ}.
So the maximum matching is ",2,3,150
bipartite,"[(WCF, MWK), (WCF, KAR), (PAC, MUO), (PAC, GBQ), (PAC, KAR)]","{WCF: [MWK, KAR],
PAC: [MUO, GBQ, KAR],
MUO: [PAC],
GBQ: [PAC],
MWK: [WCF],
KAR: [WCF, PAC]}","Node WCF is connected to nodes MWK, KAR.
Node PAC is connected to nodes MUO, GBQ, KAR.
Node MUO is connected to node PAC.
Node GBQ is connected to node PAC.
Node MWK is connected to node WCF.
Node KAR is connected to nodes WCF, PAC.","[WCF, PAC, MUO, GBQ, MWK, KAR]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WCF PAC.
Nodes set 2 contains: MUO GBQ MWK KAR.","[(WCF, MWK), (PAC, MUO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WCF. Updated matching: {MWK: WCF}.
Search from node PAC. Updated matching: {MWK: WCF, MUO: PAC}.
So the maximum matching is ",2,4,151
bipartite,"[(SLN, LMK), (SLN, ZKD), (SLN, LHE), (SST, ZKD), (SST, URC)]","{SLN: [LMK, ZKD, LHE],
SST: [ZKD, URC],
LMK: [SLN],
ZKD: [SLN, SST],
LHE: [SLN],
URC: [SST]}","Node SLN is connected to nodes LMK, ZKD, LHE.
Node SST is connected to nodes ZKD, URC.
Node LMK is connected to node SLN.
Node ZKD is connected to nodes SLN, SST.
Node LHE is connected to node SLN.
Node URC is connected to node SST.","[SLN, SST, LMK, ZKD, LHE, URC]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SLN SST.
Nodes set 2 contains: LMK ZKD LHE URC.","[(SLN, LMK), (SST, ZKD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SLN. Updated matching: {LMK: SLN}.
Search from node SST. Updated matching: {LMK: SLN, ZKD: SST}.
So the maximum matching is ",2,4,152
bipartite,"[(CGX, AFB), (CGX, TCS), (CGX, XXR), (BQH, AFB), (BQH, CQZ), (ISN, TCS)]","{CGX: [AFB, TCS, XXR],
BQH: [AFB, CQZ],
ISN: [TCS],
AFB: [CGX, BQH],
CQZ: [BQH],
TCS: [CGX, ISN],
XXR: [CGX]}","Node CGX is connected to nodes AFB, TCS, XXR.
Node BQH is connected to nodes AFB, CQZ.
Node ISN is connected to node TCS.
Node AFB is connected to nodes CGX, BQH.
Node CQZ is connected to node BQH.
Node TCS is connected to nodes CGX, ISN.
Node XXR is connected to node CGX.","[CGX, BQH, ISN, AFB, CQZ, TCS, XXR]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CGX BQH ISN.
Nodes set 2 contains: AFB CQZ TCS XXR.","[(CGX, AFB), (BQH, CQZ), (ISN, TCS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CGX. Updated matching: {AFB: CGX}.
Search from node BQH. Updated matching: {AFB: BQH, TCS: CGX}.
Search from node ISN. Updated matching: {AFB: CGX, TCS: ISN, CQZ: BQH}.
So the maximum matching is ",3,4,153
bipartite,"[(NDV, ZJU), (NDV, FKI), (NDV, AVD), (XMD, AVD)]","{NDV: [ZJU, FKI, AVD],
XMD: [AVD],
ZJU: [NDV],
FKI: [NDV],
AVD: [NDV, XMD]}","Node NDV is connected to nodes ZJU, FKI, AVD.
Node XMD is connected to node AVD.
Node ZJU is connected to node NDV.
Node FKI is connected to node NDV.
Node AVD is connected to nodes NDV, XMD.","[NDV, XMD, ZJU, FKI, AVD]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NDV XMD.
Nodes set 2 contains: ZJU FKI AVD.","[(NDV, ZJU), (XMD, AVD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NDV. Updated matching: {ZJU: NDV}.
Search from node XMD. Updated matching: {ZJU: NDV, AVD: XMD}.
So the maximum matching is ",2,3,154
bipartite,"[(FFR, BBH), (FFR, YRH), (FFR, GZJ), (EFG, YRH), (EFG, JWM)]","{FFR: [BBH, YRH, GZJ],
EFG: [YRH, JWM],
BBH: [FFR],
YRH: [FFR, EFG],
JWM: [EFG],
GZJ: [FFR]}","Node FFR is connected to nodes BBH, YRH, GZJ.
Node EFG is connected to nodes YRH, JWM.
Node BBH is connected to node FFR.
Node YRH is connected to nodes FFR, EFG.
Node JWM is connected to node EFG.
Node GZJ is connected to node FFR.","[FFR, EFG, BBH, YRH, JWM, GZJ]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FFR EFG.
Nodes set 2 contains: BBH YRH JWM GZJ.","[(FFR, BBH), (EFG, YRH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FFR. Updated matching: {BBH: FFR}.
Search from node EFG. Updated matching: {BBH: FFR, YRH: EFG}.
So the maximum matching is ",2,4,155
bipartite,"[(VPP, UXP), (VPP, CLU), (NYC, UXP), (NYC, XXZ), (NYC, CTH), (BNC, XXZ), (BNC, CTH)]","{VPP: [UXP, CLU],
NYC: [UXP, XXZ, CTH],
BNC: [XXZ, CTH],
UXP: [VPP, NYC],
XXZ: [NYC, BNC],
CTH: [NYC, BNC],
CLU: [VPP]}","Node VPP is connected to nodes UXP, CLU.
Node NYC is connected to nodes UXP, XXZ, CTH.
Node BNC is connected to nodes XXZ, CTH.
Node UXP is connected to nodes VPP, NYC.
Node XXZ is connected to nodes NYC, BNC.
Node CTH is connected to nodes NYC, BNC.
Node CLU is connected to node VPP.","[VPP, NYC, BNC, UXP, XXZ, CTH, CLU]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VPP NYC BNC.
Nodes set 2 contains: UXP XXZ CTH CLU.","[(VPP, CLU), (NYC, UXP), (BNC, XXZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VPP. Updated matching: {UXP: VPP}.
Search from node NYC. Updated matching: {UXP: NYC, CLU: VPP}.
Search from node BNC. Updated matching: {UXP: NYC, CLU: VPP, XXZ: BNC}.
So the maximum matching is ",3,4,156
bipartite,"[(NDB, AWV), (NDB, ZML), (NDB, PML), (XEV, SGF), (XEV, PML)]","{NDB: [AWV, ZML, PML],
XEV: [SGF, PML],
AWV: [NDB],
SGF: [XEV],
ZML: [NDB],
PML: [NDB, XEV]}","Node NDB is connected to nodes AWV, ZML, PML.
Node XEV is connected to nodes SGF, PML.
Node AWV is connected to node NDB.
Node SGF is connected to node XEV.
Node ZML is connected to node NDB.
Node PML is connected to nodes NDB, XEV.","[NDB, XEV, AWV, SGF, ZML, PML]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NDB XEV.
Nodes set 2 contains: AWV SGF ZML PML.","[(NDB, AWV), (XEV, SGF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NDB. Updated matching: {AWV: NDB}.
Search from node XEV. Updated matching: {AWV: NDB, SGF: XEV}.
So the maximum matching is ",2,4,157
bipartite,"[(FRF, RPN), (FRF, SWV), (HAG, RPN), (HAG, HLX), (HAG, VPE), (HAG, OUO), (HAG, SWV)]","{FRF: [RPN, SWV],
HAG: [RPN, HLX, VPE, OUO, SWV],
RPN: [FRF, HAG],
HLX: [HAG],
VPE: [HAG],
OUO: [HAG],
SWV: [FRF, HAG]}","Node FRF is connected to nodes RPN, SWV.
Node HAG is connected to nodes RPN, HLX, VPE, OUO, SWV.
Node RPN is connected to nodes FRF, HAG.
Node HLX is connected to node HAG.
Node VPE is connected to node HAG.
Node OUO is connected to node HAG.
Node SWV is connected to nodes FRF, HAG.","[FRF, HAG, RPN, HLX, VPE, OUO, SWV]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FRF HAG.
Nodes set 2 contains: RPN HLX VPE OUO SWV.","[(FRF, SWV), (HAG, RPN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FRF. Updated matching: {RPN: FRF}.
Search from node HAG. Updated matching: {RPN: HAG, SWV: FRF}.
So the maximum matching is ",2,5,158
bipartite,"[(OXT, ZJO), (OXT, OFO), (COC, ZJO), (COC, OFO), (COC, WVE)]","{OXT: [ZJO, OFO],
COC: [ZJO, OFO, WVE],
ZJO: [OXT, COC],
OFO: [OXT, COC],
WVE: [COC]}","Node OXT is connected to nodes ZJO, OFO.
Node COC is connected to nodes ZJO, OFO, WVE.
Node ZJO is connected to nodes OXT, COC.
Node OFO is connected to nodes OXT, COC.
Node WVE is connected to node COC.","[OXT, COC, ZJO, OFO, WVE]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OXT COC.
Nodes set 2 contains: ZJO OFO WVE.","[(OXT, OFO), (COC, ZJO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OXT. Updated matching: {ZJO: OXT}.
Search from node COC. Updated matching: {ZJO: COC, OFO: OXT}.
So the maximum matching is ",2,3,159
bipartite,"[(YHT, WAK), (YHT, IJZ), (YHT, PVS), (RXQ, EPO), (RXQ, VWP), (RXQ, IJZ)]","{YHT: [WAK, IJZ, PVS],
RXQ: [EPO, VWP, IJZ],
EPO: [RXQ],
WAK: [YHT],
VWP: [RXQ],
IJZ: [YHT, RXQ],
PVS: [YHT]}","Node YHT is connected to nodes WAK, IJZ, PVS.
Node RXQ is connected to nodes EPO, VWP, IJZ.
Node EPO is connected to node RXQ.
Node WAK is connected to node YHT.
Node VWP is connected to node RXQ.
Node IJZ is connected to nodes YHT, RXQ.
Node PVS is connected to node YHT.","[YHT, RXQ, EPO, WAK, VWP, IJZ, PVS]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YHT RXQ.
Nodes set 2 contains: EPO WAK VWP IJZ PVS.","[(YHT, WAK), (RXQ, EPO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YHT. Updated matching: {WAK: YHT}.
Search from node RXQ. Updated matching: {WAK: YHT, EPO: RXQ}.
So the maximum matching is ",2,5,160
bipartite,"[(DIP, JGQ), (DIP, JSV), (WQF, GIE), (WQF, UZL), (WQF, JSV)]","{DIP: [JGQ, JSV],
WQF: [GIE, UZL, JSV],
GIE: [WQF],
JGQ: [DIP],
UZL: [WQF],
JSV: [DIP, WQF]}","Node DIP is connected to nodes JGQ, JSV.
Node WQF is connected to nodes GIE, UZL, JSV.
Node GIE is connected to node WQF.
Node JGQ is connected to node DIP.
Node UZL is connected to node WQF.
Node JSV is connected to nodes DIP, WQF.","[DIP, WQF, GIE, JGQ, UZL, JSV]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DIP WQF.
Nodes set 2 contains: GIE JGQ UZL JSV.","[(DIP, JGQ), (WQF, GIE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DIP. Updated matching: {JGQ: DIP}.
Search from node WQF. Updated matching: {JGQ: DIP, GIE: WQF}.
So the maximum matching is ",2,4,161
bipartite,"[(EFW, YRO), (EFW, SNU), (COD, TGN), (COD, YRO), (COD, PSX)]","{EFW: [YRO, SNU],
COD: [TGN, YRO, PSX],
TGN: [COD],
YRO: [EFW, COD],
SNU: [EFW],
PSX: [COD]}","Node EFW is connected to nodes YRO, SNU.
Node COD is connected to nodes TGN, YRO, PSX.
Node TGN is connected to node COD.
Node YRO is connected to nodes EFW, COD.
Node SNU is connected to node EFW.
Node PSX is connected to node COD.","[EFW, COD, TGN, YRO, SNU, PSX]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: EFW COD.
Nodes set 2 contains: TGN YRO SNU PSX.","[(EFW, YRO), (COD, TGN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node EFW. Updated matching: {YRO: EFW}.
Search from node COD. Updated matching: {YRO: EFW, TGN: COD}.
So the maximum matching is ",2,4,162
bipartite,"[(IAB, LAT), (IAB, VGU), (IAB, NJA), (TYB, RYJ), (TYB, VGU)]","{IAB: [LAT, VGU, NJA],
TYB: [RYJ, VGU],
RYJ: [TYB],
LAT: [IAB],
VGU: [IAB, TYB],
NJA: [IAB]}","Node IAB is connected to nodes LAT, VGU, NJA.
Node TYB is connected to nodes RYJ, VGU.
Node RYJ is connected to node TYB.
Node LAT is connected to node IAB.
Node VGU is connected to nodes IAB, TYB.
Node NJA is connected to node IAB.","[IAB, TYB, RYJ, LAT, VGU, NJA]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IAB TYB.
Nodes set 2 contains: RYJ LAT VGU NJA.","[(IAB, LAT), (TYB, RYJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IAB. Updated matching: {LAT: IAB}.
Search from node TYB. Updated matching: {LAT: IAB, RYJ: TYB}.
So the maximum matching is ",2,4,163
bipartite,"[(QOV, IBH), (QOV, ZTF), (IDD, EXP), (IDD, ZTF), (IDD, BKA)]","{QOV: [IBH, ZTF],
IDD: [EXP, ZTF, BKA],
IBH: [QOV],
EXP: [IDD],
ZTF: [QOV, IDD],
BKA: [IDD]}","Node QOV is connected to nodes IBH, ZTF.
Node IDD is connected to nodes EXP, ZTF, BKA.
Node IBH is connected to node QOV.
Node EXP is connected to node IDD.
Node ZTF is connected to nodes QOV, IDD.
Node BKA is connected to node IDD.","[QOV, IDD, IBH, EXP, ZTF, BKA]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QOV IDD.
Nodes set 2 contains: IBH EXP ZTF BKA.","[(QOV, IBH), (IDD, EXP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QOV. Updated matching: {IBH: QOV}.
Search from node IDD. Updated matching: {IBH: QOV, EXP: IDD}.
So the maximum matching is ",2,4,164
bipartite,"[(XUQ, NGQ), (XUQ, LLO), (XUQ, NZR), (ADO, SGR), (ADO, NZR)]","{XUQ: [NGQ, LLO, NZR],
ADO: [SGR, NZR],
NGQ: [XUQ],
LLO: [XUQ],
SGR: [ADO],
NZR: [XUQ, ADO]}","Node XUQ is connected to nodes NGQ, LLO, NZR.
Node ADO is connected to nodes SGR, NZR.
Node NGQ is connected to node XUQ.
Node LLO is connected to node XUQ.
Node SGR is connected to node ADO.
Node NZR is connected to nodes XUQ, ADO.","[XUQ, ADO, NGQ, LLO, SGR, NZR]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XUQ ADO.
Nodes set 2 contains: NGQ LLO SGR NZR.","[(XUQ, NGQ), (ADO, SGR)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XUQ. Updated matching: {NGQ: XUQ}.
Search from node ADO. Updated matching: {NGQ: XUQ, SGR: ADO}.
So the maximum matching is ",2,4,165
bipartite,"[(ULM, TOZ), (ULM, UFP), (ULM, YAE), (QUG, TOZ), (QUG, QHU), (QUG, UFP)]","{ULM: [TOZ, UFP, YAE],
QUG: [TOZ, QHU, UFP],
TOZ: [ULM, QUG],
QHU: [QUG],
UFP: [ULM, QUG],
YAE: [ULM]}","Node ULM is connected to nodes TOZ, UFP, YAE.
Node QUG is connected to nodes TOZ, QHU, UFP.
Node TOZ is connected to nodes ULM, QUG.
Node QHU is connected to node QUG.
Node UFP is connected to nodes ULM, QUG.
Node YAE is connected to node ULM.","[ULM, QUG, TOZ, QHU, UFP, YAE]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ULM QUG.
Nodes set 2 contains: TOZ QHU UFP YAE.","[(ULM, UFP), (QUG, TOZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ULM. Updated matching: {TOZ: ULM}.
Search from node QUG. Updated matching: {TOZ: QUG, UFP: ULM}.
So the maximum matching is ",2,4,166
bipartite,"[(TAC, WHK), (TAC, QGU), (VNN, WHK), (VNN, FNV), (VNN, UQI)]","{TAC: [WHK, QGU],
VNN: [WHK, FNV, UQI],
WHK: [TAC, VNN],
FNV: [VNN],
UQI: [VNN],
QGU: [TAC]}","Node TAC is connected to nodes WHK, QGU.
Node VNN is connected to nodes WHK, FNV, UQI.
Node WHK is connected to nodes TAC, VNN.
Node FNV is connected to node VNN.
Node UQI is connected to node VNN.
Node QGU is connected to node TAC.","[TAC, VNN, WHK, FNV, UQI, QGU]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TAC VNN.
Nodes set 2 contains: WHK FNV UQI QGU.","[(TAC, QGU), (VNN, WHK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TAC. Updated matching: {WHK: TAC}.
Search from node VNN. Updated matching: {WHK: VNN, QGU: TAC}.
So the maximum matching is ",2,4,167
bipartite,"[(UZA, QCC), (BQM, YLV), (BQM, QCC), (BQM, BGP), (ECR, BLO), (ECR, YLV)]","{UZA: [QCC],
BQM: [YLV, QCC, BGP],
ECR: [BLO, YLV],
BLO: [ECR],
YLV: [BQM, ECR],
QCC: [UZA, BQM],
BGP: [BQM]}","Node UZA is connected to node QCC.
Node BQM is connected to nodes YLV, QCC, BGP.
Node ECR is connected to nodes BLO, YLV.
Node BLO is connected to node ECR.
Node YLV is connected to nodes BQM, ECR.
Node QCC is connected to nodes UZA, BQM.
Node BGP is connected to node BQM.","[UZA, BQM, ECR, BLO, YLV, QCC, BGP]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UZA BQM ECR.
Nodes set 2 contains: BLO YLV QCC BGP.","[(UZA, QCC), (BQM, YLV), (ECR, BLO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UZA. Updated matching: {QCC: UZA}.
Search from node BQM. Updated matching: {QCC: UZA, YLV: BQM}.
Search from node ECR. Updated matching: {QCC: UZA, YLV: BQM, BLO: ECR}.
So the maximum matching is ",3,4,168
bipartite,"[(ZFG, KTQ), (ZFG, YKF), (ZFG, OFU), (NCK, YKF)]","{ZFG: [KTQ, YKF, OFU],
NCK: [YKF],
KTQ: [ZFG],
YKF: [ZFG, NCK],
OFU: [ZFG]}","Node ZFG is connected to nodes KTQ, YKF, OFU.
Node NCK is connected to node YKF.
Node KTQ is connected to node ZFG.
Node YKF is connected to nodes ZFG, NCK.
Node OFU is connected to node ZFG.","[ZFG, NCK, KTQ, YKF, OFU]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZFG NCK.
Nodes set 2 contains: KTQ YKF OFU.","[(ZFG, KTQ), (NCK, YKF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZFG. Updated matching: {KTQ: ZFG}.
Search from node NCK. Updated matching: {KTQ: ZFG, YKF: NCK}.
So the maximum matching is ",2,3,169
bipartite,"[(VLX, LMH), (SOS, LMH), (SOS, TYN), (SOS, DBS)]","{VLX: [LMH],
SOS: [LMH, TYN, DBS],
LMH: [VLX, SOS],
TYN: [SOS],
DBS: [SOS]}","Node VLX is connected to node LMH.
Node SOS is connected to nodes LMH, TYN, DBS.
Node LMH is connected to nodes VLX, SOS.
Node TYN is connected to node SOS.
Node DBS is connected to node SOS.","[VLX, SOS, LMH, TYN, DBS]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VLX SOS.
Nodes set 2 contains: LMH TYN DBS.","[(VLX, LMH), (SOS, TYN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VLX. Updated matching: {LMH: VLX}.
Search from node SOS. Updated matching: {LMH: VLX, TYN: SOS}.
So the maximum matching is ",2,3,170
bipartite,"[(SMA, YSZ), (SMA, ONW), (RJD, YSZ), (RJD, CYI), (RJD, HOQ), (RJD, FNZ)]","{SMA: [YSZ, ONW],
RJD: [YSZ, CYI, HOQ, FNZ],
YSZ: [SMA, RJD],
CYI: [RJD],
ONW: [SMA],
HOQ: [RJD],
FNZ: [RJD]}","Node SMA is connected to nodes YSZ, ONW.
Node RJD is connected to nodes YSZ, CYI, HOQ, FNZ.
Node YSZ is connected to nodes SMA, RJD.
Node CYI is connected to node RJD.
Node ONW is connected to node SMA.
Node HOQ is connected to node RJD.
Node FNZ is connected to node RJD.","[SMA, RJD, YSZ, CYI, ONW, HOQ, FNZ]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SMA RJD.
Nodes set 2 contains: YSZ CYI ONW HOQ FNZ.","[(SMA, ONW), (RJD, YSZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SMA. Updated matching: {YSZ: SMA}.
Search from node RJD. Updated matching: {YSZ: RJD, ONW: SMA}.
So the maximum matching is ",2,5,171
bipartite,"[(IDN, YGJ), (IDN, BWY), (EJB, BWY), (EJB, RNP), (EJB, ULF)]","{IDN: [YGJ, BWY],
EJB: [BWY, RNP, ULF],
YGJ: [IDN],
BWY: [IDN, EJB],
RNP: [EJB],
ULF: [EJB]}","Node IDN is connected to nodes YGJ, BWY.
Node EJB is connected to nodes BWY, RNP, ULF.
Node YGJ is connected to node IDN.
Node BWY is connected to nodes IDN, EJB.
Node RNP is connected to node EJB.
Node ULF is connected to node EJB.","[IDN, EJB, YGJ, BWY, RNP, ULF]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IDN EJB.
Nodes set 2 contains: YGJ BWY RNP ULF.","[(IDN, YGJ), (EJB, BWY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IDN. Updated matching: {YGJ: IDN}.
Search from node EJB. Updated matching: {YGJ: IDN, BWY: EJB}.
So the maximum matching is ",2,4,172
bipartite,"[(SZT, RRE), (SZT, VOU), (SZT, GIZ), (CDH, TAW), (CDH, RRE)]","{SZT: [RRE, VOU, GIZ],
CDH: [TAW, RRE],
TAW: [CDH],
RRE: [SZT, CDH],
VOU: [SZT],
GIZ: [SZT]}","Node SZT is connected to nodes RRE, VOU, GIZ.
Node CDH is connected to nodes TAW, RRE.
Node TAW is connected to node CDH.
Node RRE is connected to nodes SZT, CDH.
Node VOU is connected to node SZT.
Node GIZ is connected to node SZT.","[SZT, CDH, TAW, RRE, VOU, GIZ]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SZT CDH.
Nodes set 2 contains: TAW RRE VOU GIZ.","[(SZT, RRE), (CDH, TAW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SZT. Updated matching: {RRE: SZT}.
Search from node CDH. Updated matching: {RRE: SZT, TAW: CDH}.
So the maximum matching is ",2,4,173
bipartite,"[(VVW, DUN), (IKG, ZBP), (IKG, QDM), (IKG, DUN), (YFY, GMX), (YFY, DUN)]","{VVW: [DUN],
IKG: [ZBP, QDM, DUN],
YFY: [GMX, DUN],
GMX: [YFY],
ZBP: [IKG],
QDM: [IKG],
DUN: [VVW, IKG, YFY]}","Node VVW is connected to node DUN.
Node IKG is connected to nodes ZBP, QDM, DUN.
Node YFY is connected to nodes GMX, DUN.
Node GMX is connected to node YFY.
Node ZBP is connected to node IKG.
Node QDM is connected to node IKG.
Node DUN is connected to nodes VVW, IKG, YFY.","[VVW, IKG, YFY, GMX, ZBP, QDM, DUN]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VVW IKG YFY.
Nodes set 2 contains: GMX ZBP QDM DUN.","[(VVW, DUN), (IKG, ZBP), (YFY, GMX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VVW. Updated matching: {DUN: VVW}.
Search from node IKG. Updated matching: {DUN: VVW, ZBP: IKG}.
Search from node YFY. Updated matching: {DUN: VVW, ZBP: IKG, GMX: YFY}.
So the maximum matching is ",3,4,174
bipartite,"[(PSP, KUZ), (PSP, OKG), (RGM, KUZ), (RGM, OKG), (RGM, RUE)]","{PSP: [KUZ, OKG],
RGM: [KUZ, OKG, RUE],
KUZ: [PSP, RGM],
OKG: [PSP, RGM],
RUE: [RGM]}","Node PSP is connected to nodes KUZ, OKG.
Node RGM is connected to nodes KUZ, OKG, RUE.
Node KUZ is connected to nodes PSP, RGM.
Node OKG is connected to nodes PSP, RGM.
Node RUE is connected to node RGM.","[PSP, RGM, KUZ, OKG, RUE]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PSP RGM.
Nodes set 2 contains: KUZ OKG RUE.","[(PSP, OKG), (RGM, KUZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PSP. Updated matching: {KUZ: PSP}.
Search from node RGM. Updated matching: {KUZ: RGM, OKG: PSP}.
So the maximum matching is ",2,3,175
bipartite,"[(URR, EPT), (URR, OLC), (URR, FKI), (CTC, OLC), (CTC, FKI)]","{URR: [EPT, OLC, FKI],
CTC: [OLC, FKI],
EPT: [URR],
OLC: [URR, CTC],
FKI: [URR, CTC]}","Node URR is connected to nodes EPT, OLC, FKI.
Node CTC is connected to nodes OLC, FKI.
Node EPT is connected to node URR.
Node OLC is connected to nodes URR, CTC.
Node FKI is connected to nodes URR, CTC.","[URR, CTC, EPT, OLC, FKI]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: URR CTC.
Nodes set 2 contains: EPT OLC FKI.","[(URR, EPT), (CTC, OLC)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node URR. Updated matching: {EPT: URR}.
Search from node CTC. Updated matching: {EPT: URR, OLC: CTC}.
So the maximum matching is ",2,3,176
bipartite,"[(VGR, NHW), (LQP, BEL), (LQP, RRS), (LQP, OXC), (LQP, NHW)]","{VGR: [NHW],
LQP: [BEL, RRS, OXC, NHW],
BEL: [LQP],
RRS: [LQP],
OXC: [LQP],
NHW: [VGR, LQP]}","Node VGR is connected to node NHW.
Node LQP is connected to nodes BEL, RRS, OXC, NHW.
Node BEL is connected to node LQP.
Node RRS is connected to node LQP.
Node OXC is connected to node LQP.
Node NHW is connected to nodes VGR, LQP.","[VGR, LQP, BEL, RRS, OXC, NHW]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VGR LQP.
Nodes set 2 contains: BEL RRS OXC NHW.","[(VGR, NHW), (LQP, BEL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VGR. Updated matching: {NHW: VGR}.
Search from node LQP. Updated matching: {NHW: VGR, BEL: LQP}.
So the maximum matching is ",2,4,177
bipartite,"[(GNK, XFO), (GNK, DHK), (GNK, MYU), (GNK, YXS), (CAJ, DHK), (CAJ, PJX)]","{GNK: [XFO, DHK, MYU, YXS],
CAJ: [DHK, PJX],
XFO: [GNK],
DHK: [GNK, CAJ],
MYU: [GNK],
PJX: [CAJ],
YXS: [GNK]}","Node GNK is connected to nodes XFO, DHK, MYU, YXS.
Node CAJ is connected to nodes DHK, PJX.
Node XFO is connected to node GNK.
Node DHK is connected to nodes GNK, CAJ.
Node MYU is connected to node GNK.
Node PJX is connected to node CAJ.
Node YXS is connected to node GNK.","[GNK, CAJ, XFO, DHK, MYU, PJX, YXS]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GNK CAJ.
Nodes set 2 contains: XFO DHK MYU PJX YXS.","[(GNK, XFO), (CAJ, DHK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GNK. Updated matching: {XFO: GNK}.
Search from node CAJ. Updated matching: {XFO: GNK, DHK: CAJ}.
So the maximum matching is ",2,5,178
bipartite,"[(JTR, TFT), (JTR, OUS), (JTR, HTV), (GPJ, OUS), (GPJ, HTV)]","{JTR: [TFT, OUS, HTV],
GPJ: [OUS, HTV],
TFT: [JTR],
OUS: [JTR, GPJ],
HTV: [JTR, GPJ]}","Node JTR is connected to nodes TFT, OUS, HTV.
Node GPJ is connected to nodes OUS, HTV.
Node TFT is connected to node JTR.
Node OUS is connected to nodes JTR, GPJ.
Node HTV is connected to nodes JTR, GPJ.","[JTR, GPJ, TFT, OUS, HTV]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JTR GPJ.
Nodes set 2 contains: TFT OUS HTV.","[(JTR, TFT), (GPJ, OUS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JTR. Updated matching: {TFT: JTR}.
Search from node GPJ. Updated matching: {TFT: JTR, OUS: GPJ}.
So the maximum matching is ",2,3,179
bipartite,"[(RSY, HNM), (RSY, QQF), (RSY, QNY), (SDJ, HNM), (SDJ, ZDS)]","{RSY: [HNM, QQF, QNY],
SDJ: [HNM, ZDS],
HNM: [RSY, SDJ],
ZDS: [SDJ],
QQF: [RSY],
QNY: [RSY]}","Node RSY is connected to nodes HNM, QQF, QNY.
Node SDJ is connected to nodes HNM, ZDS.
Node HNM is connected to nodes RSY, SDJ.
Node ZDS is connected to node SDJ.
Node QQF is connected to node RSY.
Node QNY is connected to node RSY.","[RSY, SDJ, HNM, ZDS, QQF, QNY]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RSY SDJ.
Nodes set 2 contains: HNM ZDS QQF QNY.","[(RSY, QQF), (SDJ, HNM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RSY. Updated matching: {HNM: RSY}.
Search from node SDJ. Updated matching: {HNM: SDJ, QQF: RSY}.
So the maximum matching is ",2,4,180
bipartite,"[(NMW, WQG), (NMW, TAZ), (NQX, WQG), (NQX, TAZ), (NQX, CIV), (NQX, ZEH)]","{NMW: [WQG, TAZ],
NQX: [WQG, TAZ, CIV, ZEH],
WQG: [NMW, NQX],
TAZ: [NMW, NQX],
CIV: [NQX],
ZEH: [NQX]}","Node NMW is connected to nodes WQG, TAZ.
Node NQX is connected to nodes WQG, TAZ, CIV, ZEH.
Node WQG is connected to nodes NMW, NQX.
Node TAZ is connected to nodes NMW, NQX.
Node CIV is connected to node NQX.
Node ZEH is connected to node NQX.","[NMW, NQX, WQG, TAZ, CIV, ZEH]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NMW NQX.
Nodes set 2 contains: WQG TAZ CIV ZEH.","[(NMW, TAZ), (NQX, WQG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NMW. Updated matching: {WQG: NMW}.
Search from node NQX. Updated matching: {WQG: NQX, TAZ: NMW}.
So the maximum matching is ",2,4,181
bipartite,"[(PCG, ASV), (PCG, MMT), (PCG, NEO), (PCG, BQU), (PHT, ASV)]","{PCG: [ASV, MMT, NEO, BQU],
PHT: [ASV],
ASV: [PCG, PHT],
MMT: [PCG],
NEO: [PCG],
BQU: [PCG]}","Node PCG is connected to nodes ASV, MMT, NEO, BQU.
Node PHT is connected to node ASV.
Node ASV is connected to nodes PCG, PHT.
Node MMT is connected to node PCG.
Node NEO is connected to node PCG.
Node BQU is connected to node PCG.","[PCG, PHT, ASV, MMT, NEO, BQU]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PCG PHT.
Nodes set 2 contains: ASV MMT NEO BQU.","[(PCG, MMT), (PHT, ASV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PCG. Updated matching: {ASV: PCG}.
Search from node PHT. Updated matching: {ASV: PHT, MMT: PCG}.
So the maximum matching is ",2,4,182
bipartite,"[(AJS, YFO), (AJS, GAW), (AJS, RBY), (AJS, SNP), (STP, YFO), (STP, SNP)]","{AJS: [YFO, GAW, RBY, SNP],
STP: [YFO, SNP],
YFO: [AJS, STP],
GAW: [AJS],
RBY: [AJS],
SNP: [AJS, STP]}","Node AJS is connected to nodes YFO, GAW, RBY, SNP.
Node STP is connected to nodes YFO, SNP.
Node YFO is connected to nodes AJS, STP.
Node GAW is connected to node AJS.
Node RBY is connected to node AJS.
Node SNP is connected to nodes AJS, STP.","[AJS, STP, YFO, GAW, RBY, SNP]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: AJS STP.
Nodes set 2 contains: YFO GAW RBY SNP.","[(AJS, GAW), (STP, YFO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node AJS. Updated matching: {YFO: AJS}.
Search from node STP. Updated matching: {YFO: STP, GAW: AJS}.
So the maximum matching is ",2,4,183
bipartite,"[(UKK, CZT), (UKK, SRC), (UKK, AFV), (GOY, RFN), (GOY, SRC)]","{UKK: [CZT, SRC, AFV],
GOY: [RFN, SRC],
CZT: [UKK],
RFN: [GOY],
SRC: [UKK, GOY],
AFV: [UKK]}","Node UKK is connected to nodes CZT, SRC, AFV.
Node GOY is connected to nodes RFN, SRC.
Node CZT is connected to node UKK.
Node RFN is connected to node GOY.
Node SRC is connected to nodes UKK, GOY.
Node AFV is connected to node UKK.","[UKK, GOY, CZT, RFN, SRC, AFV]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UKK GOY.
Nodes set 2 contains: CZT RFN SRC AFV.","[(UKK, CZT), (GOY, RFN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UKK. Updated matching: {CZT: UKK}.
Search from node GOY. Updated matching: {CZT: UKK, RFN: GOY}.
So the maximum matching is ",2,4,184
bipartite,"[(SME, NZC), (SME, AAP), (SME, WIV), (MHP, SQS), (MHP, AAP), (MHP, WIV), (WTI, NZC)]","{SME: [NZC, AAP, WIV],
MHP: [SQS, AAP, WIV],
WTI: [NZC],
SQS: [MHP],
NZC: [SME, WTI],
AAP: [SME, MHP],
WIV: [SME, MHP]}","Node SME is connected to nodes NZC, AAP, WIV.
Node MHP is connected to nodes SQS, AAP, WIV.
Node WTI is connected to node NZC.
Node SQS is connected to node MHP.
Node NZC is connected to nodes SME, WTI.
Node AAP is connected to nodes SME, MHP.
Node WIV is connected to nodes SME, MHP.","[SME, MHP, WTI, SQS, NZC, AAP, WIV]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SME MHP WTI.
Nodes set 2 contains: SQS NZC AAP WIV.","[(SME, AAP), (MHP, SQS), (WTI, NZC)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SME. Updated matching: {NZC: SME}.
Search from node MHP. Updated matching: {NZC: SME, SQS: MHP}.
Search from node WTI. Updated matching: {NZC: WTI, SQS: MHP, AAP: SME}.
So the maximum matching is ",3,4,185
bipartite,"[(CEF, OWC), (CEF, NYR), (CVS, OCZ), (CVS, ENB), (CVS, NYR), (CVS, TLO)]","{CEF: [OWC, NYR],
CVS: [OCZ, ENB, NYR, TLO],
OCZ: [CVS],
OWC: [CEF],
ENB: [CVS],
NYR: [CEF, CVS],
TLO: [CVS]}","Node CEF is connected to nodes OWC, NYR.
Node CVS is connected to nodes OCZ, ENB, NYR, TLO.
Node OCZ is connected to node CVS.
Node OWC is connected to node CEF.
Node ENB is connected to node CVS.
Node NYR is connected to nodes CEF, CVS.
Node TLO is connected to node CVS.","[CEF, CVS, OCZ, OWC, ENB, NYR, TLO]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CEF CVS.
Nodes set 2 contains: OCZ OWC ENB NYR TLO.","[(CEF, OWC), (CVS, OCZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CEF. Updated matching: {OWC: CEF}.
Search from node CVS. Updated matching: {OWC: CEF, OCZ: CVS}.
So the maximum matching is ",2,5,186
bipartite,"[(RZC, OZQ), (RZC, SVZ), (MXA, MRN), (MXA, CJO), (MXA, SVZ)]","{RZC: [OZQ, SVZ],
MXA: [MRN, CJO, SVZ],
OZQ: [RZC],
MRN: [MXA],
CJO: [MXA],
SVZ: [RZC, MXA]}","Node RZC is connected to nodes OZQ, SVZ.
Node MXA is connected to nodes MRN, CJO, SVZ.
Node OZQ is connected to node RZC.
Node MRN is connected to node MXA.
Node CJO is connected to node MXA.
Node SVZ is connected to nodes RZC, MXA.","[RZC, MXA, OZQ, MRN, CJO, SVZ]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RZC MXA.
Nodes set 2 contains: OZQ MRN CJO SVZ.","[(RZC, OZQ), (MXA, MRN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RZC. Updated matching: {OZQ: RZC}.
Search from node MXA. Updated matching: {OZQ: RZC, MRN: MXA}.
So the maximum matching is ",2,4,187
bipartite,"[(BGI, WRL), (BGI, GKN), (BGI, VRI), (BGI, QTA), (JSK, GKN), (JSK, VRI), (JSK, TMN)]","{BGI: [WRL, GKN, VRI, QTA],
JSK: [GKN, VRI, TMN],
WRL: [BGI],
GKN: [BGI, JSK],
VRI: [BGI, JSK],
QTA: [BGI],
TMN: [JSK]}","Node BGI is connected to nodes WRL, GKN, VRI, QTA.
Node JSK is connected to nodes GKN, VRI, TMN.
Node WRL is connected to node BGI.
Node GKN is connected to nodes BGI, JSK.
Node VRI is connected to nodes BGI, JSK.
Node QTA is connected to node BGI.
Node TMN is connected to node JSK.","[BGI, JSK, WRL, GKN, VRI, QTA, TMN]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BGI JSK.
Nodes set 2 contains: WRL GKN VRI QTA TMN.","[(BGI, WRL), (JSK, GKN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BGI. Updated matching: {WRL: BGI}.
Search from node JSK. Updated matching: {WRL: BGI, GKN: JSK}.
So the maximum matching is ",2,5,188
bipartite,"[(TJP, XMU), (TJP, YYK), (TJP, EUF), (TJP, BMH), (TJP, GHQ)]","{TJP: [XMU, YYK, EUF, BMH, GHQ],
XMU: [TJP],
YYK: [TJP],
EUF: [TJP],
BMH: [TJP],
GHQ: [TJP]}","Node TJP is connected to nodes XMU, YYK, EUF, BMH, GHQ.
Node XMU is connected to node TJP.
Node YYK is connected to node TJP.
Node EUF is connected to node TJP.
Node BMH is connected to node TJP.
Node GHQ is connected to node TJP.","[TJP, XMU, YYK, EUF, BMH, GHQ]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TJP.
Nodes set 2 contains: XMU YYK EUF BMH GHQ.","[(TJP, XMU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TJP. Updated matching: {XMU: TJP}.
So the maximum matching is ",1,5,189
bipartite,"[(PJG, ODJ), (GQM, VLU), (GQM, WEJ), (GQM, GMS), (GQM, ODJ)]","{PJG: [ODJ],
GQM: [VLU, WEJ, GMS, ODJ],
VLU: [GQM],
WEJ: [GQM],
GMS: [GQM],
ODJ: [PJG, GQM]}","Node PJG is connected to node ODJ.
Node GQM is connected to nodes VLU, WEJ, GMS, ODJ.
Node VLU is connected to node GQM.
Node WEJ is connected to node GQM.
Node GMS is connected to node GQM.
Node ODJ is connected to nodes PJG, GQM.","[PJG, GQM, VLU, WEJ, GMS, ODJ]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PJG GQM.
Nodes set 2 contains: VLU WEJ GMS ODJ.","[(PJG, ODJ), (GQM, VLU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PJG. Updated matching: {ODJ: PJG}.
Search from node GQM. Updated matching: {ODJ: PJG, VLU: GQM}.
So the maximum matching is ",2,4,190
bipartite,"[(VBJ, JED), (VBJ, WZY), (VBJ, GMW), (BIQ, JED), (BIQ, KST), (BIQ, WZY), (BIQ, ZBB)]","{VBJ: [JED, WZY, GMW],
BIQ: [JED, KST, WZY, ZBB],
JED: [VBJ, BIQ],
KST: [BIQ],
WZY: [VBJ, BIQ],
GMW: [VBJ],
ZBB: [BIQ]}","Node VBJ is connected to nodes JED, WZY, GMW.
Node BIQ is connected to nodes JED, KST, WZY, ZBB.
Node JED is connected to nodes VBJ, BIQ.
Node KST is connected to node BIQ.
Node WZY is connected to nodes VBJ, BIQ.
Node GMW is connected to node VBJ.
Node ZBB is connected to node BIQ.","[VBJ, BIQ, JED, KST, WZY, GMW, ZBB]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VBJ BIQ.
Nodes set 2 contains: JED KST WZY GMW ZBB.","[(VBJ, WZY), (BIQ, JED)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VBJ. Updated matching: {JED: VBJ}.
Search from node BIQ. Updated matching: {JED: BIQ, WZY: VBJ}.
So the maximum matching is ",2,5,191
bipartite,"[(DXW, NWO), (DXW, XUE), (QXU, XPE), (QXU, NWO), (QXU, NBZ), (QXU, HDU)]","{DXW: [NWO, XUE],
QXU: [XPE, NWO, NBZ, HDU],
XPE: [QXU],
NWO: [DXW, QXU],
NBZ: [QXU],
HDU: [QXU],
XUE: [DXW]}","Node DXW is connected to nodes NWO, XUE.
Node QXU is connected to nodes XPE, NWO, NBZ, HDU.
Node XPE is connected to node QXU.
Node NWO is connected to nodes DXW, QXU.
Node NBZ is connected to node QXU.
Node HDU is connected to node QXU.
Node XUE is connected to node DXW.","[DXW, QXU, XPE, NWO, NBZ, HDU, XUE]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DXW QXU.
Nodes set 2 contains: XPE NWO NBZ HDU XUE.","[(DXW, NWO), (QXU, XPE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DXW. Updated matching: {NWO: DXW}.
Search from node QXU. Updated matching: {NWO: DXW, XPE: QXU}.
So the maximum matching is ",2,5,192
bipartite,"[(XJG, DGR), (XJG, AGL), (XJG, TSY), (ANX, LAU), (ANX, GZQ), (ANX, TSY)]","{XJG: [DGR, AGL, TSY],
ANX: [LAU, GZQ, TSY],
LAU: [ANX],
DGR: [XJG],
GZQ: [ANX],
AGL: [XJG],
TSY: [XJG, ANX]}","Node XJG is connected to nodes DGR, AGL, TSY.
Node ANX is connected to nodes LAU, GZQ, TSY.
Node LAU is connected to node ANX.
Node DGR is connected to node XJG.
Node GZQ is connected to node ANX.
Node AGL is connected to node XJG.
Node TSY is connected to nodes XJG, ANX.","[XJG, ANX, LAU, DGR, GZQ, AGL, TSY]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XJG ANX.
Nodes set 2 contains: LAU DGR GZQ AGL TSY.","[(XJG, DGR), (ANX, LAU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XJG. Updated matching: {DGR: XJG}.
Search from node ANX. Updated matching: {DGR: XJG, LAU: ANX}.
So the maximum matching is ",2,5,193
bipartite,"[(SZS, SCU), (SZS, BOA), (SZS, QPG), (TDW, BOA), (TDW, QPG), (TDW, EQC)]","{SZS: [SCU, BOA, QPG],
TDW: [BOA, QPG, EQC],
SCU: [SZS],
BOA: [SZS, TDW],
QPG: [SZS, TDW],
EQC: [TDW]}","Node SZS is connected to nodes SCU, BOA, QPG.
Node TDW is connected to nodes BOA, QPG, EQC.
Node SCU is connected to node SZS.
Node BOA is connected to nodes SZS, TDW.
Node QPG is connected to nodes SZS, TDW.
Node EQC is connected to node TDW.","[SZS, TDW, SCU, BOA, QPG, EQC]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SZS TDW.
Nodes set 2 contains: SCU BOA QPG EQC.","[(SZS, SCU), (TDW, BOA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SZS. Updated matching: {SCU: SZS}.
Search from node TDW. Updated matching: {SCU: SZS, BOA: TDW}.
So the maximum matching is ",2,4,194
bipartite,"[(FXZ, EQK), (FXZ, DCS), (FXZ, LGX), (FXZ, LIE)]","{FXZ: [EQK, DCS, LGX, LIE],
EQK: [FXZ],
DCS: [FXZ],
LGX: [FXZ],
LIE: [FXZ]}","Node FXZ is connected to nodes EQK, DCS, LGX, LIE.
Node EQK is connected to node FXZ.
Node DCS is connected to node FXZ.
Node LGX is connected to node FXZ.
Node LIE is connected to node FXZ.","[FXZ, EQK, DCS, LGX, LIE]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FXZ.
Nodes set 2 contains: EQK DCS LGX LIE.","[(FXZ, EQK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FXZ. Updated matching: {EQK: FXZ}.
So the maximum matching is ",1,4,195
bipartite,"[(VAT, MXF), (VAT, HFL), (VAT, WDW), (EQO, MXF), (EQO, WDW)]","{VAT: [MXF, HFL, WDW],
EQO: [MXF, WDW],
MXF: [VAT, EQO],
HFL: [VAT],
WDW: [VAT, EQO]}","Node VAT is connected to nodes MXF, HFL, WDW.
Node EQO is connected to nodes MXF, WDW.
Node MXF is connected to nodes VAT, EQO.
Node HFL is connected to node VAT.
Node WDW is connected to nodes VAT, EQO.","[VAT, EQO, MXF, HFL, WDW]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VAT EQO.
Nodes set 2 contains: MXF HFL WDW.","[(VAT, HFL), (EQO, MXF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VAT. Updated matching: {MXF: VAT}.
Search from node EQO. Updated matching: {MXF: EQO, HFL: VAT}.
So the maximum matching is ",2,3,196
bipartite,"[(PAH, BIH), (PAH, GAH), (PAH, QAS), (PAH, LUV), (CTF, LUV)]","{PAH: [BIH, GAH, QAS, LUV],
CTF: [LUV],
BIH: [PAH],
GAH: [PAH],
QAS: [PAH],
LUV: [PAH, CTF]}","Node PAH is connected to nodes BIH, GAH, QAS, LUV.
Node CTF is connected to node LUV.
Node BIH is connected to node PAH.
Node GAH is connected to node PAH.
Node QAS is connected to node PAH.
Node LUV is connected to nodes PAH, CTF.","[PAH, CTF, BIH, GAH, QAS, LUV]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PAH CTF.
Nodes set 2 contains: BIH GAH QAS LUV.","[(PAH, BIH), (CTF, LUV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PAH. Updated matching: {BIH: PAH}.
Search from node CTF. Updated matching: {BIH: PAH, LUV: CTF}.
So the maximum matching is ",2,4,197
bipartite,"[(EVU, CFS), (NUR, SVF), (NUR, KZO), (NUR, FZT), (MDM, KZO), (MDM, CFS)]","{EVU: [CFS],
NUR: [SVF, KZO, FZT],
MDM: [KZO, CFS],
SVF: [NUR],
KZO: [NUR, MDM],
CFS: [EVU, MDM],
FZT: [NUR]}","Node EVU is connected to node CFS.
Node NUR is connected to nodes SVF, KZO, FZT.
Node MDM is connected to nodes KZO, CFS.
Node SVF is connected to node NUR.
Node KZO is connected to nodes NUR, MDM.
Node CFS is connected to nodes EVU, MDM.
Node FZT is connected to node NUR.","[EVU, NUR, MDM, SVF, KZO, CFS, FZT]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: EVU NUR MDM.
Nodes set 2 contains: SVF KZO CFS FZT.","[(EVU, CFS), (NUR, SVF), (MDM, KZO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node EVU. Updated matching: {CFS: EVU}.
Search from node NUR. Updated matching: {CFS: EVU, SVF: NUR}.
Search from node MDM. Updated matching: {CFS: EVU, SVF: NUR, KZO: MDM}.
So the maximum matching is ",3,4,198
bipartite,"[(RID, ROV), (RID, NKE), (WAZ, ROV), (WAZ, NKE), (WAZ, BKX)]","{RID: [ROV, NKE],
WAZ: [ROV, NKE, BKX],
ROV: [RID, WAZ],
NKE: [RID, WAZ],
BKX: [WAZ]}","Node RID is connected to nodes ROV, NKE.
Node WAZ is connected to nodes ROV, NKE, BKX.
Node ROV is connected to nodes RID, WAZ.
Node NKE is connected to nodes RID, WAZ.
Node BKX is connected to node WAZ.","[RID, WAZ, ROV, NKE, BKX]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RID WAZ.
Nodes set 2 contains: ROV NKE BKX.","[(RID, NKE), (WAZ, ROV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RID. Updated matching: {ROV: RID}.
Search from node WAZ. Updated matching: {ROV: WAZ, NKE: RID}.
So the maximum matching is ",2,3,199
bipartite,"[(GEQ, BBO), (GEQ, TCP), (ETC, TCP), (ETC, HCB)]","{GEQ: [BBO, TCP],
ETC: [TCP, HCB],
BBO: [GEQ],
TCP: [GEQ, ETC],
HCB: [ETC]}","Node GEQ is connected to nodes BBO, TCP.
Node ETC is connected to nodes TCP, HCB.
Node BBO is connected to node GEQ.
Node TCP is connected to nodes GEQ, ETC.
Node HCB is connected to node ETC.","[GEQ, ETC, BBO, TCP, HCB]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GEQ ETC.
Nodes set 2 contains: BBO TCP HCB.","[(GEQ, BBO), (ETC, TCP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GEQ. Updated matching: {BBO: GEQ}.
Search from node ETC. Updated matching: {BBO: GEQ, TCP: ETC}.
So the maximum matching is ",2,3,200
bipartite,"[(EPS, DVE), (EPS, AFX), (EPS, MHR), (ZQP, AFX)]","{EPS: [DVE, AFX, MHR],
ZQP: [AFX],
DVE: [EPS],
AFX: [EPS, ZQP],
MHR: [EPS]}","Node EPS is connected to nodes DVE, AFX, MHR.
Node ZQP is connected to node AFX.
Node DVE is connected to node EPS.
Node AFX is connected to nodes EPS, ZQP.
Node MHR is connected to node EPS.","[EPS, ZQP, DVE, AFX, MHR]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: EPS ZQP.
Nodes set 2 contains: DVE AFX MHR.","[(EPS, DVE), (ZQP, AFX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node EPS. Updated matching: {DVE: EPS}.
Search from node ZQP. Updated matching: {DVE: EPS, AFX: ZQP}.
So the maximum matching is ",2,3,201
bipartite,"[(YLB, GVA), (YLB, ABJ), (YLB, PWC), (YLB, JFA)]","{YLB: [GVA, ABJ, PWC, JFA],
GVA: [YLB],
ABJ: [YLB],
PWC: [YLB],
JFA: [YLB]}","Node YLB is connected to nodes GVA, ABJ, PWC, JFA.
Node GVA is connected to node YLB.
Node ABJ is connected to node YLB.
Node PWC is connected to node YLB.
Node JFA is connected to node YLB.","[YLB, GVA, ABJ, PWC, JFA]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YLB.
Nodes set 2 contains: GVA ABJ PWC JFA.","[(YLB, GVA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YLB. Updated matching: {GVA: YLB}.
So the maximum matching is ",1,4,202
bipartite,"[(XFD, JNV), (XFD, JDW), (XFD, CKY), (LQG, CMI), (LQG, YBD), (LQG, JDW), (LQG, CKY)]","{XFD: [JNV, JDW, CKY],
LQG: [CMI, YBD, JDW, CKY],
JNV: [XFD],
CMI: [LQG],
YBD: [LQG],
JDW: [XFD, LQG],
CKY: [XFD, LQG]}","Node XFD is connected to nodes JNV, JDW, CKY.
Node LQG is connected to nodes CMI, YBD, JDW, CKY.
Node JNV is connected to node XFD.
Node CMI is connected to node LQG.
Node YBD is connected to node LQG.
Node JDW is connected to nodes XFD, LQG.
Node CKY is connected to nodes XFD, LQG.","[XFD, LQG, JNV, CMI, YBD, JDW, CKY]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XFD LQG.
Nodes set 2 contains: JNV CMI YBD JDW CKY.","[(XFD, JNV), (LQG, CMI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XFD. Updated matching: {JNV: XFD}.
Search from node LQG. Updated matching: {JNV: XFD, CMI: LQG}.
So the maximum matching is ",2,5,203
bipartite,"[(MMF, JNT), (MMF, RCT), (PQR, AAH), (PQR, RCT), (PQR, AZG), (LHI, JNT), (LHI, AZG)]","{MMF: [JNT, RCT],
PQR: [AAH, RCT, AZG],
LHI: [JNT, AZG],
AAH: [PQR],
JNT: [MMF, LHI],
RCT: [MMF, PQR],
AZG: [PQR, LHI]}","Node MMF is connected to nodes JNT, RCT.
Node PQR is connected to nodes AAH, RCT, AZG.
Node LHI is connected to nodes JNT, AZG.
Node AAH is connected to node PQR.
Node JNT is connected to nodes MMF, LHI.
Node RCT is connected to nodes MMF, PQR.
Node AZG is connected to nodes PQR, LHI.","[MMF, PQR, LHI, AAH, JNT, RCT, AZG]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MMF PQR LHI.
Nodes set 2 contains: AAH JNT RCT AZG.","[(MMF, RCT), (PQR, AAH), (LHI, JNT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MMF. Updated matching: {JNT: MMF}.
Search from node PQR. Updated matching: {JNT: MMF, AAH: PQR}.
Search from node LHI. Updated matching: {JNT: LHI, AAH: PQR, RCT: MMF}.
So the maximum matching is ",3,4,204
bipartite,"[(CIY, HPY), (CIY, GDA), (CIY, TIG), (DMY, GRR), (DMY, TIG), (KGA, GRR)]","{CIY: [HPY, GDA, TIG],
DMY: [GRR, TIG],
KGA: [GRR],
HPY: [CIY],
GRR: [DMY, KGA],
GDA: [CIY],
TIG: [CIY, DMY]}","Node CIY is connected to nodes HPY, GDA, TIG.
Node DMY is connected to nodes GRR, TIG.
Node KGA is connected to node GRR.
Node HPY is connected to node CIY.
Node GRR is connected to nodes DMY, KGA.
Node GDA is connected to node CIY.
Node TIG is connected to nodes CIY, DMY.","[CIY, DMY, KGA, HPY, GRR, GDA, TIG]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CIY DMY KGA.
Nodes set 2 contains: HPY GRR GDA TIG.","[(CIY, HPY), (DMY, TIG), (KGA, GRR)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CIY. Updated matching: {HPY: CIY}.
Search from node DMY. Updated matching: {HPY: CIY, GRR: DMY}.
Search from node KGA. Updated matching: {HPY: CIY, GRR: KGA, TIG: DMY}.
So the maximum matching is ",3,4,205
bipartite,"[(KVE, WCC), (KVE, BAU), (KVE, PPF), (KVE, LHZ), (ZOM, WCC), (FHB, WCC), (FHB, PPF), (FHB, LHZ)]","{KVE: [WCC, BAU, PPF, LHZ],
ZOM: [WCC],
FHB: [WCC, PPF, LHZ],
WCC: [KVE, ZOM, FHB],
BAU: [KVE],
PPF: [KVE, FHB],
LHZ: [KVE, FHB]}","Node KVE is connected to nodes WCC, BAU, PPF, LHZ.
Node ZOM is connected to node WCC.
Node FHB is connected to nodes WCC, PPF, LHZ.
Node WCC is connected to nodes KVE, ZOM, FHB.
Node BAU is connected to node KVE.
Node PPF is connected to nodes KVE, FHB.
Node LHZ is connected to nodes KVE, FHB.","[KVE, ZOM, FHB, WCC, BAU, PPF, LHZ]",7,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: KVE ZOM FHB.
Nodes set 2 contains: WCC BAU PPF LHZ.","[(KVE, BAU), (ZOM, WCC), (FHB, PPF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node KVE. Updated matching: {WCC: KVE}.
Search from node ZOM. Updated matching: {WCC: ZOM, BAU: KVE}.
Search from node FHB. Updated matching: {WCC: ZOM, BAU: KVE, PPF: FHB}.
So the maximum matching is ",3,4,206
bipartite,"[(AUD, THE), (AUD, LMV), (SXD, AGF), (SXD, LMV)]","{AUD: [THE, LMV],
SXD: [AGF, LMV],
THE: [AUD],
AGF: [SXD],
LMV: [AUD, SXD]}","Node AUD is connected to nodes THE, LMV.
Node SXD is connected to nodes AGF, LMV.
Node THE is connected to node AUD.
Node AGF is connected to node SXD.
Node LMV is connected to nodes AUD, SXD.","[AUD, SXD, THE, AGF, LMV]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: AUD SXD.
Nodes set 2 contains: THE AGF LMV.","[(AUD, THE), (SXD, AGF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node AUD. Updated matching: {THE: AUD}.
Search from node SXD. Updated matching: {THE: AUD, AGF: SXD}.
So the maximum matching is ",2,3,207
bipartite,"[(HML, GWA), (HML, ITC), (HML, AVA), (ZPQ, QFO), (ZPQ, GWA), (ZPQ, ITC), (ZPQ, AVA), (ZPQ, TFH)]","{HML: [GWA, ITC, AVA],
ZPQ: [QFO, GWA, ITC, AVA, TFH],
QFO: [ZPQ],
GWA: [HML, ZPQ],
ITC: [HML, ZPQ],
AVA: [HML, ZPQ],
TFH: [ZPQ]}","Node HML is connected to nodes GWA, ITC, AVA.
Node ZPQ is connected to nodes QFO, GWA, ITC, AVA, TFH.
Node QFO is connected to node ZPQ.
Node GWA is connected to nodes HML, ZPQ.
Node ITC is connected to nodes HML, ZPQ.
Node AVA is connected to nodes HML, ZPQ.
Node TFH is connected to node ZPQ.","[HML, ZPQ, QFO, GWA, ITC, AVA, TFH]",7,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HML ZPQ.
Nodes set 2 contains: QFO GWA ITC AVA TFH.","[(HML, GWA), (ZPQ, QFO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HML. Updated matching: {GWA: HML}.
Search from node ZPQ. Updated matching: {GWA: HML, QFO: ZPQ}.
So the maximum matching is ",2,5,208
bipartite,"[(THG, PCM), (THG, DUE), (THG, EVP), (ALU, DUE), (ALU, ATS)]","{THG: [PCM, DUE, EVP],
ALU: [DUE, ATS],
PCM: [THG],
DUE: [THG, ALU],
ATS: [ALU],
EVP: [THG]}","Node THG is connected to nodes PCM, DUE, EVP.
Node ALU is connected to nodes DUE, ATS.
Node PCM is connected to node THG.
Node DUE is connected to nodes THG, ALU.
Node ATS is connected to node ALU.
Node EVP is connected to node THG.","[THG, ALU, PCM, DUE, ATS, EVP]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: THG ALU.
Nodes set 2 contains: PCM DUE ATS EVP.","[(THG, PCM), (ALU, DUE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node THG. Updated matching: {PCM: THG}.
Search from node ALU. Updated matching: {PCM: THG, DUE: ALU}.
So the maximum matching is ",2,4,209
bipartite,"[(ZXL, CYC), (ZXL, TAV), (ZXL, YOC), (BDF, ZJW), (BDF, CYC), (BDF, SYT)]","{ZXL: [CYC, TAV, YOC],
BDF: [ZJW, CYC, SYT],
ZJW: [BDF],
CYC: [ZXL, BDF],
TAV: [ZXL],
SYT: [BDF],
YOC: [ZXL]}","Node ZXL is connected to nodes CYC, TAV, YOC.
Node BDF is connected to nodes ZJW, CYC, SYT.
Node ZJW is connected to node BDF.
Node CYC is connected to nodes ZXL, BDF.
Node TAV is connected to node ZXL.
Node SYT is connected to node BDF.
Node YOC is connected to node ZXL.","[ZXL, BDF, ZJW, CYC, TAV, SYT, YOC]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZXL BDF.
Nodes set 2 contains: ZJW CYC TAV SYT YOC.","[(ZXL, CYC), (BDF, ZJW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZXL. Updated matching: {CYC: ZXL}.
Search from node BDF. Updated matching: {CYC: ZXL, ZJW: BDF}.
So the maximum matching is ",2,5,210
bipartite,"[(CLX, NXJ), (CLX, GFL), (CLX, DOF), (ASQ, HKB), (ASQ, NXJ)]","{CLX: [NXJ, GFL, DOF],
ASQ: [HKB, NXJ],
HKB: [ASQ],
NXJ: [CLX, ASQ],
GFL: [CLX],
DOF: [CLX]}","Node CLX is connected to nodes NXJ, GFL, DOF.
Node ASQ is connected to nodes HKB, NXJ.
Node HKB is connected to node ASQ.
Node NXJ is connected to nodes CLX, ASQ.
Node GFL is connected to node CLX.
Node DOF is connected to node CLX.","[CLX, ASQ, HKB, NXJ, GFL, DOF]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CLX ASQ.
Nodes set 2 contains: HKB NXJ GFL DOF.","[(CLX, NXJ), (ASQ, HKB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CLX. Updated matching: {NXJ: CLX}.
Search from node ASQ. Updated matching: {NXJ: CLX, HKB: ASQ}.
So the maximum matching is ",2,4,211
bipartite,"[(WNC, ZZM), (WNC, UYW), (WIU, TAO), (WIU, MFO), (WIU, ZZM)]","{WNC: [ZZM, UYW],
WIU: [TAO, MFO, ZZM],
TAO: [WIU],
MFO: [WIU],
ZZM: [WNC, WIU],
UYW: [WNC]}","Node WNC is connected to nodes ZZM, UYW.
Node WIU is connected to nodes TAO, MFO, ZZM.
Node TAO is connected to node WIU.
Node MFO is connected to node WIU.
Node ZZM is connected to nodes WNC, WIU.
Node UYW is connected to node WNC.","[WNC, WIU, TAO, MFO, ZZM, UYW]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WNC WIU.
Nodes set 2 contains: TAO MFO ZZM UYW.","[(WNC, ZZM), (WIU, TAO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WNC. Updated matching: {ZZM: WNC}.
Search from node WIU. Updated matching: {ZZM: WNC, TAO: WIU}.
So the maximum matching is ",2,4,212
bipartite,"[(MDY, GQX), (MDY, QNC), (MDY, WTY), (MDY, ZPG)]","{MDY: [GQX, QNC, WTY, ZPG],
GQX: [MDY],
QNC: [MDY],
WTY: [MDY],
ZPG: [MDY]}","Node MDY is connected to nodes GQX, QNC, WTY, ZPG.
Node GQX is connected to node MDY.
Node QNC is connected to node MDY.
Node WTY is connected to node MDY.
Node ZPG is connected to node MDY.","[MDY, GQX, QNC, WTY, ZPG]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MDY.
Nodes set 2 contains: GQX QNC WTY ZPG.","[(MDY, GQX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MDY. Updated matching: {GQX: MDY}.
So the maximum matching is ",1,4,213
bipartite,"[(RYD, ZHY), (RYD, WCN), (LXV, AEQ), (LXV, WCN)]","{RYD: [ZHY, WCN],
LXV: [AEQ, WCN],
AEQ: [LXV],
ZHY: [RYD],
WCN: [RYD, LXV]}","Node RYD is connected to nodes ZHY, WCN.
Node LXV is connected to nodes AEQ, WCN.
Node AEQ is connected to node LXV.
Node ZHY is connected to node RYD.
Node WCN is connected to nodes RYD, LXV.","[RYD, LXV, AEQ, ZHY, WCN]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RYD LXV.
Nodes set 2 contains: AEQ ZHY WCN.","[(RYD, ZHY), (LXV, AEQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RYD. Updated matching: {ZHY: RYD}.
Search from node LXV. Updated matching: {ZHY: RYD, AEQ: LXV}.
So the maximum matching is ",2,3,214
bipartite,"[(FXI, HRT), (FXI, LLQ), (FXI, VEN), (FXI, RAP), (KPJ, VEN), (KPJ, RAP), (DDN, LLQ), (DDN, VEN)]","{FXI: [HRT, LLQ, VEN, RAP],
KPJ: [VEN, RAP],
DDN: [LLQ, VEN],
HRT: [FXI],
LLQ: [FXI, DDN],
VEN: [FXI, KPJ, DDN],
RAP: [FXI, KPJ]}","Node FXI is connected to nodes HRT, LLQ, VEN, RAP.
Node KPJ is connected to nodes VEN, RAP.
Node DDN is connected to nodes LLQ, VEN.
Node HRT is connected to node FXI.
Node LLQ is connected to nodes FXI, DDN.
Node VEN is connected to nodes FXI, KPJ, DDN.
Node RAP is connected to nodes FXI, KPJ.","[FXI, KPJ, DDN, HRT, LLQ, VEN, RAP]",7,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FXI KPJ DDN.
Nodes set 2 contains: HRT LLQ VEN RAP.","[(FXI, HRT), (KPJ, VEN), (DDN, LLQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FXI. Updated matching: {HRT: FXI}.
Search from node KPJ. Updated matching: {HRT: FXI, VEN: KPJ}.
Search from node DDN. Updated matching: {HRT: FXI, VEN: KPJ, LLQ: DDN}.
So the maximum matching is ",3,4,215
bipartite,"[(ZSW, CAH), (ZSW, INT), (ESQ, CAH), (ESQ, INT), (ESQ, FXG)]","{ZSW: [CAH, INT],
ESQ: [CAH, INT, FXG],
CAH: [ZSW, ESQ],
INT: [ZSW, ESQ],
FXG: [ESQ]}","Node ZSW is connected to nodes CAH, INT.
Node ESQ is connected to nodes CAH, INT, FXG.
Node CAH is connected to nodes ZSW, ESQ.
Node INT is connected to nodes ZSW, ESQ.
Node FXG is connected to node ESQ.","[ZSW, ESQ, CAH, INT, FXG]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZSW ESQ.
Nodes set 2 contains: CAH INT FXG.","[(ZSW, INT), (ESQ, CAH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZSW. Updated matching: {CAH: ZSW}.
Search from node ESQ. Updated matching: {CAH: ESQ, INT: ZSW}.
So the maximum matching is ",2,3,216
bipartite,"[(FDB, NCR), (FDB, WER), (EXJ, WER), (EXJ, VXZ)]","{FDB: [NCR, WER],
EXJ: [WER, VXZ],
NCR: [FDB],
WER: [FDB, EXJ],
VXZ: [EXJ]}","Node FDB is connected to nodes NCR, WER.
Node EXJ is connected to nodes WER, VXZ.
Node NCR is connected to node FDB.
Node WER is connected to nodes FDB, EXJ.
Node VXZ is connected to node EXJ.","[FDB, EXJ, NCR, WER, VXZ]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FDB EXJ.
Nodes set 2 contains: NCR WER VXZ.","[(FDB, NCR), (EXJ, WER)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FDB. Updated matching: {NCR: FDB}.
Search from node EXJ. Updated matching: {NCR: FDB, WER: EXJ}.
So the maximum matching is ",2,3,217
bipartite,"[(JYA, XSA), (JYA, XBE), (CNL, KWC), (CNL, XBE)]","{JYA: [XSA, XBE],
CNL: [KWC, XBE],
XSA: [JYA],
KWC: [CNL],
XBE: [JYA, CNL]}","Node JYA is connected to nodes XSA, XBE.
Node CNL is connected to nodes KWC, XBE.
Node XSA is connected to node JYA.
Node KWC is connected to node CNL.
Node XBE is connected to nodes JYA, CNL.","[JYA, CNL, XSA, KWC, XBE]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JYA CNL.
Nodes set 2 contains: XSA KWC XBE.","[(JYA, XSA), (CNL, KWC)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JYA. Updated matching: {XSA: JYA}.
Search from node CNL. Updated matching: {XSA: JYA, KWC: CNL}.
So the maximum matching is ",2,3,218
bipartite,"[(KRB, QYB), (KRB, JQH), (KRB, CBL), (KRB, JSV), (KRB, ACD)]","{KRB: [QYB, JQH, CBL, JSV, ACD],
QYB: [KRB],
JQH: [KRB],
CBL: [KRB],
JSV: [KRB],
ACD: [KRB]}","Node KRB is connected to nodes QYB, JQH, CBL, JSV, ACD.
Node QYB is connected to node KRB.
Node JQH is connected to node KRB.
Node CBL is connected to node KRB.
Node JSV is connected to node KRB.
Node ACD is connected to node KRB.","[KRB, QYB, JQH, CBL, JSV, ACD]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: KRB.
Nodes set 2 contains: QYB JQH CBL JSV ACD.","[(KRB, QYB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node KRB. Updated matching: {QYB: KRB}.
So the maximum matching is ",1,5,219
bipartite,"[(YYW, LVG), (YYW, GZY), (CLP, ZWR), (CLP, GZY), (CLP, HSP)]","{YYW: [LVG, GZY],
CLP: [ZWR, GZY, HSP],
LVG: [YYW],
ZWR: [CLP],
GZY: [YYW, CLP],
HSP: [CLP]}","Node YYW is connected to nodes LVG, GZY.
Node CLP is connected to nodes ZWR, GZY, HSP.
Node LVG is connected to node YYW.
Node ZWR is connected to node CLP.
Node GZY is connected to nodes YYW, CLP.
Node HSP is connected to node CLP.","[YYW, CLP, LVG, ZWR, GZY, HSP]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YYW CLP.
Nodes set 2 contains: LVG ZWR GZY HSP.","[(YYW, LVG), (CLP, ZWR)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YYW. Updated matching: {LVG: YYW}.
Search from node CLP. Updated matching: {LVG: YYW, ZWR: CLP}.
So the maximum matching is ",2,4,220
bipartite,"[(OUZ, RGP), (OUZ, QQT), (EBL, DXO), (EBL, QQT), (EBL, DTR)]","{OUZ: [RGP, QQT],
EBL: [DXO, QQT, DTR],
DXO: [EBL],
RGP: [OUZ],
QQT: [OUZ, EBL],
DTR: [EBL]}","Node OUZ is connected to nodes RGP, QQT.
Node EBL is connected to nodes DXO, QQT, DTR.
Node DXO is connected to node EBL.
Node RGP is connected to node OUZ.
Node QQT is connected to nodes OUZ, EBL.
Node DTR is connected to node EBL.","[OUZ, EBL, DXO, RGP, QQT, DTR]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OUZ EBL.
Nodes set 2 contains: DXO RGP QQT DTR.","[(OUZ, RGP), (EBL, DXO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OUZ. Updated matching: {RGP: OUZ}.
Search from node EBL. Updated matching: {RGP: OUZ, DXO: EBL}.
So the maximum matching is ",2,4,221
bipartite,"[(CPD, VII), (CPD, FEH), (CPD, TPG), (CPD, HBO)]","{CPD: [VII, FEH, TPG, HBO],
VII: [CPD],
FEH: [CPD],
TPG: [CPD],
HBO: [CPD]}","Node CPD is connected to nodes VII, FEH, TPG, HBO.
Node VII is connected to node CPD.
Node FEH is connected to node CPD.
Node TPG is connected to node CPD.
Node HBO is connected to node CPD.","[CPD, VII, FEH, TPG, HBO]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CPD.
Nodes set 2 contains: VII FEH TPG HBO.","[(CPD, VII)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CPD. Updated matching: {VII: CPD}.
So the maximum matching is ",1,4,222
bipartite,"[(YOY, YGT), (YOY, VQY), (NCI, QQJ), (NCI, YGT), (NCI, LWC)]","{YOY: [YGT, VQY],
NCI: [QQJ, YGT, LWC],
QQJ: [NCI],
YGT: [YOY, NCI],
LWC: [NCI],
VQY: [YOY]}","Node YOY is connected to nodes YGT, VQY.
Node NCI is connected to nodes QQJ, YGT, LWC.
Node QQJ is connected to node NCI.
Node YGT is connected to nodes YOY, NCI.
Node LWC is connected to node NCI.
Node VQY is connected to node YOY.","[YOY, NCI, QQJ, YGT, LWC, VQY]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YOY NCI.
Nodes set 2 contains: QQJ YGT LWC VQY.","[(YOY, YGT), (NCI, QQJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YOY. Updated matching: {YGT: YOY}.
Search from node NCI. Updated matching: {YGT: YOY, QQJ: NCI}.
So the maximum matching is ",2,4,223
bipartite,"[(PQP, AMY), (PQP, ZYI), (WPW, SPL), (WPW, GPC), (WPW, AMY), (WPW, ZYI)]","{PQP: [AMY, ZYI],
WPW: [SPL, GPC, AMY, ZYI],
SPL: [WPW],
GPC: [WPW],
AMY: [PQP, WPW],
ZYI: [PQP, WPW]}","Node PQP is connected to nodes AMY, ZYI.
Node WPW is connected to nodes SPL, GPC, AMY, ZYI.
Node SPL is connected to node WPW.
Node GPC is connected to node WPW.
Node AMY is connected to nodes PQP, WPW.
Node ZYI is connected to nodes PQP, WPW.","[PQP, WPW, SPL, GPC, AMY, ZYI]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PQP WPW.
Nodes set 2 contains: SPL GPC AMY ZYI.","[(PQP, AMY), (WPW, SPL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PQP. Updated matching: {AMY: PQP}.
Search from node WPW. Updated matching: {AMY: PQP, SPL: WPW}.
So the maximum matching is ",2,4,224
bipartite,"[(CAS, ILY), (PNP, GDC), (PNP, ILY), (PNP, WXD), (PNP, SAX)]","{CAS: [ILY],
PNP: [GDC, ILY, WXD, SAX],
GDC: [PNP],
ILY: [CAS, PNP],
WXD: [PNP],
SAX: [PNP]}","Node CAS is connected to node ILY.
Node PNP is connected to nodes GDC, ILY, WXD, SAX.
Node GDC is connected to node PNP.
Node ILY is connected to nodes CAS, PNP.
Node WXD is connected to node PNP.
Node SAX is connected to node PNP.","[CAS, PNP, GDC, ILY, WXD, SAX]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CAS PNP.
Nodes set 2 contains: GDC ILY WXD SAX.","[(CAS, ILY), (PNP, GDC)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CAS. Updated matching: {ILY: CAS}.
Search from node PNP. Updated matching: {ILY: CAS, GDC: PNP}.
So the maximum matching is ",2,4,225
bipartite,"[(NJW, YOU), (UJH, YOU), (UJH, ESA), (UJH, BIW)]","{NJW: [YOU],
UJH: [YOU, ESA, BIW],
YOU: [NJW, UJH],
ESA: [UJH],
BIW: [UJH]}","Node NJW is connected to node YOU.
Node UJH is connected to nodes YOU, ESA, BIW.
Node YOU is connected to nodes NJW, UJH.
Node ESA is connected to node UJH.
Node BIW is connected to node UJH.","[NJW, UJH, YOU, ESA, BIW]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NJW UJH.
Nodes set 2 contains: YOU ESA BIW.","[(NJW, YOU), (UJH, ESA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NJW. Updated matching: {YOU: NJW}.
Search from node UJH. Updated matching: {YOU: NJW, ESA: UJH}.
So the maximum matching is ",2,3,226
bipartite,"[(TDS, UCX), (TDS, PJF), (ASS, MDA), (ASS, KND), (ASS, PJF), (LZG, UCX)]","{TDS: [UCX, PJF],
ASS: [MDA, KND, PJF],
LZG: [UCX],
MDA: [ASS],
UCX: [TDS, LZG],
KND: [ASS],
PJF: [TDS, ASS]}","Node TDS is connected to nodes UCX, PJF.
Node ASS is connected to nodes MDA, KND, PJF.
Node LZG is connected to node UCX.
Node MDA is connected to node ASS.
Node UCX is connected to nodes TDS, LZG.
Node KND is connected to node ASS.
Node PJF is connected to nodes TDS, ASS.","[TDS, ASS, LZG, MDA, UCX, KND, PJF]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TDS ASS LZG.
Nodes set 2 contains: MDA UCX KND PJF.","[(TDS, PJF), (ASS, MDA), (LZG, UCX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TDS. Updated matching: {UCX: TDS}.
Search from node ASS. Updated matching: {UCX: TDS, MDA: ASS}.
Search from node LZG. Updated matching: {UCX: LZG, MDA: ASS, PJF: TDS}.
So the maximum matching is ",3,4,227
bipartite,"[(RYM, XEZ), (RYM, BHL), (HQR, XEZ), (HQR, PPJ), (HQR, XGU)]","{RYM: [XEZ, BHL],
HQR: [XEZ, PPJ, XGU],
XEZ: [RYM, HQR],
BHL: [RYM],
PPJ: [HQR],
XGU: [HQR]}","Node RYM is connected to nodes XEZ, BHL.
Node HQR is connected to nodes XEZ, PPJ, XGU.
Node XEZ is connected to nodes RYM, HQR.
Node BHL is connected to node RYM.
Node PPJ is connected to node HQR.
Node XGU is connected to node HQR.","[RYM, HQR, XEZ, BHL, PPJ, XGU]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RYM HQR.
Nodes set 2 contains: XEZ BHL PPJ XGU.","[(RYM, BHL), (HQR, XEZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RYM. Updated matching: {XEZ: RYM}.
Search from node HQR. Updated matching: {XEZ: HQR, BHL: RYM}.
So the maximum matching is ",2,4,228
bipartite,"[(VMY, BHD), (VMY, HLT), (VMY, CVL), (VMY, KCH), (MXA, HLT)]","{VMY: [BHD, HLT, CVL, KCH],
MXA: [HLT],
BHD: [VMY],
HLT: [VMY, MXA],
CVL: [VMY],
KCH: [VMY]}","Node VMY is connected to nodes BHD, HLT, CVL, KCH.
Node MXA is connected to node HLT.
Node BHD is connected to node VMY.
Node HLT is connected to nodes VMY, MXA.
Node CVL is connected to node VMY.
Node KCH is connected to node VMY.","[VMY, MXA, BHD, HLT, CVL, KCH]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VMY MXA.
Nodes set 2 contains: BHD HLT CVL KCH.","[(VMY, BHD), (MXA, HLT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VMY. Updated matching: {BHD: VMY}.
Search from node MXA. Updated matching: {BHD: VMY, HLT: MXA}.
So the maximum matching is ",2,4,229
bipartite,"[(RJR, NBM), (RJR, RJY), (RJR, EPR), (IGA, LLA), (IGA, RJY), (IGA, EPR)]","{RJR: [NBM, RJY, EPR],
IGA: [LLA, RJY, EPR],
LLA: [IGA],
NBM: [RJR],
RJY: [RJR, IGA],
EPR: [RJR, IGA]}","Node RJR is connected to nodes NBM, RJY, EPR.
Node IGA is connected to nodes LLA, RJY, EPR.
Node LLA is connected to node IGA.
Node NBM is connected to node RJR.
Node RJY is connected to nodes RJR, IGA.
Node EPR is connected to nodes RJR, IGA.","[RJR, IGA, LLA, NBM, RJY, EPR]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RJR IGA.
Nodes set 2 contains: LLA NBM RJY EPR.","[(RJR, NBM), (IGA, LLA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RJR. Updated matching: {NBM: RJR}.
Search from node IGA. Updated matching: {NBM: RJR, LLA: IGA}.
So the maximum matching is ",2,4,230
bipartite,"[(JVV, NYV), (JVV, GDA), (JVV, FVE), (RPH, FVE)]","{JVV: [NYV, GDA, FVE],
RPH: [FVE],
NYV: [JVV],
GDA: [JVV],
FVE: [JVV, RPH]}","Node JVV is connected to nodes NYV, GDA, FVE.
Node RPH is connected to node FVE.
Node NYV is connected to node JVV.
Node GDA is connected to node JVV.
Node FVE is connected to nodes JVV, RPH.","[JVV, RPH, NYV, GDA, FVE]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JVV RPH.
Nodes set 2 contains: NYV GDA FVE.","[(JVV, NYV), (RPH, FVE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JVV. Updated matching: {NYV: JVV}.
Search from node RPH. Updated matching: {NYV: JVV, FVE: RPH}.
So the maximum matching is ",2,3,231
bipartite,"[(LLD, OLQ), (LLD, QZO), (LLD, SRS), (RNC, KHY), (RNC, QZO), (RNC, SRS)]","{LLD: [OLQ, QZO, SRS],
RNC: [KHY, QZO, SRS],
KHY: [RNC],
OLQ: [LLD],
QZO: [LLD, RNC],
SRS: [LLD, RNC]}","Node LLD is connected to nodes OLQ, QZO, SRS.
Node RNC is connected to nodes KHY, QZO, SRS.
Node KHY is connected to node RNC.
Node OLQ is connected to node LLD.
Node QZO is connected to nodes LLD, RNC.
Node SRS is connected to nodes LLD, RNC.","[LLD, RNC, KHY, OLQ, QZO, SRS]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LLD RNC.
Nodes set 2 contains: KHY OLQ QZO SRS.","[(LLD, OLQ), (RNC, KHY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LLD. Updated matching: {OLQ: LLD}.
Search from node RNC. Updated matching: {OLQ: LLD, KHY: RNC}.
So the maximum matching is ",2,4,232
bipartite,"[(WQR, DZG), (WQR, HWG), (WQR, SPO), (ACZ, HWG), (ACZ, IOU), (ACZ, CIB)]","{WQR: [DZG, HWG, SPO],
ACZ: [HWG, IOU, CIB],
DZG: [WQR],
HWG: [WQR, ACZ],
SPO: [WQR],
IOU: [ACZ],
CIB: [ACZ]}","Node WQR is connected to nodes DZG, HWG, SPO.
Node ACZ is connected to nodes HWG, IOU, CIB.
Node DZG is connected to node WQR.
Node HWG is connected to nodes WQR, ACZ.
Node SPO is connected to node WQR.
Node IOU is connected to node ACZ.
Node CIB is connected to node ACZ.","[WQR, ACZ, DZG, HWG, SPO, IOU, CIB]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WQR ACZ.
Nodes set 2 contains: DZG HWG SPO IOU CIB.","[(WQR, DZG), (ACZ, HWG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WQR. Updated matching: {DZG: WQR}.
Search from node ACZ. Updated matching: {DZG: WQR, HWG: ACZ}.
So the maximum matching is ",2,5,233
bipartite,"[(OLP, VER), (OLP, NUA), (OLP, OOI), (OLP, VWG)]","{OLP: [VER, NUA, OOI, VWG],
VER: [OLP],
NUA: [OLP],
OOI: [OLP],
VWG: [OLP]}","Node OLP is connected to nodes VER, NUA, OOI, VWG.
Node VER is connected to node OLP.
Node NUA is connected to node OLP.
Node OOI is connected to node OLP.
Node VWG is connected to node OLP.","[OLP, VER, NUA, OOI, VWG]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OLP.
Nodes set 2 contains: VER NUA OOI VWG.","[(OLP, VER)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OLP. Updated matching: {VER: OLP}.
So the maximum matching is ",1,4,234
bipartite,"[(SHQ, TKU), (PQF, NDF), (PQF, TKU), (PQF, RKY), (PQF, TQF), (SGP, NDF)]","{SHQ: [TKU],
PQF: [NDF, TKU, RKY, TQF],
SGP: [NDF],
NDF: [PQF, SGP],
TKU: [SHQ, PQF],
RKY: [PQF],
TQF: [PQF]}","Node SHQ is connected to node TKU.
Node PQF is connected to nodes NDF, TKU, RKY, TQF.
Node SGP is connected to node NDF.
Node NDF is connected to nodes PQF, SGP.
Node TKU is connected to nodes SHQ, PQF.
Node RKY is connected to node PQF.
Node TQF is connected to node PQF.","[SHQ, PQF, SGP, NDF, TKU, RKY, TQF]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SHQ PQF SGP.
Nodes set 2 contains: NDF TKU RKY TQF.","[(SHQ, TKU), (PQF, RKY), (SGP, NDF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SHQ. Updated matching: {TKU: SHQ}.
Search from node PQF. Updated matching: {TKU: SHQ, NDF: PQF}.
Search from node SGP. Updated matching: {TKU: SHQ, NDF: SGP, RKY: PQF}.
So the maximum matching is ",3,4,235
bipartite,"[(FSZ, KHO), (FSZ, RXD), (FSZ, LSH), (FSZ, CNR), (CBX, CNR)]","{FSZ: [KHO, RXD, LSH, CNR],
CBX: [CNR],
KHO: [FSZ],
RXD: [FSZ],
LSH: [FSZ],
CNR: [FSZ, CBX]}","Node FSZ is connected to nodes KHO, RXD, LSH, CNR.
Node CBX is connected to node CNR.
Node KHO is connected to node FSZ.
Node RXD is connected to node FSZ.
Node LSH is connected to node FSZ.
Node CNR is connected to nodes FSZ, CBX.","[FSZ, CBX, KHO, RXD, LSH, CNR]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FSZ CBX.
Nodes set 2 contains: KHO RXD LSH CNR.","[(FSZ, KHO), (CBX, CNR)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FSZ. Updated matching: {KHO: FSZ}.
Search from node CBX. Updated matching: {KHO: FSZ, CNR: CBX}.
So the maximum matching is ",2,4,236
bipartite,"[(XBC, YTD), (XBC, OHG), (GFI, VZU), (GFI, YLI), (GFI, YTD), (GFI, ULF)]","{XBC: [YTD, OHG],
GFI: [VZU, YLI, YTD, ULF],
VZU: [GFI],
YLI: [GFI],
YTD: [XBC, GFI],
ULF: [GFI],
OHG: [XBC]}","Node XBC is connected to nodes YTD, OHG.
Node GFI is connected to nodes VZU, YLI, YTD, ULF.
Node VZU is connected to node GFI.
Node YLI is connected to node GFI.
Node YTD is connected to nodes XBC, GFI.
Node ULF is connected to node GFI.
Node OHG is connected to node XBC.","[XBC, GFI, VZU, YLI, YTD, ULF, OHG]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XBC GFI.
Nodes set 2 contains: VZU YLI YTD ULF OHG.","[(XBC, YTD), (GFI, VZU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XBC. Updated matching: {YTD: XBC}.
Search from node GFI. Updated matching: {YTD: XBC, VZU: GFI}.
So the maximum matching is ",2,5,237
bipartite,"[(FLP, RWV), (FLP, MML), (FLP, RAY), (FLP, PDP), (FLP, XPM), (WIQ, MML), (WIQ, RAY), (WIQ, PDP)]","{FLP: [RWV, MML, RAY, PDP, XPM],
WIQ: [MML, RAY, PDP],
RWV: [FLP],
MML: [FLP, WIQ],
RAY: [FLP, WIQ],
PDP: [FLP, WIQ],
XPM: [FLP]}","Node FLP is connected to nodes RWV, MML, RAY, PDP, XPM.
Node WIQ is connected to nodes MML, RAY, PDP.
Node RWV is connected to node FLP.
Node MML is connected to nodes FLP, WIQ.
Node RAY is connected to nodes FLP, WIQ.
Node PDP is connected to nodes FLP, WIQ.
Node XPM is connected to node FLP.","[FLP, WIQ, RWV, MML, RAY, PDP, XPM]",7,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FLP WIQ.
Nodes set 2 contains: RWV MML RAY PDP XPM.","[(FLP, RWV), (WIQ, MML)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FLP. Updated matching: {RWV: FLP}.
Search from node WIQ. Updated matching: {RWV: FLP, MML: WIQ}.
So the maximum matching is ",2,5,238
bipartite,"[(DRV, AOT), (DRV, GVY), (DRV, DPZ), (JLN, OQH), (JLN, GVY), (JLN, DPZ)]","{DRV: [AOT, GVY, DPZ],
JLN: [OQH, GVY, DPZ],
OQH: [JLN],
AOT: [DRV],
GVY: [DRV, JLN],
DPZ: [DRV, JLN]}","Node DRV is connected to nodes AOT, GVY, DPZ.
Node JLN is connected to nodes OQH, GVY, DPZ.
Node OQH is connected to node JLN.
Node AOT is connected to node DRV.
Node GVY is connected to nodes DRV, JLN.
Node DPZ is connected to nodes DRV, JLN.","[DRV, JLN, OQH, AOT, GVY, DPZ]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DRV JLN.
Nodes set 2 contains: OQH AOT GVY DPZ.","[(DRV, AOT), (JLN, OQH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DRV. Updated matching: {AOT: DRV}.
Search from node JLN. Updated matching: {AOT: DRV, OQH: JLN}.
So the maximum matching is ",2,4,239
bipartite,"[(JQQ, BVC), (JQQ, PEQ), (NTU, TXH), (NTU, ZPK), (NTU, BVC), (NTU, VYG)]","{JQQ: [BVC, PEQ],
NTU: [TXH, ZPK, BVC, VYG],
TXH: [NTU],
ZPK: [NTU],
BVC: [JQQ, NTU],
PEQ: [JQQ],
VYG: [NTU]}","Node JQQ is connected to nodes BVC, PEQ.
Node NTU is connected to nodes TXH, ZPK, BVC, VYG.
Node TXH is connected to node NTU.
Node ZPK is connected to node NTU.
Node BVC is connected to nodes JQQ, NTU.
Node PEQ is connected to node JQQ.
Node VYG is connected to node NTU.","[JQQ, NTU, TXH, ZPK, BVC, PEQ, VYG]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JQQ NTU.
Nodes set 2 contains: TXH ZPK BVC PEQ VYG.","[(JQQ, BVC), (NTU, TXH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JQQ. Updated matching: {BVC: JQQ}.
Search from node NTU. Updated matching: {BVC: JQQ, TXH: NTU}.
So the maximum matching is ",2,5,240
bipartite,"[(RXS, WLP), (RXS, JWM), (NHK, TTR), (NHK, JWM), (EDJ, USN), (EDJ, TTR), (EDJ, JWM)]","{RXS: [WLP, JWM],
NHK: [TTR, JWM],
EDJ: [USN, TTR, JWM],
USN: [EDJ],
TTR: [NHK, EDJ],
WLP: [RXS],
JWM: [RXS, NHK, EDJ]}","Node RXS is connected to nodes WLP, JWM.
Node NHK is connected to nodes TTR, JWM.
Node EDJ is connected to nodes USN, TTR, JWM.
Node USN is connected to node EDJ.
Node TTR is connected to nodes NHK, EDJ.
Node WLP is connected to node RXS.
Node JWM is connected to nodes RXS, NHK, EDJ.","[RXS, NHK, EDJ, USN, TTR, WLP, JWM]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RXS NHK EDJ.
Nodes set 2 contains: USN TTR WLP JWM.","[(RXS, WLP), (NHK, TTR), (EDJ, USN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RXS. Updated matching: {WLP: RXS}.
Search from node NHK. Updated matching: {WLP: RXS, TTR: NHK}.
Search from node EDJ. Updated matching: {WLP: RXS, TTR: NHK, USN: EDJ}.
So the maximum matching is ",3,4,241
bipartite,"[(QZB, EZA), (KRB, ORP), (KRB, ZXQ), (KRB, EZA), (KRB, XWY)]","{QZB: [EZA],
KRB: [ORP, ZXQ, EZA, XWY],
ORP: [KRB],
ZXQ: [KRB],
EZA: [QZB, KRB],
XWY: [KRB]}","Node QZB is connected to node EZA.
Node KRB is connected to nodes ORP, ZXQ, EZA, XWY.
Node ORP is connected to node KRB.
Node ZXQ is connected to node KRB.
Node EZA is connected to nodes QZB, KRB.
Node XWY is connected to node KRB.","[QZB, KRB, ORP, ZXQ, EZA, XWY]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QZB KRB.
Nodes set 2 contains: ORP ZXQ EZA XWY.","[(QZB, EZA), (KRB, ORP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QZB. Updated matching: {EZA: QZB}.
Search from node KRB. Updated matching: {EZA: QZB, ORP: KRB}.
So the maximum matching is ",2,4,242
bipartite,"[(DUM, RXX), (DUM, KNC), (DUM, XGN), (DUM, UZV)]","{DUM: [RXX, KNC, XGN, UZV],
RXX: [DUM],
KNC: [DUM],
XGN: [DUM],
UZV: [DUM]}","Node DUM is connected to nodes RXX, KNC, XGN, UZV.
Node RXX is connected to node DUM.
Node KNC is connected to node DUM.
Node XGN is connected to node DUM.
Node UZV is connected to node DUM.","[DUM, RXX, KNC, XGN, UZV]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DUM.
Nodes set 2 contains: RXX KNC XGN UZV.","[(DUM, RXX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DUM. Updated matching: {RXX: DUM}.
So the maximum matching is ",1,4,243
bipartite,"[(FLB, ABV), (FLB, VEY), (CDN, ABV), (CDN, PUH)]","{FLB: [ABV, VEY],
CDN: [ABV, PUH],
ABV: [FLB, CDN],
PUH: [CDN],
VEY: [FLB]}","Node FLB is connected to nodes ABV, VEY.
Node CDN is connected to nodes ABV, PUH.
Node ABV is connected to nodes FLB, CDN.
Node PUH is connected to node CDN.
Node VEY is connected to node FLB.","[FLB, CDN, ABV, PUH, VEY]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FLB CDN.
Nodes set 2 contains: ABV PUH VEY.","[(FLB, VEY), (CDN, ABV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FLB. Updated matching: {ABV: FLB}.
Search from node CDN. Updated matching: {ABV: CDN, VEY: FLB}.
So the maximum matching is ",2,3,244
bipartite,"[(GFQ, HTN), (GFQ, IFL), (GFQ, ZYX), (WQN, HTN), (WQN, ZYX), (WQN, KWR)]","{GFQ: [HTN, IFL, ZYX],
WQN: [HTN, ZYX, KWR],
HTN: [GFQ, WQN],
IFL: [GFQ],
ZYX: [GFQ, WQN],
KWR: [WQN]}","Node GFQ is connected to nodes HTN, IFL, ZYX.
Node WQN is connected to nodes HTN, ZYX, KWR.
Node HTN is connected to nodes GFQ, WQN.
Node IFL is connected to node GFQ.
Node ZYX is connected to nodes GFQ, WQN.
Node KWR is connected to node WQN.","[GFQ, WQN, HTN, IFL, ZYX, KWR]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GFQ WQN.
Nodes set 2 contains: HTN IFL ZYX KWR.","[(GFQ, IFL), (WQN, HTN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GFQ. Updated matching: {HTN: GFQ}.
Search from node WQN. Updated matching: {HTN: WQN, IFL: GFQ}.
So the maximum matching is ",2,4,245
bipartite,"[(CDL, SCY), (CDL, AFU), (CDL, MGI), (PZJ, SCY), (PZJ, QDM), (VMN, MGI)]","{CDL: [SCY, AFU, MGI],
PZJ: [SCY, QDM],
VMN: [MGI],
SCY: [CDL, PZJ],
AFU: [CDL],
QDM: [PZJ],
MGI: [CDL, VMN]}","Node CDL is connected to nodes SCY, AFU, MGI.
Node PZJ is connected to nodes SCY, QDM.
Node VMN is connected to node MGI.
Node SCY is connected to nodes CDL, PZJ.
Node AFU is connected to node CDL.
Node QDM is connected to node PZJ.
Node MGI is connected to nodes CDL, VMN.","[CDL, PZJ, VMN, SCY, AFU, QDM, MGI]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CDL PZJ VMN.
Nodes set 2 contains: SCY AFU QDM MGI.","[(CDL, AFU), (PZJ, SCY), (VMN, MGI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CDL. Updated matching: {SCY: CDL}.
Search from node PZJ. Updated matching: {SCY: PZJ, AFU: CDL}.
Search from node VMN. Updated matching: {SCY: PZJ, AFU: CDL, MGI: VMN}.
So the maximum matching is ",3,4,246
bipartite,"[(LIF, YJQ), (LIF, JID), (BWC, JID), (BWC, TUT), (FPI, JID), (FPI, TUT), (FPI, TRP)]","{LIF: [YJQ, JID],
BWC: [JID, TUT],
FPI: [JID, TUT, TRP],
YJQ: [LIF],
JID: [LIF, BWC, FPI],
TUT: [BWC, FPI],
TRP: [FPI]}","Node LIF is connected to nodes YJQ, JID.
Node BWC is connected to nodes JID, TUT.
Node FPI is connected to nodes JID, TUT, TRP.
Node YJQ is connected to node LIF.
Node JID is connected to nodes LIF, BWC, FPI.
Node TUT is connected to nodes BWC, FPI.
Node TRP is connected to node FPI.","[LIF, BWC, FPI, YJQ, JID, TUT, TRP]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LIF BWC FPI.
Nodes set 2 contains: YJQ JID TUT TRP.","[(LIF, YJQ), (BWC, TUT), (FPI, JID)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LIF. Updated matching: {YJQ: LIF}.
Search from node BWC. Updated matching: {YJQ: LIF, JID: BWC}.
Search from node FPI. Updated matching: {YJQ: LIF, JID: FPI, TUT: BWC}.
So the maximum matching is ",3,4,247
bipartite,"[(MHM, APZ), (MHM, IPR), (IVI, APZ), (IVI, FIN)]","{MHM: [APZ, IPR],
IVI: [APZ, FIN],
APZ: [MHM, IVI],
FIN: [IVI],
IPR: [MHM]}","Node MHM is connected to nodes APZ, IPR.
Node IVI is connected to nodes APZ, FIN.
Node APZ is connected to nodes MHM, IVI.
Node FIN is connected to node IVI.
Node IPR is connected to node MHM.","[MHM, IVI, APZ, FIN, IPR]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MHM IVI.
Nodes set 2 contains: APZ FIN IPR.","[(MHM, IPR), (IVI, APZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MHM. Updated matching: {APZ: MHM}.
Search from node IVI. Updated matching: {APZ: IVI, IPR: MHM}.
So the maximum matching is ",2,3,248
bipartite,"[(VSL, VOP), (VSL, LRC), (VSL, EMQ), (FZL, VOP), (FZL, LRC), (FZL, EMQ)]","{VSL: [VOP, LRC, EMQ],
FZL: [VOP, LRC, EMQ],
VOP: [VSL, FZL],
LRC: [VSL, FZL],
EMQ: [VSL, FZL]}","Node VSL is connected to nodes VOP, LRC, EMQ.
Node FZL is connected to nodes VOP, LRC, EMQ.
Node VOP is connected to nodes VSL, FZL.
Node LRC is connected to nodes VSL, FZL.
Node EMQ is connected to nodes VSL, FZL.","[VSL, FZL, VOP, LRC, EMQ]",5,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VSL FZL.
Nodes set 2 contains: VOP LRC EMQ.","[(VSL, LRC), (FZL, VOP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VSL. Updated matching: {VOP: VSL}.
Search from node FZL. Updated matching: {VOP: FZL, LRC: VSL}.
So the maximum matching is ",2,3,249
bipartite,"[(WMS, SHJ), (WMS, HGI), (WMS, GFC), (OND, SHJ), (OND, HGI)]","{WMS: [SHJ, HGI, GFC],
OND: [SHJ, HGI],
SHJ: [WMS, OND],
HGI: [WMS, OND],
GFC: [WMS]}","Node WMS is connected to nodes SHJ, HGI, GFC.
Node OND is connected to nodes SHJ, HGI.
Node SHJ is connected to nodes WMS, OND.
Node HGI is connected to nodes WMS, OND.
Node GFC is connected to node WMS.","[WMS, OND, SHJ, HGI, GFC]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WMS OND.
Nodes set 2 contains: SHJ HGI GFC.","[(WMS, HGI), (OND, SHJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WMS. Updated matching: {SHJ: WMS}.
Search from node OND. Updated matching: {SHJ: OND, HGI: WMS}.
So the maximum matching is ",2,3,250
bipartite,"[(XYM, DPD), (XYM, POO), (XYM, PAW), (VBG, DPD), (VBG, QIE), (VBG, POO)]","{XYM: [DPD, POO, PAW],
VBG: [DPD, QIE, POO],
DPD: [XYM, VBG],
QIE: [VBG],
POO: [XYM, VBG],
PAW: [XYM]}","Node XYM is connected to nodes DPD, POO, PAW.
Node VBG is connected to nodes DPD, QIE, POO.
Node DPD is connected to nodes XYM, VBG.
Node QIE is connected to node VBG.
Node POO is connected to nodes XYM, VBG.
Node PAW is connected to node XYM.","[XYM, VBG, DPD, QIE, POO, PAW]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XYM VBG.
Nodes set 2 contains: DPD QIE POO PAW.","[(XYM, POO), (VBG, DPD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XYM. Updated matching: {DPD: XYM}.
Search from node VBG. Updated matching: {DPD: VBG, POO: XYM}.
So the maximum matching is ",2,4,251
bipartite,"[(LDT, ZJP), (LDT, ARU), (LDT, ODS), (TFC, ARU), (ECN, ZJP), (ECN, VTV)]","{LDT: [ZJP, ARU, ODS],
TFC: [ARU],
ECN: [ZJP, VTV],
ZJP: [LDT, ECN],
VTV: [ECN],
ARU: [LDT, TFC],
ODS: [LDT]}","Node LDT is connected to nodes ZJP, ARU, ODS.
Node TFC is connected to node ARU.
Node ECN is connected to nodes ZJP, VTV.
Node ZJP is connected to nodes LDT, ECN.
Node VTV is connected to node ECN.
Node ARU is connected to nodes LDT, TFC.
Node ODS is connected to node LDT.","[LDT, TFC, ECN, ZJP, VTV, ARU, ODS]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LDT TFC ECN.
Nodes set 2 contains: ZJP VTV ARU ODS.","[(LDT, ODS), (TFC, ARU), (ECN, ZJP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LDT. Updated matching: {ZJP: LDT}.
Search from node TFC. Updated matching: {ZJP: LDT, ARU: TFC}.
Search from node ECN. Updated matching: {ZJP: ECN, ARU: TFC, ODS: LDT}.
So the maximum matching is ",3,4,252
bipartite,"[(NZS, CFH), (NZS, SZZ), (NZS, AAK), (AWV, CFH), (AWV, CZZ)]","{NZS: [CFH, SZZ, AAK],
AWV: [CFH, CZZ],
CFH: [NZS, AWV],
SZZ: [NZS],
CZZ: [AWV],
AAK: [NZS]}","Node NZS is connected to nodes CFH, SZZ, AAK.
Node AWV is connected to nodes CFH, CZZ.
Node CFH is connected to nodes NZS, AWV.
Node SZZ is connected to node NZS.
Node CZZ is connected to node AWV.
Node AAK is connected to node NZS.","[NZS, AWV, CFH, SZZ, CZZ, AAK]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NZS AWV.
Nodes set 2 contains: CFH SZZ CZZ AAK.","[(NZS, SZZ), (AWV, CFH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NZS. Updated matching: {CFH: NZS}.
Search from node AWV. Updated matching: {CFH: AWV, SZZ: NZS}.
So the maximum matching is ",2,4,253
bipartite,"[(YYD, ADP), (YYD, JZD), (YYD, CEY), (YYD, BFD), (JEL, CEY), (JEL, KTG)]","{YYD: [ADP, JZD, CEY, BFD],
JEL: [CEY, KTG],
ADP: [YYD],
JZD: [YYD],
CEY: [YYD, JEL],
BFD: [YYD],
KTG: [JEL]}","Node YYD is connected to nodes ADP, JZD, CEY, BFD.
Node JEL is connected to nodes CEY, KTG.
Node ADP is connected to node YYD.
Node JZD is connected to node YYD.
Node CEY is connected to nodes YYD, JEL.
Node BFD is connected to node YYD.
Node KTG is connected to node JEL.","[YYD, JEL, ADP, JZD, CEY, BFD, KTG]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YYD JEL.
Nodes set 2 contains: ADP JZD CEY BFD KTG.","[(YYD, ADP), (JEL, CEY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YYD. Updated matching: {ADP: YYD}.
Search from node JEL. Updated matching: {ADP: YYD, CEY: JEL}.
So the maximum matching is ",2,5,254
bipartite,"[(IWY, PQB), (IWY, ZCP), (IWY, ZBW), (GSI, ZBW)]","{IWY: [PQB, ZCP, ZBW],
GSI: [ZBW],
PQB: [IWY],
ZCP: [IWY],
ZBW: [IWY, GSI]}","Node IWY is connected to nodes PQB, ZCP, ZBW.
Node GSI is connected to node ZBW.
Node PQB is connected to node IWY.
Node ZCP is connected to node IWY.
Node ZBW is connected to nodes IWY, GSI.","[IWY, GSI, PQB, ZCP, ZBW]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IWY GSI.
Nodes set 2 contains: PQB ZCP ZBW.","[(IWY, PQB), (GSI, ZBW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IWY. Updated matching: {PQB: IWY}.
Search from node GSI. Updated matching: {PQB: IWY, ZBW: GSI}.
So the maximum matching is ",2,3,255
bipartite,"[(ZMX, OOC), (ZMX, CQL), (XGI, OOC), (XGI, WCR), (XGI, RNZ), (SFP, RNZ)]","{ZMX: [OOC, CQL],
XGI: [OOC, WCR, RNZ],
SFP: [RNZ],
OOC: [ZMX, XGI],
WCR: [XGI],
RNZ: [XGI, SFP],
CQL: [ZMX]}","Node ZMX is connected to nodes OOC, CQL.
Node XGI is connected to nodes OOC, WCR, RNZ.
Node SFP is connected to node RNZ.
Node OOC is connected to nodes ZMX, XGI.
Node WCR is connected to node XGI.
Node RNZ is connected to nodes XGI, SFP.
Node CQL is connected to node ZMX.","[ZMX, XGI, SFP, OOC, WCR, RNZ, CQL]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZMX XGI SFP.
Nodes set 2 contains: OOC WCR RNZ CQL.","[(ZMX, CQL), (XGI, OOC), (SFP, RNZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZMX. Updated matching: {OOC: ZMX}.
Search from node XGI. Updated matching: {OOC: XGI, CQL: ZMX}.
Search from node SFP. Updated matching: {OOC: XGI, CQL: ZMX, RNZ: SFP}.
So the maximum matching is ",3,4,256
bipartite,"[(POV, LHU), (POV, UJV), (AED, LHU), (AED, UJV), (EXB, DNF), (EXB, XRT), (EXB, UJV)]","{POV: [LHU, UJV],
AED: [LHU, UJV],
EXB: [DNF, XRT, UJV],
DNF: [EXB],
LHU: [POV, AED],
XRT: [EXB],
UJV: [POV, AED, EXB]}","Node POV is connected to nodes LHU, UJV.
Node AED is connected to nodes LHU, UJV.
Node EXB is connected to nodes DNF, XRT, UJV.
Node DNF is connected to node EXB.
Node LHU is connected to nodes POV, AED.
Node XRT is connected to node EXB.
Node UJV is connected to nodes POV, AED, EXB.","[POV, AED, EXB, DNF, LHU, XRT, UJV]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: POV AED EXB.
Nodes set 2 contains: DNF LHU XRT UJV.","[(POV, UJV), (AED, LHU), (EXB, DNF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node POV. Updated matching: {LHU: POV}.
Search from node AED. Updated matching: {LHU: AED, UJV: POV}.
Search from node EXB. Updated matching: {LHU: AED, UJV: POV, DNF: EXB}.
So the maximum matching is ",3,4,257
bipartite,"[(POZ, IBC), (POZ, LID), (CAC, ZHV), (CAC, LID), (CAC, ECM)]","{POZ: [IBC, LID],
CAC: [ZHV, LID, ECM],
IBC: [POZ],
ZHV: [CAC],
LID: [POZ, CAC],
ECM: [CAC]}","Node POZ is connected to nodes IBC, LID.
Node CAC is connected to nodes ZHV, LID, ECM.
Node IBC is connected to node POZ.
Node ZHV is connected to node CAC.
Node LID is connected to nodes POZ, CAC.
Node ECM is connected to node CAC.","[POZ, CAC, IBC, ZHV, LID, ECM]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: POZ CAC.
Nodes set 2 contains: IBC ZHV LID ECM.","[(POZ, IBC), (CAC, ZHV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node POZ. Updated matching: {IBC: POZ}.
Search from node CAC. Updated matching: {IBC: POZ, ZHV: CAC}.
So the maximum matching is ",2,4,258
bipartite,"[(NUU, WYF), (NUU, YPS), (NUU, NBJ), (JGU, YPS)]","{NUU: [WYF, YPS, NBJ],
JGU: [YPS],
WYF: [NUU],
YPS: [NUU, JGU],
NBJ: [NUU]}","Node NUU is connected to nodes WYF, YPS, NBJ.
Node JGU is connected to node YPS.
Node WYF is connected to node NUU.
Node YPS is connected to nodes NUU, JGU.
Node NBJ is connected to node NUU.","[NUU, JGU, WYF, YPS, NBJ]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NUU JGU.
Nodes set 2 contains: WYF YPS NBJ.","[(NUU, WYF), (JGU, YPS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NUU. Updated matching: {WYF: NUU}.
Search from node JGU. Updated matching: {WYF: NUU, YPS: JGU}.
So the maximum matching is ",2,3,259
bipartite,"[(LLI, XPN), (LLI, IGL), (QNG, IGL), (QNG, RAR), (QNG, EHV)]","{LLI: [XPN, IGL],
QNG: [IGL, RAR, EHV],
XPN: [LLI],
IGL: [LLI, QNG],
RAR: [QNG],
EHV: [QNG]}","Node LLI is connected to nodes XPN, IGL.
Node QNG is connected to nodes IGL, RAR, EHV.
Node XPN is connected to node LLI.
Node IGL is connected to nodes LLI, QNG.
Node RAR is connected to node QNG.
Node EHV is connected to node QNG.","[LLI, QNG, XPN, IGL, RAR, EHV]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LLI QNG.
Nodes set 2 contains: XPN IGL RAR EHV.","[(LLI, XPN), (QNG, IGL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LLI. Updated matching: {XPN: LLI}.
Search from node QNG. Updated matching: {XPN: LLI, IGL: QNG}.
So the maximum matching is ",2,4,260
bipartite,"[(OAE, QDT), (OAE, PNP), (OAE, ZJL), (OAE, ICO), (OAE, UQO)]","{OAE: [QDT, PNP, ZJL, ICO, UQO],
QDT: [OAE],
PNP: [OAE],
ZJL: [OAE],
ICO: [OAE],
UQO: [OAE]}","Node OAE is connected to nodes QDT, PNP, ZJL, ICO, UQO.
Node QDT is connected to node OAE.
Node PNP is connected to node OAE.
Node ZJL is connected to node OAE.
Node ICO is connected to node OAE.
Node UQO is connected to node OAE.","[OAE, QDT, PNP, ZJL, ICO, UQO]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OAE.
Nodes set 2 contains: QDT PNP ZJL ICO UQO.","[(OAE, QDT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OAE. Updated matching: {QDT: OAE}.
So the maximum matching is ",1,5,261
bipartite,"[(EYA, DQV), (EYA, QOF), (BKI, DQV), (BKI, LBJ), (QYM, LUW), (QYM, DQV), (QYM, LBJ)]","{EYA: [DQV, QOF],
BKI: [DQV, LBJ],
QYM: [LUW, DQV, LBJ],
LUW: [QYM],
DQV: [EYA, BKI, QYM],
QOF: [EYA],
LBJ: [BKI, QYM]}","Node EYA is connected to nodes DQV, QOF.
Node BKI is connected to nodes DQV, LBJ.
Node QYM is connected to nodes LUW, DQV, LBJ.
Node LUW is connected to node QYM.
Node DQV is connected to nodes EYA, BKI, QYM.
Node QOF is connected to node EYA.
Node LBJ is connected to nodes BKI, QYM.","[EYA, BKI, QYM, LUW, DQV, QOF, LBJ]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: EYA BKI QYM.
Nodes set 2 contains: LUW DQV QOF LBJ.","[(EYA, QOF), (BKI, DQV), (QYM, LUW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node EYA. Updated matching: {DQV: EYA}.
Search from node BKI. Updated matching: {DQV: BKI, QOF: EYA}.
Search from node QYM. Updated matching: {DQV: BKI, QOF: EYA, LUW: QYM}.
So the maximum matching is ",3,4,262
bipartite,"[(JMK, UEZ), (JMK, BYV), (DKA, OTQ), (DKA, UEZ), (DKA, BYV)]","{JMK: [UEZ, BYV],
DKA: [OTQ, UEZ, BYV],
OTQ: [DKA],
UEZ: [JMK, DKA],
BYV: [JMK, DKA]}","Node JMK is connected to nodes UEZ, BYV.
Node DKA is connected to nodes OTQ, UEZ, BYV.
Node OTQ is connected to node DKA.
Node UEZ is connected to nodes JMK, DKA.
Node BYV is connected to nodes JMK, DKA.","[JMK, DKA, OTQ, UEZ, BYV]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JMK DKA.
Nodes set 2 contains: OTQ UEZ BYV.","[(JMK, UEZ), (DKA, OTQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JMK. Updated matching: {UEZ: JMK}.
Search from node DKA. Updated matching: {UEZ: JMK, OTQ: DKA}.
So the maximum matching is ",2,3,263
bipartite,"[(BMF, CHR), (BMF, HUA), (BMF, WJA), (BMF, NUQ)]","{BMF: [CHR, HUA, WJA, NUQ],
CHR: [BMF],
HUA: [BMF],
WJA: [BMF],
NUQ: [BMF]}","Node BMF is connected to nodes CHR, HUA, WJA, NUQ.
Node CHR is connected to node BMF.
Node HUA is connected to node BMF.
Node WJA is connected to node BMF.
Node NUQ is connected to node BMF.","[BMF, CHR, HUA, WJA, NUQ]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BMF.
Nodes set 2 contains: CHR HUA WJA NUQ.","[(BMF, CHR)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BMF. Updated matching: {CHR: BMF}.
So the maximum matching is ",1,4,264
bipartite,"[(TQD, LCE), (TQD, VQT), (FMR, NUG), (FMR, YTV), (FMR, VQT)]","{TQD: [LCE, VQT],
FMR: [NUG, YTV, VQT],
LCE: [TQD],
NUG: [FMR],
YTV: [FMR],
VQT: [TQD, FMR]}","Node TQD is connected to nodes LCE, VQT.
Node FMR is connected to nodes NUG, YTV, VQT.
Node LCE is connected to node TQD.
Node NUG is connected to node FMR.
Node YTV is connected to node FMR.
Node VQT is connected to nodes TQD, FMR.","[TQD, FMR, LCE, NUG, YTV, VQT]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TQD FMR.
Nodes set 2 contains: LCE NUG YTV VQT.","[(TQD, LCE), (FMR, NUG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TQD. Updated matching: {LCE: TQD}.
Search from node FMR. Updated matching: {LCE: TQD, NUG: FMR}.
So the maximum matching is ",2,4,265
bipartite,"[(BXO, IRF), (BXO, MTZ), (DZM, KPH), (DZM, XRV), (DZM, MTZ)]","{BXO: [IRF, MTZ],
DZM: [KPH, XRV, MTZ],
KPH: [DZM],
IRF: [BXO],
XRV: [DZM],
MTZ: [BXO, DZM]}","Node BXO is connected to nodes IRF, MTZ.
Node DZM is connected to nodes KPH, XRV, MTZ.
Node KPH is connected to node DZM.
Node IRF is connected to node BXO.
Node XRV is connected to node DZM.
Node MTZ is connected to nodes BXO, DZM.","[BXO, DZM, KPH, IRF, XRV, MTZ]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BXO DZM.
Nodes set 2 contains: KPH IRF XRV MTZ.","[(BXO, IRF), (DZM, KPH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BXO. Updated matching: {IRF: BXO}.
Search from node DZM. Updated matching: {IRF: BXO, KPH: DZM}.
So the maximum matching is ",2,4,266
bipartite,"[(TXN, QZF), (TXN, CHK), (DDB, QZF), (DDB, NMX), (DDB, HDQ), (DDB, PBB)]","{TXN: [QZF, CHK],
DDB: [QZF, NMX, HDQ, PBB],
QZF: [TXN, DDB],
CHK: [TXN],
NMX: [DDB],
HDQ: [DDB],
PBB: [DDB]}","Node TXN is connected to nodes QZF, CHK.
Node DDB is connected to nodes QZF, NMX, HDQ, PBB.
Node QZF is connected to nodes TXN, DDB.
Node CHK is connected to node TXN.
Node NMX is connected to node DDB.
Node HDQ is connected to node DDB.
Node PBB is connected to node DDB.","[TXN, DDB, QZF, CHK, NMX, HDQ, PBB]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TXN DDB.
Nodes set 2 contains: QZF CHK NMX HDQ PBB.","[(TXN, CHK), (DDB, QZF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TXN. Updated matching: {QZF: TXN}.
Search from node DDB. Updated matching: {QZF: DDB, CHK: TXN}.
So the maximum matching is ",2,5,267
bipartite,"[(QLC, MLE), (QLC, MVJ), (QLC, TVO), (PVX, MVJ)]","{QLC: [MLE, MVJ, TVO],
PVX: [MVJ],
MLE: [QLC],
MVJ: [QLC, PVX],
TVO: [QLC]}","Node QLC is connected to nodes MLE, MVJ, TVO.
Node PVX is connected to node MVJ.
Node MLE is connected to node QLC.
Node MVJ is connected to nodes QLC, PVX.
Node TVO is connected to node QLC.","[QLC, PVX, MLE, MVJ, TVO]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QLC PVX.
Nodes set 2 contains: MLE MVJ TVO.","[(QLC, MLE), (PVX, MVJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QLC. Updated matching: {MLE: QLC}.
Search from node PVX. Updated matching: {MLE: QLC, MVJ: PVX}.
So the maximum matching is ",2,3,268
bipartite,"[(ASL, DYE), (ASL, WRS), (MDP, UAB), (MDP, OHV), (SYH, UAB), (SYH, WRS), (SYH, OHV)]","{ASL: [DYE, WRS],
MDP: [UAB, OHV],
SYH: [UAB, WRS, OHV],
DYE: [ASL],
UAB: [MDP, SYH],
WRS: [ASL, SYH],
OHV: [MDP, SYH]}","Node ASL is connected to nodes DYE, WRS.
Node MDP is connected to nodes UAB, OHV.
Node SYH is connected to nodes UAB, WRS, OHV.
Node DYE is connected to node ASL.
Node UAB is connected to nodes MDP, SYH.
Node WRS is connected to nodes ASL, SYH.
Node OHV is connected to nodes MDP, SYH.","[ASL, MDP, SYH, DYE, UAB, WRS, OHV]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ASL MDP SYH.
Nodes set 2 contains: DYE UAB WRS OHV.","[(ASL, DYE), (MDP, OHV), (SYH, UAB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ASL. Updated matching: {DYE: ASL}.
Search from node MDP. Updated matching: {DYE: ASL, UAB: MDP}.
Search from node SYH. Updated matching: {DYE: ASL, UAB: SYH, OHV: MDP}.
So the maximum matching is ",3,4,269
bipartite,"[(RLT, CEZ), (RLT, QBF), (BAM, CUY), (BAM, AIV), (BAM, ITM), (BAM, CEZ), (BAM, QBF)]","{RLT: [CEZ, QBF],
BAM: [CUY, AIV, ITM, CEZ, QBF],
CUY: [BAM],
AIV: [BAM],
ITM: [BAM],
CEZ: [RLT, BAM],
QBF: [RLT, BAM]}","Node RLT is connected to nodes CEZ, QBF.
Node BAM is connected to nodes CUY, AIV, ITM, CEZ, QBF.
Node CUY is connected to node BAM.
Node AIV is connected to node BAM.
Node ITM is connected to node BAM.
Node CEZ is connected to nodes RLT, BAM.
Node QBF is connected to nodes RLT, BAM.","[RLT, BAM, CUY, AIV, ITM, CEZ, QBF]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RLT BAM.
Nodes set 2 contains: CUY AIV ITM CEZ QBF.","[(RLT, CEZ), (BAM, CUY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RLT. Updated matching: {CEZ: RLT}.
Search from node BAM. Updated matching: {CEZ: RLT, CUY: BAM}.
So the maximum matching is ",2,5,270
bipartite,"[(SOQ, BQV), (SOQ, LYX), (SOQ, MDN), (KMR, FPH), (KMR, LYX), (JCH, FPH), (JCH, LYX)]","{SOQ: [BQV, LYX, MDN],
KMR: [FPH, LYX],
JCH: [FPH, LYX],
FPH: [KMR, JCH],
BQV: [SOQ],
LYX: [SOQ, KMR, JCH],
MDN: [SOQ]}","Node SOQ is connected to nodes BQV, LYX, MDN.
Node KMR is connected to nodes FPH, LYX.
Node JCH is connected to nodes FPH, LYX.
Node FPH is connected to nodes KMR, JCH.
Node BQV is connected to node SOQ.
Node LYX is connected to nodes SOQ, KMR, JCH.
Node MDN is connected to node SOQ.","[SOQ, KMR, JCH, FPH, BQV, LYX, MDN]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SOQ KMR JCH.
Nodes set 2 contains: FPH BQV LYX MDN.","[(SOQ, BQV), (KMR, LYX), (JCH, FPH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SOQ. Updated matching: {BQV: SOQ}.
Search from node KMR. Updated matching: {BQV: SOQ, FPH: KMR}.
Search from node JCH. Updated matching: {BQV: SOQ, FPH: JCH, LYX: KMR}.
So the maximum matching is ",3,4,271
bipartite,"[(PVF, EJC), (PVF, EIM), (BJV, NUW), (BJV, YZG), (BJV, EJC)]","{PVF: [EJC, EIM],
BJV: [NUW, YZG, EJC],
NUW: [BJV],
YZG: [BJV],
EJC: [PVF, BJV],
EIM: [PVF]}","Node PVF is connected to nodes EJC, EIM.
Node BJV is connected to nodes NUW, YZG, EJC.
Node NUW is connected to node BJV.
Node YZG is connected to node BJV.
Node EJC is connected to nodes PVF, BJV.
Node EIM is connected to node PVF.","[PVF, BJV, NUW, YZG, EJC, EIM]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PVF BJV.
Nodes set 2 contains: NUW YZG EJC EIM.","[(PVF, EJC), (BJV, NUW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PVF. Updated matching: {EJC: PVF}.
Search from node BJV. Updated matching: {EJC: PVF, NUW: BJV}.
So the maximum matching is ",2,4,272
bipartite,"[(LVC, TUZ), (LVC, YEL), (LVC, TJM), (KDJ, TUZ), (KDJ, TJM), (KDJ, KGW), (XWQ, YEL)]","{LVC: [TUZ, YEL, TJM],
KDJ: [TUZ, TJM, KGW],
XWQ: [YEL],
TUZ: [LVC, KDJ],
YEL: [LVC, XWQ],
TJM: [LVC, KDJ],
KGW: [KDJ]}","Node LVC is connected to nodes TUZ, YEL, TJM.
Node KDJ is connected to nodes TUZ, TJM, KGW.
Node XWQ is connected to node YEL.
Node TUZ is connected to nodes LVC, KDJ.
Node YEL is connected to nodes LVC, XWQ.
Node TJM is connected to nodes LVC, KDJ.
Node KGW is connected to node KDJ.","[LVC, KDJ, XWQ, TUZ, YEL, TJM, KGW]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LVC KDJ XWQ.
Nodes set 2 contains: TUZ YEL TJM KGW.","[(LVC, TUZ), (KDJ, TJM), (XWQ, YEL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LVC. Updated matching: {TUZ: LVC}.
Search from node KDJ. Updated matching: {TUZ: KDJ, YEL: LVC}.
Search from node XWQ. Updated matching: {TUZ: LVC, YEL: XWQ, TJM: KDJ}.
So the maximum matching is ",3,4,273
bipartite,"[(NRJ, CSX), (NRJ, FKD), (NRJ, SIG), (NRJ, DHP), (YMW, CSX), (YMW, DHP)]","{NRJ: [CSX, FKD, SIG, DHP],
YMW: [CSX, DHP],
CSX: [NRJ, YMW],
FKD: [NRJ],
SIG: [NRJ],
DHP: [NRJ, YMW]}","Node NRJ is connected to nodes CSX, FKD, SIG, DHP.
Node YMW is connected to nodes CSX, DHP.
Node CSX is connected to nodes NRJ, YMW.
Node FKD is connected to node NRJ.
Node SIG is connected to node NRJ.
Node DHP is connected to nodes NRJ, YMW.","[NRJ, YMW, CSX, FKD, SIG, DHP]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NRJ YMW.
Nodes set 2 contains: CSX FKD SIG DHP.","[(NRJ, FKD), (YMW, CSX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NRJ. Updated matching: {CSX: NRJ}.
Search from node YMW. Updated matching: {CSX: YMW, FKD: NRJ}.
So the maximum matching is ",2,4,274
bipartite,"[(VQJ, ZUJ), (VQJ, URG), (VQJ, SVV), (EHJ, CED), (VTT, CED), (VTT, URG)]","{VQJ: [ZUJ, URG, SVV],
EHJ: [CED],
VTT: [CED, URG],
ZUJ: [VQJ],
CED: [EHJ, VTT],
URG: [VQJ, VTT],
SVV: [VQJ]}","Node VQJ is connected to nodes ZUJ, URG, SVV.
Node EHJ is connected to node CED.
Node VTT is connected to nodes CED, URG.
Node ZUJ is connected to node VQJ.
Node CED is connected to nodes EHJ, VTT.
Node URG is connected to nodes VQJ, VTT.
Node SVV is connected to node VQJ.","[VQJ, EHJ, VTT, ZUJ, CED, URG, SVV]",7,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VQJ EHJ VTT.
Nodes set 2 contains: ZUJ CED URG SVV.","[(VQJ, ZUJ), (EHJ, CED), (VTT, URG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VQJ. Updated matching: {ZUJ: VQJ}.
Search from node EHJ. Updated matching: {ZUJ: VQJ, CED: EHJ}.
Search from node VTT. Updated matching: {ZUJ: VQJ, CED: EHJ, URG: VTT}.
So the maximum matching is ",3,4,275
bipartite,"[(AOL, YUY), (AOL, FFW), (OQZ, LJZ), (OQZ, FFW), (OQZ, DEV)]","{AOL: [YUY, FFW],
OQZ: [LJZ, FFW, DEV],
YUY: [AOL],
LJZ: [OQZ],
FFW: [AOL, OQZ],
DEV: [OQZ]}","Node AOL is connected to nodes YUY, FFW.
Node OQZ is connected to nodes LJZ, FFW, DEV.
Node YUY is connected to node AOL.
Node LJZ is connected to node OQZ.
Node FFW is connected to nodes AOL, OQZ.
Node DEV is connected to node OQZ.","[AOL, OQZ, YUY, LJZ, FFW, DEV]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: AOL OQZ.
Nodes set 2 contains: YUY LJZ FFW DEV.","[(AOL, YUY), (OQZ, LJZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node AOL. Updated matching: {YUY: AOL}.
Search from node OQZ. Updated matching: {YUY: AOL, LJZ: OQZ}.
So the maximum matching is ",2,4,276
bipartite,"[(UFX, FUN), (UFX, YXE), (UFX, PHH), (UFX, KVX), (SQL, FUN), (SQL, APG), (SQL, KVX)]","{UFX: [FUN, YXE, PHH, KVX],
SQL: [FUN, APG, KVX],
FUN: [UFX, SQL],
YXE: [UFX],
APG: [SQL],
PHH: [UFX],
KVX: [UFX, SQL]}","Node UFX is connected to nodes FUN, YXE, PHH, KVX.
Node SQL is connected to nodes FUN, APG, KVX.
Node FUN is connected to nodes UFX, SQL.
Node YXE is connected to node UFX.
Node APG is connected to node SQL.
Node PHH is connected to node UFX.
Node KVX is connected to nodes UFX, SQL.","[UFX, SQL, FUN, YXE, APG, PHH, KVX]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UFX SQL.
Nodes set 2 contains: FUN YXE APG PHH KVX.","[(UFX, YXE), (SQL, FUN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UFX. Updated matching: {FUN: UFX}.
Search from node SQL. Updated matching: {FUN: SQL, YXE: UFX}.
So the maximum matching is ",2,5,277
bipartite,"[(SLW, ZDT), (SLW, XVD), (PHS, ZDT), (PHS, MCP), (PHS, XDS)]","{SLW: [ZDT, XVD],
PHS: [ZDT, MCP, XDS],
ZDT: [SLW, PHS],
MCP: [PHS],
XDS: [PHS],
XVD: [SLW]}","Node SLW is connected to nodes ZDT, XVD.
Node PHS is connected to nodes ZDT, MCP, XDS.
Node ZDT is connected to nodes SLW, PHS.
Node MCP is connected to node PHS.
Node XDS is connected to node PHS.
Node XVD is connected to node SLW.","[SLW, PHS, ZDT, MCP, XDS, XVD]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SLW PHS.
Nodes set 2 contains: ZDT MCP XDS XVD.","[(SLW, XVD), (PHS, ZDT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SLW. Updated matching: {ZDT: SLW}.
Search from node PHS. Updated matching: {ZDT: PHS, XVD: SLW}.
So the maximum matching is ",2,4,278
bipartite,"[(KYI, WNV), (KYI, PMG), (KYI, HVX), (YIT, XWP), (YIT, PMG)]","{KYI: [WNV, PMG, HVX],
YIT: [XWP, PMG],
WNV: [KYI],
XWP: [YIT],
PMG: [KYI, YIT],
HVX: [KYI]}","Node KYI is connected to nodes WNV, PMG, HVX.
Node YIT is connected to nodes XWP, PMG.
Node WNV is connected to node KYI.
Node XWP is connected to node YIT.
Node PMG is connected to nodes KYI, YIT.
Node HVX is connected to node KYI.","[KYI, YIT, WNV, XWP, PMG, HVX]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: KYI YIT.
Nodes set 2 contains: WNV XWP PMG HVX.","[(KYI, WNV), (YIT, XWP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node KYI. Updated matching: {WNV: KYI}.
Search from node YIT. Updated matching: {WNV: KYI, XWP: YIT}.
So the maximum matching is ",2,4,279
bipartite,"[(TBB, NAZ), (TBB, PPE), (TBB, TJM), (OQD, NAZ), (OQD, TSW), (OQD, PPE), (OQD, TJM)]","{TBB: [NAZ, PPE, TJM],
OQD: [NAZ, TSW, PPE, TJM],
NAZ: [TBB, OQD],
TSW: [OQD],
PPE: [TBB, OQD],
TJM: [TBB, OQD]}","Node TBB is connected to nodes NAZ, PPE, TJM.
Node OQD is connected to nodes NAZ, TSW, PPE, TJM.
Node NAZ is connected to nodes TBB, OQD.
Node TSW is connected to node OQD.
Node PPE is connected to nodes TBB, OQD.
Node TJM is connected to nodes TBB, OQD.","[TBB, OQD, NAZ, TSW, PPE, TJM]",6,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TBB OQD.
Nodes set 2 contains: NAZ TSW PPE TJM.","[(TBB, PPE), (OQD, NAZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TBB. Updated matching: {NAZ: TBB}.
Search from node OQD. Updated matching: {NAZ: OQD, PPE: TBB}.
So the maximum matching is ",2,4,280
bipartite,"[(ANL, JKU), (JNX, ZDF), (JNX, MGG), (JNX, PVJ), (ZYZ, JKU), (ZYZ, MGG), (ZYZ, PVJ)]","{ANL: [JKU],
JNX: [ZDF, MGG, PVJ],
ZYZ: [JKU, MGG, PVJ],
JKU: [ANL, ZYZ],
ZDF: [JNX],
MGG: [JNX, ZYZ],
PVJ: [JNX, ZYZ]}","Node ANL is connected to node JKU.
Node JNX is connected to nodes ZDF, MGG, PVJ.
Node ZYZ is connected to nodes JKU, MGG, PVJ.
Node JKU is connected to nodes ANL, ZYZ.
Node ZDF is connected to node JNX.
Node MGG is connected to nodes JNX, ZYZ.
Node PVJ is connected to nodes JNX, ZYZ.","[ANL, JNX, ZYZ, JKU, ZDF, MGG, PVJ]",7,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ANL JNX ZYZ.
Nodes set 2 contains: JKU ZDF MGG PVJ.","[(ANL, JKU), (JNX, ZDF), (ZYZ, MGG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ANL. Updated matching: {JKU: ANL}.
Search from node JNX. Updated matching: {JKU: ANL, ZDF: JNX}.
Search from node ZYZ. Updated matching: {JKU: ANL, ZDF: JNX, MGG: ZYZ}.
So the maximum matching is ",3,4,281
bipartite,"[(JEL, QDL), (CNV, QGH), (CNV, QDL), (CNV, SVN)]","{JEL: [QDL],
CNV: [QGH, QDL, SVN],
QGH: [CNV],
QDL: [JEL, CNV],
SVN: [CNV]}","Node JEL is connected to node QDL.
Node CNV is connected to nodes QGH, QDL, SVN.
Node QGH is connected to node CNV.
Node QDL is connected to nodes JEL, CNV.
Node SVN is connected to node CNV.","[JEL, CNV, QGH, QDL, SVN]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JEL CNV.
Nodes set 2 contains: QGH QDL SVN.","[(JEL, QDL), (CNV, QGH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JEL. Updated matching: {QDL: JEL}.
Search from node CNV. Updated matching: {QDL: JEL, QGH: CNV}.
So the maximum matching is ",2,3,282
bipartite,"[(ZGB, KAK), (ZGB, ZHX), (UGQ, KAK), (UGQ, JRN)]","{ZGB: [KAK, ZHX],
UGQ: [KAK, JRN],
KAK: [ZGB, UGQ],
JRN: [UGQ],
ZHX: [ZGB]}","Node ZGB is connected to nodes KAK, ZHX.
Node UGQ is connected to nodes KAK, JRN.
Node KAK is connected to nodes ZGB, UGQ.
Node JRN is connected to node UGQ.
Node ZHX is connected to node ZGB.","[ZGB, UGQ, KAK, JRN, ZHX]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZGB UGQ.
Nodes set 2 contains: KAK JRN ZHX.","[(ZGB, ZHX), (UGQ, KAK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZGB. Updated matching: {KAK: ZGB}.
Search from node UGQ. Updated matching: {KAK: UGQ, ZHX: ZGB}.
So the maximum matching is ",2,3,283
bipartite,"[(WFC, HXK), (WFC, SOK), (BFZ, OEE), (BFZ, SRV), (BFZ, SOK)]","{WFC: [HXK, SOK],
BFZ: [OEE, SRV, SOK],
OEE: [BFZ],
HXK: [WFC],
SRV: [BFZ],
SOK: [WFC, BFZ]}","Node WFC is connected to nodes HXK, SOK.
Node BFZ is connected to nodes OEE, SRV, SOK.
Node OEE is connected to node BFZ.
Node HXK is connected to node WFC.
Node SRV is connected to node BFZ.
Node SOK is connected to nodes WFC, BFZ.","[WFC, BFZ, OEE, HXK, SRV, SOK]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WFC BFZ.
Nodes set 2 contains: OEE HXK SRV SOK.","[(WFC, HXK), (BFZ, OEE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WFC. Updated matching: {HXK: WFC}.
Search from node BFZ. Updated matching: {HXK: WFC, OEE: BFZ}.
So the maximum matching is ",2,4,284
bipartite,"[(VHJ, OHI), (RBI, OHI), (RBI, SNU), (RBI, DMK)]","{VHJ: [OHI],
RBI: [OHI, SNU, DMK],
OHI: [VHJ, RBI],
SNU: [RBI],
DMK: [RBI]}","Node VHJ is connected to node OHI.
Node RBI is connected to nodes OHI, SNU, DMK.
Node OHI is connected to nodes VHJ, RBI.
Node SNU is connected to node RBI.
Node DMK is connected to node RBI.","[VHJ, RBI, OHI, SNU, DMK]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VHJ RBI.
Nodes set 2 contains: OHI SNU DMK.","[(VHJ, OHI), (RBI, SNU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VHJ. Updated matching: {OHI: VHJ}.
Search from node RBI. Updated matching: {OHI: VHJ, SNU: RBI}.
So the maximum matching is ",2,3,285
bipartite,"[(JCC, WQN), (JCC, MMH), (JCC, KNY), (WEQ, MMH)]","{JCC: [WQN, MMH, KNY],
WEQ: [MMH],
WQN: [JCC],
MMH: [JCC, WEQ],
KNY: [JCC]}","Node JCC is connected to nodes WQN, MMH, KNY.
Node WEQ is connected to node MMH.
Node WQN is connected to node JCC.
Node MMH is connected to nodes JCC, WEQ.
Node KNY is connected to node JCC.","[JCC, WEQ, WQN, MMH, KNY]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JCC WEQ.
Nodes set 2 contains: WQN MMH KNY.","[(JCC, WQN), (WEQ, MMH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JCC. Updated matching: {WQN: JCC}.
Search from node WEQ. Updated matching: {WQN: JCC, MMH: WEQ}.
So the maximum matching is ",2,3,286
bipartite,"[(YHF, MXY), (YHF, BXC), (YHF, CNT), (NET, OGJ), (NET, BXC)]","{YHF: [MXY, BXC, CNT],
NET: [OGJ, BXC],
OGJ: [NET],
MXY: [YHF],
BXC: [YHF, NET],
CNT: [YHF]}","Node YHF is connected to nodes MXY, BXC, CNT.
Node NET is connected to nodes OGJ, BXC.
Node OGJ is connected to node NET.
Node MXY is connected to node YHF.
Node BXC is connected to nodes YHF, NET.
Node CNT is connected to node YHF.","[YHF, NET, OGJ, MXY, BXC, CNT]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YHF NET.
Nodes set 2 contains: OGJ MXY BXC CNT.","[(YHF, MXY), (NET, OGJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YHF. Updated matching: {MXY: YHF}.
Search from node NET. Updated matching: {MXY: YHF, OGJ: NET}.
So the maximum matching is ",2,4,287
bipartite,"[(QRH, IHJ), (QRH, QJM), (PHU, QJM), (PHU, IEX), (PHU, WML)]","{QRH: [IHJ, QJM],
PHU: [QJM, IEX, WML],
IHJ: [QRH],
QJM: [QRH, PHU],
IEX: [PHU],
WML: [PHU]}","Node QRH is connected to nodes IHJ, QJM.
Node PHU is connected to nodes QJM, IEX, WML.
Node IHJ is connected to node QRH.
Node QJM is connected to nodes QRH, PHU.
Node IEX is connected to node PHU.
Node WML is connected to node PHU.","[QRH, PHU, IHJ, QJM, IEX, WML]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QRH PHU.
Nodes set 2 contains: IHJ QJM IEX WML.","[(QRH, IHJ), (PHU, QJM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QRH. Updated matching: {IHJ: QRH}.
Search from node PHU. Updated matching: {IHJ: QRH, QJM: PHU}.
So the maximum matching is ",2,4,288
bipartite,"[(YOS, IEF), (YOS, IOT), (SRJ, IEF), (SRJ, YDE), (SRJ, IOT), (JHW, YDE), (JHW, IOT), (JHW, MAZ)]","{YOS: [IEF, IOT],
SRJ: [IEF, YDE, IOT],
JHW: [YDE, IOT, MAZ],
IEF: [YOS, SRJ],
YDE: [SRJ, JHW],
IOT: [YOS, SRJ, JHW],
MAZ: [JHW]}","Node YOS is connected to nodes IEF, IOT.
Node SRJ is connected to nodes IEF, YDE, IOT.
Node JHW is connected to nodes YDE, IOT, MAZ.
Node IEF is connected to nodes YOS, SRJ.
Node YDE is connected to nodes SRJ, JHW.
Node IOT is connected to nodes YOS, SRJ, JHW.
Node MAZ is connected to node JHW.","[YOS, SRJ, JHW, IEF, YDE, IOT, MAZ]",7,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YOS SRJ JHW.
Nodes set 2 contains: IEF YDE IOT MAZ.","[(YOS, IOT), (SRJ, IEF), (JHW, YDE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YOS. Updated matching: {IEF: YOS}.
Search from node SRJ. Updated matching: {IEF: SRJ, IOT: YOS}.
Search from node JHW. Updated matching: {IEF: SRJ, IOT: YOS, YDE: JHW}.
So the maximum matching is ",3,4,289
bipartite,"[(UIF, UTS), (UIF, PCT), (UIF, RUG), (UIF, PAO), (TXS, RUG)]","{UIF: [UTS, PCT, RUG, PAO],
TXS: [RUG],
UTS: [UIF],
PCT: [UIF],
RUG: [UIF, TXS],
PAO: [UIF]}","Node UIF is connected to nodes UTS, PCT, RUG, PAO.
Node TXS is connected to node RUG.
Node UTS is connected to node UIF.
Node PCT is connected to node UIF.
Node RUG is connected to nodes UIF, TXS.
Node PAO is connected to node UIF.","[UIF, TXS, UTS, PCT, RUG, PAO]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UIF TXS.
Nodes set 2 contains: UTS PCT RUG PAO.","[(UIF, UTS), (TXS, RUG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UIF. Updated matching: {UTS: UIF}.
Search from node TXS. Updated matching: {UTS: UIF, RUG: TXS}.
So the maximum matching is ",2,4,290
bipartite,"[(XQV, KLV), (XQV, HKC), (XQV, KCV), (ONS, QJK), (ONS, KCV)]","{XQV: [KLV, HKC, KCV],
ONS: [QJK, KCV],
KLV: [XQV],
HKC: [XQV],
QJK: [ONS],
KCV: [XQV, ONS]}","Node XQV is connected to nodes KLV, HKC, KCV.
Node ONS is connected to nodes QJK, KCV.
Node KLV is connected to node XQV.
Node HKC is connected to node XQV.
Node QJK is connected to node ONS.
Node KCV is connected to nodes XQV, ONS.","[XQV, ONS, KLV, HKC, QJK, KCV]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XQV ONS.
Nodes set 2 contains: KLV HKC QJK KCV.","[(XQV, KLV), (ONS, QJK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XQV. Updated matching: {KLV: XQV}.
Search from node ONS. Updated matching: {KLV: XQV, QJK: ONS}.
So the maximum matching is ",2,4,291
bipartite,"[(IKG, BVH), (IKG, KNI), (HXN, BVH), (HXN, KNS)]","{IKG: [BVH, KNI],
HXN: [BVH, KNS],
BVH: [IKG, HXN],
KNI: [IKG],
KNS: [HXN]}","Node IKG is connected to nodes BVH, KNI.
Node HXN is connected to nodes BVH, KNS.
Node BVH is connected to nodes IKG, HXN.
Node KNI is connected to node IKG.
Node KNS is connected to node HXN.","[IKG, HXN, BVH, KNI, KNS]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IKG HXN.
Nodes set 2 contains: BVH KNI KNS.","[(IKG, KNI), (HXN, BVH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IKG. Updated matching: {BVH: IKG}.
Search from node HXN. Updated matching: {BVH: HXN, KNI: IKG}.
So the maximum matching is ",2,3,292
bipartite,"[(ERT, BXZ), (ERT, VHP), (CZY, STZ), (CZY, BXZ), (CZY, VXP), (CZY, VHP), (UAA, STZ), (UAA, VHP)]","{ERT: [BXZ, VHP],
CZY: [STZ, BXZ, VXP, VHP],
UAA: [STZ, VHP],
STZ: [CZY, UAA],
BXZ: [ERT, CZY],
VXP: [CZY],
VHP: [ERT, CZY, UAA]}","Node ERT is connected to nodes BXZ, VHP.
Node CZY is connected to nodes STZ, BXZ, VXP, VHP.
Node UAA is connected to nodes STZ, VHP.
Node STZ is connected to nodes CZY, UAA.
Node BXZ is connected to nodes ERT, CZY.
Node VXP is connected to node CZY.
Node VHP is connected to nodes ERT, CZY, UAA.","[ERT, CZY, UAA, STZ, BXZ, VXP, VHP]",7,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ERT CZY UAA.
Nodes set 2 contains: STZ BXZ VXP VHP.","[(ERT, VHP), (CZY, BXZ), (UAA, STZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ERT. Updated matching: {BXZ: ERT}.
Search from node CZY. Updated matching: {BXZ: ERT, STZ: CZY}.
Search from node UAA. Updated matching: {BXZ: CZY, STZ: UAA, VHP: ERT}.
So the maximum matching is ",3,4,293
bipartite,"[(SVK, QDD), (SVK, DUB), (SVK, WDD), (MPV, DUB), (MPV, WDD), (MPV, AYK)]","{SVK: [QDD, DUB, WDD],
MPV: [DUB, WDD, AYK],
QDD: [SVK],
DUB: [SVK, MPV],
WDD: [SVK, MPV],
AYK: [MPV]}","Node SVK is connected to nodes QDD, DUB, WDD.
Node MPV is connected to nodes DUB, WDD, AYK.
Node QDD is connected to node SVK.
Node DUB is connected to nodes SVK, MPV.
Node WDD is connected to nodes SVK, MPV.
Node AYK is connected to node MPV.","[SVK, MPV, QDD, DUB, WDD, AYK]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SVK MPV.
Nodes set 2 contains: QDD DUB WDD AYK.","[(SVK, QDD), (MPV, DUB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SVK. Updated matching: {QDD: SVK}.
Search from node MPV. Updated matching: {QDD: SVK, DUB: MPV}.
So the maximum matching is ",2,4,294
bipartite,"[(KAE, PPF), (KAE, IGG), (ARE, BRL), (ARE, XSF), (ARE, IGG)]","{KAE: [PPF, IGG],
ARE: [BRL, XSF, IGG],
BRL: [ARE],
XSF: [ARE],
PPF: [KAE],
IGG: [KAE, ARE]}","Node KAE is connected to nodes PPF, IGG.
Node ARE is connected to nodes BRL, XSF, IGG.
Node BRL is connected to node ARE.
Node XSF is connected to node ARE.
Node PPF is connected to node KAE.
Node IGG is connected to nodes KAE, ARE.","[KAE, ARE, BRL, XSF, PPF, IGG]",6,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: KAE ARE.
Nodes set 2 contains: BRL XSF PPF IGG.","[(KAE, PPF), (ARE, BRL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node KAE. Updated matching: {PPF: KAE}.
Search from node ARE. Updated matching: {PPF: KAE, BRL: ARE}.
So the maximum matching is ",2,4,295
bipartite,"[(VZG, HRA), (VZG, HBY), (VZG, CWK), (WZU, IMB), (WZU, HRA), (WZU, CWK)]","{VZG: [HRA, HBY, CWK],
WZU: [IMB, HRA, CWK],
IMB: [WZU],
HRA: [VZG, WZU],
HBY: [VZG],
CWK: [VZG, WZU]}","Node VZG is connected to nodes HRA, HBY, CWK.
Node WZU is connected to nodes IMB, HRA, CWK.
Node IMB is connected to node WZU.
Node HRA is connected to nodes VZG, WZU.
Node HBY is connected to node VZG.
Node CWK is connected to nodes VZG, WZU.","[VZG, WZU, IMB, HRA, HBY, CWK]",6,6,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VZG WZU.
Nodes set 2 contains: IMB HRA HBY CWK.","[(VZG, HRA), (WZU, IMB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VZG. Updated matching: {HRA: VZG}.
Search from node WZU. Updated matching: {HRA: VZG, IMB: WZU}.
So the maximum matching is ",2,4,296
bipartite,"[(SDL, MZN), (SDL, OYD), (YVU, TAG), (YVU, OYD)]","{SDL: [MZN, OYD],
YVU: [TAG, OYD],
MZN: [SDL],
TAG: [YVU],
OYD: [SDL, YVU]}","Node SDL is connected to nodes MZN, OYD.
Node YVU is connected to nodes TAG, OYD.
Node MZN is connected to node SDL.
Node TAG is connected to node YVU.
Node OYD is connected to nodes SDL, YVU.","[SDL, YVU, MZN, TAG, OYD]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SDL YVU.
Nodes set 2 contains: MZN TAG OYD.","[(SDL, MZN), (YVU, TAG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SDL. Updated matching: {MZN: SDL}.
Search from node YVU. Updated matching: {MZN: SDL, TAG: YVU}.
So the maximum matching is ",2,3,297
bipartite,"[(WKZ, RPE), (WKZ, WOH), (RAE, YXZ), (RAE, WOH)]","{WKZ: [RPE, WOH],
RAE: [YXZ, WOH],
YXZ: [RAE],
RPE: [WKZ],
WOH: [WKZ, RAE]}","Node WKZ is connected to nodes RPE, WOH.
Node RAE is connected to nodes YXZ, WOH.
Node YXZ is connected to node RAE.
Node RPE is connected to node WKZ.
Node WOH is connected to nodes WKZ, RAE.","[WKZ, RAE, YXZ, RPE, WOH]",5,4,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WKZ RAE.
Nodes set 2 contains: YXZ RPE WOH.","[(WKZ, RPE), (RAE, YXZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WKZ. Updated matching: {RPE: WKZ}.
Search from node RAE. Updated matching: {RPE: WKZ, YXZ: RAE}.
So the maximum matching is ",2,3,298
bipartite,"[(PHJ, LPN), (PHJ, WMI), (TRD, QOO), (TRD, LPN), (TRD, WMI)]","{PHJ: [LPN, WMI],
TRD: [QOO, LPN, WMI],
QOO: [TRD],
LPN: [PHJ, TRD],
WMI: [PHJ, TRD]}","Node PHJ is connected to nodes LPN, WMI.
Node TRD is connected to nodes QOO, LPN, WMI.
Node QOO is connected to node TRD.
Node LPN is connected to nodes PHJ, TRD.
Node WMI is connected to nodes PHJ, TRD.","[PHJ, TRD, QOO, LPN, WMI]",5,5,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PHJ TRD.
Nodes set 2 contains: QOO LPN WMI.","[(PHJ, LPN), (TRD, QOO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PHJ. Updated matching: {LPN: PHJ}.
Search from node TRD. Updated matching: {LPN: PHJ, QOO: TRD}.
So the maximum matching is ",2,3,299
