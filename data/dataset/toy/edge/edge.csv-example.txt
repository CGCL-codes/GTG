####### sample 1 #######

>> task:

edge

>> graph:

[(<0>, <3>), (<0>, <2>), (<2>, <1>), (<2>, <4>)]

>> graph_adj:

{<0>: [<3>, <2>],
<3>: [<0>],
<2>: [<0>, <1>, <4>],
<1>: [<2>],
<4>: [<2>]}

>> graph_nl:

Node <0> is connected to nodes <3>, <2>.
Node <3> is connected to node <0>.
Node <2> is connected to nodes <0>, <1>, <4>.
Node <1> is connected to node <2>.
Node <4> is connected to node <2>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>]

>> num_nodes:

5

>> num_edges:

4

>> directed:

False

>> question:

Is there an edge between node <0> and node <2>?

>> answer:

Yes

>> steps:

Let's do it step by step.
The neighbors of node <0> are: [<3>, <2>], which contains node <2>. So the answer is 

>> choices:

('[Yes, No]',)

>> label:

0

####### sample 2 #######

>> task:

edge

>> graph:

[(<4>, <0>), (<0>, <1>), (<0>, <3>), (<0>, <2>), (<0>, <5>), (<1>, <5>)]

>> graph_adj:

{<4>: [<0>],
<0>: [<4>, <1>, <3>, <2>, <5>],
<1>: [<0>, <5>],
<3>: [<0>],
<2>: [<0>],
<5>: [<0>, <1>]}

>> graph_nl:

Node <4> is connected to node <0>.
Node <0> is connected to nodes <4>, <1>, <3>, <2>, <5>.
Node <1> is connected to nodes <0>, <5>.
Node <3> is connected to node <0>.
Node <2> is connected to node <0>.
Node <5> is connected to nodes <0>, <1>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>]

>> num_nodes:

6

>> num_edges:

6

>> directed:

False

>> question:

Is there an edge between node <3> and node <2>?

>> answer:

No

>> steps:

Let's do it step by step.
The neighbors of node <3> are: [<0>], which does not contain node <2>. So the answer is 

>> choices:

('[Yes, No]',)

>> label:

1

####### sample 3 #######

>> task:

edge

>> graph:

[(<3>, <4>), (<3>, <1>), (<4>, <1>), (<4>, <2>), (<2>, <0>)]

>> graph_adj:

{<3>: [<4>, <1>],
<4>: [<3>, <1>, <2>],
<1>: [<3>, <4>],
<2>: [<4>, <0>],
<0>: [<2>]}

>> graph_nl:

Node <3> is connected to nodes <4>, <1>.
Node <4> is connected to nodes <3>, <1>, <2>.
Node <1> is connected to nodes <3>, <4>.
Node <2> is connected to nodes <4>, <0>.
Node <0> is connected to node <2>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>]

>> num_nodes:

5

>> num_edges:

5

>> directed:

False

>> question:

Is there an edge between node <3> and node <0>?

>> answer:

No

>> steps:

Let's do it step by step.
The neighbors of node <3> are: [<4>, <1>], which does not contain node <0>. So the answer is 

>> choices:

('[Yes, No]',)

>> label:

1

####### sample 4 #######

>> task:

edge

>> graph:

[(<1>, <3>), (<1>, <2>), (<1>, <4>), (<1>, <0>)]

>> graph_adj:

{<1>: [<3>, <2>, <4>, <0>],
<3>: [<1>],
<2>: [<1>],
<4>: [<1>],
<0>: [<1>]}

>> graph_nl:

Node <1> is connected to nodes <3>, <2>, <4>, <0>.
Node <3> is connected to node <1>.
Node <2> is connected to node <1>.
Node <4> is connected to node <1>.
Node <0> is connected to node <1>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>]

>> num_nodes:

5

>> num_edges:

4

>> directed:

False

>> question:

Is there an edge between node <2> and node <1>?

>> answer:

Yes

>> steps:

Let's do it step by step.
The neighbors of node <2> are: [<1>], which contains node <1>. So the answer is 

>> choices:

('[Yes, No]',)

>> label:

0

####### sample 5 #######

>> task:

edge

>> graph:

[(<1>, <5>), (<1>, <0>), (<1>, <2>), (<1>, <4>), (<4>, <3>)]

>> graph_adj:

{<1>: [<5>, <0>, <2>, <4>],
<5>: [<1>],
<0>: [<1>],
<2>: [<1>],
<4>: [<1>, <3>],
<3>: [<4>]}

>> graph_nl:

Node <1> is connected to nodes <5>, <0>, <2>, <4>.
Node <5> is connected to node <1>.
Node <0> is connected to node <1>.
Node <2> is connected to node <1>.
Node <4> is connected to nodes <1>, <3>.
Node <3> is connected to node <4>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>]

>> num_nodes:

6

>> num_edges:

5

>> directed:

False

>> question:

Is there an edge between node <1> and node <2>?

>> answer:

Yes

>> steps:

Let's do it step by step.
The neighbors of node <1> are: [<5>, <0>, <2>, <4>], which contains node <2>. So the answer is 

>> choices:

('[Yes, No]',)

>> label:

0

####### sample 6 #######

>> task:

edge

>> graph:

[(<2>, <4>), (<4>, <3>), (<4>, <5>), (<5>, <0>), (<5>, <1>), (<0>, <1>)]

>> graph_adj:

{<2>: [<4>],
<4>: [<2>, <3>, <5>],
<3>: [<4>],
<5>: [<4>, <0>, <1>],
<0>: [<1>, <5>],
<1>: [<0>, <5>]}

>> graph_nl:

Node <2> is connected to node <4>.
Node <4> is connected to nodes <2>, <3>, <5>.
Node <3> is connected to node <4>.
Node <5> is connected to nodes <4>, <0>, <1>.
Node <0> is connected to nodes <1>, <5>.
Node <1> is connected to nodes <0>, <5>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>]

>> num_nodes:

6

>> num_edges:

6

>> directed:

False

>> question:

Is there an edge between node <2> and node <0>?

>> answer:

No

>> steps:

Let's do it step by step.
The neighbors of node <2> are: [<4>], which does not contain node <0>. So the answer is 

>> choices:

('[Yes, No]',)

>> label:

1

####### sample 7 #######

>> task:

edge

>> graph:

[(<1>, <2>), (<1>, <4>), (<1>, <3>), (<4>, <5>), (<5>, <0>), (<5>, <6>), (<0>, <6>)]

>> graph_adj:

{<1>: [<2>, <4>, <3>],
<2>: [<1>],
<4>: [<1>, <5>],
<3>: [<1>],
<5>: [<4>, <0>, <6>],
<0>: [<5>, <6>],
<6>: [<5>, <0>]}

>> graph_nl:

Node <1> is connected to nodes <2>, <4>, <3>.
Node <2> is connected to node <1>.
Node <4> is connected to nodes <1>, <5>.
Node <3> is connected to node <1>.
Node <5> is connected to nodes <4>, <0>, <6>.
Node <0> is connected to nodes <5>, <6>.
Node <6> is connected to nodes <5>, <0>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>]

>> num_nodes:

7

>> num_edges:

7

>> directed:

False

>> question:

Is there an edge between node <5> and node <1>?

>> answer:

No

>> steps:

Let's do it step by step.
The neighbors of node <5> are: [<4>, <0>, <6>], which does not contain node <1>. So the answer is 

>> choices:

('[Yes, No]',)

>> label:

1

####### sample 8 #######

>> task:

edge

>> graph:

[(<5>, <4>), (<5>, <3>), (<5>, <2>), (<4>, <2>), (<4>, <1>), (<3>, <1>), (<3>, <4>), (<2>, <5>), (<2>, <1>), (<1>, <4>), (<1>, <5>), (<0>, <2>), (<0>, <5>), (<0>, <1>)]

>> graph_adj:

{<5>: [<4>, <3>, <2>],
<4>: [<2>, <1>],
<3>: [<1>, <4>],
<2>: [<5>, <1>],
<1>: [<4>, <5>],
<0>: [<2>, <5>, <1>]}

>> graph_nl:

Node <5> is connected to nodes <4>, <3>, <2>.
Node <4> is connected to nodes <2>, <1>.
Node <3> is connected to nodes <1>, <4>.
Node <2> is connected to nodes <5>, <1>.
Node <1> is connected to nodes <4>, <5>.
Node <0> is connected to nodes <2>, <5>, <1>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>]

>> num_nodes:

6

>> num_edges:

14

>> directed:

True

>> question:

Is there a directed edge from node <1> to node <5>?

>> answer:

Yes

>> steps:

Let's do it step by step.
The successors of node <1> are: [<4>, <5>], which contains node <5>. So the answer is 

>> choices:

('[Yes, No]',)

>> label:

0

####### sample 9 #######

>> task:

edge

>> graph:

[(<3>, <1>), (<3>, <0>), (<1>, <5>), (<0>, <5>), (<5>, <2>), (<2>, <6>), (<6>, <4>)]

>> graph_adj:

{<3>: [<1>, <0>],
<1>: [<3>, <5>],
<0>: [<3>, <5>],
<5>: [<1>, <2>, <0>],
<2>: [<5>, <6>],
<6>: [<2>, <4>],
<4>: [<6>]}

>> graph_nl:

Node <3> is connected to nodes <1>, <0>.
Node <1> is connected to nodes <3>, <5>.
Node <0> is connected to nodes <3>, <5>.
Node <5> is connected to nodes <1>, <2>, <0>.
Node <2> is connected to nodes <5>, <6>.
Node <6> is connected to nodes <2>, <4>.
Node <4> is connected to node <6>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>]

>> num_nodes:

7

>> num_edges:

7

>> directed:

False

>> question:

Is there an edge between node <1> and node <0>?

>> answer:

No

>> steps:

Let's do it step by step.
The neighbors of node <1> are: [<3>, <5>], which does not contain node <0>. So the answer is 

>> choices:

('[Yes, No]',)

>> label:

1

####### sample 10 #######

>> task:

edge

>> graph:

[(<1>, <0>), (<1>, <4>), (<1>, <3>), (<1>, <2>), (<1>, <5>), (<0>, <4>), (<0>, <3>), (<4>, <3>), (<4>, <2>), (<4>, <5>), (<3>, <2>), (<3>, <5>), (<2>, <5>)]

>> graph_adj:

{<1>: [<0>, <4>, <3>, <2>, <5>],
<0>: [<1>, <4>, <3>],
<4>: [<1>, <0>, <3>, <2>, <5>],
<3>: [<1>, <0>, <4>, <2>, <5>],
<2>: [<1>, <4>, <3>, <5>],
<5>: [<1>, <4>, <3>, <2>]}

>> graph_nl:

Node <1> is connected to nodes <0>, <4>, <3>, <2>, <5>.
Node <0> is connected to nodes <1>, <4>, <3>.
Node <4> is connected to nodes <1>, <0>, <3>, <2>, <5>.
Node <3> is connected to nodes <1>, <0>, <4>, <2>, <5>.
Node <2> is connected to nodes <1>, <4>, <3>, <5>.
Node <5> is connected to nodes <1>, <4>, <3>, <2>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>]

>> num_nodes:

6

>> num_edges:

13

>> directed:

False

>> question:

Is there an edge between node <5> and node <4>?

>> answer:

Yes

>> steps:

Let's do it step by step.
The neighbors of node <5> are: [<1>, <4>, <3>, <2>], which contains node <4>. So the answer is 

>> choices:

('[Yes, No]',)

>> label:

0

