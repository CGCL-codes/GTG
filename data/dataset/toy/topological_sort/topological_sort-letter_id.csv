task,graph,graph_adj,graph_nl,nodes,num_nodes,num_edges,directed,question,answer,steps,choices,label,id
topological_sort,"[(ABZ, VTJ), (RPN, ABZ), (RPN, VLY), (VLY, ABZ), (VLY, AEI), (VLY, YRB), (YRB, AEI), (YRB, VTJ), (YRB, ABZ), (LWJ, RPN), (LWJ, VLY), (LWJ, AEI)]","{ABZ: [VTJ],
VTJ: [],
RPN: [ABZ, VLY],
VLY: [ABZ, AEI, YRB],
AEI: [],
YRB: [AEI, VTJ, ABZ],
LWJ: [RPN, VLY, AEI]}","Node ABZ is connected to node VTJ.
Node RPN is connected to nodes ABZ, VLY.
Node VLY is connected to nodes ABZ, AEI, YRB.
Node YRB is connected to nodes AEI, VTJ, ABZ.
Node LWJ is connected to nodes RPN, VLY, AEI.","[AEI, YRB, VLY, RPN, ABZ, VTJ, LWJ]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LWJ, RPN, VLY, YRB, AEI, ABZ, VTJ]","Let's solve it step by step.
Nodes with 0 in-degree: [LWJ].
Visit node LWJ and remove it from the graph.
Nodes with 0 in-degree: [RPN].
Visit node RPN and remove it from the graph.
Nodes with 0 in-degree: [VLY].
Visit node VLY and remove it from the graph.
Nodes with 0 in-degree: [YRB].
Visit node YRB and remove it from the graph.
Nodes with 0 in-degree: [AEI, ABZ].
Visit node AEI and remove it from the graph.
Nodes with 0 in-degree: [ABZ].
Visit node ABZ and remove it from the graph.
Nodes with 0 in-degree: [VTJ].
Visit node VTJ and remove it from the graph.
So the result of topological sorting is ","('[[LWJ, RPN, ABZ, VTJ, VLY, YRB, AEI], [LWJ, RPN, VLY, AEI, YRB, ABZ, VTJ], [LWJ, RPN, VLY, ABZ, VTJ, YRB, AEI], [LWJ, RPN, VLY, YRB, AEI, ABZ, VTJ]]',)",3,0
topological_sort,"[(MYD, MLO), (MYD, HFN), (MLO, STU), (MLO, HCM), (STU, HCM), (STU, ZWQ), (STU, HFN), (ZWQ, HCM)]","{MYD: [MLO, HFN],
MLO: [STU, HCM],
HFN: [],
STU: [HCM, ZWQ, HFN],
HCM: [],
ZWQ: [HCM]}","Node MYD is connected to nodes MLO, HFN.
Node MLO is connected to nodes STU, HCM.
Node STU is connected to nodes HCM, ZWQ, HFN.
Node ZWQ is connected to node HCM.","[ZWQ, MYD, HCM, STU, HFN, MLO]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MYD, MLO, STU, ZWQ, HFN, HCM]","Let's solve it step by step.
Nodes with 0 in-degree: [MYD].
Visit node MYD and remove it from the graph.
Nodes with 0 in-degree: [MLO].
Visit node MLO and remove it from the graph.
Nodes with 0 in-degree: [STU].
Visit node STU and remove it from the graph.
Nodes with 0 in-degree: [ZWQ, HFN].
Visit node ZWQ and remove it from the graph.
Nodes with 0 in-degree: [HFN, HCM].
Visit node HFN and remove it from the graph.
Nodes with 0 in-degree: [HCM].
Visit node HCM and remove it from the graph.
So the result of topological sorting is ","('[[MYD, MLO, STU, ZWQ, HFN, HCM], [MYD, HCM, ZWQ, MLO, HFN, STU], [MYD, MLO, HFN, HCM, STU, ZWQ], [MYD, MLO, STU, ZWQ, HFN, HCM]]',)",3,1
topological_sort,"[(VWV, GMN), (VWV, RKI), (GMN, RKI), (RKI, PXW), (RKI, XMH), (XMH, PXW)]","{VWV: [GMN, RKI],
GMN: [RKI],
RKI: [PXW, XMH],
PXW: [],
XMH: [PXW]}","Node VWV is connected to nodes GMN, RKI.
Node GMN is connected to node RKI.
Node RKI is connected to nodes PXW, XMH.
Node XMH is connected to node PXW.","[RKI, XMH, VWV, PXW, GMN]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VWV, GMN, RKI, XMH, PXW]","Let's solve it step by step.
Nodes with 0 in-degree: [VWV].
Visit node VWV and remove it from the graph.
Nodes with 0 in-degree: [GMN].
Visit node GMN and remove it from the graph.
Nodes with 0 in-degree: [RKI].
Visit node RKI and remove it from the graph.
Nodes with 0 in-degree: [XMH].
Visit node XMH and remove it from the graph.
Nodes with 0 in-degree: [PXW].
Visit node PXW and remove it from the graph.
So the result of topological sorting is ","('[[VWV, PXW, GMN, XMH, RKI], [VWV, GMN, RKI, XMH, PXW], [VWV, GMN, RKI, XMH, PXW], [VWV, PXW, GMN, RKI, XMH]]',)",1,2
topological_sort,"[(CCU, ZSS), (CCU, ZSE), (JBA, ZSE), (JBA, UMG), (JBA, ZSS), (JBA, CCU)]","{CCU: [ZSS, ZSE],
ZSS: [],
ZSE: [],
JBA: [ZSE, UMG, ZSS, CCU],
UMG: []}","Node CCU is connected to nodes ZSS, ZSE.
Node JBA is connected to nodes ZSE, UMG, ZSS, CCU.","[JBA, ZSS, UMG, CCU, ZSE]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JBA, UMG, CCU, ZSS, ZSE]","Let's solve it step by step.
Nodes with 0 in-degree: [JBA].
Visit node JBA and remove it from the graph.
Nodes with 0 in-degree: [UMG, CCU].
Visit node UMG and remove it from the graph.
Nodes with 0 in-degree: [CCU].
Visit node CCU and remove it from the graph.
Nodes with 0 in-degree: [ZSS, ZSE].
Visit node ZSS and remove it from the graph.
Nodes with 0 in-degree: [ZSE].
Visit node ZSE and remove it from the graph.
So the result of topological sorting is ","('[[JBA, UMG, CCU, ZSS, ZSE], [JBA, UMG, CCU, ZSE, ZSS], [JBA, ZSE, UMG, CCU, ZSS], [JBA, CCU, ZSE, ZSS, UMG]]',)",0,3
topological_sort,"[(GGO, IRD), (GGO, XHW), (GGO, ALL), (ALL, XHW), (ALL, QKH), (CUH, IRD), (CUH, OZE), (CUH, ALL), (CUH, GGO), (OZE, IRD), (OZE, ALL), (QKH, IRD)]","{GGO: [IRD, XHW, ALL],
IRD: [],
XHW: [],
ALL: [XHW, QKH],
CUH: [IRD, OZE, ALL, GGO],
OZE: [IRD, ALL],
QKH: [IRD]}","Node GGO is connected to nodes IRD, XHW, ALL.
Node ALL is connected to nodes XHW, QKH.
Node CUH is connected to nodes IRD, OZE, ALL, GGO.
Node OZE is connected to nodes IRD, ALL.
Node QKH is connected to node IRD.","[XHW, IRD, QKH, CUH, GGO, OZE, ALL]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CUH, OZE, GGO, ALL, XHW, QKH, IRD]","Let's solve it step by step.
Nodes with 0 in-degree: [CUH].
Visit node CUH and remove it from the graph.
Nodes with 0 in-degree: [OZE, GGO].
Visit node OZE and remove it from the graph.
Nodes with 0 in-degree: [GGO].
Visit node GGO and remove it from the graph.
Nodes with 0 in-degree: [ALL].
Visit node ALL and remove it from the graph.
Nodes with 0 in-degree: [XHW, QKH].
Visit node XHW and remove it from the graph.
Nodes with 0 in-degree: [QKH].
Visit node QKH and remove it from the graph.
Nodes with 0 in-degree: [IRD].
Visit node IRD and remove it from the graph.
So the result of topological sorting is ","('[[CUH, OZE, GGO, XHW, IRD, QKH, ALL], [CUH, IRD, OZE, QKH, GGO, ALL, XHW], [CUH, OZE, QKH, IRD, GGO, ALL, XHW], [CUH, OZE, GGO, ALL, XHW, QKH, IRD]]',)",3,4
topological_sort,"[(XGN, CQP), (XGN, NIL), (NIL, CQP), (POI, NIL), (POI, XGN), (JKH, CQP), (JKH, FPE), (JKH, NIL), (JKH, YHS), (FPE, POI), (FPE, NIL), (FPE, XGN), (FPE, YHS), (YHS, XGN), (YHS, CQP)]","{XGN: [CQP, NIL],
CQP: [],
NIL: [CQP],
POI: [NIL, XGN],
JKH: [CQP, FPE, NIL, YHS],
FPE: [POI, NIL, XGN, YHS],
YHS: [XGN, CQP]}","Node XGN is connected to nodes CQP, NIL.
Node NIL is connected to node CQP.
Node POI is connected to nodes NIL, XGN.
Node JKH is connected to nodes CQP, FPE, NIL, YHS.
Node FPE is connected to nodes POI, NIL, XGN, YHS.
Node YHS is connected to nodes XGN, CQP.","[YHS, FPE, NIL, POI, JKH, XGN, CQP]",7,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JKH, FPE, POI, YHS, XGN, NIL, CQP]","Let's solve it step by step.
Nodes with 0 in-degree: [JKH].
Visit node JKH and remove it from the graph.
Nodes with 0 in-degree: [FPE].
Visit node FPE and remove it from the graph.
Nodes with 0 in-degree: [POI, YHS].
Visit node POI and remove it from the graph.
Nodes with 0 in-degree: [YHS].
Visit node YHS and remove it from the graph.
Nodes with 0 in-degree: [XGN].
Visit node XGN and remove it from the graph.
Nodes with 0 in-degree: [NIL].
Visit node NIL and remove it from the graph.
Nodes with 0 in-degree: [CQP].
Visit node CQP and remove it from the graph.
So the result of topological sorting is ","('[[JKH, FPE, NIL, CQP, POI, YHS, XGN], [JKH, FPE, POI, YHS, XGN, NIL, CQP], [JKH, XGN, YHS, POI, NIL, CQP, FPE], [JKH, FPE, POI, XGN, YHS, CQP, NIL]]',)",1,5
topological_sort,"[(UDU, AVT), (UDU, DBV), (UDU, UXG), (AVT, DBV), (WPV, UDU), (WPV, UXG), (WPV, UVI), (UVI, DBV), (UVI, UDU), (UVI, UXG)]","{UDU: [AVT, DBV, UXG],
AVT: [DBV],
DBV: [],
UXG: [],
WPV: [UDU, UXG, UVI],
UVI: [DBV, UDU, UXG]}","Node UDU is connected to nodes AVT, DBV, UXG.
Node AVT is connected to node DBV.
Node WPV is connected to nodes UDU, UXG, UVI.
Node UVI is connected to nodes DBV, UDU, UXG.","[UDU, WPV, UVI, AVT, UXG, DBV]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WPV, UVI, UDU, AVT, UXG, DBV]","Let's solve it step by step.
Nodes with 0 in-degree: [WPV].
Visit node WPV and remove it from the graph.
Nodes with 0 in-degree: [UVI].
Visit node UVI and remove it from the graph.
Nodes with 0 in-degree: [UDU].
Visit node UDU and remove it from the graph.
Nodes with 0 in-degree: [AVT, UXG].
Visit node AVT and remove it from the graph.
Nodes with 0 in-degree: [UXG, DBV].
Visit node UXG and remove it from the graph.
Nodes with 0 in-degree: [DBV].
Visit node DBV and remove it from the graph.
So the result of topological sorting is ","('[[WPV, UVI, UDU, AVT, UXG, DBV], [WPV, UVI, UDU, UXG, DBV, AVT], [WPV, UXG, UVI, AVT, UDU, DBV], [WPV, UVI, UXG, DBV, UDU, AVT]]',)",0,6
topological_sort,"[(MFS, CIO), (MFS, JEZ), (JEZ, CIO), (QEF, GLQ), (QEF, MFS), (QEF, JOP), (QEF, CIO), (GLQ, CIO), (JOP, JEZ)]","{MFS: [CIO, JEZ],
CIO: [],
JEZ: [CIO],
QEF: [GLQ, MFS, JOP, CIO],
GLQ: [CIO],
JOP: [JEZ]}","Node MFS is connected to nodes CIO, JEZ.
Node JEZ is connected to node CIO.
Node QEF is connected to nodes GLQ, MFS, JOP, CIO.
Node GLQ is connected to node CIO.
Node JOP is connected to node JEZ.","[CIO, GLQ, QEF, MFS, JEZ, JOP]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QEF, GLQ, MFS, JOP, JEZ, CIO]","Let's solve it step by step.
Nodes with 0 in-degree: [QEF].
Visit node QEF and remove it from the graph.
Nodes with 0 in-degree: [GLQ, MFS, JOP].
Visit node GLQ and remove it from the graph.
Nodes with 0 in-degree: [MFS, JOP].
Visit node MFS and remove it from the graph.
Nodes with 0 in-degree: [JOP].
Visit node JOP and remove it from the graph.
Nodes with 0 in-degree: [JEZ].
Visit node JEZ and remove it from the graph.
Nodes with 0 in-degree: [CIO].
Visit node CIO and remove it from the graph.
So the result of topological sorting is ","('[[QEF, JOP, CIO, MFS, GLQ, JEZ], [QEF, GLQ, JEZ, CIO, MFS, JOP], [QEF, GLQ, MFS, JEZ, CIO, JOP], [QEF, GLQ, MFS, JOP, JEZ, CIO]]',)",3,7
topological_sort,"[(OFX, BPG), (OFX, OCH), (OFX, JBC), (OFX, EJZ), (BPG, JBC), (OCH, EJZ), (OCH, BPG), (OCH, JBC), (EJZ, BPG), (RPP, OFX), (RPP, BPG), (RPP, EJZ), (KSU, OCH), (KSU, JBC), (KSU, RPP), (KSU, OFX), (KSU, BPG)]","{OFX: [BPG, OCH, JBC, EJZ],
BPG: [JBC],
OCH: [EJZ, BPG, JBC],
JBC: [],
EJZ: [BPG],
RPP: [OFX, BPG, EJZ],
KSU: [OCH, JBC, RPP, OFX, BPG]}","Node OFX is connected to nodes BPG, OCH, JBC, EJZ.
Node BPG is connected to node JBC.
Node OCH is connected to nodes EJZ, BPG, JBC.
Node EJZ is connected to node BPG.
Node RPP is connected to nodes OFX, BPG, EJZ.
Node KSU is connected to nodes OCH, JBC, RPP, OFX, BPG.","[EJZ, RPP, KSU, JBC, OCH, OFX, BPG]",7,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KSU, RPP, OFX, OCH, EJZ, BPG, JBC]","Let's solve it step by step.
Nodes with 0 in-degree: [KSU].
Visit node KSU and remove it from the graph.
Nodes with 0 in-degree: [RPP].
Visit node RPP and remove it from the graph.
Nodes with 0 in-degree: [OFX].
Visit node OFX and remove it from the graph.
Nodes with 0 in-degree: [OCH].
Visit node OCH and remove it from the graph.
Nodes with 0 in-degree: [EJZ].
Visit node EJZ and remove it from the graph.
Nodes with 0 in-degree: [BPG].
Visit node BPG and remove it from the graph.
Nodes with 0 in-degree: [JBC].
Visit node JBC and remove it from the graph.
So the result of topological sorting is ","('[[KSU, RPP, BPG, JBC, OFX, OCH, EJZ], [KSU, BPG, OCH, EJZ, RPP, JBC, OFX], [KSU, RPP, OFX, JBC, EJZ, OCH, BPG], [KSU, RPP, OFX, OCH, EJZ, BPG, JBC]]',)",3,8
topological_sort,"[(RRE, LOI), (RRE, QSV), (RRE, ODU), (LOI, ZGN), (LOI, ODU), (LOI, QSV), (ODU, QSV), (NNU, ODU), (NNU, ZGN)]","{RRE: [LOI, QSV, ODU],
LOI: [ZGN, ODU, QSV],
QSV: [],
ODU: [QSV],
ZGN: [],
NNU: [ODU, ZGN]}","Node RRE is connected to nodes LOI, QSV, ODU.
Node LOI is connected to nodes ZGN, ODU, QSV.
Node ODU is connected to node QSV.
Node NNU is connected to nodes ODU, ZGN.","[NNU, ODU, QSV, ZGN, LOI, RRE]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RRE, NNU, LOI, ZGN, ODU, QSV]","Let's solve it step by step.
Nodes with 0 in-degree: [RRE, NNU].
Visit node RRE and remove it from the graph.
Nodes with 0 in-degree: [NNU, LOI].
Visit node NNU and remove it from the graph.
Nodes with 0 in-degree: [LOI].
Visit node LOI and remove it from the graph.
Nodes with 0 in-degree: [ZGN, ODU].
Visit node ZGN and remove it from the graph.
Nodes with 0 in-degree: [ODU].
Visit node ODU and remove it from the graph.
Nodes with 0 in-degree: [QSV].
Visit node QSV and remove it from the graph.
So the result of topological sorting is ","('[[RRE, NNU, LOI, ZGN, ODU, QSV], [RRE, NNU, ODU, QSV, ZGN, LOI], [RRE, NNU, LOI, QSV, ZGN, ODU], [RRE, NNU, ODU, QSV, LOI, ZGN]]',)",0,9
topological_sort,"[(XWI, IAY), (XWI, BSX), (IAY, ZVW), (BSX, RFP), (RFP, IAY), (CJB, XWI), (CJB, BSX)]","{XWI: [IAY, BSX],
IAY: [ZVW],
BSX: [RFP],
ZVW: [],
RFP: [IAY],
CJB: [XWI, BSX]}","Node XWI is connected to nodes IAY, BSX.
Node IAY is connected to node ZVW.
Node BSX is connected to node RFP.
Node RFP is connected to node IAY.
Node CJB is connected to nodes XWI, BSX.","[IAY, BSX, XWI, ZVW, CJB, RFP]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CJB, XWI, BSX, RFP, IAY, ZVW]","Let's solve it step by step.
Nodes with 0 in-degree: [CJB].
Visit node CJB and remove it from the graph.
Nodes with 0 in-degree: [XWI].
Visit node XWI and remove it from the graph.
Nodes with 0 in-degree: [BSX].
Visit node BSX and remove it from the graph.
Nodes with 0 in-degree: [RFP].
Visit node RFP and remove it from the graph.
Nodes with 0 in-degree: [IAY].
Visit node IAY and remove it from the graph.
Nodes with 0 in-degree: [ZVW].
Visit node ZVW and remove it from the graph.
So the result of topological sorting is ","('[[CJB, XWI, IAY, ZVW, BSX, RFP], [CJB, RFP, BSX, IAY, XWI, ZVW], [CJB, XWI, BSX, RFP, ZVW, IAY], [CJB, XWI, BSX, RFP, IAY, ZVW]]',)",3,10
topological_sort,"[(YMA, COD), (YMA, EGA), (YMA, AIM), (EGA, AIM), (YNS, YMA), (YNS, COD), (YNS, LBA), (LBA, EGA), (LBA, AIM), (LBA, YMA), (PFY, AIM), (PFY, YNS)]","{YMA: [COD, EGA, AIM],
COD: [],
EGA: [AIM],
AIM: [],
YNS: [YMA, COD, LBA],
LBA: [EGA, AIM, YMA],
PFY: [AIM, YNS]}","Node YMA is connected to nodes COD, EGA, AIM.
Node EGA is connected to node AIM.
Node YNS is connected to nodes YMA, COD, LBA.
Node LBA is connected to nodes EGA, AIM, YMA.
Node PFY is connected to nodes AIM, YNS.","[YNS, PFY, AIM, YMA, COD, LBA, EGA]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PFY, YNS, LBA, YMA, COD, EGA, AIM]","Let's solve it step by step.
Nodes with 0 in-degree: [PFY].
Visit node PFY and remove it from the graph.
Nodes with 0 in-degree: [YNS].
Visit node YNS and remove it from the graph.
Nodes with 0 in-degree: [LBA].
Visit node LBA and remove it from the graph.
Nodes with 0 in-degree: [YMA].
Visit node YMA and remove it from the graph.
Nodes with 0 in-degree: [COD, EGA].
Visit node COD and remove it from the graph.
Nodes with 0 in-degree: [EGA].
Visit node EGA and remove it from the graph.
Nodes with 0 in-degree: [AIM].
Visit node AIM and remove it from the graph.
So the result of topological sorting is ","('[[PFY, EGA, YMA, YNS, COD, LBA, AIM], [PFY, YNS, LBA, EGA, YMA, COD, AIM], [PFY, YNS, LBA, YMA, COD, EGA, AIM], [PFY, YNS, EGA, AIM, LBA, YMA, COD]]',)",2,11
topological_sort,"[(WUM, NRR), (WUM, HRT), (NRR, HRT), (UJX, NRR), (UJX, WUM), (UJX, UKF), (UKF, HRT), (UDK, HRT), (UDK, UJX), (UDK, UKF), (AJB, HRT), (AJB, UDK), (AJB, UJX)]","{WUM: [NRR, HRT],
NRR: [HRT],
HRT: [],
UJX: [NRR, WUM, UKF],
UKF: [HRT],
UDK: [HRT, UJX, UKF],
AJB: [HRT, UDK, UJX]}","Node WUM is connected to nodes NRR, HRT.
Node NRR is connected to node HRT.
Node UJX is connected to nodes NRR, WUM, UKF.
Node UKF is connected to node HRT.
Node UDK is connected to nodes HRT, UJX, UKF.
Node AJB is connected to nodes HRT, UDK, UJX.","[UKF, WUM, UDK, HRT, NRR, UJX, AJB]",7,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[AJB, UDK, UJX, WUM, UKF, NRR, HRT]","Let's solve it step by step.
Nodes with 0 in-degree: [AJB].
Visit node AJB and remove it from the graph.
Nodes with 0 in-degree: [UDK].
Visit node UDK and remove it from the graph.
Nodes with 0 in-degree: [UJX].
Visit node UJX and remove it from the graph.
Nodes with 0 in-degree: [WUM, UKF].
Visit node WUM and remove it from the graph.
Nodes with 0 in-degree: [UKF, NRR].
Visit node UKF and remove it from the graph.
Nodes with 0 in-degree: [NRR].
Visit node NRR and remove it from the graph.
Nodes with 0 in-degree: [HRT].
Visit node HRT and remove it from the graph.
So the result of topological sorting is ","('[[AJB, UDK, UJX, WUM, UKF, NRR, HRT], [AJB, NRR, UDK, UKF, UJX, HRT, WUM], [AJB, UDK, UJX, HRT, WUM, NRR, UKF], [AJB, UDK, NRR, HRT, UJX, WUM, UKF]]',)",0,12
topological_sort,"[(UYQ, TFP), (TFP, PPQ), (FPH, ZPS), (FPH, TFP), (FPH, UYQ), (ZPS, TFP), (ZPS, UYQ), (ZPS, ARV), (ARV, TFP)]","{UYQ: [TFP],
TFP: [PPQ],
PPQ: [],
FPH: [ZPS, TFP, UYQ],
ZPS: [TFP, UYQ, ARV],
ARV: [TFP]}","Node UYQ is connected to node TFP.
Node TFP is connected to node PPQ.
Node FPH is connected to nodes ZPS, TFP, UYQ.
Node ZPS is connected to nodes TFP, UYQ, ARV.
Node ARV is connected to node TFP.","[FPH, TFP, ZPS, UYQ, PPQ, ARV]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FPH, ZPS, UYQ, ARV, TFP, PPQ]","Let's solve it step by step.
Nodes with 0 in-degree: [FPH].
Visit node FPH and remove it from the graph.
Nodes with 0 in-degree: [ZPS].
Visit node ZPS and remove it from the graph.
Nodes with 0 in-degree: [UYQ, ARV].
Visit node UYQ and remove it from the graph.
Nodes with 0 in-degree: [ARV].
Visit node ARV and remove it from the graph.
Nodes with 0 in-degree: [TFP].
Visit node TFP and remove it from the graph.
Nodes with 0 in-degree: [PPQ].
Visit node PPQ and remove it from the graph.
So the result of topological sorting is ","('[[FPH, ZPS, UYQ, ARV, TFP, PPQ], [FPH, ZPS, UYQ, PPQ, TFP, ARV], [FPH, ZPS, ARV, TFP, UYQ, PPQ], [FPH, ZPS, TFP, PPQ, UYQ, ARV]]',)",0,13
topological_sort,"[(LCK, VVP), (LCK, ZDY), (BBV, VVP), (BBV, LCK), (BBV, ZDY), (CVV, BBV), (CVV, EFQ), (EFQ, LCK)]","{LCK: [VVP, ZDY],
VVP: [],
ZDY: [],
BBV: [VVP, LCK, ZDY],
CVV: [BBV, EFQ],
EFQ: [LCK]}","Node LCK is connected to nodes VVP, ZDY.
Node BBV is connected to nodes VVP, LCK, ZDY.
Node CVV is connected to nodes BBV, EFQ.
Node EFQ is connected to node LCK.","[LCK, CVV, EFQ, ZDY, BBV, VVP]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CVV, BBV, EFQ, LCK, VVP, ZDY]","Let's solve it step by step.
Nodes with 0 in-degree: [CVV].
Visit node CVV and remove it from the graph.
Nodes with 0 in-degree: [BBV, EFQ].
Visit node BBV and remove it from the graph.
Nodes with 0 in-degree: [EFQ].
Visit node EFQ and remove it from the graph.
Nodes with 0 in-degree: [LCK].
Visit node LCK and remove it from the graph.
Nodes with 0 in-degree: [VVP, ZDY].
Visit node VVP and remove it from the graph.
Nodes with 0 in-degree: [ZDY].
Visit node ZDY and remove it from the graph.
So the result of topological sorting is ","('[[CVV, BBV, VVP, ZDY, EFQ, LCK], [CVV, BBV, EFQ, VVP, LCK, ZDY], [CVV, BBV, ZDY, EFQ, VVP, LCK], [CVV, BBV, EFQ, LCK, VVP, ZDY]]',)",3,14
topological_sort,"[(IGR, ZVW), (IGR, RUJ), (IGR, KUA), (ZVW, RUJ), (KUA, RUJ), (KUA, ZVW), (RMB, KUA), (RMB, ZVW), (RMB, IGR)]","{IGR: [ZVW, RUJ, KUA],
ZVW: [RUJ],
RUJ: [],
KUA: [RUJ, ZVW],
RMB: [KUA, ZVW, IGR]}","Node IGR is connected to nodes ZVW, RUJ, KUA.
Node ZVW is connected to node RUJ.
Node KUA is connected to nodes RUJ, ZVW.
Node RMB is connected to nodes KUA, ZVW, IGR.","[RUJ, ZVW, IGR, RMB, KUA]",5,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RMB, IGR, KUA, ZVW, RUJ]","Let's solve it step by step.
Nodes with 0 in-degree: [RMB].
Visit node RMB and remove it from the graph.
Nodes with 0 in-degree: [IGR].
Visit node IGR and remove it from the graph.
Nodes with 0 in-degree: [KUA].
Visit node KUA and remove it from the graph.
Nodes with 0 in-degree: [ZVW].
Visit node ZVW and remove it from the graph.
Nodes with 0 in-degree: [RUJ].
Visit node RUJ and remove it from the graph.
So the result of topological sorting is ","('[[RMB, RUJ, IGR, KUA, ZVW], [RMB, IGR, ZVW, RUJ, KUA], [RMB, IGR, KUA, ZVW, RUJ], [RMB, IGR, ZVW, RUJ, KUA]]',)",2,15
topological_sort,"[(RZC, TVJ), (RZC, DWM), (RZC, QAO), (QAO, TVJ), (CGJ, DWM), (CGJ, TVJ), (IMX, TVJ), (IMX, RZC)]","{RZC: [TVJ, DWM, QAO],
TVJ: [],
DWM: [],
QAO: [TVJ],
CGJ: [DWM, TVJ],
IMX: [TVJ, RZC]}","Node RZC is connected to nodes TVJ, DWM, QAO.
Node QAO is connected to node TVJ.
Node CGJ is connected to nodes DWM, TVJ.
Node IMX is connected to nodes TVJ, RZC.","[QAO, DWM, CGJ, IMX, RZC, TVJ]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CGJ, IMX, RZC, DWM, QAO, TVJ]","Let's solve it step by step.
Nodes with 0 in-degree: [CGJ, IMX].
Visit node CGJ and remove it from the graph.
Nodes with 0 in-degree: [IMX].
Visit node IMX and remove it from the graph.
Nodes with 0 in-degree: [RZC].
Visit node RZC and remove it from the graph.
Nodes with 0 in-degree: [DWM, QAO].
Visit node DWM and remove it from the graph.
Nodes with 0 in-degree: [QAO].
Visit node QAO and remove it from the graph.
Nodes with 0 in-degree: [TVJ].
Visit node TVJ and remove it from the graph.
So the result of topological sorting is ","('[[CGJ, IMX, RZC, TVJ, QAO, DWM], [CGJ, IMX, RZC, DWM, TVJ, QAO], [CGJ, IMX, RZC, DWM, QAO, TVJ], [CGJ, IMX, QAO, TVJ, RZC, DWM]]',)",2,16
topological_sort,"[(JLM, ASR), (ASR, EBM), (ASR, EUJ), (EBM, EUJ), (SAD, WKO), (SAD, ASR), (WKO, EUJ), (WKO, JLM), (WKO, EBM), (JFY, JLM), (JFY, SAD)]","{JLM: [ASR],
ASR: [EBM, EUJ],
EBM: [EUJ],
EUJ: [],
SAD: [WKO, ASR],
WKO: [EUJ, JLM, EBM],
JFY: [JLM, SAD]}","Node JLM is connected to node ASR.
Node ASR is connected to nodes EBM, EUJ.
Node EBM is connected to node EUJ.
Node SAD is connected to nodes WKO, ASR.
Node WKO is connected to nodes EUJ, JLM, EBM.
Node JFY is connected to nodes JLM, SAD.","[WKO, EBM, JLM, ASR, SAD, EUJ, JFY]",7,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JFY, SAD, WKO, JLM, ASR, EBM, EUJ]","Let's solve it step by step.
Nodes with 0 in-degree: [JFY].
Visit node JFY and remove it from the graph.
Nodes with 0 in-degree: [SAD].
Visit node SAD and remove it from the graph.
Nodes with 0 in-degree: [WKO].
Visit node WKO and remove it from the graph.
Nodes with 0 in-degree: [JLM].
Visit node JLM and remove it from the graph.
Nodes with 0 in-degree: [ASR].
Visit node ASR and remove it from the graph.
Nodes with 0 in-degree: [EBM].
Visit node EBM and remove it from the graph.
Nodes with 0 in-degree: [EUJ].
Visit node EUJ and remove it from the graph.
So the result of topological sorting is ","('[[JFY, SAD, WKO, JLM, EBM, ASR, EUJ], [JFY, ASR, JLM, EBM, WKO, EUJ, SAD], [JFY, SAD, WKO, JLM, ASR, EBM, EUJ], [JFY, SAD, EBM, EUJ, WKO, JLM, ASR]]',)",2,17
topological_sort,"[(UTK, WTV), (UTK, SVC), (WTV, LMR), (LMR, SVC), (LUT, NYQ), (NYQ, UTK), (NYQ, WTV)]","{UTK: [WTV, SVC],
WTV: [LMR],
SVC: [],
LMR: [SVC],
LUT: [NYQ],
NYQ: [UTK, WTV]}","Node UTK is connected to nodes WTV, SVC.
Node WTV is connected to node LMR.
Node LMR is connected to node SVC.
Node LUT is connected to node NYQ.
Node NYQ is connected to nodes UTK, WTV.","[UTK, NYQ, WTV, LUT, SVC, LMR]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LUT, NYQ, UTK, WTV, LMR, SVC]","Let's solve it step by step.
Nodes with 0 in-degree: [LUT].
Visit node LUT and remove it from the graph.
Nodes with 0 in-degree: [NYQ].
Visit node NYQ and remove it from the graph.
Nodes with 0 in-degree: [UTK].
Visit node UTK and remove it from the graph.
Nodes with 0 in-degree: [WTV].
Visit node WTV and remove it from the graph.
Nodes with 0 in-degree: [LMR].
Visit node LMR and remove it from the graph.
Nodes with 0 in-degree: [SVC].
Visit node SVC and remove it from the graph.
So the result of topological sorting is ","('[[LUT, NYQ, LMR, SVC, UTK, WTV], [LUT, NYQ, UTK, WTV, LMR, SVC], [LUT, NYQ, UTK, WTV, SVC, LMR], [LUT, SVC, LMR, WTV, UTK, NYQ]]',)",1,18
topological_sort,"[(EIW, CLW), (EIW, GUI), (EIW, XZZ), (EIW, GIV), (GUI, GIV), (XZZ, CLW), (XZZ, GUI), (XZZ, GIV), (GIV, CLW)]","{EIW: [CLW, GUI, XZZ, GIV],
CLW: [],
GUI: [GIV],
XZZ: [CLW, GUI, GIV],
GIV: [CLW]}","Node EIW is connected to nodes CLW, GUI, XZZ, GIV.
Node GUI is connected to node GIV.
Node XZZ is connected to nodes CLW, GUI, GIV.
Node GIV is connected to node CLW.","[GIV, XZZ, GUI, CLW, EIW]",5,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EIW, XZZ, GUI, GIV, CLW]","Let's solve it step by step.
Nodes with 0 in-degree: [EIW].
Visit node EIW and remove it from the graph.
Nodes with 0 in-degree: [XZZ].
Visit node XZZ and remove it from the graph.
Nodes with 0 in-degree: [GUI].
Visit node GUI and remove it from the graph.
Nodes with 0 in-degree: [GIV].
Visit node GIV and remove it from the graph.
Nodes with 0 in-degree: [CLW].
Visit node CLW and remove it from the graph.
So the result of topological sorting is ","('[[EIW, XZZ, GUI, GIV, CLW], [EIW, XZZ, GIV, CLW, GUI], [EIW, XZZ, CLW, GUI, GIV], [EIW, CLW, XZZ, GUI, GIV]]',)",0,19
topological_sort,"[(QZV, PVV), (QZV, HIN), (PVV, AAY), (AAY, HIN), (LFF, AAY), (LFF, PVV), (AQY, LFF), (AQY, AAY)]","{QZV: [PVV, HIN],
PVV: [AAY],
HIN: [],
AAY: [HIN],
LFF: [AAY, PVV],
AQY: [LFF, AAY]}","Node QZV is connected to nodes PVV, HIN.
Node PVV is connected to node AAY.
Node AAY is connected to node HIN.
Node LFF is connected to nodes AAY, PVV.
Node AQY is connected to nodes LFF, AAY.","[LFF, PVV, HIN, AQY, QZV, AAY]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QZV, AQY, LFF, PVV, AAY, HIN]","Let's solve it step by step.
Nodes with 0 in-degree: [QZV, AQY].
Visit node QZV and remove it from the graph.
Nodes with 0 in-degree: [AQY].
Visit node AQY and remove it from the graph.
Nodes with 0 in-degree: [LFF].
Visit node LFF and remove it from the graph.
Nodes with 0 in-degree: [PVV].
Visit node PVV and remove it from the graph.
Nodes with 0 in-degree: [AAY].
Visit node AAY and remove it from the graph.
Nodes with 0 in-degree: [HIN].
Visit node HIN and remove it from the graph.
So the result of topological sorting is ","('[[QZV, AQY, AAY, HIN, LFF, PVV], [QZV, AQY, LFF, PVV, HIN, AAY], [QZV, LFF, PVV, AAY, HIN, AQY], [QZV, AQY, LFF, PVV, AAY, HIN]]',)",3,20
topological_sort,"[(YGP, TZT), (YGP, CKF), (YGP, XNN), (YGP, FFT), (TZT, FFT), (TZT, CKF), (TZT, XNN), (CKF, FFT), (XNN, WWB), (XNN, FFT), (WWB, FFT), (WWB, CKF), (BRT, WWB), (BRT, XNN)]","{YGP: [TZT, CKF, XNN, FFT],
TZT: [FFT, CKF, XNN],
CKF: [FFT],
XNN: [WWB, FFT],
FFT: [],
WWB: [FFT, CKF],
BRT: [WWB, XNN]}","Node YGP is connected to nodes TZT, CKF, XNN, FFT.
Node TZT is connected to nodes FFT, CKF, XNN.
Node CKF is connected to node FFT.
Node XNN is connected to nodes WWB, FFT.
Node WWB is connected to nodes FFT, CKF.
Node BRT is connected to nodes WWB, XNN.","[WWB, YGP, FFT, TZT, XNN, BRT, CKF]",7,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YGP, BRT, TZT, XNN, WWB, CKF, FFT]","Let's solve it step by step.
Nodes with 0 in-degree: [YGP, BRT].
Visit node YGP and remove it from the graph.
Nodes with 0 in-degree: [BRT, TZT].
Visit node BRT and remove it from the graph.
Nodes with 0 in-degree: [TZT].
Visit node TZT and remove it from the graph.
Nodes with 0 in-degree: [XNN].
Visit node XNN and remove it from the graph.
Nodes with 0 in-degree: [WWB].
Visit node WWB and remove it from the graph.
Nodes with 0 in-degree: [CKF].
Visit node CKF and remove it from the graph.
Nodes with 0 in-degree: [FFT].
Visit node FFT and remove it from the graph.
So the result of topological sorting is ","('[[YGP, BRT, TZT, XNN, WWB, CKF, FFT], [YGP, BRT, CKF, FFT, TZT, XNN, WWB], [YGP, BRT, TZT, FFT, CKF, WWB, XNN], [YGP, XNN, TZT, CKF, BRT, FFT, WWB]]',)",0,21
topological_sort,"[(VJI, MWW), (JMI, VJI), (JMI, MWW), (WWV, ADU), (WWV, VJI), (WWV, JMI), (ADU, CJD), (ADU, MWW), (CJD, MWW)]","{VJI: [MWW],
MWW: [],
JMI: [VJI, MWW],
WWV: [ADU, VJI, JMI],
ADU: [CJD, MWW],
CJD: [MWW]}","Node VJI is connected to node MWW.
Node JMI is connected to nodes VJI, MWW.
Node WWV is connected to nodes ADU, VJI, JMI.
Node ADU is connected to nodes CJD, MWW.
Node CJD is connected to node MWW.","[MWW, JMI, CJD, VJI, WWV, ADU]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WWV, ADU, JMI, CJD, VJI, MWW]","Let's solve it step by step.
Nodes with 0 in-degree: [WWV].
Visit node WWV and remove it from the graph.
Nodes with 0 in-degree: [ADU, JMI].
Visit node ADU and remove it from the graph.
Nodes with 0 in-degree: [JMI, CJD].
Visit node JMI and remove it from the graph.
Nodes with 0 in-degree: [CJD, VJI].
Visit node CJD and remove it from the graph.
Nodes with 0 in-degree: [VJI].
Visit node VJI and remove it from the graph.
Nodes with 0 in-degree: [MWW].
Visit node MWW and remove it from the graph.
So the result of topological sorting is ","('[[WWV, ADU, JMI, CJD, VJI, MWW], [WWV, ADU, JMI, VJI, MWW, CJD], [WWV, ADU, VJI, MWW, JMI, CJD], [WWV, JMI, VJI, CJD, ADU, MWW]]',)",0,22
topological_sort,"[(QXK, KFY), (QXK, YXE), (QXK, MRM), (QXK, BVZ), (KFY, BVZ), (KFY, OBX), (YXE, MRM), (YXE, BVZ), (YXE, RMO), (MRM, BVZ), (OBX, MRM), (OBX, BVZ), (RMO, OBX)]","{QXK: [KFY, YXE, MRM, BVZ],
KFY: [BVZ, OBX],
YXE: [MRM, BVZ, RMO],
MRM: [BVZ],
BVZ: [],
OBX: [MRM, BVZ],
RMO: [OBX]}","Node QXK is connected to nodes KFY, YXE, MRM, BVZ.
Node KFY is connected to nodes BVZ, OBX.
Node YXE is connected to nodes MRM, BVZ, RMO.
Node MRM is connected to node BVZ.
Node OBX is connected to nodes MRM, BVZ.
Node RMO is connected to node OBX.","[BVZ, YXE, QXK, RMO, MRM, KFY, OBX]",7,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QXK, KFY, YXE, RMO, OBX, MRM, BVZ]","Let's solve it step by step.
Nodes with 0 in-degree: [QXK].
Visit node QXK and remove it from the graph.
Nodes with 0 in-degree: [KFY, YXE].
Visit node KFY and remove it from the graph.
Nodes with 0 in-degree: [YXE].
Visit node YXE and remove it from the graph.
Nodes with 0 in-degree: [RMO].
Visit node RMO and remove it from the graph.
Nodes with 0 in-degree: [OBX].
Visit node OBX and remove it from the graph.
Nodes with 0 in-degree: [MRM].
Visit node MRM and remove it from the graph.
Nodes with 0 in-degree: [BVZ].
Visit node BVZ and remove it from the graph.
So the result of topological sorting is ","('[[QXK, OBX, YXE, MRM, BVZ, RMO, KFY], [QXK, KFY, YXE, BVZ, RMO, OBX, MRM], [QXK, KFY, MRM, BVZ, YXE, RMO, OBX], [QXK, KFY, YXE, RMO, OBX, MRM, BVZ]]',)",3,23
topological_sort,"[(GTK, LTC), (GTK, MIF), (MIF, IUO), (IUO, LTC), (GUK, LTC), (GUK, GTK), (GUK, IUO), (GUK, MIF)]","{GTK: [LTC, MIF],
LTC: [],
MIF: [IUO],
IUO: [LTC],
GUK: [LTC, GTK, IUO, MIF]}","Node GTK is connected to nodes LTC, MIF.
Node MIF is connected to node IUO.
Node IUO is connected to node LTC.
Node GUK is connected to nodes LTC, GTK, IUO, MIF.","[GUK, LTC, IUO, GTK, MIF]",5,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GUK, GTK, MIF, IUO, LTC]","Let's solve it step by step.
Nodes with 0 in-degree: [GUK].
Visit node GUK and remove it from the graph.
Nodes with 0 in-degree: [GTK].
Visit node GTK and remove it from the graph.
Nodes with 0 in-degree: [MIF].
Visit node MIF and remove it from the graph.
Nodes with 0 in-degree: [IUO].
Visit node IUO and remove it from the graph.
Nodes with 0 in-degree: [LTC].
Visit node LTC and remove it from the graph.
So the result of topological sorting is ","('[[GUK, LTC, GTK, MIF, IUO], [GUK, GTK, IUO, MIF, LTC], [GUK, GTK, MIF, IUO, LTC], [GUK, GTK, IUO, LTC, MIF]]',)",2,24
topological_sort,"[(XGK, CJR), (XGK, JLV), (XGK, YMJ), (JLV, CJR), (YMJ, JLV), (KMI, JLV), (KMI, XGK), (KMI, YMJ)]","{XGK: [CJR, JLV, YMJ],
CJR: [],
JLV: [CJR],
YMJ: [JLV],
KMI: [JLV, XGK, YMJ]}","Node XGK is connected to nodes CJR, JLV, YMJ.
Node JLV is connected to node CJR.
Node YMJ is connected to node JLV.
Node KMI is connected to nodes JLV, XGK, YMJ.","[XGK, JLV, CJR, YMJ, KMI]",5,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KMI, XGK, YMJ, JLV, CJR]","Let's solve it step by step.
Nodes with 0 in-degree: [KMI].
Visit node KMI and remove it from the graph.
Nodes with 0 in-degree: [XGK].
Visit node XGK and remove it from the graph.
Nodes with 0 in-degree: [YMJ].
Visit node YMJ and remove it from the graph.
Nodes with 0 in-degree: [JLV].
Visit node JLV and remove it from the graph.
Nodes with 0 in-degree: [CJR].
Visit node CJR and remove it from the graph.
So the result of topological sorting is ","('[[KMI, XGK, YMJ, JLV, CJR], [KMI, XGK, YMJ, CJR, JLV], [KMI, CJR, XGK, YMJ, JLV], [KMI, CJR, XGK, YMJ, JLV]]',)",0,25
topological_sort,"[(JAC, MAT), (MAT, CQD), (CQD, QXV), (IYM, QXV), (MSY, JAC)]","{JAC: [MAT],
MAT: [CQD],
CQD: [QXV],
QXV: [],
IYM: [QXV],
MSY: [JAC]}","Node JAC is connected to node MAT.
Node MAT is connected to node CQD.
Node CQD is connected to node QXV.
Node IYM is connected to node QXV.
Node MSY is connected to node JAC.","[MAT, CQD, QXV, JAC, IYM, MSY]",6,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IYM, MSY, JAC, MAT, CQD, QXV]","Let's solve it step by step.
Nodes with 0 in-degree: [IYM, MSY].
Visit node IYM and remove it from the graph.
Nodes with 0 in-degree: [MSY].
Visit node MSY and remove it from the graph.
Nodes with 0 in-degree: [JAC].
Visit node JAC and remove it from the graph.
Nodes with 0 in-degree: [MAT].
Visit node MAT and remove it from the graph.
Nodes with 0 in-degree: [CQD].
Visit node CQD and remove it from the graph.
Nodes with 0 in-degree: [QXV].
Visit node QXV and remove it from the graph.
So the result of topological sorting is ","('[[IYM, MSY, CQD, QXV, JAC, MAT], [IYM, MSY, JAC, CQD, QXV, MAT], [IYM, JAC, MAT, CQD, QXV, MSY], [IYM, MSY, JAC, MAT, CQD, QXV]]',)",3,26
topological_sort,"[(YPA, HAG), (HAG, FUW), (AMM, ING), (AMM, HAG), (AMM, YPA), (AMM, FUW), (TRI, AMM)]","{YPA: [HAG],
HAG: [FUW],
FUW: [],
AMM: [ING, HAG, YPA, FUW],
ING: [],
TRI: [AMM]}","Node YPA is connected to node HAG.
Node HAG is connected to node FUW.
Node AMM is connected to nodes ING, HAG, YPA, FUW.
Node TRI is connected to node AMM.","[YPA, TRI, HAG, ING, FUW, AMM]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TRI, AMM, ING, YPA, HAG, FUW]","Let's solve it step by step.
Nodes with 0 in-degree: [TRI].
Visit node TRI and remove it from the graph.
Nodes with 0 in-degree: [AMM].
Visit node AMM and remove it from the graph.
Nodes with 0 in-degree: [ING, YPA].
Visit node ING and remove it from the graph.
Nodes with 0 in-degree: [YPA].
Visit node YPA and remove it from the graph.
Nodes with 0 in-degree: [HAG].
Visit node HAG and remove it from the graph.
Nodes with 0 in-degree: [FUW].
Visit node FUW and remove it from the graph.
So the result of topological sorting is ","('[[TRI, AMM, ING, FUW, HAG, YPA], [TRI, AMM, ING, YPA, HAG, FUW], [TRI, AMM, HAG, FUW, ING, YPA], [TRI, HAG, ING, FUW, AMM, YPA]]',)",1,27
topological_sort,"[(VKA, VMI), (VKA, ZJC), (VKA, RLE), (VKA, FTL), (VMI, QEW), (ZJC, VMI), (ZJC, RLE), (RLE, QEW), (FTL, ZJC)]","{VKA: [VMI, ZJC, RLE, FTL],
VMI: [QEW],
ZJC: [VMI, RLE],
RLE: [QEW],
FTL: [ZJC],
QEW: []}","Node VKA is connected to nodes VMI, ZJC, RLE, FTL.
Node VMI is connected to node QEW.
Node ZJC is connected to nodes VMI, RLE.
Node RLE is connected to node QEW.
Node FTL is connected to node ZJC.","[FTL, QEW, VMI, VKA, ZJC, RLE]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VKA, FTL, ZJC, VMI, RLE, QEW]","Let's solve it step by step.
Nodes with 0 in-degree: [VKA].
Visit node VKA and remove it from the graph.
Nodes with 0 in-degree: [FTL].
Visit node FTL and remove it from the graph.
Nodes with 0 in-degree: [ZJC].
Visit node ZJC and remove it from the graph.
Nodes with 0 in-degree: [VMI, RLE].
Visit node VMI and remove it from the graph.
Nodes with 0 in-degree: [RLE].
Visit node RLE and remove it from the graph.
Nodes with 0 in-degree: [QEW].
Visit node QEW and remove it from the graph.
So the result of topological sorting is ","('[[VKA, QEW, VMI, RLE, FTL, ZJC], [VKA, FTL, ZJC, VMI, RLE, QEW], [VKA, FTL, RLE, QEW, ZJC, VMI], [VKA, FTL, ZJC, VMI, RLE, QEW]]',)",1,28
topological_sort,"[(RAH, ZUW), (RAH, HEM), (WDF, RAH), (WDF, ZUW), (XCD, HEM), (XCD, RAH), (VNU, RAH)]","{RAH: [ZUW, HEM],
ZUW: [],
HEM: [],
WDF: [RAH, ZUW],
XCD: [HEM, RAH],
VNU: [RAH]}","Node RAH is connected to nodes ZUW, HEM.
Node WDF is connected to nodes RAH, ZUW.
Node XCD is connected to nodes HEM, RAH.
Node VNU is connected to node RAH.","[ZUW, RAH, WDF, HEM, XCD, VNU]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WDF, XCD, VNU, RAH, ZUW, HEM]","Let's solve it step by step.
Nodes with 0 in-degree: [WDF, XCD, VNU].
Visit node WDF and remove it from the graph.
Nodes with 0 in-degree: [XCD, VNU].
Visit node XCD and remove it from the graph.
Nodes with 0 in-degree: [VNU].
Visit node VNU and remove it from the graph.
Nodes with 0 in-degree: [RAH].
Visit node RAH and remove it from the graph.
Nodes with 0 in-degree: [ZUW, HEM].
Visit node ZUW and remove it from the graph.
Nodes with 0 in-degree: [HEM].
Visit node HEM and remove it from the graph.
So the result of topological sorting is ","('[[WDF, ZUW, HEM, RAH, XCD, VNU], [WDF, XCD, VNU, ZUW, RAH, HEM], [WDF, XCD, ZUW, HEM, VNU, RAH], [WDF, XCD, VNU, RAH, ZUW, HEM]]',)",3,29
topological_sort,"[(XQL, SDN), (HXP, SDN), (HXP, EYG), (EYG, KBI), (KBI, DUB), (KBI, XQL), (DUB, SDN), (QIT, HXP)]","{XQL: [SDN],
SDN: [],
HXP: [SDN, EYG],
EYG: [KBI],
KBI: [DUB, XQL],
DUB: [SDN],
QIT: [HXP]}","Node XQL is connected to node SDN.
Node HXP is connected to nodes SDN, EYG.
Node EYG is connected to node KBI.
Node KBI is connected to nodes DUB, XQL.
Node DUB is connected to node SDN.
Node QIT is connected to node HXP.","[QIT, HXP, XQL, EYG, KBI, SDN, DUB]",7,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QIT, HXP, EYG, KBI, DUB, XQL, SDN]","Let's solve it step by step.
Nodes with 0 in-degree: [QIT].
Visit node QIT and remove it from the graph.
Nodes with 0 in-degree: [HXP].
Visit node HXP and remove it from the graph.
Nodes with 0 in-degree: [EYG].
Visit node EYG and remove it from the graph.
Nodes with 0 in-degree: [KBI].
Visit node KBI and remove it from the graph.
Nodes with 0 in-degree: [DUB, XQL].
Visit node DUB and remove it from the graph.
Nodes with 0 in-degree: [XQL].
Visit node XQL and remove it from the graph.
Nodes with 0 in-degree: [SDN].
Visit node SDN and remove it from the graph.
So the result of topological sorting is ","('[[QIT, HXP, EYG, SDN, KBI, DUB, XQL], [QIT, HXP, XQL, SDN, EYG, KBI, DUB], [QIT, SDN, KBI, DUB, XQL, EYG, HXP], [QIT, HXP, EYG, KBI, DUB, XQL, SDN]]',)",3,30
topological_sort,"[(LWR, ZYY), (LWR, PCZ), (ZYY, PCZ), (ZOU, ZYY), (ZOU, LWR), (ZOU, UVL), (XTX, ZYY), (XTX, ZOU)]","{LWR: [ZYY, PCZ],
ZYY: [PCZ],
PCZ: [],
ZOU: [ZYY, LWR, UVL],
UVL: [],
XTX: [ZYY, ZOU]}","Node LWR is connected to nodes ZYY, PCZ.
Node ZYY is connected to node PCZ.
Node ZOU is connected to nodes ZYY, LWR, UVL.
Node XTX is connected to nodes ZYY, ZOU.","[UVL, XTX, ZOU, LWR, ZYY, PCZ]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XTX, ZOU, LWR, UVL, ZYY, PCZ]","Let's solve it step by step.
Nodes with 0 in-degree: [XTX].
Visit node XTX and remove it from the graph.
Nodes with 0 in-degree: [ZOU].
Visit node ZOU and remove it from the graph.
Nodes with 0 in-degree: [LWR, UVL].
Visit node LWR and remove it from the graph.
Nodes with 0 in-degree: [UVL, ZYY].
Visit node UVL and remove it from the graph.
Nodes with 0 in-degree: [ZYY].
Visit node ZYY and remove it from the graph.
Nodes with 0 in-degree: [PCZ].
Visit node PCZ and remove it from the graph.
So the result of topological sorting is ","('[[XTX, PCZ, LWR, ZYY, ZOU, UVL], [XTX, ZOU, LWR, PCZ, ZYY, UVL], [XTX, ZOU, ZYY, PCZ, LWR, UVL], [XTX, ZOU, LWR, UVL, ZYY, PCZ]]',)",3,31
topological_sort,"[(MAI, NFF), (MAI, GBA), (MAI, IKT), (NFF, GBA), (GBA, LLQ), (GBA, IKT), (IKT, LLQ)]","{MAI: [NFF, GBA, IKT],
NFF: [GBA],
GBA: [LLQ, IKT],
IKT: [LLQ],
LLQ: []}","Node MAI is connected to nodes NFF, GBA, IKT.
Node NFF is connected to node GBA.
Node GBA is connected to nodes LLQ, IKT.
Node IKT is connected to node LLQ.","[NFF, MAI, LLQ, GBA, IKT]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MAI, NFF, GBA, IKT, LLQ]","Let's solve it step by step.
Nodes with 0 in-degree: [MAI].
Visit node MAI and remove it from the graph.
Nodes with 0 in-degree: [NFF].
Visit node NFF and remove it from the graph.
Nodes with 0 in-degree: [GBA].
Visit node GBA and remove it from the graph.
Nodes with 0 in-degree: [IKT].
Visit node IKT and remove it from the graph.
Nodes with 0 in-degree: [LLQ].
Visit node LLQ and remove it from the graph.
So the result of topological sorting is ","('[[MAI, LLQ, NFF, GBA, IKT], [MAI, NFF, GBA, LLQ, IKT], [MAI, NFF, GBA, IKT, LLQ], [MAI, NFF, GBA, LLQ, IKT]]',)",2,32
topological_sort,"[(UIA, EJI), (UIA, GCI), (UIA, DIQ), (EJI, DIQ), (GCI, EJI), (DIQ, SYY), (UCE, DIQ), (UCE, SYY), (UCE, EJI)]","{UIA: [EJI, GCI, DIQ],
EJI: [DIQ],
GCI: [EJI],
DIQ: [SYY],
SYY: [],
UCE: [DIQ, SYY, EJI]}","Node UIA is connected to nodes EJI, GCI, DIQ.
Node EJI is connected to node DIQ.
Node GCI is connected to node EJI.
Node DIQ is connected to node SYY.
Node UCE is connected to nodes DIQ, SYY, EJI.","[SYY, DIQ, EJI, UIA, UCE, GCI]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UIA, UCE, GCI, EJI, DIQ, SYY]","Let's solve it step by step.
Nodes with 0 in-degree: [UIA, UCE].
Visit node UIA and remove it from the graph.
Nodes with 0 in-degree: [UCE, GCI].
Visit node UCE and remove it from the graph.
Nodes with 0 in-degree: [GCI].
Visit node GCI and remove it from the graph.
Nodes with 0 in-degree: [EJI].
Visit node EJI and remove it from the graph.
Nodes with 0 in-degree: [DIQ].
Visit node DIQ and remove it from the graph.
Nodes with 0 in-degree: [SYY].
Visit node SYY and remove it from the graph.
So the result of topological sorting is ","('[[UIA, UCE, GCI, EJI, DIQ, SYY], [UIA, UCE, GCI, EJI, DIQ, SYY], [UIA, UCE, DIQ, SYY, GCI, EJI], [UIA, DIQ, UCE, SYY, EJI, GCI]]',)",0,33
topological_sort,"[(WNW, MAF), (WNW, LKS), (MAF, KHL), (LKS, KHL), (LKS, MAF), (ADT, LKS), (ADT, WNW), (ADT, MAF)]","{WNW: [MAF, LKS],
MAF: [KHL],
LKS: [KHL, MAF],
KHL: [],
ADT: [LKS, WNW, MAF]}","Node WNW is connected to nodes MAF, LKS.
Node MAF is connected to node KHL.
Node LKS is connected to nodes KHL, MAF.
Node ADT is connected to nodes LKS, WNW, MAF.","[WNW, ADT, MAF, KHL, LKS]",5,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ADT, WNW, LKS, MAF, KHL]","Let's solve it step by step.
Nodes with 0 in-degree: [ADT].
Visit node ADT and remove it from the graph.
Nodes with 0 in-degree: [WNW].
Visit node WNW and remove it from the graph.
Nodes with 0 in-degree: [LKS].
Visit node LKS and remove it from the graph.
Nodes with 0 in-degree: [MAF].
Visit node MAF and remove it from the graph.
Nodes with 0 in-degree: [KHL].
Visit node KHL and remove it from the graph.
So the result of topological sorting is ","('[[ADT, KHL, WNW, LKS, MAF], [ADT, WNW, LKS, MAF, KHL], [ADT, LKS, WNW, KHL, MAF], [ADT, WNW, KHL, LKS, MAF]]',)",1,34
topological_sort,"[(PHE, ABJ), (PHE, WMU), (PHE, MHW), (PHE, NDF), (ABJ, NDF), (ABJ, MHW), (ABJ, WMU), (WMU, MHW), (WMU, NDF), (MHW, NDF)]","{PHE: [ABJ, WMU, MHW, NDF],
ABJ: [NDF, MHW, WMU],
WMU: [MHW, NDF],
MHW: [NDF],
NDF: []}","Node PHE is connected to nodes ABJ, WMU, MHW, NDF.
Node ABJ is connected to nodes NDF, MHW, WMU.
Node WMU is connected to nodes MHW, NDF.
Node MHW is connected to node NDF.","[ABJ, MHW, NDF, PHE, WMU]",5,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PHE, ABJ, WMU, MHW, NDF]","Let's solve it step by step.
Nodes with 0 in-degree: [PHE].
Visit node PHE and remove it from the graph.
Nodes with 0 in-degree: [ABJ].
Visit node ABJ and remove it from the graph.
Nodes with 0 in-degree: [WMU].
Visit node WMU and remove it from the graph.
Nodes with 0 in-degree: [MHW].
Visit node MHW and remove it from the graph.
Nodes with 0 in-degree: [NDF].
Visit node NDF and remove it from the graph.
So the result of topological sorting is ","('[[PHE, WMU, MHW, NDF, ABJ], [PHE, ABJ, NDF, WMU, MHW], [PHE, NDF, ABJ, WMU, MHW], [PHE, ABJ, WMU, MHW, NDF]]',)",3,35
topological_sort,"[(XUO, JWN), (XUO, JWX), (XUO, XCP), (JWN, RYX), (XCP, JWN), (RYX, JWX)]","{XUO: [JWN, JWX, XCP],
JWN: [RYX],
JWX: [],
XCP: [JWN],
RYX: [JWX]}","Node XUO is connected to nodes JWN, JWX, XCP.
Node JWN is connected to node RYX.
Node XCP is connected to node JWN.
Node RYX is connected to node JWX.","[RYX, JWX, XCP, JWN, XUO]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XUO, XCP, JWN, RYX, JWX]","Let's solve it step by step.
Nodes with 0 in-degree: [XUO].
Visit node XUO and remove it from the graph.
Nodes with 0 in-degree: [XCP].
Visit node XCP and remove it from the graph.
Nodes with 0 in-degree: [JWN].
Visit node JWN and remove it from the graph.
Nodes with 0 in-degree: [RYX].
Visit node RYX and remove it from the graph.
Nodes with 0 in-degree: [JWX].
Visit node JWX and remove it from the graph.
So the result of topological sorting is ","('[[XUO, JWX, XCP, JWN, RYX], [XUO, JWX, RYX, XCP, JWN], [XUO, XCP, JWN, RYX, JWX], [XUO, XCP, RYX, JWX, JWN]]',)",2,36
topological_sort,"[(TYU, NVP), (NVP, ZJN), (NVP, BIH), (NVP, BNP), (BIH, BNP)]","{TYU: [NVP],
NVP: [ZJN, BIH, BNP],
ZJN: [],
BIH: [BNP],
BNP: []}","Node TYU is connected to node NVP.
Node NVP is connected to nodes ZJN, BIH, BNP.
Node BIH is connected to node BNP.","[NVP, TYU, BIH, BNP, ZJN]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TYU, NVP, ZJN, BIH, BNP]","Let's solve it step by step.
Nodes with 0 in-degree: [TYU].
Visit node TYU and remove it from the graph.
Nodes with 0 in-degree: [NVP].
Visit node NVP and remove it from the graph.
Nodes with 0 in-degree: [ZJN, BIH].
Visit node ZJN and remove it from the graph.
Nodes with 0 in-degree: [BIH].
Visit node BIH and remove it from the graph.
Nodes with 0 in-degree: [BNP].
Visit node BNP and remove it from the graph.
So the result of topological sorting is ","('[[TYU, BNP, NVP, ZJN, BIH], [TYU, NVP, BNP, ZJN, BIH], [TYU, NVP, ZJN, BIH, BNP], [TYU, BNP, ZJN, BIH, NVP]]',)",2,37
topological_sort,"[(WND, MSJ), (WND, WPJ), (WND, SJN), (WND, JBK), (MSJ, JBK), (WPJ, QSN), (SJN, JBK), (SJN, PLZ), (SJN, MSJ), (JBK, WPJ), (JBK, QSN), (PLZ, JBK)]","{WND: [MSJ, WPJ, SJN, JBK],
MSJ: [JBK],
WPJ: [QSN],
SJN: [JBK, PLZ, MSJ],
JBK: [WPJ, QSN],
QSN: [],
PLZ: [JBK]}","Node WND is connected to nodes MSJ, WPJ, SJN, JBK.
Node MSJ is connected to node JBK.
Node WPJ is connected to node QSN.
Node SJN is connected to nodes JBK, PLZ, MSJ.
Node JBK is connected to nodes WPJ, QSN.
Node PLZ is connected to node JBK.","[JBK, WPJ, SJN, QSN, MSJ, PLZ, WND]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WND, SJN, PLZ, MSJ, JBK, WPJ, QSN]","Let's solve it step by step.
Nodes with 0 in-degree: [WND].
Visit node WND and remove it from the graph.
Nodes with 0 in-degree: [SJN].
Visit node SJN and remove it from the graph.
Nodes with 0 in-degree: [PLZ, MSJ].
Visit node PLZ and remove it from the graph.
Nodes with 0 in-degree: [MSJ].
Visit node MSJ and remove it from the graph.
Nodes with 0 in-degree: [JBK].
Visit node JBK and remove it from the graph.
Nodes with 0 in-degree: [WPJ].
Visit node WPJ and remove it from the graph.
Nodes with 0 in-degree: [QSN].
Visit node QSN and remove it from the graph.
So the result of topological sorting is ","('[[WND, SJN, MSJ, QSN, JBK, WPJ, PLZ], [WND, SJN, WPJ, QSN, PLZ, MSJ, JBK], [WND, SJN, PLZ, MSJ, QSN, JBK, WPJ], [WND, SJN, PLZ, MSJ, JBK, WPJ, QSN]]',)",3,38
topological_sort,"[(WPN, LZK), (WPN, ZKO), (WPN, YQV), (LZK, YQV), (ZKO, LZK), (OND, ZKO)]","{WPN: [LZK, ZKO, YQV],
LZK: [YQV],
ZKO: [LZK],
YQV: [],
OND: [ZKO]}","Node WPN is connected to nodes LZK, ZKO, YQV.
Node LZK is connected to node YQV.
Node ZKO is connected to node LZK.
Node OND is connected to node ZKO.","[YQV, WPN, OND, ZKO, LZK]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WPN, OND, ZKO, LZK, YQV]","Let's solve it step by step.
Nodes with 0 in-degree: [WPN, OND].
Visit node WPN and remove it from the graph.
Nodes with 0 in-degree: [OND].
Visit node OND and remove it from the graph.
Nodes with 0 in-degree: [ZKO].
Visit node ZKO and remove it from the graph.
Nodes with 0 in-degree: [LZK].
Visit node LZK and remove it from the graph.
Nodes with 0 in-degree: [YQV].
Visit node YQV and remove it from the graph.
So the result of topological sorting is ","('[[WPN, OND, YQV, ZKO, LZK], [WPN, OND, ZKO, LZK, YQV], [WPN, YQV, OND, ZKO, LZK], [WPN, ZKO, YQV, LZK, OND]]',)",1,39
topological_sort,"[(MWK, POT), (MWK, WAT), (WAT, POT), (WAT, DPP), (ECI, POT), (ECI, DPP), (ECI, MWK), (DPP, POT)]","{MWK: [POT, WAT],
POT: [],
WAT: [POT, DPP],
ECI: [POT, DPP, MWK],
DPP: [POT]}","Node MWK is connected to nodes POT, WAT.
Node WAT is connected to nodes POT, DPP.
Node ECI is connected to nodes POT, DPP, MWK.
Node DPP is connected to node POT.","[MWK, WAT, ECI, DPP, POT]",5,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ECI, MWK, WAT, DPP, POT]","Let's solve it step by step.
Nodes with 0 in-degree: [ECI].
Visit node ECI and remove it from the graph.
Nodes with 0 in-degree: [MWK].
Visit node MWK and remove it from the graph.
Nodes with 0 in-degree: [WAT].
Visit node WAT and remove it from the graph.
Nodes with 0 in-degree: [DPP].
Visit node DPP and remove it from the graph.
Nodes with 0 in-degree: [POT].
Visit node POT and remove it from the graph.
So the result of topological sorting is ","('[[ECI, POT, DPP, MWK, WAT], [ECI, POT, MWK, WAT, DPP], [ECI, MWK, WAT, DPP, POT], [ECI, MWK, POT, DPP, WAT]]',)",2,40
topological_sort,"[(VRZ, LIJ), (VRZ, QSH), (QSH, LIJ), (HHR, VRZ), (HHR, LIJ), (HHR, QSH), (PEC, HHR), (PEC, VRZ), (DUU, PEC), (DUU, LIJ)]","{VRZ: [LIJ, QSH],
LIJ: [],
QSH: [LIJ],
HHR: [VRZ, LIJ, QSH],
PEC: [HHR, VRZ],
DUU: [PEC, LIJ]}","Node VRZ is connected to nodes LIJ, QSH.
Node QSH is connected to node LIJ.
Node HHR is connected to nodes VRZ, LIJ, QSH.
Node PEC is connected to nodes HHR, VRZ.
Node DUU is connected to nodes PEC, LIJ.","[DUU, PEC, LIJ, VRZ, HHR, QSH]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DUU, PEC, HHR, VRZ, QSH, LIJ]","Let's solve it step by step.
Nodes with 0 in-degree: [DUU].
Visit node DUU and remove it from the graph.
Nodes with 0 in-degree: [PEC].
Visit node PEC and remove it from the graph.
Nodes with 0 in-degree: [HHR].
Visit node HHR and remove it from the graph.
Nodes with 0 in-degree: [VRZ].
Visit node VRZ and remove it from the graph.
Nodes with 0 in-degree: [QSH].
Visit node QSH and remove it from the graph.
Nodes with 0 in-degree: [LIJ].
Visit node LIJ and remove it from the graph.
So the result of topological sorting is ","('[[DUU, VRZ, LIJ, QSH, PEC, HHR], [DUU, PEC, QSH, LIJ, HHR, VRZ], [DUU, PEC, HHR, LIJ, VRZ, QSH], [DUU, PEC, HHR, VRZ, QSH, LIJ]]',)",3,41
topological_sort,"[(SUW, ZWN), (SUW, ZOK), (SUW, FRR), (ZOK, ZWN), (BHT, FRR), (BHT, SUW), (BHT, BBL)]","{SUW: [ZWN, ZOK, FRR],
ZWN: [],
ZOK: [ZWN],
FRR: [],
BHT: [FRR, SUW, BBL],
BBL: []}","Node SUW is connected to nodes ZWN, ZOK, FRR.
Node ZOK is connected to node ZWN.
Node BHT is connected to nodes FRR, SUW, BBL.","[BBL, BHT, SUW, ZWN, ZOK, FRR]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BHT, SUW, BBL, ZOK, FRR, ZWN]","Let's solve it step by step.
Nodes with 0 in-degree: [BHT].
Visit node BHT and remove it from the graph.
Nodes with 0 in-degree: [SUW, BBL].
Visit node SUW and remove it from the graph.
Nodes with 0 in-degree: [BBL, ZOK, FRR].
Visit node BBL and remove it from the graph.
Nodes with 0 in-degree: [ZOK, FRR].
Visit node ZOK and remove it from the graph.
Nodes with 0 in-degree: [FRR, ZWN].
Visit node FRR and remove it from the graph.
Nodes with 0 in-degree: [ZWN].
Visit node ZWN and remove it from the graph.
So the result of topological sorting is ","('[[BHT, SUW, FRR, ZWN, BBL, ZOK], [BHT, ZOK, ZWN, SUW, BBL, FRR], [BHT, SUW, BBL, ZOK, FRR, ZWN], [BHT, SUW, BBL, ZOK, FRR, ZWN]]',)",2,42
topological_sort,"[(YOG, ZFK), (ZFK, YXV), (ZRL, ZFK), (QZA, IHH), (QZA, YOG), (QZA, OLZ), (QZA, ZRL), (QZA, ZFK), (IHH, ZRL), (IHH, YXV), (OLZ, YXV), (OLZ, IHH)]","{YOG: [ZFK],
ZFK: [YXV],
YXV: [],
ZRL: [ZFK],
QZA: [IHH, YOG, OLZ, ZRL, ZFK],
IHH: [ZRL, YXV],
OLZ: [YXV, IHH]}","Node YOG is connected to node ZFK.
Node ZFK is connected to node YXV.
Node ZRL is connected to node ZFK.
Node QZA is connected to nodes IHH, YOG, OLZ, ZRL, ZFK.
Node IHH is connected to nodes ZRL, YXV.
Node OLZ is connected to nodes YXV, IHH.","[YOG, IHH, QZA, YXV, ZFK, ZRL, OLZ]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QZA, YOG, OLZ, IHH, ZRL, ZFK, YXV]","Let's solve it step by step.
Nodes with 0 in-degree: [QZA].
Visit node QZA and remove it from the graph.
Nodes with 0 in-degree: [YOG, OLZ].
Visit node YOG and remove it from the graph.
Nodes with 0 in-degree: [OLZ].
Visit node OLZ and remove it from the graph.
Nodes with 0 in-degree: [IHH].
Visit node IHH and remove it from the graph.
Nodes with 0 in-degree: [ZRL].
Visit node ZRL and remove it from the graph.
Nodes with 0 in-degree: [ZFK].
Visit node ZFK and remove it from the graph.
Nodes with 0 in-degree: [YXV].
Visit node YXV and remove it from the graph.
So the result of topological sorting is ","('[[QZA, YXV, ZRL, IHH, OLZ, YOG, ZFK], [QZA, YOG, OLZ, IHH, ZFK, ZRL, YXV], [QZA, YOG, ZFK, YXV, OLZ, IHH, ZRL], [QZA, YOG, OLZ, IHH, ZRL, ZFK, YXV]]',)",3,43
topological_sort,"[(EFN, IFU), (EFN, OYP), (OYP, JNS), (OYP, WXO), (OYP, IFU), (WXO, JNS), (JNS, IFU)]","{EFN: [IFU, OYP],
IFU: [],
OYP: [JNS, WXO, IFU],
WXO: [JNS],
JNS: [IFU]}","Node EFN is connected to nodes IFU, OYP.
Node OYP is connected to nodes JNS, WXO, IFU.
Node WXO is connected to node JNS.
Node JNS is connected to node IFU.","[EFN, JNS, WXO, IFU, OYP]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EFN, OYP, WXO, JNS, IFU]","Let's solve it step by step.
Nodes with 0 in-degree: [EFN].
Visit node EFN and remove it from the graph.
Nodes with 0 in-degree: [OYP].
Visit node OYP and remove it from the graph.
Nodes with 0 in-degree: [WXO].
Visit node WXO and remove it from the graph.
Nodes with 0 in-degree: [JNS].
Visit node JNS and remove it from the graph.
Nodes with 0 in-degree: [IFU].
Visit node IFU and remove it from the graph.
So the result of topological sorting is ","('[[EFN, OYP, WXO, IFU, JNS], [EFN, IFU, OYP, WXO, JNS], [EFN, IFU, OYP, WXO, JNS], [EFN, OYP, WXO, JNS, IFU]]',)",3,44
topological_sort,"[(UAO, JSF), (UAO, STT), (UAO, YGQ), (JSF, STT), (JSF, UZC), (STT, UZC), (YGQ, GDH), (YGQ, UZC), (GDH, STT)]","{UAO: [JSF, STT, YGQ],
JSF: [STT, UZC],
STT: [UZC],
YGQ: [GDH, UZC],
UZC: [],
GDH: [STT]}","Node UAO is connected to nodes JSF, STT, YGQ.
Node JSF is connected to nodes STT, UZC.
Node STT is connected to node UZC.
Node YGQ is connected to nodes GDH, UZC.
Node GDH is connected to node STT.","[YGQ, UZC, GDH, UAO, STT, JSF]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UAO, JSF, YGQ, GDH, STT, UZC]","Let's solve it step by step.
Nodes with 0 in-degree: [UAO].
Visit node UAO and remove it from the graph.
Nodes with 0 in-degree: [JSF, YGQ].
Visit node JSF and remove it from the graph.
Nodes with 0 in-degree: [YGQ].
Visit node YGQ and remove it from the graph.
Nodes with 0 in-degree: [GDH].
Visit node GDH and remove it from the graph.
Nodes with 0 in-degree: [STT].
Visit node STT and remove it from the graph.
Nodes with 0 in-degree: [UZC].
Visit node UZC and remove it from the graph.
So the result of topological sorting is ","('[[UAO, YGQ, UZC, STT, JSF, GDH], [UAO, JSF, YGQ, GDH, STT, UZC], [UAO, JSF, YGQ, UZC, STT, GDH], [UAO, JSF, STT, UZC, YGQ, GDH]]',)",1,45
topological_sort,"[(VXH, WFO), (YVD, SGA), (YVD, WFO), (RRB, WFO), (RRB, SGA), (RRB, YVD)]","{VXH: [WFO],
WFO: [],
YVD: [SGA, WFO],
SGA: [],
RRB: [WFO, SGA, YVD]}","Node VXH is connected to node WFO.
Node YVD is connected to nodes SGA, WFO.
Node RRB is connected to nodes WFO, SGA, YVD.","[VXH, SGA, RRB, WFO, YVD]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VXH, RRB, YVD, SGA, WFO]","Let's solve it step by step.
Nodes with 0 in-degree: [VXH, RRB].
Visit node VXH and remove it from the graph.
Nodes with 0 in-degree: [RRB].
Visit node RRB and remove it from the graph.
Nodes with 0 in-degree: [YVD].
Visit node YVD and remove it from the graph.
Nodes with 0 in-degree: [SGA, WFO].
Visit node SGA and remove it from the graph.
Nodes with 0 in-degree: [WFO].
Visit node WFO and remove it from the graph.
So the result of topological sorting is ","('[[VXH, RRB, SGA, YVD, WFO], [VXH, SGA, WFO, RRB, YVD], [VXH, WFO, RRB, YVD, SGA], [VXH, RRB, YVD, SGA, WFO]]',)",3,46
topological_sort,"[(HMF, AQO), (AQO, YZA), (YZA, HNG), (YZA, UFZ), (OAZ, HNG), (OAZ, HMF), (OAZ, UFZ), (UFZ, HNG), (ELW, OAZ)]","{HMF: [AQO],
AQO: [YZA],
YZA: [HNG, UFZ],
OAZ: [HNG, HMF, UFZ],
HNG: [],
UFZ: [HNG],
ELW: [OAZ]}","Node HMF is connected to node AQO.
Node AQO is connected to node YZA.
Node YZA is connected to nodes HNG, UFZ.
Node OAZ is connected to nodes HNG, HMF, UFZ.
Node UFZ is connected to node HNG.
Node ELW is connected to node OAZ.","[ELW, HMF, OAZ, HNG, YZA, UFZ, AQO]",7,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ELW, OAZ, HMF, AQO, YZA, UFZ, HNG]","Let's solve it step by step.
Nodes with 0 in-degree: [ELW].
Visit node ELW and remove it from the graph.
Nodes with 0 in-degree: [OAZ].
Visit node OAZ and remove it from the graph.
Nodes with 0 in-degree: [HMF].
Visit node HMF and remove it from the graph.
Nodes with 0 in-degree: [AQO].
Visit node AQO and remove it from the graph.
Nodes with 0 in-degree: [YZA].
Visit node YZA and remove it from the graph.
Nodes with 0 in-degree: [UFZ].
Visit node UFZ and remove it from the graph.
Nodes with 0 in-degree: [HNG].
Visit node HNG and remove it from the graph.
So the result of topological sorting is ","('[[ELW, OAZ, HMF, AQO, YZA, UFZ, HNG], [ELW, OAZ, AQO, HNG, YZA, HMF, UFZ], [ELW, OAZ, HMF, YZA, AQO, HNG, UFZ], [ELW, OAZ, UFZ, HNG, HMF, AQO, YZA]]',)",0,47
topological_sort,"[(MIN, ZGQ), (MIN, HCY), (MIN, TEJ), (HCY, ZGQ), (TEJ, TNM), (TEJ, UHF), (TNM, HCY), (UHF, TNM), (UHF, HCY)]","{MIN: [ZGQ, HCY, TEJ],
ZGQ: [],
HCY: [ZGQ],
TEJ: [TNM, UHF],
TNM: [HCY],
UHF: [TNM, HCY]}","Node MIN is connected to nodes ZGQ, HCY, TEJ.
Node HCY is connected to node ZGQ.
Node TEJ is connected to nodes TNM, UHF.
Node TNM is connected to node HCY.
Node UHF is connected to nodes TNM, HCY.","[TNM, ZGQ, HCY, MIN, TEJ, UHF]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MIN, TEJ, UHF, TNM, HCY, ZGQ]","Let's solve it step by step.
Nodes with 0 in-degree: [MIN].
Visit node MIN and remove it from the graph.
Nodes with 0 in-degree: [TEJ].
Visit node TEJ and remove it from the graph.
Nodes with 0 in-degree: [UHF].
Visit node UHF and remove it from the graph.
Nodes with 0 in-degree: [TNM].
Visit node TNM and remove it from the graph.
Nodes with 0 in-degree: [HCY].
Visit node HCY and remove it from the graph.
Nodes with 0 in-degree: [ZGQ].
Visit node ZGQ and remove it from the graph.
So the result of topological sorting is ","('[[MIN, TEJ, UHF, TNM, HCY, ZGQ], [MIN, TEJ, HCY, ZGQ, UHF, TNM], [MIN, TNM, HCY, TEJ, UHF, ZGQ], [MIN, TEJ, UHF, HCY, ZGQ, TNM]]',)",0,48
topological_sort,"[(JTS, DAV), (JTS, MPP), (JTS, TGA), (MPP, DAV), (TGA, MPP), (TGA, DAV), (BZG, UVI), (UVI, TGA), (UVI, JTS)]","{JTS: [DAV, MPP, TGA],
DAV: [],
MPP: [DAV],
TGA: [MPP, DAV],
BZG: [UVI],
UVI: [TGA, JTS]}","Node JTS is connected to nodes DAV, MPP, TGA.
Node MPP is connected to node DAV.
Node TGA is connected to nodes MPP, DAV.
Node BZG is connected to node UVI.
Node UVI is connected to nodes TGA, JTS.","[JTS, BZG, UVI, DAV, TGA, MPP]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BZG, UVI, JTS, TGA, MPP, DAV]","Let's solve it step by step.
Nodes with 0 in-degree: [BZG].
Visit node BZG and remove it from the graph.
Nodes with 0 in-degree: [UVI].
Visit node UVI and remove it from the graph.
Nodes with 0 in-degree: [JTS].
Visit node JTS and remove it from the graph.
Nodes with 0 in-degree: [TGA].
Visit node TGA and remove it from the graph.
Nodes with 0 in-degree: [MPP].
Visit node MPP and remove it from the graph.
Nodes with 0 in-degree: [DAV].
Visit node DAV and remove it from the graph.
So the result of topological sorting is ","('[[BZG, UVI, MPP, DAV, JTS, TGA], [BZG, MPP, TGA, UVI, JTS, DAV], [BZG, UVI, JTS, MPP, DAV, TGA], [BZG, UVI, JTS, TGA, MPP, DAV]]',)",3,49
topological_sort,"[(HEZ, JKA), (JKA, TIL), (JKA, PIO), (JTS, PIO), (JTS, AFC), (JTS, JKA), (AFC, TIL)]","{HEZ: [JKA],
JKA: [TIL, PIO],
TIL: [],
PIO: [],
JTS: [PIO, AFC, JKA],
AFC: [TIL]}","Node HEZ is connected to node JKA.
Node JKA is connected to nodes TIL, PIO.
Node JTS is connected to nodes PIO, AFC, JKA.
Node AFC is connected to node TIL.","[TIL, JTS, JKA, AFC, PIO, HEZ]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HEZ, JTS, AFC, JKA, TIL, PIO]","Let's solve it step by step.
Nodes with 0 in-degree: [HEZ, JTS].
Visit node HEZ and remove it from the graph.
Nodes with 0 in-degree: [JTS].
Visit node JTS and remove it from the graph.
Nodes with 0 in-degree: [AFC, JKA].
Visit node AFC and remove it from the graph.
Nodes with 0 in-degree: [JKA].
Visit node JKA and remove it from the graph.
Nodes with 0 in-degree: [TIL, PIO].
Visit node TIL and remove it from the graph.
Nodes with 0 in-degree: [PIO].
Visit node PIO and remove it from the graph.
So the result of topological sorting is ","('[[HEZ, JTS, TIL, PIO, AFC, JKA], [HEZ, JTS, AFC, JKA, TIL, PIO], [HEZ, JTS, AFC, PIO, TIL, JKA], [HEZ, JKA, PIO, TIL, AFC, JTS]]',)",1,50
topological_sort,"[(MNH, YOI), (MNH, TPE), (MNH, NOX), (YOI, NOX), (YOI, TPE), (TPE, XBR), (TPE, NOX), (XBR, NOX)]","{MNH: [YOI, TPE, NOX],
YOI: [NOX, TPE],
TPE: [XBR, NOX],
NOX: [],
XBR: [NOX]}","Node MNH is connected to nodes YOI, TPE, NOX.
Node YOI is connected to nodes NOX, TPE.
Node TPE is connected to nodes XBR, NOX.
Node XBR is connected to node NOX.","[XBR, NOX, YOI, TPE, MNH]",5,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MNH, YOI, TPE, XBR, NOX]","Let's solve it step by step.
Nodes with 0 in-degree: [MNH].
Visit node MNH and remove it from the graph.
Nodes with 0 in-degree: [YOI].
Visit node YOI and remove it from the graph.
Nodes with 0 in-degree: [TPE].
Visit node TPE and remove it from the graph.
Nodes with 0 in-degree: [XBR].
Visit node XBR and remove it from the graph.
Nodes with 0 in-degree: [NOX].
Visit node NOX and remove it from the graph.
So the result of topological sorting is ","('[[MNH, NOX, TPE, XBR, YOI], [MNH, YOI, NOX, TPE, XBR], [MNH, NOX, YOI, TPE, XBR], [MNH, YOI, TPE, XBR, NOX]]',)",3,51
topological_sort,"[(RQE, ZWJ), (RQE, QMV), (RQE, RGH), (ZWJ, QMV), (ZWJ, DLL), (DLL, RGH), (JSY, RQE), (JSY, QMV), (VBF, QMV), (VBF, RGH), (VBF, RQE), (VBF, DLL)]","{RQE: [ZWJ, QMV, RGH],
ZWJ: [QMV, DLL],
QMV: [],
RGH: [],
DLL: [RGH],
JSY: [RQE, QMV],
VBF: [QMV, RGH, RQE, DLL]}","Node RQE is connected to nodes ZWJ, QMV, RGH.
Node ZWJ is connected to nodes QMV, DLL.
Node DLL is connected to node RGH.
Node JSY is connected to nodes RQE, QMV.
Node VBF is connected to nodes QMV, RGH, RQE, DLL.","[ZWJ, RGH, VBF, RQE, JSY, DLL, QMV]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JSY, VBF, RQE, ZWJ, QMV, DLL, RGH]","Let's solve it step by step.
Nodes with 0 in-degree: [JSY, VBF].
Visit node JSY and remove it from the graph.
Nodes with 0 in-degree: [VBF].
Visit node VBF and remove it from the graph.
Nodes with 0 in-degree: [RQE].
Visit node RQE and remove it from the graph.
Nodes with 0 in-degree: [ZWJ].
Visit node ZWJ and remove it from the graph.
Nodes with 0 in-degree: [QMV, DLL].
Visit node QMV and remove it from the graph.
Nodes with 0 in-degree: [DLL].
Visit node DLL and remove it from the graph.
Nodes with 0 in-degree: [RGH].
Visit node RGH and remove it from the graph.
So the result of topological sorting is ","('[[JSY, VBF, RQE, QMV, ZWJ, DLL, RGH], [JSY, DLL, QMV, VBF, RGH, ZWJ, RQE], [JSY, VBF, DLL, RGH, RQE, ZWJ, QMV], [JSY, VBF, RQE, ZWJ, QMV, DLL, RGH]]',)",3,52
topological_sort,"[(EPT, FDI), (EPT, XYL), (CTT, FDI), (CTT, DMH), (CTT, XYL), (CTT, EPT), (DMH, EPT), (XFY, XYL), (XFY, CTT), (XFY, EPT), (XFY, DMH)]","{EPT: [FDI, XYL],
FDI: [],
XYL: [],
CTT: [FDI, DMH, XYL, EPT],
DMH: [EPT],
XFY: [XYL, CTT, EPT, DMH]}","Node EPT is connected to nodes FDI, XYL.
Node CTT is connected to nodes FDI, DMH, XYL, EPT.
Node DMH is connected to node EPT.
Node XFY is connected to nodes XYL, CTT, EPT, DMH.","[DMH, EPT, CTT, XYL, FDI, XFY]",6,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XFY, CTT, DMH, EPT, FDI, XYL]","Let's solve it step by step.
Nodes with 0 in-degree: [XFY].
Visit node XFY and remove it from the graph.
Nodes with 0 in-degree: [CTT].
Visit node CTT and remove it from the graph.
Nodes with 0 in-degree: [DMH].
Visit node DMH and remove it from the graph.
Nodes with 0 in-degree: [EPT].
Visit node EPT and remove it from the graph.
Nodes with 0 in-degree: [FDI, XYL].
Visit node FDI and remove it from the graph.
Nodes with 0 in-degree: [XYL].
Visit node XYL and remove it from the graph.
So the result of topological sorting is ","('[[XFY, CTT, FDI, XYL, DMH, EPT], [XFY, FDI, EPT, DMH, XYL, CTT], [XFY, CTT, DMH, EPT, FDI, XYL], [XFY, CTT, DMH, XYL, EPT, FDI]]',)",2,53
topological_sort,"[(WHT, FJC), (WHT, JXQ), (WHT, ACR), (ACR, JXQ), (ACR, FJC), (LGB, FJC), (LGB, WHT), (LGB, VCH), (LGB, ACR), (VCH, ACR)]","{WHT: [FJC, JXQ, ACR],
FJC: [],
JXQ: [],
ACR: [JXQ, FJC],
LGB: [FJC, WHT, VCH, ACR],
VCH: [ACR]}","Node WHT is connected to nodes FJC, JXQ, ACR.
Node ACR is connected to nodes JXQ, FJC.
Node LGB is connected to nodes FJC, WHT, VCH, ACR.
Node VCH is connected to node ACR.","[FJC, VCH, JXQ, LGB, WHT, ACR]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LGB, WHT, VCH, ACR, JXQ, FJC]","Let's solve it step by step.
Nodes with 0 in-degree: [LGB].
Visit node LGB and remove it from the graph.
Nodes with 0 in-degree: [WHT, VCH].
Visit node WHT and remove it from the graph.
Nodes with 0 in-degree: [VCH].
Visit node VCH and remove it from the graph.
Nodes with 0 in-degree: [ACR].
Visit node ACR and remove it from the graph.
Nodes with 0 in-degree: [JXQ, FJC].
Visit node JXQ and remove it from the graph.
Nodes with 0 in-degree: [FJC].
Visit node FJC and remove it from the graph.
So the result of topological sorting is ","('[[LGB, FJC, ACR, VCH, JXQ, WHT], [LGB, WHT, VCH, ACR, JXQ, FJC], [LGB, WHT, JXQ, FJC, VCH, ACR], [LGB, WHT, VCH, ACR, FJC, JXQ]]',)",1,54
topological_sort,"[(OFY, ICA), (OFY, XRC), (ICA, XRC), (ICA, LSQ), (XRC, LSQ), (BRX, LSQ), (BRX, ICA), (KCY, OFY)]","{OFY: [ICA, XRC],
ICA: [XRC, LSQ],
XRC: [LSQ],
LSQ: [],
BRX: [LSQ, ICA],
KCY: [OFY]}","Node OFY is connected to nodes ICA, XRC.
Node ICA is connected to nodes XRC, LSQ.
Node XRC is connected to node LSQ.
Node BRX is connected to nodes LSQ, ICA.
Node KCY is connected to node OFY.","[XRC, BRX, OFY, KCY, ICA, LSQ]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BRX, KCY, OFY, ICA, XRC, LSQ]","Let's solve it step by step.
Nodes with 0 in-degree: [BRX, KCY].
Visit node BRX and remove it from the graph.
Nodes with 0 in-degree: [KCY].
Visit node KCY and remove it from the graph.
Nodes with 0 in-degree: [OFY].
Visit node OFY and remove it from the graph.
Nodes with 0 in-degree: [ICA].
Visit node ICA and remove it from the graph.
Nodes with 0 in-degree: [XRC].
Visit node XRC and remove it from the graph.
Nodes with 0 in-degree: [LSQ].
Visit node LSQ and remove it from the graph.
So the result of topological sorting is ","('[[BRX, KCY, XRC, LSQ, OFY, ICA], [BRX, KCY, OFY, LSQ, ICA, XRC], [BRX, ICA, LSQ, XRC, OFY, KCY], [BRX, KCY, OFY, ICA, XRC, LSQ]]',)",3,55
topological_sort,"[(NCU, LEY), (JPJ, YBT), (YBT, RBS), (YBT, LEY), (YBT, NCU), (RBS, NCU)]","{NCU: [LEY],
LEY: [],
JPJ: [YBT],
YBT: [RBS, LEY, NCU],
RBS: [NCU]}","Node NCU is connected to node LEY.
Node JPJ is connected to node YBT.
Node YBT is connected to nodes RBS, LEY, NCU.
Node RBS is connected to node NCU.","[LEY, RBS, YBT, NCU, JPJ]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JPJ, YBT, RBS, NCU, LEY]","Let's solve it step by step.
Nodes with 0 in-degree: [JPJ].
Visit node JPJ and remove it from the graph.
Nodes with 0 in-degree: [YBT].
Visit node YBT and remove it from the graph.
Nodes with 0 in-degree: [RBS].
Visit node RBS and remove it from the graph.
Nodes with 0 in-degree: [NCU].
Visit node NCU and remove it from the graph.
Nodes with 0 in-degree: [LEY].
Visit node LEY and remove it from the graph.
So the result of topological sorting is ","('[[JPJ, LEY, YBT, RBS, NCU], [JPJ, LEY, NCU, YBT, RBS], [JPJ, YBT, RBS, NCU, LEY], [JPJ, YBT, NCU, RBS, LEY]]',)",2,56
topological_sort,"[(TJA, PSP), (TJA, ISU), (PSP, ISU), (LRQ, MQV), (LRQ, ISU), (MQV, TJA), (SZY, PSP), (SZY, TJA)]","{TJA: [PSP, ISU],
PSP: [ISU],
ISU: [],
LRQ: [MQV, ISU],
MQV: [TJA],
SZY: [PSP, TJA]}","Node TJA is connected to nodes PSP, ISU.
Node PSP is connected to node ISU.
Node LRQ is connected to nodes MQV, ISU.
Node MQV is connected to node TJA.
Node SZY is connected to nodes PSP, TJA.","[PSP, LRQ, MQV, ISU, TJA, SZY]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LRQ, SZY, MQV, TJA, PSP, ISU]","Let's solve it step by step.
Nodes with 0 in-degree: [LRQ, SZY].
Visit node LRQ and remove it from the graph.
Nodes with 0 in-degree: [SZY, MQV].
Visit node SZY and remove it from the graph.
Nodes with 0 in-degree: [MQV].
Visit node MQV and remove it from the graph.
Nodes with 0 in-degree: [TJA].
Visit node TJA and remove it from the graph.
Nodes with 0 in-degree: [PSP].
Visit node PSP and remove it from the graph.
Nodes with 0 in-degree: [ISU].
Visit node ISU and remove it from the graph.
So the result of topological sorting is ","('[[LRQ, SZY, MQV, ISU, TJA, PSP], [LRQ, SZY, MQV, TJA, PSP, ISU], [LRQ, ISU, PSP, TJA, SZY, MQV], [LRQ, SZY, PSP, ISU, MQV, TJA]]',)",1,57
topological_sort,"[(WQQ, SJW), (WQQ, PSA), (WQQ, XVA), (WQQ, SCB), (WQQ, ABR), (SJW, XVA), (SJW, PSA), (SJW, SCB), (PSA, XVA), (SCB, XVA), (ABR, PSA), (ABR, XVA), (ABR, SJW), (OKB, WQQ)]","{WQQ: [SJW, PSA, XVA, SCB, ABR],
SJW: [XVA, PSA, SCB],
PSA: [XVA],
XVA: [],
SCB: [XVA],
ABR: [PSA, XVA, SJW],
OKB: [WQQ]}","Node WQQ is connected to nodes SJW, PSA, XVA, SCB, ABR.
Node SJW is connected to nodes XVA, PSA, SCB.
Node PSA is connected to node XVA.
Node SCB is connected to node XVA.
Node ABR is connected to nodes PSA, XVA, SJW.
Node OKB is connected to node WQQ.","[OKB, PSA, WQQ, SCB, ABR, SJW, XVA]",7,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OKB, WQQ, ABR, SJW, PSA, SCB, XVA]","Let's solve it step by step.
Nodes with 0 in-degree: [OKB].
Visit node OKB and remove it from the graph.
Nodes with 0 in-degree: [WQQ].
Visit node WQQ and remove it from the graph.
Nodes with 0 in-degree: [ABR].
Visit node ABR and remove it from the graph.
Nodes with 0 in-degree: [SJW].
Visit node SJW and remove it from the graph.
Nodes with 0 in-degree: [PSA, SCB].
Visit node PSA and remove it from the graph.
Nodes with 0 in-degree: [SCB].
Visit node SCB and remove it from the graph.
Nodes with 0 in-degree: [XVA].
Visit node XVA and remove it from the graph.
So the result of topological sorting is ","('[[OKB, WQQ, ABR, SJW, SCB, PSA, XVA], [OKB, SJW, SCB, XVA, WQQ, PSA, ABR], [OKB, WQQ, SCB, XVA, ABR, SJW, PSA], [OKB, WQQ, ABR, SJW, PSA, SCB, XVA]]',)",3,58
topological_sort,"[(HYY, IDN), (HYY, CUK), (IDN, EDV), (IDN, CUK), (EDV, QVC), (EDV, LFG), (QVC, CUK), (QVC, LFG)]","{HYY: [IDN, CUK],
IDN: [EDV, CUK],
CUK: [],
EDV: [QVC, LFG],
QVC: [CUK, LFG],
LFG: []}","Node HYY is connected to nodes IDN, CUK.
Node IDN is connected to nodes EDV, CUK.
Node EDV is connected to nodes QVC, LFG.
Node QVC is connected to nodes CUK, LFG.","[LFG, HYY, EDV, QVC, CUK, IDN]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HYY, IDN, EDV, QVC, CUK, LFG]","Let's solve it step by step.
Nodes with 0 in-degree: [HYY].
Visit node HYY and remove it from the graph.
Nodes with 0 in-degree: [IDN].
Visit node IDN and remove it from the graph.
Nodes with 0 in-degree: [EDV].
Visit node EDV and remove it from the graph.
Nodes with 0 in-degree: [QVC].
Visit node QVC and remove it from the graph.
Nodes with 0 in-degree: [CUK, LFG].
Visit node CUK and remove it from the graph.
Nodes with 0 in-degree: [LFG].
Visit node LFG and remove it from the graph.
So the result of topological sorting is ","('[[HYY, EDV, IDN, LFG, QVC, CUK], [HYY, IDN, EDV, LFG, CUK, QVC], [HYY, IDN, CUK, LFG, EDV, QVC], [HYY, IDN, EDV, QVC, CUK, LFG]]',)",3,59
topological_sort,"[(FWT, OFI), (FWT, HGZ), (FWT, ESJ), (FWT, VNO), (FWT, ESF), (OFI, ESF), (OFI, HGZ), (OFI, ESJ), (OFI, VNO), (HGZ, ESJ), (ESJ, ESF), (VNO, ESF), (VNO, HGZ), (ZBH, ESJ), (ZBH, VNO), (ZBH, OFI), (ZBH, FWT)]","{FWT: [OFI, HGZ, ESJ, VNO, ESF],
OFI: [ESF, HGZ, ESJ, VNO],
HGZ: [ESJ],
ESJ: [ESF],
VNO: [ESF, HGZ],
ESF: [],
ZBH: [ESJ, VNO, OFI, FWT]}","Node FWT is connected to nodes OFI, HGZ, ESJ, VNO, ESF.
Node OFI is connected to nodes ESF, HGZ, ESJ, VNO.
Node HGZ is connected to node ESJ.
Node ESJ is connected to node ESF.
Node VNO is connected to nodes ESF, HGZ.
Node ZBH is connected to nodes ESJ, VNO, OFI, FWT.","[ESJ, ZBH, FWT, ESF, OFI, VNO, HGZ]",7,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZBH, FWT, OFI, VNO, HGZ, ESJ, ESF]","Let's solve it step by step.
Nodes with 0 in-degree: [ZBH].
Visit node ZBH and remove it from the graph.
Nodes with 0 in-degree: [FWT].
Visit node FWT and remove it from the graph.
Nodes with 0 in-degree: [OFI].
Visit node OFI and remove it from the graph.
Nodes with 0 in-degree: [VNO].
Visit node VNO and remove it from the graph.
Nodes with 0 in-degree: [HGZ].
Visit node HGZ and remove it from the graph.
Nodes with 0 in-degree: [ESJ].
Visit node ESJ and remove it from the graph.
Nodes with 0 in-degree: [ESF].
Visit node ESF and remove it from the graph.
So the result of topological sorting is ","('[[ZBH, ESJ, OFI, VNO, HGZ, FWT, ESF], [ZBH, FWT, OFI, VNO, HGZ, ESJ, ESF], [ZBH, FWT, ESJ, ESF, OFI, VNO, HGZ], [ZBH, FWT, OFI, ESF, VNO, ESJ, HGZ]]',)",1,60
topological_sort,"[(NZQ, TAB), (NZQ, XAX), (EFN, TAB), (EFN, QKC), (QKC, XAX), (QKC, NZQ)]","{NZQ: [TAB, XAX],
TAB: [],
XAX: [],
EFN: [TAB, QKC],
QKC: [XAX, NZQ]}","Node NZQ is connected to nodes TAB, XAX.
Node EFN is connected to nodes TAB, QKC.
Node QKC is connected to nodes XAX, NZQ.","[XAX, NZQ, EFN, QKC, TAB]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EFN, QKC, NZQ, TAB, XAX]","Let's solve it step by step.
Nodes with 0 in-degree: [EFN].
Visit node EFN and remove it from the graph.
Nodes with 0 in-degree: [QKC].
Visit node QKC and remove it from the graph.
Nodes with 0 in-degree: [NZQ].
Visit node NZQ and remove it from the graph.
Nodes with 0 in-degree: [TAB, XAX].
Visit node TAB and remove it from the graph.
Nodes with 0 in-degree: [XAX].
Visit node XAX and remove it from the graph.
So the result of topological sorting is ","('[[EFN, XAX, QKC, NZQ, TAB], [EFN, TAB, NZQ, XAX, QKC], [EFN, QKC, NZQ, TAB, XAX], [EFN, QKC, TAB, NZQ, XAX]]',)",2,61
topological_sort,"[(ZOA, YJP), (ZOA, SIT), (SIT, KIF), (SIT, YJP), (YMJ, KIF), (KIF, YJP), (HQX, KIF), (HQX, YMJ)]","{ZOA: [YJP, SIT],
YJP: [],
SIT: [KIF, YJP],
YMJ: [KIF],
KIF: [YJP],
HQX: [KIF, YMJ]}","Node ZOA is connected to nodes YJP, SIT.
Node SIT is connected to nodes KIF, YJP.
Node YMJ is connected to node KIF.
Node KIF is connected to node YJP.
Node HQX is connected to nodes KIF, YMJ.","[HQX, YMJ, SIT, KIF, YJP, ZOA]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZOA, HQX, SIT, YMJ, KIF, YJP]","Let's solve it step by step.
Nodes with 0 in-degree: [ZOA, HQX].
Visit node ZOA and remove it from the graph.
Nodes with 0 in-degree: [HQX, SIT].
Visit node HQX and remove it from the graph.
Nodes with 0 in-degree: [SIT, YMJ].
Visit node SIT and remove it from the graph.
Nodes with 0 in-degree: [YMJ].
Visit node YMJ and remove it from the graph.
Nodes with 0 in-degree: [KIF].
Visit node KIF and remove it from the graph.
Nodes with 0 in-degree: [YJP].
Visit node YJP and remove it from the graph.
So the result of topological sorting is ","('[[ZOA, HQX, KIF, YJP, SIT, YMJ], [ZOA, HQX, SIT, YJP, KIF, YMJ], [ZOA, HQX, SIT, YMJ, KIF, YJP], [ZOA, KIF, YJP, HQX, YMJ, SIT]]',)",2,62
topological_sort,"[(WTQ, GOO), (WTQ, XEJ), (WTQ, KKN), (GOO, XEJ), (GOO, VKD), (XEJ, VKD), (KKN, GOO), (KKN, XEJ), (KKN, VKD), (XPS, XEJ), (XPS, VKD), (XPS, KKN), (XPS, UKT), (UKT, VKD), (UKT, XEJ), (UKT, KKN)]","{WTQ: [GOO, XEJ, KKN],
GOO: [XEJ, VKD],
XEJ: [VKD],
KKN: [GOO, XEJ, VKD],
VKD: [],
XPS: [XEJ, VKD, KKN, UKT],
UKT: [VKD, XEJ, KKN]}","Node WTQ is connected to nodes GOO, XEJ, KKN.
Node GOO is connected to nodes XEJ, VKD.
Node XEJ is connected to node VKD.
Node KKN is connected to nodes GOO, XEJ, VKD.
Node XPS is connected to nodes XEJ, VKD, KKN, UKT.
Node UKT is connected to nodes VKD, XEJ, KKN.","[VKD, WTQ, UKT, GOO, XPS, KKN, XEJ]",7,16,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WTQ, XPS, UKT, KKN, GOO, XEJ, VKD]","Let's solve it step by step.
Nodes with 0 in-degree: [WTQ, XPS].
Visit node WTQ and remove it from the graph.
Nodes with 0 in-degree: [XPS].
Visit node XPS and remove it from the graph.
Nodes with 0 in-degree: [UKT].
Visit node UKT and remove it from the graph.
Nodes with 0 in-degree: [KKN].
Visit node KKN and remove it from the graph.
Nodes with 0 in-degree: [GOO].
Visit node GOO and remove it from the graph.
Nodes with 0 in-degree: [XEJ].
Visit node XEJ and remove it from the graph.
Nodes with 0 in-degree: [VKD].
Visit node VKD and remove it from the graph.
So the result of topological sorting is ","('[[WTQ, XPS, UKT, KKN, GOO, XEJ, VKD], [WTQ, XPS, XEJ, VKD, UKT, KKN, GOO], [WTQ, XPS, UKT, KKN, VKD, XEJ, GOO], [WTQ, GOO, VKD, UKT, KKN, XPS, XEJ]]',)",0,63
topological_sort,"[(DAX, OLN), (DAX, UIY), (OLN, UIY), (TGA, DAX), (MYS, TGA)]","{DAX: [OLN, UIY],
OLN: [UIY],
UIY: [],
TGA: [DAX],
MYS: [TGA]}","Node DAX is connected to nodes OLN, UIY.
Node OLN is connected to node UIY.
Node TGA is connected to node DAX.
Node MYS is connected to node TGA.","[UIY, DAX, OLN, TGA, MYS]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MYS, TGA, DAX, OLN, UIY]","Let's solve it step by step.
Nodes with 0 in-degree: [MYS].
Visit node MYS and remove it from the graph.
Nodes with 0 in-degree: [TGA].
Visit node TGA and remove it from the graph.
Nodes with 0 in-degree: [DAX].
Visit node DAX and remove it from the graph.
Nodes with 0 in-degree: [OLN].
Visit node OLN and remove it from the graph.
Nodes with 0 in-degree: [UIY].
Visit node UIY and remove it from the graph.
So the result of topological sorting is ","('[[MYS, TGA, DAX, OLN, UIY], [MYS, UIY, TGA, DAX, OLN], [MYS, TGA, OLN, DAX, UIY], [MYS, UIY, OLN, DAX, TGA]]',)",0,64
topological_sort,"[(RVX, AHU), (RVX, WNH), (AHU, OIV), (AHU, WNH), (WNH, ZGY), (OIV, ZGY)]","{RVX: [AHU, WNH],
AHU: [OIV, WNH],
WNH: [ZGY],
OIV: [ZGY],
ZGY: []}","Node RVX is connected to nodes AHU, WNH.
Node AHU is connected to nodes OIV, WNH.
Node WNH is connected to node ZGY.
Node OIV is connected to node ZGY.","[AHU, RVX, WNH, OIV, ZGY]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RVX, AHU, OIV, WNH, ZGY]","Let's solve it step by step.
Nodes with 0 in-degree: [RVX].
Visit node RVX and remove it from the graph.
Nodes with 0 in-degree: [AHU].
Visit node AHU and remove it from the graph.
Nodes with 0 in-degree: [OIV, WNH].
Visit node OIV and remove it from the graph.
Nodes with 0 in-degree: [WNH].
Visit node WNH and remove it from the graph.
Nodes with 0 in-degree: [ZGY].
Visit node ZGY and remove it from the graph.
So the result of topological sorting is ","('[[RVX, ZGY, AHU, OIV, WNH], [RVX, AHU, WNH, ZGY, OIV], [RVX, OIV, ZGY, WNH, AHU], [RVX, AHU, OIV, WNH, ZGY]]',)",3,65
topological_sort,"[(UOR, BAT), (UOR, VKJ), (UOR, COM), (BAT, ISC), (BAT, COM), (VKJ, BAT), (VKJ, ISC), (ISC, COM), (MIL, BAT), (MIL, ISC), (MIL, VGR), (VGR, VKJ), (VGR, BAT)]","{UOR: [BAT, VKJ, COM],
BAT: [ISC, COM],
VKJ: [BAT, ISC],
COM: [],
ISC: [COM],
MIL: [BAT, ISC, VGR],
VGR: [VKJ, BAT]}","Node UOR is connected to nodes BAT, VKJ, COM.
Node BAT is connected to nodes ISC, COM.
Node VKJ is connected to nodes BAT, ISC.
Node ISC is connected to node COM.
Node MIL is connected to nodes BAT, ISC, VGR.
Node VGR is connected to nodes VKJ, BAT.","[ISC, VKJ, UOR, COM, BAT, VGR, MIL]",7,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UOR, MIL, VGR, VKJ, BAT, ISC, COM]","Let's solve it step by step.
Nodes with 0 in-degree: [UOR, MIL].
Visit node UOR and remove it from the graph.
Nodes with 0 in-degree: [MIL].
Visit node MIL and remove it from the graph.
Nodes with 0 in-degree: [VGR].
Visit node VGR and remove it from the graph.
Nodes with 0 in-degree: [VKJ].
Visit node VKJ and remove it from the graph.
Nodes with 0 in-degree: [BAT].
Visit node BAT and remove it from the graph.
Nodes with 0 in-degree: [ISC].
Visit node ISC and remove it from the graph.
Nodes with 0 in-degree: [COM].
Visit node COM and remove it from the graph.
So the result of topological sorting is ","('[[UOR, MIL, VGR, ISC, BAT, VKJ, COM], [UOR, COM, BAT, ISC, VGR, VKJ, MIL], [UOR, MIL, ISC, COM, VGR, VKJ, BAT], [UOR, MIL, VGR, VKJ, BAT, ISC, COM]]',)",3,66
topological_sort,"[(PTL, FHD), (PTL, DZC), (PTL, VSF), (DZC, KWY), (DZC, FHD), (KWY, VSF), (KWY, FHD), (UJE, KWY), (UJE, PTL), (UJE, VSF)]","{PTL: [FHD, DZC, VSF],
FHD: [],
DZC: [KWY, FHD],
VSF: [],
KWY: [VSF, FHD],
UJE: [KWY, PTL, VSF]}","Node PTL is connected to nodes FHD, DZC, VSF.
Node DZC is connected to nodes KWY, FHD.
Node KWY is connected to nodes VSF, FHD.
Node UJE is connected to nodes KWY, PTL, VSF.","[KWY, FHD, UJE, PTL, VSF, DZC]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UJE, PTL, DZC, KWY, VSF, FHD]","Let's solve it step by step.
Nodes with 0 in-degree: [UJE].
Visit node UJE and remove it from the graph.
Nodes with 0 in-degree: [PTL].
Visit node PTL and remove it from the graph.
Nodes with 0 in-degree: [DZC].
Visit node DZC and remove it from the graph.
Nodes with 0 in-degree: [KWY].
Visit node KWY and remove it from the graph.
Nodes with 0 in-degree: [VSF, FHD].
Visit node VSF and remove it from the graph.
Nodes with 0 in-degree: [FHD].
Visit node FHD and remove it from the graph.
So the result of topological sorting is ","('[[UJE, PTL, DZC, KWY, VSF, FHD], [UJE, PTL, VSF, FHD, DZC, KWY], [UJE, FHD, DZC, KWY, VSF, PTL], [UJE, PTL, DZC, KWY, VSF, FHD]]',)",0,67
topological_sort,"[(BPB, NHF), (BPB, LSA), (BPB, ECQ), (NHF, ECQ), (ECQ, LSA), (YMF, BPB), (YMF, NHF), (YMF, ECQ)]","{BPB: [NHF, LSA, ECQ],
NHF: [ECQ],
LSA: [],
ECQ: [LSA],
YMF: [BPB, NHF, ECQ]}","Node BPB is connected to nodes NHF, LSA, ECQ.
Node NHF is connected to node ECQ.
Node ECQ is connected to node LSA.
Node YMF is connected to nodes BPB, NHF, ECQ.","[BPB, LSA, YMF, NHF, ECQ]",5,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YMF, BPB, NHF, ECQ, LSA]","Let's solve it step by step.
Nodes with 0 in-degree: [YMF].
Visit node YMF and remove it from the graph.
Nodes with 0 in-degree: [BPB].
Visit node BPB and remove it from the graph.
Nodes with 0 in-degree: [NHF].
Visit node NHF and remove it from the graph.
Nodes with 0 in-degree: [ECQ].
Visit node ECQ and remove it from the graph.
Nodes with 0 in-degree: [LSA].
Visit node LSA and remove it from the graph.
So the result of topological sorting is ","('[[YMF, LSA, BPB, NHF, ECQ], [YMF, BPB, NHF, ECQ, LSA], [YMF, ECQ, BPB, LSA, NHF], [YMF, BPB, NHF, ECQ, LSA]]',)",1,68
topological_sort,"[(JPN, ACF), (JPN, VNK), (ACF, WXS), (VNK, WXS), (GPB, GRY), (GPB, WXS), (GPB, JPN), (GRY, WXS), (MCB, VNK), (MCB, JPN), (MCB, WXS), (MCB, GRY)]","{JPN: [ACF, VNK],
ACF: [WXS],
VNK: [WXS],
WXS: [],
GPB: [GRY, WXS, JPN],
GRY: [WXS],
MCB: [VNK, JPN, WXS, GRY]}","Node JPN is connected to nodes ACF, VNK.
Node ACF is connected to node WXS.
Node VNK is connected to node WXS.
Node GPB is connected to nodes GRY, WXS, JPN.
Node GRY is connected to node WXS.
Node MCB is connected to nodes VNK, JPN, WXS, GRY.","[ACF, JPN, GRY, MCB, VNK, WXS, GPB]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GPB, MCB, JPN, GRY, ACF, VNK, WXS]","Let's solve it step by step.
Nodes with 0 in-degree: [GPB, MCB].
Visit node GPB and remove it from the graph.
Nodes with 0 in-degree: [MCB].
Visit node MCB and remove it from the graph.
Nodes with 0 in-degree: [JPN, GRY].
Visit node JPN and remove it from the graph.
Nodes with 0 in-degree: [GRY, ACF, VNK].
Visit node GRY and remove it from the graph.
Nodes with 0 in-degree: [ACF, VNK].
Visit node ACF and remove it from the graph.
Nodes with 0 in-degree: [VNK].
Visit node VNK and remove it from the graph.
Nodes with 0 in-degree: [WXS].
Visit node WXS and remove it from the graph.
So the result of topological sorting is ","('[[GPB, MCB, JPN, GRY, ACF, VNK, WXS], [GPB, MCB, JPN, GRY, WXS, VNK, ACF], [GPB, WXS, ACF, VNK, MCB, JPN, GRY], [GPB, MCB, VNK, WXS, JPN, GRY, ACF]]',)",0,69
topological_sort,"[(DHY, WOM), (DHY, FLH), (WOM, FLH), (JWS, MET), (JWS, WOM), (JWS, ITW), (JWS, DHY), (ITW, WOM), (ITW, DHY), (XRS, ITW), (XRS, WOM)]","{DHY: [WOM, FLH],
WOM: [FLH],
FLH: [],
JWS: [MET, WOM, ITW, DHY],
MET: [],
ITW: [WOM, DHY],
XRS: [ITW, WOM]}","Node DHY is connected to nodes WOM, FLH.
Node WOM is connected to node FLH.
Node JWS is connected to nodes MET, WOM, ITW, DHY.
Node ITW is connected to nodes WOM, DHY.
Node XRS is connected to nodes ITW, WOM.","[WOM, ITW, MET, JWS, XRS, FLH, DHY]",7,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JWS, XRS, MET, ITW, DHY, WOM, FLH]","Let's solve it step by step.
Nodes with 0 in-degree: [JWS, XRS].
Visit node JWS and remove it from the graph.
Nodes with 0 in-degree: [XRS, MET].
Visit node XRS and remove it from the graph.
Nodes with 0 in-degree: [MET, ITW].
Visit node MET and remove it from the graph.
Nodes with 0 in-degree: [ITW].
Visit node ITW and remove it from the graph.
Nodes with 0 in-degree: [DHY].
Visit node DHY and remove it from the graph.
Nodes with 0 in-degree: [WOM].
Visit node WOM and remove it from the graph.
Nodes with 0 in-degree: [FLH].
Visit node FLH and remove it from the graph.
So the result of topological sorting is ","('[[JWS, ITW, WOM, MET, XRS, FLH, DHY], [JWS, XRS, MET, ITW, DHY, WOM, FLH], [JWS, XRS, MET, DHY, FLH, WOM, ITW], [JWS, XRS, WOM, FLH, MET, ITW, DHY]]',)",1,70
topological_sort,"[(YMI, IKN), (YMI, ODF), (YMI, GHH), (IKN, ODF), (GHH, OSN), (GHH, IKN), (OSN, IKN), (VHP, OSN), (VHP, YMI)]","{YMI: [IKN, ODF, GHH],
IKN: [ODF],
ODF: [],
GHH: [OSN, IKN],
OSN: [IKN],
VHP: [OSN, YMI]}","Node YMI is connected to nodes IKN, ODF, GHH.
Node IKN is connected to node ODF.
Node GHH is connected to nodes OSN, IKN.
Node OSN is connected to node IKN.
Node VHP is connected to nodes OSN, YMI.","[GHH, ODF, IKN, VHP, OSN, YMI]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VHP, YMI, GHH, OSN, IKN, ODF]","Let's solve it step by step.
Nodes with 0 in-degree: [VHP].
Visit node VHP and remove it from the graph.
Nodes with 0 in-degree: [YMI].
Visit node YMI and remove it from the graph.
Nodes with 0 in-degree: [GHH].
Visit node GHH and remove it from the graph.
Nodes with 0 in-degree: [OSN].
Visit node OSN and remove it from the graph.
Nodes with 0 in-degree: [IKN].
Visit node IKN and remove it from the graph.
Nodes with 0 in-degree: [ODF].
Visit node ODF and remove it from the graph.
So the result of topological sorting is ","('[[VHP, YMI, GHH, OSN, IKN, ODF], [VHP, YMI, OSN, ODF, GHH, IKN], [VHP, YMI, GHH, OSN, IKN, ODF], [VHP, YMI, IKN, ODF, GHH, OSN]]',)",2,71
topological_sort,"[(BBS, LUB), (BBS, GBW), (BBS, OUL), (BBS, SUW), (GBW, SUW), (OUL, SUW), (SUW, WJP), (SUW, LUB)]","{BBS: [LUB, GBW, OUL, SUW],
LUB: [],
GBW: [SUW],
OUL: [SUW],
SUW: [WJP, LUB],
WJP: []}","Node BBS is connected to nodes LUB, GBW, OUL, SUW.
Node GBW is connected to node SUW.
Node OUL is connected to node SUW.
Node SUW is connected to nodes WJP, LUB.","[GBW, SUW, LUB, WJP, OUL, BBS]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BBS, GBW, OUL, SUW, WJP, LUB]","Let's solve it step by step.
Nodes with 0 in-degree: [BBS].
Visit node BBS and remove it from the graph.
Nodes with 0 in-degree: [GBW, OUL].
Visit node GBW and remove it from the graph.
Nodes with 0 in-degree: [OUL].
Visit node OUL and remove it from the graph.
Nodes with 0 in-degree: [SUW].
Visit node SUW and remove it from the graph.
Nodes with 0 in-degree: [WJP, LUB].
Visit node WJP and remove it from the graph.
Nodes with 0 in-degree: [LUB].
Visit node LUB and remove it from the graph.
So the result of topological sorting is ","('[[BBS, GBW, SUW, OUL, LUB, WJP], [BBS, GBW, WJP, LUB, OUL, SUW], [BBS, GBW, OUL, SUW, WJP, LUB], [BBS, GBW, OUL, LUB, SUW, WJP]]',)",2,72
topological_sort,"[(KIA, IXQ), (IXQ, ZHR), (ZDD, IXQ), (ZDD, KIA), (ZDD, ZHR), (YWQ, KIA)]","{KIA: [IXQ],
IXQ: [ZHR],
ZHR: [],
ZDD: [IXQ, KIA, ZHR],
YWQ: [KIA]}","Node KIA is connected to node IXQ.
Node IXQ is connected to node ZHR.
Node ZDD is connected to nodes IXQ, KIA, ZHR.
Node YWQ is connected to node KIA.","[ZDD, ZHR, KIA, IXQ, YWQ]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZDD, YWQ, KIA, IXQ, ZHR]","Let's solve it step by step.
Nodes with 0 in-degree: [ZDD, YWQ].
Visit node ZDD and remove it from the graph.
Nodes with 0 in-degree: [YWQ].
Visit node YWQ and remove it from the graph.
Nodes with 0 in-degree: [KIA].
Visit node KIA and remove it from the graph.
Nodes with 0 in-degree: [IXQ].
Visit node IXQ and remove it from the graph.
Nodes with 0 in-degree: [ZHR].
Visit node ZHR and remove it from the graph.
So the result of topological sorting is ","('[[ZDD, ZHR, YWQ, KIA, IXQ], [ZDD, YWQ, ZHR, KIA, IXQ], [ZDD, YWQ, KIA, IXQ, ZHR], [ZDD, IXQ, YWQ, ZHR, KIA]]',)",2,73
topological_sort,"[(MDW, KXK), (MDW, WIM), (WIM, DMZ), (WIM, KYD), (WIM, NQE), (UYF, MDW), (UYF, WIM), (DMZ, KXK), (NQE, DMZ), (NQE, KXK)]","{MDW: [KXK, WIM],
KXK: [],
WIM: [DMZ, KYD, NQE],
UYF: [MDW, WIM],
DMZ: [KXK],
KYD: [],
NQE: [DMZ, KXK]}","Node MDW is connected to nodes KXK, WIM.
Node WIM is connected to nodes DMZ, KYD, NQE.
Node UYF is connected to nodes MDW, WIM.
Node DMZ is connected to node KXK.
Node NQE is connected to nodes DMZ, KXK.","[KXK, WIM, MDW, NQE, UYF, DMZ, KYD]",7,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UYF, MDW, WIM, KYD, NQE, DMZ, KXK]","Let's solve it step by step.
Nodes with 0 in-degree: [UYF].
Visit node UYF and remove it from the graph.
Nodes with 0 in-degree: [MDW].
Visit node MDW and remove it from the graph.
Nodes with 0 in-degree: [WIM].
Visit node WIM and remove it from the graph.
Nodes with 0 in-degree: [KYD, NQE].
Visit node KYD and remove it from the graph.
Nodes with 0 in-degree: [NQE].
Visit node NQE and remove it from the graph.
Nodes with 0 in-degree: [DMZ].
Visit node DMZ and remove it from the graph.
Nodes with 0 in-degree: [KXK].
Visit node KXK and remove it from the graph.
So the result of topological sorting is ","('[[UYF, KYD, NQE, MDW, KXK, WIM, DMZ], [UYF, MDW, WIM, KXK, KYD, DMZ, NQE], [UYF, MDW, DMZ, KXK, WIM, KYD, NQE], [UYF, MDW, WIM, KYD, NQE, DMZ, KXK]]',)",3,74
topological_sort,"[(WCK, QOA), (BFS, HFZ), (BFS, WCK), (HFZ, UZV), (HFZ, QOA)]","{WCK: [QOA],
QOA: [],
BFS: [HFZ, WCK],
HFZ: [UZV, QOA],
UZV: []}","Node WCK is connected to node QOA.
Node BFS is connected to nodes HFZ, WCK.
Node HFZ is connected to nodes UZV, QOA.","[QOA, BFS, WCK, HFZ, UZV]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BFS, HFZ, WCK, UZV, QOA]","Let's solve it step by step.
Nodes with 0 in-degree: [BFS].
Visit node BFS and remove it from the graph.
Nodes with 0 in-degree: [HFZ, WCK].
Visit node HFZ and remove it from the graph.
Nodes with 0 in-degree: [WCK, UZV].
Visit node WCK and remove it from the graph.
Nodes with 0 in-degree: [UZV, QOA].
Visit node UZV and remove it from the graph.
Nodes with 0 in-degree: [QOA].
Visit node QOA and remove it from the graph.
So the result of topological sorting is ","('[[BFS, QOA, HFZ, WCK, UZV], [BFS, HFZ, WCK, UZV, QOA], [BFS, HFZ, UZV, QOA, WCK], [BFS, UZV, WCK, HFZ, QOA]]',)",1,75
topological_sort,"[(QZU, EYJ), (QZU, CCK), (QZU, MHH), (EYJ, MHH), (CCK, MWW), (CCK, MHH), (CCK, EYJ), (CCK, GAH), (MWW, EYJ), (GAH, MHH)]","{QZU: [EYJ, CCK, MHH],
EYJ: [MHH],
CCK: [MWW, MHH, EYJ, GAH],
MHH: [],
MWW: [EYJ],
GAH: [MHH]}","Node QZU is connected to nodes EYJ, CCK, MHH.
Node EYJ is connected to node MHH.
Node CCK is connected to nodes MWW, MHH, EYJ, GAH.
Node MWW is connected to node EYJ.
Node GAH is connected to node MHH.","[EYJ, MWW, MHH, GAH, QZU, CCK]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QZU, CCK, MWW, GAH, EYJ, MHH]","Let's solve it step by step.
Nodes with 0 in-degree: [QZU].
Visit node QZU and remove it from the graph.
Nodes with 0 in-degree: [CCK].
Visit node CCK and remove it from the graph.
Nodes with 0 in-degree: [MWW, GAH].
Visit node MWW and remove it from the graph.
Nodes with 0 in-degree: [GAH, EYJ].
Visit node GAH and remove it from the graph.
Nodes with 0 in-degree: [EYJ].
Visit node EYJ and remove it from the graph.
Nodes with 0 in-degree: [MHH].
Visit node MHH and remove it from the graph.
So the result of topological sorting is ","('[[QZU, CCK, EYJ, MHH, MWW, GAH], [QZU, CCK, MWW, MHH, EYJ, GAH], [QZU, CCK, MWW, GAH, EYJ, MHH], [QZU, GAH, MHH, MWW, CCK, EYJ]]',)",2,76
topological_sort,"[(EJT, OMM), (UNY, OMM), (UNY, QSJ), (UNY, EZX), (EZX, YGV), (EZX, NQJ), (YGV, EJT), (YGV, QSJ), (NQJ, QSJ), (NQJ, EJT)]","{EJT: [OMM],
OMM: [],
UNY: [OMM, QSJ, EZX],
QSJ: [],
EZX: [YGV, NQJ],
YGV: [EJT, QSJ],
NQJ: [QSJ, EJT]}","Node EJT is connected to node OMM.
Node UNY is connected to nodes OMM, QSJ, EZX.
Node EZX is connected to nodes YGV, NQJ.
Node YGV is connected to nodes EJT, QSJ.
Node NQJ is connected to nodes QSJ, EJT.","[UNY, QSJ, EJT, EZX, OMM, NQJ, YGV]",7,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UNY, EZX, YGV, NQJ, QSJ, EJT, OMM]","Let's solve it step by step.
Nodes with 0 in-degree: [UNY].
Visit node UNY and remove it from the graph.
Nodes with 0 in-degree: [EZX].
Visit node EZX and remove it from the graph.
Nodes with 0 in-degree: [YGV, NQJ].
Visit node YGV and remove it from the graph.
Nodes with 0 in-degree: [NQJ].
Visit node NQJ and remove it from the graph.
Nodes with 0 in-degree: [QSJ, EJT].
Visit node QSJ and remove it from the graph.
Nodes with 0 in-degree: [EJT].
Visit node EJT and remove it from the graph.
Nodes with 0 in-degree: [OMM].
Visit node OMM and remove it from the graph.
So the result of topological sorting is ","('[[UNY, EZX, YGV, NQJ, QSJ, EJT, OMM], [UNY, EZX, YGV, EJT, NQJ, QSJ, OMM], [UNY, OMM, EJT, YGV, QSJ, NQJ, EZX], [UNY, EZX, EJT, OMM, YGV, NQJ, QSJ]]',)",0,77
topological_sort,"[(IGW, VJX), (EZF, IGW), (EZF, LUX), (VUJ, EZF), (JCI, VUJ), (JCI, LUX)]","{IGW: [VJX],
VJX: [],
EZF: [IGW, LUX],
LUX: [],
VUJ: [EZF],
JCI: [VUJ, LUX]}","Node IGW is connected to node VJX.
Node EZF is connected to nodes IGW, LUX.
Node VUJ is connected to node EZF.
Node JCI is connected to nodes VUJ, LUX.","[EZF, JCI, VJX, LUX, IGW, VUJ]",6,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JCI, VUJ, EZF, IGW, LUX, VJX]","Let's solve it step by step.
Nodes with 0 in-degree: [JCI].
Visit node JCI and remove it from the graph.
Nodes with 0 in-degree: [VUJ].
Visit node VUJ and remove it from the graph.
Nodes with 0 in-degree: [EZF].
Visit node EZF and remove it from the graph.
Nodes with 0 in-degree: [IGW, LUX].
Visit node IGW and remove it from the graph.
Nodes with 0 in-degree: [LUX, VJX].
Visit node LUX and remove it from the graph.
Nodes with 0 in-degree: [VJX].
Visit node VJX and remove it from the graph.
So the result of topological sorting is ","('[[JCI, VUJ, LUX, VJX, EZF, IGW], [JCI, LUX, EZF, VJX, IGW, VUJ], [JCI, VUJ, EZF, IGW, LUX, VJX], [JCI, VUJ, EZF, IGW, LUX, VJX]]',)",3,78
topological_sort,"[(KOG, CAA), (CAA, WXE), (HBW, CAA), (HBW, KOG), (EVI, CAA), (USB, EVI)]","{KOG: [CAA],
CAA: [WXE],
WXE: [],
HBW: [CAA, KOG],
EVI: [CAA],
USB: [EVI]}","Node KOG is connected to node CAA.
Node CAA is connected to node WXE.
Node HBW is connected to nodes CAA, KOG.
Node EVI is connected to node CAA.
Node USB is connected to node EVI.","[HBW, CAA, EVI, WXE, KOG, USB]",6,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HBW, USB, KOG, EVI, CAA, WXE]","Let's solve it step by step.
Nodes with 0 in-degree: [HBW, USB].
Visit node HBW and remove it from the graph.
Nodes with 0 in-degree: [USB, KOG].
Visit node USB and remove it from the graph.
Nodes with 0 in-degree: [KOG, EVI].
Visit node KOG and remove it from the graph.
Nodes with 0 in-degree: [EVI].
Visit node EVI and remove it from the graph.
Nodes with 0 in-degree: [CAA].
Visit node CAA and remove it from the graph.
Nodes with 0 in-degree: [WXE].
Visit node WXE and remove it from the graph.
So the result of topological sorting is ","('[[HBW, USB, CAA, WXE, KOG, EVI], [HBW, USB, KOG, EVI, CAA, WXE], [HBW, USB, KOG, EVI, CAA, WXE], [HBW, EVI, WXE, CAA, KOG, USB]]',)",1,79
topological_sort,"[(LMQ, KAJ), (KAJ, NZF), (LCN, KAJ), (VQT, NZF), (VQT, LMQ), (VQT, LCN)]","{LMQ: [KAJ],
KAJ: [NZF],
NZF: [],
LCN: [KAJ],
VQT: [NZF, LMQ, LCN]}","Node LMQ is connected to node KAJ.
Node KAJ is connected to node NZF.
Node LCN is connected to node KAJ.
Node VQT is connected to nodes NZF, LMQ, LCN.","[LMQ, KAJ, NZF, LCN, VQT]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VQT, LMQ, LCN, KAJ, NZF]","Let's solve it step by step.
Nodes with 0 in-degree: [VQT].
Visit node VQT and remove it from the graph.
Nodes with 0 in-degree: [LMQ, LCN].
Visit node LMQ and remove it from the graph.
Nodes with 0 in-degree: [LCN].
Visit node LCN and remove it from the graph.
Nodes with 0 in-degree: [KAJ].
Visit node KAJ and remove it from the graph.
Nodes with 0 in-degree: [NZF].
Visit node NZF and remove it from the graph.
So the result of topological sorting is ","('[[VQT, LMQ, LCN, KAJ, NZF], [VQT, LMQ, NZF, KAJ, LCN], [VQT, NZF, LMQ, KAJ, LCN], [VQT, NZF, LMQ, LCN, KAJ]]',)",0,80
topological_sort,"[(WBH, ALQ), (WBH, RYS), (WBH, ABD), (ALQ, ABD), (ALQ, RYS), (AIE, RYS), (AIE, ALQ)]","{WBH: [ALQ, RYS, ABD],
ALQ: [ABD, RYS],
RYS: [],
ABD: [],
AIE: [RYS, ALQ]}","Node WBH is connected to nodes ALQ, RYS, ABD.
Node ALQ is connected to nodes ABD, RYS.
Node AIE is connected to nodes RYS, ALQ.","[ABD, ALQ, WBH, RYS, AIE]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WBH, AIE, ALQ, ABD, RYS]","Let's solve it step by step.
Nodes with 0 in-degree: [WBH, AIE].
Visit node WBH and remove it from the graph.
Nodes with 0 in-degree: [AIE].
Visit node AIE and remove it from the graph.
Nodes with 0 in-degree: [ALQ].
Visit node ALQ and remove it from the graph.
Nodes with 0 in-degree: [ABD, RYS].
Visit node ABD and remove it from the graph.
Nodes with 0 in-degree: [RYS].
Visit node RYS and remove it from the graph.
So the result of topological sorting is ","('[[WBH, AIE, ALQ, ABD, RYS], [WBH, RYS, AIE, ALQ, ABD], [WBH, ALQ, AIE, RYS, ABD], [WBH, AIE, ALQ, ABD, RYS]]',)",3,81
topological_sort,"[(AFA, PJG), (PJG, RKW), (RBT, RKW), (RBT, AFA), (RBT, PJG), (RBT, CFP), (CFP, AFA), (CFP, AQW), (CBW, RBT), (CBW, CFP), (CBW, RKW), (CBW, AQW)]","{AFA: [PJG],
PJG: [RKW],
RKW: [],
RBT: [RKW, AFA, PJG, CFP],
CFP: [AFA, AQW],
AQW: [],
CBW: [RBT, CFP, RKW, AQW]}","Node AFA is connected to node PJG.
Node PJG is connected to node RKW.
Node RBT is connected to nodes RKW, AFA, PJG, CFP.
Node CFP is connected to nodes AFA, AQW.
Node CBW is connected to nodes RBT, CFP, RKW, AQW.","[RBT, AQW, AFA, CFP, RKW, CBW, PJG]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CBW, RBT, CFP, AFA, AQW, PJG, RKW]","Let's solve it step by step.
Nodes with 0 in-degree: [CBW].
Visit node CBW and remove it from the graph.
Nodes with 0 in-degree: [RBT].
Visit node RBT and remove it from the graph.
Nodes with 0 in-degree: [CFP].
Visit node CFP and remove it from the graph.
Nodes with 0 in-degree: [AFA, AQW].
Visit node AFA and remove it from the graph.
Nodes with 0 in-degree: [AQW, PJG].
Visit node AQW and remove it from the graph.
Nodes with 0 in-degree: [PJG].
Visit node PJG and remove it from the graph.
Nodes with 0 in-degree: [RKW].
Visit node RKW and remove it from the graph.
So the result of topological sorting is ","('[[CBW, RBT, CFP, AFA, AQW, PJG, RKW], [CBW, RBT, CFP, PJG, AQW, RKW, AFA], [CBW, RBT, PJG, RKW, CFP, AFA, AQW], [CBW, RBT, PJG, AQW, CFP, AFA, RKW]]',)",0,82
topological_sort,"[(MUI, ITA), (THW, KIY), (THW, RPG), (RPG, MUI), (RPG, KIY)]","{MUI: [ITA],
ITA: [],
THW: [KIY, RPG],
KIY: [],
RPG: [MUI, KIY]}","Node MUI is connected to node ITA.
Node THW is connected to nodes KIY, RPG.
Node RPG is connected to nodes MUI, KIY.","[THW, RPG, MUI, ITA, KIY]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[THW, RPG, MUI, KIY, ITA]","Let's solve it step by step.
Nodes with 0 in-degree: [THW].
Visit node THW and remove it from the graph.
Nodes with 0 in-degree: [RPG].
Visit node RPG and remove it from the graph.
Nodes with 0 in-degree: [MUI, KIY].
Visit node MUI and remove it from the graph.
Nodes with 0 in-degree: [KIY, ITA].
Visit node KIY and remove it from the graph.
Nodes with 0 in-degree: [ITA].
Visit node ITA and remove it from the graph.
So the result of topological sorting is ","('[[THW, RPG, KIY, ITA, MUI], [THW, RPG, MUI, KIY, ITA], [THW, ITA, RPG, MUI, KIY], [THW, ITA, MUI, KIY, RPG]]',)",1,83
topological_sort,"[(BID, DAU), (BID, UJX), (BID, WOQ), (DAU, TES), (DAU, WOQ), (UJX, WOQ), (UJX, TES), (WRO, WOQ), (WRO, OXK), (OXK, DAU), (OXK, UJX)]","{BID: [DAU, UJX, WOQ],
DAU: [TES, WOQ],
UJX: [WOQ, TES],
WOQ: [],
TES: [],
WRO: [WOQ, OXK],
OXK: [DAU, UJX]}","Node BID is connected to nodes DAU, UJX, WOQ.
Node DAU is connected to nodes TES, WOQ.
Node UJX is connected to nodes WOQ, TES.
Node WRO is connected to nodes WOQ, OXK.
Node OXK is connected to nodes DAU, UJX.","[DAU, BID, WOQ, UJX, WRO, OXK, TES]",7,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BID, WRO, OXK, DAU, UJX, WOQ, TES]","Let's solve it step by step.
Nodes with 0 in-degree: [BID, WRO].
Visit node BID and remove it from the graph.
Nodes with 0 in-degree: [WRO].
Visit node WRO and remove it from the graph.
Nodes with 0 in-degree: [OXK].
Visit node OXK and remove it from the graph.
Nodes with 0 in-degree: [DAU, UJX].
Visit node DAU and remove it from the graph.
Nodes with 0 in-degree: [UJX].
Visit node UJX and remove it from the graph.
Nodes with 0 in-degree: [WOQ, TES].
Visit node WOQ and remove it from the graph.
Nodes with 0 in-degree: [TES].
Visit node TES and remove it from the graph.
So the result of topological sorting is ","('[[BID, WRO, OXK, UJX, TES, DAU, WOQ], [BID, WRO, UJX, WOQ, DAU, OXK, TES], [BID, WRO, WOQ, TES, OXK, DAU, UJX], [BID, WRO, OXK, DAU, UJX, WOQ, TES]]',)",3,84
topological_sort,"[(BOQ, YWQ), (YWQ, IOJ), (IOJ, ABS), (SJF, BOQ), (ABS, QAE)]","{BOQ: [YWQ],
YWQ: [IOJ],
IOJ: [ABS],
SJF: [BOQ],
ABS: [QAE],
QAE: []}","Node BOQ is connected to node YWQ.
Node YWQ is connected to node IOJ.
Node IOJ is connected to node ABS.
Node SJF is connected to node BOQ.
Node ABS is connected to node QAE.","[SJF, QAE, BOQ, ABS, IOJ, YWQ]",6,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SJF, BOQ, YWQ, IOJ, ABS, QAE]","Let's solve it step by step.
Nodes with 0 in-degree: [SJF].
Visit node SJF and remove it from the graph.
Nodes with 0 in-degree: [BOQ].
Visit node BOQ and remove it from the graph.
Nodes with 0 in-degree: [YWQ].
Visit node YWQ and remove it from the graph.
Nodes with 0 in-degree: [IOJ].
Visit node IOJ and remove it from the graph.
Nodes with 0 in-degree: [ABS].
Visit node ABS and remove it from the graph.
Nodes with 0 in-degree: [QAE].
Visit node QAE and remove it from the graph.
So the result of topological sorting is ","('[[SJF, BOQ, YWQ, ABS, IOJ, QAE], [SJF, BOQ, YWQ, IOJ, ABS, QAE], [SJF, BOQ, ABS, QAE, YWQ, IOJ], [SJF, ABS, IOJ, QAE, YWQ, BOQ]]',)",1,85
topological_sort,"[(YEP, UKD), (YEP, WUB), (UKD, TRJ), (UKD, UZD), (UZD, WUB)]","{YEP: [UKD, WUB],
UKD: [TRJ, UZD],
WUB: [],
TRJ: [],
UZD: [WUB]}","Node YEP is connected to nodes UKD, WUB.
Node UKD is connected to nodes TRJ, UZD.
Node UZD is connected to node WUB.","[UZD, TRJ, YEP, WUB, UKD]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YEP, UKD, TRJ, UZD, WUB]","Let's solve it step by step.
Nodes with 0 in-degree: [YEP].
Visit node YEP and remove it from the graph.
Nodes with 0 in-degree: [UKD].
Visit node UKD and remove it from the graph.
Nodes with 0 in-degree: [TRJ, UZD].
Visit node TRJ and remove it from the graph.
Nodes with 0 in-degree: [UZD].
Visit node UZD and remove it from the graph.
Nodes with 0 in-degree: [WUB].
Visit node WUB and remove it from the graph.
So the result of topological sorting is ","('[[YEP, WUB, UKD, TRJ, UZD], [YEP, UKD, TRJ, WUB, UZD], [YEP, UKD, TRJ, UZD, WUB], [YEP, UZD, UKD, WUB, TRJ]]',)",2,86
topological_sort,"[(KEP, UGY), (UGY, FDQ), (UGY, MSC), (UGY, FKI), (MSC, FKI), (FKI, TMI)]","{KEP: [UGY],
UGY: [FDQ, MSC, FKI],
FDQ: [],
MSC: [FKI],
FKI: [TMI],
TMI: []}","Node KEP is connected to node UGY.
Node UGY is connected to nodes FDQ, MSC, FKI.
Node MSC is connected to node FKI.
Node FKI is connected to node TMI.","[MSC, UGY, KEP, FKI, FDQ, TMI]",6,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KEP, UGY, FDQ, MSC, FKI, TMI]","Let's solve it step by step.
Nodes with 0 in-degree: [KEP].
Visit node KEP and remove it from the graph.
Nodes with 0 in-degree: [UGY].
Visit node UGY and remove it from the graph.
Nodes with 0 in-degree: [FDQ, MSC].
Visit node FDQ and remove it from the graph.
Nodes with 0 in-degree: [MSC].
Visit node MSC and remove it from the graph.
Nodes with 0 in-degree: [FKI].
Visit node FKI and remove it from the graph.
Nodes with 0 in-degree: [TMI].
Visit node TMI and remove it from the graph.
So the result of topological sorting is ","('[[KEP, UGY, FDQ, MSC, FKI, TMI], [KEP, UGY, FDQ, TMI, FKI, MSC], [KEP, UGY, FKI, TMI, FDQ, MSC], [KEP, FDQ, FKI, MSC, UGY, TMI]]',)",0,87
topological_sort,"[(RPZ, HQK), (RPZ, ZVP), (HQK, GPV), (ZVP, HQK), (ITY, GPV), (ITY, RPZ)]","{RPZ: [HQK, ZVP],
HQK: [GPV],
ZVP: [HQK],
GPV: [],
ITY: [GPV, RPZ]}","Node RPZ is connected to nodes HQK, ZVP.
Node HQK is connected to node GPV.
Node ZVP is connected to node HQK.
Node ITY is connected to nodes GPV, RPZ.","[GPV, ITY, RPZ, HQK, ZVP]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ITY, RPZ, ZVP, HQK, GPV]","Let's solve it step by step.
Nodes with 0 in-degree: [ITY].
Visit node ITY and remove it from the graph.
Nodes with 0 in-degree: [RPZ].
Visit node RPZ and remove it from the graph.
Nodes with 0 in-degree: [ZVP].
Visit node ZVP and remove it from the graph.
Nodes with 0 in-degree: [HQK].
Visit node HQK and remove it from the graph.
Nodes with 0 in-degree: [GPV].
Visit node GPV and remove it from the graph.
So the result of topological sorting is ","('[[ITY, GPV, RPZ, ZVP, HQK], [ITY, RPZ, ZVP, HQK, GPV], [ITY, RPZ, ZVP, HQK, GPV], [ITY, RPZ, GPV, HQK, ZVP]]',)",2,88
topological_sort,"[(JDX, YLM), (JDX, PZH), (QPV, XFA), (XFA, PZH), (XFA, JDX)]","{JDX: [YLM, PZH],
YLM: [],
PZH: [],
QPV: [XFA],
XFA: [PZH, JDX]}","Node JDX is connected to nodes YLM, PZH.
Node QPV is connected to node XFA.
Node XFA is connected to nodes PZH, JDX.","[JDX, PZH, YLM, QPV, XFA]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QPV, XFA, JDX, YLM, PZH]","Let's solve it step by step.
Nodes with 0 in-degree: [QPV].
Visit node QPV and remove it from the graph.
Nodes with 0 in-degree: [XFA].
Visit node XFA and remove it from the graph.
Nodes with 0 in-degree: [JDX].
Visit node JDX and remove it from the graph.
Nodes with 0 in-degree: [YLM, PZH].
Visit node YLM and remove it from the graph.
Nodes with 0 in-degree: [PZH].
Visit node PZH and remove it from the graph.
So the result of topological sorting is ","('[[QPV, XFA, JDX, YLM, PZH], [QPV, XFA, YLM, JDX, PZH], [QPV, PZH, YLM, JDX, XFA], [QPV, PZH, XFA, JDX, YLM]]',)",0,89
topological_sort,"[(IOM, YUZ), (IOM, VOB), (VOB, FRF), (VOB, YUZ), (FRF, YUZ), (LTH, YUZ), (LTH, VLS)]","{IOM: [YUZ, VOB],
YUZ: [],
VOB: [FRF, YUZ],
FRF: [YUZ],
LTH: [YUZ, VLS],
VLS: []}","Node IOM is connected to nodes YUZ, VOB.
Node VOB is connected to nodes FRF, YUZ.
Node FRF is connected to node YUZ.
Node LTH is connected to nodes YUZ, VLS.","[VOB, FRF, YUZ, IOM, VLS, LTH]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IOM, LTH, VOB, VLS, FRF, YUZ]","Let's solve it step by step.
Nodes with 0 in-degree: [IOM, LTH].
Visit node IOM and remove it from the graph.
Nodes with 0 in-degree: [LTH, VOB].
Visit node LTH and remove it from the graph.
Nodes with 0 in-degree: [VOB, VLS].
Visit node VOB and remove it from the graph.
Nodes with 0 in-degree: [VLS, FRF].
Visit node VLS and remove it from the graph.
Nodes with 0 in-degree: [FRF].
Visit node FRF and remove it from the graph.
Nodes with 0 in-degree: [YUZ].
Visit node YUZ and remove it from the graph.
So the result of topological sorting is ","('[[IOM, VOB, LTH, VLS, FRF, YUZ], [IOM, LTH, FRF, YUZ, VOB, VLS], [IOM, LTH, VOB, YUZ, FRF, VLS], [IOM, LTH, VOB, VLS, FRF, YUZ]]',)",3,90
topological_sort,"[(CEM, UII), (CEM, ABP), (CEM, QVJ), (CEM, JFC), (CEM, YMJ), (UII, YMJ), (UII, QVJ), (UII, JFC), (ABP, UII), (JFC, YMJ), (YMJ, QVJ)]","{CEM: [UII, ABP, QVJ, JFC, YMJ],
UII: [YMJ, QVJ, JFC],
ABP: [UII],
QVJ: [],
JFC: [YMJ],
YMJ: [QVJ]}","Node CEM is connected to nodes UII, ABP, QVJ, JFC, YMJ.
Node UII is connected to nodes YMJ, QVJ, JFC.
Node ABP is connected to node UII.
Node JFC is connected to node YMJ.
Node YMJ is connected to node QVJ.","[JFC, QVJ, YMJ, UII, ABP, CEM]",6,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CEM, ABP, UII, JFC, YMJ, QVJ]","Let's solve it step by step.
Nodes with 0 in-degree: [CEM].
Visit node CEM and remove it from the graph.
Nodes with 0 in-degree: [ABP].
Visit node ABP and remove it from the graph.
Nodes with 0 in-degree: [UII].
Visit node UII and remove it from the graph.
Nodes with 0 in-degree: [JFC].
Visit node JFC and remove it from the graph.
Nodes with 0 in-degree: [YMJ].
Visit node YMJ and remove it from the graph.
Nodes with 0 in-degree: [QVJ].
Visit node QVJ and remove it from the graph.
So the result of topological sorting is ","('[[CEM, ABP, UII, JFC, YMJ, QVJ], [CEM, ABP, YMJ, QVJ, UII, JFC], [CEM, ABP, UII, JFC, QVJ, YMJ], [CEM, ABP, UII, QVJ, YMJ, JFC]]',)",0,91
topological_sort,"[(XQL, YJJ), (XQL, MMW), (MMW, YJJ), (IRK, KHJ), (IRK, YJJ), (XSC, KHJ), (XSC, MMW), (XSC, IRK)]","{XQL: [YJJ, MMW],
YJJ: [],
MMW: [YJJ],
IRK: [KHJ, YJJ],
KHJ: [],
XSC: [KHJ, MMW, IRK]}","Node XQL is connected to nodes YJJ, MMW.
Node MMW is connected to node YJJ.
Node IRK is connected to nodes KHJ, YJJ.
Node XSC is connected to nodes KHJ, MMW, IRK.","[XQL, IRK, KHJ, XSC, YJJ, MMW]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XQL, XSC, MMW, IRK, KHJ, YJJ]","Let's solve it step by step.
Nodes with 0 in-degree: [XQL, XSC].
Visit node XQL and remove it from the graph.
Nodes with 0 in-degree: [XSC].
Visit node XSC and remove it from the graph.
Nodes with 0 in-degree: [MMW, IRK].
Visit node MMW and remove it from the graph.
Nodes with 0 in-degree: [IRK].
Visit node IRK and remove it from the graph.
Nodes with 0 in-degree: [KHJ, YJJ].
Visit node KHJ and remove it from the graph.
Nodes with 0 in-degree: [YJJ].
Visit node YJJ and remove it from the graph.
So the result of topological sorting is ","('[[XQL, XSC, MMW, YJJ, IRK, KHJ], [XQL, XSC, KHJ, YJJ, MMW, IRK], [XQL, XSC, YJJ, MMW, KHJ, IRK], [XQL, XSC, MMW, IRK, KHJ, YJJ]]',)",3,92
topological_sort,"[(QNW, SRM), (QNW, AXC), (SRM, AXC), (UOI, AXC), (UOI, QNW), (UOI, SRM), (OOZ, UOI)]","{QNW: [SRM, AXC],
SRM: [AXC],
AXC: [],
UOI: [AXC, QNW, SRM],
OOZ: [UOI]}","Node QNW is connected to nodes SRM, AXC.
Node SRM is connected to node AXC.
Node UOI is connected to nodes AXC, QNW, SRM.
Node OOZ is connected to node UOI.","[UOI, AXC, OOZ, QNW, SRM]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OOZ, UOI, QNW, SRM, AXC]","Let's solve it step by step.
Nodes with 0 in-degree: [OOZ].
Visit node OOZ and remove it from the graph.
Nodes with 0 in-degree: [UOI].
Visit node UOI and remove it from the graph.
Nodes with 0 in-degree: [QNW].
Visit node QNW and remove it from the graph.
Nodes with 0 in-degree: [SRM].
Visit node SRM and remove it from the graph.
Nodes with 0 in-degree: [AXC].
Visit node AXC and remove it from the graph.
So the result of topological sorting is ","('[[OOZ, UOI, QNW, SRM, AXC], [OOZ, AXC, UOI, QNW, SRM], [OOZ, UOI, QNW, AXC, SRM], [OOZ, AXC, UOI, SRM, QNW]]',)",0,93
topological_sort,"[(QVQ, IJQ), (QVQ, QSJ), (IJQ, QSJ), (RJT, IJQ), (RJT, WBE), (WBE, QVQ), (WBE, IJQ)]","{QVQ: [IJQ, QSJ],
IJQ: [QSJ],
QSJ: [],
RJT: [IJQ, WBE],
WBE: [QVQ, IJQ]}","Node QVQ is connected to nodes IJQ, QSJ.
Node IJQ is connected to node QSJ.
Node RJT is connected to nodes IJQ, WBE.
Node WBE is connected to nodes QVQ, IJQ.","[QSJ, RJT, QVQ, WBE, IJQ]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RJT, WBE, QVQ, IJQ, QSJ]","Let's solve it step by step.
Nodes with 0 in-degree: [RJT].
Visit node RJT and remove it from the graph.
Nodes with 0 in-degree: [WBE].
Visit node WBE and remove it from the graph.
Nodes with 0 in-degree: [QVQ].
Visit node QVQ and remove it from the graph.
Nodes with 0 in-degree: [IJQ].
Visit node IJQ and remove it from the graph.
Nodes with 0 in-degree: [QSJ].
Visit node QSJ and remove it from the graph.
So the result of topological sorting is ","('[[RJT, WBE, QVQ, IJQ, QSJ], [RJT, QSJ, WBE, QVQ, IJQ], [RJT, QVQ, WBE, IJQ, QSJ], [RJT, WBE, QVQ, IJQ, QSJ]]',)",3,94
topological_sort,"[(NLR, IPX), (NLR, RHW), (RHW, IPX), (GAJ, IPX), (GAJ, YFD), (YFD, RHW)]","{NLR: [IPX, RHW],
IPX: [],
RHW: [IPX],
GAJ: [IPX, YFD],
YFD: [RHW]}","Node NLR is connected to nodes IPX, RHW.
Node RHW is connected to node IPX.
Node GAJ is connected to nodes IPX, YFD.
Node YFD is connected to node RHW.","[YFD, RHW, NLR, GAJ, IPX]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[NLR, GAJ, YFD, RHW, IPX]","Let's solve it step by step.
Nodes with 0 in-degree: [NLR, GAJ].
Visit node NLR and remove it from the graph.
Nodes with 0 in-degree: [GAJ].
Visit node GAJ and remove it from the graph.
Nodes with 0 in-degree: [YFD].
Visit node YFD and remove it from the graph.
Nodes with 0 in-degree: [RHW].
Visit node RHW and remove it from the graph.
Nodes with 0 in-degree: [IPX].
Visit node IPX and remove it from the graph.
So the result of topological sorting is ","('[[NLR, GAJ, YFD, RHW, IPX], [NLR, IPX, GAJ, YFD, RHW], [NLR, GAJ, RHW, YFD, IPX], [NLR, GAJ, RHW, YFD, IPX]]',)",0,95
topological_sort,"[(UCE, BFA), (UCE, GSO), (BFA, GSO), (CNT, KZM), (CNT, GSO), (CNT, UCE), (CNT, BFA), (CNT, PRG), (KZM, BFA), (KZM, GSO), (KZM, PRG), (PRG, GSO), (PRG, UCE), (PRG, ADT), (PRG, BFA), (ADT, BFA), (ADT, UCE), (ADT, GSO)]","{UCE: [BFA, GSO],
BFA: [GSO],
GSO: [],
CNT: [KZM, GSO, UCE, BFA, PRG],
KZM: [BFA, GSO, PRG],
PRG: [GSO, UCE, ADT, BFA],
ADT: [BFA, UCE, GSO]}","Node UCE is connected to nodes BFA, GSO.
Node BFA is connected to node GSO.
Node CNT is connected to nodes KZM, GSO, UCE, BFA, PRG.
Node KZM is connected to nodes BFA, GSO, PRG.
Node PRG is connected to nodes GSO, UCE, ADT, BFA.
Node ADT is connected to nodes BFA, UCE, GSO.","[UCE, BFA, ADT, KZM, CNT, PRG, GSO]",7,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CNT, KZM, PRG, ADT, UCE, BFA, GSO]","Let's solve it step by step.
Nodes with 0 in-degree: [CNT].
Visit node CNT and remove it from the graph.
Nodes with 0 in-degree: [KZM].
Visit node KZM and remove it from the graph.
Nodes with 0 in-degree: [PRG].
Visit node PRG and remove it from the graph.
Nodes with 0 in-degree: [ADT].
Visit node ADT and remove it from the graph.
Nodes with 0 in-degree: [UCE].
Visit node UCE and remove it from the graph.
Nodes with 0 in-degree: [BFA].
Visit node BFA and remove it from the graph.
Nodes with 0 in-degree: [GSO].
Visit node GSO and remove it from the graph.
So the result of topological sorting is ","('[[CNT, KZM, UCE, PRG, BFA, GSO, ADT], [CNT, KZM, PRG, ADT, UCE, GSO, BFA], [CNT, KZM, PRG, ADT, UCE, BFA, GSO], [CNT, KZM, BFA, GSO, PRG, ADT, UCE]]',)",2,96
topological_sort,"[(TPM, NTX), (TPM, CAL), (TPM, QLF), (TPM, GSE), (NTX, CAL), (CAL, GSE), (QLF, CAL), (QLF, NTX)]","{TPM: [NTX, CAL, QLF, GSE],
NTX: [CAL],
CAL: [GSE],
QLF: [CAL, NTX],
GSE: []}","Node TPM is connected to nodes NTX, CAL, QLF, GSE.
Node NTX is connected to node CAL.
Node CAL is connected to node GSE.
Node QLF is connected to nodes CAL, NTX.","[TPM, GSE, QLF, CAL, NTX]",5,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TPM, QLF, NTX, CAL, GSE]","Let's solve it step by step.
Nodes with 0 in-degree: [TPM].
Visit node TPM and remove it from the graph.
Nodes with 0 in-degree: [QLF].
Visit node QLF and remove it from the graph.
Nodes with 0 in-degree: [NTX].
Visit node NTX and remove it from the graph.
Nodes with 0 in-degree: [CAL].
Visit node CAL and remove it from the graph.
Nodes with 0 in-degree: [GSE].
Visit node GSE and remove it from the graph.
So the result of topological sorting is ","('[[TPM, QLF, NTX, CAL, GSE], [TPM, QLF, NTX, CAL, GSE], [TPM, NTX, CAL, QLF, GSE], [TPM, GSE, QLF, NTX, CAL]]',)",1,97
topological_sort,"[(ZPD, EAE), (ZPD, OKF), (ZPD, SAQ), (ZPD, GBY), (ZPD, VLQ), (EAE, KLH), (OKF, KLH), (SAQ, GBY), (SAQ, KLH), (SAQ, VLQ), (SAQ, EAE), (GBY, VLQ), (VLQ, EAE)]","{ZPD: [EAE, OKF, SAQ, GBY, VLQ],
EAE: [KLH],
OKF: [KLH],
SAQ: [GBY, KLH, VLQ, EAE],
GBY: [VLQ],
VLQ: [EAE],
KLH: []}","Node ZPD is connected to nodes EAE, OKF, SAQ, GBY, VLQ.
Node EAE is connected to node KLH.
Node OKF is connected to node KLH.
Node SAQ is connected to nodes GBY, KLH, VLQ, EAE.
Node GBY is connected to node VLQ.
Node VLQ is connected to node EAE.","[OKF, ZPD, GBY, VLQ, EAE, KLH, SAQ]",7,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZPD, OKF, SAQ, GBY, VLQ, EAE, KLH]","Let's solve it step by step.
Nodes with 0 in-degree: [ZPD].
Visit node ZPD and remove it from the graph.
Nodes with 0 in-degree: [OKF, SAQ].
Visit node OKF and remove it from the graph.
Nodes with 0 in-degree: [SAQ].
Visit node SAQ and remove it from the graph.
Nodes with 0 in-degree: [GBY].
Visit node GBY and remove it from the graph.
Nodes with 0 in-degree: [VLQ].
Visit node VLQ and remove it from the graph.
Nodes with 0 in-degree: [EAE].
Visit node EAE and remove it from the graph.
Nodes with 0 in-degree: [KLH].
Visit node KLH and remove it from the graph.
So the result of topological sorting is ","('[[ZPD, OKF, SAQ, GBY, VLQ, EAE, KLH], [ZPD, OKF, EAE, KLH, SAQ, GBY, VLQ], [ZPD, KLH, EAE, SAQ, VLQ, GBY, OKF], [ZPD, OKF, SAQ, GBY, KLH, EAE, VLQ]]',)",0,98
topological_sort,"[(QZX, XZO), (QZX, TOA), (TOA, XZO), (AYL, QZX), (AYL, QGQ), (AYL, TOA), (QGQ, XZO), (VVZ, QGQ), (VVZ, TOA)]","{QZX: [XZO, TOA],
XZO: [],
TOA: [XZO],
AYL: [QZX, QGQ, TOA],
QGQ: [XZO],
VVZ: [QGQ, TOA]}","Node QZX is connected to nodes XZO, TOA.
Node TOA is connected to node XZO.
Node AYL is connected to nodes QZX, QGQ, TOA.
Node QGQ is connected to node XZO.
Node VVZ is connected to nodes QGQ, TOA.","[QZX, VVZ, AYL, QGQ, XZO, TOA]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[AYL, VVZ, QZX, QGQ, TOA, XZO]","Let's solve it step by step.
Nodes with 0 in-degree: [AYL, VVZ].
Visit node AYL and remove it from the graph.
Nodes with 0 in-degree: [VVZ, QZX].
Visit node VVZ and remove it from the graph.
Nodes with 0 in-degree: [QZX, QGQ].
Visit node QZX and remove it from the graph.
Nodes with 0 in-degree: [QGQ, TOA].
Visit node QGQ and remove it from the graph.
Nodes with 0 in-degree: [TOA].
Visit node TOA and remove it from the graph.
Nodes with 0 in-degree: [XZO].
Visit node XZO and remove it from the graph.
So the result of topological sorting is ","('[[AYL, VVZ, TOA, XZO, QZX, QGQ], [AYL, VVZ, QZX, XZO, TOA, QGQ], [AYL, XZO, QGQ, TOA, QZX, VVZ], [AYL, VVZ, QZX, QGQ, TOA, XZO]]',)",3,99
topological_sort,"[(WPI, BDN), (WPI, OUE), (BDN, LDA), (LDA, PKA)]","{WPI: [BDN, OUE],
BDN: [LDA],
OUE: [],
LDA: [PKA],
PKA: []}","Node WPI is connected to nodes BDN, OUE.
Node BDN is connected to node LDA.
Node LDA is connected to node PKA.","[BDN, PKA, LDA, WPI, OUE]",5,4,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WPI, BDN, OUE, LDA, PKA]","Let's solve it step by step.
Nodes with 0 in-degree: [WPI].
Visit node WPI and remove it from the graph.
Nodes with 0 in-degree: [BDN, OUE].
Visit node BDN and remove it from the graph.
Nodes with 0 in-degree: [OUE, LDA].
Visit node OUE and remove it from the graph.
Nodes with 0 in-degree: [LDA].
Visit node LDA and remove it from the graph.
Nodes with 0 in-degree: [PKA].
Visit node PKA and remove it from the graph.
So the result of topological sorting is ","('[[WPI, LDA, BDN, OUE, PKA], [WPI, BDN, OUE, LDA, PKA], [WPI, BDN, LDA, OUE, PKA], [WPI, PKA, BDN, OUE, LDA]]',)",1,100
topological_sort,"[(QUP, APK), (APK, SBI), (SBI, AAJ), (SBI, TRH), (MCA, QUP), (TFJ, MCA)]","{QUP: [APK],
APK: [SBI],
SBI: [AAJ, TRH],
AAJ: [],
TRH: [],
MCA: [QUP],
TFJ: [MCA]}","Node QUP is connected to node APK.
Node APK is connected to node SBI.
Node SBI is connected to nodes AAJ, TRH.
Node MCA is connected to node QUP.
Node TFJ is connected to node MCA.","[TRH, APK, SBI, QUP, TFJ, AAJ, MCA]",7,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TFJ, MCA, QUP, APK, SBI, AAJ, TRH]","Let's solve it step by step.
Nodes with 0 in-degree: [TFJ].
Visit node TFJ and remove it from the graph.
Nodes with 0 in-degree: [MCA].
Visit node MCA and remove it from the graph.
Nodes with 0 in-degree: [QUP].
Visit node QUP and remove it from the graph.
Nodes with 0 in-degree: [APK].
Visit node APK and remove it from the graph.
Nodes with 0 in-degree: [SBI].
Visit node SBI and remove it from the graph.
Nodes with 0 in-degree: [AAJ, TRH].
Visit node AAJ and remove it from the graph.
Nodes with 0 in-degree: [TRH].
Visit node TRH and remove it from the graph.
So the result of topological sorting is ","('[[TFJ, MCA, AAJ, TRH, QUP, APK, SBI], [TFJ, MCA, QUP, APK, SBI, AAJ, TRH], [TFJ, MCA, QUP, SBI, TRH, APK, AAJ], [TFJ, AAJ, SBI, TRH, MCA, APK, QUP]]',)",1,101
topological_sort,"[(EDS, GML), (EDS, VJW), (EDS, LJT), (GML, VJW), (GML, OZL), (GML, LJT), (LJT, OZL), (LJT, GJC)]","{EDS: [GML, VJW, LJT],
GML: [VJW, OZL, LJT],
VJW: [],
LJT: [OZL, GJC],
OZL: [],
GJC: []}","Node EDS is connected to nodes GML, VJW, LJT.
Node GML is connected to nodes VJW, OZL, LJT.
Node LJT is connected to nodes OZL, GJC.","[OZL, GJC, LJT, GML, EDS, VJW]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EDS, GML, VJW, LJT, OZL, GJC]","Let's solve it step by step.
Nodes with 0 in-degree: [EDS].
Visit node EDS and remove it from the graph.
Nodes with 0 in-degree: [GML].
Visit node GML and remove it from the graph.
Nodes with 0 in-degree: [VJW, LJT].
Visit node VJW and remove it from the graph.
Nodes with 0 in-degree: [LJT].
Visit node LJT and remove it from the graph.
Nodes with 0 in-degree: [OZL, GJC].
Visit node OZL and remove it from the graph.
Nodes with 0 in-degree: [GJC].
Visit node GJC and remove it from the graph.
So the result of topological sorting is ","('[[EDS, GML, VJW, LJT, OZL, GJC], [EDS, GML, VJW, OZL, LJT, GJC], [EDS, GML, OZL, GJC, VJW, LJT], [EDS, OZL, LJT, VJW, GJC, GML]]',)",0,102
topological_sort,"[(ENR, ZSF), (ENR, HUB), (ENR, JUX), (ENR, GTG), (ZSF, HUB), (JUX, HUB), (JUX, ZSF), (GTG, JUX), (GTG, ZSF), (GMA, JUX), (GMA, ENR), (GMA, GTG)]","{ENR: [ZSF, HUB, JUX, GTG],
ZSF: [HUB],
HUB: [],
JUX: [HUB, ZSF],
GTG: [JUX, ZSF],
GMA: [JUX, ENR, GTG]}","Node ENR is connected to nodes ZSF, HUB, JUX, GTG.
Node ZSF is connected to node HUB.
Node JUX is connected to nodes HUB, ZSF.
Node GTG is connected to nodes JUX, ZSF.
Node GMA is connected to nodes JUX, ENR, GTG.","[ENR, JUX, GTG, HUB, GMA, ZSF]",6,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GMA, ENR, GTG, JUX, ZSF, HUB]","Let's solve it step by step.
Nodes with 0 in-degree: [GMA].
Visit node GMA and remove it from the graph.
Nodes with 0 in-degree: [ENR].
Visit node ENR and remove it from the graph.
Nodes with 0 in-degree: [GTG].
Visit node GTG and remove it from the graph.
Nodes with 0 in-degree: [JUX].
Visit node JUX and remove it from the graph.
Nodes with 0 in-degree: [ZSF].
Visit node ZSF and remove it from the graph.
Nodes with 0 in-degree: [HUB].
Visit node HUB and remove it from the graph.
So the result of topological sorting is ","('[[GMA, HUB, JUX, ZSF, ENR, GTG], [GMA, ENR, ZSF, HUB, GTG, JUX], [GMA, ENR, GTG, JUX, ZSF, HUB], [GMA, ENR, GTG, HUB, ZSF, JUX]]',)",2,103
topological_sort,"[(HFD, VGQ), (HFD, FCF), (HFD, DQC), (HFD, KXJ), (VGQ, KXJ), (FCF, KXJ), (FCF, VGQ), (FCF, NRN), (FCF, QQO), (DQC, VGQ), (DQC, FCF), (DQC, QQO), (NRN, KXJ), (NRN, VGQ), (QQO, NRN)]","{HFD: [VGQ, FCF, DQC, KXJ],
VGQ: [KXJ],
FCF: [KXJ, VGQ, NRN, QQO],
DQC: [VGQ, FCF, QQO],
KXJ: [],
NRN: [KXJ, VGQ],
QQO: [NRN]}","Node HFD is connected to nodes VGQ, FCF, DQC, KXJ.
Node VGQ is connected to node KXJ.
Node FCF is connected to nodes KXJ, VGQ, NRN, QQO.
Node DQC is connected to nodes VGQ, FCF, QQO.
Node NRN is connected to nodes KXJ, VGQ.
Node QQO is connected to node NRN.","[NRN, VGQ, KXJ, FCF, DQC, HFD, QQO]",7,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HFD, DQC, FCF, QQO, NRN, VGQ, KXJ]","Let's solve it step by step.
Nodes with 0 in-degree: [HFD].
Visit node HFD and remove it from the graph.
Nodes with 0 in-degree: [DQC].
Visit node DQC and remove it from the graph.
Nodes with 0 in-degree: [FCF].
Visit node FCF and remove it from the graph.
Nodes with 0 in-degree: [QQO].
Visit node QQO and remove it from the graph.
Nodes with 0 in-degree: [NRN].
Visit node NRN and remove it from the graph.
Nodes with 0 in-degree: [VGQ].
Visit node VGQ and remove it from the graph.
Nodes with 0 in-degree: [KXJ].
Visit node KXJ and remove it from the graph.
So the result of topological sorting is ","('[[HFD, DQC, FCF, KXJ, QQO, NRN, VGQ], [HFD, DQC, VGQ, FCF, NRN, KXJ, QQO], [HFD, DQC, FCF, QQO, NRN, VGQ, KXJ], [HFD, DQC, VGQ, KXJ, FCF, QQO, NRN]]',)",2,104
topological_sort,"[(GGA, FMZ), (FMZ, KST), (FMZ, JRA), (FMZ, FUT), (FMZ, LKM), (KST, JRA), (FUT, TNB), (LKM, FUT), (LKM, KST), (TNB, KST)]","{GGA: [FMZ],
FMZ: [KST, JRA, FUT, LKM],
KST: [JRA],
JRA: [],
FUT: [TNB],
LKM: [FUT, KST],
TNB: [KST]}","Node GGA is connected to node FMZ.
Node FMZ is connected to nodes KST, JRA, FUT, LKM.
Node KST is connected to node JRA.
Node FUT is connected to node TNB.
Node LKM is connected to nodes FUT, KST.
Node TNB is connected to node KST.","[JRA, GGA, KST, TNB, FMZ, FUT, LKM]",7,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GGA, FMZ, LKM, FUT, TNB, KST, JRA]","Let's solve it step by step.
Nodes with 0 in-degree: [GGA].
Visit node GGA and remove it from the graph.
Nodes with 0 in-degree: [FMZ].
Visit node FMZ and remove it from the graph.
Nodes with 0 in-degree: [LKM].
Visit node LKM and remove it from the graph.
Nodes with 0 in-degree: [FUT].
Visit node FUT and remove it from the graph.
Nodes with 0 in-degree: [TNB].
Visit node TNB and remove it from the graph.
Nodes with 0 in-degree: [KST].
Visit node KST and remove it from the graph.
Nodes with 0 in-degree: [JRA].
Visit node JRA and remove it from the graph.
So the result of topological sorting is ","('[[GGA, FMZ, LKM, FUT, TNB, KST, JRA], [GGA, FMZ, KST, JRA, LKM, FUT, TNB], [GGA, TNB, JRA, FMZ, LKM, FUT, KST], [GGA, FMZ, LKM, KST, TNB, FUT, JRA]]',)",0,105
topological_sort,"[(VLD, WLQ), (WLQ, EQD), (AIO, VLD), (AIO, EQD), (FME, EQD)]","{VLD: [WLQ],
WLQ: [EQD],
EQD: [],
AIO: [VLD, EQD],
FME: [EQD]}","Node VLD is connected to node WLQ.
Node WLQ is connected to node EQD.
Node AIO is connected to nodes VLD, EQD.
Node FME is connected to node EQD.","[VLD, AIO, WLQ, EQD, FME]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[AIO, FME, VLD, WLQ, EQD]","Let's solve it step by step.
Nodes with 0 in-degree: [AIO, FME].
Visit node AIO and remove it from the graph.
Nodes with 0 in-degree: [FME, VLD].
Visit node FME and remove it from the graph.
Nodes with 0 in-degree: [VLD].
Visit node VLD and remove it from the graph.
Nodes with 0 in-degree: [WLQ].
Visit node WLQ and remove it from the graph.
Nodes with 0 in-degree: [EQD].
Visit node EQD and remove it from the graph.
So the result of topological sorting is ","('[[AIO, FME, VLD, WLQ, EQD], [AIO, FME, WLQ, VLD, EQD], [AIO, EQD, FME, WLQ, VLD], [AIO, EQD, FME, VLD, WLQ]]',)",0,106
topological_sort,"[(YGS, SCY), (SCY, QDW), (SCY, YNR), (YNR, QDW), (YNR, AJM)]","{YGS: [SCY],
SCY: [QDW, YNR],
QDW: [],
YNR: [QDW, AJM],
AJM: []}","Node YGS is connected to node SCY.
Node SCY is connected to nodes QDW, YNR.
Node YNR is connected to nodes QDW, AJM.","[YNR, QDW, YGS, AJM, SCY]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YGS, SCY, YNR, QDW, AJM]","Let's solve it step by step.
Nodes with 0 in-degree: [YGS].
Visit node YGS and remove it from the graph.
Nodes with 0 in-degree: [SCY].
Visit node SCY and remove it from the graph.
Nodes with 0 in-degree: [YNR].
Visit node YNR and remove it from the graph.
Nodes with 0 in-degree: [QDW, AJM].
Visit node QDW and remove it from the graph.
Nodes with 0 in-degree: [AJM].
Visit node AJM and remove it from the graph.
So the result of topological sorting is ","('[[YGS, AJM, SCY, YNR, QDW], [YGS, SCY, YNR, QDW, AJM], [YGS, SCY, QDW, YNR, AJM], [YGS, QDW, YNR, SCY, AJM]]',)",1,107
topological_sort,"[(OCE, CDB), (MXV, OCE), (MXV, QAA), (SYL, CDB), (SYL, GFP), (GFP, QAA), (GFP, CDB), (DRL, GFP), (DRL, CDB)]","{OCE: [CDB],
CDB: [],
MXV: [OCE, QAA],
QAA: [],
SYL: [CDB, GFP],
GFP: [QAA, CDB],
DRL: [GFP, CDB]}","Node OCE is connected to node CDB.
Node MXV is connected to nodes OCE, QAA.
Node SYL is connected to nodes CDB, GFP.
Node GFP is connected to nodes QAA, CDB.
Node DRL is connected to nodes GFP, CDB.","[DRL, QAA, GFP, SYL, OCE, MXV, CDB]",7,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MXV, SYL, DRL, OCE, GFP, QAA, CDB]","Let's solve it step by step.
Nodes with 0 in-degree: [MXV, SYL, DRL].
Visit node MXV and remove it from the graph.
Nodes with 0 in-degree: [SYL, DRL, OCE].
Visit node SYL and remove it from the graph.
Nodes with 0 in-degree: [DRL, OCE].
Visit node DRL and remove it from the graph.
Nodes with 0 in-degree: [OCE, GFP].
Visit node OCE and remove it from the graph.
Nodes with 0 in-degree: [GFP].
Visit node GFP and remove it from the graph.
Nodes with 0 in-degree: [QAA, CDB].
Visit node QAA and remove it from the graph.
Nodes with 0 in-degree: [CDB].
Visit node CDB and remove it from the graph.
So the result of topological sorting is ","('[[MXV, SYL, DRL, QAA, GFP, OCE, CDB], [MXV, SYL, DRL, OCE, GFP, QAA, CDB], [MXV, SYL, QAA, CDB, DRL, OCE, GFP], [MXV, DRL, OCE, QAA, SYL, GFP, CDB]]',)",1,108
topological_sort,"[(HLH, PBK), (HLH, RHB), (BEN, ZXS), (BEN, JSM), (JSM, RHB), (JSM, HLH), (DTW, HLH), (DTW, PBK), (DTW, ZXS)]","{HLH: [PBK, RHB],
PBK: [],
RHB: [],
BEN: [ZXS, JSM],
ZXS: [],
JSM: [RHB, HLH],
DTW: [HLH, PBK, ZXS]}","Node HLH is connected to nodes PBK, RHB.
Node BEN is connected to nodes ZXS, JSM.
Node JSM is connected to nodes RHB, HLH.
Node DTW is connected to nodes HLH, PBK, ZXS.","[BEN, ZXS, PBK, RHB, HLH, JSM, DTW]",7,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BEN, DTW, JSM, ZXS, HLH, PBK, RHB]","Let's solve it step by step.
Nodes with 0 in-degree: [BEN, DTW].
Visit node BEN and remove it from the graph.
Nodes with 0 in-degree: [DTW, JSM].
Visit node DTW and remove it from the graph.
Nodes with 0 in-degree: [JSM, ZXS].
Visit node JSM and remove it from the graph.
Nodes with 0 in-degree: [ZXS, HLH].
Visit node ZXS and remove it from the graph.
Nodes with 0 in-degree: [HLH].
Visit node HLH and remove it from the graph.
Nodes with 0 in-degree: [PBK, RHB].
Visit node PBK and remove it from the graph.
Nodes with 0 in-degree: [RHB].
Visit node RHB and remove it from the graph.
So the result of topological sorting is ","('[[BEN, DTW, JSM, ZXS, HLH, PBK, RHB], [BEN, DTW, JSM, RHB, PBK, ZXS, HLH], [BEN, HLH, JSM, DTW, ZXS, RHB, PBK], [BEN, DTW, PBK, RHB, JSM, ZXS, HLH]]',)",0,109
topological_sort,"[(IDR, QHW), (IDR, NAA), (IDR, NAV), (NAA, NAV), (TIR, SNP), (TIR, QHW), (SNP, NAA), (SNP, QHW)]","{IDR: [QHW, NAA, NAV],
QHW: [],
NAA: [NAV],
NAV: [],
TIR: [SNP, QHW],
SNP: [NAA, QHW]}","Node IDR is connected to nodes QHW, NAA, NAV.
Node NAA is connected to node NAV.
Node TIR is connected to nodes SNP, QHW.
Node SNP is connected to nodes NAA, QHW.","[TIR, IDR, SNP, NAA, NAV, QHW]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IDR, TIR, SNP, NAA, QHW, NAV]","Let's solve it step by step.
Nodes with 0 in-degree: [IDR, TIR].
Visit node IDR and remove it from the graph.
Nodes with 0 in-degree: [TIR].
Visit node TIR and remove it from the graph.
Nodes with 0 in-degree: [SNP].
Visit node SNP and remove it from the graph.
Nodes with 0 in-degree: [NAA, QHW].
Visit node NAA and remove it from the graph.
Nodes with 0 in-degree: [QHW, NAV].
Visit node QHW and remove it from the graph.
Nodes with 0 in-degree: [NAV].
Visit node NAV and remove it from the graph.
So the result of topological sorting is ","('[[IDR, TIR, SNP, NAA, QHW, NAV], [IDR, TIR, QHW, NAV, SNP, NAA], [IDR, TIR, NAV, QHW, SNP, NAA], [IDR, TIR, SNP, NAA, QHW, NAV]]',)",3,110
topological_sort,"[(WAK, CZC), (ESG, ADF), (ADF, WAK), (LKK, ADF), (LKK, CZC), (LKK, WAK)]","{WAK: [CZC],
CZC: [],
ESG: [ADF],
ADF: [WAK],
LKK: [ADF, CZC, WAK]}","Node WAK is connected to node CZC.
Node ESG is connected to node ADF.
Node ADF is connected to node WAK.
Node LKK is connected to nodes ADF, CZC, WAK.","[CZC, ADF, WAK, LKK, ESG]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ESG, LKK, ADF, WAK, CZC]","Let's solve it step by step.
Nodes with 0 in-degree: [ESG, LKK].
Visit node ESG and remove it from the graph.
Nodes with 0 in-degree: [LKK].
Visit node LKK and remove it from the graph.
Nodes with 0 in-degree: [ADF].
Visit node ADF and remove it from the graph.
Nodes with 0 in-degree: [WAK].
Visit node WAK and remove it from the graph.
Nodes with 0 in-degree: [CZC].
Visit node CZC and remove it from the graph.
So the result of topological sorting is ","('[[ESG, LKK, ADF, WAK, CZC], [ESG, CZC, LKK, ADF, WAK], [ESG, LKK, ADF, WAK, CZC], [ESG, ADF, CZC, WAK, LKK]]',)",2,111
topological_sort,"[(FFD, AST), (FFD, KDE), (FFD, VWR), (AST, KDE), (VWR, AST), (CGM, VWR), (CGM, AST)]","{FFD: [AST, KDE, VWR],
AST: [KDE],
KDE: [],
VWR: [AST],
CGM: [VWR, AST]}","Node FFD is connected to nodes AST, KDE, VWR.
Node AST is connected to node KDE.
Node VWR is connected to node AST.
Node CGM is connected to nodes VWR, AST.","[FFD, KDE, AST, CGM, VWR]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FFD, CGM, VWR, AST, KDE]","Let's solve it step by step.
Nodes with 0 in-degree: [FFD, CGM].
Visit node FFD and remove it from the graph.
Nodes with 0 in-degree: [CGM].
Visit node CGM and remove it from the graph.
Nodes with 0 in-degree: [VWR].
Visit node VWR and remove it from the graph.
Nodes with 0 in-degree: [AST].
Visit node AST and remove it from the graph.
Nodes with 0 in-degree: [KDE].
Visit node KDE and remove it from the graph.
So the result of topological sorting is ","('[[FFD, CGM, AST, KDE, VWR], [FFD, KDE, CGM, VWR, AST], [FFD, CGM, VWR, AST, KDE], [FFD, KDE, AST, VWR, CGM]]',)",2,112
topological_sort,"[(JBK, JFO), (JBK, MNX), (JFO, QFH), (MNX, QFH), (CXA, QFH), (CXA, JBK), (OPO, MNX), (OPO, DZO), (OPO, QFH), (OPO, JBK), (DZO, JBK), (DZO, CXA), (DZO, MNX)]","{JBK: [JFO, MNX],
JFO: [QFH],
MNX: [QFH],
QFH: [],
CXA: [QFH, JBK],
OPO: [MNX, DZO, QFH, JBK],
DZO: [JBK, CXA, MNX]}","Node JBK is connected to nodes JFO, MNX.
Node JFO is connected to node QFH.
Node MNX is connected to node QFH.
Node CXA is connected to nodes QFH, JBK.
Node OPO is connected to nodes MNX, DZO, QFH, JBK.
Node DZO is connected to nodes JBK, CXA, MNX.","[JBK, OPO, CXA, JFO, QFH, DZO, MNX]",7,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OPO, DZO, CXA, JBK, JFO, MNX, QFH]","Let's solve it step by step.
Nodes with 0 in-degree: [OPO].
Visit node OPO and remove it from the graph.
Nodes with 0 in-degree: [DZO].
Visit node DZO and remove it from the graph.
Nodes with 0 in-degree: [CXA].
Visit node CXA and remove it from the graph.
Nodes with 0 in-degree: [JBK].
Visit node JBK and remove it from the graph.
Nodes with 0 in-degree: [JFO, MNX].
Visit node JFO and remove it from the graph.
Nodes with 0 in-degree: [MNX].
Visit node MNX and remove it from the graph.
Nodes with 0 in-degree: [QFH].
Visit node QFH and remove it from the graph.
So the result of topological sorting is ","('[[OPO, DZO, CXA, JBK, JFO, QFH, MNX], [OPO, MNX, JBK, DZO, JFO, CXA, QFH], [OPO, DZO, MNX, QFH, CXA, JBK, JFO], [OPO, DZO, CXA, JBK, JFO, MNX, QFH]]',)",3,113
topological_sort,"[(FNH, CYY), (FNH, QBH), (QBH, CYY), (BZD, MUV), (DAZ, CYY)]","{FNH: [CYY, QBH],
CYY: [],
QBH: [CYY],
BZD: [MUV],
MUV: [],
DAZ: [CYY]}","Node FNH is connected to nodes CYY, QBH.
Node QBH is connected to node CYY.
Node BZD is connected to node MUV.
Node DAZ is connected to node CYY.","[QBH, CYY, MUV, FNH, BZD, DAZ]",6,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FNH, BZD, DAZ, QBH, MUV, CYY]","Let's solve it step by step.
Nodes with 0 in-degree: [FNH, BZD, DAZ].
Visit node FNH and remove it from the graph.
Nodes with 0 in-degree: [BZD, DAZ, QBH].
Visit node BZD and remove it from the graph.
Nodes with 0 in-degree: [DAZ, QBH, MUV].
Visit node DAZ and remove it from the graph.
Nodes with 0 in-degree: [QBH, MUV].
Visit node QBH and remove it from the graph.
Nodes with 0 in-degree: [MUV, CYY].
Visit node MUV and remove it from the graph.
Nodes with 0 in-degree: [CYY].
Visit node CYY and remove it from the graph.
So the result of topological sorting is ","('[[FNH, BZD, DAZ, QBH, MUV, CYY], [FNH, BZD, DAZ, QBH, MUV, CYY], [FNH, MUV, CYY, DAZ, BZD, QBH], [FNH, BZD, MUV, CYY, DAZ, QBH]]',)",0,114
topological_sort,"[(GHK, BGW), (BJE, BGW), (BJE, WIO), (BJE, HNS), (WIO, HNS), (HNS, BGW), (HNS, GHK), (FKR, BJE), (FKR, GHK)]","{GHK: [BGW],
BGW: [],
BJE: [BGW, WIO, HNS],
WIO: [HNS],
HNS: [BGW, GHK],
FKR: [BJE, GHK]}","Node GHK is connected to node BGW.
Node BJE is connected to nodes BGW, WIO, HNS.
Node WIO is connected to node HNS.
Node HNS is connected to nodes BGW, GHK.
Node FKR is connected to nodes BJE, GHK.","[BJE, WIO, HNS, BGW, GHK, FKR]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FKR, BJE, WIO, HNS, GHK, BGW]","Let's solve it step by step.
Nodes with 0 in-degree: [FKR].
Visit node FKR and remove it from the graph.
Nodes with 0 in-degree: [BJE].
Visit node BJE and remove it from the graph.
Nodes with 0 in-degree: [WIO].
Visit node WIO and remove it from the graph.
Nodes with 0 in-degree: [HNS].
Visit node HNS and remove it from the graph.
Nodes with 0 in-degree: [GHK].
Visit node GHK and remove it from the graph.
Nodes with 0 in-degree: [BGW].
Visit node BGW and remove it from the graph.
So the result of topological sorting is ","('[[FKR, BJE, WIO, GHK, BGW, HNS], [FKR, BGW, BJE, WIO, GHK, HNS], [FKR, BJE, GHK, BGW, WIO, HNS], [FKR, BJE, WIO, HNS, GHK, BGW]]',)",3,115
topological_sort,"[(TAJ, DGX), (DGX, NKK), (DGX, DBM), (DBM, WGM), (WGM, NKK), (DCE, DGX)]","{TAJ: [DGX],
DGX: [NKK, DBM],
NKK: [],
DBM: [WGM],
WGM: [NKK],
DCE: [DGX]}","Node TAJ is connected to node DGX.
Node DGX is connected to nodes NKK, DBM.
Node DBM is connected to node WGM.
Node WGM is connected to node NKK.
Node DCE is connected to node DGX.","[TAJ, DGX, DCE, NKK, DBM, WGM]",6,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TAJ, DCE, DGX, DBM, WGM, NKK]","Let's solve it step by step.
Nodes with 0 in-degree: [TAJ, DCE].
Visit node TAJ and remove it from the graph.
Nodes with 0 in-degree: [DCE].
Visit node DCE and remove it from the graph.
Nodes with 0 in-degree: [DGX].
Visit node DGX and remove it from the graph.
Nodes with 0 in-degree: [DBM].
Visit node DBM and remove it from the graph.
Nodes with 0 in-degree: [WGM].
Visit node WGM and remove it from the graph.
Nodes with 0 in-degree: [NKK].
Visit node NKK and remove it from the graph.
So the result of topological sorting is ","('[[TAJ, DBM, DGX, NKK, DCE, WGM], [TAJ, DCE, DGX, DBM, WGM, NKK], [TAJ, DCE, DGX, WGM, DBM, NKK], [TAJ, DCE, WGM, NKK, DGX, DBM]]',)",1,116
topological_sort,"[(NMM, AVA), (AVA, NAL), (URB, AVA), (URB, DFW), (DFW, NMM), (DFW, NAL), (DFW, AVA), (XIX, NAL), (XIX, NMM)]","{NMM: [AVA],
AVA: [NAL],
NAL: [],
URB: [AVA, DFW],
DFW: [NMM, NAL, AVA],
XIX: [NAL, NMM]}","Node NMM is connected to node AVA.
Node AVA is connected to node NAL.
Node URB is connected to nodes AVA, DFW.
Node DFW is connected to nodes NMM, NAL, AVA.
Node XIX is connected to nodes NAL, NMM.","[NAL, NMM, DFW, XIX, URB, AVA]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[URB, XIX, DFW, NMM, AVA, NAL]","Let's solve it step by step.
Nodes with 0 in-degree: [URB, XIX].
Visit node URB and remove it from the graph.
Nodes with 0 in-degree: [XIX, DFW].
Visit node XIX and remove it from the graph.
Nodes with 0 in-degree: [DFW].
Visit node DFW and remove it from the graph.
Nodes with 0 in-degree: [NMM].
Visit node NMM and remove it from the graph.
Nodes with 0 in-degree: [AVA].
Visit node AVA and remove it from the graph.
Nodes with 0 in-degree: [NAL].
Visit node NAL and remove it from the graph.
So the result of topological sorting is ","('[[URB, XIX, DFW, NMM, AVA, NAL], [URB, AVA, NAL, NMM, XIX, DFW], [URB, XIX, DFW, NMM, AVA, NAL], [URB, XIX, AVA, NAL, DFW, NMM]]',)",2,117
topological_sort,"[(ATX, ZMU), (JSO, RUJ), (JSO, SRK), (JSO, IQT), (RUJ, QKT), (RUJ, ATX), (SRK, ZMU), (IQT, RUJ), (IQT, SRK), (IQT, QKT), (QKT, SRK), (QKT, ZMU)]","{ATX: [ZMU],
ZMU: [],
JSO: [RUJ, SRK, IQT],
RUJ: [QKT, ATX],
SRK: [ZMU],
IQT: [RUJ, SRK, QKT],
QKT: [SRK, ZMU]}","Node ATX is connected to node ZMU.
Node JSO is connected to nodes RUJ, SRK, IQT.
Node RUJ is connected to nodes QKT, ATX.
Node SRK is connected to node ZMU.
Node IQT is connected to nodes RUJ, SRK, QKT.
Node QKT is connected to nodes SRK, ZMU.","[RUJ, ATX, QKT, ZMU, JSO, IQT, SRK]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JSO, IQT, RUJ, QKT, ATX, SRK, ZMU]","Let's solve it step by step.
Nodes with 0 in-degree: [JSO].
Visit node JSO and remove it from the graph.
Nodes with 0 in-degree: [IQT].
Visit node IQT and remove it from the graph.
Nodes with 0 in-degree: [RUJ].
Visit node RUJ and remove it from the graph.
Nodes with 0 in-degree: [QKT, ATX].
Visit node QKT and remove it from the graph.
Nodes with 0 in-degree: [ATX, SRK].
Visit node ATX and remove it from the graph.
Nodes with 0 in-degree: [SRK].
Visit node SRK and remove it from the graph.
Nodes with 0 in-degree: [ZMU].
Visit node ZMU and remove it from the graph.
So the result of topological sorting is ","('[[JSO, IQT, RUJ, SRK, ZMU, QKT, ATX], [JSO, IQT, SRK, ZMU, RUJ, QKT, ATX], [JSO, ZMU, IQT, RUJ, ATX, QKT, SRK], [JSO, IQT, RUJ, QKT, ATX, SRK, ZMU]]',)",3,118
topological_sort,"[(YRB, PJL), (YRB, SIQ), (YRB, EKD), (YRB, ZGJ), (SIQ, PJL), (SIQ, ZJP), (EKD, PJL), (EKD, SIQ), (ZGJ, EKD), (ZJP, PJL)]","{YRB: [PJL, SIQ, EKD, ZGJ],
PJL: [],
SIQ: [PJL, ZJP],
EKD: [PJL, SIQ],
ZGJ: [EKD],
ZJP: [PJL]}","Node YRB is connected to nodes PJL, SIQ, EKD, ZGJ.
Node SIQ is connected to nodes PJL, ZJP.
Node EKD is connected to nodes PJL, SIQ.
Node ZGJ is connected to node EKD.
Node ZJP is connected to node PJL.","[ZGJ, YRB, SIQ, EKD, ZJP, PJL]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YRB, ZGJ, EKD, SIQ, ZJP, PJL]","Let's solve it step by step.
Nodes with 0 in-degree: [YRB].
Visit node YRB and remove it from the graph.
Nodes with 0 in-degree: [ZGJ].
Visit node ZGJ and remove it from the graph.
Nodes with 0 in-degree: [EKD].
Visit node EKD and remove it from the graph.
Nodes with 0 in-degree: [SIQ].
Visit node SIQ and remove it from the graph.
Nodes with 0 in-degree: [ZJP].
Visit node ZJP and remove it from the graph.
Nodes with 0 in-degree: [PJL].
Visit node PJL and remove it from the graph.
So the result of topological sorting is ","('[[YRB, ZGJ, EKD, ZJP, SIQ, PJL], [YRB, ZGJ, EKD, SIQ, ZJP, PJL], [YRB, ZGJ, ZJP, PJL, EKD, SIQ], [YRB, EKD, SIQ, ZGJ, PJL, ZJP]]',)",1,119
topological_sort,"[(LLT, LPL), (LLT, DQE), (LLT, JEX), (LPL, BCA), (JEX, XVG), (JEX, DQE), (JEX, LPL), (BCA, DQE), (XVG, LPL), (XVG, DQE), (HPM, LLT), (HPM, XVG)]","{LLT: [LPL, DQE, JEX],
LPL: [BCA],
DQE: [],
JEX: [XVG, DQE, LPL],
BCA: [DQE],
XVG: [LPL, DQE],
HPM: [LLT, XVG]}","Node LLT is connected to nodes LPL, DQE, JEX.
Node LPL is connected to node BCA.
Node JEX is connected to nodes XVG, DQE, LPL.
Node BCA is connected to node DQE.
Node XVG is connected to nodes LPL, DQE.
Node HPM is connected to nodes LLT, XVG.","[XVG, HPM, LPL, LLT, BCA, JEX, DQE]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HPM, LLT, JEX, XVG, LPL, BCA, DQE]","Let's solve it step by step.
Nodes with 0 in-degree: [HPM].
Visit node HPM and remove it from the graph.
Nodes with 0 in-degree: [LLT].
Visit node LLT and remove it from the graph.
Nodes with 0 in-degree: [JEX].
Visit node JEX and remove it from the graph.
Nodes with 0 in-degree: [XVG].
Visit node XVG and remove it from the graph.
Nodes with 0 in-degree: [LPL].
Visit node LPL and remove it from the graph.
Nodes with 0 in-degree: [BCA].
Visit node BCA and remove it from the graph.
Nodes with 0 in-degree: [DQE].
Visit node DQE and remove it from the graph.
So the result of topological sorting is ","('[[HPM, LLT, BCA, DQE, JEX, XVG, LPL], [HPM, LLT, JEX, XVG, LPL, BCA, DQE], [HPM, DQE, JEX, BCA, LPL, XVG, LLT], [HPM, LLT, JEX, BCA, LPL, XVG, DQE]]',)",1,120
topological_sort,"[(ZBS, IQI), (ZBS, FYN), (IQI, JKV), (FYN, IET), (FYN, JKV), (JKV, IET)]","{ZBS: [IQI, FYN],
IQI: [JKV],
FYN: [IET, JKV],
JKV: [IET],
IET: []}","Node ZBS is connected to nodes IQI, FYN.
Node IQI is connected to node JKV.
Node FYN is connected to nodes IET, JKV.
Node JKV is connected to node IET.","[ZBS, IET, JKV, FYN, IQI]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZBS, IQI, FYN, JKV, IET]","Let's solve it step by step.
Nodes with 0 in-degree: [ZBS].
Visit node ZBS and remove it from the graph.
Nodes with 0 in-degree: [IQI, FYN].
Visit node IQI and remove it from the graph.
Nodes with 0 in-degree: [FYN].
Visit node FYN and remove it from the graph.
Nodes with 0 in-degree: [JKV].
Visit node JKV and remove it from the graph.
Nodes with 0 in-degree: [IET].
Visit node IET and remove it from the graph.
So the result of topological sorting is ","('[[ZBS, FYN, JKV, IQI, IET], [ZBS, IQI, JKV, IET, FYN], [ZBS, IET, IQI, FYN, JKV], [ZBS, IQI, FYN, JKV, IET]]',)",3,121
topological_sort,"[(EBC, REL), (EBC, OPN), (EBC, BUC), (REL, OPN), (BUC, OPN), (RFU, REL), (RFU, EBC), (RFU, OPN), (XYV, OPN), (XYV, RFU)]","{EBC: [REL, OPN, BUC],
REL: [OPN],
OPN: [],
BUC: [OPN],
RFU: [REL, EBC, OPN],
XYV: [OPN, RFU]}","Node EBC is connected to nodes REL, OPN, BUC.
Node REL is connected to node OPN.
Node BUC is connected to node OPN.
Node RFU is connected to nodes REL, EBC, OPN.
Node XYV is connected to nodes OPN, RFU.","[BUC, OPN, EBC, RFU, REL, XYV]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XYV, RFU, EBC, REL, BUC, OPN]","Let's solve it step by step.
Nodes with 0 in-degree: [XYV].
Visit node XYV and remove it from the graph.
Nodes with 0 in-degree: [RFU].
Visit node RFU and remove it from the graph.
Nodes with 0 in-degree: [EBC].
Visit node EBC and remove it from the graph.
Nodes with 0 in-degree: [REL, BUC].
Visit node REL and remove it from the graph.
Nodes with 0 in-degree: [BUC].
Visit node BUC and remove it from the graph.
Nodes with 0 in-degree: [OPN].
Visit node OPN and remove it from the graph.
So the result of topological sorting is ","('[[XYV, EBC, RFU, BUC, REL, OPN], [XYV, RFU, EBC, REL, OPN, BUC], [XYV, RFU, EBC, REL, BUC, OPN], [XYV, RFU, BUC, OPN, EBC, REL]]',)",2,122
topological_sort,"[(ZQZ, SNL), (ZQZ, QVG), (ZQZ, OHZ), (SNL, QVG), (QVG, XOH), (VRE, OHZ), (VRE, SNL), (VRE, ZQZ)]","{ZQZ: [SNL, QVG, OHZ],
SNL: [QVG],
QVG: [XOH],
OHZ: [],
VRE: [OHZ, SNL, ZQZ],
XOH: []}","Node ZQZ is connected to nodes SNL, QVG, OHZ.
Node SNL is connected to node QVG.
Node QVG is connected to node XOH.
Node VRE is connected to nodes OHZ, SNL, ZQZ.","[VRE, OHZ, QVG, SNL, ZQZ, XOH]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VRE, ZQZ, SNL, OHZ, QVG, XOH]","Let's solve it step by step.
Nodes with 0 in-degree: [VRE].
Visit node VRE and remove it from the graph.
Nodes with 0 in-degree: [ZQZ].
Visit node ZQZ and remove it from the graph.
Nodes with 0 in-degree: [SNL, OHZ].
Visit node SNL and remove it from the graph.
Nodes with 0 in-degree: [OHZ, QVG].
Visit node OHZ and remove it from the graph.
Nodes with 0 in-degree: [QVG].
Visit node QVG and remove it from the graph.
Nodes with 0 in-degree: [XOH].
Visit node XOH and remove it from the graph.
So the result of topological sorting is ","('[[VRE, ZQZ, SNL, OHZ, QVG, XOH], [VRE, ZQZ, QVG, XOH, SNL, OHZ], [VRE, XOH, ZQZ, SNL, OHZ, QVG], [VRE, ZQZ, SNL, OHZ, QVG, XOH]]',)",3,123
topological_sort,"[(ORS, QDG), (ORS, XGX), (QDG, IWC), (QDG, XGX), (QNJ, ORS), (QNJ, ZXN), (QNJ, QDG), (ZXN, XGX), (ZXN, UVP), (UVP, QDG), (UVP, IWC), (UVP, ORS)]","{ORS: [QDG, XGX],
QDG: [IWC, XGX],
XGX: [],
IWC: [],
QNJ: [ORS, ZXN, QDG],
ZXN: [XGX, UVP],
UVP: [QDG, IWC, ORS]}","Node ORS is connected to nodes QDG, XGX.
Node QDG is connected to nodes IWC, XGX.
Node QNJ is connected to nodes ORS, ZXN, QDG.
Node ZXN is connected to nodes XGX, UVP.
Node UVP is connected to nodes QDG, IWC, ORS.","[QNJ, UVP, QDG, ZXN, XGX, ORS, IWC]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QNJ, ZXN, UVP, ORS, QDG, IWC, XGX]","Let's solve it step by step.
Nodes with 0 in-degree: [QNJ].
Visit node QNJ and remove it from the graph.
Nodes with 0 in-degree: [ZXN].
Visit node ZXN and remove it from the graph.
Nodes with 0 in-degree: [UVP].
Visit node UVP and remove it from the graph.
Nodes with 0 in-degree: [ORS].
Visit node ORS and remove it from the graph.
Nodes with 0 in-degree: [QDG].
Visit node QDG and remove it from the graph.
Nodes with 0 in-degree: [IWC, XGX].
Visit node IWC and remove it from the graph.
Nodes with 0 in-degree: [XGX].
Visit node XGX and remove it from the graph.
So the result of topological sorting is ","('[[QNJ, QDG, IWC, ZXN, ORS, UVP, XGX], [QNJ, ZXN, IWC, XGX, UVP, ORS, QDG], [QNJ, ZXN, UVP, ORS, QDG, IWC, XGX], [QNJ, ZXN, UVP, IWC, ORS, QDG, XGX]]',)",2,124
topological_sort,"[(CDZ, PVR), (CWQ, CDZ), (CWQ, HGD), (CWQ, AZT), (CWQ, PVR), (CWQ, AKV), (HGD, CDZ), (HGD, AKV), (HGD, PVR), (AZT, HGD), (AZT, PVR)]","{CDZ: [PVR],
PVR: [],
CWQ: [CDZ, HGD, AZT, PVR, AKV],
HGD: [CDZ, AKV, PVR],
AZT: [HGD, PVR],
AKV: []}","Node CDZ is connected to node PVR.
Node CWQ is connected to nodes CDZ, HGD, AZT, PVR, AKV.
Node HGD is connected to nodes CDZ, AKV, PVR.
Node AZT is connected to nodes HGD, PVR.","[CWQ, AKV, HGD, AZT, CDZ, PVR]",6,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CWQ, AZT, HGD, CDZ, AKV, PVR]","Let's solve it step by step.
Nodes with 0 in-degree: [CWQ].
Visit node CWQ and remove it from the graph.
Nodes with 0 in-degree: [AZT].
Visit node AZT and remove it from the graph.
Nodes with 0 in-degree: [HGD].
Visit node HGD and remove it from the graph.
Nodes with 0 in-degree: [CDZ, AKV].
Visit node CDZ and remove it from the graph.
Nodes with 0 in-degree: [AKV, PVR].
Visit node AKV and remove it from the graph.
Nodes with 0 in-degree: [PVR].
Visit node PVR and remove it from the graph.
So the result of topological sorting is ","('[[CWQ, AZT, HGD, CDZ, AKV, PVR], [CWQ, AZT, AKV, PVR, HGD, CDZ], [CWQ, AZT, HGD, CDZ, AKV, PVR], [CWQ, PVR, AKV, HGD, CDZ, AZT]]',)",2,125
topological_sort,"[(IRA, CDN), (IRA, TAJ), (CDN, LIS), (TAJ, LIS), (TAJ, TXQ), (TAJ, LQU), (LIS, TXQ)]","{IRA: [CDN, TAJ],
CDN: [LIS],
TAJ: [LIS, TXQ, LQU],
LIS: [TXQ],
TXQ: [],
LQU: []}","Node IRA is connected to nodes CDN, TAJ.
Node CDN is connected to node LIS.
Node TAJ is connected to nodes LIS, TXQ, LQU.
Node LIS is connected to node TXQ.","[TAJ, LQU, TXQ, IRA, CDN, LIS]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IRA, CDN, TAJ, LIS, LQU, TXQ]","Let's solve it step by step.
Nodes with 0 in-degree: [IRA].
Visit node IRA and remove it from the graph.
Nodes with 0 in-degree: [CDN, TAJ].
Visit node CDN and remove it from the graph.
Nodes with 0 in-degree: [TAJ].
Visit node TAJ and remove it from the graph.
Nodes with 0 in-degree: [LIS, LQU].
Visit node LIS and remove it from the graph.
Nodes with 0 in-degree: [LQU, TXQ].
Visit node LQU and remove it from the graph.
Nodes with 0 in-degree: [TXQ].
Visit node TXQ and remove it from the graph.
So the result of topological sorting is ","('[[IRA, LQU, TAJ, CDN, TXQ, LIS], [IRA, CDN, LQU, TXQ, TAJ, LIS], [IRA, CDN, TAJ, LIS, LQU, TXQ], [IRA, CDN, TAJ, LQU, LIS, TXQ]]',)",2,126
topological_sort,"[(QFY, NCY), (QFY, MCG), (QFY, EDR), (QFY, XHV), (QFY, JSV), (MCG, NCY), (XHV, EDR), (JSV, XHV), (GGP, QFY), (GGP, XHV)]","{QFY: [NCY, MCG, EDR, XHV, JSV],
NCY: [],
MCG: [NCY],
EDR: [],
XHV: [EDR],
JSV: [XHV],
GGP: [QFY, XHV]}","Node QFY is connected to nodes NCY, MCG, EDR, XHV, JSV.
Node MCG is connected to node NCY.
Node XHV is connected to node EDR.
Node JSV is connected to node XHV.
Node GGP is connected to nodes QFY, XHV.","[EDR, QFY, GGP, XHV, NCY, MCG, JSV]",7,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GGP, QFY, MCG, JSV, NCY, XHV, EDR]","Let's solve it step by step.
Nodes with 0 in-degree: [GGP].
Visit node GGP and remove it from the graph.
Nodes with 0 in-degree: [QFY].
Visit node QFY and remove it from the graph.
Nodes with 0 in-degree: [MCG, JSV].
Visit node MCG and remove it from the graph.
Nodes with 0 in-degree: [JSV, NCY].
Visit node JSV and remove it from the graph.
Nodes with 0 in-degree: [NCY, XHV].
Visit node NCY and remove it from the graph.
Nodes with 0 in-degree: [XHV].
Visit node XHV and remove it from the graph.
Nodes with 0 in-degree: [EDR].
Visit node EDR and remove it from the graph.
So the result of topological sorting is ","('[[GGP, QFY, MCG, JSV, NCY, XHV, EDR], [GGP, QFY, MCG, JSV, XHV, EDR, NCY], [GGP, QFY, NCY, JSV, EDR, MCG, XHV], [GGP, QFY, XHV, EDR, MCG, JSV, NCY]]',)",0,127
topological_sort,"[(QJI, TEY), (QJI, YWN), (QJI, UQM), (TEY, ROU), (UQM, YWN), (ROU, LWZ), (ROU, UQM)]","{QJI: [TEY, YWN, UQM],
TEY: [ROU],
YWN: [],
UQM: [YWN],
ROU: [LWZ, UQM],
LWZ: []}","Node QJI is connected to nodes TEY, YWN, UQM.
Node TEY is connected to node ROU.
Node UQM is connected to node YWN.
Node ROU is connected to nodes LWZ, UQM.","[YWN, LWZ, QJI, UQM, TEY, ROU]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QJI, TEY, ROU, LWZ, UQM, YWN]","Let's solve it step by step.
Nodes with 0 in-degree: [QJI].
Visit node QJI and remove it from the graph.
Nodes with 0 in-degree: [TEY].
Visit node TEY and remove it from the graph.
Nodes with 0 in-degree: [ROU].
Visit node ROU and remove it from the graph.
Nodes with 0 in-degree: [LWZ, UQM].
Visit node LWZ and remove it from the graph.
Nodes with 0 in-degree: [UQM].
Visit node UQM and remove it from the graph.
Nodes with 0 in-degree: [YWN].
Visit node YWN and remove it from the graph.
So the result of topological sorting is ","('[[QJI, TEY, ROU, LWZ, UQM, YWN], [QJI, ROU, LWZ, UQM, YWN, TEY], [QJI, TEY, UQM, YWN, ROU, LWZ], [QJI, TEY, ROU, LWZ, UQM, YWN]]',)",3,128
topological_sort,"[(FOZ, GSL), (FOZ, DAB), (FOZ, FUX), (GSL, FUX), (GSL, FQD), (DAB, GSL), (FUX, FQD)]","{FOZ: [GSL, DAB, FUX],
GSL: [FUX, FQD],
DAB: [GSL],
FUX: [FQD],
FQD: []}","Node FOZ is connected to nodes GSL, DAB, FUX.
Node GSL is connected to nodes FUX, FQD.
Node DAB is connected to node GSL.
Node FUX is connected to node FQD.","[FUX, DAB, FQD, FOZ, GSL]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FOZ, DAB, GSL, FUX, FQD]","Let's solve it step by step.
Nodes with 0 in-degree: [FOZ].
Visit node FOZ and remove it from the graph.
Nodes with 0 in-degree: [DAB].
Visit node DAB and remove it from the graph.
Nodes with 0 in-degree: [GSL].
Visit node GSL and remove it from the graph.
Nodes with 0 in-degree: [FUX].
Visit node FUX and remove it from the graph.
Nodes with 0 in-degree: [FQD].
Visit node FQD and remove it from the graph.
So the result of topological sorting is ","('[[FOZ, FQD, DAB, GSL, FUX], [FOZ, DAB, GSL, FUX, FQD], [FOZ, FUX, DAB, FQD, GSL], [FOZ, DAB, GSL, FQD, FUX]]',)",1,129
topological_sort,"[(CFR, WBD), (CFR, PYT), (SYJ, CFR), (WFE, RSE), (WFE, CFR)]","{CFR: [WBD, PYT],
WBD: [],
PYT: [],
SYJ: [CFR],
WFE: [RSE, CFR],
RSE: []}","Node CFR is connected to nodes WBD, PYT.
Node SYJ is connected to node CFR.
Node WFE is connected to nodes RSE, CFR.","[CFR, PYT, SYJ, WBD, RSE, WFE]",6,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SYJ, WFE, RSE, CFR, WBD, PYT]","Let's solve it step by step.
Nodes with 0 in-degree: [SYJ, WFE].
Visit node SYJ and remove it from the graph.
Nodes with 0 in-degree: [WFE].
Visit node WFE and remove it from the graph.
Nodes with 0 in-degree: [RSE, CFR].
Visit node RSE and remove it from the graph.
Nodes with 0 in-degree: [CFR].
Visit node CFR and remove it from the graph.
Nodes with 0 in-degree: [WBD, PYT].
Visit node WBD and remove it from the graph.
Nodes with 0 in-degree: [PYT].
Visit node PYT and remove it from the graph.
So the result of topological sorting is ","('[[SYJ, WFE, WBD, PYT, RSE, CFR], [SYJ, WFE, RSE, CFR, WBD, PYT], [SYJ, WFE, RSE, CFR, PYT, WBD], [SYJ, PYT, CFR, WFE, WBD, RSE]]',)",1,130
topological_sort,"[(ZAN, GDX), (ZAN, DGP), (ZAN, FLZ), (GDX, FLZ), (DGP, KKU), (FLZ, DGP), (UTQ, DGP), (UTQ, GDX), (UTQ, KKU), (VUX, FLZ)]","{ZAN: [GDX, DGP, FLZ],
GDX: [FLZ],
DGP: [KKU],
FLZ: [DGP],
KKU: [],
UTQ: [DGP, GDX, KKU],
VUX: [FLZ]}","Node ZAN is connected to nodes GDX, DGP, FLZ.
Node GDX is connected to node FLZ.
Node DGP is connected to node KKU.
Node FLZ is connected to node DGP.
Node UTQ is connected to nodes DGP, GDX, KKU.
Node VUX is connected to node FLZ.","[KKU, FLZ, GDX, VUX, DGP, UTQ, ZAN]",7,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZAN, UTQ, VUX, GDX, FLZ, DGP, KKU]","Let's solve it step by step.
Nodes with 0 in-degree: [ZAN, UTQ, VUX].
Visit node ZAN and remove it from the graph.
Nodes with 0 in-degree: [UTQ, VUX].
Visit node UTQ and remove it from the graph.
Nodes with 0 in-degree: [VUX, GDX].
Visit node VUX and remove it from the graph.
Nodes with 0 in-degree: [GDX].
Visit node GDX and remove it from the graph.
Nodes with 0 in-degree: [FLZ].
Visit node FLZ and remove it from the graph.
Nodes with 0 in-degree: [DGP].
Visit node DGP and remove it from the graph.
Nodes with 0 in-degree: [KKU].
Visit node KKU and remove it from the graph.
So the result of topological sorting is ","('[[ZAN, UTQ, DGP, KKU, VUX, GDX, FLZ], [ZAN, UTQ, VUX, DGP, FLZ, GDX, KKU], [ZAN, UTQ, VUX, GDX, FLZ, DGP, KKU], [ZAN, UTQ, VUX, GDX, FLZ, KKU, DGP]]',)",2,131
topological_sort,"[(QJY, UGS), (QJY, VVJ), (QJY, SSO), (QJY, IYZ), (QJY, SCP), (UGS, SCP), (UGS, IYZ), (VVJ, SCP), (IYZ, SSO), (IYZ, SCP), (PPS, QJY), (PPS, UGS), (PPS, SCP)]","{QJY: [UGS, VVJ, SSO, IYZ, SCP],
UGS: [SCP, IYZ],
VVJ: [SCP],
SSO: [],
IYZ: [SSO, SCP],
SCP: [],
PPS: [QJY, UGS, SCP]}","Node QJY is connected to nodes UGS, VVJ, SSO, IYZ, SCP.
Node UGS is connected to nodes SCP, IYZ.
Node VVJ is connected to node SCP.
Node IYZ is connected to nodes SSO, SCP.
Node PPS is connected to nodes QJY, UGS, SCP.","[UGS, PPS, SSO, SCP, VVJ, IYZ, QJY]",7,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PPS, QJY, UGS, VVJ, IYZ, SSO, SCP]","Let's solve it step by step.
Nodes with 0 in-degree: [PPS].
Visit node PPS and remove it from the graph.
Nodes with 0 in-degree: [QJY].
Visit node QJY and remove it from the graph.
Nodes with 0 in-degree: [UGS, VVJ].
Visit node UGS and remove it from the graph.
Nodes with 0 in-degree: [VVJ, IYZ].
Visit node VVJ and remove it from the graph.
Nodes with 0 in-degree: [IYZ].
Visit node IYZ and remove it from the graph.
Nodes with 0 in-degree: [SSO, SCP].
Visit node SSO and remove it from the graph.
Nodes with 0 in-degree: [SCP].
Visit node SCP and remove it from the graph.
So the result of topological sorting is ","('[[PPS, UGS, IYZ, SSO, QJY, SCP, VVJ], [PPS, QJY, SSO, SCP, UGS, VVJ, IYZ], [PPS, QJY, UGS, VVJ, IYZ, SSO, SCP], [PPS, QJY, UGS, SCP, SSO, IYZ, VVJ]]',)",2,132
topological_sort,"[(UON, WQF), (UON, WEE), (WQF, WEE), (WQF, GXI), (GXI, WEE), (VHS, UON), (VHS, GXI), (MWT, WQF), (MWT, GXI), (MWT, WEE)]","{UON: [WQF, WEE],
WQF: [WEE, GXI],
WEE: [],
GXI: [WEE],
VHS: [UON, GXI],
MWT: [WQF, GXI, WEE]}","Node UON is connected to nodes WQF, WEE.
Node WQF is connected to nodes WEE, GXI.
Node GXI is connected to node WEE.
Node VHS is connected to nodes UON, GXI.
Node MWT is connected to nodes WQF, GXI, WEE.","[MWT, GXI, WEE, UON, WQF, VHS]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VHS, MWT, UON, WQF, GXI, WEE]","Let's solve it step by step.
Nodes with 0 in-degree: [VHS, MWT].
Visit node VHS and remove it from the graph.
Nodes with 0 in-degree: [MWT, UON].
Visit node MWT and remove it from the graph.
Nodes with 0 in-degree: [UON].
Visit node UON and remove it from the graph.
Nodes with 0 in-degree: [WQF].
Visit node WQF and remove it from the graph.
Nodes with 0 in-degree: [GXI].
Visit node GXI and remove it from the graph.
Nodes with 0 in-degree: [WEE].
Visit node WEE and remove it from the graph.
So the result of topological sorting is ","('[[VHS, MWT, UON, WQF, GXI, WEE], [VHS, MWT, WEE, GXI, UON, WQF], [VHS, MWT, UON, WQF, GXI, WEE], [VHS, MWT, GXI, WEE, UON, WQF]]',)",0,133
topological_sort,"[(ERN, SLL), (TID, SLL), (TID, ZVI), (TID, XKX), (ZVI, TIM), (ZVI, ERN), (XKX, ERN), (TIM, ERN), (TIM, XKX)]","{ERN: [SLL],
SLL: [],
TID: [SLL, ZVI, XKX],
ZVI: [TIM, ERN],
XKX: [ERN],
TIM: [ERN, XKX]}","Node ERN is connected to node SLL.
Node TID is connected to nodes SLL, ZVI, XKX.
Node ZVI is connected to nodes TIM, ERN.
Node XKX is connected to node ERN.
Node TIM is connected to nodes ERN, XKX.","[ZVI, TID, XKX, ERN, TIM, SLL]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TID, ZVI, TIM, XKX, ERN, SLL]","Let's solve it step by step.
Nodes with 0 in-degree: [TID].
Visit node TID and remove it from the graph.
Nodes with 0 in-degree: [ZVI].
Visit node ZVI and remove it from the graph.
Nodes with 0 in-degree: [TIM].
Visit node TIM and remove it from the graph.
Nodes with 0 in-degree: [XKX].
Visit node XKX and remove it from the graph.
Nodes with 0 in-degree: [ERN].
Visit node ERN and remove it from the graph.
Nodes with 0 in-degree: [SLL].
Visit node SLL and remove it from the graph.
So the result of topological sorting is ","('[[TID, ZVI, ERN, TIM, XKX, SLL], [TID, ZVI, ERN, SLL, TIM, XKX], [TID, ZVI, TIM, SLL, ERN, XKX], [TID, ZVI, TIM, XKX, ERN, SLL]]',)",3,134
topological_sort,"[(QJJ, CEU), (QJJ, MTX), (QJJ, ZZX), (MTX, CEU), (MTX, ZZX), (ZZX, CEU), (TGP, JXW), (TGP, MTX), (TGP, ZZX), (JXW, QJJ), (JXW, CEU), (FES, CEU), (FES, TGP), (FES, JXW)]","{QJJ: [CEU, MTX, ZZX],
CEU: [],
MTX: [CEU, ZZX],
ZZX: [CEU],
TGP: [JXW, MTX, ZZX],
JXW: [QJJ, CEU],
FES: [CEU, TGP, JXW]}","Node QJJ is connected to nodes CEU, MTX, ZZX.
Node MTX is connected to nodes CEU, ZZX.
Node ZZX is connected to node CEU.
Node TGP is connected to nodes JXW, MTX, ZZX.
Node JXW is connected to nodes QJJ, CEU.
Node FES is connected to nodes CEU, TGP, JXW.","[QJJ, ZZX, TGP, JXW, MTX, CEU, FES]",7,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FES, TGP, JXW, QJJ, MTX, ZZX, CEU]","Let's solve it step by step.
Nodes with 0 in-degree: [FES].
Visit node FES and remove it from the graph.
Nodes with 0 in-degree: [TGP].
Visit node TGP and remove it from the graph.
Nodes with 0 in-degree: [JXW].
Visit node JXW and remove it from the graph.
Nodes with 0 in-degree: [QJJ].
Visit node QJJ and remove it from the graph.
Nodes with 0 in-degree: [MTX].
Visit node MTX and remove it from the graph.
Nodes with 0 in-degree: [ZZX].
Visit node ZZX and remove it from the graph.
Nodes with 0 in-degree: [CEU].
Visit node CEU and remove it from the graph.
So the result of topological sorting is ","('[[FES, TGP, JXW, QJJ, CEU, MTX, ZZX], [FES, TGP, ZZX, CEU, JXW, QJJ, MTX], [FES, ZZX, JXW, QJJ, MTX, TGP, CEU], [FES, TGP, JXW, QJJ, MTX, ZZX, CEU]]',)",3,135
topological_sort,"[(BIV, XKL), (TOR, BIV), (TOR, HEH), (TOR, URF), (URF, XKL), (URF, BIV), (SUZ, TOR)]","{BIV: [XKL],
XKL: [],
TOR: [BIV, HEH, URF],
HEH: [],
URF: [XKL, BIV],
SUZ: [TOR]}","Node BIV is connected to node XKL.
Node TOR is connected to nodes BIV, HEH, URF.
Node URF is connected to nodes XKL, BIV.
Node SUZ is connected to node TOR.","[URF, TOR, SUZ, BIV, HEH, XKL]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SUZ, TOR, HEH, URF, BIV, XKL]","Let's solve it step by step.
Nodes with 0 in-degree: [SUZ].
Visit node SUZ and remove it from the graph.
Nodes with 0 in-degree: [TOR].
Visit node TOR and remove it from the graph.
Nodes with 0 in-degree: [HEH, URF].
Visit node HEH and remove it from the graph.
Nodes with 0 in-degree: [URF].
Visit node URF and remove it from the graph.
Nodes with 0 in-degree: [BIV].
Visit node BIV and remove it from the graph.
Nodes with 0 in-degree: [XKL].
Visit node XKL and remove it from the graph.
So the result of topological sorting is ","('[[SUZ, TOR, HEH, URF, BIV, XKL], [SUZ, TOR, HEH, XKL, BIV, URF], [SUZ, TOR, BIV, XKL, HEH, URF], [SUZ, TOR, XKL, URF, BIV, HEH]]',)",0,136
topological_sort,"[(LUJ, SEC), (LUJ, LGG), (LGG, SEC), (RQU, SEC), (RQU, LUJ), (RQU, LGG), (LUD, LUJ), (LUD, SEC), (LUD, LGG)]","{LUJ: [SEC, LGG],
SEC: [],
LGG: [SEC],
RQU: [SEC, LUJ, LGG],
LUD: [LUJ, SEC, LGG]}","Node LUJ is connected to nodes SEC, LGG.
Node LGG is connected to node SEC.
Node RQU is connected to nodes SEC, LUJ, LGG.
Node LUD is connected to nodes LUJ, SEC, LGG.","[LUJ, LGG, RQU, SEC, LUD]",5,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RQU, LUD, LUJ, LGG, SEC]","Let's solve it step by step.
Nodes with 0 in-degree: [RQU, LUD].
Visit node RQU and remove it from the graph.
Nodes with 0 in-degree: [LUD].
Visit node LUD and remove it from the graph.
Nodes with 0 in-degree: [LUJ].
Visit node LUJ and remove it from the graph.
Nodes with 0 in-degree: [LGG].
Visit node LGG and remove it from the graph.
Nodes with 0 in-degree: [SEC].
Visit node SEC and remove it from the graph.
So the result of topological sorting is ","('[[RQU, LUJ, SEC, LUD, LGG], [RQU, LUD, LUJ, LGG, SEC], [RQU, LUD, LUJ, LGG, SEC], [RQU, SEC, LUD, LUJ, LGG]]',)",1,137
topological_sort,"[(DLC, HAY), (DSH, CFN), (DSH, HAY), (DSH, BAM), (CFN, HAY), (CFN, BAM), (CFN, DLC), (BAM, HAY), (BAM, DLC)]","{DLC: [HAY],
HAY: [],
DSH: [CFN, HAY, BAM],
CFN: [HAY, BAM, DLC],
BAM: [HAY, DLC]}","Node DLC is connected to node HAY.
Node DSH is connected to nodes CFN, HAY, BAM.
Node CFN is connected to nodes HAY, BAM, DLC.
Node BAM is connected to nodes HAY, DLC.","[HAY, DSH, BAM, DLC, CFN]",5,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DSH, CFN, BAM, DLC, HAY]","Let's solve it step by step.
Nodes with 0 in-degree: [DSH].
Visit node DSH and remove it from the graph.
Nodes with 0 in-degree: [CFN].
Visit node CFN and remove it from the graph.
Nodes with 0 in-degree: [BAM].
Visit node BAM and remove it from the graph.
Nodes with 0 in-degree: [DLC].
Visit node DLC and remove it from the graph.
Nodes with 0 in-degree: [HAY].
Visit node HAY and remove it from the graph.
So the result of topological sorting is ","('[[DSH, CFN, BAM, DLC, HAY], [DSH, DLC, HAY, BAM, CFN], [DSH, HAY, CFN, BAM, DLC], [DSH, CFN, HAY, BAM, DLC]]',)",0,138
topological_sort,"[(OWT, RSS), (FWK, OWT), (FWK, QVZ), (QVZ, OWT), (QVZ, RSS), (APS, FWK), (IEY, QVZ), (IEY, RSS)]","{OWT: [RSS],
RSS: [],
FWK: [OWT, QVZ],
QVZ: [OWT, RSS],
APS: [FWK],
IEY: [QVZ, RSS]}","Node OWT is connected to node RSS.
Node FWK is connected to nodes OWT, QVZ.
Node QVZ is connected to nodes OWT, RSS.
Node APS is connected to node FWK.
Node IEY is connected to nodes QVZ, RSS.","[OWT, FWK, IEY, QVZ, APS, RSS]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[APS, IEY, FWK, QVZ, OWT, RSS]","Let's solve it step by step.
Nodes with 0 in-degree: [APS, IEY].
Visit node APS and remove it from the graph.
Nodes with 0 in-degree: [IEY, FWK].
Visit node IEY and remove it from the graph.
Nodes with 0 in-degree: [FWK].
Visit node FWK and remove it from the graph.
Nodes with 0 in-degree: [QVZ].
Visit node QVZ and remove it from the graph.
Nodes with 0 in-degree: [OWT].
Visit node OWT and remove it from the graph.
Nodes with 0 in-degree: [RSS].
Visit node RSS and remove it from the graph.
So the result of topological sorting is ","('[[APS, IEY, FWK, QVZ, OWT, RSS], [APS, QVZ, IEY, OWT, RSS, FWK], [APS, IEY, FWK, QVZ, RSS, OWT], [APS, IEY, OWT, RSS, FWK, QVZ]]',)",0,139
topological_sort,"[(UHM, JFC), (UHM, FFJ), (FFJ, JFC), (XLT, JFC), (XLT, FFJ), (PNO, LCR), (PNO, UHM), (PNO, JFC), (PNO, XLT), (LCR, JFC), (LCR, FFJ), (LCR, XLT), (TRX, PNO), (TRX, JFC)]","{UHM: [JFC, FFJ],
JFC: [],
FFJ: [JFC],
XLT: [JFC, FFJ],
PNO: [LCR, UHM, JFC, XLT],
LCR: [JFC, FFJ, XLT],
TRX: [PNO, JFC]}","Node UHM is connected to nodes JFC, FFJ.
Node FFJ is connected to node JFC.
Node XLT is connected to nodes JFC, FFJ.
Node PNO is connected to nodes LCR, UHM, JFC, XLT.
Node LCR is connected to nodes JFC, FFJ, XLT.
Node TRX is connected to nodes PNO, JFC.","[JFC, FFJ, XLT, UHM, LCR, TRX, PNO]",7,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TRX, PNO, LCR, UHM, XLT, FFJ, JFC]","Let's solve it step by step.
Nodes with 0 in-degree: [TRX].
Visit node TRX and remove it from the graph.
Nodes with 0 in-degree: [PNO].
Visit node PNO and remove it from the graph.
Nodes with 0 in-degree: [LCR, UHM].
Visit node LCR and remove it from the graph.
Nodes with 0 in-degree: [UHM, XLT].
Visit node UHM and remove it from the graph.
Nodes with 0 in-degree: [XLT].
Visit node XLT and remove it from the graph.
Nodes with 0 in-degree: [FFJ].
Visit node FFJ and remove it from the graph.
Nodes with 0 in-degree: [JFC].
Visit node JFC and remove it from the graph.
So the result of topological sorting is ","('[[TRX, PNO, LCR, UHM, FFJ, JFC, XLT], [TRX, XLT, UHM, JFC, FFJ, LCR, PNO], [TRX, PNO, LCR, UHM, XLT, FFJ, JFC], [TRX, PNO, FFJ, JFC, LCR, UHM, XLT]]',)",2,140
topological_sort,"[(PVH, JMU), (XDP, JMU), (XDP, PVH), (XDP, GKU), (GKU, CUE), (GKU, JMU)]","{PVH: [JMU],
JMU: [],
XDP: [JMU, PVH, GKU],
GKU: [CUE, JMU],
CUE: []}","Node PVH is connected to node JMU.
Node XDP is connected to nodes JMU, PVH, GKU.
Node GKU is connected to nodes CUE, JMU.","[XDP, GKU, JMU, CUE, PVH]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XDP, PVH, GKU, CUE, JMU]","Let's solve it step by step.
Nodes with 0 in-degree: [XDP].
Visit node XDP and remove it from the graph.
Nodes with 0 in-degree: [PVH, GKU].
Visit node PVH and remove it from the graph.
Nodes with 0 in-degree: [GKU].
Visit node GKU and remove it from the graph.
Nodes with 0 in-degree: [CUE, JMU].
Visit node CUE and remove it from the graph.
Nodes with 0 in-degree: [JMU].
Visit node JMU and remove it from the graph.
So the result of topological sorting is ","('[[XDP, PVH, GKU, CUE, JMU], [XDP, JMU, PVH, GKU, CUE], [XDP, PVH, CUE, GKU, JMU], [XDP, PVH, GKU, CUE, JMU]]',)",3,141
topological_sort,"[(NBJ, URG), (NBJ, DUZ), (OLY, URG), (OLY, NBJ), (EAU, NBJ)]","{NBJ: [URG, DUZ],
URG: [],
DUZ: [],
OLY: [URG, NBJ],
EAU: [NBJ]}","Node NBJ is connected to nodes URG, DUZ.
Node OLY is connected to nodes URG, NBJ.
Node EAU is connected to node NBJ.","[OLY, EAU, DUZ, NBJ, URG]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OLY, EAU, NBJ, URG, DUZ]","Let's solve it step by step.
Nodes with 0 in-degree: [OLY, EAU].
Visit node OLY and remove it from the graph.
Nodes with 0 in-degree: [EAU].
Visit node EAU and remove it from the graph.
Nodes with 0 in-degree: [NBJ].
Visit node NBJ and remove it from the graph.
Nodes with 0 in-degree: [URG, DUZ].
Visit node URG and remove it from the graph.
Nodes with 0 in-degree: [DUZ].
Visit node DUZ and remove it from the graph.
So the result of topological sorting is ","('[[OLY, DUZ, EAU, NBJ, URG], [OLY, EAU, DUZ, URG, NBJ], [OLY, EAU, NBJ, URG, DUZ], [OLY, NBJ, EAU, DUZ, URG]]',)",2,142
topological_sort,"[(VCY, DJL), (VCY, FQI), (DJL, FQI), (RVD, LPH), (RVD, DJL), (RVD, VCY), (LPH, FQI), (LPH, VCY), (HJO, VCY), (HJO, RVD), (HJO, FQI), (HJO, DJL), (UTQ, LPH), (UTQ, DJL)]","{VCY: [DJL, FQI],
DJL: [FQI],
FQI: [],
RVD: [LPH, DJL, VCY],
LPH: [FQI, VCY],
HJO: [VCY, RVD, FQI, DJL],
UTQ: [LPH, DJL]}","Node VCY is connected to nodes DJL, FQI.
Node DJL is connected to node FQI.
Node RVD is connected to nodes LPH, DJL, VCY.
Node LPH is connected to nodes FQI, VCY.
Node HJO is connected to nodes VCY, RVD, FQI, DJL.
Node UTQ is connected to nodes LPH, DJL.","[HJO, RVD, DJL, LPH, UTQ, VCY, FQI]",7,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HJO, UTQ, RVD, LPH, VCY, DJL, FQI]","Let's solve it step by step.
Nodes with 0 in-degree: [HJO, UTQ].
Visit node HJO and remove it from the graph.
Nodes with 0 in-degree: [UTQ, RVD].
Visit node UTQ and remove it from the graph.
Nodes with 0 in-degree: [RVD].
Visit node RVD and remove it from the graph.
Nodes with 0 in-degree: [LPH].
Visit node LPH and remove it from the graph.
Nodes with 0 in-degree: [VCY].
Visit node VCY and remove it from the graph.
Nodes with 0 in-degree: [DJL].
Visit node DJL and remove it from the graph.
Nodes with 0 in-degree: [FQI].
Visit node FQI and remove it from the graph.
So the result of topological sorting is ","('[[HJO, LPH, VCY, UTQ, RVD, DJL, FQI], [HJO, UTQ, DJL, FQI, RVD, LPH, VCY], [HJO, UTQ, RVD, LPH, VCY, DJL, FQI], [HJO, UTQ, RVD, DJL, LPH, VCY, FQI]]',)",2,143
topological_sort,"[(YGB, AKP), (YGB, XWT), (AKP, YYL), (XWT, YYL), (XWT, AKP), (XWT, SIF), (YYL, SIF)]","{YGB: [AKP, XWT],
AKP: [YYL],
XWT: [YYL, AKP, SIF],
YYL: [SIF],
SIF: []}","Node YGB is connected to nodes AKP, XWT.
Node AKP is connected to node YYL.
Node XWT is connected to nodes YYL, AKP, SIF.
Node YYL is connected to node SIF.","[YYL, XWT, AKP, SIF, YGB]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YGB, XWT, AKP, YYL, SIF]","Let's solve it step by step.
Nodes with 0 in-degree: [YGB].
Visit node YGB and remove it from the graph.
Nodes with 0 in-degree: [XWT].
Visit node XWT and remove it from the graph.
Nodes with 0 in-degree: [AKP].
Visit node AKP and remove it from the graph.
Nodes with 0 in-degree: [YYL].
Visit node YYL and remove it from the graph.
Nodes with 0 in-degree: [SIF].
Visit node SIF and remove it from the graph.
So the result of topological sorting is ","('[[YGB, XWT, AKP, YYL, SIF], [YGB, XWT, YYL, SIF, AKP], [YGB, AKP, XWT, YYL, SIF], [YGB, SIF, XWT, AKP, YYL]]',)",0,144
topological_sort,"[(TBK, KGI), (TBK, HOU), (HOU, TNA), (HOU, KGI), (TNA, ZPM), (ZPM, KGI)]","{TBK: [KGI, HOU],
KGI: [],
HOU: [TNA, KGI],
TNA: [ZPM],
ZPM: [KGI]}","Node TBK is connected to nodes KGI, HOU.
Node HOU is connected to nodes TNA, KGI.
Node TNA is connected to node ZPM.
Node ZPM is connected to node KGI.","[ZPM, HOU, TNA, TBK, KGI]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TBK, HOU, TNA, ZPM, KGI]","Let's solve it step by step.
Nodes with 0 in-degree: [TBK].
Visit node TBK and remove it from the graph.
Nodes with 0 in-degree: [HOU].
Visit node HOU and remove it from the graph.
Nodes with 0 in-degree: [TNA].
Visit node TNA and remove it from the graph.
Nodes with 0 in-degree: [ZPM].
Visit node ZPM and remove it from the graph.
Nodes with 0 in-degree: [KGI].
Visit node KGI and remove it from the graph.
So the result of topological sorting is ","('[[TBK, HOU, ZPM, KGI, TNA], [TBK, HOU, TNA, ZPM, KGI], [TBK, KGI, HOU, TNA, ZPM], [TBK, HOU, TNA, KGI, ZPM]]',)",1,145
topological_sort,"[(QBA, YJJ), (YJJ, BGU), (BGU, CKK), (BGU, KBZ), (KBZ, CKK)]","{QBA: [YJJ],
YJJ: [BGU],
BGU: [CKK, KBZ],
CKK: [],
KBZ: [CKK]}","Node QBA is connected to node YJJ.
Node YJJ is connected to node BGU.
Node BGU is connected to nodes CKK, KBZ.
Node KBZ is connected to node CKK.","[BGU, KBZ, QBA, CKK, YJJ]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QBA, YJJ, BGU, KBZ, CKK]","Let's solve it step by step.
Nodes with 0 in-degree: [QBA].
Visit node QBA and remove it from the graph.
Nodes with 0 in-degree: [YJJ].
Visit node YJJ and remove it from the graph.
Nodes with 0 in-degree: [BGU].
Visit node BGU and remove it from the graph.
Nodes with 0 in-degree: [KBZ].
Visit node KBZ and remove it from the graph.
Nodes with 0 in-degree: [CKK].
Visit node CKK and remove it from the graph.
So the result of topological sorting is ","('[[QBA, CKK, BGU, YJJ, KBZ], [QBA, YJJ, BGU, KBZ, CKK], [QBA, CKK, YJJ, BGU, KBZ], [QBA, YJJ, KBZ, CKK, BGU]]',)",1,146
topological_sort,"[(MBR, HGW), (HGW, KVS), (HGW, OIX), (KVS, OIX), (KVS, VEL), (EFN, HGW), (EFN, MBR)]","{MBR: [HGW],
HGW: [KVS, OIX],
KVS: [OIX, VEL],
OIX: [],
VEL: [],
EFN: [HGW, MBR]}","Node MBR is connected to node HGW.
Node HGW is connected to nodes KVS, OIX.
Node KVS is connected to nodes OIX, VEL.
Node EFN is connected to nodes HGW, MBR.","[OIX, EFN, HGW, MBR, KVS, VEL]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EFN, MBR, HGW, KVS, OIX, VEL]","Let's solve it step by step.
Nodes with 0 in-degree: [EFN].
Visit node EFN and remove it from the graph.
Nodes with 0 in-degree: [MBR].
Visit node MBR and remove it from the graph.
Nodes with 0 in-degree: [HGW].
Visit node HGW and remove it from the graph.
Nodes with 0 in-degree: [KVS].
Visit node KVS and remove it from the graph.
Nodes with 0 in-degree: [OIX, VEL].
Visit node OIX and remove it from the graph.
Nodes with 0 in-degree: [VEL].
Visit node VEL and remove it from the graph.
So the result of topological sorting is ","('[[EFN, HGW, MBR, KVS, VEL, OIX], [EFN, MBR, OIX, VEL, HGW, KVS], [EFN, MBR, HGW, KVS, OIX, VEL], [EFN, MBR, HGW, VEL, OIX, KVS]]',)",2,147
topological_sort,"[(BSE, HXH), (BSE, CME), (CME, HXH), (CME, HMP), (TTQ, HXH), (TTQ, CME), (TTQ, HMP), (TTQ, DUN), (DUN, CME), (DUN, HMP)]","{BSE: [HXH, CME],
HXH: [],
CME: [HXH, HMP],
TTQ: [HXH, CME, HMP, DUN],
HMP: [],
DUN: [CME, HMP]}","Node BSE is connected to nodes HXH, CME.
Node CME is connected to nodes HXH, HMP.
Node TTQ is connected to nodes HXH, CME, HMP, DUN.
Node DUN is connected to nodes CME, HMP.","[CME, HXH, TTQ, BSE, HMP, DUN]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BSE, TTQ, DUN, CME, HXH, HMP]","Let's solve it step by step.
Nodes with 0 in-degree: [BSE, TTQ].
Visit node BSE and remove it from the graph.
Nodes with 0 in-degree: [TTQ].
Visit node TTQ and remove it from the graph.
Nodes with 0 in-degree: [DUN].
Visit node DUN and remove it from the graph.
Nodes with 0 in-degree: [CME].
Visit node CME and remove it from the graph.
Nodes with 0 in-degree: [HXH, HMP].
Visit node HXH and remove it from the graph.
Nodes with 0 in-degree: [HMP].
Visit node HMP and remove it from the graph.
So the result of topological sorting is ","('[[BSE, TTQ, DUN, HXH, HMP, CME], [BSE, HXH, CME, TTQ, DUN, HMP], [BSE, TTQ, DUN, CME, HXH, HMP], [BSE, TTQ, HXH, HMP, DUN, CME]]',)",2,148
topological_sort,"[(OJZ, GOK), (OJZ, NEW), (OJZ, ROO), (NEW, XOQ), (ROO, NEW), (ROO, GOK), (ZMZ, GOK), (ZMZ, OJZ), (ZMZ, NEW)]","{OJZ: [GOK, NEW, ROO],
GOK: [],
NEW: [XOQ],
ROO: [NEW, GOK],
ZMZ: [GOK, OJZ, NEW],
XOQ: []}","Node OJZ is connected to nodes GOK, NEW, ROO.
Node NEW is connected to node XOQ.
Node ROO is connected to nodes NEW, GOK.
Node ZMZ is connected to nodes GOK, OJZ, NEW.","[ZMZ, NEW, OJZ, GOK, ROO, XOQ]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZMZ, OJZ, ROO, NEW, GOK, XOQ]","Let's solve it step by step.
Nodes with 0 in-degree: [ZMZ].
Visit node ZMZ and remove it from the graph.
Nodes with 0 in-degree: [OJZ].
Visit node OJZ and remove it from the graph.
Nodes with 0 in-degree: [ROO].
Visit node ROO and remove it from the graph.
Nodes with 0 in-degree: [NEW, GOK].
Visit node NEW and remove it from the graph.
Nodes with 0 in-degree: [GOK, XOQ].
Visit node GOK and remove it from the graph.
Nodes with 0 in-degree: [XOQ].
Visit node XOQ and remove it from the graph.
So the result of topological sorting is ","('[[ZMZ, OJZ, GOK, XOQ, ROO, NEW], [ZMZ, ROO, XOQ, OJZ, NEW, GOK], [ZMZ, OJZ, ROO, XOQ, GOK, NEW], [ZMZ, OJZ, ROO, NEW, GOK, XOQ]]',)",3,149
topological_sort,"[(LNY, XIA), (LNY, PNU), (SFJ, XIA), (NLP, SFJ), (NLP, LNY), (PVC, NLP)]","{LNY: [XIA, PNU],
XIA: [],
PNU: [],
SFJ: [XIA],
NLP: [SFJ, LNY],
PVC: [NLP]}","Node LNY is connected to nodes XIA, PNU.
Node SFJ is connected to node XIA.
Node NLP is connected to nodes SFJ, LNY.
Node PVC is connected to node NLP.","[LNY, PNU, NLP, SFJ, PVC, XIA]",6,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PVC, NLP, SFJ, LNY, XIA, PNU]","Let's solve it step by step.
Nodes with 0 in-degree: [PVC].
Visit node PVC and remove it from the graph.
Nodes with 0 in-degree: [NLP].
Visit node NLP and remove it from the graph.
Nodes with 0 in-degree: [SFJ, LNY].
Visit node SFJ and remove it from the graph.
Nodes with 0 in-degree: [LNY].
Visit node LNY and remove it from the graph.
Nodes with 0 in-degree: [XIA, PNU].
Visit node XIA and remove it from the graph.
Nodes with 0 in-degree: [PNU].
Visit node PNU and remove it from the graph.
So the result of topological sorting is ","('[[PVC, NLP, SFJ, XIA, LNY, PNU], [PVC, NLP, XIA, PNU, SFJ, LNY], [PVC, LNY, NLP, PNU, XIA, SFJ], [PVC, NLP, SFJ, LNY, XIA, PNU]]',)",3,150
topological_sort,"[(EYR, LOR), (DAE, CYT), (DAE, LOR), (DAE, WRQ), (CYT, LOR), (CYT, EYR), (WRQ, EYR), (WRQ, LOR), (WRQ, CYT)]","{EYR: [LOR],
LOR: [],
DAE: [CYT, LOR, WRQ],
CYT: [LOR, EYR],
WRQ: [EYR, LOR, CYT]}","Node EYR is connected to node LOR.
Node DAE is connected to nodes CYT, LOR, WRQ.
Node CYT is connected to nodes LOR, EYR.
Node WRQ is connected to nodes EYR, LOR, CYT.","[LOR, DAE, CYT, EYR, WRQ]",5,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DAE, WRQ, CYT, EYR, LOR]","Let's solve it step by step.
Nodes with 0 in-degree: [DAE].
Visit node DAE and remove it from the graph.
Nodes with 0 in-degree: [WRQ].
Visit node WRQ and remove it from the graph.
Nodes with 0 in-degree: [CYT].
Visit node CYT and remove it from the graph.
Nodes with 0 in-degree: [EYR].
Visit node EYR and remove it from the graph.
Nodes with 0 in-degree: [LOR].
Visit node LOR and remove it from the graph.
So the result of topological sorting is ","('[[DAE, CYT, EYR, LOR, WRQ], [DAE, LOR, WRQ, CYT, EYR], [DAE, WRQ, CYT, EYR, LOR], [DAE, WRQ, LOR, CYT, EYR]]',)",2,151
topological_sort,"[(SBH, CUH), (SBH, JRI), (MYN, CUH), (MYN, SBH), (VAO, CUH), (VAO, MYN)]","{SBH: [CUH, JRI],
CUH: [],
JRI: [],
MYN: [CUH, SBH],
VAO: [CUH, MYN]}","Node SBH is connected to nodes CUH, JRI.
Node MYN is connected to nodes CUH, SBH.
Node VAO is connected to nodes CUH, MYN.","[SBH, JRI, CUH, VAO, MYN]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VAO, MYN, SBH, CUH, JRI]","Let's solve it step by step.
Nodes with 0 in-degree: [VAO].
Visit node VAO and remove it from the graph.
Nodes with 0 in-degree: [MYN].
Visit node MYN and remove it from the graph.
Nodes with 0 in-degree: [SBH].
Visit node SBH and remove it from the graph.
Nodes with 0 in-degree: [CUH, JRI].
Visit node CUH and remove it from the graph.
Nodes with 0 in-degree: [JRI].
Visit node JRI and remove it from the graph.
So the result of topological sorting is ","('[[VAO, MYN, SBH, CUH, JRI], [VAO, MYN, JRI, SBH, CUH], [VAO, JRI, MYN, SBH, CUH], [VAO, MYN, CUH, JRI, SBH]]',)",0,152
topological_sort,"[(HZG, CWG), (QMO, HZG), (XYZ, CWG), (VRI, XYZ)]","{HZG: [CWG],
CWG: [],
QMO: [HZG],
XYZ: [CWG],
VRI: [XYZ]}","Node HZG is connected to node CWG.
Node QMO is connected to node HZG.
Node XYZ is connected to node CWG.
Node VRI is connected to node XYZ.","[VRI, QMO, XYZ, CWG, HZG]",5,4,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QMO, VRI, HZG, XYZ, CWG]","Let's solve it step by step.
Nodes with 0 in-degree: [QMO, VRI].
Visit node QMO and remove it from the graph.
Nodes with 0 in-degree: [VRI, HZG].
Visit node VRI and remove it from the graph.
Nodes with 0 in-degree: [HZG, XYZ].
Visit node HZG and remove it from the graph.
Nodes with 0 in-degree: [XYZ].
Visit node XYZ and remove it from the graph.
Nodes with 0 in-degree: [CWG].
Visit node CWG and remove it from the graph.
So the result of topological sorting is ","('[[QMO, CWG, VRI, HZG, XYZ], [QMO, HZG, XYZ, CWG, VRI], [QMO, VRI, HZG, XYZ, CWG], [QMO, VRI, HZG, CWG, XYZ]]',)",2,153
topological_sort,"[(QNE, AAK), (QNE, WTP), (AAK, WTP), (VOE, QNE), (VOE, AAK), (KTG, AAK), (GBU, WTP), (GBU, KTG), (GBU, AAK)]","{QNE: [AAK, WTP],
AAK: [WTP],
WTP: [],
VOE: [QNE, AAK],
KTG: [AAK],
GBU: [WTP, KTG, AAK]}","Node QNE is connected to nodes AAK, WTP.
Node AAK is connected to node WTP.
Node VOE is connected to nodes QNE, AAK.
Node KTG is connected to node AAK.
Node GBU is connected to nodes WTP, KTG, AAK.","[KTG, VOE, AAK, WTP, GBU, QNE]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VOE, GBU, QNE, KTG, AAK, WTP]","Let's solve it step by step.
Nodes with 0 in-degree: [VOE, GBU].
Visit node VOE and remove it from the graph.
Nodes with 0 in-degree: [GBU, QNE].
Visit node GBU and remove it from the graph.
Nodes with 0 in-degree: [QNE, KTG].
Visit node QNE and remove it from the graph.
Nodes with 0 in-degree: [KTG].
Visit node KTG and remove it from the graph.
Nodes with 0 in-degree: [AAK].
Visit node AAK and remove it from the graph.
Nodes with 0 in-degree: [WTP].
Visit node WTP and remove it from the graph.
So the result of topological sorting is ","('[[VOE, GBU, QNE, AAK, KTG, WTP], [VOE, GBU, AAK, WTP, QNE, KTG], [VOE, GBU, QNE, KTG, AAK, WTP], [VOE, WTP, GBU, AAK, KTG, QNE]]',)",2,154
topological_sort,"[(TAT, ZRF), (ZRF, SXQ), (OPX, ZRF), (OPX, TAT), (AHF, ZRF), (AHF, TAT)]","{TAT: [ZRF],
ZRF: [SXQ],
SXQ: [],
OPX: [ZRF, TAT],
AHF: [ZRF, TAT]}","Node TAT is connected to node ZRF.
Node ZRF is connected to node SXQ.
Node OPX is connected to nodes ZRF, TAT.
Node AHF is connected to nodes ZRF, TAT.","[OPX, AHF, TAT, SXQ, ZRF]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OPX, AHF, TAT, ZRF, SXQ]","Let's solve it step by step.
Nodes with 0 in-degree: [OPX, AHF].
Visit node OPX and remove it from the graph.
Nodes with 0 in-degree: [AHF].
Visit node AHF and remove it from the graph.
Nodes with 0 in-degree: [TAT].
Visit node TAT and remove it from the graph.
Nodes with 0 in-degree: [ZRF].
Visit node ZRF and remove it from the graph.
Nodes with 0 in-degree: [SXQ].
Visit node SXQ and remove it from the graph.
So the result of topological sorting is ","('[[OPX, AHF, TAT, ZRF, SXQ], [OPX, AHF, ZRF, SXQ, TAT], [OPX, SXQ, AHF, TAT, ZRF], [OPX, ZRF, SXQ, AHF, TAT]]',)",0,155
topological_sort,"[(TBP, CYC), (TBP, FNX), (TBP, QQH), (TBP, GBU), (CYC, XPD), (FNX, GBU), (FNX, QQH), (FNX, CYC), (QQH, CYC), (QQH, GBU), (XPD, GBU), (CSZ, CYC), (CSZ, XPD), (CSZ, TBP)]","{TBP: [CYC, FNX, QQH, GBU],
CYC: [XPD],
FNX: [GBU, QQH, CYC],
QQH: [CYC, GBU],
GBU: [],
XPD: [GBU],
CSZ: [CYC, XPD, TBP]}","Node TBP is connected to nodes CYC, FNX, QQH, GBU.
Node CYC is connected to node XPD.
Node FNX is connected to nodes GBU, QQH, CYC.
Node QQH is connected to nodes CYC, GBU.
Node XPD is connected to node GBU.
Node CSZ is connected to nodes CYC, XPD, TBP.","[CYC, CSZ, TBP, XPD, GBU, QQH, FNX]",7,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CSZ, TBP, FNX, QQH, CYC, XPD, GBU]","Let's solve it step by step.
Nodes with 0 in-degree: [CSZ].
Visit node CSZ and remove it from the graph.
Nodes with 0 in-degree: [TBP].
Visit node TBP and remove it from the graph.
Nodes with 0 in-degree: [FNX].
Visit node FNX and remove it from the graph.
Nodes with 0 in-degree: [QQH].
Visit node QQH and remove it from the graph.
Nodes with 0 in-degree: [CYC].
Visit node CYC and remove it from the graph.
Nodes with 0 in-degree: [XPD].
Visit node XPD and remove it from the graph.
Nodes with 0 in-degree: [GBU].
Visit node GBU and remove it from the graph.
So the result of topological sorting is ","('[[CSZ, XPD, FNX, GBU, CYC, QQH, TBP], [CSZ, TBP, FNX, QQH, CYC, XPD, GBU], [CSZ, TBP, FNX, CYC, QQH, GBU, XPD], [CSZ, TBP, XPD, GBU, FNX, QQH, CYC]]',)",1,156
topological_sort,"[(BFD, RVO), (BFD, CNU), (MEM, RVO), (MEM, BXH), (MEM, FEQ), (MEM, CNU), (BXH, BFD), (FEQ, BFD), (FEQ, BXH), (LNL, MEM), (LNL, RVO)]","{BFD: [RVO, CNU],
RVO: [],
CNU: [],
MEM: [RVO, BXH, FEQ, CNU],
BXH: [BFD],
FEQ: [BFD, BXH],
LNL: [MEM, RVO]}","Node BFD is connected to nodes RVO, CNU.
Node MEM is connected to nodes RVO, BXH, FEQ, CNU.
Node BXH is connected to node BFD.
Node FEQ is connected to nodes BFD, BXH.
Node LNL is connected to nodes MEM, RVO.","[CNU, BXH, BFD, MEM, LNL, RVO, FEQ]",7,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LNL, MEM, FEQ, BXH, BFD, RVO, CNU]","Let's solve it step by step.
Nodes with 0 in-degree: [LNL].
Visit node LNL and remove it from the graph.
Nodes with 0 in-degree: [MEM].
Visit node MEM and remove it from the graph.
Nodes with 0 in-degree: [FEQ].
Visit node FEQ and remove it from the graph.
Nodes with 0 in-degree: [BXH].
Visit node BXH and remove it from the graph.
Nodes with 0 in-degree: [BFD].
Visit node BFD and remove it from the graph.
Nodes with 0 in-degree: [RVO, CNU].
Visit node RVO and remove it from the graph.
Nodes with 0 in-degree: [CNU].
Visit node CNU and remove it from the graph.
So the result of topological sorting is ","('[[LNL, CNU, BXH, RVO, FEQ, BFD, MEM], [LNL, MEM, RVO, CNU, FEQ, BXH, BFD], [LNL, MEM, FEQ, BXH, BFD, RVO, CNU], [LNL, MEM, FEQ, CNU, BXH, RVO, BFD]]',)",2,157
topological_sort,"[(IWW, VOM), (IWW, BVN), (IWW, WDL), (VOM, WDL), (BVN, ISR), (BVN, VOM), (ISR, VOM)]","{IWW: [VOM, BVN, WDL],
VOM: [WDL],
BVN: [ISR, VOM],
WDL: [],
ISR: [VOM]}","Node IWW is connected to nodes VOM, BVN, WDL.
Node VOM is connected to node WDL.
Node BVN is connected to nodes ISR, VOM.
Node ISR is connected to node VOM.","[BVN, IWW, WDL, VOM, ISR]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IWW, BVN, ISR, VOM, WDL]","Let's solve it step by step.
Nodes with 0 in-degree: [IWW].
Visit node IWW and remove it from the graph.
Nodes with 0 in-degree: [BVN].
Visit node BVN and remove it from the graph.
Nodes with 0 in-degree: [ISR].
Visit node ISR and remove it from the graph.
Nodes with 0 in-degree: [VOM].
Visit node VOM and remove it from the graph.
Nodes with 0 in-degree: [WDL].
Visit node WDL and remove it from the graph.
So the result of topological sorting is ","('[[IWW, BVN, ISR, VOM, WDL], [IWW, WDL, BVN, ISR, VOM], [IWW, VOM, ISR, BVN, WDL], [IWW, BVN, ISR, VOM, WDL]]',)",3,158
topological_sort,"[(GPG, ALU), (GPG, OEC), (ALU, WAY), (OEC, WAY), (OEC, ALU), (KIN, GPG), (KIN, ALU), (KIN, OBJ), (OBJ, ALU), (OBJ, WAY)]","{GPG: [ALU, OEC],
ALU: [WAY],
OEC: [WAY, ALU],
WAY: [],
KIN: [GPG, ALU, OBJ],
OBJ: [ALU, WAY]}","Node GPG is connected to nodes ALU, OEC.
Node ALU is connected to node WAY.
Node OEC is connected to nodes WAY, ALU.
Node KIN is connected to nodes GPG, ALU, OBJ.
Node OBJ is connected to nodes ALU, WAY.","[WAY, KIN, ALU, OBJ, OEC, GPG]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KIN, GPG, OBJ, OEC, ALU, WAY]","Let's solve it step by step.
Nodes with 0 in-degree: [KIN].
Visit node KIN and remove it from the graph.
Nodes with 0 in-degree: [GPG, OBJ].
Visit node GPG and remove it from the graph.
Nodes with 0 in-degree: [OBJ, OEC].
Visit node OBJ and remove it from the graph.
Nodes with 0 in-degree: [OEC].
Visit node OEC and remove it from the graph.
Nodes with 0 in-degree: [ALU].
Visit node ALU and remove it from the graph.
Nodes with 0 in-degree: [WAY].
Visit node WAY and remove it from the graph.
So the result of topological sorting is ","('[[KIN, GPG, OBJ, OEC, ALU, WAY], [KIN, GPG, OBJ, WAY, ALU, OEC], [KIN, OEC, GPG, ALU, OBJ, WAY], [KIN, GPG, ALU, WAY, OBJ, OEC]]',)",0,159
topological_sort,"[(ORM, RMS), (ORM, DLK), (ORM, JEV), (DLK, QEX), (DLK, RMS), (JEV, QEX), (JEV, RMS), (JEV, DLK), (CJS, QEX), (CJS, JEV), (CJS, NWJ), (CJS, ORM), (CJS, DLK), (QEX, RMS), (NWJ, ORM), (NWJ, JEV)]","{ORM: [RMS, DLK, JEV],
RMS: [],
DLK: [QEX, RMS],
JEV: [QEX, RMS, DLK],
CJS: [QEX, JEV, NWJ, ORM, DLK],
QEX: [RMS],
NWJ: [ORM, JEV]}","Node ORM is connected to nodes RMS, DLK, JEV.
Node DLK is connected to nodes QEX, RMS.
Node JEV is connected to nodes QEX, RMS, DLK.
Node CJS is connected to nodes QEX, JEV, NWJ, ORM, DLK.
Node QEX is connected to node RMS.
Node NWJ is connected to nodes ORM, JEV.","[RMS, JEV, QEX, CJS, DLK, ORM, NWJ]",7,16,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CJS, NWJ, ORM, JEV, DLK, QEX, RMS]","Let's solve it step by step.
Nodes with 0 in-degree: [CJS].
Visit node CJS and remove it from the graph.
Nodes with 0 in-degree: [NWJ].
Visit node NWJ and remove it from the graph.
Nodes with 0 in-degree: [ORM].
Visit node ORM and remove it from the graph.
Nodes with 0 in-degree: [JEV].
Visit node JEV and remove it from the graph.
Nodes with 0 in-degree: [DLK].
Visit node DLK and remove it from the graph.
Nodes with 0 in-degree: [QEX].
Visit node QEX and remove it from the graph.
Nodes with 0 in-degree: [RMS].
Visit node RMS and remove it from the graph.
So the result of topological sorting is ","('[[CJS, NWJ, QEX, RMS, ORM, JEV, DLK], [CJS, DLK, ORM, QEX, JEV, NWJ, RMS], [CJS, NWJ, ORM, JEV, DLK, QEX, RMS], [CJS, NWJ, ORM, JEV, RMS, QEX, DLK]]',)",2,160
topological_sort,"[(KTN, PBQ), (PBQ, IYD), (IYD, DXY), (AGE, IYD), (AGE, YFN), (YFN, IYD)]","{KTN: [PBQ],
PBQ: [IYD],
IYD: [DXY],
AGE: [IYD, YFN],
YFN: [IYD],
DXY: []}","Node KTN is connected to node PBQ.
Node PBQ is connected to node IYD.
Node IYD is connected to node DXY.
Node AGE is connected to nodes IYD, YFN.
Node YFN is connected to node IYD.","[IYD, AGE, YFN, DXY, PBQ, KTN]",6,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KTN, AGE, PBQ, YFN, IYD, DXY]","Let's solve it step by step.
Nodes with 0 in-degree: [KTN, AGE].
Visit node KTN and remove it from the graph.
Nodes with 0 in-degree: [AGE, PBQ].
Visit node AGE and remove it from the graph.
Nodes with 0 in-degree: [PBQ, YFN].
Visit node PBQ and remove it from the graph.
Nodes with 0 in-degree: [YFN].
Visit node YFN and remove it from the graph.
Nodes with 0 in-degree: [IYD].
Visit node IYD and remove it from the graph.
Nodes with 0 in-degree: [DXY].
Visit node DXY and remove it from the graph.
So the result of topological sorting is ","('[[KTN, AGE, PBQ, DXY, YFN, IYD], [KTN, AGE, PBQ, YFN, IYD, DXY], [KTN, AGE, IYD, DXY, PBQ, YFN], [KTN, PBQ, YFN, DXY, IYD, AGE]]',)",1,161
topological_sort,"[(LAD, SVO), (LAD, AYP), (LAD, ACQ), (SVO, TAQ), (AYP, ACQ), (TAQ, ACQ), (WGK, SVO), (WGK, LAD), (WGK, ACQ)]","{LAD: [SVO, AYP, ACQ],
SVO: [TAQ],
AYP: [ACQ],
ACQ: [],
TAQ: [ACQ],
WGK: [SVO, LAD, ACQ]}","Node LAD is connected to nodes SVO, AYP, ACQ.
Node SVO is connected to node TAQ.
Node AYP is connected to node ACQ.
Node TAQ is connected to node ACQ.
Node WGK is connected to nodes SVO, LAD, ACQ.","[WGK, AYP, LAD, ACQ, SVO, TAQ]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WGK, LAD, SVO, AYP, TAQ, ACQ]","Let's solve it step by step.
Nodes with 0 in-degree: [WGK].
Visit node WGK and remove it from the graph.
Nodes with 0 in-degree: [LAD].
Visit node LAD and remove it from the graph.
Nodes with 0 in-degree: [SVO, AYP].
Visit node SVO and remove it from the graph.
Nodes with 0 in-degree: [AYP, TAQ].
Visit node AYP and remove it from the graph.
Nodes with 0 in-degree: [TAQ].
Visit node TAQ and remove it from the graph.
Nodes with 0 in-degree: [ACQ].
Visit node ACQ and remove it from the graph.
So the result of topological sorting is ","('[[WGK, LAD, SVO, AYP, TAQ, ACQ], [WGK, LAD, SVO, TAQ, ACQ, AYP], [WGK, LAD, TAQ, ACQ, SVO, AYP], [WGK, LAD, ACQ, AYP, SVO, TAQ]]',)",0,162
topological_sort,"[(KZW, LZI), (KZW, IHR), (LZI, DCQ), (IHR, LZI), (CNB, LZI), (CNB, IHR)]","{KZW: [LZI, IHR],
LZI: [DCQ],
IHR: [LZI],
DCQ: [],
CNB: [LZI, IHR]}","Node KZW is connected to nodes LZI, IHR.
Node LZI is connected to node DCQ.
Node IHR is connected to node LZI.
Node CNB is connected to nodes LZI, IHR.","[IHR, CNB, LZI, DCQ, KZW]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KZW, CNB, IHR, LZI, DCQ]","Let's solve it step by step.
Nodes with 0 in-degree: [KZW, CNB].
Visit node KZW and remove it from the graph.
Nodes with 0 in-degree: [CNB].
Visit node CNB and remove it from the graph.
Nodes with 0 in-degree: [IHR].
Visit node IHR and remove it from the graph.
Nodes with 0 in-degree: [LZI].
Visit node LZI and remove it from the graph.
Nodes with 0 in-degree: [DCQ].
Visit node DCQ and remove it from the graph.
So the result of topological sorting is ","('[[KZW, DCQ, CNB, IHR, LZI], [KZW, CNB, LZI, DCQ, IHR], [KZW, CNB, IHR, LZI, DCQ], [KZW, LZI, CNB, IHR, DCQ]]',)",2,163
topological_sort,"[(QHE, FEV), (SPT, IGV), (SPT, EPV), (SPT, QHE), (IGV, FEV), (EPV, FEV), (EPV, TAK), (TAK, IGV), (TAK, FEV), (TAK, QHE)]","{QHE: [FEV],
FEV: [],
SPT: [IGV, EPV, QHE],
IGV: [FEV],
EPV: [FEV, TAK],
TAK: [IGV, FEV, QHE]}","Node QHE is connected to node FEV.
Node SPT is connected to nodes IGV, EPV, QHE.
Node IGV is connected to node FEV.
Node EPV is connected to nodes FEV, TAK.
Node TAK is connected to nodes IGV, FEV, QHE.","[TAK, SPT, IGV, QHE, EPV, FEV]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SPT, EPV, TAK, IGV, QHE, FEV]","Let's solve it step by step.
Nodes with 0 in-degree: [SPT].
Visit node SPT and remove it from the graph.
Nodes with 0 in-degree: [EPV].
Visit node EPV and remove it from the graph.
Nodes with 0 in-degree: [TAK].
Visit node TAK and remove it from the graph.
Nodes with 0 in-degree: [IGV, QHE].
Visit node IGV and remove it from the graph.
Nodes with 0 in-degree: [QHE].
Visit node QHE and remove it from the graph.
Nodes with 0 in-degree: [FEV].
Visit node FEV and remove it from the graph.
So the result of topological sorting is ","('[[SPT, EPV, TAK, IGV, QHE, FEV], [SPT, EPV, TAK, IGV, QHE, FEV], [SPT, FEV, IGV, QHE, EPV, TAK], [SPT, EPV, QHE, FEV, TAK, IGV]]',)",1,164
topological_sort,"[(TCK, HOW), (DEX, UHY), (UHY, AQC), (UHY, TCK), (AQC, HOW), (AQC, TCK)]","{TCK: [HOW],
HOW: [],
DEX: [UHY],
UHY: [AQC, TCK],
AQC: [HOW, TCK]}","Node TCK is connected to node HOW.
Node DEX is connected to node UHY.
Node UHY is connected to nodes AQC, TCK.
Node AQC is connected to nodes HOW, TCK.","[DEX, AQC, TCK, UHY, HOW]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DEX, UHY, AQC, TCK, HOW]","Let's solve it step by step.
Nodes with 0 in-degree: [DEX].
Visit node DEX and remove it from the graph.
Nodes with 0 in-degree: [UHY].
Visit node UHY and remove it from the graph.
Nodes with 0 in-degree: [AQC].
Visit node AQC and remove it from the graph.
Nodes with 0 in-degree: [TCK].
Visit node TCK and remove it from the graph.
Nodes with 0 in-degree: [HOW].
Visit node HOW and remove it from the graph.
So the result of topological sorting is ","('[[DEX, HOW, UHY, AQC, TCK], [DEX, AQC, TCK, HOW, UHY], [DEX, UHY, AQC, TCK, HOW], [DEX, UHY, HOW, AQC, TCK]]',)",2,165
topological_sort,"[(CFO, PIY), (CFO, IQB), (IQB, PIY), (KGR, PIY), (KGR, IQB), (XIE, KGR), (XIE, IQB)]","{CFO: [PIY, IQB],
PIY: [],
IQB: [PIY],
KGR: [PIY, IQB],
XIE: [KGR, IQB]}","Node CFO is connected to nodes PIY, IQB.
Node IQB is connected to node PIY.
Node KGR is connected to nodes PIY, IQB.
Node XIE is connected to nodes KGR, IQB.","[IQB, XIE, KGR, CFO, PIY]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CFO, XIE, KGR, IQB, PIY]","Let's solve it step by step.
Nodes with 0 in-degree: [CFO, XIE].
Visit node CFO and remove it from the graph.
Nodes with 0 in-degree: [XIE].
Visit node XIE and remove it from the graph.
Nodes with 0 in-degree: [KGR].
Visit node KGR and remove it from the graph.
Nodes with 0 in-degree: [IQB].
Visit node IQB and remove it from the graph.
Nodes with 0 in-degree: [PIY].
Visit node PIY and remove it from the graph.
So the result of topological sorting is ","('[[CFO, XIE, KGR, IQB, PIY], [CFO, PIY, IQB, XIE, KGR], [CFO, XIE, KGR, PIY, IQB], [CFO, PIY, XIE, KGR, IQB]]',)",0,166
topological_sort,"[(XUI, FGO), (XUI, WTX), (XUI, GEQ), (FGO, EQJ), (WTX, EQJ), (WTX, FGO), (GEQ, FGO)]","{XUI: [FGO, WTX, GEQ],
FGO: [EQJ],
WTX: [EQJ, FGO],
GEQ: [FGO],
EQJ: []}","Node XUI is connected to nodes FGO, WTX, GEQ.
Node FGO is connected to node EQJ.
Node WTX is connected to nodes EQJ, FGO.
Node GEQ is connected to node FGO.","[FGO, GEQ, XUI, EQJ, WTX]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XUI, WTX, GEQ, FGO, EQJ]","Let's solve it step by step.
Nodes with 0 in-degree: [XUI].
Visit node XUI and remove it from the graph.
Nodes with 0 in-degree: [WTX, GEQ].
Visit node WTX and remove it from the graph.
Nodes with 0 in-degree: [GEQ].
Visit node GEQ and remove it from the graph.
Nodes with 0 in-degree: [FGO].
Visit node FGO and remove it from the graph.
Nodes with 0 in-degree: [EQJ].
Visit node EQJ and remove it from the graph.
So the result of topological sorting is ","('[[XUI, WTX, GEQ, FGO, EQJ], [XUI, WTX, GEQ, FGO, EQJ], [XUI, WTX, GEQ, FGO, EQJ], [XUI, EQJ, WTX, GEQ, FGO]]',)",2,167
topological_sort,"[(JJL, ENC), (JJL, MFC), (JJL, MOZ), (MFC, MOZ), (MFC, GKB), (MFC, ENC), (MFC, DVP), (MOZ, ENC), (MOZ, GKB), (DVP, GKB), (DVP, ENC), (DVP, MOZ), (DVP, BRB), (BRB, GKB), (BRB, ENC)]","{JJL: [ENC, MFC, MOZ],
ENC: [],
MFC: [MOZ, GKB, ENC, DVP],
MOZ: [ENC, GKB],
DVP: [GKB, ENC, MOZ, BRB],
GKB: [],
BRB: [GKB, ENC]}","Node JJL is connected to nodes ENC, MFC, MOZ.
Node MFC is connected to nodes MOZ, GKB, ENC, DVP.
Node MOZ is connected to nodes ENC, GKB.
Node DVP is connected to nodes GKB, ENC, MOZ, BRB.
Node BRB is connected to nodes GKB, ENC.","[DVP, JJL, MOZ, BRB, ENC, GKB, MFC]",7,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JJL, MFC, DVP, MOZ, BRB, GKB, ENC]","Let's solve it step by step.
Nodes with 0 in-degree: [JJL].
Visit node JJL and remove it from the graph.
Nodes with 0 in-degree: [MFC].
Visit node MFC and remove it from the graph.
Nodes with 0 in-degree: [DVP].
Visit node DVP and remove it from the graph.
Nodes with 0 in-degree: [MOZ, BRB].
Visit node MOZ and remove it from the graph.
Nodes with 0 in-degree: [BRB].
Visit node BRB and remove it from the graph.
Nodes with 0 in-degree: [GKB, ENC].
Visit node GKB and remove it from the graph.
Nodes with 0 in-degree: [ENC].
Visit node ENC and remove it from the graph.
So the result of topological sorting is ","('[[JJL, MFC, DVP, MOZ, BRB, GKB, ENC], [JJL, MFC, DVP, MOZ, ENC, BRB, GKB], [JJL, MFC, ENC, BRB, MOZ, GKB, DVP], [JJL, MFC, GKB, ENC, DVP, MOZ, BRB]]',)",0,168
topological_sort,"[(MII, FWH), (FWH, IYU), (TLO, FWH), (TLO, HOV), (HOV, MII), (HOV, FWH)]","{MII: [FWH],
FWH: [IYU],
IYU: [],
TLO: [FWH, HOV],
HOV: [MII, FWH]}","Node MII is connected to node FWH.
Node FWH is connected to node IYU.
Node TLO is connected to nodes FWH, HOV.
Node HOV is connected to nodes MII, FWH.","[TLO, IYU, FWH, HOV, MII]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TLO, HOV, MII, FWH, IYU]","Let's solve it step by step.
Nodes with 0 in-degree: [TLO].
Visit node TLO and remove it from the graph.
Nodes with 0 in-degree: [HOV].
Visit node HOV and remove it from the graph.
Nodes with 0 in-degree: [MII].
Visit node MII and remove it from the graph.
Nodes with 0 in-degree: [FWH].
Visit node FWH and remove it from the graph.
Nodes with 0 in-degree: [IYU].
Visit node IYU and remove it from the graph.
So the result of topological sorting is ","('[[TLO, MII, HOV, FWH, IYU], [TLO, HOV, IYU, FWH, MII], [TLO, IYU, HOV, MII, FWH], [TLO, HOV, MII, FWH, IYU]]',)",3,169
topological_sort,"[(WZL, KJT), (WZL, CBK), (WZL, DTB), (KJT, DTB), (CBK, DTB), (DTB, SGU), (PYU, SGU), (PYU, KJT), (PYU, DTB)]","{WZL: [KJT, CBK, DTB],
KJT: [DTB],
CBK: [DTB],
DTB: [SGU],
SGU: [],
PYU: [SGU, KJT, DTB]}","Node WZL is connected to nodes KJT, CBK, DTB.
Node KJT is connected to node DTB.
Node CBK is connected to node DTB.
Node DTB is connected to node SGU.
Node PYU is connected to nodes SGU, KJT, DTB.","[WZL, PYU, DTB, KJT, CBK, SGU]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WZL, PYU, CBK, KJT, DTB, SGU]","Let's solve it step by step.
Nodes with 0 in-degree: [WZL, PYU].
Visit node WZL and remove it from the graph.
Nodes with 0 in-degree: [PYU, CBK].
Visit node PYU and remove it from the graph.
Nodes with 0 in-degree: [CBK, KJT].
Visit node CBK and remove it from the graph.
Nodes with 0 in-degree: [KJT].
Visit node KJT and remove it from the graph.
Nodes with 0 in-degree: [DTB].
Visit node DTB and remove it from the graph.
Nodes with 0 in-degree: [SGU].
Visit node SGU and remove it from the graph.
So the result of topological sorting is ","('[[WZL, CBK, PYU, SGU, DTB, KJT], [WZL, PYU, DTB, SGU, CBK, KJT], [WZL, PYU, CBK, KJT, SGU, DTB], [WZL, PYU, CBK, KJT, DTB, SGU]]',)",3,170
topological_sort,"[(AQP, OPH), (CZR, OPH), (CZR, DND), (CZR, PFT), (DND, AQP), (DND, ACX), (DND, SBV), (PFT, OPH), (PFT, DND), (PFT, AQP), (PFT, ACX), (ACX, SBV)]","{AQP: [OPH],
OPH: [],
CZR: [OPH, DND, PFT],
DND: [AQP, ACX, SBV],
PFT: [OPH, DND, AQP, ACX],
ACX: [SBV],
SBV: []}","Node AQP is connected to node OPH.
Node CZR is connected to nodes OPH, DND, PFT.
Node DND is connected to nodes AQP, ACX, SBV.
Node PFT is connected to nodes OPH, DND, AQP, ACX.
Node ACX is connected to node SBV.","[CZR, DND, PFT, ACX, AQP, SBV, OPH]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CZR, PFT, DND, AQP, ACX, OPH, SBV]","Let's solve it step by step.
Nodes with 0 in-degree: [CZR].
Visit node CZR and remove it from the graph.
Nodes with 0 in-degree: [PFT].
Visit node PFT and remove it from the graph.
Nodes with 0 in-degree: [DND].
Visit node DND and remove it from the graph.
Nodes with 0 in-degree: [AQP, ACX].
Visit node AQP and remove it from the graph.
Nodes with 0 in-degree: [ACX, OPH].
Visit node ACX and remove it from the graph.
Nodes with 0 in-degree: [OPH, SBV].
Visit node OPH and remove it from the graph.
Nodes with 0 in-degree: [SBV].
Visit node SBV and remove it from the graph.
So the result of topological sorting is ","('[[CZR, PFT, DND, AQP, ACX, OPH, SBV], [CZR, PFT, OPH, SBV, DND, AQP, ACX], [CZR, AQP, OPH, ACX, SBV, PFT, DND], [CZR, PFT, DND, OPH, ACX, SBV, AQP]]',)",0,171
topological_sort,"[(BMI, RGP), (BMI, POD), (MQJ, BMI), (MQJ, RGP), (GXB, MQJ), (GXB, BMI), (RZB, POD)]","{BMI: [RGP, POD],
RGP: [],
POD: [],
MQJ: [BMI, RGP],
GXB: [MQJ, BMI],
RZB: [POD]}","Node BMI is connected to nodes RGP, POD.
Node MQJ is connected to nodes BMI, RGP.
Node GXB is connected to nodes MQJ, BMI.
Node RZB is connected to node POD.","[BMI, RGP, POD, GXB, RZB, MQJ]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GXB, RZB, MQJ, BMI, RGP, POD]","Let's solve it step by step.
Nodes with 0 in-degree: [GXB, RZB].
Visit node GXB and remove it from the graph.
Nodes with 0 in-degree: [RZB, MQJ].
Visit node RZB and remove it from the graph.
Nodes with 0 in-degree: [MQJ].
Visit node MQJ and remove it from the graph.
Nodes with 0 in-degree: [BMI].
Visit node BMI and remove it from the graph.
Nodes with 0 in-degree: [RGP, POD].
Visit node RGP and remove it from the graph.
Nodes with 0 in-degree: [POD].
Visit node POD and remove it from the graph.
So the result of topological sorting is ","('[[GXB, RZB, MQJ, BMI, RGP, POD], [GXB, RZB, RGP, POD, MQJ, BMI], [GXB, RZB, MQJ, POD, BMI, RGP], [GXB, MQJ, BMI, POD, RGP, RZB]]',)",0,172
topological_sort,"[(FDA, QOM), (FDA, VVZ), (QOM, DNR), (QOM, VZP), (QOM, VVZ), (VVZ, VZP)]","{FDA: [QOM, VVZ],
QOM: [DNR, VZP, VVZ],
VVZ: [VZP],
DNR: [],
VZP: []}","Node FDA is connected to nodes QOM, VVZ.
Node QOM is connected to nodes DNR, VZP, VVZ.
Node VVZ is connected to node VZP.","[VVZ, DNR, VZP, QOM, FDA]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FDA, QOM, DNR, VVZ, VZP]","Let's solve it step by step.
Nodes with 0 in-degree: [FDA].
Visit node FDA and remove it from the graph.
Nodes with 0 in-degree: [QOM].
Visit node QOM and remove it from the graph.
Nodes with 0 in-degree: [DNR, VVZ].
Visit node DNR and remove it from the graph.
Nodes with 0 in-degree: [VVZ].
Visit node VVZ and remove it from the graph.
Nodes with 0 in-degree: [VZP].
Visit node VZP and remove it from the graph.
So the result of topological sorting is ","('[[FDA, VZP, QOM, DNR, VVZ], [FDA, QOM, VVZ, VZP, DNR], [FDA, QOM, DNR, VVZ, VZP], [FDA, VVZ, QOM, VZP, DNR]]',)",2,173
topological_sort,"[(ZXH, ZBZ), (ZBZ, ZOW), (ZBZ, XCB), (ZOW, PJD), (ZOW, ODJ), (ZOW, XCB), (XCB, PJD), (XCB, ODJ)]","{ZXH: [ZBZ],
ZBZ: [ZOW, XCB],
ZOW: [PJD, ODJ, XCB],
XCB: [PJD, ODJ],
PJD: [],
ODJ: []}","Node ZXH is connected to node ZBZ.
Node ZBZ is connected to nodes ZOW, XCB.
Node ZOW is connected to nodes PJD, ODJ, XCB.
Node XCB is connected to nodes PJD, ODJ.","[ZBZ, ZXH, PJD, ZOW, XCB, ODJ]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZXH, ZBZ, ZOW, XCB, PJD, ODJ]","Let's solve it step by step.
Nodes with 0 in-degree: [ZXH].
Visit node ZXH and remove it from the graph.
Nodes with 0 in-degree: [ZBZ].
Visit node ZBZ and remove it from the graph.
Nodes with 0 in-degree: [ZOW].
Visit node ZOW and remove it from the graph.
Nodes with 0 in-degree: [XCB].
Visit node XCB and remove it from the graph.
Nodes with 0 in-degree: [PJD, ODJ].
Visit node PJD and remove it from the graph.
Nodes with 0 in-degree: [ODJ].
Visit node ODJ and remove it from the graph.
So the result of topological sorting is ","('[[ZXH, ODJ, ZOW, PJD, XCB, ZBZ], [ZXH, ZBZ, ZOW, ODJ, XCB, PJD], [ZXH, ZBZ, PJD, ODJ, ZOW, XCB], [ZXH, ZBZ, ZOW, XCB, PJD, ODJ]]',)",3,174
topological_sort,"[(WAK, JEW), (WAK, KDX), (JEW, JSJ), (JEW, UKV), (KDX, RFB), (KDX, JEW), (KDX, UKV), (UKV, EEE), (RFB, JSJ), (RFB, JEW)]","{WAK: [JEW, KDX],
JEW: [JSJ, UKV],
KDX: [RFB, JEW, UKV],
JSJ: [],
UKV: [EEE],
RFB: [JSJ, JEW],
EEE: []}","Node WAK is connected to nodes JEW, KDX.
Node JEW is connected to nodes JSJ, UKV.
Node KDX is connected to nodes RFB, JEW, UKV.
Node UKV is connected to node EEE.
Node RFB is connected to nodes JSJ, JEW.","[JSJ, EEE, WAK, UKV, RFB, JEW, KDX]",7,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WAK, KDX, RFB, JEW, JSJ, UKV, EEE]","Let's solve it step by step.
Nodes with 0 in-degree: [WAK].
Visit node WAK and remove it from the graph.
Nodes with 0 in-degree: [KDX].
Visit node KDX and remove it from the graph.
Nodes with 0 in-degree: [RFB].
Visit node RFB and remove it from the graph.
Nodes with 0 in-degree: [JEW].
Visit node JEW and remove it from the graph.
Nodes with 0 in-degree: [JSJ, UKV].
Visit node JSJ and remove it from the graph.
Nodes with 0 in-degree: [UKV].
Visit node UKV and remove it from the graph.
Nodes with 0 in-degree: [EEE].
Visit node EEE and remove it from the graph.
So the result of topological sorting is ","('[[WAK, KDX, RFB, UKV, EEE, JSJ, JEW], [WAK, JSJ, KDX, UKV, JEW, EEE, RFB], [WAK, KDX, UKV, EEE, RFB, JEW, JSJ], [WAK, KDX, RFB, JEW, JSJ, UKV, EEE]]',)",3,175
topological_sort,"[(ANZ, GLW), (ANZ, OKD), (ANZ, TGK), (ANZ, DEM), (GLW, EOR), (OKD, EOR), (OKD, DEM), (TGK, EOR), (TGK, GLW), (DEM, GLW), (DEM, EOR), (VKK, ANZ), (VKK, GLW)]","{ANZ: [GLW, OKD, TGK, DEM],
GLW: [EOR],
OKD: [EOR, DEM],
TGK: [EOR, GLW],
DEM: [GLW, EOR],
EOR: [],
VKK: [ANZ, GLW]}","Node ANZ is connected to nodes GLW, OKD, TGK, DEM.
Node GLW is connected to node EOR.
Node OKD is connected to nodes EOR, DEM.
Node TGK is connected to nodes EOR, GLW.
Node DEM is connected to nodes GLW, EOR.
Node VKK is connected to nodes ANZ, GLW.","[DEM, ANZ, VKK, TGK, EOR, GLW, OKD]",7,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VKK, ANZ, OKD, TGK, DEM, GLW, EOR]","Let's solve it step by step.
Nodes with 0 in-degree: [VKK].
Visit node VKK and remove it from the graph.
Nodes with 0 in-degree: [ANZ].
Visit node ANZ and remove it from the graph.
Nodes with 0 in-degree: [OKD, TGK].
Visit node OKD and remove it from the graph.
Nodes with 0 in-degree: [TGK, DEM].
Visit node TGK and remove it from the graph.
Nodes with 0 in-degree: [DEM].
Visit node DEM and remove it from the graph.
Nodes with 0 in-degree: [GLW].
Visit node GLW and remove it from the graph.
Nodes with 0 in-degree: [EOR].
Visit node EOR and remove it from the graph.
So the result of topological sorting is ","('[[VKK, ANZ, OKD, DEM, EOR, GLW, TGK], [VKK, ANZ, GLW, EOR, OKD, TGK, DEM], [VKK, EOR, ANZ, DEM, OKD, TGK, GLW], [VKK, ANZ, OKD, TGK, DEM, GLW, EOR]]',)",3,176
topological_sort,"[(XDO, POY), (XDO, DCX), (XDO, DIE), (PEQ, DCX), (PEQ, DHI), (PEQ, XDO), (DHI, DCX), (DHI, POY)]","{XDO: [POY, DCX, DIE],
POY: [],
DCX: [],
DIE: [],
PEQ: [DCX, DHI, XDO],
DHI: [DCX, POY]}","Node XDO is connected to nodes POY, DCX, DIE.
Node PEQ is connected to nodes DCX, DHI, XDO.
Node DHI is connected to nodes DCX, POY.","[XDO, PEQ, DCX, POY, DHI, DIE]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PEQ, DHI, XDO, POY, DCX, DIE]","Let's solve it step by step.
Nodes with 0 in-degree: [PEQ].
Visit node PEQ and remove it from the graph.
Nodes with 0 in-degree: [DHI, XDO].
Visit node DHI and remove it from the graph.
Nodes with 0 in-degree: [XDO].
Visit node XDO and remove it from the graph.
Nodes with 0 in-degree: [POY, DCX, DIE].
Visit node POY and remove it from the graph.
Nodes with 0 in-degree: [DCX, DIE].
Visit node DCX and remove it from the graph.
Nodes with 0 in-degree: [DIE].
Visit node DIE and remove it from the graph.
So the result of topological sorting is ","('[[PEQ, DHI, DCX, DIE, XDO, POY], [PEQ, DCX, POY, DIE, XDO, DHI], [PEQ, DHI, XDO, POY, DCX, DIE], [PEQ, DHI, XDO, POY, DCX, DIE]]',)",3,177
topological_sort,"[(HWV, GIF), (HWV, TKS), (HWV, VMX), (TKS, VMX), (TKS, VBS), (VMX, GIF), (VBS, GIF)]","{HWV: [GIF, TKS, VMX],
GIF: [],
TKS: [VMX, VBS],
VMX: [GIF],
VBS: [GIF]}","Node HWV is connected to nodes GIF, TKS, VMX.
Node TKS is connected to nodes VMX, VBS.
Node VMX is connected to node GIF.
Node VBS is connected to node GIF.","[HWV, GIF, VBS, TKS, VMX]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HWV, TKS, VMX, VBS, GIF]","Let's solve it step by step.
Nodes with 0 in-degree: [HWV].
Visit node HWV and remove it from the graph.
Nodes with 0 in-degree: [TKS].
Visit node TKS and remove it from the graph.
Nodes with 0 in-degree: [VMX, VBS].
Visit node VMX and remove it from the graph.
Nodes with 0 in-degree: [VBS].
Visit node VBS and remove it from the graph.
Nodes with 0 in-degree: [GIF].
Visit node GIF and remove it from the graph.
So the result of topological sorting is ","('[[HWV, GIF, TKS, VMX, VBS], [HWV, GIF, VBS, VMX, TKS], [HWV, TKS, VBS, VMX, GIF], [HWV, TKS, VMX, VBS, GIF]]',)",3,178
topological_sort,"[(XUL, SYB), (XUL, MMN), (XUL, LHC), (XUL, ZPJ), (MMN, ZPJ), (MMN, SYB), (LHC, SYB), (LHC, MMN), (ZPJ, SYB), (EFH, XUL), (EFH, MMN), (EFH, LHC)]","{XUL: [SYB, MMN, LHC, ZPJ],
SYB: [],
MMN: [ZPJ, SYB],
LHC: [SYB, MMN],
ZPJ: [SYB],
EFH: [XUL, MMN, LHC]}","Node XUL is connected to nodes SYB, MMN, LHC, ZPJ.
Node MMN is connected to nodes ZPJ, SYB.
Node LHC is connected to nodes SYB, MMN.
Node ZPJ is connected to node SYB.
Node EFH is connected to nodes XUL, MMN, LHC.","[EFH, SYB, XUL, MMN, LHC, ZPJ]",6,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EFH, XUL, LHC, MMN, ZPJ, SYB]","Let's solve it step by step.
Nodes with 0 in-degree: [EFH].
Visit node EFH and remove it from the graph.
Nodes with 0 in-degree: [XUL].
Visit node XUL and remove it from the graph.
Nodes with 0 in-degree: [LHC].
Visit node LHC and remove it from the graph.
Nodes with 0 in-degree: [MMN].
Visit node MMN and remove it from the graph.
Nodes with 0 in-degree: [ZPJ].
Visit node ZPJ and remove it from the graph.
Nodes with 0 in-degree: [SYB].
Visit node SYB and remove it from the graph.
So the result of topological sorting is ","('[[EFH, XUL, ZPJ, SYB, LHC, MMN], [EFH, ZPJ, MMN, LHC, SYB, XUL], [EFH, XUL, LHC, SYB, ZPJ, MMN], [EFH, XUL, LHC, MMN, ZPJ, SYB]]',)",3,179
topological_sort,"[(QYG, QFV), (QYG, KZL), (QYG, PND), (QYG, BZD), (QFV, BZD), (KZL, QFV), (KZL, BZD)]","{QYG: [QFV, KZL, PND, BZD],
QFV: [BZD],
KZL: [QFV, BZD],
PND: [],
BZD: []}","Node QYG is connected to nodes QFV, KZL, PND, BZD.
Node QFV is connected to node BZD.
Node KZL is connected to nodes QFV, BZD.","[KZL, PND, QFV, BZD, QYG]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QYG, KZL, PND, QFV, BZD]","Let's solve it step by step.
Nodes with 0 in-degree: [QYG].
Visit node QYG and remove it from the graph.
Nodes with 0 in-degree: [KZL, PND].
Visit node KZL and remove it from the graph.
Nodes with 0 in-degree: [PND, QFV].
Visit node PND and remove it from the graph.
Nodes with 0 in-degree: [QFV].
Visit node QFV and remove it from the graph.
Nodes with 0 in-degree: [BZD].
Visit node BZD and remove it from the graph.
So the result of topological sorting is ","('[[QYG, KZL, PND, BZD, QFV], [QYG, BZD, KZL, PND, QFV], [QYG, PND, BZD, KZL, QFV], [QYG, KZL, PND, QFV, BZD]]',)",3,180
topological_sort,"[(QOI, WTM), (QOI, XDR), (XDR, WTM), (WEN, QOI), (AIT, WEN), (AIT, XDR)]","{QOI: [WTM, XDR],
WTM: [],
XDR: [WTM],
WEN: [QOI],
AIT: [WEN, XDR]}","Node QOI is connected to nodes WTM, XDR.
Node XDR is connected to node WTM.
Node WEN is connected to node QOI.
Node AIT is connected to nodes WEN, XDR.","[AIT, XDR, WTM, QOI, WEN]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[AIT, WEN, QOI, XDR, WTM]","Let's solve it step by step.
Nodes with 0 in-degree: [AIT].
Visit node AIT and remove it from the graph.
Nodes with 0 in-degree: [WEN].
Visit node WEN and remove it from the graph.
Nodes with 0 in-degree: [QOI].
Visit node QOI and remove it from the graph.
Nodes with 0 in-degree: [XDR].
Visit node XDR and remove it from the graph.
Nodes with 0 in-degree: [WTM].
Visit node WTM and remove it from the graph.
So the result of topological sorting is ","('[[AIT, WTM, WEN, QOI, XDR], [AIT, XDR, WTM, QOI, WEN], [AIT, WEN, WTM, XDR, QOI], [AIT, WEN, QOI, XDR, WTM]]',)",3,181
topological_sort,"[(KFM, GME), (NIE, KFM), (NIE, GME), (SXC, NIE), (OBT, KFM), (OBT, SXC), (OBT, GME)]","{KFM: [GME],
GME: [],
NIE: [KFM, GME],
SXC: [NIE],
OBT: [KFM, SXC, GME]}","Node KFM is connected to node GME.
Node NIE is connected to nodes KFM, GME.
Node SXC is connected to node NIE.
Node OBT is connected to nodes KFM, SXC, GME.","[OBT, SXC, GME, NIE, KFM]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OBT, SXC, NIE, KFM, GME]","Let's solve it step by step.
Nodes with 0 in-degree: [OBT].
Visit node OBT and remove it from the graph.
Nodes with 0 in-degree: [SXC].
Visit node SXC and remove it from the graph.
Nodes with 0 in-degree: [NIE].
Visit node NIE and remove it from the graph.
Nodes with 0 in-degree: [KFM].
Visit node KFM and remove it from the graph.
Nodes with 0 in-degree: [GME].
Visit node GME and remove it from the graph.
So the result of topological sorting is ","('[[OBT, SXC, NIE, KFM, GME], [OBT, SXC, NIE, KFM, GME], [OBT, GME, SXC, NIE, KFM], [OBT, KFM, NIE, GME, SXC]]',)",0,182
topological_sort,"[(ZWM, DCN), (DCN, SPJ), (DCN, LKJ), (SPJ, LKJ), (SPJ, INK), (INK, LKJ), (INK, GDI), (BKO, DCN), (BKO, GDI)]","{ZWM: [DCN],
DCN: [SPJ, LKJ],
SPJ: [LKJ, INK],
LKJ: [],
INK: [LKJ, GDI],
GDI: [],
BKO: [DCN, GDI]}","Node ZWM is connected to node DCN.
Node DCN is connected to nodes SPJ, LKJ.
Node SPJ is connected to nodes LKJ, INK.
Node INK is connected to nodes LKJ, GDI.
Node BKO is connected to nodes DCN, GDI.","[ZWM, DCN, LKJ, SPJ, GDI, BKO, INK]",7,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZWM, BKO, DCN, SPJ, INK, LKJ, GDI]","Let's solve it step by step.
Nodes with 0 in-degree: [ZWM, BKO].
Visit node ZWM and remove it from the graph.
Nodes with 0 in-degree: [BKO].
Visit node BKO and remove it from the graph.
Nodes with 0 in-degree: [DCN].
Visit node DCN and remove it from the graph.
Nodes with 0 in-degree: [SPJ].
Visit node SPJ and remove it from the graph.
Nodes with 0 in-degree: [INK].
Visit node INK and remove it from the graph.
Nodes with 0 in-degree: [LKJ, GDI].
Visit node LKJ and remove it from the graph.
Nodes with 0 in-degree: [GDI].
Visit node GDI and remove it from the graph.
So the result of topological sorting is ","('[[ZWM, BKO, DCN, LKJ, SPJ, INK, GDI], [ZWM, GDI, BKO, SPJ, DCN, LKJ, INK], [ZWM, BKO, DCN, SPJ, INK, LKJ, GDI], [ZWM, BKO, LKJ, GDI, DCN, SPJ, INK]]',)",2,183
topological_sort,"[(PXS, RYW), (PXS, ACO), (RYW, ACO), (RYW, FVC), (ACO, NNX), (FVC, ACO), (YJK, RYW), (YJK, NNX), (YJK, FVC)]","{PXS: [RYW, ACO],
RYW: [ACO, FVC],
ACO: [NNX],
FVC: [ACO],
NNX: [],
YJK: [RYW, NNX, FVC]}","Node PXS is connected to nodes RYW, ACO.
Node RYW is connected to nodes ACO, FVC.
Node ACO is connected to node NNX.
Node FVC is connected to node ACO.
Node YJK is connected to nodes RYW, NNX, FVC.","[FVC, NNX, ACO, RYW, YJK, PXS]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PXS, YJK, RYW, FVC, ACO, NNX]","Let's solve it step by step.
Nodes with 0 in-degree: [PXS, YJK].
Visit node PXS and remove it from the graph.
Nodes with 0 in-degree: [YJK].
Visit node YJK and remove it from the graph.
Nodes with 0 in-degree: [RYW].
Visit node RYW and remove it from the graph.
Nodes with 0 in-degree: [FVC].
Visit node FVC and remove it from the graph.
Nodes with 0 in-degree: [ACO].
Visit node ACO and remove it from the graph.
Nodes with 0 in-degree: [NNX].
Visit node NNX and remove it from the graph.
So the result of topological sorting is ","('[[PXS, YJK, RYW, FVC, ACO, NNX], [PXS, YJK, RYW, FVC, ACO, NNX], [PXS, YJK, ACO, NNX, RYW, FVC], [PXS, FVC, RYW, YJK, NNX, ACO]]',)",1,184
topological_sort,"[(IGV, KJD), (IGV, BAQ), (IGV, BIV), (KJD, BAQ), (KJD, CIX), (BAQ, HPC), (BAQ, CIX), (BIV, BAQ), (BIV, HPC)]","{IGV: [KJD, BAQ, BIV],
KJD: [BAQ, CIX],
BAQ: [HPC, CIX],
BIV: [BAQ, HPC],
CIX: [],
HPC: []}","Node IGV is connected to nodes KJD, BAQ, BIV.
Node KJD is connected to nodes BAQ, CIX.
Node BAQ is connected to nodes HPC, CIX.
Node BIV is connected to nodes BAQ, HPC.","[BAQ, HPC, KJD, BIV, CIX, IGV]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IGV, KJD, BIV, BAQ, HPC, CIX]","Let's solve it step by step.
Nodes with 0 in-degree: [IGV].
Visit node IGV and remove it from the graph.
Nodes with 0 in-degree: [KJD, BIV].
Visit node KJD and remove it from the graph.
Nodes with 0 in-degree: [BIV].
Visit node BIV and remove it from the graph.
Nodes with 0 in-degree: [BAQ].
Visit node BAQ and remove it from the graph.
Nodes with 0 in-degree: [HPC, CIX].
Visit node HPC and remove it from the graph.
Nodes with 0 in-degree: [CIX].
Visit node CIX and remove it from the graph.
So the result of topological sorting is ","('[[IGV, BAQ, CIX, HPC, BIV, KJD], [IGV, KJD, BIV, BAQ, HPC, CIX], [IGV, KJD, BIV, CIX, HPC, BAQ], [IGV, KJD, HPC, CIX, BIV, BAQ]]',)",1,185
topological_sort,"[(WCM, RBN), (WCM, CBQ), (RBN, CBQ), (PNI, CBQ), (PNI, SCC), (SCC, WCM), (FVJ, PNI)]","{WCM: [RBN, CBQ],
RBN: [CBQ],
CBQ: [],
PNI: [CBQ, SCC],
SCC: [WCM],
FVJ: [PNI]}","Node WCM is connected to nodes RBN, CBQ.
Node RBN is connected to node CBQ.
Node PNI is connected to nodes CBQ, SCC.
Node SCC is connected to node WCM.
Node FVJ is connected to node PNI.","[SCC, WCM, PNI, FVJ, RBN, CBQ]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FVJ, PNI, SCC, WCM, RBN, CBQ]","Let's solve it step by step.
Nodes with 0 in-degree: [FVJ].
Visit node FVJ and remove it from the graph.
Nodes with 0 in-degree: [PNI].
Visit node PNI and remove it from the graph.
Nodes with 0 in-degree: [SCC].
Visit node SCC and remove it from the graph.
Nodes with 0 in-degree: [WCM].
Visit node WCM and remove it from the graph.
Nodes with 0 in-degree: [RBN].
Visit node RBN and remove it from the graph.
Nodes with 0 in-degree: [CBQ].
Visit node CBQ and remove it from the graph.
So the result of topological sorting is ","('[[FVJ, PNI, SCC, CBQ, RBN, WCM], [FVJ, PNI, SCC, WCM, RBN, CBQ], [FVJ, PNI, RBN, CBQ, SCC, WCM], [FVJ, PNI, WCM, RBN, CBQ, SCC]]',)",1,186
topological_sort,"[(THB, RVN), (MYV, LKY), (LKY, CSX), (CSX, THB), (EOS, LKY), (EOS, THB)]","{THB: [RVN],
RVN: [],
MYV: [LKY],
LKY: [CSX],
CSX: [THB],
EOS: [LKY, THB]}","Node THB is connected to node RVN.
Node MYV is connected to node LKY.
Node LKY is connected to node CSX.
Node CSX is connected to node THB.
Node EOS is connected to nodes LKY, THB.","[EOS, THB, RVN, LKY, MYV, CSX]",6,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MYV, EOS, LKY, CSX, THB, RVN]","Let's solve it step by step.
Nodes with 0 in-degree: [MYV, EOS].
Visit node MYV and remove it from the graph.
Nodes with 0 in-degree: [EOS].
Visit node EOS and remove it from the graph.
Nodes with 0 in-degree: [LKY].
Visit node LKY and remove it from the graph.
Nodes with 0 in-degree: [CSX].
Visit node CSX and remove it from the graph.
Nodes with 0 in-degree: [THB].
Visit node THB and remove it from the graph.
Nodes with 0 in-degree: [RVN].
Visit node RVN and remove it from the graph.
So the result of topological sorting is ","('[[MYV, EOS, THB, RVN, LKY, CSX], [MYV, EOS, LKY, CSX, THB, RVN], [MYV, LKY, EOS, RVN, THB, CSX], [MYV, EOS, LKY, THB, RVN, CSX]]',)",1,187
topological_sort,"[(QXP, PQB), (QXP, AVK), (PQB, BRO), (PQB, NAX), (AVK, PQB), (XGE, NAX), (XGE, PQB), (XGE, QXP), (XGE, BRO), (XGE, AVK)]","{QXP: [PQB, AVK],
PQB: [BRO, NAX],
AVK: [PQB],
BRO: [],
NAX: [],
XGE: [NAX, PQB, QXP, BRO, AVK]}","Node QXP is connected to nodes PQB, AVK.
Node PQB is connected to nodes BRO, NAX.
Node AVK is connected to node PQB.
Node XGE is connected to nodes NAX, PQB, QXP, BRO, AVK.","[QXP, BRO, NAX, XGE, PQB, AVK]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XGE, QXP, AVK, PQB, BRO, NAX]","Let's solve it step by step.
Nodes with 0 in-degree: [XGE].
Visit node XGE and remove it from the graph.
Nodes with 0 in-degree: [QXP].
Visit node QXP and remove it from the graph.
Nodes with 0 in-degree: [AVK].
Visit node AVK and remove it from the graph.
Nodes with 0 in-degree: [PQB].
Visit node PQB and remove it from the graph.
Nodes with 0 in-degree: [BRO, NAX].
Visit node BRO and remove it from the graph.
Nodes with 0 in-degree: [NAX].
Visit node NAX and remove it from the graph.
So the result of topological sorting is ","('[[XGE, NAX, PQB, QXP, AVK, BRO], [XGE, QXP, AVK, PQB, BRO, NAX], [XGE, QXP, BRO, NAX, AVK, PQB], [XGE, QXP, AVK, PQB, BRO, NAX]]',)",3,188
topological_sort,"[(DZK, HAY), (UXE, JKU), (JKU, HAY), (QPY, UXE), (QPY, DZK)]","{DZK: [HAY],
HAY: [],
UXE: [JKU],
JKU: [HAY],
QPY: [UXE, DZK]}","Node DZK is connected to node HAY.
Node UXE is connected to node JKU.
Node JKU is connected to node HAY.
Node QPY is connected to nodes UXE, DZK.","[HAY, DZK, UXE, QPY, JKU]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QPY, UXE, DZK, JKU, HAY]","Let's solve it step by step.
Nodes with 0 in-degree: [QPY].
Visit node QPY and remove it from the graph.
Nodes with 0 in-degree: [UXE, DZK].
Visit node UXE and remove it from the graph.
Nodes with 0 in-degree: [DZK, JKU].
Visit node DZK and remove it from the graph.
Nodes with 0 in-degree: [JKU].
Visit node JKU and remove it from the graph.
Nodes with 0 in-degree: [HAY].
Visit node HAY and remove it from the graph.
So the result of topological sorting is ","('[[QPY, HAY, UXE, DZK, JKU], [QPY, HAY, UXE, JKU, DZK], [QPY, UXE, DZK, JKU, HAY], [QPY, UXE, DZK, JKU, HAY]]',)",2,189
topological_sort,"[(GSD, HZA), (GSD, VUX), (GSD, JLT), (GSD, HMP), (HZA, JLT), (JLT, HMP), (JLT, VUX), (QQU, JLT), (QQU, VUX), (QQU, GSD)]","{GSD: [HZA, VUX, JLT, HMP],
HZA: [JLT],
VUX: [],
JLT: [HMP, VUX],
HMP: [],
QQU: [JLT, VUX, GSD]}","Node GSD is connected to nodes HZA, VUX, JLT, HMP.
Node HZA is connected to node JLT.
Node JLT is connected to nodes HMP, VUX.
Node QQU is connected to nodes JLT, VUX, GSD.","[QQU, HZA, VUX, GSD, HMP, JLT]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QQU, GSD, HZA, JLT, HMP, VUX]","Let's solve it step by step.
Nodes with 0 in-degree: [QQU].
Visit node QQU and remove it from the graph.
Nodes with 0 in-degree: [GSD].
Visit node GSD and remove it from the graph.
Nodes with 0 in-degree: [HZA].
Visit node HZA and remove it from the graph.
Nodes with 0 in-degree: [JLT].
Visit node JLT and remove it from the graph.
Nodes with 0 in-degree: [HMP, VUX].
Visit node HMP and remove it from the graph.
Nodes with 0 in-degree: [VUX].
Visit node VUX and remove it from the graph.
So the result of topological sorting is ","('[[QQU, GSD, HMP, VUX, HZA, JLT], [QQU, GSD, HZA, JLT, HMP, VUX], [QQU, HZA, HMP, VUX, JLT, GSD], [QQU, GSD, HZA, HMP, JLT, VUX]]',)",1,190
topological_sort,"[(NLD, NUX), (ILO, NLD), (RTO, ILO), (GXJ, RTO), (GXJ, NLD), (FLC, NUX), (FLC, RTO)]","{NLD: [NUX],
NUX: [],
ILO: [NLD],
RTO: [ILO],
GXJ: [RTO, NLD],
FLC: [NUX, RTO]}","Node NLD is connected to node NUX.
Node ILO is connected to node NLD.
Node RTO is connected to node ILO.
Node GXJ is connected to nodes RTO, NLD.
Node FLC is connected to nodes NUX, RTO.","[NLD, RTO, GXJ, NUX, FLC, ILO]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GXJ, FLC, RTO, ILO, NLD, NUX]","Let's solve it step by step.
Nodes with 0 in-degree: [GXJ, FLC].
Visit node GXJ and remove it from the graph.
Nodes with 0 in-degree: [FLC].
Visit node FLC and remove it from the graph.
Nodes with 0 in-degree: [RTO].
Visit node RTO and remove it from the graph.
Nodes with 0 in-degree: [ILO].
Visit node ILO and remove it from the graph.
Nodes with 0 in-degree: [NLD].
Visit node NLD and remove it from the graph.
Nodes with 0 in-degree: [NUX].
Visit node NUX and remove it from the graph.
So the result of topological sorting is ","('[[GXJ, FLC, NLD, NUX, RTO, ILO], [GXJ, FLC, RTO, ILO, NLD, NUX], [GXJ, NUX, RTO, ILO, FLC, NLD], [GXJ, FLC, RTO, NUX, NLD, ILO]]',)",1,191
topological_sort,"[(WAW, ZWQ), (XDS, ZWQ), (XDS, WAW), (XDS, NOM), (DKC, ZKE), (DKC, XDS), (DKC, ZWQ), (ZKE, WAW), (ZKE, NOM)]","{WAW: [ZWQ],
ZWQ: [],
XDS: [ZWQ, WAW, NOM],
NOM: [],
DKC: [ZKE, XDS, ZWQ],
ZKE: [WAW, NOM]}","Node WAW is connected to node ZWQ.
Node XDS is connected to nodes ZWQ, WAW, NOM.
Node DKC is connected to nodes ZKE, XDS, ZWQ.
Node ZKE is connected to nodes WAW, NOM.","[ZWQ, DKC, ZKE, WAW, NOM, XDS]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DKC, ZKE, XDS, WAW, NOM, ZWQ]","Let's solve it step by step.
Nodes with 0 in-degree: [DKC].
Visit node DKC and remove it from the graph.
Nodes with 0 in-degree: [ZKE, XDS].
Visit node ZKE and remove it from the graph.
Nodes with 0 in-degree: [XDS].
Visit node XDS and remove it from the graph.
Nodes with 0 in-degree: [WAW, NOM].
Visit node WAW and remove it from the graph.
Nodes with 0 in-degree: [NOM, ZWQ].
Visit node NOM and remove it from the graph.
Nodes with 0 in-degree: [ZWQ].
Visit node ZWQ and remove it from the graph.
So the result of topological sorting is ","('[[DKC, XDS, WAW, ZWQ, ZKE, NOM], [DKC, ZKE, NOM, ZWQ, XDS, WAW], [DKC, ZKE, XDS, WAW, NOM, ZWQ], [DKC, ZKE, XDS, WAW, NOM, ZWQ]]',)",3,192
topological_sort,"[(QXG, YWV), (QXG, GWI), (QXG, VGM), (YWV, GWI), (VGM, GWI), (ORL, YWV), (ORL, QXG), (XDG, GWI)]","{QXG: [YWV, GWI, VGM],
YWV: [GWI],
GWI: [],
VGM: [GWI],
ORL: [YWV, QXG],
XDG: [GWI]}","Node QXG is connected to nodes YWV, GWI, VGM.
Node YWV is connected to node GWI.
Node VGM is connected to node GWI.
Node ORL is connected to nodes YWV, QXG.
Node XDG is connected to node GWI.","[YWV, VGM, ORL, XDG, GWI, QXG]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ORL, XDG, QXG, YWV, VGM, GWI]","Let's solve it step by step.
Nodes with 0 in-degree: [ORL, XDG].
Visit node ORL and remove it from the graph.
Nodes with 0 in-degree: [XDG, QXG].
Visit node XDG and remove it from the graph.
Nodes with 0 in-degree: [QXG].
Visit node QXG and remove it from the graph.
Nodes with 0 in-degree: [YWV, VGM].
Visit node YWV and remove it from the graph.
Nodes with 0 in-degree: [VGM].
Visit node VGM and remove it from the graph.
Nodes with 0 in-degree: [GWI].
Visit node GWI and remove it from the graph.
So the result of topological sorting is ","('[[ORL, XDG, QXG, YWV, GWI, VGM], [ORL, XDG, QXG, GWI, VGM, YWV], [ORL, XDG, VGM, GWI, QXG, YWV], [ORL, XDG, QXG, YWV, VGM, GWI]]',)",3,193
topological_sort,"[(COM, LOB), (COM, XDI), (LOB, XDI), (XDI, VFR), (PIQ, LOB), (PIQ, XDI), (SZG, COM)]","{COM: [LOB, XDI],
LOB: [XDI],
XDI: [VFR],
PIQ: [LOB, XDI],
VFR: [],
SZG: [COM]}","Node COM is connected to nodes LOB, XDI.
Node LOB is connected to node XDI.
Node XDI is connected to node VFR.
Node PIQ is connected to nodes LOB, XDI.
Node SZG is connected to node COM.","[LOB, PIQ, COM, VFR, SZG, XDI]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PIQ, SZG, COM, LOB, XDI, VFR]","Let's solve it step by step.
Nodes with 0 in-degree: [PIQ, SZG].
Visit node PIQ and remove it from the graph.
Nodes with 0 in-degree: [SZG].
Visit node SZG and remove it from the graph.
Nodes with 0 in-degree: [COM].
Visit node COM and remove it from the graph.
Nodes with 0 in-degree: [LOB].
Visit node LOB and remove it from the graph.
Nodes with 0 in-degree: [XDI].
Visit node XDI and remove it from the graph.
Nodes with 0 in-degree: [VFR].
Visit node VFR and remove it from the graph.
So the result of topological sorting is ","('[[PIQ, SZG, COM, LOB, XDI, VFR], [PIQ, SZG, COM, LOB, XDI, VFR], [PIQ, SZG, XDI, VFR, LOB, COM], [PIQ, SZG, XDI, VFR, COM, LOB]]',)",0,194
topological_sort,"[(MTZ, VRK), (MTZ, JCL), (CEO, AMU), (CEO, BYP), (CEO, JCL), (AMU, MTZ), (BYP, MTZ)]","{MTZ: [VRK, JCL],
VRK: [],
JCL: [],
CEO: [AMU, BYP, JCL],
AMU: [MTZ],
BYP: [MTZ]}","Node MTZ is connected to nodes VRK, JCL.
Node CEO is connected to nodes AMU, BYP, JCL.
Node AMU is connected to node MTZ.
Node BYP is connected to node MTZ.","[VRK, JCL, CEO, AMU, BYP, MTZ]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CEO, AMU, BYP, MTZ, VRK, JCL]","Let's solve it step by step.
Nodes with 0 in-degree: [CEO].
Visit node CEO and remove it from the graph.
Nodes with 0 in-degree: [AMU, BYP].
Visit node AMU and remove it from the graph.
Nodes with 0 in-degree: [BYP].
Visit node BYP and remove it from the graph.
Nodes with 0 in-degree: [MTZ].
Visit node MTZ and remove it from the graph.
Nodes with 0 in-degree: [VRK, JCL].
Visit node VRK and remove it from the graph.
Nodes with 0 in-degree: [JCL].
Visit node JCL and remove it from the graph.
So the result of topological sorting is ","('[[CEO, BYP, VRK, JCL, MTZ, AMU], [CEO, AMU, BYP, MTZ, JCL, VRK], [CEO, AMU, VRK, JCL, BYP, MTZ], [CEO, AMU, BYP, MTZ, VRK, JCL]]',)",3,195
topological_sort,"[(ABM, MWR), (ABM, GFJ), (ABM, SQK), (MWR, GFJ), (MWR, KOT), (SQK, GFJ), (KOT, SQK)]","{ABM: [MWR, GFJ, SQK],
MWR: [GFJ, KOT],
GFJ: [],
SQK: [GFJ],
KOT: [SQK]}","Node ABM is connected to nodes MWR, GFJ, SQK.
Node MWR is connected to nodes GFJ, KOT.
Node SQK is connected to node GFJ.
Node KOT is connected to node SQK.","[MWR, SQK, ABM, KOT, GFJ]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ABM, MWR, KOT, SQK, GFJ]","Let's solve it step by step.
Nodes with 0 in-degree: [ABM].
Visit node ABM and remove it from the graph.
Nodes with 0 in-degree: [MWR].
Visit node MWR and remove it from the graph.
Nodes with 0 in-degree: [KOT].
Visit node KOT and remove it from the graph.
Nodes with 0 in-degree: [SQK].
Visit node SQK and remove it from the graph.
Nodes with 0 in-degree: [GFJ].
Visit node GFJ and remove it from the graph.
So the result of topological sorting is ","('[[ABM, MWR, KOT, SQK, GFJ], [ABM, GFJ, MWR, KOT, SQK], [ABM, MWR, GFJ, SQK, KOT], [ABM, MWR, KOT, SQK, GFJ]]',)",0,196
topological_sort,"[(FNM, KGR), (FNM, UZV), (KGR, EKS), (EKS, UZV), (EKS, TLY), (ELF, UZV), (ELF, TLY), (ELF, FNM), (UGN, FNM), (UGN, ELF), (UGN, TLY)]","{FNM: [KGR, UZV],
KGR: [EKS],
UZV: [],
EKS: [UZV, TLY],
TLY: [],
ELF: [UZV, TLY, FNM],
UGN: [FNM, ELF, TLY]}","Node FNM is connected to nodes KGR, UZV.
Node KGR is connected to node EKS.
Node EKS is connected to nodes UZV, TLY.
Node ELF is connected to nodes UZV, TLY, FNM.
Node UGN is connected to nodes FNM, ELF, TLY.","[EKS, UGN, UZV, ELF, KGR, TLY, FNM]",7,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UGN, ELF, FNM, KGR, EKS, UZV, TLY]","Let's solve it step by step.
Nodes with 0 in-degree: [UGN].
Visit node UGN and remove it from the graph.
Nodes with 0 in-degree: [ELF].
Visit node ELF and remove it from the graph.
Nodes with 0 in-degree: [FNM].
Visit node FNM and remove it from the graph.
Nodes with 0 in-degree: [KGR].
Visit node KGR and remove it from the graph.
Nodes with 0 in-degree: [EKS].
Visit node EKS and remove it from the graph.
Nodes with 0 in-degree: [UZV, TLY].
Visit node UZV and remove it from the graph.
Nodes with 0 in-degree: [TLY].
Visit node TLY and remove it from the graph.
So the result of topological sorting is ","('[[UGN, ELF, UZV, TLY, FNM, KGR, EKS], [UGN, ELF, FNM, KGR, EKS, UZV, TLY], [UGN, ELF, EKS, FNM, UZV, KGR, TLY], [UGN, ELF, FNM, KGR, UZV, EKS, TLY]]',)",1,197
topological_sort,"[(ELY, JPC), (ELY, FSF), (JPC, ICL), (ICL, KDV), (ICL, FSF), (OIV, JPC), (OIV, ELY), (FSY, FSF), (FSY, JPC), (FSY, OIV)]","{ELY: [JPC, FSF],
JPC: [ICL],
FSF: [],
ICL: [KDV, FSF],
KDV: [],
OIV: [JPC, ELY],
FSY: [FSF, JPC, OIV]}","Node ELY is connected to nodes JPC, FSF.
Node JPC is connected to node ICL.
Node ICL is connected to nodes KDV, FSF.
Node OIV is connected to nodes JPC, ELY.
Node FSY is connected to nodes FSF, JPC, OIV.","[FSY, JPC, ELY, OIV, KDV, FSF, ICL]",7,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FSY, OIV, ELY, JPC, ICL, KDV, FSF]","Let's solve it step by step.
Nodes with 0 in-degree: [FSY].
Visit node FSY and remove it from the graph.
Nodes with 0 in-degree: [OIV].
Visit node OIV and remove it from the graph.
Nodes with 0 in-degree: [ELY].
Visit node ELY and remove it from the graph.
Nodes with 0 in-degree: [JPC].
Visit node JPC and remove it from the graph.
Nodes with 0 in-degree: [ICL].
Visit node ICL and remove it from the graph.
Nodes with 0 in-degree: [KDV, FSF].
Visit node KDV and remove it from the graph.
Nodes with 0 in-degree: [FSF].
Visit node FSF and remove it from the graph.
So the result of topological sorting is ","('[[FSY, ICL, JPC, OIV, ELY, KDV, FSF], [FSY, OIV, ELY, KDV, ICL, FSF, JPC], [FSY, OIV, ELY, JPC, ICL, KDV, FSF], [FSY, OIV, KDV, FSF, ELY, JPC, ICL]]',)",2,198
topological_sort,"[(NYZ, JPG), (NYZ, KNT), (NYZ, BLE), (JPG, KNT), (JPG, BLE), (BLE, CGW), (BLE, KNT), (CGW, KNT)]","{NYZ: [JPG, KNT, BLE],
JPG: [KNT, BLE],
KNT: [],
BLE: [CGW, KNT],
CGW: [KNT]}","Node NYZ is connected to nodes JPG, KNT, BLE.
Node JPG is connected to nodes KNT, BLE.
Node BLE is connected to nodes CGW, KNT.
Node CGW is connected to node KNT.","[CGW, KNT, NYZ, BLE, JPG]",5,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[NYZ, JPG, BLE, CGW, KNT]","Let's solve it step by step.
Nodes with 0 in-degree: [NYZ].
Visit node NYZ and remove it from the graph.
Nodes with 0 in-degree: [JPG].
Visit node JPG and remove it from the graph.
Nodes with 0 in-degree: [BLE].
Visit node BLE and remove it from the graph.
Nodes with 0 in-degree: [CGW].
Visit node CGW and remove it from the graph.
Nodes with 0 in-degree: [KNT].
Visit node KNT and remove it from the graph.
So the result of topological sorting is ","('[[NYZ, KNT, JPG, BLE, CGW], [NYZ, JPG, BLE, CGW, KNT], [NYZ, JPG, KNT, CGW, BLE], [NYZ, CGW, JPG, KNT, BLE]]',)",1,199
topological_sort,"[(LAZ, TXO), (LAZ, PPW), (LAZ, QAX), (LAZ, ERY), (TXO, PPW), (QAX, PPW), (QAX, TXO), (ERY, TXO), (ERY, PPW), (RRL, LAZ), (RRL, QAX)]","{LAZ: [TXO, PPW, QAX, ERY],
TXO: [PPW],
PPW: [],
QAX: [PPW, TXO],
ERY: [TXO, PPW],
RRL: [LAZ, QAX]}","Node LAZ is connected to nodes TXO, PPW, QAX, ERY.
Node TXO is connected to node PPW.
Node QAX is connected to nodes PPW, TXO.
Node ERY is connected to nodes TXO, PPW.
Node RRL is connected to nodes LAZ, QAX.","[PPW, ERY, LAZ, TXO, QAX, RRL]",6,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RRL, LAZ, QAX, ERY, TXO, PPW]","Let's solve it step by step.
Nodes with 0 in-degree: [RRL].
Visit node RRL and remove it from the graph.
Nodes with 0 in-degree: [LAZ].
Visit node LAZ and remove it from the graph.
Nodes with 0 in-degree: [QAX, ERY].
Visit node QAX and remove it from the graph.
Nodes with 0 in-degree: [ERY].
Visit node ERY and remove it from the graph.
Nodes with 0 in-degree: [TXO].
Visit node TXO and remove it from the graph.
Nodes with 0 in-degree: [PPW].
Visit node PPW and remove it from the graph.
So the result of topological sorting is ","('[[RRL, PPW, ERY, TXO, LAZ, QAX], [RRL, LAZ, QAX, TXO, ERY, PPW], [RRL, LAZ, QAX, ERY, TXO, PPW], [RRL, LAZ, TXO, PPW, QAX, ERY]]',)",2,200
topological_sort,"[(ATL, IQB), (ATL, XDH), (ATL, RZD), (XDH, IQB), (RZD, XDH), (TKZ, RZD), (TKZ, ATL), (TKZ, XDH), (GYV, RZD), (GYV, TKZ), (GYV, ATL), (SYX, GYV), (SYX, IQB)]","{ATL: [IQB, XDH, RZD],
IQB: [],
XDH: [IQB],
RZD: [XDH],
TKZ: [RZD, ATL, XDH],
GYV: [RZD, TKZ, ATL],
SYX: [GYV, IQB]}","Node ATL is connected to nodes IQB, XDH, RZD.
Node XDH is connected to node IQB.
Node RZD is connected to node XDH.
Node TKZ is connected to nodes RZD, ATL, XDH.
Node GYV is connected to nodes RZD, TKZ, ATL.
Node SYX is connected to nodes GYV, IQB.","[SYX, IQB, TKZ, GYV, XDH, ATL, RZD]",7,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SYX, GYV, TKZ, ATL, RZD, XDH, IQB]","Let's solve it step by step.
Nodes with 0 in-degree: [SYX].
Visit node SYX and remove it from the graph.
Nodes with 0 in-degree: [GYV].
Visit node GYV and remove it from the graph.
Nodes with 0 in-degree: [TKZ].
Visit node TKZ and remove it from the graph.
Nodes with 0 in-degree: [ATL].
Visit node ATL and remove it from the graph.
Nodes with 0 in-degree: [RZD].
Visit node RZD and remove it from the graph.
Nodes with 0 in-degree: [XDH].
Visit node XDH and remove it from the graph.
Nodes with 0 in-degree: [IQB].
Visit node IQB and remove it from the graph.
So the result of topological sorting is ","('[[SYX, GYV, TKZ, ATL, IQB, XDH, RZD], [SYX, GYV, TKZ, ATL, RZD, XDH, IQB], [SYX, RZD, XDH, GYV, TKZ, ATL, IQB], [SYX, GYV, XDH, IQB, TKZ, ATL, RZD]]',)",1,201
topological_sort,"[(PII, HSH), (PII, NGT), (HSH, XUD), (HSH, NGT), (NGT, XUD), (OXY, XUD), (OXY, NGT)]","{PII: [HSH, NGT],
HSH: [XUD, NGT],
NGT: [XUD],
XUD: [],
OXY: [XUD, NGT]}","Node PII is connected to nodes HSH, NGT.
Node HSH is connected to nodes XUD, NGT.
Node NGT is connected to node XUD.
Node OXY is connected to nodes XUD, NGT.","[HSH, NGT, PII, XUD, OXY]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PII, OXY, HSH, NGT, XUD]","Let's solve it step by step.
Nodes with 0 in-degree: [PII, OXY].
Visit node PII and remove it from the graph.
Nodes with 0 in-degree: [OXY, HSH].
Visit node OXY and remove it from the graph.
Nodes with 0 in-degree: [HSH].
Visit node HSH and remove it from the graph.
Nodes with 0 in-degree: [NGT].
Visit node NGT and remove it from the graph.
Nodes with 0 in-degree: [XUD].
Visit node XUD and remove it from the graph.
So the result of topological sorting is ","('[[PII, OXY, XUD, NGT, HSH], [PII, XUD, OXY, HSH, NGT], [PII, OXY, NGT, HSH, XUD], [PII, OXY, HSH, NGT, XUD]]',)",3,202
topological_sort,"[(FNI, TJW), (FNI, OGL), (FNI, MOH), (TJW, OGL), (OGL, ZPR), (OGL, MOH), (ZPR, MOH), (HJI, TJW)]","{FNI: [TJW, OGL, MOH],
TJW: [OGL],
OGL: [ZPR, MOH],
MOH: [],
ZPR: [MOH],
HJI: [TJW]}","Node FNI is connected to nodes TJW, OGL, MOH.
Node TJW is connected to node OGL.
Node OGL is connected to nodes ZPR, MOH.
Node ZPR is connected to node MOH.
Node HJI is connected to node TJW.","[TJW, HJI, MOH, OGL, ZPR, FNI]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FNI, HJI, TJW, OGL, ZPR, MOH]","Let's solve it step by step.
Nodes with 0 in-degree: [FNI, HJI].
Visit node FNI and remove it from the graph.
Nodes with 0 in-degree: [HJI].
Visit node HJI and remove it from the graph.
Nodes with 0 in-degree: [TJW].
Visit node TJW and remove it from the graph.
Nodes with 0 in-degree: [OGL].
Visit node OGL and remove it from the graph.
Nodes with 0 in-degree: [ZPR].
Visit node ZPR and remove it from the graph.
Nodes with 0 in-degree: [MOH].
Visit node MOH and remove it from the graph.
So the result of topological sorting is ","('[[FNI, MOH, TJW, HJI, OGL, ZPR], [FNI, HJI, TJW, OGL, ZPR, MOH], [FNI, HJI, TJW, MOH, OGL, ZPR], [FNI, HJI, ZPR, MOH, TJW, OGL]]',)",1,203
topological_sort,"[(PAB, GQC), (PAB, SQU), (SQU, YFD), (SQU, GQC), (YFD, GQC), (EBH, OPV), (EBH, SQU), (OPV, YFD)]","{PAB: [GQC, SQU],
GQC: [],
SQU: [YFD, GQC],
YFD: [GQC],
EBH: [OPV, SQU],
OPV: [YFD]}","Node PAB is connected to nodes GQC, SQU.
Node SQU is connected to nodes YFD, GQC.
Node YFD is connected to node GQC.
Node EBH is connected to nodes OPV, SQU.
Node OPV is connected to node YFD.","[YFD, GQC, PAB, SQU, OPV, EBH]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PAB, EBH, OPV, SQU, YFD, GQC]","Let's solve it step by step.
Nodes with 0 in-degree: [PAB, EBH].
Visit node PAB and remove it from the graph.
Nodes with 0 in-degree: [EBH].
Visit node EBH and remove it from the graph.
Nodes with 0 in-degree: [OPV, SQU].
Visit node OPV and remove it from the graph.
Nodes with 0 in-degree: [SQU].
Visit node SQU and remove it from the graph.
Nodes with 0 in-degree: [YFD].
Visit node YFD and remove it from the graph.
Nodes with 0 in-degree: [GQC].
Visit node GQC and remove it from the graph.
So the result of topological sorting is ","('[[PAB, EBH, OPV, SQU, YFD, GQC], [PAB, EBH, OPV, SQU, YFD, GQC], [PAB, EBH, YFD, GQC, OPV, SQU], [PAB, GQC, EBH, YFD, SQU, OPV]]',)",0,204
topological_sort,"[(FNQ, BTS), (DTJ, ABU), (ABU, TAM), (ABU, BTS), (TAM, FNQ), (VUI, BTS), (SZR, DTJ), (SZR, ABU), (SZR, VUI)]","{FNQ: [BTS],
BTS: [],
DTJ: [ABU],
ABU: [TAM, BTS],
TAM: [FNQ],
VUI: [BTS],
SZR: [DTJ, ABU, VUI]}","Node FNQ is connected to node BTS.
Node DTJ is connected to node ABU.
Node ABU is connected to nodes TAM, BTS.
Node TAM is connected to node FNQ.
Node VUI is connected to node BTS.
Node SZR is connected to nodes DTJ, ABU, VUI.","[DTJ, TAM, VUI, SZR, BTS, ABU, FNQ]",7,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SZR, DTJ, VUI, ABU, TAM, FNQ, BTS]","Let's solve it step by step.
Nodes with 0 in-degree: [SZR].
Visit node SZR and remove it from the graph.
Nodes with 0 in-degree: [DTJ, VUI].
Visit node DTJ and remove it from the graph.
Nodes with 0 in-degree: [VUI, ABU].
Visit node VUI and remove it from the graph.
Nodes with 0 in-degree: [ABU].
Visit node ABU and remove it from the graph.
Nodes with 0 in-degree: [TAM].
Visit node TAM and remove it from the graph.
Nodes with 0 in-degree: [FNQ].
Visit node FNQ and remove it from the graph.
Nodes with 0 in-degree: [BTS].
Visit node BTS and remove it from the graph.
So the result of topological sorting is ","('[[SZR, DTJ, FNQ, BTS, VUI, ABU, TAM], [SZR, DTJ, VUI, TAM, FNQ, BTS, ABU], [SZR, DTJ, VUI, ABU, TAM, FNQ, BTS], [SZR, ABU, BTS, DTJ, VUI, FNQ, TAM]]',)",2,205
topological_sort,"[(VBG, CJY), (VBG, CTL), (VBG, NQK), (CTL, CJY), (NQK, CJY), (WST, CJY), (WST, VBG), (UDG, VBG), (UDG, NQK)]","{VBG: [CJY, CTL, NQK],
CJY: [],
CTL: [CJY],
NQK: [CJY],
WST: [CJY, VBG],
UDG: [VBG, NQK]}","Node VBG is connected to nodes CJY, CTL, NQK.
Node CTL is connected to node CJY.
Node NQK is connected to node CJY.
Node WST is connected to nodes CJY, VBG.
Node UDG is connected to nodes VBG, NQK.","[NQK, UDG, VBG, WST, CTL, CJY]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WST, UDG, VBG, CTL, NQK, CJY]","Let's solve it step by step.
Nodes with 0 in-degree: [WST, UDG].
Visit node WST and remove it from the graph.
Nodes with 0 in-degree: [UDG].
Visit node UDG and remove it from the graph.
Nodes with 0 in-degree: [VBG].
Visit node VBG and remove it from the graph.
Nodes with 0 in-degree: [CTL, NQK].
Visit node CTL and remove it from the graph.
Nodes with 0 in-degree: [NQK].
Visit node NQK and remove it from the graph.
Nodes with 0 in-degree: [CJY].
Visit node CJY and remove it from the graph.
So the result of topological sorting is ","('[[WST, UDG, NQK, CJY, VBG, CTL], [WST, UDG, VBG, NQK, CJY, CTL], [WST, UDG, VBG, CTL, NQK, CJY], [WST, VBG, CJY, UDG, NQK, CTL]]',)",2,206
topological_sort,"[(XKZ, AQH), (XKZ, XPI), (AQH, TPL), (AQH, OYG), (XPI, TPL), (OYG, QOW), (PSN, QOW), (PSN, XKZ), (PSN, OYG), (PSN, TPL), (QOW, TPL), (QOW, XPI)]","{XKZ: [AQH, XPI],
AQH: [TPL, OYG],
XPI: [TPL],
TPL: [],
OYG: [QOW],
PSN: [QOW, XKZ, OYG, TPL],
QOW: [TPL, XPI]}","Node XKZ is connected to nodes AQH, XPI.
Node AQH is connected to nodes TPL, OYG.
Node XPI is connected to node TPL.
Node OYG is connected to node QOW.
Node PSN is connected to nodes QOW, XKZ, OYG, TPL.
Node QOW is connected to nodes TPL, XPI.","[PSN, QOW, OYG, XPI, XKZ, TPL, AQH]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PSN, XKZ, AQH, OYG, QOW, XPI, TPL]","Let's solve it step by step.
Nodes with 0 in-degree: [PSN].
Visit node PSN and remove it from the graph.
Nodes with 0 in-degree: [XKZ].
Visit node XKZ and remove it from the graph.
Nodes with 0 in-degree: [AQH].
Visit node AQH and remove it from the graph.
Nodes with 0 in-degree: [OYG].
Visit node OYG and remove it from the graph.
Nodes with 0 in-degree: [QOW].
Visit node QOW and remove it from the graph.
Nodes with 0 in-degree: [XPI].
Visit node XPI and remove it from the graph.
Nodes with 0 in-degree: [TPL].
Visit node TPL and remove it from the graph.
So the result of topological sorting is ","('[[PSN, XKZ, AQH, OYG, QOW, XPI, TPL], [PSN, XKZ, OYG, XPI, QOW, AQH, TPL], [PSN, XKZ, AQH, TPL, XPI, QOW, OYG], [PSN, XKZ, XPI, TPL, AQH, OYG, QOW]]',)",0,207
topological_sort,"[(SYT, GAD), (SYT, VIO), (GAD, VIO), (CXK, SYT), (CXK, GAD), (CXK, VIO), (VSZ, VIO), (VSZ, CXK)]","{SYT: [GAD, VIO],
GAD: [VIO],
VIO: [],
CXK: [SYT, GAD, VIO],
VSZ: [VIO, CXK]}","Node SYT is connected to nodes GAD, VIO.
Node GAD is connected to node VIO.
Node CXK is connected to nodes SYT, GAD, VIO.
Node VSZ is connected to nodes VIO, CXK.","[GAD, SYT, VSZ, VIO, CXK]",5,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VSZ, CXK, SYT, GAD, VIO]","Let's solve it step by step.
Nodes with 0 in-degree: [VSZ].
Visit node VSZ and remove it from the graph.
Nodes with 0 in-degree: [CXK].
Visit node CXK and remove it from the graph.
Nodes with 0 in-degree: [SYT].
Visit node SYT and remove it from the graph.
Nodes with 0 in-degree: [GAD].
Visit node GAD and remove it from the graph.
Nodes with 0 in-degree: [VIO].
Visit node VIO and remove it from the graph.
So the result of topological sorting is ","('[[VSZ, VIO, CXK, SYT, GAD], [VSZ, CXK, SYT, GAD, VIO], [VSZ, CXK, SYT, GAD, VIO], [VSZ, CXK, VIO, SYT, GAD]]',)",2,208
topological_sort,"[(ZDO, KPZ), (ZDO, BXX), (KPZ, BXX), (KPZ, YDS), (BXX, BQH), (BQH, WJY), (BQH, EIY), (WJY, EIY), (EIY, YDS)]","{ZDO: [KPZ, BXX],
KPZ: [BXX, YDS],
BXX: [BQH],
YDS: [],
BQH: [WJY, EIY],
WJY: [EIY],
EIY: [YDS]}","Node ZDO is connected to nodes KPZ, BXX.
Node KPZ is connected to nodes BXX, YDS.
Node BXX is connected to node BQH.
Node BQH is connected to nodes WJY, EIY.
Node WJY is connected to node EIY.
Node EIY is connected to node YDS.","[BQH, EIY, BXX, WJY, ZDO, YDS, KPZ]",7,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZDO, KPZ, BXX, BQH, WJY, EIY, YDS]","Let's solve it step by step.
Nodes with 0 in-degree: [ZDO].
Visit node ZDO and remove it from the graph.
Nodes with 0 in-degree: [KPZ].
Visit node KPZ and remove it from the graph.
Nodes with 0 in-degree: [BXX].
Visit node BXX and remove it from the graph.
Nodes with 0 in-degree: [BQH].
Visit node BQH and remove it from the graph.
Nodes with 0 in-degree: [WJY].
Visit node WJY and remove it from the graph.
Nodes with 0 in-degree: [EIY].
Visit node EIY and remove it from the graph.
Nodes with 0 in-degree: [YDS].
Visit node YDS and remove it from the graph.
So the result of topological sorting is ","('[[ZDO, YDS, KPZ, EIY, BXX, BQH, WJY], [ZDO, KPZ, BXX, EIY, WJY, BQH, YDS], [ZDO, KPZ, BXX, BQH, WJY, EIY, YDS], [ZDO, KPZ, EIY, YDS, BXX, BQH, WJY]]',)",2,209
topological_sort,"[(FZW, KEV), (FZW, EAL), (FZW, LDA), (KEV, UXC), (KEV, LDA), (EAL, LDA)]","{FZW: [KEV, EAL, LDA],
KEV: [UXC, LDA],
EAL: [LDA],
LDA: [],
UXC: []}","Node FZW is connected to nodes KEV, EAL, LDA.
Node KEV is connected to nodes UXC, LDA.
Node EAL is connected to node LDA.","[KEV, FZW, EAL, LDA, UXC]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FZW, KEV, EAL, UXC, LDA]","Let's solve it step by step.
Nodes with 0 in-degree: [FZW].
Visit node FZW and remove it from the graph.
Nodes with 0 in-degree: [KEV, EAL].
Visit node KEV and remove it from the graph.
Nodes with 0 in-degree: [EAL, UXC].
Visit node EAL and remove it from the graph.
Nodes with 0 in-degree: [UXC, LDA].
Visit node UXC and remove it from the graph.
Nodes with 0 in-degree: [LDA].
Visit node LDA and remove it from the graph.
So the result of topological sorting is ","('[[FZW, KEV, EAL, UXC, LDA], [FZW, KEV, EAL, LDA, UXC], [FZW, LDA, KEV, EAL, UXC], [FZW, UXC, KEV, EAL, LDA]]',)",0,210
topological_sort,"[(ZVB, IWQ), (ZVB, VXK), (ZVB, GQZ), (IWQ, GQZ), (IWQ, GJF), (VXK, GJF), (VXK, GQZ), (GQZ, GJF)]","{ZVB: [IWQ, VXK, GQZ],
IWQ: [GQZ, GJF],
VXK: [GJF, GQZ],
GQZ: [GJF],
GJF: []}","Node ZVB is connected to nodes IWQ, VXK, GQZ.
Node IWQ is connected to nodes GQZ, GJF.
Node VXK is connected to nodes GJF, GQZ.
Node GQZ is connected to node GJF.","[GJF, IWQ, ZVB, VXK, GQZ]",5,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZVB, IWQ, VXK, GQZ, GJF]","Let's solve it step by step.
Nodes with 0 in-degree: [ZVB].
Visit node ZVB and remove it from the graph.
Nodes with 0 in-degree: [IWQ, VXK].
Visit node IWQ and remove it from the graph.
Nodes with 0 in-degree: [VXK].
Visit node VXK and remove it from the graph.
Nodes with 0 in-degree: [GQZ].
Visit node GQZ and remove it from the graph.
Nodes with 0 in-degree: [GJF].
Visit node GJF and remove it from the graph.
So the result of topological sorting is ","('[[ZVB, IWQ, GJF, VXK, GQZ], [ZVB, IWQ, VXK, GQZ, GJF], [ZVB, GJF, IWQ, VXK, GQZ], [ZVB, IWQ, VXK, GQZ, GJF]]',)",3,211
topological_sort,"[(ZSL, JBG), (ZSL, CTS), (JBG, ULS), (JBG, CTS), (CTD, PZL), (CTD, JBG), (PZL, CTS), (PZL, EYL), (EYL, JBG)]","{ZSL: [JBG, CTS],
JBG: [ULS, CTS],
CTS: [],
ULS: [],
CTD: [PZL, JBG],
PZL: [CTS, EYL],
EYL: [JBG]}","Node ZSL is connected to nodes JBG, CTS.
Node JBG is connected to nodes ULS, CTS.
Node CTD is connected to nodes PZL, JBG.
Node PZL is connected to nodes CTS, EYL.
Node EYL is connected to node JBG.","[CTS, CTD, ZSL, JBG, EYL, PZL, ULS]",7,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZSL, CTD, PZL, EYL, JBG, ULS, CTS]","Let's solve it step by step.
Nodes with 0 in-degree: [ZSL, CTD].
Visit node ZSL and remove it from the graph.
Nodes with 0 in-degree: [CTD].
Visit node CTD and remove it from the graph.
Nodes with 0 in-degree: [PZL].
Visit node PZL and remove it from the graph.
Nodes with 0 in-degree: [EYL].
Visit node EYL and remove it from the graph.
Nodes with 0 in-degree: [JBG].
Visit node JBG and remove it from the graph.
Nodes with 0 in-degree: [ULS, CTS].
Visit node ULS and remove it from the graph.
Nodes with 0 in-degree: [CTS].
Visit node CTS and remove it from the graph.
So the result of topological sorting is ","('[[ZSL, CTD, PZL, ULS, EYL, CTS, JBG], [ZSL, CTD, PZL, EYL, JBG, ULS, CTS], [ZSL, JBG, PZL, CTD, EYL, CTS, ULS], [ZSL, CTD, ULS, CTS, PZL, EYL, JBG]]',)",1,212
topological_sort,"[(LXF, CJR), (LXF, GBE), (GBE, YIY), (GBE, EHX), (YIY, CJR), (EHX, YIY)]","{LXF: [CJR, GBE],
CJR: [],
GBE: [YIY, EHX],
YIY: [CJR],
EHX: [YIY]}","Node LXF is connected to nodes CJR, GBE.
Node GBE is connected to nodes YIY, EHX.
Node YIY is connected to node CJR.
Node EHX is connected to node YIY.","[CJR, YIY, EHX, GBE, LXF]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LXF, GBE, EHX, YIY, CJR]","Let's solve it step by step.
Nodes with 0 in-degree: [LXF].
Visit node LXF and remove it from the graph.
Nodes with 0 in-degree: [GBE].
Visit node GBE and remove it from the graph.
Nodes with 0 in-degree: [EHX].
Visit node EHX and remove it from the graph.
Nodes with 0 in-degree: [YIY].
Visit node YIY and remove it from the graph.
Nodes with 0 in-degree: [CJR].
Visit node CJR and remove it from the graph.
So the result of topological sorting is ","('[[LXF, EHX, GBE, CJR, YIY], [LXF, CJR, GBE, EHX, YIY], [LXF, GBE, CJR, YIY, EHX], [LXF, GBE, EHX, YIY, CJR]]',)",3,213
topological_sort,"[(AOE, IXU), (AOE, TPF), (IXU, TPF), (IBG, TPF), (EMC, TPF), (EMC, AOE), (EMC, IXU), (EMC, TDR), (TDR, TPF), (TDR, AOE), (TDR, IXU)]","{AOE: [IXU, TPF],
IXU: [TPF],
TPF: [],
IBG: [TPF],
EMC: [TPF, AOE, IXU, TDR],
TDR: [TPF, AOE, IXU]}","Node AOE is connected to nodes IXU, TPF.
Node IXU is connected to node TPF.
Node IBG is connected to node TPF.
Node EMC is connected to nodes TPF, AOE, IXU, TDR.
Node TDR is connected to nodes TPF, AOE, IXU.","[IBG, IXU, EMC, AOE, TPF, TDR]",6,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IBG, EMC, TDR, AOE, IXU, TPF]","Let's solve it step by step.
Nodes with 0 in-degree: [IBG, EMC].
Visit node IBG and remove it from the graph.
Nodes with 0 in-degree: [EMC].
Visit node EMC and remove it from the graph.
Nodes with 0 in-degree: [TDR].
Visit node TDR and remove it from the graph.
Nodes with 0 in-degree: [AOE].
Visit node AOE and remove it from the graph.
Nodes with 0 in-degree: [IXU].
Visit node IXU and remove it from the graph.
Nodes with 0 in-degree: [TPF].
Visit node TPF and remove it from the graph.
So the result of topological sorting is ","('[[IBG, EMC, TDR, AOE, IXU, TPF], [IBG, EMC, IXU, TPF, TDR, AOE], [IBG, EMC, TDR, IXU, AOE, TPF], [IBG, TDR, AOE, TPF, IXU, EMC]]',)",0,214
topological_sort,"[(PLM, RCC), (RCC, AFJ), (RCC, QTA), (DJG, PLM), (POP, DJG), (POP, PLM), (POP, RCC)]","{PLM: [RCC],
RCC: [AFJ, QTA],
AFJ: [],
QTA: [],
DJG: [PLM],
POP: [DJG, PLM, RCC]}","Node PLM is connected to node RCC.
Node RCC is connected to nodes AFJ, QTA.
Node DJG is connected to node PLM.
Node POP is connected to nodes DJG, PLM, RCC.","[POP, DJG, QTA, RCC, PLM, AFJ]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[POP, DJG, PLM, RCC, AFJ, QTA]","Let's solve it step by step.
Nodes with 0 in-degree: [POP].
Visit node POP and remove it from the graph.
Nodes with 0 in-degree: [DJG].
Visit node DJG and remove it from the graph.
Nodes with 0 in-degree: [PLM].
Visit node PLM and remove it from the graph.
Nodes with 0 in-degree: [RCC].
Visit node RCC and remove it from the graph.
Nodes with 0 in-degree: [AFJ, QTA].
Visit node AFJ and remove it from the graph.
Nodes with 0 in-degree: [QTA].
Visit node QTA and remove it from the graph.
So the result of topological sorting is ","('[[POP, DJG, AFJ, QTA, PLM, RCC], [POP, DJG, PLM, RCC, AFJ, QTA], [POP, DJG, PLM, AFJ, QTA, RCC], [POP, AFJ, PLM, QTA, RCC, DJG]]',)",1,215
topological_sort,"[(BRQ, YEZ), (BRQ, ZUN), (BRQ, NVD), (ZUN, YEZ), (NVD, ZUN), (NVD, YEZ), (ODW, ZUN), (RQW, AJG), (RQW, ZUN), (AJG, NVD)]","{BRQ: [YEZ, ZUN, NVD],
YEZ: [],
ZUN: [YEZ],
NVD: [ZUN, YEZ],
ODW: [ZUN],
RQW: [AJG, ZUN],
AJG: [NVD]}","Node BRQ is connected to nodes YEZ, ZUN, NVD.
Node ZUN is connected to node YEZ.
Node NVD is connected to nodes ZUN, YEZ.
Node ODW is connected to node ZUN.
Node RQW is connected to nodes AJG, ZUN.
Node AJG is connected to node NVD.","[ODW, RQW, AJG, ZUN, NVD, YEZ, BRQ]",7,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BRQ, ODW, RQW, AJG, NVD, ZUN, YEZ]","Let's solve it step by step.
Nodes with 0 in-degree: [BRQ, ODW, RQW].
Visit node BRQ and remove it from the graph.
Nodes with 0 in-degree: [ODW, RQW].
Visit node ODW and remove it from the graph.
Nodes with 0 in-degree: [RQW].
Visit node RQW and remove it from the graph.
Nodes with 0 in-degree: [AJG].
Visit node AJG and remove it from the graph.
Nodes with 0 in-degree: [NVD].
Visit node NVD and remove it from the graph.
Nodes with 0 in-degree: [ZUN].
Visit node ZUN and remove it from the graph.
Nodes with 0 in-degree: [YEZ].
Visit node YEZ and remove it from the graph.
So the result of topological sorting is ","('[[BRQ, NVD, ODW, AJG, RQW, YEZ, ZUN], [BRQ, ODW, RQW, AJG, NVD, ZUN, YEZ], [BRQ, ODW, ZUN, YEZ, RQW, AJG, NVD], [BRQ, ODW, RQW, ZUN, AJG, NVD, YEZ]]',)",1,216
topological_sort,"[(NPT, CCH), (NPT, DWO), (NPT, DAY), (CCH, WMW), (CCH, DWO), (DAY, DWO), (XTD, NPT), (TOA, XTD), (TOA, NPT)]","{NPT: [CCH, DWO, DAY],
CCH: [WMW, DWO],
DWO: [],
DAY: [DWO],
WMW: [],
XTD: [NPT],
TOA: [XTD, NPT]}","Node NPT is connected to nodes CCH, DWO, DAY.
Node CCH is connected to nodes WMW, DWO.
Node DAY is connected to node DWO.
Node XTD is connected to node NPT.
Node TOA is connected to nodes XTD, NPT.","[WMW, NPT, DAY, CCH, XTD, DWO, TOA]",7,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TOA, XTD, NPT, CCH, DAY, WMW, DWO]","Let's solve it step by step.
Nodes with 0 in-degree: [TOA].
Visit node TOA and remove it from the graph.
Nodes with 0 in-degree: [XTD].
Visit node XTD and remove it from the graph.
Nodes with 0 in-degree: [NPT].
Visit node NPT and remove it from the graph.
Nodes with 0 in-degree: [CCH, DAY].
Visit node CCH and remove it from the graph.
Nodes with 0 in-degree: [DAY, WMW].
Visit node DAY and remove it from the graph.
Nodes with 0 in-degree: [WMW, DWO].
Visit node WMW and remove it from the graph.
Nodes with 0 in-degree: [DWO].
Visit node DWO and remove it from the graph.
So the result of topological sorting is ","('[[TOA, XTD, WMW, DWO, NPT, CCH, DAY], [TOA, XTD, NPT, DAY, CCH, DWO, WMW], [TOA, XTD, NPT, CCH, DAY, WMW, DWO], [TOA, XTD, NPT, DWO, CCH, DAY, WMW]]',)",2,217
topological_sort,"[(CMW, ZVA), (CMW, DJR), (ZVA, DJR), (ZVA, SLH), (ZVA, DMK), (DJR, DMK), (RCW, SLH), (RCW, DJR)]","{CMW: [ZVA, DJR],
ZVA: [DJR, SLH, DMK],
DJR: [DMK],
SLH: [],
DMK: [],
RCW: [SLH, DJR]}","Node CMW is connected to nodes ZVA, DJR.
Node ZVA is connected to nodes DJR, SLH, DMK.
Node DJR is connected to node DMK.
Node RCW is connected to nodes SLH, DJR.","[RCW, CMW, SLH, ZVA, DJR, DMK]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CMW, RCW, ZVA, DJR, SLH, DMK]","Let's solve it step by step.
Nodes with 0 in-degree: [CMW, RCW].
Visit node CMW and remove it from the graph.
Nodes with 0 in-degree: [RCW, ZVA].
Visit node RCW and remove it from the graph.
Nodes with 0 in-degree: [ZVA].
Visit node ZVA and remove it from the graph.
Nodes with 0 in-degree: [DJR, SLH].
Visit node DJR and remove it from the graph.
Nodes with 0 in-degree: [SLH, DMK].
Visit node SLH and remove it from the graph.
Nodes with 0 in-degree: [DMK].
Visit node DMK and remove it from the graph.
So the result of topological sorting is ","('[[CMW, RCW, SLH, DMK, ZVA, DJR], [CMW, DJR, DMK, ZVA, SLH, RCW], [CMW, RCW, ZVA, DJR, SLH, DMK], [CMW, RCW, ZVA, DJR, DMK, SLH]]',)",2,218
topological_sort,"[(PWZ, STJ), (PWZ, JNW), (STJ, BMI), (STJ, ZDU), (JNW, STJ), (JNW, ZDU), (JNW, NZO), (BMI, NZO), (ZDU, BMI), (PJQ, PWZ), (PJQ, JNW), (PJQ, ZDU)]","{PWZ: [STJ, JNW],
STJ: [BMI, ZDU],
JNW: [STJ, ZDU, NZO],
BMI: [NZO],
ZDU: [BMI],
PJQ: [PWZ, JNW, ZDU],
NZO: []}","Node PWZ is connected to nodes STJ, JNW.
Node STJ is connected to nodes BMI, ZDU.
Node JNW is connected to nodes STJ, ZDU, NZO.
Node BMI is connected to node NZO.
Node ZDU is connected to node BMI.
Node PJQ is connected to nodes PWZ, JNW, ZDU.","[NZO, PJQ, PWZ, JNW, BMI, STJ, ZDU]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PJQ, PWZ, JNW, STJ, ZDU, BMI, NZO]","Let's solve it step by step.
Nodes with 0 in-degree: [PJQ].
Visit node PJQ and remove it from the graph.
Nodes with 0 in-degree: [PWZ].
Visit node PWZ and remove it from the graph.
Nodes with 0 in-degree: [JNW].
Visit node JNW and remove it from the graph.
Nodes with 0 in-degree: [STJ].
Visit node STJ and remove it from the graph.
Nodes with 0 in-degree: [ZDU].
Visit node ZDU and remove it from the graph.
Nodes with 0 in-degree: [BMI].
Visit node BMI and remove it from the graph.
Nodes with 0 in-degree: [NZO].
Visit node NZO and remove it from the graph.
So the result of topological sorting is ","('[[PJQ, PWZ, JNW, STJ, ZDU, BMI, NZO], [PJQ, STJ, JNW, NZO, BMI, ZDU, PWZ], [PJQ, PWZ, BMI, NZO, JNW, STJ, ZDU], [PJQ, PWZ, JNW, STJ, NZO, BMI, ZDU]]',)",0,219
topological_sort,"[(LHH, OQO), (LHH, NMA), (LHH, FIE), (OQO, FOV), (OQO, NMA), (NMA, IXL), (FIE, NMA), (FOV, IXL)]","{LHH: [OQO, NMA, FIE],
OQO: [FOV, NMA],
NMA: [IXL],
FIE: [NMA],
FOV: [IXL],
IXL: []}","Node LHH is connected to nodes OQO, NMA, FIE.
Node OQO is connected to nodes FOV, NMA.
Node NMA is connected to node IXL.
Node FIE is connected to node NMA.
Node FOV is connected to node IXL.","[IXL, FIE, NMA, FOV, OQO, LHH]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LHH, OQO, FIE, FOV, NMA, IXL]","Let's solve it step by step.
Nodes with 0 in-degree: [LHH].
Visit node LHH and remove it from the graph.
Nodes with 0 in-degree: [OQO, FIE].
Visit node OQO and remove it from the graph.
Nodes with 0 in-degree: [FIE, FOV].
Visit node FIE and remove it from the graph.
Nodes with 0 in-degree: [FOV, NMA].
Visit node FOV and remove it from the graph.
Nodes with 0 in-degree: [NMA].
Visit node NMA and remove it from the graph.
Nodes with 0 in-degree: [IXL].
Visit node IXL and remove it from the graph.
So the result of topological sorting is ","('[[LHH, OQO, NMA, IXL, FIE, FOV], [LHH, FOV, IXL, NMA, FIE, OQO], [LHH, OQO, FIE, FOV, NMA, IXL], [LHH, OQO, FIE, FOV, NMA, IXL]]',)",2,220
topological_sort,"[(OBH, DQN), (OBH, HTE), (OBH, PMC), (HTE, DQN), (HTE, PMC), (PMC, DQN), (GXB, OBH), (GXB, DQN), (GXB, HTE)]","{OBH: [DQN, HTE, PMC],
DQN: [],
HTE: [DQN, PMC],
PMC: [DQN],
GXB: [OBH, DQN, HTE]}","Node OBH is connected to nodes DQN, HTE, PMC.
Node HTE is connected to nodes DQN, PMC.
Node PMC is connected to node DQN.
Node GXB is connected to nodes OBH, DQN, HTE.","[HTE, DQN, PMC, GXB, OBH]",5,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GXB, OBH, HTE, PMC, DQN]","Let's solve it step by step.
Nodes with 0 in-degree: [GXB].
Visit node GXB and remove it from the graph.
Nodes with 0 in-degree: [OBH].
Visit node OBH and remove it from the graph.
Nodes with 0 in-degree: [HTE].
Visit node HTE and remove it from the graph.
Nodes with 0 in-degree: [PMC].
Visit node PMC and remove it from the graph.
Nodes with 0 in-degree: [DQN].
Visit node DQN and remove it from the graph.
So the result of topological sorting is ","('[[GXB, HTE, DQN, OBH, PMC], [GXB, DQN, OBH, HTE, PMC], [GXB, OBH, DQN, HTE, PMC], [GXB, OBH, HTE, PMC, DQN]]',)",3,221
topological_sort,"[(DSD, XYY), (DSD, XYZ), (XYZ, JZR), (OTC, ISY), (JZR, ISY), (JZR, OTC)]","{DSD: [XYY, XYZ],
XYY: [],
XYZ: [JZR],
OTC: [ISY],
ISY: [],
JZR: [ISY, OTC]}","Node DSD is connected to nodes XYY, XYZ.
Node XYZ is connected to node JZR.
Node OTC is connected to node ISY.
Node JZR is connected to nodes ISY, OTC.","[ISY, DSD, XYZ, OTC, XYY, JZR]",6,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DSD, XYY, XYZ, JZR, OTC, ISY]","Let's solve it step by step.
Nodes with 0 in-degree: [DSD].
Visit node DSD and remove it from the graph.
Nodes with 0 in-degree: [XYY, XYZ].
Visit node XYY and remove it from the graph.
Nodes with 0 in-degree: [XYZ].
Visit node XYZ and remove it from the graph.
Nodes with 0 in-degree: [JZR].
Visit node JZR and remove it from the graph.
Nodes with 0 in-degree: [OTC].
Visit node OTC and remove it from the graph.
Nodes with 0 in-degree: [ISY].
Visit node ISY and remove it from the graph.
So the result of topological sorting is ","('[[DSD, XYY, XYZ, JZR, ISY, OTC], [DSD, XYZ, JZR, XYY, OTC, ISY], [DSD, XYY, XYZ, JZR, OTC, ISY], [DSD, XYY, OTC, ISY, XYZ, JZR]]',)",2,222
topological_sort,"[(NGM, IJF), (MSC, NGM), (MSC, IJF), (VEQ, NGM), (VEQ, IJF), (VEQ, MSC), (MTB, IJF), (MTB, NGM), (MTB, MSC)]","{NGM: [IJF],
IJF: [],
MSC: [NGM, IJF],
VEQ: [NGM, IJF, MSC],
MTB: [IJF, NGM, MSC]}","Node NGM is connected to node IJF.
Node MSC is connected to nodes NGM, IJF.
Node VEQ is connected to nodes NGM, IJF, MSC.
Node MTB is connected to nodes IJF, NGM, MSC.","[MSC, VEQ, NGM, IJF, MTB]",5,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VEQ, MTB, MSC, NGM, IJF]","Let's solve it step by step.
Nodes with 0 in-degree: [VEQ, MTB].
Visit node VEQ and remove it from the graph.
Nodes with 0 in-degree: [MTB].
Visit node MTB and remove it from the graph.
Nodes with 0 in-degree: [MSC].
Visit node MSC and remove it from the graph.
Nodes with 0 in-degree: [NGM].
Visit node NGM and remove it from the graph.
Nodes with 0 in-degree: [IJF].
Visit node IJF and remove it from the graph.
So the result of topological sorting is ","('[[VEQ, MTB, MSC, NGM, IJF], [VEQ, MSC, MTB, IJF, NGM], [VEQ, IJF, MTB, MSC, NGM], [VEQ, MTB, NGM, IJF, MSC]]',)",0,223
topological_sort,"[(OTI, DCE), (OTI, PDG), (OTI, MRO), (DCE, RBT), (RBT, MRO), (RBT, RQC), (RQC, MRO)]","{OTI: [DCE, PDG, MRO],
DCE: [RBT],
PDG: [],
MRO: [],
RBT: [MRO, RQC],
RQC: [MRO]}","Node OTI is connected to nodes DCE, PDG, MRO.
Node DCE is connected to node RBT.
Node RBT is connected to nodes MRO, RQC.
Node RQC is connected to node MRO.","[RQC, OTI, MRO, DCE, PDG, RBT]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OTI, DCE, PDG, RBT, RQC, MRO]","Let's solve it step by step.
Nodes with 0 in-degree: [OTI].
Visit node OTI and remove it from the graph.
Nodes with 0 in-degree: [DCE, PDG].
Visit node DCE and remove it from the graph.
Nodes with 0 in-degree: [PDG, RBT].
Visit node PDG and remove it from the graph.
Nodes with 0 in-degree: [RBT].
Visit node RBT and remove it from the graph.
Nodes with 0 in-degree: [RQC].
Visit node RQC and remove it from the graph.
Nodes with 0 in-degree: [MRO].
Visit node MRO and remove it from the graph.
So the result of topological sorting is ","('[[OTI, DCE, RQC, MRO, PDG, RBT], [OTI, PDG, MRO, RQC, RBT, DCE], [OTI, DCE, PDG, RQC, RBT, MRO], [OTI, DCE, PDG, RBT, RQC, MRO]]',)",3,224
topological_sort,"[(SPO, OOM), (OOM, RDN), (OOM, FXT), (RDN, POK), (FXT, CIE), (CIE, POK), (KTQ, SPO)]","{SPO: [OOM],
OOM: [RDN, FXT],
RDN: [POK],
FXT: [CIE],
POK: [],
CIE: [POK],
KTQ: [SPO]}","Node SPO is connected to node OOM.
Node OOM is connected to nodes RDN, FXT.
Node RDN is connected to node POK.
Node FXT is connected to node CIE.
Node CIE is connected to node POK.
Node KTQ is connected to node SPO.","[RDN, SPO, CIE, FXT, POK, OOM, KTQ]",7,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KTQ, SPO, OOM, RDN, FXT, CIE, POK]","Let's solve it step by step.
Nodes with 0 in-degree: [KTQ].
Visit node KTQ and remove it from the graph.
Nodes with 0 in-degree: [SPO].
Visit node SPO and remove it from the graph.
Nodes with 0 in-degree: [OOM].
Visit node OOM and remove it from the graph.
Nodes with 0 in-degree: [RDN, FXT].
Visit node RDN and remove it from the graph.
Nodes with 0 in-degree: [FXT].
Visit node FXT and remove it from the graph.
Nodes with 0 in-degree: [CIE].
Visit node CIE and remove it from the graph.
Nodes with 0 in-degree: [POK].
Visit node POK and remove it from the graph.
So the result of topological sorting is ","('[[KTQ, SPO, CIE, POK, OOM, RDN, FXT], [KTQ, SPO, OOM, POK, CIE, FXT, RDN], [KTQ, SPO, OOM, RDN, FXT, CIE, POK], [KTQ, FXT, RDN, CIE, SPO, OOM, POK]]',)",2,225
topological_sort,"[(IPS, NJR), (IPS, MIZ), (NJR, FCI), (MIZ, NJR), (UOY, NJR), (UOY, IPS)]","{IPS: [NJR, MIZ],
NJR: [FCI],
MIZ: [NJR],
FCI: [],
UOY: [NJR, IPS]}","Node IPS is connected to nodes NJR, MIZ.
Node NJR is connected to node FCI.
Node MIZ is connected to node NJR.
Node UOY is connected to nodes NJR, IPS.","[IPS, FCI, MIZ, NJR, UOY]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UOY, IPS, MIZ, NJR, FCI]","Let's solve it step by step.
Nodes with 0 in-degree: [UOY].
Visit node UOY and remove it from the graph.
Nodes with 0 in-degree: [IPS].
Visit node IPS and remove it from the graph.
Nodes with 0 in-degree: [MIZ].
Visit node MIZ and remove it from the graph.
Nodes with 0 in-degree: [NJR].
Visit node NJR and remove it from the graph.
Nodes with 0 in-degree: [FCI].
Visit node FCI and remove it from the graph.
So the result of topological sorting is ","('[[UOY, IPS, MIZ, NJR, FCI], [UOY, IPS, MIZ, FCI, NJR], [UOY, FCI, NJR, MIZ, IPS], [UOY, FCI, IPS, MIZ, NJR]]',)",0,226
topological_sort,"[(FZT, EWH), (FZT, VUJ), (FZT, JUP), (VUJ, JUP), (JUP, EWH), (JUP, LMX), (BZD, LMX), (BZD, EWH), (BZD, JUP), (BZD, VUJ)]","{FZT: [EWH, VUJ, JUP],
EWH: [],
VUJ: [JUP],
JUP: [EWH, LMX],
LMX: [],
BZD: [LMX, EWH, JUP, VUJ]}","Node FZT is connected to nodes EWH, VUJ, JUP.
Node VUJ is connected to node JUP.
Node JUP is connected to nodes EWH, LMX.
Node BZD is connected to nodes LMX, EWH, JUP, VUJ.","[EWH, JUP, BZD, FZT, VUJ, LMX]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FZT, BZD, VUJ, JUP, EWH, LMX]","Let's solve it step by step.
Nodes with 0 in-degree: [FZT, BZD].
Visit node FZT and remove it from the graph.
Nodes with 0 in-degree: [BZD].
Visit node BZD and remove it from the graph.
Nodes with 0 in-degree: [VUJ].
Visit node VUJ and remove it from the graph.
Nodes with 0 in-degree: [JUP].
Visit node JUP and remove it from the graph.
Nodes with 0 in-degree: [EWH, LMX].
Visit node EWH and remove it from the graph.
Nodes with 0 in-degree: [LMX].
Visit node LMX and remove it from the graph.
So the result of topological sorting is ","('[[FZT, BZD, VUJ, LMX, JUP, EWH], [FZT, BZD, EWH, LMX, VUJ, JUP], [FZT, LMX, JUP, BZD, VUJ, EWH], [FZT, BZD, VUJ, JUP, EWH, LMX]]',)",3,227
topological_sort,"[(SYN, KCP), (PBC, SYN), (PBC, KCP), (XZR, SYN), (XZR, PBC), (UFA, SYN)]","{SYN: [KCP],
KCP: [],
PBC: [SYN, KCP],
XZR: [SYN, PBC],
UFA: [SYN]}","Node SYN is connected to node KCP.
Node PBC is connected to nodes SYN, KCP.
Node XZR is connected to nodes SYN, PBC.
Node UFA is connected to node SYN.","[PBC, SYN, XZR, UFA, KCP]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XZR, UFA, PBC, SYN, KCP]","Let's solve it step by step.
Nodes with 0 in-degree: [XZR, UFA].
Visit node XZR and remove it from the graph.
Nodes with 0 in-degree: [UFA, PBC].
Visit node UFA and remove it from the graph.
Nodes with 0 in-degree: [PBC].
Visit node PBC and remove it from the graph.
Nodes with 0 in-degree: [SYN].
Visit node SYN and remove it from the graph.
Nodes with 0 in-degree: [KCP].
Visit node KCP and remove it from the graph.
So the result of topological sorting is ","('[[XZR, PBC, SYN, KCP, UFA], [XZR, UFA, PBC, SYN, KCP], [XZR, UFA, PBC, KCP, SYN], [XZR, KCP, UFA, PBC, SYN]]',)",1,228
topological_sort,"[(ETT, VMC), (ETT, NEG), (ETT, VMD), (NEG, ZHH), (VMD, NEG), (ZXA, ZHH), (ZXA, VMD), (ZXA, TVN), (TVN, ZHH), (TVN, ETT), (TVN, VMD), (TVN, VMC)]","{ETT: [VMC, NEG, VMD],
VMC: [],
NEG: [ZHH],
VMD: [NEG],
ZXA: [ZHH, VMD, TVN],
ZHH: [],
TVN: [ZHH, ETT, VMD, VMC]}","Node ETT is connected to nodes VMC, NEG, VMD.
Node NEG is connected to node ZHH.
Node VMD is connected to node NEG.
Node ZXA is connected to nodes ZHH, VMD, TVN.
Node TVN is connected to nodes ZHH, ETT, VMD, VMC.","[VMC, VMD, ZXA, ZHH, NEG, ETT, TVN]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZXA, TVN, ETT, VMC, VMD, NEG, ZHH]","Let's solve it step by step.
Nodes with 0 in-degree: [ZXA].
Visit node ZXA and remove it from the graph.
Nodes with 0 in-degree: [TVN].
Visit node TVN and remove it from the graph.
Nodes with 0 in-degree: [ETT].
Visit node ETT and remove it from the graph.
Nodes with 0 in-degree: [VMC, VMD].
Visit node VMC and remove it from the graph.
Nodes with 0 in-degree: [VMD].
Visit node VMD and remove it from the graph.
Nodes with 0 in-degree: [NEG].
Visit node NEG and remove it from the graph.
Nodes with 0 in-degree: [ZHH].
Visit node ZHH and remove it from the graph.
So the result of topological sorting is ","('[[ZXA, TVN, NEG, ZHH, ETT, VMC, VMD], [ZXA, TVN, ETT, VMC, VMD, NEG, ZHH], [ZXA, NEG, ETT, TVN, VMD, VMC, ZHH], [ZXA, TVN, ETT, VMC, VMD, ZHH, NEG]]',)",1,229
topological_sort,"[(CQQ, FCN), (CQQ, WPF), (WPF, JVU), (WPF, FCN), (SIP, FCN), (SIP, WPF), (SIP, CQQ)]","{CQQ: [FCN, WPF],
FCN: [],
WPF: [JVU, FCN],
SIP: [FCN, WPF, CQQ],
JVU: []}","Node CQQ is connected to nodes FCN, WPF.
Node WPF is connected to nodes JVU, FCN.
Node SIP is connected to nodes FCN, WPF, CQQ.","[SIP, WPF, FCN, JVU, CQQ]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SIP, CQQ, WPF, JVU, FCN]","Let's solve it step by step.
Nodes with 0 in-degree: [SIP].
Visit node SIP and remove it from the graph.
Nodes with 0 in-degree: [CQQ].
Visit node CQQ and remove it from the graph.
Nodes with 0 in-degree: [WPF].
Visit node WPF and remove it from the graph.
Nodes with 0 in-degree: [JVU, FCN].
Visit node JVU and remove it from the graph.
Nodes with 0 in-degree: [FCN].
Visit node FCN and remove it from the graph.
So the result of topological sorting is ","('[[SIP, CQQ, WPF, JVU, FCN], [SIP, CQQ, JVU, WPF, FCN], [SIP, WPF, FCN, CQQ, JVU], [SIP, FCN, CQQ, WPF, JVU]]',)",0,230
topological_sort,"[(OXF, EVU), (OXF, XHA), (OXF, UJP), (XHA, EVG), (XHA, EVU), (UJP, JIK), (UJP, XHA), (UJP, EVG), (JIK, XHA), (EVG, EVU), (ZAG, EVU), (ZAG, UJP), (ZAG, XHA), (ZAG, JIK)]","{OXF: [EVU, XHA, UJP],
EVU: [],
XHA: [EVG, EVU],
UJP: [JIK, XHA, EVG],
JIK: [XHA],
EVG: [EVU],
ZAG: [EVU, UJP, XHA, JIK]}","Node OXF is connected to nodes EVU, XHA, UJP.
Node XHA is connected to nodes EVG, EVU.
Node UJP is connected to nodes JIK, XHA, EVG.
Node JIK is connected to node XHA.
Node EVG is connected to node EVU.
Node ZAG is connected to nodes EVU, UJP, XHA, JIK.","[OXF, EVG, XHA, ZAG, EVU, JIK, UJP]",7,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OXF, ZAG, UJP, JIK, XHA, EVG, EVU]","Let's solve it step by step.
Nodes with 0 in-degree: [OXF, ZAG].
Visit node OXF and remove it from the graph.
Nodes with 0 in-degree: [ZAG].
Visit node ZAG and remove it from the graph.
Nodes with 0 in-degree: [UJP].
Visit node UJP and remove it from the graph.
Nodes with 0 in-degree: [JIK].
Visit node JIK and remove it from the graph.
Nodes with 0 in-degree: [XHA].
Visit node XHA and remove it from the graph.
Nodes with 0 in-degree: [EVG].
Visit node EVG and remove it from the graph.
Nodes with 0 in-degree: [EVU].
Visit node EVU and remove it from the graph.
So the result of topological sorting is ","('[[OXF, ZAG, UJP, JIK, XHA, EVG, EVU], [OXF, EVU, UJP, XHA, ZAG, EVG, JIK], [OXF, ZAG, UJP, JIK, XHA, EVG, EVU], [OXF, ZAG, EVG, EVU, UJP, JIK, XHA]]',)",2,231
topological_sort,"[(JZK, SKS), (SKS, QBM), (MTR, JBT), (MTR, SKS), (JBT, RJO), (RJO, SKS)]","{JZK: [SKS],
SKS: [QBM],
QBM: [],
MTR: [JBT, SKS],
JBT: [RJO],
RJO: [SKS]}","Node JZK is connected to node SKS.
Node SKS is connected to node QBM.
Node MTR is connected to nodes JBT, SKS.
Node JBT is connected to node RJO.
Node RJO is connected to node SKS.","[SKS, JBT, JZK, RJO, MTR, QBM]",6,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JZK, MTR, JBT, RJO, SKS, QBM]","Let's solve it step by step.
Nodes with 0 in-degree: [JZK, MTR].
Visit node JZK and remove it from the graph.
Nodes with 0 in-degree: [MTR].
Visit node MTR and remove it from the graph.
Nodes with 0 in-degree: [JBT].
Visit node JBT and remove it from the graph.
Nodes with 0 in-degree: [RJO].
Visit node RJO and remove it from the graph.
Nodes with 0 in-degree: [SKS].
Visit node SKS and remove it from the graph.
Nodes with 0 in-degree: [QBM].
Visit node QBM and remove it from the graph.
So the result of topological sorting is ","('[[JZK, QBM, SKS, JBT, RJO, MTR], [JZK, MTR, SKS, QBM, JBT, RJO], [JZK, MTR, JBT, SKS, RJO, QBM], [JZK, MTR, JBT, RJO, SKS, QBM]]',)",3,232
topological_sort,"[(EUI, OCE), (EUI, BRA), (EUI, XKN), (OCE, QXR), (BRA, OCE), (QXR, XKN)]","{EUI: [OCE, BRA, XKN],
OCE: [QXR],
BRA: [OCE],
XKN: [],
QXR: [XKN]}","Node EUI is connected to nodes OCE, BRA, XKN.
Node OCE is connected to node QXR.
Node BRA is connected to node OCE.
Node QXR is connected to node XKN.","[XKN, BRA, OCE, QXR, EUI]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EUI, BRA, OCE, QXR, XKN]","Let's solve it step by step.
Nodes with 0 in-degree: [EUI].
Visit node EUI and remove it from the graph.
Nodes with 0 in-degree: [BRA].
Visit node BRA and remove it from the graph.
Nodes with 0 in-degree: [OCE].
Visit node OCE and remove it from the graph.
Nodes with 0 in-degree: [QXR].
Visit node QXR and remove it from the graph.
Nodes with 0 in-degree: [XKN].
Visit node XKN and remove it from the graph.
So the result of topological sorting is ","('[[EUI, XKN, BRA, OCE, QXR], [EUI, BRA, OCE, QXR, XKN], [EUI, BRA, XKN, QXR, OCE], [EUI, BRA, XKN, OCE, QXR]]',)",1,233
topological_sort,"[(JYV, ISI), (JYV, PPY), (JYV, HWP), (JYV, SJL), (PPY, HWP), (HWP, ISI), (HWP, VRD), (VRD, SJL), (VRD, ISI)]","{JYV: [ISI, PPY, HWP, SJL],
ISI: [],
PPY: [HWP],
HWP: [ISI, VRD],
SJL: [],
VRD: [SJL, ISI]}","Node JYV is connected to nodes ISI, PPY, HWP, SJL.
Node PPY is connected to node HWP.
Node HWP is connected to nodes ISI, VRD.
Node VRD is connected to nodes SJL, ISI.","[ISI, JYV, HWP, VRD, PPY, SJL]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JYV, PPY, HWP, VRD, SJL, ISI]","Let's solve it step by step.
Nodes with 0 in-degree: [JYV].
Visit node JYV and remove it from the graph.
Nodes with 0 in-degree: [PPY].
Visit node PPY and remove it from the graph.
Nodes with 0 in-degree: [HWP].
Visit node HWP and remove it from the graph.
Nodes with 0 in-degree: [VRD].
Visit node VRD and remove it from the graph.
Nodes with 0 in-degree: [SJL, ISI].
Visit node SJL and remove it from the graph.
Nodes with 0 in-degree: [ISI].
Visit node ISI and remove it from the graph.
So the result of topological sorting is ","('[[JYV, PPY, HWP, VRD, SJL, ISI], [JYV, ISI, VRD, PPY, HWP, SJL], [JYV, PPY, HWP, ISI, VRD, SJL], [JYV, PPY, SJL, ISI, HWP, VRD]]',)",0,234
topological_sort,"[(ISN, YTD), (TNJ, YTD), (BQO, YTD), (BQO, TNJ), (GSJ, BQO), (MUI, TNJ), (MUI, GSJ), (MUI, ISN), (EVR, YTD)]","{ISN: [YTD],
YTD: [],
TNJ: [YTD],
BQO: [YTD, TNJ],
GSJ: [BQO],
MUI: [TNJ, GSJ, ISN],
EVR: [YTD]}","Node ISN is connected to node YTD.
Node TNJ is connected to node YTD.
Node BQO is connected to nodes YTD, TNJ.
Node GSJ is connected to node BQO.
Node MUI is connected to nodes TNJ, GSJ, ISN.
Node EVR is connected to node YTD.","[EVR, TNJ, ISN, MUI, GSJ, YTD, BQO]",7,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MUI, EVR, GSJ, ISN, BQO, TNJ, YTD]","Let's solve it step by step.
Nodes with 0 in-degree: [MUI, EVR].
Visit node MUI and remove it from the graph.
Nodes with 0 in-degree: [EVR, GSJ, ISN].
Visit node EVR and remove it from the graph.
Nodes with 0 in-degree: [GSJ, ISN].
Visit node GSJ and remove it from the graph.
Nodes with 0 in-degree: [ISN, BQO].
Visit node ISN and remove it from the graph.
Nodes with 0 in-degree: [BQO].
Visit node BQO and remove it from the graph.
Nodes with 0 in-degree: [TNJ].
Visit node TNJ and remove it from the graph.
Nodes with 0 in-degree: [YTD].
Visit node YTD and remove it from the graph.
So the result of topological sorting is ","('[[MUI, EVR, GSJ, ISN, TNJ, YTD, BQO], [MUI, EVR, TNJ, YTD, GSJ, ISN, BQO], [MUI, GSJ, EVR, BQO, TNJ, YTD, ISN], [MUI, EVR, GSJ, ISN, BQO, TNJ, YTD]]',)",3,235
topological_sort,"[(DPA, GOA), (DPA, YHD), (GOA, BIO), (GOA, YHD), (GOA, DJZ), (YHD, DJZ), (BIO, DJZ), (BIO, YHD)]","{DPA: [GOA, YHD],
GOA: [BIO, YHD, DJZ],
YHD: [DJZ],
BIO: [DJZ, YHD],
DJZ: []}","Node DPA is connected to nodes GOA, YHD.
Node GOA is connected to nodes BIO, YHD, DJZ.
Node YHD is connected to node DJZ.
Node BIO is connected to nodes DJZ, YHD.","[GOA, DPA, DJZ, BIO, YHD]",5,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DPA, GOA, BIO, YHD, DJZ]","Let's solve it step by step.
Nodes with 0 in-degree: [DPA].
Visit node DPA and remove it from the graph.
Nodes with 0 in-degree: [GOA].
Visit node GOA and remove it from the graph.
Nodes with 0 in-degree: [BIO].
Visit node BIO and remove it from the graph.
Nodes with 0 in-degree: [YHD].
Visit node YHD and remove it from the graph.
Nodes with 0 in-degree: [DJZ].
Visit node DJZ and remove it from the graph.
So the result of topological sorting is ","('[[DPA, GOA, DJZ, YHD, BIO], [DPA, DJZ, GOA, BIO, YHD], [DPA, GOA, BIO, YHD, DJZ], [DPA, GOA, DJZ, YHD, BIO]]',)",2,236
topological_sort,"[(VOI, OEH), (VOI, CKM), (VOI, KDH), (VOI, ERR), (OEH, CKM), (CKM, KDH), (CKM, ERR), (ERR, KDH), (TQE, VOI), (TQE, ERR), (TQE, XMA), (XMA, CKM), (XMA, OEH)]","{VOI: [OEH, CKM, KDH, ERR],
OEH: [CKM],
CKM: [KDH, ERR],
KDH: [],
ERR: [KDH],
TQE: [VOI, ERR, XMA],
XMA: [CKM, OEH]}","Node VOI is connected to nodes OEH, CKM, KDH, ERR.
Node OEH is connected to node CKM.
Node CKM is connected to nodes KDH, ERR.
Node ERR is connected to node KDH.
Node TQE is connected to nodes VOI, ERR, XMA.
Node XMA is connected to nodes CKM, OEH.","[ERR, TQE, OEH, KDH, XMA, VOI, CKM]",7,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TQE, VOI, XMA, OEH, CKM, ERR, KDH]","Let's solve it step by step.
Nodes with 0 in-degree: [TQE].
Visit node TQE and remove it from the graph.
Nodes with 0 in-degree: [VOI, XMA].
Visit node VOI and remove it from the graph.
Nodes with 0 in-degree: [XMA].
Visit node XMA and remove it from the graph.
Nodes with 0 in-degree: [OEH].
Visit node OEH and remove it from the graph.
Nodes with 0 in-degree: [CKM].
Visit node CKM and remove it from the graph.
Nodes with 0 in-degree: [ERR].
Visit node ERR and remove it from the graph.
Nodes with 0 in-degree: [KDH].
Visit node KDH and remove it from the graph.
So the result of topological sorting is ","('[[TQE, XMA, CKM, OEH, KDH, ERR, VOI], [TQE, VOI, XMA, OEH, CKM, KDH, ERR], [TQE, VOI, XMA, OEH, CKM, ERR, KDH], [TQE, VOI, ERR, KDH, XMA, OEH, CKM]]',)",2,237
topological_sort,"[(PMN, YEP), (PMN, KPZ), (KPZ, STR), (KPZ, YEP), (XJF, STR), (XJF, PMN), (XJF, YEP), (STR, YEP), (YFY, KPZ), (YFY, YEP)]","{PMN: [YEP, KPZ],
YEP: [],
KPZ: [STR, YEP],
XJF: [STR, PMN, YEP],
STR: [YEP],
YFY: [KPZ, YEP]}","Node PMN is connected to nodes YEP, KPZ.
Node KPZ is connected to nodes STR, YEP.
Node XJF is connected to nodes STR, PMN, YEP.
Node STR is connected to node YEP.
Node YFY is connected to nodes KPZ, YEP.","[PMN, STR, YEP, XJF, YFY, KPZ]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XJF, YFY, PMN, KPZ, STR, YEP]","Let's solve it step by step.
Nodes with 0 in-degree: [XJF, YFY].
Visit node XJF and remove it from the graph.
Nodes with 0 in-degree: [YFY, PMN].
Visit node YFY and remove it from the graph.
Nodes with 0 in-degree: [PMN].
Visit node PMN and remove it from the graph.
Nodes with 0 in-degree: [KPZ].
Visit node KPZ and remove it from the graph.
Nodes with 0 in-degree: [STR].
Visit node STR and remove it from the graph.
Nodes with 0 in-degree: [YEP].
Visit node YEP and remove it from the graph.
So the result of topological sorting is ","('[[XJF, PMN, YEP, STR, KPZ, YFY], [XJF, YFY, STR, YEP, PMN, KPZ], [XJF, YFY, PMN, KPZ, STR, YEP], [XJF, YFY, PMN, KPZ, YEP, STR]]',)",2,238
topological_sort,"[(CMC, JXM), (TKT, JXM), (TKT, URL), (URL, JXM), (FMO, CMC), (FMO, URL)]","{CMC: [JXM],
JXM: [],
TKT: [JXM, URL],
URL: [JXM],
FMO: [CMC, URL]}","Node CMC is connected to node JXM.
Node TKT is connected to nodes JXM, URL.
Node URL is connected to node JXM.
Node FMO is connected to nodes CMC, URL.","[JXM, FMO, TKT, URL, CMC]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TKT, FMO, CMC, URL, JXM]","Let's solve it step by step.
Nodes with 0 in-degree: [TKT, FMO].
Visit node TKT and remove it from the graph.
Nodes with 0 in-degree: [FMO].
Visit node FMO and remove it from the graph.
Nodes with 0 in-degree: [CMC, URL].
Visit node CMC and remove it from the graph.
Nodes with 0 in-degree: [URL].
Visit node URL and remove it from the graph.
Nodes with 0 in-degree: [JXM].
Visit node JXM and remove it from the graph.
So the result of topological sorting is ","('[[TKT, FMO, JXM, CMC, URL], [TKT, FMO, CMC, URL, JXM], [TKT, JXM, FMO, CMC, URL], [TKT, CMC, URL, JXM, FMO]]',)",1,239
topological_sort,"[(DXG, AVE), (DXG, EBU), (AVE, EBU), (AVE, RBC), (AVE, AUY), (AVE, MWZ), (EBU, MWZ), (RBC, AUY), (RBC, MWZ), (RBC, EBU), (AUY, MWZ), (FPY, AVE), (FPY, RBC), (FPY, MWZ), (FPY, EBU)]","{DXG: [AVE, EBU],
AVE: [EBU, RBC, AUY, MWZ],
EBU: [MWZ],
RBC: [AUY, MWZ, EBU],
AUY: [MWZ],
MWZ: [],
FPY: [AVE, RBC, MWZ, EBU]}","Node DXG is connected to nodes AVE, EBU.
Node AVE is connected to nodes EBU, RBC, AUY, MWZ.
Node EBU is connected to node MWZ.
Node RBC is connected to nodes AUY, MWZ, EBU.
Node AUY is connected to node MWZ.
Node FPY is connected to nodes AVE, RBC, MWZ, EBU.","[FPY, AUY, EBU, MWZ, RBC, AVE, DXG]",7,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DXG, FPY, AVE, RBC, AUY, EBU, MWZ]","Let's solve it step by step.
Nodes with 0 in-degree: [DXG, FPY].
Visit node DXG and remove it from the graph.
Nodes with 0 in-degree: [FPY].
Visit node FPY and remove it from the graph.
Nodes with 0 in-degree: [AVE].
Visit node AVE and remove it from the graph.
Nodes with 0 in-degree: [RBC].
Visit node RBC and remove it from the graph.
Nodes with 0 in-degree: [AUY, EBU].
Visit node AUY and remove it from the graph.
Nodes with 0 in-degree: [EBU].
Visit node EBU and remove it from the graph.
Nodes with 0 in-degree: [MWZ].
Visit node MWZ and remove it from the graph.
So the result of topological sorting is ","('[[DXG, AUY, RBC, AVE, FPY, EBU, MWZ], [DXG, FPY, AVE, AUY, MWZ, RBC, EBU], [DXG, FPY, AVE, RBC, AUY, EBU, MWZ], [DXG, FPY, EBU, MWZ, AVE, RBC, AUY]]',)",2,240
topological_sort,"[(WJF, LJH), (WJF, PPE), (WJF, QPT), (PPE, QPT), (PPE, LJH), (GFX, DSO), (GFX, QPT), (GFX, WJF), (DSO, WJF), (YVF, DSO), (YVF, WJF), (YVF, GFX), (YVF, PPE), (YVF, QPT)]","{WJF: [LJH, PPE, QPT],
LJH: [],
PPE: [QPT, LJH],
QPT: [],
GFX: [DSO, QPT, WJF],
DSO: [WJF],
YVF: [DSO, WJF, GFX, PPE, QPT]}","Node WJF is connected to nodes LJH, PPE, QPT.
Node PPE is connected to nodes QPT, LJH.
Node GFX is connected to nodes DSO, QPT, WJF.
Node DSO is connected to node WJF.
Node YVF is connected to nodes DSO, WJF, GFX, PPE, QPT.","[DSO, WJF, QPT, GFX, LJH, YVF, PPE]",7,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YVF, GFX, DSO, WJF, PPE, QPT, LJH]","Let's solve it step by step.
Nodes with 0 in-degree: [YVF].
Visit node YVF and remove it from the graph.
Nodes with 0 in-degree: [GFX].
Visit node GFX and remove it from the graph.
Nodes with 0 in-degree: [DSO].
Visit node DSO and remove it from the graph.
Nodes with 0 in-degree: [WJF].
Visit node WJF and remove it from the graph.
Nodes with 0 in-degree: [PPE].
Visit node PPE and remove it from the graph.
Nodes with 0 in-degree: [QPT, LJH].
Visit node QPT and remove it from the graph.
Nodes with 0 in-degree: [LJH].
Visit node LJH and remove it from the graph.
So the result of topological sorting is ","('[[YVF, GFX, QPT, LJH, DSO, WJF, PPE], [YVF, LJH, PPE, QPT, DSO, GFX, WJF], [YVF, GFX, DSO, WJF, PPE, QPT, LJH], [YVF, GFX, DSO, WJF, PPE, LJH, QPT]]',)",2,241
topological_sort,"[(BAA, CPH), (BAA, WBI), (CPH, WBI), (CPH, QDP), (CPH, WXQ), (WBI, PMP), (QDP, WXQ), (QDP, PMP), (WXQ, WBI)]","{BAA: [CPH, WBI],
CPH: [WBI, QDP, WXQ],
WBI: [PMP],
QDP: [WXQ, PMP],
WXQ: [WBI],
PMP: []}","Node BAA is connected to nodes CPH, WBI.
Node CPH is connected to nodes WBI, QDP, WXQ.
Node WBI is connected to node PMP.
Node QDP is connected to nodes WXQ, PMP.
Node WXQ is connected to node WBI.","[BAA, CPH, QDP, WBI, PMP, WXQ]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BAA, CPH, QDP, WXQ, WBI, PMP]","Let's solve it step by step.
Nodes with 0 in-degree: [BAA].
Visit node BAA and remove it from the graph.
Nodes with 0 in-degree: [CPH].
Visit node CPH and remove it from the graph.
Nodes with 0 in-degree: [QDP].
Visit node QDP and remove it from the graph.
Nodes with 0 in-degree: [WXQ].
Visit node WXQ and remove it from the graph.
Nodes with 0 in-degree: [WBI].
Visit node WBI and remove it from the graph.
Nodes with 0 in-degree: [PMP].
Visit node PMP and remove it from the graph.
So the result of topological sorting is ","('[[BAA, CPH, WBI, PMP, QDP, WXQ], [BAA, WXQ, CPH, QDP, PMP, WBI], [BAA, CPH, QDP, WXQ, WBI, PMP], [BAA, CPH, QDP, PMP, WXQ, WBI]]',)",2,242
topological_sort,"[(ZKU, KSW), (ZKU, DWC), (KSW, DWC), (DWC, KQX), (IHL, DWC), (IHL, KSW)]","{ZKU: [KSW, DWC],
KSW: [DWC],
DWC: [KQX],
KQX: [],
IHL: [DWC, KSW]}","Node ZKU is connected to nodes KSW, DWC.
Node KSW is connected to node DWC.
Node DWC is connected to node KQX.
Node IHL is connected to nodes DWC, KSW.","[ZKU, DWC, IHL, KQX, KSW]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZKU, IHL, KSW, DWC, KQX]","Let's solve it step by step.
Nodes with 0 in-degree: [ZKU, IHL].
Visit node ZKU and remove it from the graph.
Nodes with 0 in-degree: [IHL].
Visit node IHL and remove it from the graph.
Nodes with 0 in-degree: [KSW].
Visit node KSW and remove it from the graph.
Nodes with 0 in-degree: [DWC].
Visit node DWC and remove it from the graph.
Nodes with 0 in-degree: [KQX].
Visit node KQX and remove it from the graph.
So the result of topological sorting is ","('[[ZKU, KQX, IHL, KSW, DWC], [ZKU, DWC, KQX, IHL, KSW], [ZKU, IHL, DWC, KSW, KQX], [ZKU, IHL, KSW, DWC, KQX]]',)",3,243
topological_sort,"[(VWP, RKK), (VWP, QMP), (RKK, HVM), (RKK, BOO), (HVM, BOO), (HVM, QMP)]","{VWP: [RKK, QMP],
RKK: [HVM, BOO],
QMP: [],
HVM: [BOO, QMP],
BOO: []}","Node VWP is connected to nodes RKK, QMP.
Node RKK is connected to nodes HVM, BOO.
Node HVM is connected to nodes BOO, QMP.","[HVM, QMP, BOO, VWP, RKK]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VWP, RKK, HVM, BOO, QMP]","Let's solve it step by step.
Nodes with 0 in-degree: [VWP].
Visit node VWP and remove it from the graph.
Nodes with 0 in-degree: [RKK].
Visit node RKK and remove it from the graph.
Nodes with 0 in-degree: [HVM].
Visit node HVM and remove it from the graph.
Nodes with 0 in-degree: [BOO, QMP].
Visit node BOO and remove it from the graph.
Nodes with 0 in-degree: [QMP].
Visit node QMP and remove it from the graph.
So the result of topological sorting is ","('[[VWP, RKK, HVM, BOO, QMP], [VWP, RKK, QMP, HVM, BOO], [VWP, QMP, RKK, HVM, BOO], [VWP, HVM, BOO, QMP, RKK]]',)",0,244
topological_sort,"[(ZOE, UKI), (ZOE, QRW), (ZOE, HEM), (UKI, DEF), (UKI, QRW), (HEM, DEF), (DEF, QRW), (DEF, FUU), (FUU, QRW), (TYK, UKI), (TYK, ZOE)]","{ZOE: [UKI, QRW, HEM],
UKI: [DEF, QRW],
QRW: [],
HEM: [DEF],
DEF: [QRW, FUU],
FUU: [QRW],
TYK: [UKI, ZOE]}","Node ZOE is connected to nodes UKI, QRW, HEM.
Node UKI is connected to nodes DEF, QRW.
Node HEM is connected to node DEF.
Node DEF is connected to nodes QRW, FUU.
Node FUU is connected to node QRW.
Node TYK is connected to nodes UKI, ZOE.","[FUU, DEF, ZOE, TYK, QRW, HEM, UKI]",7,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TYK, ZOE, UKI, HEM, DEF, FUU, QRW]","Let's solve it step by step.
Nodes with 0 in-degree: [TYK].
Visit node TYK and remove it from the graph.
Nodes with 0 in-degree: [ZOE].
Visit node ZOE and remove it from the graph.
Nodes with 0 in-degree: [UKI, HEM].
Visit node UKI and remove it from the graph.
Nodes with 0 in-degree: [HEM].
Visit node HEM and remove it from the graph.
Nodes with 0 in-degree: [DEF].
Visit node DEF and remove it from the graph.
Nodes with 0 in-degree: [FUU].
Visit node FUU and remove it from the graph.
Nodes with 0 in-degree: [QRW].
Visit node QRW and remove it from the graph.
So the result of topological sorting is ","('[[TYK, ZOE, FUU, QRW, UKI, HEM, DEF], [TYK, FUU, UKI, DEF, HEM, QRW, ZOE], [TYK, ZOE, UKI, FUU, DEF, QRW, HEM], [TYK, ZOE, UKI, HEM, DEF, FUU, QRW]]',)",3,245
topological_sort,"[(RUQ, TZG), (RUQ, CLH), (CLH, YHI), (YHI, TZG), (TXT, CLH)]","{RUQ: [TZG, CLH],
TZG: [],
CLH: [YHI],
YHI: [TZG],
TXT: [CLH]}","Node RUQ is connected to nodes TZG, CLH.
Node CLH is connected to node YHI.
Node YHI is connected to node TZG.
Node TXT is connected to node CLH.","[TXT, CLH, YHI, RUQ, TZG]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RUQ, TXT, CLH, YHI, TZG]","Let's solve it step by step.
Nodes with 0 in-degree: [RUQ, TXT].
Visit node RUQ and remove it from the graph.
Nodes with 0 in-degree: [TXT].
Visit node TXT and remove it from the graph.
Nodes with 0 in-degree: [CLH].
Visit node CLH and remove it from the graph.
Nodes with 0 in-degree: [YHI].
Visit node YHI and remove it from the graph.
Nodes with 0 in-degree: [TZG].
Visit node TZG and remove it from the graph.
So the result of topological sorting is ","('[[RUQ, TXT, CLH, YHI, TZG], [RUQ, CLH, YHI, TXT, TZG], [RUQ, TXT, CLH, TZG, YHI], [RUQ, TZG, TXT, CLH, YHI]]',)",0,246
topological_sort,"[(RBH, AWK), (RBH, VDR), (RBH, OYI), (OYI, AWK), (ZBG, AWK)]","{RBH: [AWK, VDR, OYI],
AWK: [],
VDR: [],
OYI: [AWK],
ZBG: [AWK]}","Node RBH is connected to nodes AWK, VDR, OYI.
Node OYI is connected to node AWK.
Node ZBG is connected to node AWK.","[VDR, OYI, RBH, AWK, ZBG]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RBH, ZBG, VDR, OYI, AWK]","Let's solve it step by step.
Nodes with 0 in-degree: [RBH, ZBG].
Visit node RBH and remove it from the graph.
Nodes with 0 in-degree: [ZBG, VDR, OYI].
Visit node ZBG and remove it from the graph.
Nodes with 0 in-degree: [VDR, OYI].
Visit node VDR and remove it from the graph.
Nodes with 0 in-degree: [OYI].
Visit node OYI and remove it from the graph.
Nodes with 0 in-degree: [AWK].
Visit node AWK and remove it from the graph.
So the result of topological sorting is ","('[[RBH, ZBG, OYI, VDR, AWK], [RBH, ZBG, OYI, AWK, VDR], [RBH, ZBG, VDR, OYI, AWK], [RBH, AWK, ZBG, VDR, OYI]]',)",2,247
topological_sort,"[(JSU, CYN), (JSU, EDH), (CYN, EDH), (SER, ARS), (SER, EDH), (PBN, CYN), (PBN, ARS)]","{JSU: [CYN, EDH],
CYN: [EDH],
EDH: [],
SER: [ARS, EDH],
ARS: [],
PBN: [CYN, ARS]}","Node JSU is connected to nodes CYN, EDH.
Node CYN is connected to node EDH.
Node SER is connected to nodes ARS, EDH.
Node PBN is connected to nodes CYN, ARS.","[ARS, CYN, SER, JSU, PBN, EDH]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JSU, SER, PBN, CYN, ARS, EDH]","Let's solve it step by step.
Nodes with 0 in-degree: [JSU, SER, PBN].
Visit node JSU and remove it from the graph.
Nodes with 0 in-degree: [SER, PBN].
Visit node SER and remove it from the graph.
Nodes with 0 in-degree: [PBN].
Visit node PBN and remove it from the graph.
Nodes with 0 in-degree: [CYN, ARS].
Visit node CYN and remove it from the graph.
Nodes with 0 in-degree: [ARS, EDH].
Visit node ARS and remove it from the graph.
Nodes with 0 in-degree: [EDH].
Visit node EDH and remove it from the graph.
So the result of topological sorting is ","('[[JSU, SER, PBN, CYN, ARS, EDH], [JSU, EDH, SER, ARS, PBN, CYN], [JSU, SER, ARS, EDH, PBN, CYN], [JSU, SER, PBN, CYN, ARS, EDH]]',)",0,248
topological_sort,"[(NPL, JPC), (NPL, JOH), (NPL, MEF), (JOH, HYK), (JOH, RVG), (MEF, RVG), (HYK, JPC), (RVG, JPC), (RVG, HYK)]","{NPL: [JPC, JOH, MEF],
JPC: [],
JOH: [HYK, RVG],
MEF: [RVG],
HYK: [JPC],
RVG: [JPC, HYK]}","Node NPL is connected to nodes JPC, JOH, MEF.
Node JOH is connected to nodes HYK, RVG.
Node MEF is connected to node RVG.
Node HYK is connected to node JPC.
Node RVG is connected to nodes JPC, HYK.","[HYK, NPL, RVG, MEF, JPC, JOH]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[NPL, JOH, MEF, RVG, HYK, JPC]","Let's solve it step by step.
Nodes with 0 in-degree: [NPL].
Visit node NPL and remove it from the graph.
Nodes with 0 in-degree: [JOH, MEF].
Visit node JOH and remove it from the graph.
Nodes with 0 in-degree: [MEF].
Visit node MEF and remove it from the graph.
Nodes with 0 in-degree: [RVG].
Visit node RVG and remove it from the graph.
Nodes with 0 in-degree: [HYK].
Visit node HYK and remove it from the graph.
Nodes with 0 in-degree: [JPC].
Visit node JPC and remove it from the graph.
So the result of topological sorting is ","('[[NPL, JOH, MEF, RVG, HYK, JPC], [NPL, JOH, HYK, JPC, MEF, RVG], [NPL, JOH, MEF, RVG, JPC, HYK], [NPL, JPC, RVG, HYK, MEF, JOH]]',)",0,249
topological_sort,"[(KPQ, VHT), (KPQ, KRO), (KPQ, YLU), (VHT, KRO), (VHT, MPM), (MKS, VHT), (MKS, KRO), (EZL, MKS)]","{KPQ: [VHT, KRO, YLU],
VHT: [KRO, MPM],
KRO: [],
YLU: [],
MPM: [],
MKS: [VHT, KRO],
EZL: [MKS]}","Node KPQ is connected to nodes VHT, KRO, YLU.
Node VHT is connected to nodes KRO, MPM.
Node MKS is connected to nodes VHT, KRO.
Node EZL is connected to node MKS.","[EZL, MKS, VHT, MPM, YLU, KRO, KPQ]",7,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KPQ, EZL, YLU, MKS, VHT, KRO, MPM]","Let's solve it step by step.
Nodes with 0 in-degree: [KPQ, EZL].
Visit node KPQ and remove it from the graph.
Nodes with 0 in-degree: [EZL, YLU].
Visit node EZL and remove it from the graph.
Nodes with 0 in-degree: [YLU, MKS].
Visit node YLU and remove it from the graph.
Nodes with 0 in-degree: [MKS].
Visit node MKS and remove it from the graph.
Nodes with 0 in-degree: [VHT].
Visit node VHT and remove it from the graph.
Nodes with 0 in-degree: [KRO, MPM].
Visit node KRO and remove it from the graph.
Nodes with 0 in-degree: [MPM].
Visit node MPM and remove it from the graph.
So the result of topological sorting is ","('[[KPQ, EZL, YLU, MKS, VHT, KRO, MPM], [KPQ, EZL, KRO, MPM, YLU, MKS, VHT], [KPQ, EZL, YLU, VHT, MPM, KRO, MKS], [KPQ, KRO, MPM, MKS, EZL, YLU, VHT]]',)",0,250
topological_sort,"[(ORR, HCA), (HCA, SSJ), (WRM, YFY), (WRM, KKT), (WRM, SSJ), (WRM, HCA), (YFY, ORR), (YFY, SSJ), (KKT, HCA), (KKT, YFY), (KKT, SSJ), (ZCU, SSJ), (ZCU, KKT)]","{ORR: [HCA],
HCA: [SSJ],
SSJ: [],
WRM: [YFY, KKT, SSJ, HCA],
YFY: [ORR, SSJ],
KKT: [HCA, YFY, SSJ],
ZCU: [SSJ, KKT]}","Node ORR is connected to node HCA.
Node HCA is connected to node SSJ.
Node WRM is connected to nodes YFY, KKT, SSJ, HCA.
Node YFY is connected to nodes ORR, SSJ.
Node KKT is connected to nodes HCA, YFY, SSJ.
Node ZCU is connected to nodes SSJ, KKT.","[KKT, WRM, HCA, SSJ, YFY, ZCU, ORR]",7,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WRM, ZCU, KKT, YFY, ORR, HCA, SSJ]","Let's solve it step by step.
Nodes with 0 in-degree: [WRM, ZCU].
Visit node WRM and remove it from the graph.
Nodes with 0 in-degree: [ZCU].
Visit node ZCU and remove it from the graph.
Nodes with 0 in-degree: [KKT].
Visit node KKT and remove it from the graph.
Nodes with 0 in-degree: [YFY].
Visit node YFY and remove it from the graph.
Nodes with 0 in-degree: [ORR].
Visit node ORR and remove it from the graph.
Nodes with 0 in-degree: [HCA].
Visit node HCA and remove it from the graph.
Nodes with 0 in-degree: [SSJ].
Visit node SSJ and remove it from the graph.
So the result of topological sorting is ","('[[WRM, ZCU, HCA, SSJ, KKT, YFY, ORR], [WRM, ZCU, KKT, SSJ, YFY, ORR, HCA], [WRM, ZCU, KKT, YFY, ORR, HCA, SSJ], [WRM, SSJ, ZCU, HCA, ORR, KKT, YFY]]',)",2,251
topological_sort,"[(DQZ, VGL), (DQZ, GAA), (DQZ, AYX), (VGL, AYX), (VGL, GAA), (VGL, BFH), (AYX, BFH), (AYX, GAA), (BFH, GAA), (QIJ, DQZ), (QIJ, AYX), (QIJ, YFT), (QIJ, VGL), (QIJ, GAA), (YFT, AYX), (YFT, BFH)]","{DQZ: [VGL, GAA, AYX],
VGL: [AYX, GAA, BFH],
GAA: [],
AYX: [BFH, GAA],
BFH: [GAA],
QIJ: [DQZ, AYX, YFT, VGL, GAA],
YFT: [AYX, BFH]}","Node DQZ is connected to nodes VGL, GAA, AYX.
Node VGL is connected to nodes AYX, GAA, BFH.
Node AYX is connected to nodes BFH, GAA.
Node BFH is connected to node GAA.
Node QIJ is connected to nodes DQZ, AYX, YFT, VGL, GAA.
Node YFT is connected to nodes AYX, BFH.","[BFH, GAA, QIJ, DQZ, VGL, YFT, AYX]",7,16,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QIJ, DQZ, YFT, VGL, AYX, BFH, GAA]","Let's solve it step by step.
Nodes with 0 in-degree: [QIJ].
Visit node QIJ and remove it from the graph.
Nodes with 0 in-degree: [DQZ, YFT].
Visit node DQZ and remove it from the graph.
Nodes with 0 in-degree: [YFT, VGL].
Visit node YFT and remove it from the graph.
Nodes with 0 in-degree: [VGL].
Visit node VGL and remove it from the graph.
Nodes with 0 in-degree: [AYX].
Visit node AYX and remove it from the graph.
Nodes with 0 in-degree: [BFH].
Visit node BFH and remove it from the graph.
Nodes with 0 in-degree: [GAA].
Visit node GAA and remove it from the graph.
So the result of topological sorting is ","('[[QIJ, DQZ, YFT, VGL, AYX, GAA, BFH], [QIJ, DQZ, YFT, VGL, AYX, BFH, GAA], [QIJ, VGL, GAA, AYX, DQZ, YFT, BFH], [QIJ, DQZ, BFH, GAA, YFT, VGL, AYX]]',)",1,252
topological_sort,"[(ZYK, WFI), (ZYK, GCV), (ZYK, IQQ), (WFI, IQQ), (GCV, IQQ), (GCV, WFI), (GCV, GYT), (GCV, KSQ), (KSQ, IQQ), (GYT, WFI), (GYT, KSQ), (GYT, IQQ), (JSU, KSQ), (JSU, GCV), (JSU, ZYK), (JSU, GYT)]","{ZYK: [WFI, GCV, IQQ],
WFI: [IQQ],
GCV: [IQQ, WFI, GYT, KSQ],
IQQ: [],
KSQ: [IQQ],
GYT: [WFI, KSQ, IQQ],
JSU: [KSQ, GCV, ZYK, GYT]}","Node ZYK is connected to nodes WFI, GCV, IQQ.
Node WFI is connected to node IQQ.
Node GCV is connected to nodes IQQ, WFI, GYT, KSQ.
Node KSQ is connected to node IQQ.
Node GYT is connected to nodes WFI, KSQ, IQQ.
Node JSU is connected to nodes KSQ, GCV, ZYK, GYT.","[WFI, ZYK, GYT, GCV, KSQ, IQQ, JSU]",7,16,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JSU, ZYK, GCV, GYT, WFI, KSQ, IQQ]","Let's solve it step by step.
Nodes with 0 in-degree: [JSU].
Visit node JSU and remove it from the graph.
Nodes with 0 in-degree: [ZYK].
Visit node ZYK and remove it from the graph.
Nodes with 0 in-degree: [GCV].
Visit node GCV and remove it from the graph.
Nodes with 0 in-degree: [GYT].
Visit node GYT and remove it from the graph.
Nodes with 0 in-degree: [WFI, KSQ].
Visit node WFI and remove it from the graph.
Nodes with 0 in-degree: [KSQ].
Visit node KSQ and remove it from the graph.
Nodes with 0 in-degree: [IQQ].
Visit node IQQ and remove it from the graph.
So the result of topological sorting is ","('[[JSU, ZYK, GCV, WFI, GYT, IQQ, KSQ], [JSU, ZYK, GCV, GYT, WFI, KSQ, IQQ], [JSU, GYT, WFI, KSQ, ZYK, GCV, IQQ], [JSU, ZYK, KSQ, IQQ, GCV, GYT, WFI]]',)",1,253
topological_sort,"[(PPS, KVH), (PPS, ODJ), (PPS, XYN), (KVH, ODJ), (KVH, NBL), (ODJ, XYN), (ODJ, NBL), (DTC, XYN), (DTC, NBL)]","{PPS: [KVH, ODJ, XYN],
KVH: [ODJ, NBL],
ODJ: [XYN, NBL],
XYN: [],
NBL: [],
DTC: [XYN, NBL]}","Node PPS is connected to nodes KVH, ODJ, XYN.
Node KVH is connected to nodes ODJ, NBL.
Node ODJ is connected to nodes XYN, NBL.
Node DTC is connected to nodes XYN, NBL.","[PPS, DTC, NBL, KVH, XYN, ODJ]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PPS, DTC, KVH, ODJ, XYN, NBL]","Let's solve it step by step.
Nodes with 0 in-degree: [PPS, DTC].
Visit node PPS and remove it from the graph.
Nodes with 0 in-degree: [DTC, KVH].
Visit node DTC and remove it from the graph.
Nodes with 0 in-degree: [KVH].
Visit node KVH and remove it from the graph.
Nodes with 0 in-degree: [ODJ].
Visit node ODJ and remove it from the graph.
Nodes with 0 in-degree: [XYN, NBL].
Visit node XYN and remove it from the graph.
Nodes with 0 in-degree: [NBL].
Visit node NBL and remove it from the graph.
So the result of topological sorting is ","('[[PPS, DTC, XYN, NBL, KVH, ODJ], [PPS, KVH, DTC, XYN, NBL, ODJ], [PPS, DTC, KVH, ODJ, NBL, XYN], [PPS, DTC, KVH, ODJ, XYN, NBL]]',)",3,254
topological_sort,"[(JHM, FMD), (JHM, IKA), (FMD, IKA), (EXV, YVY), (EXV, IKA), (ZUL, EXV), (ZUL, JHM)]","{JHM: [FMD, IKA],
FMD: [IKA],
IKA: [],
EXV: [YVY, IKA],
YVY: [],
ZUL: [EXV, JHM]}","Node JHM is connected to nodes FMD, IKA.
Node FMD is connected to node IKA.
Node EXV is connected to nodes YVY, IKA.
Node ZUL is connected to nodes EXV, JHM.","[YVY, FMD, ZUL, EXV, JHM, IKA]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZUL, EXV, JHM, YVY, FMD, IKA]","Let's solve it step by step.
Nodes with 0 in-degree: [ZUL].
Visit node ZUL and remove it from the graph.
Nodes with 0 in-degree: [EXV, JHM].
Visit node EXV and remove it from the graph.
Nodes with 0 in-degree: [JHM, YVY].
Visit node JHM and remove it from the graph.
Nodes with 0 in-degree: [YVY, FMD].
Visit node YVY and remove it from the graph.
Nodes with 0 in-degree: [FMD].
Visit node FMD and remove it from the graph.
Nodes with 0 in-degree: [IKA].
Visit node IKA and remove it from the graph.
So the result of topological sorting is ","('[[ZUL, EXV, JHM, YVY, FMD, IKA], [ZUL, FMD, JHM, YVY, EXV, IKA], [ZUL, EXV, FMD, IKA, JHM, YVY], [ZUL, EXV, JHM, IKA, YVY, FMD]]',)",0,255
topological_sort,"[(CHI, DTO), (CHI, VLU), (VLU, HYJ), (VLU, QTH), (HYJ, QTH), (QTH, DTO)]","{CHI: [DTO, VLU],
DTO: [],
VLU: [HYJ, QTH],
HYJ: [QTH],
QTH: [DTO]}","Node CHI is connected to nodes DTO, VLU.
Node VLU is connected to nodes HYJ, QTH.
Node HYJ is connected to node QTH.
Node QTH is connected to node DTO.","[VLU, CHI, HYJ, QTH, DTO]",5,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CHI, VLU, HYJ, QTH, DTO]","Let's solve it step by step.
Nodes with 0 in-degree: [CHI].
Visit node CHI and remove it from the graph.
Nodes with 0 in-degree: [VLU].
Visit node VLU and remove it from the graph.
Nodes with 0 in-degree: [HYJ].
Visit node HYJ and remove it from the graph.
Nodes with 0 in-degree: [QTH].
Visit node QTH and remove it from the graph.
Nodes with 0 in-degree: [DTO].
Visit node DTO and remove it from the graph.
So the result of topological sorting is ","('[[CHI, VLU, DTO, QTH, HYJ], [CHI, DTO, VLU, HYJ, QTH], [CHI, VLU, QTH, HYJ, DTO], [CHI, VLU, HYJ, QTH, DTO]]',)",3,256
topological_sort,"[(GUK, WKZ), (GUK, WRG), (GUK, UBA), (WKZ, WYQ), (WKZ, UBA), (WRG, UBA), (WRG, WKZ), (WRG, WYQ), (UBA, WYQ)]","{GUK: [WKZ, WRG, UBA],
WKZ: [WYQ, UBA],
WRG: [UBA, WKZ, WYQ],
UBA: [WYQ],
WYQ: []}","Node GUK is connected to nodes WKZ, WRG, UBA.
Node WKZ is connected to nodes WYQ, UBA.
Node WRG is connected to nodes UBA, WKZ, WYQ.
Node UBA is connected to node WYQ.","[WKZ, WYQ, GUK, WRG, UBA]",5,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GUK, WRG, WKZ, UBA, WYQ]","Let's solve it step by step.
Nodes with 0 in-degree: [GUK].
Visit node GUK and remove it from the graph.
Nodes with 0 in-degree: [WRG].
Visit node WRG and remove it from the graph.
Nodes with 0 in-degree: [WKZ].
Visit node WKZ and remove it from the graph.
Nodes with 0 in-degree: [UBA].
Visit node UBA and remove it from the graph.
Nodes with 0 in-degree: [WYQ].
Visit node WYQ and remove it from the graph.
So the result of topological sorting is ","('[[GUK, WYQ, WRG, WKZ, UBA], [GUK, WRG, WKZ, WYQ, UBA], [GUK, WRG, UBA, WKZ, WYQ], [GUK, WRG, WKZ, UBA, WYQ]]',)",3,257
topological_sort,"[(XSN, QJB), (XSN, TVH), (TVH, KXP), (FVA, QJB), (FVA, TVH), (FVA, XSN), (FVA, KXP), (FVA, YIB), (KXP, ZJT), (YIB, QJB), (ZJT, YIB)]","{XSN: [QJB, TVH],
QJB: [],
TVH: [KXP],
FVA: [QJB, TVH, XSN, KXP, YIB],
KXP: [ZJT],
YIB: [QJB],
ZJT: [YIB]}","Node XSN is connected to nodes QJB, TVH.
Node TVH is connected to node KXP.
Node FVA is connected to nodes QJB, TVH, XSN, KXP, YIB.
Node KXP is connected to node ZJT.
Node YIB is connected to node QJB.
Node ZJT is connected to node YIB.","[XSN, FVA, KXP, YIB, QJB, TVH, ZJT]",7,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FVA, XSN, TVH, KXP, ZJT, YIB, QJB]","Let's solve it step by step.
Nodes with 0 in-degree: [FVA].
Visit node FVA and remove it from the graph.
Nodes with 0 in-degree: [XSN].
Visit node XSN and remove it from the graph.
Nodes with 0 in-degree: [TVH].
Visit node TVH and remove it from the graph.
Nodes with 0 in-degree: [KXP].
Visit node KXP and remove it from the graph.
Nodes with 0 in-degree: [ZJT].
Visit node ZJT and remove it from the graph.
Nodes with 0 in-degree: [YIB].
Visit node YIB and remove it from the graph.
Nodes with 0 in-degree: [QJB].
Visit node QJB and remove it from the graph.
So the result of topological sorting is ","('[[FVA, XSN, TVH, KXP, YIB, QJB, ZJT], [FVA, XSN, TVH, KXP, ZJT, YIB, QJB], [FVA, XSN, YIB, QJB, KXP, ZJT, TVH], [FVA, XSN, YIB, QJB, TVH, KXP, ZJT]]',)",1,258
topological_sort,"[(HDK, LMI), (LMI, HXM), (LMI, QCS), (GBO, HDK)]","{HDK: [LMI],
LMI: [HXM, QCS],
HXM: [],
QCS: [],
GBO: [HDK]}","Node HDK is connected to node LMI.
Node LMI is connected to nodes HXM, QCS.
Node GBO is connected to node HDK.","[LMI, HDK, QCS, HXM, GBO]",5,4,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GBO, HDK, LMI, HXM, QCS]","Let's solve it step by step.
Nodes with 0 in-degree: [GBO].
Visit node GBO and remove it from the graph.
Nodes with 0 in-degree: [HDK].
Visit node HDK and remove it from the graph.
Nodes with 0 in-degree: [LMI].
Visit node LMI and remove it from the graph.
Nodes with 0 in-degree: [HXM, QCS].
Visit node HXM and remove it from the graph.
Nodes with 0 in-degree: [QCS].
Visit node QCS and remove it from the graph.
So the result of topological sorting is ","('[[GBO, HDK, LMI, HXM, QCS], [GBO, HXM, LMI, HDK, QCS], [GBO, QCS, HDK, LMI, HXM], [GBO, HDK, LMI, QCS, HXM]]',)",0,259
topological_sort,"[(VOC, IAJ), (EJW, VMO), (EJW, IAJ), (VMO, VOC), (RWJ, IAJ), (RWJ, VOC), (RWJ, EJW)]","{VOC: [IAJ],
IAJ: [],
EJW: [VMO, IAJ],
VMO: [VOC],
RWJ: [IAJ, VOC, EJW]}","Node VOC is connected to node IAJ.
Node EJW is connected to nodes VMO, IAJ.
Node VMO is connected to node VOC.
Node RWJ is connected to nodes IAJ, VOC, EJW.","[VOC, IAJ, RWJ, VMO, EJW]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RWJ, EJW, VMO, VOC, IAJ]","Let's solve it step by step.
Nodes with 0 in-degree: [RWJ].
Visit node RWJ and remove it from the graph.
Nodes with 0 in-degree: [EJW].
Visit node EJW and remove it from the graph.
Nodes with 0 in-degree: [VMO].
Visit node VMO and remove it from the graph.
Nodes with 0 in-degree: [VOC].
Visit node VOC and remove it from the graph.
Nodes with 0 in-degree: [IAJ].
Visit node IAJ and remove it from the graph.
So the result of topological sorting is ","('[[RWJ, IAJ, EJW, VMO, VOC], [RWJ, EJW, VMO, VOC, IAJ], [RWJ, EJW, VMO, VOC, IAJ], [RWJ, EJW, VMO, VOC, IAJ]]',)",2,260
topological_sort,"[(SSG, RIY), (TAA, RIY), (IKG, RIY), (IKG, GOC), (IKG, SSG), (IKG, TAA), (GOC, TAA), (GOC, FAL), (GOC, BZC), (BZC, FAL), (BZC, RIY)]","{SSG: [RIY],
RIY: [],
TAA: [RIY],
IKG: [RIY, GOC, SSG, TAA],
GOC: [TAA, FAL, BZC],
FAL: [],
BZC: [FAL, RIY]}","Node SSG is connected to node RIY.
Node TAA is connected to node RIY.
Node IKG is connected to nodes RIY, GOC, SSG, TAA.
Node GOC is connected to nodes TAA, FAL, BZC.
Node BZC is connected to nodes FAL, RIY.","[SSG, BZC, IKG, FAL, GOC, RIY, TAA]",7,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IKG, GOC, SSG, TAA, BZC, FAL, RIY]","Let's solve it step by step.
Nodes with 0 in-degree: [IKG].
Visit node IKG and remove it from the graph.
Nodes with 0 in-degree: [GOC, SSG].
Visit node GOC and remove it from the graph.
Nodes with 0 in-degree: [SSG, TAA, BZC].
Visit node SSG and remove it from the graph.
Nodes with 0 in-degree: [TAA, BZC].
Visit node TAA and remove it from the graph.
Nodes with 0 in-degree: [BZC].
Visit node BZC and remove it from the graph.
Nodes with 0 in-degree: [FAL, RIY].
Visit node FAL and remove it from the graph.
Nodes with 0 in-degree: [RIY].
Visit node RIY and remove it from the graph.
So the result of topological sorting is ","('[[IKG, GOC, SSG, FAL, RIY, BZC, TAA], [IKG, GOC, SSG, TAA, BZC, FAL, RIY], [IKG, GOC, FAL, RIY, SSG, TAA, BZC], [IKG, GOC, RIY, BZC, SSG, FAL, TAA]]',)",1,261
topological_sort,"[(GLK, KHA), (OAY, ZVG), (ZVG, GLK), (NSM, GLK), (NSM, ZVG)]","{GLK: [KHA],
KHA: [],
OAY: [ZVG],
ZVG: [GLK],
NSM: [GLK, ZVG]}","Node GLK is connected to node KHA.
Node OAY is connected to node ZVG.
Node ZVG is connected to node GLK.
Node NSM is connected to nodes GLK, ZVG.","[GLK, KHA, ZVG, NSM, OAY]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OAY, NSM, ZVG, GLK, KHA]","Let's solve it step by step.
Nodes with 0 in-degree: [OAY, NSM].
Visit node OAY and remove it from the graph.
Nodes with 0 in-degree: [NSM].
Visit node NSM and remove it from the graph.
Nodes with 0 in-degree: [ZVG].
Visit node ZVG and remove it from the graph.
Nodes with 0 in-degree: [GLK].
Visit node GLK and remove it from the graph.
Nodes with 0 in-degree: [KHA].
Visit node KHA and remove it from the graph.
So the result of topological sorting is ","('[[OAY, ZVG, GLK, KHA, NSM], [OAY, NSM, ZVG, GLK, KHA], [OAY, KHA, NSM, ZVG, GLK], [OAY, NSM, KHA, ZVG, GLK]]',)",1,262
topological_sort,"[(XPE, LCP), (XPE, ANG), (XPE, QSV), (LCP, CEJ), (ANG, CEJ), (QSV, RNN), (RNN, QHT), (QHT, LCP)]","{XPE: [LCP, ANG, QSV],
LCP: [CEJ],
ANG: [CEJ],
QSV: [RNN],
CEJ: [],
RNN: [QHT],
QHT: [LCP]}","Node XPE is connected to nodes LCP, ANG, QSV.
Node LCP is connected to node CEJ.
Node ANG is connected to node CEJ.
Node QSV is connected to node RNN.
Node RNN is connected to node QHT.
Node QHT is connected to node LCP.","[RNN, LCP, QSV, XPE, QHT, CEJ, ANG]",7,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XPE, ANG, QSV, RNN, QHT, LCP, CEJ]","Let's solve it step by step.
Nodes with 0 in-degree: [XPE].
Visit node XPE and remove it from the graph.
Nodes with 0 in-degree: [ANG, QSV].
Visit node ANG and remove it from the graph.
Nodes with 0 in-degree: [QSV].
Visit node QSV and remove it from the graph.
Nodes with 0 in-degree: [RNN].
Visit node RNN and remove it from the graph.
Nodes with 0 in-degree: [QHT].
Visit node QHT and remove it from the graph.
Nodes with 0 in-degree: [LCP].
Visit node LCP and remove it from the graph.
Nodes with 0 in-degree: [CEJ].
Visit node CEJ and remove it from the graph.
So the result of topological sorting is ","('[[XPE, ANG, QSV, LCP, CEJ, QHT, RNN], [XPE, ANG, QSV, RNN, QHT, LCP, CEJ], [XPE, LCP, RNN, QHT, CEJ, QSV, ANG], [XPE, ANG, LCP, CEJ, QSV, RNN, QHT]]',)",1,263
topological_sort,"[(FMK, BNC), (FMK, FND), (FMK, JEP), (FMK, TKP), (BNC, JEP), (FND, JEP), (FND, TKP), (TKP, BNC), (TKP, TLR), (TLR, JEP)]","{FMK: [BNC, FND, JEP, TKP],
BNC: [JEP],
FND: [JEP, TKP],
JEP: [],
TKP: [BNC, TLR],
TLR: [JEP]}","Node FMK is connected to nodes BNC, FND, JEP, TKP.
Node BNC is connected to node JEP.
Node FND is connected to nodes JEP, TKP.
Node TKP is connected to nodes BNC, TLR.
Node TLR is connected to node JEP.","[TLR, BNC, FND, JEP, TKP, FMK]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FMK, FND, TKP, BNC, TLR, JEP]","Let's solve it step by step.
Nodes with 0 in-degree: [FMK].
Visit node FMK and remove it from the graph.
Nodes with 0 in-degree: [FND].
Visit node FND and remove it from the graph.
Nodes with 0 in-degree: [TKP].
Visit node TKP and remove it from the graph.
Nodes with 0 in-degree: [BNC, TLR].
Visit node BNC and remove it from the graph.
Nodes with 0 in-degree: [TLR].
Visit node TLR and remove it from the graph.
Nodes with 0 in-degree: [JEP].
Visit node JEP and remove it from the graph.
So the result of topological sorting is ","('[[FMK, FND, TKP, JEP, BNC, TLR], [FMK, TKP, JEP, TLR, BNC, FND], [FMK, FND, TLR, JEP, TKP, BNC], [FMK, FND, TKP, BNC, TLR, JEP]]',)",3,264
topological_sort,"[(STY, ZOJ), (STY, UJM), (ZOJ, TZY), (UJM, TZY), (UJM, ZOJ), (CGB, ZOJ), (CGB, STY), (CGB, TZY), (XWV, TZY), (XWV, AOF), (AOF, CGB), (AOF, ZOJ), (AOF, TZY)]","{STY: [ZOJ, UJM],
ZOJ: [TZY],
UJM: [TZY, ZOJ],
TZY: [],
CGB: [ZOJ, STY, TZY],
XWV: [TZY, AOF],
AOF: [CGB, ZOJ, TZY]}","Node STY is connected to nodes ZOJ, UJM.
Node ZOJ is connected to node TZY.
Node UJM is connected to nodes TZY, ZOJ.
Node CGB is connected to nodes ZOJ, STY, TZY.
Node XWV is connected to nodes TZY, AOF.
Node AOF is connected to nodes CGB, ZOJ, TZY.","[TZY, XWV, ZOJ, STY, CGB, UJM, AOF]",7,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XWV, AOF, CGB, STY, UJM, ZOJ, TZY]","Let's solve it step by step.
Nodes with 0 in-degree: [XWV].
Visit node XWV and remove it from the graph.
Nodes with 0 in-degree: [AOF].
Visit node AOF and remove it from the graph.
Nodes with 0 in-degree: [CGB].
Visit node CGB and remove it from the graph.
Nodes with 0 in-degree: [STY].
Visit node STY and remove it from the graph.
Nodes with 0 in-degree: [UJM].
Visit node UJM and remove it from the graph.
Nodes with 0 in-degree: [ZOJ].
Visit node ZOJ and remove it from the graph.
Nodes with 0 in-degree: [TZY].
Visit node TZY and remove it from the graph.
So the result of topological sorting is ","('[[XWV, AOF, CGB, STY, UJM, ZOJ, TZY], [XWV, AOF, ZOJ, TZY, CGB, STY, UJM], [XWV, AOF, CGB, TZY, UJM, ZOJ, STY], [XWV, AOF, CGB, STY, ZOJ, TZY, UJM]]',)",0,265
topological_sort,"[(RMN, OSA), (RMN, QSK), (OSA, PSU), (QSK, PSU), (WEF, OSA), (WEF, QSK), (WEF, RMN), (MWE, OSA)]","{RMN: [OSA, QSK],
OSA: [PSU],
QSK: [PSU],
PSU: [],
WEF: [OSA, QSK, RMN],
MWE: [OSA]}","Node RMN is connected to nodes OSA, QSK.
Node OSA is connected to node PSU.
Node QSK is connected to node PSU.
Node WEF is connected to nodes OSA, QSK, RMN.
Node MWE is connected to node OSA.","[PSU, OSA, RMN, WEF, MWE, QSK]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WEF, MWE, RMN, OSA, QSK, PSU]","Let's solve it step by step.
Nodes with 0 in-degree: [WEF, MWE].
Visit node WEF and remove it from the graph.
Nodes with 0 in-degree: [MWE, RMN].
Visit node MWE and remove it from the graph.
Nodes with 0 in-degree: [RMN].
Visit node RMN and remove it from the graph.
Nodes with 0 in-degree: [OSA, QSK].
Visit node OSA and remove it from the graph.
Nodes with 0 in-degree: [QSK].
Visit node QSK and remove it from the graph.
Nodes with 0 in-degree: [PSU].
Visit node PSU and remove it from the graph.
So the result of topological sorting is ","('[[WEF, RMN, QSK, OSA, PSU, MWE], [WEF, MWE, RMN, OSA, QSK, PSU], [WEF, MWE, RMN, QSK, PSU, OSA], [WEF, MWE, QSK, PSU, RMN, OSA]]',)",1,266
topological_sort,"[(QXP, HLZ), (QXP, PGD), (QXP, STE), (HLZ, PGD), (HLZ, LAZ), (STE, HLZ), (AJF, LAZ), (AJF, QXP), (AJF, PGD), (AJF, STE)]","{QXP: [HLZ, PGD, STE],
HLZ: [PGD, LAZ],
PGD: [],
STE: [HLZ],
LAZ: [],
AJF: [LAZ, QXP, PGD, STE]}","Node QXP is connected to nodes HLZ, PGD, STE.
Node HLZ is connected to nodes PGD, LAZ.
Node STE is connected to node HLZ.
Node AJF is connected to nodes LAZ, QXP, PGD, STE.","[HLZ, QXP, LAZ, AJF, STE, PGD]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[AJF, QXP, STE, HLZ, PGD, LAZ]","Let's solve it step by step.
Nodes with 0 in-degree: [AJF].
Visit node AJF and remove it from the graph.
Nodes with 0 in-degree: [QXP].
Visit node QXP and remove it from the graph.
Nodes with 0 in-degree: [STE].
Visit node STE and remove it from the graph.
Nodes with 0 in-degree: [HLZ].
Visit node HLZ and remove it from the graph.
Nodes with 0 in-degree: [PGD, LAZ].
Visit node PGD and remove it from the graph.
Nodes with 0 in-degree: [LAZ].
Visit node LAZ and remove it from the graph.
So the result of topological sorting is ","('[[AJF, QXP, PGD, LAZ, STE, HLZ], [AJF, QXP, STE, LAZ, HLZ, PGD], [AJF, QXP, STE, LAZ, HLZ, PGD], [AJF, QXP, STE, HLZ, PGD, LAZ]]',)",3,267
topological_sort,"[(EDY, KJY), (EDY, QHP), (EDY, XXK), (KJY, JTN), (KJY, QHP), (KJY, FSF), (QHP, XXK), (JTN, QHP), (JTN, GMC), (GMC, FSF)]","{EDY: [KJY, QHP, XXK],
KJY: [JTN, QHP, FSF],
QHP: [XXK],
XXK: [],
JTN: [QHP, GMC],
FSF: [],
GMC: [FSF]}","Node EDY is connected to nodes KJY, QHP, XXK.
Node KJY is connected to nodes JTN, QHP, FSF.
Node QHP is connected to node XXK.
Node JTN is connected to nodes QHP, GMC.
Node GMC is connected to node FSF.","[XXK, QHP, GMC, KJY, JTN, EDY, FSF]",7,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EDY, KJY, JTN, QHP, GMC, XXK, FSF]","Let's solve it step by step.
Nodes with 0 in-degree: [EDY].
Visit node EDY and remove it from the graph.
Nodes with 0 in-degree: [KJY].
Visit node KJY and remove it from the graph.
Nodes with 0 in-degree: [JTN].
Visit node JTN and remove it from the graph.
Nodes with 0 in-degree: [QHP, GMC].
Visit node QHP and remove it from the graph.
Nodes with 0 in-degree: [GMC, XXK].
Visit node GMC and remove it from the graph.
Nodes with 0 in-degree: [XXK, FSF].
Visit node XXK and remove it from the graph.
Nodes with 0 in-degree: [FSF].
Visit node FSF and remove it from the graph.
So the result of topological sorting is ","('[[EDY, KJY, XXK, FSF, JTN, QHP, GMC], [EDY, KJY, XXK, JTN, GMC, QHP, FSF], [EDY, KJY, JTN, XXK, GMC, FSF, QHP], [EDY, KJY, JTN, QHP, GMC, XXK, FSF]]',)",3,268
topological_sort,"[(BGG, KET), (BGG, UDY), (BGG, VXB), (BGG, VBD), (UDY, VXB), (VXB, KET), (VBD, VXB), (VBD, KET), (PSX, BGG), (KED, VXB), (KED, PSX), (KED, VBD)]","{BGG: [KET, UDY, VXB, VBD],
KET: [],
UDY: [VXB],
VXB: [KET],
VBD: [VXB, KET],
PSX: [BGG],
KED: [VXB, PSX, VBD]}","Node BGG is connected to nodes KET, UDY, VXB, VBD.
Node UDY is connected to node VXB.
Node VXB is connected to node KET.
Node VBD is connected to nodes VXB, KET.
Node PSX is connected to node BGG.
Node KED is connected to nodes VXB, PSX, VBD.","[PSX, KET, BGG, KED, VBD, UDY, VXB]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KED, PSX, BGG, UDY, VBD, VXB, KET]","Let's solve it step by step.
Nodes with 0 in-degree: [KED].
Visit node KED and remove it from the graph.
Nodes with 0 in-degree: [PSX].
Visit node PSX and remove it from the graph.
Nodes with 0 in-degree: [BGG].
Visit node BGG and remove it from the graph.
Nodes with 0 in-degree: [UDY, VBD].
Visit node UDY and remove it from the graph.
Nodes with 0 in-degree: [VBD].
Visit node VBD and remove it from the graph.
Nodes with 0 in-degree: [VXB].
Visit node VXB and remove it from the graph.
Nodes with 0 in-degree: [KET].
Visit node KET and remove it from the graph.
So the result of topological sorting is ","('[[KED, PSX, BGG, UDY, VBD, KET, VXB], [KED, PSX, VXB, KET, BGG, UDY, VBD], [KED, UDY, VXB, PSX, VBD, BGG, KET], [KED, PSX, BGG, UDY, VBD, VXB, KET]]',)",3,269
topological_sort,"[(SQP, WEM), (SQP, RKH), (SQP, RKY), (SQP, PLJ), (WEM, PLJ), (WEM, RKY), (RKH, PLJ), (RKH, YRF), (RKY, RKH), (RKY, WSB), (WSB, RKH)]","{SQP: [WEM, RKH, RKY, PLJ],
WEM: [PLJ, RKY],
RKH: [PLJ, YRF],
RKY: [RKH, WSB],
PLJ: [],
WSB: [RKH],
YRF: []}","Node SQP is connected to nodes WEM, RKH, RKY, PLJ.
Node WEM is connected to nodes PLJ, RKY.
Node RKH is connected to nodes PLJ, YRF.
Node RKY is connected to nodes RKH, WSB.
Node WSB is connected to node RKH.","[YRF, RKY, PLJ, WSB, SQP, RKH, WEM]",7,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SQP, WEM, RKY, WSB, RKH, PLJ, YRF]","Let's solve it step by step.
Nodes with 0 in-degree: [SQP].
Visit node SQP and remove it from the graph.
Nodes with 0 in-degree: [WEM].
Visit node WEM and remove it from the graph.
Nodes with 0 in-degree: [RKY].
Visit node RKY and remove it from the graph.
Nodes with 0 in-degree: [WSB].
Visit node WSB and remove it from the graph.
Nodes with 0 in-degree: [RKH].
Visit node RKH and remove it from the graph.
Nodes with 0 in-degree: [PLJ, YRF].
Visit node PLJ and remove it from the graph.
Nodes with 0 in-degree: [YRF].
Visit node YRF and remove it from the graph.
So the result of topological sorting is ","('[[SQP, WEM, RKY, PLJ, WSB, RKH, YRF], [SQP, WEM, RKY, WSB, RKH, PLJ, YRF], [SQP, WEM, PLJ, YRF, RKY, WSB, RKH], [SQP, PLJ, WEM, WSB, RKH, RKY, YRF]]',)",1,270
topological_sort,"[(CMV, JCR), (CMV, TKP), (JCR, TKP), (JCR, BGK), (BGK, TKP), (PNV, JCR), (PNV, NBZ), (PNV, BGK), (PNV, CMV), (NBZ, JCR), (NBZ, CMV), (RNY, PNV), (RNY, JCR), (RNY, NBZ)]","{CMV: [JCR, TKP],
JCR: [TKP, BGK],
TKP: [],
BGK: [TKP],
PNV: [JCR, NBZ, BGK, CMV],
NBZ: [JCR, CMV],
RNY: [PNV, JCR, NBZ]}","Node CMV is connected to nodes JCR, TKP.
Node JCR is connected to nodes TKP, BGK.
Node BGK is connected to node TKP.
Node PNV is connected to nodes JCR, NBZ, BGK, CMV.
Node NBZ is connected to nodes JCR, CMV.
Node RNY is connected to nodes PNV, JCR, NBZ.","[CMV, NBZ, PNV, JCR, RNY, TKP, BGK]",7,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RNY, PNV, NBZ, CMV, JCR, BGK, TKP]","Let's solve it step by step.
Nodes with 0 in-degree: [RNY].
Visit node RNY and remove it from the graph.
Nodes with 0 in-degree: [PNV].
Visit node PNV and remove it from the graph.
Nodes with 0 in-degree: [NBZ].
Visit node NBZ and remove it from the graph.
Nodes with 0 in-degree: [CMV].
Visit node CMV and remove it from the graph.
Nodes with 0 in-degree: [JCR].
Visit node JCR and remove it from the graph.
Nodes with 0 in-degree: [BGK].
Visit node BGK and remove it from the graph.
Nodes with 0 in-degree: [TKP].
Visit node TKP and remove it from the graph.
So the result of topological sorting is ","('[[RNY, PNV, NBZ, CMV, JCR, BGK, TKP], [RNY, PNV, BGK, TKP, NBZ, CMV, JCR], [RNY, PNV, NBZ, TKP, BGK, JCR, CMV], [RNY, JCR, NBZ, PNV, CMV, BGK, TKP]]',)",0,271
topological_sort,"[(UEV, FCB), (UEV, KIM), (FCB, KIM), (FCB, UWM), (FCB, OWH), (UWM, VNH), (UWM, OWH), (GLL, UWM), (GLL, KIM)]","{UEV: [FCB, KIM],
FCB: [KIM, UWM, OWH],
KIM: [],
UWM: [VNH, OWH],
OWH: [],
VNH: [],
GLL: [UWM, KIM]}","Node UEV is connected to nodes FCB, KIM.
Node FCB is connected to nodes KIM, UWM, OWH.
Node UWM is connected to nodes VNH, OWH.
Node GLL is connected to nodes UWM, KIM.","[KIM, UWM, OWH, VNH, UEV, FCB, GLL]",7,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UEV, GLL, FCB, KIM, UWM, VNH, OWH]","Let's solve it step by step.
Nodes with 0 in-degree: [UEV, GLL].
Visit node UEV and remove it from the graph.
Nodes with 0 in-degree: [GLL, FCB].
Visit node GLL and remove it from the graph.
Nodes with 0 in-degree: [FCB].
Visit node FCB and remove it from the graph.
Nodes with 0 in-degree: [KIM, UWM].
Visit node KIM and remove it from the graph.
Nodes with 0 in-degree: [UWM].
Visit node UWM and remove it from the graph.
Nodes with 0 in-degree: [VNH, OWH].
Visit node VNH and remove it from the graph.
Nodes with 0 in-degree: [OWH].
Visit node OWH and remove it from the graph.
So the result of topological sorting is ","('[[UEV, GLL, FCB, KIM, UWM, VNH, OWH], [UEV, UWM, OWH, FCB, KIM, GLL, VNH], [UEV, GLL, FCB, UWM, VNH, KIM, OWH], [UEV, GLL, VNH, OWH, FCB, KIM, UWM]]',)",0,272
topological_sort,"[(OFK, TSH), (OFK, FON), (OFK, GJE), (OFK, RWX), (FON, TSH), (GJE, FON), (GJE, TSH), (WLL, GJE), (WLL, RWX)]","{OFK: [TSH, FON, GJE, RWX],
TSH: [],
FON: [TSH],
GJE: [FON, TSH],
RWX: [],
WLL: [GJE, RWX]}","Node OFK is connected to nodes TSH, FON, GJE, RWX.
Node FON is connected to node TSH.
Node GJE is connected to nodes FON, TSH.
Node WLL is connected to nodes GJE, RWX.","[FON, TSH, WLL, GJE, OFK, RWX]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OFK, WLL, GJE, RWX, FON, TSH]","Let's solve it step by step.
Nodes with 0 in-degree: [OFK, WLL].
Visit node OFK and remove it from the graph.
Nodes with 0 in-degree: [WLL].
Visit node WLL and remove it from the graph.
Nodes with 0 in-degree: [GJE, RWX].
Visit node GJE and remove it from the graph.
Nodes with 0 in-degree: [RWX, FON].
Visit node RWX and remove it from the graph.
Nodes with 0 in-degree: [FON].
Visit node FON and remove it from the graph.
Nodes with 0 in-degree: [TSH].
Visit node TSH and remove it from the graph.
So the result of topological sorting is ","('[[OFK, WLL, GJE, RWX, FON, TSH], [OFK, WLL, GJE, RWX, FON, TSH], [OFK, WLL, FON, TSH, GJE, RWX], [OFK, RWX, GJE, FON, WLL, TSH]]',)",0,273
topological_sort,"[(ARB, LLL), (ARB, QWW), (ARB, EMZ), (ARB, KVO), (ARB, BGC), (EMZ, KVO), (EMZ, WXO), (EMZ, QWW), (KVO, LLL), (KVO, QWW), (BGC, EMZ), (BGC, WXO), (BGC, KVO), (BGC, LLL), (BGC, QWW), (WXO, KVO), (WXO, QWW)]","{ARB: [LLL, QWW, EMZ, KVO, BGC],
LLL: [],
QWW: [],
EMZ: [KVO, WXO, QWW],
KVO: [LLL, QWW],
BGC: [EMZ, WXO, KVO, LLL, QWW],
WXO: [KVO, QWW]}","Node ARB is connected to nodes LLL, QWW, EMZ, KVO, BGC.
Node EMZ is connected to nodes KVO, WXO, QWW.
Node KVO is connected to nodes LLL, QWW.
Node BGC is connected to nodes EMZ, WXO, KVO, LLL, QWW.
Node WXO is connected to nodes KVO, QWW.","[QWW, BGC, LLL, KVO, EMZ, ARB, WXO]",7,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ARB, BGC, EMZ, WXO, KVO, LLL, QWW]","Let's solve it step by step.
Nodes with 0 in-degree: [ARB].
Visit node ARB and remove it from the graph.
Nodes with 0 in-degree: [BGC].
Visit node BGC and remove it from the graph.
Nodes with 0 in-degree: [EMZ].
Visit node EMZ and remove it from the graph.
Nodes with 0 in-degree: [WXO].
Visit node WXO and remove it from the graph.
Nodes with 0 in-degree: [KVO].
Visit node KVO and remove it from the graph.
Nodes with 0 in-degree: [LLL, QWW].
Visit node LLL and remove it from the graph.
Nodes with 0 in-degree: [QWW].
Visit node QWW and remove it from the graph.
So the result of topological sorting is ","('[[ARB, BGC, LLL, QWW, EMZ, WXO, KVO], [ARB, BGC, EMZ, KVO, QWW, WXO, LLL], [ARB, BGC, EMZ, WXO, KVO, LLL, QWW], [ARB, BGC, EMZ, LLL, WXO, KVO, QWW]]',)",2,274
topological_sort,"[(WLK, WXW), (WLK, HCC), (WLK, IUJ), (WXW, HCC), (WXW, GXW), (HCC, GXW), (IUJ, HTA), (HTA, HCC), (HTA, GXW)]","{WLK: [WXW, HCC, IUJ],
WXW: [HCC, GXW],
HCC: [GXW],
IUJ: [HTA],
GXW: [],
HTA: [HCC, GXW]}","Node WLK is connected to nodes WXW, HCC, IUJ.
Node WXW is connected to nodes HCC, GXW.
Node HCC is connected to node GXW.
Node IUJ is connected to node HTA.
Node HTA is connected to nodes HCC, GXW.","[WXW, IUJ, WLK, GXW, HTA, HCC]",6,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WLK, WXW, IUJ, HTA, HCC, GXW]","Let's solve it step by step.
Nodes with 0 in-degree: [WLK].
Visit node WLK and remove it from the graph.
Nodes with 0 in-degree: [WXW, IUJ].
Visit node WXW and remove it from the graph.
Nodes with 0 in-degree: [IUJ].
Visit node IUJ and remove it from the graph.
Nodes with 0 in-degree: [HTA].
Visit node HTA and remove it from the graph.
Nodes with 0 in-degree: [HCC].
Visit node HCC and remove it from the graph.
Nodes with 0 in-degree: [GXW].
Visit node GXW and remove it from the graph.
So the result of topological sorting is ","('[[WLK, WXW, IUJ, HTA, HCC, GXW], [WLK, WXW, HTA, IUJ, HCC, GXW], [WLK, WXW, IUJ, HTA, HCC, GXW], [WLK, WXW, HCC, GXW, IUJ, HTA]]',)",2,275
topological_sort,"[(VMU, FJL), (FNN, FJL), (FNN, TNF), (FNN, VMU), (FNN, TXR), (TNF, VMU), (TNF, TXR), (TXR, FJL), (TXR, VMU), (JSY, FJL), (JSY, VMU), (JSY, FNN), (LOO, TNF), (LOO, FNN), (LOO, JSY)]","{VMU: [FJL],
FJL: [],
FNN: [FJL, TNF, VMU, TXR],
TNF: [VMU, TXR],
TXR: [FJL, VMU],
JSY: [FJL, VMU, FNN],
LOO: [TNF, FNN, JSY]}","Node VMU is connected to node FJL.
Node FNN is connected to nodes FJL, TNF, VMU, TXR.
Node TNF is connected to nodes VMU, TXR.
Node TXR is connected to nodes FJL, VMU.
Node JSY is connected to nodes FJL, VMU, FNN.
Node LOO is connected to nodes TNF, FNN, JSY.","[FNN, JSY, TXR, VMU, LOO, FJL, TNF]",7,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LOO, JSY, FNN, TNF, TXR, VMU, FJL]","Let's solve it step by step.
Nodes with 0 in-degree: [LOO].
Visit node LOO and remove it from the graph.
Nodes with 0 in-degree: [JSY].
Visit node JSY and remove it from the graph.
Nodes with 0 in-degree: [FNN].
Visit node FNN and remove it from the graph.
Nodes with 0 in-degree: [TNF].
Visit node TNF and remove it from the graph.
Nodes with 0 in-degree: [TXR].
Visit node TXR and remove it from the graph.
Nodes with 0 in-degree: [VMU].
Visit node VMU and remove it from the graph.
Nodes with 0 in-degree: [FJL].
Visit node FJL and remove it from the graph.
So the result of topological sorting is ","('[[LOO, FNN, TXR, FJL, TNF, JSY, VMU], [LOO, JSY, FNN, TNF, TXR, VMU, FJL], [LOO, JSY, VMU, FJL, FNN, TNF, TXR], [LOO, JSY, FNN, TNF, VMU, TXR, FJL]]',)",1,276
topological_sort,"[(LNQ, MDJ), (LNQ, ZMY), (LNQ, ONN), (MDJ, HID), (ZMY, YMJ), (HID, ZMY), (HID, YMJ)]","{LNQ: [MDJ, ZMY, ONN],
MDJ: [HID],
ZMY: [YMJ],
ONN: [],
HID: [ZMY, YMJ],
YMJ: []}","Node LNQ is connected to nodes MDJ, ZMY, ONN.
Node MDJ is connected to node HID.
Node ZMY is connected to node YMJ.
Node HID is connected to nodes ZMY, YMJ.","[LNQ, YMJ, MDJ, ZMY, ONN, HID]",6,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LNQ, MDJ, ONN, HID, ZMY, YMJ]","Let's solve it step by step.
Nodes with 0 in-degree: [LNQ].
Visit node LNQ and remove it from the graph.
Nodes with 0 in-degree: [MDJ, ONN].
Visit node MDJ and remove it from the graph.
Nodes with 0 in-degree: [ONN, HID].
Visit node ONN and remove it from the graph.
Nodes with 0 in-degree: [HID].
Visit node HID and remove it from the graph.
Nodes with 0 in-degree: [ZMY].
Visit node ZMY and remove it from the graph.
Nodes with 0 in-degree: [YMJ].
Visit node YMJ and remove it from the graph.
So the result of topological sorting is ","('[[LNQ, MDJ, ZMY, YMJ, ONN, HID], [LNQ, MDJ, ONN, YMJ, ZMY, HID], [LNQ, MDJ, ZMY, ONN, HID, YMJ], [LNQ, MDJ, ONN, HID, ZMY, YMJ]]',)",3,277
topological_sort,"[(UUF, UYH), (UUF, LZR), (UUF, NAY), (UUF, EMY), (UYH, EMY), (LZR, UYH), (NAY, UYH), (NAY, EMY)]","{UUF: [UYH, LZR, NAY, EMY],
UYH: [EMY],
LZR: [UYH],
NAY: [UYH, EMY],
EMY: []}","Node UUF is connected to nodes UYH, LZR, NAY, EMY.
Node UYH is connected to node EMY.
Node LZR is connected to node UYH.
Node NAY is connected to nodes UYH, EMY.","[EMY, UYH, UUF, LZR, NAY]",5,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UUF, LZR, NAY, UYH, EMY]","Let's solve it step by step.
Nodes with 0 in-degree: [UUF].
Visit node UUF and remove it from the graph.
Nodes with 0 in-degree: [LZR, NAY].
Visit node LZR and remove it from the graph.
Nodes with 0 in-degree: [NAY].
Visit node NAY and remove it from the graph.
Nodes with 0 in-degree: [UYH].
Visit node UYH and remove it from the graph.
Nodes with 0 in-degree: [EMY].
Visit node EMY and remove it from the graph.
So the result of topological sorting is ","('[[UUF, EMY, UYH, NAY, LZR], [UUF, EMY, LZR, NAY, UYH], [UUF, LZR, NAY, UYH, EMY], [UUF, LZR, EMY, UYH, NAY]]',)",2,278
topological_sort,"[(YRT, GXO), (YRT, GWT), (YRT, QEW), (YRT, UMS), (YRT, SWK), (GXO, VWS), (GXO, SWK), (GXO, GWT), (GWT, VWS), (QEW, SWK), (QEW, UMS), (QEW, GXO), (UMS, SWK), (UMS, VWS), (VWS, SWK)]","{YRT: [GXO, GWT, QEW, UMS, SWK],
GXO: [VWS, SWK, GWT],
GWT: [VWS],
QEW: [SWK, UMS, GXO],
UMS: [SWK, VWS],
SWK: [],
VWS: [SWK]}","Node YRT is connected to nodes GXO, GWT, QEW, UMS, SWK.
Node GXO is connected to nodes VWS, SWK, GWT.
Node GWT is connected to node VWS.
Node QEW is connected to nodes SWK, UMS, GXO.
Node UMS is connected to nodes SWK, VWS.
Node VWS is connected to node SWK.","[UMS, GWT, GXO, VWS, YRT, QEW, SWK]",7,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YRT, QEW, UMS, GXO, GWT, VWS, SWK]","Let's solve it step by step.
Nodes with 0 in-degree: [YRT].
Visit node YRT and remove it from the graph.
Nodes with 0 in-degree: [QEW].
Visit node QEW and remove it from the graph.
Nodes with 0 in-degree: [UMS, GXO].
Visit node UMS and remove it from the graph.
Nodes with 0 in-degree: [GXO].
Visit node GXO and remove it from the graph.
Nodes with 0 in-degree: [GWT].
Visit node GWT and remove it from the graph.
Nodes with 0 in-degree: [VWS].
Visit node VWS and remove it from the graph.
Nodes with 0 in-degree: [SWK].
Visit node SWK and remove it from the graph.
So the result of topological sorting is ","('[[YRT, QEW, VWS, SWK, UMS, GXO, GWT], [YRT, QEW, UMS, GXO, GWT, VWS, SWK], [YRT, QEW, UMS, GXO, GWT, SWK, VWS], [YRT, VWS, GXO, QEW, UMS, SWK, GWT]]',)",1,279
topological_sort,"[(YPU, INK), (YPU, VKU), (YPU, OPV), (INK, OPV), (VKU, INK), (BFP, NZE), (BFP, OPV), (BFP, YPU), (NZE, YPU), (NZE, OPV), (NZE, VKU), (CVL, INK), (CVL, YPU), (CVL, BFP), (CVL, OPV)]","{YPU: [INK, VKU, OPV],
INK: [OPV],
VKU: [INK],
OPV: [],
BFP: [NZE, OPV, YPU],
NZE: [YPU, OPV, VKU],
CVL: [INK, YPU, BFP, OPV]}","Node YPU is connected to nodes INK, VKU, OPV.
Node INK is connected to node OPV.
Node VKU is connected to node INK.
Node BFP is connected to nodes NZE, OPV, YPU.
Node NZE is connected to nodes YPU, OPV, VKU.
Node CVL is connected to nodes INK, YPU, BFP, OPV.","[VKU, BFP, CVL, OPV, YPU, INK, NZE]",7,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CVL, BFP, NZE, YPU, VKU, INK, OPV]","Let's solve it step by step.
Nodes with 0 in-degree: [CVL].
Visit node CVL and remove it from the graph.
Nodes with 0 in-degree: [BFP].
Visit node BFP and remove it from the graph.
Nodes with 0 in-degree: [NZE].
Visit node NZE and remove it from the graph.
Nodes with 0 in-degree: [YPU].
Visit node YPU and remove it from the graph.
Nodes with 0 in-degree: [VKU].
Visit node VKU and remove it from the graph.
Nodes with 0 in-degree: [INK].
Visit node INK and remove it from the graph.
Nodes with 0 in-degree: [OPV].
Visit node OPV and remove it from the graph.
So the result of topological sorting is ","('[[CVL, INK, OPV, BFP, NZE, VKU, YPU], [CVL, BFP, INK, OPV, NZE, YPU, VKU], [CVL, BFP, NZE, OPV, VKU, YPU, INK], [CVL, BFP, NZE, YPU, VKU, INK, OPV]]',)",3,280
topological_sort,"[(PQT, FTZ), (PQT, TAO), (PQT, VXP), (VXP, HJN), (XPX, TAO), (XPX, HJN), (XPX, PQT), (XPX, VXP), (HJN, TAO), (WSE, FTZ), (WSE, HJN), (WSE, TAO)]","{PQT: [FTZ, TAO, VXP],
FTZ: [],
TAO: [],
VXP: [HJN],
XPX: [TAO, HJN, PQT, VXP],
HJN: [TAO],
WSE: [FTZ, HJN, TAO]}","Node PQT is connected to nodes FTZ, TAO, VXP.
Node VXP is connected to node HJN.
Node XPX is connected to nodes TAO, HJN, PQT, VXP.
Node HJN is connected to node TAO.
Node WSE is connected to nodes FTZ, HJN, TAO.","[FTZ, HJN, XPX, PQT, WSE, TAO, VXP]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XPX, WSE, PQT, FTZ, VXP, HJN, TAO]","Let's solve it step by step.
Nodes with 0 in-degree: [XPX, WSE].
Visit node XPX and remove it from the graph.
Nodes with 0 in-degree: [WSE, PQT].
Visit node WSE and remove it from the graph.
Nodes with 0 in-degree: [PQT].
Visit node PQT and remove it from the graph.
Nodes with 0 in-degree: [FTZ, VXP].
Visit node FTZ and remove it from the graph.
Nodes with 0 in-degree: [VXP].
Visit node VXP and remove it from the graph.
Nodes with 0 in-degree: [HJN].
Visit node HJN and remove it from the graph.
Nodes with 0 in-degree: [TAO].
Visit node TAO and remove it from the graph.
So the result of topological sorting is ","('[[XPX, VXP, FTZ, TAO, PQT, WSE, HJN], [XPX, WSE, PQT, FTZ, VXP, HJN, TAO], [XPX, WSE, PQT, TAO, HJN, VXP, FTZ], [XPX, WSE, HJN, TAO, PQT, FTZ, VXP]]',)",1,281
topological_sort,"[(VEK, FUN), (VEK, ODB), (VEK, YKW), (VEK, WAF), (FUN, WAF), (FUN, YKW), (YKW, ODB), (AOZ, VEK), (AOZ, YKW), (AOZ, FUN), (PTX, AOZ), (PTX, FUN), (PTX, YKW), (PTX, ODB)]","{VEK: [FUN, ODB, YKW, WAF],
FUN: [WAF, YKW],
ODB: [],
YKW: [ODB],
WAF: [],
AOZ: [VEK, YKW, FUN],
PTX: [AOZ, FUN, YKW, ODB]}","Node VEK is connected to nodes FUN, ODB, YKW, WAF.
Node FUN is connected to nodes WAF, YKW.
Node YKW is connected to node ODB.
Node AOZ is connected to nodes VEK, YKW, FUN.
Node PTX is connected to nodes AOZ, FUN, YKW, ODB.","[PTX, WAF, YKW, AOZ, ODB, FUN, VEK]",7,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PTX, AOZ, VEK, FUN, WAF, YKW, ODB]","Let's solve it step by step.
Nodes with 0 in-degree: [PTX].
Visit node PTX and remove it from the graph.
Nodes with 0 in-degree: [AOZ].
Visit node AOZ and remove it from the graph.
Nodes with 0 in-degree: [VEK].
Visit node VEK and remove it from the graph.
Nodes with 0 in-degree: [FUN].
Visit node FUN and remove it from the graph.
Nodes with 0 in-degree: [WAF, YKW].
Visit node WAF and remove it from the graph.
Nodes with 0 in-degree: [YKW].
Visit node YKW and remove it from the graph.
Nodes with 0 in-degree: [ODB].
Visit node ODB and remove it from the graph.
So the result of topological sorting is ","('[[PTX, AOZ, VEK, FUN, WAF, YKW, ODB], [PTX, AOZ, VEK, FUN, WAF, YKW, ODB], [PTX, FUN, WAF, ODB, VEK, AOZ, YKW], [PTX, AOZ, YKW, ODB, VEK, FUN, WAF]]',)",1,282
topological_sort,"[(SGZ, XOV), (XOV, DSL), (OTY, EDP), (OTY, SGZ), (OTY, PXW), (EDP, XOV), (PXW, EDP), (DQR, EDP), (DQR, PXW)]","{SGZ: [XOV],
XOV: [DSL],
DSL: [],
OTY: [EDP, SGZ, PXW],
EDP: [XOV],
PXW: [EDP],
DQR: [EDP, PXW]}","Node SGZ is connected to node XOV.
Node XOV is connected to node DSL.
Node OTY is connected to nodes EDP, SGZ, PXW.
Node EDP is connected to node XOV.
Node PXW is connected to node EDP.
Node DQR is connected to nodes EDP, PXW.","[SGZ, DQR, OTY, PXW, EDP, DSL, XOV]",7,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OTY, DQR, SGZ, PXW, EDP, XOV, DSL]","Let's solve it step by step.
Nodes with 0 in-degree: [OTY, DQR].
Visit node OTY and remove it from the graph.
Nodes with 0 in-degree: [DQR, SGZ].
Visit node DQR and remove it from the graph.
Nodes with 0 in-degree: [SGZ, PXW].
Visit node SGZ and remove it from the graph.
Nodes with 0 in-degree: [PXW].
Visit node PXW and remove it from the graph.
Nodes with 0 in-degree: [EDP].
Visit node EDP and remove it from the graph.
Nodes with 0 in-degree: [XOV].
Visit node XOV and remove it from the graph.
Nodes with 0 in-degree: [DSL].
Visit node DSL and remove it from the graph.
So the result of topological sorting is ","('[[OTY, DQR, SGZ, XOV, DSL, EDP, PXW], [OTY, XOV, EDP, DSL, PXW, DQR, SGZ], [OTY, DQR, SGZ, PXW, EDP, XOV, DSL], [OTY, DQR, XOV, DSL, SGZ, PXW, EDP]]',)",2,283
topological_sort,"[(QTZ, FAC), (QTZ, DDQ), (QTZ, NEG), (QTZ, GDV), (QTZ, ZQA), (QTZ, RGW), (FAC, NEG), (FAC, GDV), (FAC, ZQA), (DDQ, ZQA), (DDQ, FAC), (DDQ, GDV), (DDQ, NEG), (NEG, GDV), (GDV, ZQA), (RGW, FAC), (RGW, ZQA), (RGW, DDQ)]","{QTZ: [FAC, DDQ, NEG, GDV, ZQA, RGW],
FAC: [NEG, GDV, ZQA],
DDQ: [ZQA, FAC, GDV, NEG],
NEG: [GDV],
GDV: [ZQA],
ZQA: [],
RGW: [FAC, ZQA, DDQ]}","Node QTZ is connected to nodes FAC, DDQ, NEG, GDV, ZQA, RGW.
Node FAC is connected to nodes NEG, GDV, ZQA.
Node DDQ is connected to nodes ZQA, FAC, GDV, NEG.
Node NEG is connected to node GDV.
Node GDV is connected to node ZQA.
Node RGW is connected to nodes FAC, ZQA, DDQ.","[GDV, DDQ, FAC, ZQA, QTZ, NEG, RGW]",7,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QTZ, RGW, DDQ, FAC, NEG, GDV, ZQA]","Let's solve it step by step.
Nodes with 0 in-degree: [QTZ].
Visit node QTZ and remove it from the graph.
Nodes with 0 in-degree: [RGW].
Visit node RGW and remove it from the graph.
Nodes with 0 in-degree: [DDQ].
Visit node DDQ and remove it from the graph.
Nodes with 0 in-degree: [FAC].
Visit node FAC and remove it from the graph.
Nodes with 0 in-degree: [NEG].
Visit node NEG and remove it from the graph.
Nodes with 0 in-degree: [GDV].
Visit node GDV and remove it from the graph.
Nodes with 0 in-degree: [ZQA].
Visit node ZQA and remove it from the graph.
So the result of topological sorting is ","('[[QTZ, RGW, DDQ, GDV, ZQA, FAC, NEG], [QTZ, FAC, RGW, NEG, DDQ, ZQA, GDV], [QTZ, RGW, DDQ, FAC, NEG, GDV, ZQA], [QTZ, RGW, GDV, ZQA, DDQ, FAC, NEG]]',)",2,284
topological_sort,"[(VDF, LYI), (VDF, ZTJ), (ZTJ, LMQ), (JLN, LMQ)]","{VDF: [LYI, ZTJ],
LYI: [],
ZTJ: [LMQ],
JLN: [LMQ],
LMQ: []}","Node VDF is connected to nodes LYI, ZTJ.
Node ZTJ is connected to node LMQ.
Node JLN is connected to node LMQ.","[VDF, LYI, ZTJ, JLN, LMQ]",5,4,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VDF, JLN, LYI, ZTJ, LMQ]","Let's solve it step by step.
Nodes with 0 in-degree: [VDF, JLN].
Visit node VDF and remove it from the graph.
Nodes with 0 in-degree: [JLN, LYI, ZTJ].
Visit node JLN and remove it from the graph.
Nodes with 0 in-degree: [LYI, ZTJ].
Visit node LYI and remove it from the graph.
Nodes with 0 in-degree: [ZTJ].
Visit node ZTJ and remove it from the graph.
Nodes with 0 in-degree: [LMQ].
Visit node LMQ and remove it from the graph.
So the result of topological sorting is ","('[[VDF, JLN, LYI, ZTJ, LMQ], [VDF, LYI, LMQ, ZTJ, JLN], [VDF, JLN, LMQ, LYI, ZTJ], [VDF, LMQ, JLN, LYI, ZTJ]]',)",0,285
topological_sort,"[(AKI, JXB), (JXB, MKB), (JXB, NBV), (MKB, FDH), (MKB, NBV), (WIR, AKI)]","{AKI: [JXB],
JXB: [MKB, NBV],
MKB: [FDH, NBV],
NBV: [],
FDH: [],
WIR: [AKI]}","Node AKI is connected to node JXB.
Node JXB is connected to nodes MKB, NBV.
Node MKB is connected to nodes FDH, NBV.
Node WIR is connected to node AKI.","[NBV, AKI, MKB, FDH, JXB, WIR]",6,6,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WIR, AKI, JXB, MKB, FDH, NBV]","Let's solve it step by step.
Nodes with 0 in-degree: [WIR].
Visit node WIR and remove it from the graph.
Nodes with 0 in-degree: [AKI].
Visit node AKI and remove it from the graph.
Nodes with 0 in-degree: [JXB].
Visit node JXB and remove it from the graph.
Nodes with 0 in-degree: [MKB].
Visit node MKB and remove it from the graph.
Nodes with 0 in-degree: [FDH, NBV].
Visit node FDH and remove it from the graph.
Nodes with 0 in-degree: [NBV].
Visit node NBV and remove it from the graph.
So the result of topological sorting is ","('[[WIR, AKI, FDH, NBV, JXB, MKB], [WIR, NBV, AKI, JXB, FDH, MKB], [WIR, AKI, JXB, MKB, FDH, NBV], [WIR, AKI, JXB, MKB, FDH, NBV]]',)",2,286
topological_sort,"[(CST, PBJ), (PBJ, SYZ), (PBJ, TMB), (TMB, SYZ), (VFY, CST)]","{CST: [PBJ],
PBJ: [SYZ, TMB],
SYZ: [],
TMB: [SYZ],
VFY: [CST]}","Node CST is connected to node PBJ.
Node PBJ is connected to nodes SYZ, TMB.
Node TMB is connected to node SYZ.
Node VFY is connected to node CST.","[SYZ, CST, VFY, PBJ, TMB]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VFY, CST, PBJ, TMB, SYZ]","Let's solve it step by step.
Nodes with 0 in-degree: [VFY].
Visit node VFY and remove it from the graph.
Nodes with 0 in-degree: [CST].
Visit node CST and remove it from the graph.
Nodes with 0 in-degree: [PBJ].
Visit node PBJ and remove it from the graph.
Nodes with 0 in-degree: [TMB].
Visit node TMB and remove it from the graph.
Nodes with 0 in-degree: [SYZ].
Visit node SYZ and remove it from the graph.
So the result of topological sorting is ","('[[VFY, CST, SYZ, TMB, PBJ], [VFY, SYZ, CST, PBJ, TMB], [VFY, CST, PBJ, TMB, SYZ], [VFY, TMB, SYZ, CST, PBJ]]',)",2,287
topological_sort,"[(MTV, YCH), (MTV, PSJ), (WYL, YUW), (WYL, PSJ), (WYL, MTV), (YUW, PSJ), (IYE, MTV), (VOQ, IYE), (VOQ, YUW)]","{MTV: [YCH, PSJ],
YCH: [],
PSJ: [],
WYL: [YUW, PSJ, MTV],
YUW: [PSJ],
IYE: [MTV],
VOQ: [IYE, YUW]}","Node MTV is connected to nodes YCH, PSJ.
Node WYL is connected to nodes YUW, PSJ, MTV.
Node YUW is connected to node PSJ.
Node IYE is connected to node MTV.
Node VOQ is connected to nodes IYE, YUW.","[IYE, YUW, VOQ, YCH, WYL, MTV, PSJ]",7,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WYL, VOQ, IYE, YUW, MTV, YCH, PSJ]","Let's solve it step by step.
Nodes with 0 in-degree: [WYL, VOQ].
Visit node WYL and remove it from the graph.
Nodes with 0 in-degree: [VOQ].
Visit node VOQ and remove it from the graph.
Nodes with 0 in-degree: [IYE, YUW].
Visit node IYE and remove it from the graph.
Nodes with 0 in-degree: [YUW, MTV].
Visit node YUW and remove it from the graph.
Nodes with 0 in-degree: [MTV].
Visit node MTV and remove it from the graph.
Nodes with 0 in-degree: [YCH, PSJ].
Visit node YCH and remove it from the graph.
Nodes with 0 in-degree: [PSJ].
Visit node PSJ and remove it from the graph.
So the result of topological sorting is ","('[[WYL, VOQ, IYE, MTV, YCH, PSJ, YUW], [WYL, MTV, VOQ, YUW, YCH, PSJ, IYE], [WYL, VOQ, IYE, YUW, MTV, YCH, PSJ], [WYL, VOQ, YCH, PSJ, IYE, YUW, MTV]]',)",2,288
topological_sort,"[(CVE, AYZ), (CVE, BTJ), (CVE, YUS), (CVE, LDA), (CVE, WUR), (AYZ, EPY), (BTJ, AYZ), (LDA, YUS), (LDA, AYZ), (WUR, BTJ), (WUR, EPY), (WUR, LDA)]","{CVE: [AYZ, BTJ, YUS, LDA, WUR],
AYZ: [EPY],
BTJ: [AYZ],
YUS: [],
LDA: [YUS, AYZ],
WUR: [BTJ, EPY, LDA],
EPY: []}","Node CVE is connected to nodes AYZ, BTJ, YUS, LDA, WUR.
Node AYZ is connected to node EPY.
Node BTJ is connected to node AYZ.
Node LDA is connected to nodes YUS, AYZ.
Node WUR is connected to nodes BTJ, EPY, LDA.","[WUR, BTJ, LDA, CVE, EPY, AYZ, YUS]",7,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CVE, WUR, BTJ, LDA, YUS, AYZ, EPY]","Let's solve it step by step.
Nodes with 0 in-degree: [CVE].
Visit node CVE and remove it from the graph.
Nodes with 0 in-degree: [WUR].
Visit node WUR and remove it from the graph.
Nodes with 0 in-degree: [BTJ, LDA].
Visit node BTJ and remove it from the graph.
Nodes with 0 in-degree: [LDA].
Visit node LDA and remove it from the graph.
Nodes with 0 in-degree: [YUS, AYZ].
Visit node YUS and remove it from the graph.
Nodes with 0 in-degree: [AYZ].
Visit node AYZ and remove it from the graph.
Nodes with 0 in-degree: [EPY].
Visit node EPY and remove it from the graph.
So the result of topological sorting is ","('[[CVE, WUR, BTJ, AYZ, LDA, YUS, EPY], [CVE, WUR, BTJ, LDA, AYZ, YUS, EPY], [CVE, WUR, AYZ, EPY, BTJ, LDA, YUS], [CVE, WUR, BTJ, LDA, YUS, AYZ, EPY]]',)",3,289
topological_sort,"[(KTD, JJB), (KTD, LCK), (KTD, DXW), (JJB, LCK), (JJB, UAP), (JJB, DXW), (UAP, CQH), (CQH, DXW)]","{KTD: [JJB, LCK, DXW],
JJB: [LCK, UAP, DXW],
LCK: [],
DXW: [],
UAP: [CQH],
CQH: [DXW]}","Node KTD is connected to nodes JJB, LCK, DXW.
Node JJB is connected to nodes LCK, UAP, DXW.
Node UAP is connected to node CQH.
Node CQH is connected to node DXW.","[UAP, LCK, KTD, CQH, DXW, JJB]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KTD, JJB, LCK, UAP, CQH, DXW]","Let's solve it step by step.
Nodes with 0 in-degree: [KTD].
Visit node KTD and remove it from the graph.
Nodes with 0 in-degree: [JJB].
Visit node JJB and remove it from the graph.
Nodes with 0 in-degree: [LCK, UAP].
Visit node LCK and remove it from the graph.
Nodes with 0 in-degree: [UAP].
Visit node UAP and remove it from the graph.
Nodes with 0 in-degree: [CQH].
Visit node CQH and remove it from the graph.
Nodes with 0 in-degree: [DXW].
Visit node DXW and remove it from the graph.
So the result of topological sorting is ","('[[KTD, UAP, DXW, CQH, JJB, LCK], [KTD, JJB, LCK, DXW, CQH, UAP], [KTD, JJB, CQH, DXW, LCK, UAP], [KTD, JJB, LCK, UAP, CQH, DXW]]',)",3,290
topological_sort,"[(MLE, KDX), (MLE, OYK), (MLE, LKN), (OYK, KDX), (LKN, OYK), (XCA, LKN), (XCA, KDX), (HUK, LKN), (HUK, MGF), (HUK, KDX), (HUK, OYK), (MGF, KDX), (MGF, XCA)]","{MLE: [KDX, OYK, LKN],
KDX: [],
OYK: [KDX],
LKN: [OYK],
XCA: [LKN, KDX],
HUK: [LKN, MGF, KDX, OYK],
MGF: [KDX, XCA]}","Node MLE is connected to nodes KDX, OYK, LKN.
Node OYK is connected to node KDX.
Node LKN is connected to node OYK.
Node XCA is connected to nodes LKN, KDX.
Node HUK is connected to nodes LKN, MGF, KDX, OYK.
Node MGF is connected to nodes KDX, XCA.","[MLE, OYK, MGF, LKN, HUK, XCA, KDX]",7,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MLE, HUK, MGF, XCA, LKN, OYK, KDX]","Let's solve it step by step.
Nodes with 0 in-degree: [MLE, HUK].
Visit node MLE and remove it from the graph.
Nodes with 0 in-degree: [HUK].
Visit node HUK and remove it from the graph.
Nodes with 0 in-degree: [MGF].
Visit node MGF and remove it from the graph.
Nodes with 0 in-degree: [XCA].
Visit node XCA and remove it from the graph.
Nodes with 0 in-degree: [LKN].
Visit node LKN and remove it from the graph.
Nodes with 0 in-degree: [OYK].
Visit node OYK and remove it from the graph.
Nodes with 0 in-degree: [KDX].
Visit node KDX and remove it from the graph.
So the result of topological sorting is ","('[[MLE, KDX, XCA, LKN, MGF, OYK, HUK], [MLE, HUK, MGF, XCA, LKN, OYK, KDX], [MLE, HUK, MGF, XCA, LKN, KDX, OYK], [MLE, HUK, OYK, KDX, MGF, XCA, LKN]]',)",1,291
topological_sort,"[(NVA, XNH), (SCJ, XNH), (SCJ, NVA), (JPP, SCJ), (JPP, ZSB), (JPP, XNH), (ZSB, NVA), (IJO, SCJ), (IJO, NVA), (IJO, JPP)]","{NVA: [XNH],
XNH: [],
SCJ: [XNH, NVA],
JPP: [SCJ, ZSB, XNH],
ZSB: [NVA],
IJO: [SCJ, NVA, JPP]}","Node NVA is connected to node XNH.
Node SCJ is connected to nodes XNH, NVA.
Node JPP is connected to nodes SCJ, ZSB, XNH.
Node ZSB is connected to node NVA.
Node IJO is connected to nodes SCJ, NVA, JPP.","[IJO, XNH, SCJ, JPP, ZSB, NVA]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IJO, JPP, SCJ, ZSB, NVA, XNH]","Let's solve it step by step.
Nodes with 0 in-degree: [IJO].
Visit node IJO and remove it from the graph.
Nodes with 0 in-degree: [JPP].
Visit node JPP and remove it from the graph.
Nodes with 0 in-degree: [SCJ, ZSB].
Visit node SCJ and remove it from the graph.
Nodes with 0 in-degree: [ZSB].
Visit node ZSB and remove it from the graph.
Nodes with 0 in-degree: [NVA].
Visit node NVA and remove it from the graph.
Nodes with 0 in-degree: [XNH].
Visit node XNH and remove it from the graph.
So the result of topological sorting is ","('[[IJO, JPP, NVA, XNH, SCJ, ZSB], [IJO, JPP, SCJ, NVA, ZSB, XNH], [IJO, JPP, SCJ, ZSB, NVA, XNH], [IJO, JPP, XNH, SCJ, NVA, ZSB]]',)",2,292
topological_sort,"[(GTR, DUE), (GTR, QIF), (GTR, HMB), (QIF, DUE), (QIF, IIS), (HMB, DUE), (BMV, IIS), (BMV, GTR), (BMV, HMB), (IIS, HMB)]","{GTR: [DUE, QIF, HMB],
DUE: [],
QIF: [DUE, IIS],
HMB: [DUE],
BMV: [IIS, GTR, HMB],
IIS: [HMB]}","Node GTR is connected to nodes DUE, QIF, HMB.
Node QIF is connected to nodes DUE, IIS.
Node HMB is connected to node DUE.
Node BMV is connected to nodes IIS, GTR, HMB.
Node IIS is connected to node HMB.","[IIS, BMV, HMB, GTR, DUE, QIF]",6,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BMV, GTR, QIF, IIS, HMB, DUE]","Let's solve it step by step.
Nodes with 0 in-degree: [BMV].
Visit node BMV and remove it from the graph.
Nodes with 0 in-degree: [GTR].
Visit node GTR and remove it from the graph.
Nodes with 0 in-degree: [QIF].
Visit node QIF and remove it from the graph.
Nodes with 0 in-degree: [IIS].
Visit node IIS and remove it from the graph.
Nodes with 0 in-degree: [HMB].
Visit node HMB and remove it from the graph.
Nodes with 0 in-degree: [DUE].
Visit node DUE and remove it from the graph.
So the result of topological sorting is ","('[[BMV, GTR, QIF, IIS, HMB, DUE], [BMV, QIF, DUE, IIS, HMB, GTR], [BMV, GTR, HMB, DUE, QIF, IIS], [BMV, GTR, QIF, HMB, DUE, IIS]]',)",0,293
topological_sort,"[(YKD, WHZ), (YKD, NWP), (YKD, XCV), (NWP, XCV), (NWP, WHZ), (XCV, WHZ), (MYC, NWP), (MYC, YKD), (MYC, WHZ)]","{YKD: [WHZ, NWP, XCV],
WHZ: [],
NWP: [XCV, WHZ],
XCV: [WHZ],
MYC: [NWP, YKD, WHZ]}","Node YKD is connected to nodes WHZ, NWP, XCV.
Node NWP is connected to nodes XCV, WHZ.
Node XCV is connected to node WHZ.
Node MYC is connected to nodes NWP, YKD, WHZ.","[NWP, MYC, WHZ, XCV, YKD]",5,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MYC, YKD, NWP, XCV, WHZ]","Let's solve it step by step.
Nodes with 0 in-degree: [MYC].
Visit node MYC and remove it from the graph.
Nodes with 0 in-degree: [YKD].
Visit node YKD and remove it from the graph.
Nodes with 0 in-degree: [NWP].
Visit node NWP and remove it from the graph.
Nodes with 0 in-degree: [XCV].
Visit node XCV and remove it from the graph.
Nodes with 0 in-degree: [WHZ].
Visit node WHZ and remove it from the graph.
So the result of topological sorting is ","('[[MYC, WHZ, YKD, NWP, XCV], [MYC, YKD, NWP, XCV, WHZ], [MYC, YKD, WHZ, XCV, NWP], [MYC, NWP, XCV, YKD, WHZ]]',)",1,294
topological_sort,"[(WCL, TMZ), (WCL, GFP), (WCL, ZYL), (GFP, TMZ), (GFP, ZYL), (GFP, OHK), (OHK, TMZ), (JCP, OHK), (JCP, WCL), (JCP, GFP), (JCP, TMZ)]","{WCL: [TMZ, GFP, ZYL],
TMZ: [],
GFP: [TMZ, ZYL, OHK],
ZYL: [],
OHK: [TMZ],
JCP: [OHK, WCL, GFP, TMZ]}","Node WCL is connected to nodes TMZ, GFP, ZYL.
Node GFP is connected to nodes TMZ, ZYL, OHK.
Node OHK is connected to node TMZ.
Node JCP is connected to nodes OHK, WCL, GFP, TMZ.","[TMZ, GFP, JCP, WCL, OHK, ZYL]",6,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JCP, WCL, GFP, ZYL, OHK, TMZ]","Let's solve it step by step.
Nodes with 0 in-degree: [JCP].
Visit node JCP and remove it from the graph.
Nodes with 0 in-degree: [WCL].
Visit node WCL and remove it from the graph.
Nodes with 0 in-degree: [GFP].
Visit node GFP and remove it from the graph.
Nodes with 0 in-degree: [ZYL, OHK].
Visit node ZYL and remove it from the graph.
Nodes with 0 in-degree: [OHK].
Visit node OHK and remove it from the graph.
Nodes with 0 in-degree: [TMZ].
Visit node TMZ and remove it from the graph.
So the result of topological sorting is ","('[[JCP, WCL, GFP, OHK, TMZ, ZYL], [JCP, ZYL, WCL, GFP, TMZ, OHK], [JCP, WCL, GFP, ZYL, OHK, TMZ], [JCP, WCL, OHK, TMZ, GFP, ZYL]]',)",2,295
topological_sort,"[(RGQ, QIX), (RGQ, IAB), (IAB, UXD), (BPF, QIX), (BPF, IAB)]","{RGQ: [QIX, IAB],
QIX: [],
IAB: [UXD],
UXD: [],
BPF: [QIX, IAB]}","Node RGQ is connected to nodes QIX, IAB.
Node IAB is connected to node UXD.
Node BPF is connected to nodes QIX, IAB.","[QIX, UXD, BPF, RGQ, IAB]",5,5,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RGQ, BPF, QIX, IAB, UXD]","Let's solve it step by step.
Nodes with 0 in-degree: [RGQ, BPF].
Visit node RGQ and remove it from the graph.
Nodes with 0 in-degree: [BPF].
Visit node BPF and remove it from the graph.
Nodes with 0 in-degree: [QIX, IAB].
Visit node QIX and remove it from the graph.
Nodes with 0 in-degree: [IAB].
Visit node IAB and remove it from the graph.
Nodes with 0 in-degree: [UXD].
Visit node UXD and remove it from the graph.
So the result of topological sorting is ","('[[RGQ, BPF, QIX, IAB, UXD], [RGQ, BPF, QIX, IAB, UXD], [RGQ, UXD, BPF, QIX, IAB], [RGQ, QIX, UXD, BPF, IAB]]',)",1,296
topological_sort,"[(ZJH, AEZ), (ZJH, NQU), (ZJH, HBE), (AEZ, VJU), (AEZ, KET), (HBE, AEZ), (VJU, KET), (VJU, NQU)]","{ZJH: [AEZ, NQU, HBE],
AEZ: [VJU, KET],
NQU: [],
HBE: [AEZ],
VJU: [KET, NQU],
KET: []}","Node ZJH is connected to nodes AEZ, NQU, HBE.
Node AEZ is connected to nodes VJU, KET.
Node HBE is connected to node AEZ.
Node VJU is connected to nodes KET, NQU.","[KET, NQU, HBE, ZJH, VJU, AEZ]",6,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZJH, HBE, AEZ, VJU, KET, NQU]","Let's solve it step by step.
Nodes with 0 in-degree: [ZJH].
Visit node ZJH and remove it from the graph.
Nodes with 0 in-degree: [HBE].
Visit node HBE and remove it from the graph.
Nodes with 0 in-degree: [AEZ].
Visit node AEZ and remove it from the graph.
Nodes with 0 in-degree: [VJU].
Visit node VJU and remove it from the graph.
Nodes with 0 in-degree: [KET, NQU].
Visit node KET and remove it from the graph.
Nodes with 0 in-degree: [NQU].
Visit node NQU and remove it from the graph.
So the result of topological sorting is ","('[[ZJH, KET, HBE, NQU, VJU, AEZ], [ZJH, HBE, AEZ, VJU, KET, NQU], [ZJH, HBE, AEZ, NQU, KET, VJU], [ZJH, HBE, KET, NQU, AEZ, VJU]]',)",1,297
topological_sort,"[(MOQ, OCM), (MOQ, BRA), (OCM, COX), (BRA, OCM), (DVL, OCM), (DVL, BRA), (DVL, MOQ)]","{MOQ: [OCM, BRA],
OCM: [COX],
BRA: [OCM],
COX: [],
DVL: [OCM, BRA, MOQ]}","Node MOQ is connected to nodes OCM, BRA.
Node OCM is connected to node COX.
Node BRA is connected to node OCM.
Node DVL is connected to nodes OCM, BRA, MOQ.","[OCM, COX, DVL, BRA, MOQ]",5,7,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DVL, MOQ, BRA, OCM, COX]","Let's solve it step by step.
Nodes with 0 in-degree: [DVL].
Visit node DVL and remove it from the graph.
Nodes with 0 in-degree: [MOQ].
Visit node MOQ and remove it from the graph.
Nodes with 0 in-degree: [BRA].
Visit node BRA and remove it from the graph.
Nodes with 0 in-degree: [OCM].
Visit node OCM and remove it from the graph.
Nodes with 0 in-degree: [COX].
Visit node COX and remove it from the graph.
So the result of topological sorting is ","('[[DVL, COX, MOQ, BRA, OCM], [DVL, COX, MOQ, BRA, OCM], [DVL, MOQ, BRA, OCM, COX], [DVL, MOQ, OCM, COX, BRA]]',)",2,298
topological_sort,"[(CWX, PFJ), (CWX, FEM), (CWX, ZGZ), (PFJ, FEM), (XIN, ZGZ), (XIN, PFJ), (XIN, FEM), (XIN, CWX), (EZE, CWX), (EZE, XIN), (EZE, FEM), (WSU, XIN), (WSU, FEM), (WSU, EZE), (WSU, CWX), (WSU, PFJ), (WSU, ZGZ)]","{CWX: [PFJ, FEM, ZGZ],
PFJ: [FEM],
FEM: [],
ZGZ: [],
XIN: [ZGZ, PFJ, FEM, CWX],
EZE: [CWX, XIN, FEM],
WSU: [XIN, FEM, EZE, CWX, PFJ, ZGZ]}","Node CWX is connected to nodes PFJ, FEM, ZGZ.
Node PFJ is connected to node FEM.
Node XIN is connected to nodes ZGZ, PFJ, FEM, CWX.
Node EZE is connected to nodes CWX, XIN, FEM.
Node WSU is connected to nodes XIN, FEM, EZE, CWX, PFJ, ZGZ.","[XIN, EZE, CWX, PFJ, WSU, ZGZ, FEM]",7,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WSU, EZE, XIN, CWX, PFJ, ZGZ, FEM]","Let's solve it step by step.
Nodes with 0 in-degree: [WSU].
Visit node WSU and remove it from the graph.
Nodes with 0 in-degree: [EZE].
Visit node EZE and remove it from the graph.
Nodes with 0 in-degree: [XIN].
Visit node XIN and remove it from the graph.
Nodes with 0 in-degree: [CWX].
Visit node CWX and remove it from the graph.
Nodes with 0 in-degree: [PFJ, ZGZ].
Visit node PFJ and remove it from the graph.
Nodes with 0 in-degree: [ZGZ, FEM].
Visit node ZGZ and remove it from the graph.
Nodes with 0 in-degree: [FEM].
Visit node FEM and remove it from the graph.
So the result of topological sorting is ","('[[WSU, EZE, ZGZ, FEM, XIN, CWX, PFJ], [WSU, EZE, XIN, CWX, PFJ, ZGZ, FEM], [WSU, FEM, ZGZ, CWX, PFJ, XIN, EZE], [WSU, EZE, XIN, FEM, CWX, PFJ, ZGZ]]',)",1,299
