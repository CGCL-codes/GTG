task,graph,graph_adj,graph_nl,nodes,num_nodes,num_edges,directed,question,answer,steps,choices,label,id
DFS,"[(<2>, <4>), (<2>, <1>), (<2>, <3>), (<2>, <5>), (<2>, <0>), (<4>, <1>), (<4>, <5>), (<1>, <3>), (<1>, <5>), (<1>, <0>), (<3>, <0>), (<5>, <0>)]","{<2>: [<4>, <1>, <3>, <5>, <0>],
<4>: [<2>, <1>, <5>],
<1>: [<2>, <4>, <3>, <5>, <0>],
<3>: [<2>, <1>, <0>],
<5>: [<2>, <4>, <1>, <0>],
<0>: [<2>, <1>, <3>, <5>]}","Node <2> is connected to nodes <4>, <1>, <3>, <5>, <0>.
Node <4> is connected to nodes <2>, <1>, <5>.
Node <1> is connected to nodes <2>, <4>, <3>, <5>, <0>.
Node <3> is connected to nodes <2>, <1>, <0>.
Node <5> is connected to nodes <2>, <4>, <1>, <0>.
Node <0> is connected to nodes <2>, <1>, <3>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,12,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <0>, <5>, <4>, <2>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<2>, <4>, <3>, <5>, <0>].
Visit node <0>. Neighors of node <0>: [<2>, <1>, <3>, <5>].
Visit node <5>. Neighors of node <5>: [<2>, <4>, <1>, <0>].
Visit node <4>. Neighors of node <4>: [<2>, <1>, <5>].
Visit node <2>. Neighors of node <2>: [<4>, <1>, <3>, <5>, <0>].
Visit node <3>. Neighors of node <3>: [<2>, <1>, <0>].
So the DFS traversal is ","('[[<1>, <0>, <2>, <3>, <5>, <4>], [<1>, <0>, <5>, <4>, <2>, <3>], [<1>, <2>, <4>, <0>, <3>, <5>], [<1>, <0>, <5>, <3>, <2>, <4>]]',)",1,0
DFS,"[(<0>, <1>), (<0>, <2>), (<0>, <6>), (<0>, <4>), (<1>, <6>), (<1>, <3>), (<2>, <4>), (<2>, <3>), (<6>, <4>), (<6>, <5>), (<6>, <3>), (<4>, <5>), (<3>, <5>)]","{<0>: [<1>, <2>, <6>, <4>],
<1>: [<0>, <6>, <3>],
<2>: [<0>, <4>, <3>],
<6>: [<0>, <1>, <4>, <5>, <3>],
<4>: [<0>, <2>, <6>, <5>],
<3>: [<1>, <2>, <6>, <5>],
<5>: [<6>, <4>, <3>]}","Node <0> is connected to nodes <1>, <2>, <6>, <4>.
Node <1> is connected to nodes <0>, <6>, <3>.
Node <2> is connected to nodes <0>, <4>, <3>.
Node <6> is connected to nodes <0>, <1>, <4>, <5>, <3>.
Node <4> is connected to nodes <0>, <2>, <6>, <5>.
Node <3> is connected to nodes <1>, <2>, <6>, <5>.
Node <5> is connected to nodes <6>, <4>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,13,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <3>, <5>, <4>, <6>, <0>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<0>, <6>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <2>, <6>, <5>].
Visit node <5>. Neighors of node <5>: [<6>, <4>, <3>].
Visit node <4>. Neighors of node <4>: [<0>, <2>, <6>, <5>].
Visit node <6>. Neighors of node <6>: [<0>, <1>, <4>, <5>, <3>].
Visit node <0>. Neighors of node <0>: [<1>, <2>, <6>, <4>].
Visit node <2>. Neighors of node <2>: [<0>, <4>, <3>].
So the DFS traversal is ","('[[<1>, <2>, <6>, <3>, <4>, <5>, <0>], [<1>, <3>, <5>, <4>, <6>, <0>, <2>], [<1>, <3>, <0>, <2>, <5>, <4>, <6>], [<1>, <3>, <5>, <0>, <6>, <4>, <2>]]',)",1,1
DFS,"[(<5>, <6>), (<6>, <4>), (<6>, <1>), (<4>, <0>), (<1>, <3>), (<1>, <2>), (<3>, <0>)]","{<5>: [<6>],
<6>: [<5>, <4>, <1>],
<4>: [<6>, <0>],
<1>: [<6>, <3>, <2>],
<3>: [<0>, <1>],
<0>: [<3>, <4>],
<2>: [<1>]}","Node <5> is connected to node <6>.
Node <6> is connected to nodes <5>, <4>, <1>.
Node <4> is connected to nodes <6>, <0>.
Node <1> is connected to nodes <6>, <3>, <2>.
Node <3> is connected to nodes <0>, <1>.
Node <0> is connected to nodes <3>, <4>.
Node <2> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <4>, <6>, <1>, <2>, <3>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<3>, <4>].
Visit node <4>. Neighors of node <4>: [<6>, <0>].
Visit node <6>. Neighors of node <6>: [<5>, <4>, <1>].
Visit node <1>. Neighors of node <1>: [<6>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <3>. Neighors of node <3>: [<0>, <1>].
Visit node <5>. Neighors of node <5>: [<6>].
So the DFS traversal is ","('[[<0>, <4>, <3>, <5>, <6>, <1>, <2>], [<0>, <4>, <6>, <1>, <2>, <3>, <5>], [<0>, <4>, <6>, <3>, <2>, <5>, <1>], [<0>, <1>, <6>, <5>, <2>, <4>, <3>]]',)",1,2
DFS,"[(<0>, <1>), (<1>, <4>), (<1>, <2>), (<2>, <3>)]","{<0>: [<1>],
<1>: [<0>, <4>, <2>],
<4>: [<1>],
<2>: [<1>, <3>],
<3>: [<2>]}","Node <0> is connected to node <1>.
Node <1> is connected to nodes <0>, <4>, <2>.
Node <4> is connected to node <1>.
Node <2> is connected to nodes <1>, <3>.
Node <3> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <1>, <2>, <3>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<1>].
Visit node <1>. Neighors of node <1>: [<0>, <4>, <2>].
Visit node <2>. Neighors of node <2>: [<1>, <3>].
Visit node <3>. Neighors of node <3>: [<2>].
Visit node <0>. Neighors of node <0>: [<1>].
So the DFS traversal is ","('[[<4>, <0>, <1>, <2>, <3>], [<4>, <0>, <3>, <2>, <1>], [<4>, <1>, <2>, <3>, <0>], [<4>, <1>, <2>, <0>, <3>]]',)",2,3
DFS,"[(<5>, <0>), (<5>, <2>), (<0>, <1>), (<2>, <1>), (<1>, <6>), (<4>, <3>), (<3>, <6>)]","{<5>: [<0>, <2>],
<0>: [<5>, <1>],
<2>: [<5>, <1>],
<1>: [<0>, <2>, <6>],
<4>: [<3>],
<3>: [<4>, <6>],
<6>: [<3>, <1>]}","Node <5> is connected to nodes <0>, <2>.
Node <0> is connected to nodes <5>, <1>.
Node <2> is connected to nodes <5>, <1>.
Node <1> is connected to nodes <0>, <2>, <6>.
Node <4> is connected to node <3>.
Node <3> is connected to nodes <4>, <6>.
Node <6> is connected to nodes <3>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <6>, <1>, <2>, <5>, <0>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<4>, <6>].
Visit node <6>. Neighors of node <6>: [<3>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <2>, <6>].
Visit node <2>. Neighors of node <2>: [<5>, <1>].
Visit node <5>. Neighors of node <5>: [<0>, <2>].
Visit node <0>. Neighors of node <0>: [<5>, <1>].
Visit node <4>. Neighors of node <4>: [<3>].
So the DFS traversal is ","('[[<3>, <6>, <1>, <2>, <5>, <0>, <4>], [<3>, <6>, <0>, <4>, <1>, <2>, <5>], [<3>, <6>, <1>, <4>, <5>, <0>, <2>], [<3>, <0>, <5>, <1>, <6>, <2>, <4>]]',)",0,4
DFS,"[(<4>, <2>), (<4>, <3>), (<2>, <3>), (<2>, <4>), (<2>, <0>), (<3>, <1>), (<3>, <4>), (<3>, <5>), (<3>, <2>), (<0>, <1>), (<1>, <0>), (<1>, <3>), (<5>, <3>)]","{<4>: [<2>, <3>],
<2>: [<3>, <4>, <0>],
<3>: [<1>, <4>, <5>, <2>],
<0>: [<1>],
<1>: [<0>, <3>],
<5>: [<3>]}","Node <4> is connected to nodes <2>, <3>.
Node <2> is connected to nodes <3>, <4>, <0>.
Node <3> is connected to nodes <1>, <4>, <5>, <2>.
Node <0> is connected to node <1>.
Node <1> is connected to nodes <0>, <3>.
Node <5> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,13,True,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <2>, <0>, <1>, <4>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<1>, <4>, <5>, <2>].
Visit node <2>. Neighors of node <2>: [<3>, <4>, <0>].
Visit node <0>. Neighors of node <0>: [<1>].
Visit node <1>. Neighors of node <1>: [<0>, <3>].
Visit node <4>. Neighors of node <4>: [<2>, <3>].
Visit node <5>. Neighors of node <5>: [<3>].
So the DFS traversal is ","('[[<3>, <4>, <2>, <5>, <1>, <0>], [<3>, <2>, <4>, <5>, <0>, <1>], [<3>, <2>, <0>, <1>, <4>, <5>], [<3>, <2>, <0>, <5>, <1>, <4>]]',)",2,5
DFS,"[(<1>, <2>), (<1>, <6>), (<1>, <5>), (<1>, <4>), (<1>, <3>), (<2>, <0>), (<2>, <6>), (<2>, <4>), (<6>, <0>), (<6>, <5>), (<6>, <4>), (<5>, <0>), (<5>, <3>), (<4>, <0>), (<3>, <0>)]","{<1>: [<2>, <6>, <5>, <4>, <3>],
<2>: [<1>, <0>, <6>, <4>],
<6>: [<1>, <0>, <2>, <5>, <4>],
<5>: [<1>, <0>, <6>, <3>],
<4>: [<1>, <0>, <2>, <6>],
<3>: [<1>, <0>, <5>],
<0>: [<2>, <6>, <5>, <4>, <3>]}","Node <1> is connected to nodes <2>, <6>, <5>, <4>, <3>.
Node <2> is connected to nodes <1>, <0>, <6>, <4>.
Node <6> is connected to nodes <1>, <0>, <2>, <5>, <4>.
Node <5> is connected to nodes <1>, <0>, <6>, <3>.
Node <4> is connected to nodes <1>, <0>, <2>, <6>.
Node <3> is connected to nodes <1>, <0>, <5>.
Node <0> is connected to nodes <2>, <6>, <5>, <4>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,15,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <6>, <5>, <3>, <0>, <2>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<1>, <0>, <2>, <6>].
Visit node <6>. Neighors of node <6>: [<1>, <0>, <2>, <5>, <4>].
Visit node <5>. Neighors of node <5>: [<1>, <0>, <6>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <0>, <5>].
Visit node <0>. Neighors of node <0>: [<2>, <6>, <5>, <4>, <3>].
Visit node <2>. Neighors of node <2>: [<1>, <0>, <6>, <4>].
Visit node <1>. Neighors of node <1>: [<2>, <6>, <5>, <4>, <3>].
So the DFS traversal is ","('[[<4>, <6>, <2>, <1>, <5>, <3>, <0>], [<4>, <0>, <2>, <5>, <1>, <6>, <3>], [<4>, <6>, <5>, <2>, <3>, <0>, <1>], [<4>, <6>, <5>, <3>, <0>, <2>, <1>]]',)",3,6
DFS,"[(<6>, <3>), (<6>, <2>), (<2>, <4>), (<2>, <1>), (<2>, <5>), (<1>, <0>)]","{<6>: [<3>, <2>],
<3>: [<6>],
<2>: [<6>, <4>, <1>, <5>],
<4>: [<2>],
<1>: [<2>, <0>],
<5>: [<2>],
<0>: [<1>]}","Node <6> is connected to nodes <3>, <2>.
Node <3> is connected to node <6>.
Node <2> is connected to nodes <6>, <4>, <1>, <5>.
Node <4> is connected to node <2>.
Node <1> is connected to nodes <2>, <0>.
Node <5> is connected to node <2>.
Node <0> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <2>, <5>, <4>, <6>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<1>].
Visit node <1>. Neighors of node <1>: [<2>, <0>].
Visit node <2>. Neighors of node <2>: [<6>, <4>, <1>, <5>].
Visit node <5>. Neighors of node <5>: [<2>].
Visit node <4>. Neighors of node <4>: [<2>].
Visit node <6>. Neighors of node <6>: [<3>, <2>].
Visit node <3>. Neighors of node <3>: [<6>].
So the DFS traversal is ","('[[<0>, <1>, <2>, <4>, <6>, <5>, <3>], [<0>, <4>, <1>, <3>, <2>, <6>, <5>], [<0>, <1>, <6>, <3>, <2>, <5>, <4>], [<0>, <1>, <2>, <5>, <4>, <6>, <3>]]',)",3,7
DFS,"[(<4>, <0>), (<4>, <1>), (<0>, <5>), (<0>, <2>), (<1>, <3>), (<5>, <2>)]","{<4>: [<0>, <1>],
<0>: [<4>, <5>, <2>],
<1>: [<4>, <3>],
<5>: [<0>, <2>],
<2>: [<0>, <5>],
<3>: [<1>]}","Node <4> is connected to nodes <0>, <1>.
Node <0> is connected to nodes <4>, <5>, <2>.
Node <1> is connected to nodes <4>, <3>.
Node <5> is connected to nodes <0>, <2>.
Node <2> is connected to nodes <0>, <5>.
Node <3> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <1>, <3>, <0>, <2>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<0>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <3>].
Visit node <3>. Neighors of node <3>: [<1>].
Visit node <0>. Neighors of node <0>: [<4>, <5>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <5>].
Visit node <5>. Neighors of node <5>: [<0>, <2>].
So the DFS traversal is ","('[[<4>, <1>, <3>, <0>, <2>, <5>], [<4>, <0>, <3>, <1>, <5>, <2>], [<4>, <1>, <2>, <5>, <3>, <0>], [<4>, <1>, <3>, <0>, <2>, <5>]]',)",0,8
DFS,"[(<3>, <5>), (<3>, <4>), (<3>, <1>), (<3>, <2>), (<2>, <0>)]","{<3>: [<5>, <4>, <1>, <2>],
<5>: [<3>],
<4>: [<3>],
<1>: [<3>],
<2>: [<3>, <0>],
<0>: [<2>]}","Node <3> is connected to nodes <5>, <4>, <1>, <2>.
Node <5> is connected to node <3>.
Node <4> is connected to node <3>.
Node <1> is connected to node <3>.
Node <2> is connected to nodes <3>, <0>.
Node <0> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <2>, <0>, <1>, <4>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<5>, <4>, <1>, <2>].
Visit node <2>. Neighors of node <2>: [<3>, <0>].
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <1>. Neighors of node <1>: [<3>].
Visit node <4>. Neighors of node <4>: [<3>].
Visit node <5>. Neighors of node <5>: [<3>].
So the DFS traversal is ","('[[<3>, <2>, <0>, <4>, <1>, <5>], [<3>, <2>, <4>, <5>, <0>, <1>], [<3>, <2>, <0>, <1>, <4>, <5>], [<3>, <1>, <4>, <5>, <2>, <0>]]',)",2,9
DFS,"[(<0>, <5>), (<3>, <2>), (<2>, <0>), (<2>, <1>), (<4>, <5>), (<4>, <0>), (<1>, <5>), (<1>, <4>)]","{<0>: [<5>],
<5>: [],
<3>: [<2>],
<2>: [<0>, <1>],
<4>: [<5>, <0>],
<1>: [<5>, <4>]}","Node <0> is connected to node <5>.
Node <3> is connected to node <2>.
Node <2> is connected to nodes <0>, <1>.
Node <4> is connected to nodes <5>, <0>.
Node <1> is connected to nodes <5>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,8,True,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <2>, <1>, <4>, <0>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<2>].
Visit node <2>. Neighors of node <2>: [<0>, <1>].
Visit node <1>. Neighors of node <1>: [<5>, <4>].
Visit node <4>. Neighors of node <4>: [<5>, <0>].
Visit node <0>. Neighors of node <0>: [<5>].
Visit node <5>. Neighors of node <5>: [].
So the DFS traversal is ","('[[<3>, <2>, <1>, <5>, <0>, <4>], [<3>, <2>, <1>, <4>, <0>, <5>], [<3>, <2>, <0>, <5>, <1>, <4>], [<3>, <2>, <1>, <4>, <0>, <5>]]',)",1,10
DFS,"[(<3>, <5>), (<3>, <2>), (<3>, <0>), (<2>, <4>), (<4>, <1>)]","{<3>: [<5>, <2>, <0>],
<5>: [<3>],
<2>: [<3>, <4>],
<0>: [<3>],
<4>: [<1>, <2>],
<1>: [<4>]}","Node <3> is connected to nodes <5>, <2>, <0>.
Node <5> is connected to node <3>.
Node <2> is connected to nodes <3>, <4>.
Node <0> is connected to node <3>.
Node <4> is connected to nodes <1>, <2>.
Node <1> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <4>, <2>, <3>, <0>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<4>].
Visit node <4>. Neighors of node <4>: [<1>, <2>].
Visit node <2>. Neighors of node <2>: [<3>, <4>].
Visit node <3>. Neighors of node <3>: [<5>, <2>, <0>].
Visit node <0>. Neighors of node <0>: [<3>].
Visit node <5>. Neighors of node <5>: [<3>].
So the DFS traversal is ","('[[<1>, <4>, <2>, <3>, <0>, <5>], [<1>, <4>, <2>, <5>, <3>, <0>], [<1>, <2>, <4>, <5>, <0>, <3>], [<1>, <4>, <0>, <5>, <2>, <3>]]',)",0,11
DFS,"[(<1>, <6>), (<1>, <4>), (<6>, <0>), (<4>, <5>), (<0>, <3>), (<0>, <2>), (<3>, <5>)]","{<1>: [<6>, <4>],
<6>: [<1>, <0>],
<4>: [<1>, <5>],
<0>: [<6>, <3>, <2>],
<3>: [<5>, <0>],
<5>: [<3>, <4>],
<2>: [<0>]}","Node <1> is connected to nodes <6>, <4>.
Node <6> is connected to nodes <1>, <0>.
Node <4> is connected to nodes <1>, <5>.
Node <0> is connected to nodes <6>, <3>, <2>.
Node <3> is connected to nodes <5>, <0>.
Node <5> is connected to nodes <3>, <4>.
Node <2> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <0>, <2>, <3>, <5>, <4>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<1>, <0>].
Visit node <0>. Neighors of node <0>: [<6>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<0>].
Visit node <3>. Neighors of node <3>: [<5>, <0>].
Visit node <5>. Neighors of node <5>: [<3>, <4>].
Visit node <4>. Neighors of node <4>: [<1>, <5>].
Visit node <1>. Neighors of node <1>: [<6>, <4>].
So the DFS traversal is ","('[[<6>, <0>, <2>, <5>, <1>, <3>, <4>], [<6>, <0>, <4>, <1>, <2>, <3>, <5>], [<6>, <0>, <2>, <3>, <5>, <4>, <1>], [<6>, <5>, <0>, <2>, <3>, <4>, <1>]]',)",2,12
DFS,"[(<0>, <3>), (<0>, <2>), (<0>, <1>), (<0>, <5>), (<3>, <6>), (<3>, <1>), (<2>, <6>), (<2>, <5>), (<1>, <4>), (<6>, <4>)]","{<0>: [<3>, <2>, <1>, <5>],
<3>: [<0>, <6>, <1>],
<2>: [<0>, <6>, <5>],
<1>: [<0>, <3>, <4>],
<5>: [<0>, <2>],
<6>: [<3>, <2>, <4>],
<4>: [<6>, <1>]}","Node <0> is connected to nodes <3>, <2>, <1>, <5>.
Node <3> is connected to nodes <0>, <6>, <1>.
Node <2> is connected to nodes <0>, <6>, <5>.
Node <1> is connected to nodes <0>, <3>, <4>.
Node <5> is connected to nodes <0>, <2>.
Node <6> is connected to nodes <3>, <2>, <4>.
Node <4> is connected to nodes <6>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <2>, <6>, <4>, <1>, <3>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<0>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <6>, <5>].
Visit node <6>. Neighors of node <6>: [<3>, <2>, <4>].
Visit node <4>. Neighors of node <4>: [<6>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <3>, <4>].
Visit node <3>. Neighors of node <3>: [<0>, <6>, <1>].
Visit node <0>. Neighors of node <0>: [<3>, <2>, <1>, <5>].
So the DFS traversal is ","('[[<5>, <3>, <2>, <0>, <4>, <6>, <1>], [<5>, <2>, <3>, <0>, <6>, <4>, <1>], [<5>, <2>, <6>, <4>, <1>, <3>, <0>], [<5>, <2>, <6>, <4>, <1>, <0>, <3>]]',)",2,13
DFS,"[(<1>, <2>), (<1>, <3>), (<1>, <4>), (<1>, <0>), (<3>, <4>)]","{<1>: [<2>, <3>, <4>, <0>],
<2>: [<1>],
<3>: [<1>, <4>],
<4>: [<1>, <3>],
<0>: [<1>]}","Node <1> is connected to nodes <2>, <3>, <4>, <0>.
Node <2> is connected to node <1>.
Node <3> is connected to nodes <1>, <4>.
Node <4> is connected to nodes <1>, <3>.
Node <0> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <3>, <1>, <0>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<1>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <4>].
Visit node <1>. Neighors of node <1>: [<2>, <3>, <4>, <0>].
Visit node <0>. Neighors of node <0>: [<1>].
Visit node <2>. Neighors of node <2>: [<1>].
So the DFS traversal is ","('[[<4>, <3>, <1>, <0>, <2>], [<4>, <2>, <3>, <1>, <0>], [<4>, <3>, <2>, <0>, <1>], [<4>, <3>, <1>, <2>, <0>]]',)",0,14
DFS,"[(<4>, <5>), (<4>, <1>), (<4>, <0>), (<0>, <6>), (<6>, <3>), (<6>, <2>)]","{<4>: [<5>, <1>, <0>],
<5>: [<4>],
<1>: [<4>],
<0>: [<4>, <6>],
<6>: [<0>, <3>, <2>],
<3>: [<6>],
<2>: [<6>]}","Node <4> is connected to nodes <5>, <1>, <0>.
Node <5> is connected to node <4>.
Node <1> is connected to node <4>.
Node <0> is connected to nodes <4>, <6>.
Node <6> is connected to nodes <0>, <3>, <2>.
Node <3> is connected to node <6>.
Node <2> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <0>, <6>, <2>, <3>, <1>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<5>, <1>, <0>].
Visit node <0>. Neighors of node <0>: [<4>, <6>].
Visit node <6>. Neighors of node <6>: [<0>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<6>].
Visit node <3>. Neighors of node <3>: [<6>].
Visit node <1>. Neighors of node <1>: [<4>].
Visit node <5>. Neighors of node <5>: [<4>].
So the DFS traversal is ","('[[<4>, <6>, <1>, <5>, <0>, <2>, <3>], [<4>, <0>, <6>, <2>, <3>, <5>, <1>], [<4>, <0>, <1>, <5>, <6>, <2>, <3>], [<4>, <0>, <6>, <2>, <3>, <1>, <5>]]',)",3,15
DFS,"[(<4>, <5>), (<4>, <2>), (<4>, <3>), (<4>, <0>), (<4>, <1>), (<5>, <3>), (<5>, <1>), (<2>, <3>), (<2>, <0>), (<2>, <1>), (<3>, <1>), (<0>, <1>)]","{<4>: [<5>, <2>, <3>, <0>, <1>],
<5>: [<4>, <3>, <1>],
<2>: [<4>, <3>, <0>, <1>],
<3>: [<4>, <5>, <2>, <1>],
<0>: [<4>, <2>, <1>],
<1>: [<4>, <5>, <2>, <3>, <0>]}","Node <4> is connected to nodes <5>, <2>, <3>, <0>, <1>.
Node <5> is connected to nodes <4>, <3>, <1>.
Node <2> is connected to nodes <4>, <3>, <0>, <1>.
Node <3> is connected to nodes <4>, <5>, <2>, <1>.
Node <0> is connected to nodes <4>, <2>, <1>.
Node <1> is connected to nodes <4>, <5>, <2>, <3>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,12,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <1>, <0>, <2>, <3>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<5>, <2>, <3>, <0>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <5>, <2>, <3>, <0>].
Visit node <0>. Neighors of node <0>: [<4>, <2>, <1>].
Visit node <2>. Neighors of node <2>: [<4>, <3>, <0>, <1>].
Visit node <3>. Neighors of node <3>: [<4>, <5>, <2>, <1>].
Visit node <5>. Neighors of node <5>: [<4>, <3>, <1>].
So the DFS traversal is ","('[[<4>, <1>, <0>, <2>, <3>, <5>], [<4>, <1>, <0>, <3>, <5>, <2>], [<4>, <1>, <3>, <5>, <0>, <2>], [<4>, <1>, <2>, <0>, <3>, <5>]]',)",0,16
DFS,"[(<2>, <0>), (<0>, <6>), (<0>, <1>), (<6>, <1>), (<1>, <4>), (<4>, <3>), (<3>, <5>)]","{<2>: [<0>],
<0>: [<2>, <6>, <1>],
<6>: [<0>, <1>],
<1>: [<0>, <6>, <4>],
<4>: [<1>, <3>],
<3>: [<4>, <5>],
<5>: [<3>]}","Node <2> is connected to node <0>.
Node <0> is connected to nodes <2>, <6>, <1>.
Node <6> is connected to nodes <0>, <1>.
Node <1> is connected to nodes <0>, <6>, <4>.
Node <4> is connected to nodes <1>, <3>.
Node <3> is connected to nodes <4>, <5>.
Node <5> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <4>, <3>, <5>, <6>, <0>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<0>, <6>, <4>].
Visit node <4>. Neighors of node <4>: [<1>, <3>].
Visit node <3>. Neighors of node <3>: [<4>, <5>].
Visit node <5>. Neighors of node <5>: [<3>].
Visit node <6>. Neighors of node <6>: [<0>, <1>].
Visit node <0>. Neighors of node <0>: [<2>, <6>, <1>].
Visit node <2>. Neighors of node <2>: [<0>].
So the DFS traversal is ","('[[<1>, <5>, <0>, <4>, <6>, <2>, <3>], [<1>, <4>, <3>, <0>, <2>, <6>, <5>], [<1>, <4>, <0>, <2>, <3>, <5>, <6>], [<1>, <4>, <3>, <5>, <6>, <0>, <2>]]',)",3,17
DFS,"[(<0>, <1>), (<0>, <3>), (<0>, <5>), (<0>, <2>), (<1>, <4>), (<1>, <5>), (<1>, <2>), (<3>, <4>), (<3>, <2>), (<5>, <2>), (<2>, <4>)]","{<0>: [<1>, <3>, <5>, <2>],
<1>: [<0>, <4>, <5>, <2>],
<3>: [<0>, <4>, <2>],
<5>: [<0>, <1>, <2>],
<2>: [<0>, <4>, <1>, <3>, <5>],
<4>: [<1>, <3>, <2>]}","Node <0> is connected to nodes <1>, <3>, <5>, <2>.
Node <1> is connected to nodes <0>, <4>, <5>, <2>.
Node <3> is connected to nodes <0>, <4>, <2>.
Node <5> is connected to nodes <0>, <1>, <2>.
Node <2> is connected to nodes <0>, <4>, <1>, <3>, <5>.
Node <4> is connected to nodes <1>, <3>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,11,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <2>, <5>, <1>, <4>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<0>, <4>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <4>, <1>, <3>, <5>].
Visit node <5>. Neighors of node <5>: [<0>, <1>, <2>].
Visit node <1>. Neighors of node <1>: [<0>, <4>, <5>, <2>].
Visit node <4>. Neighors of node <4>: [<1>, <3>, <2>].
Visit node <0>. Neighors of node <0>: [<1>, <3>, <5>, <2>].
So the DFS traversal is ","('[[<3>, <5>, <1>, <4>, <2>, <0>], [<3>, <2>, <5>, <1>, <4>, <0>], [<3>, <2>, <5>, <1>, <4>, <0>], [<3>, <2>, <4>, <0>, <5>, <1>]]',)",1,18
DFS,"[(<4>, <5>), (<4>, <2>), (<4>, <1>), (<4>, <0>), (<5>, <2>), (<5>, <3>), (<5>, <0>), (<2>, <1>), (<2>, <0>), (<1>, <0>)]","{<4>: [<5>, <2>, <1>, <0>],
<5>: [<4>, <2>, <3>, <0>],
<2>: [<4>, <5>, <1>, <0>],
<1>: [<4>, <2>, <0>],
<0>: [<4>, <5>, <2>, <1>],
<3>: [<5>]}","Node <4> is connected to nodes <5>, <2>, <1>, <0>.
Node <5> is connected to nodes <4>, <2>, <3>, <0>.
Node <2> is connected to nodes <4>, <5>, <1>, <0>.
Node <1> is connected to nodes <4>, <2>, <0>.
Node <0> is connected to nodes <4>, <5>, <2>, <1>.
Node <3> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,10,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <2>, <5>, <3>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<4>, <5>, <2>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <2>, <0>].
Visit node <2>. Neighors of node <2>: [<4>, <5>, <1>, <0>].
Visit node <5>. Neighors of node <5>: [<4>, <2>, <3>, <0>].
Visit node <3>. Neighors of node <3>: [<5>].
Visit node <4>. Neighors of node <4>: [<5>, <2>, <1>, <0>].
So the DFS traversal is ","('[[<0>, <1>, <2>, <4>, <3>, <5>], [<0>, <1>, <2>, <5>, <3>, <4>], [<0>, <1>, <3>, <4>, <2>, <5>], [<0>, <3>, <2>, <5>, <4>, <1>]]',)",1,19
DFS,"[(<6>, <0>), (<6>, <5>), (<6>, <2>), (<6>, <3>), (<6>, <4>), (<3>, <1>)]","{<6>: [<0>, <5>, <2>, <3>, <4>],
<0>: [<6>],
<5>: [<6>],
<2>: [<6>],
<3>: [<6>, <1>],
<4>: [<6>],
<1>: [<3>]}","Node <6> is connected to nodes <0>, <5>, <2>, <3>, <4>.
Node <0> is connected to node <6>.
Node <5> is connected to node <6>.
Node <2> is connected to node <6>.
Node <3> is connected to nodes <6>, <1>.
Node <4> is connected to node <6>.
Node <1> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <1>, <6>, <4>, <2>, <5>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<6>, <1>].
Visit node <1>. Neighors of node <1>: [<3>].
Visit node <6>. Neighors of node <6>: [<0>, <5>, <2>, <3>, <4>].
Visit node <4>. Neighors of node <4>: [<6>].
Visit node <2>. Neighors of node <2>: [<6>].
Visit node <5>. Neighors of node <5>: [<6>].
Visit node <0>. Neighors of node <0>: [<6>].
So the DFS traversal is ","('[[<3>, <1>, <6>, <4>, <2>, <5>, <0>], [<3>, <0>, <1>, <4>, <5>, <2>, <6>], [<3>, <1>, <6>, <2>, <4>, <5>, <0>], [<3>, <1>, <5>, <0>, <6>, <4>, <2>]]',)",0,20
DFS,"[(<0>, <3>), (<0>, <1>), (<0>, <2>), (<3>, <2>), (<3>, <0>), (<1>, <6>), (<2>, <1>), (<2>, <6>), (<6>, <2>), (<6>, <3>), (<5>, <4>), (<5>, <0>), (<5>, <3>), (<5>, <1>), (<4>, <1>), (<4>, <6>)]","{<0>: [<3>, <1>, <2>],
<3>: [<2>, <0>],
<1>: [<6>],
<2>: [<1>, <6>],
<6>: [<2>, <3>],
<5>: [<4>, <0>, <3>, <1>],
<4>: [<1>, <6>]}","Node <0> is connected to nodes <3>, <1>, <2>.
Node <3> is connected to nodes <2>, <0>.
Node <1> is connected to node <6>.
Node <2> is connected to nodes <1>, <6>.
Node <6> is connected to nodes <2>, <3>.
Node <5> is connected to nodes <4>, <0>, <3>, <1>.
Node <4> is connected to nodes <1>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,16,True,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <0>, <2>, <6>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<2>, <0>].
Visit node <0>. Neighors of node <0>: [<3>, <1>, <2>].
Visit node <2>. Neighors of node <2>: [<1>, <6>].
Visit node <6>. Neighors of node <6>: [<2>, <3>].
Visit node <1>. Neighors of node <1>: [<6>].
So the DFS traversal is ","('[[<3>, <0>, <1>, <2>, <6>], [<3>, <6>, <2>, <0>, <1>], [<3>, <1>, <0>, <2>, <6>], [<3>, <0>, <2>, <6>, <1>]]',)",3,21
DFS,"[(<2>, <5>), (<2>, <6>), (<2>, <4>), (<2>, <3>), (<2>, <0>), (<5>, <3>), (<5>, <4>), (<4>, <1>), (<3>, <1>), (<3>, <0>)]","{<2>: [<5>, <6>, <4>, <3>, <0>],
<5>: [<2>, <3>, <4>],
<6>: [<2>],
<4>: [<2>, <5>, <1>],
<3>: [<2>, <5>, <1>, <0>],
<0>: [<2>, <3>],
<1>: [<4>, <3>]}","Node <2> is connected to nodes <5>, <6>, <4>, <3>, <0>.
Node <5> is connected to nodes <2>, <3>, <4>.
Node <6> is connected to node <2>.
Node <4> is connected to nodes <2>, <5>, <1>.
Node <3> is connected to nodes <2>, <5>, <1>, <0>.
Node <0> is connected to nodes <2>, <3>.
Node <1> is connected to nodes <4>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <2>, <0>, <3>, <1>, <4>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<2>].
Visit node <2>. Neighors of node <2>: [<5>, <6>, <4>, <3>, <0>].
Visit node <0>. Neighors of node <0>: [<2>, <3>].
Visit node <3>. Neighors of node <3>: [<2>, <5>, <1>, <0>].
Visit node <1>. Neighors of node <1>: [<4>, <3>].
Visit node <4>. Neighors of node <4>: [<2>, <5>, <1>].
Visit node <5>. Neighors of node <5>: [<2>, <3>, <4>].
So the DFS traversal is ","('[[<6>, <2>, <0>, <3>, <1>, <4>, <5>], [<6>, <2>, <4>, <5>, <0>, <3>, <1>], [<6>, <0>, <4>, <2>, <5>, <1>, <3>], [<6>, <2>, <0>, <5>, <1>, <4>, <3>]]',)",0,22
DFS,"[(<1>, <3>), (<1>, <0>), (<3>, <1>), (<0>, <4>), (<2>, <3>), (<2>, <0>), (<2>, <1>), (<4>, <1>), (<4>, <2>), (<4>, <3>), (<4>, <0>)]","{<1>: [<3>, <0>],
<3>: [<1>],
<0>: [<4>],
<2>: [<3>, <0>, <1>],
<4>: [<1>, <2>, <3>, <0>]}","Node <1> is connected to nodes <3>, <0>.
Node <3> is connected to node <1>.
Node <0> is connected to node <4>.
Node <2> is connected to nodes <3>, <0>, <1>.
Node <4> is connected to nodes <1>, <2>, <3>, <0>.","[<0>, <1>, <2>, <3>, <4>]",5,11,True,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <1>, <0>, <4>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<1>].
Visit node <1>. Neighors of node <1>: [<3>, <0>].
Visit node <0>. Neighors of node <0>: [<4>].
Visit node <4>. Neighors of node <4>: [<1>, <2>, <3>, <0>].
Visit node <2>. Neighors of node <2>: [<3>, <0>, <1>].
So the DFS traversal is ","('[[<3>, <2>, <0>, <1>, <4>], [<3>, <1>, <0>, <4>, <2>], [<3>, <1>, <0>, <4>, <2>], [<3>, <2>, <1>, <0>, <4>]]',)",1,23
DFS,"[(<5>, <1>), (<5>, <4>), (<5>, <3>), (<5>, <2>), (<1>, <0>), (<1>, <4>), (<1>, <3>), (<4>, <0>), (<4>, <3>), (<4>, <2>), (<3>, <0>), (<3>, <2>), (<2>, <0>)]","{<5>: [<1>, <4>, <3>, <2>],
<1>: [<5>, <0>, <4>, <3>],
<4>: [<5>, <0>, <1>, <3>, <2>],
<3>: [<5>, <0>, <1>, <4>, <2>],
<2>: [<5>, <0>, <4>, <3>],
<0>: [<1>, <4>, <3>, <2>]}","Node <5> is connected to nodes <1>, <4>, <3>, <2>.
Node <1> is connected to nodes <5>, <0>, <4>, <3>.
Node <4> is connected to nodes <5>, <0>, <1>, <3>, <2>.
Node <3> is connected to nodes <5>, <0>, <1>, <4>, <2>.
Node <2> is connected to nodes <5>, <0>, <4>, <3>.
Node <0> is connected to nodes <1>, <4>, <3>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,13,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <2>, <3>, <4>, <1>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<1>, <4>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<5>, <0>, <4>, <3>].
Visit node <3>. Neighors of node <3>: [<5>, <0>, <1>, <4>, <2>].
Visit node <4>. Neighors of node <4>: [<5>, <0>, <1>, <3>, <2>].
Visit node <1>. Neighors of node <1>: [<5>, <0>, <4>, <3>].
Visit node <0>. Neighors of node <0>: [<1>, <4>, <3>, <2>].
So the DFS traversal is ","('[[<5>, <2>, <1>, <0>, <3>, <4>], [<5>, <2>, <3>, <4>, <1>, <0>], [<5>, <2>, <3>, <4>, <1>, <0>], [<5>, <2>, <0>, <4>, <3>, <1>]]',)",2,24
DFS,"[(<0>, <3>), (<0>, <2>), (<3>, <4>), (<3>, <0>), (<4>, <3>), (<4>, <5>), (<5>, <1>)]","{<0>: [<3>, <2>],
<3>: [<4>, <0>],
<2>: [],
<4>: [<3>, <5>],
<5>: [<1>],
<1>: []}","Node <0> is connected to nodes <3>, <2>.
Node <3> is connected to nodes <4>, <0>.
Node <4> is connected to nodes <3>, <5>.
Node <5> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,7,True,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <5>, <1>, <3>, <0>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<3>, <5>].
Visit node <5>. Neighors of node <5>: [<1>].
Visit node <1>. Neighors of node <1>: [].
Visit node <3>. Neighors of node <3>: [<4>, <0>].
Visit node <0>. Neighors of node <0>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [].
So the DFS traversal is ","('[[<4>, <5>, <1>, <0>, <2>, <3>], [<4>, <5>, <1>, <3>, <0>, <2>], [<4>, <1>, <2>, <3>, <0>, <5>], [<4>, <5>, <0>, <2>, <1>, <3>]]',)",1,25
DFS,"[(<3>, <4>), (<3>, <5>), (<3>, <0>), (<3>, <6>), (<4>, <2>), (<4>, <5>), (<4>, <1>), (<5>, <2>), (<5>, <1>), (<0>, <6>)]","{<3>: [<4>, <5>, <0>, <6>],
<4>: [<3>, <2>, <5>, <1>],
<5>: [<3>, <4>, <2>, <1>],
<0>: [<3>, <6>],
<6>: [<3>, <0>],
<2>: [<4>, <5>],
<1>: [<4>, <5>]}","Node <3> is connected to nodes <4>, <5>, <0>, <6>.
Node <4> is connected to nodes <3>, <2>, <5>, <1>.
Node <5> is connected to nodes <3>, <4>, <2>, <1>.
Node <0> is connected to nodes <3>, <6>.
Node <6> is connected to nodes <3>, <0>.
Node <2> is connected to nodes <4>, <5>.
Node <1> is connected to nodes <4>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <6>, <3>, <5>, <1>, <4>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<3>, <6>].
Visit node <6>. Neighors of node <6>: [<3>, <0>].
Visit node <3>. Neighors of node <3>: [<4>, <5>, <0>, <6>].
Visit node <5>. Neighors of node <5>: [<3>, <4>, <2>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <5>].
Visit node <4>. Neighors of node <4>: [<3>, <2>, <5>, <1>].
Visit node <2>. Neighors of node <2>: [<4>, <5>].
So the DFS traversal is ","('[[<0>, <6>, <3>, <5>, <1>, <2>, <4>], [<0>, <2>, <5>, <6>, <1>, <4>, <3>], [<0>, <6>, <3>, <5>, <1>, <4>, <2>], [<0>, <6>, <4>, <2>, <3>, <5>, <1>]]',)",2,26
DFS,"[(<2>, <4>), (<2>, <6>), (<4>, <0>), (<6>, <1>), (<6>, <5>), (<6>, <3>)]","{<2>: [<4>, <6>],
<4>: [<2>, <0>],
<6>: [<2>, <1>, <5>, <3>],
<0>: [<4>],
<1>: [<6>],
<5>: [<6>],
<3>: [<6>]}","Node <2> is connected to nodes <4>, <6>.
Node <4> is connected to nodes <2>, <0>.
Node <6> is connected to nodes <2>, <1>, <5>, <3>.
Node <0> is connected to node <4>.
Node <1> is connected to node <6>.
Node <5> is connected to node <6>.
Node <3> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <3>, <5>, <1>, <2>, <4>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<2>, <1>, <5>, <3>].
Visit node <3>. Neighors of node <3>: [<6>].
Visit node <5>. Neighors of node <5>: [<6>].
Visit node <1>. Neighors of node <1>: [<6>].
Visit node <2>. Neighors of node <2>: [<4>, <6>].
Visit node <4>. Neighors of node <4>: [<2>, <0>].
Visit node <0>. Neighors of node <0>: [<4>].
So the DFS traversal is ","('[[<6>, <3>, <5>, <1>, <2>, <4>, <0>], [<6>, <3>, <4>, <0>, <5>, <1>, <2>], [<6>, <3>, <5>, <2>, <0>, <1>, <4>], [<6>, <0>, <1>, <4>, <5>, <3>, <2>]]',)",0,27
DFS,"[(<2>, <3>), (<2>, <5>), (<3>, <4>), (<3>, <0>), (<4>, <1>), (<0>, <1>)]","{<2>: [<3>, <5>],
<3>: [<2>, <4>, <0>],
<5>: [<2>],
<4>: [<3>, <1>],
<0>: [<3>, <1>],
<1>: [<0>, <4>]}","Node <2> is connected to nodes <3>, <5>.
Node <3> is connected to nodes <2>, <4>, <0>.
Node <5> is connected to node <2>.
Node <4> is connected to nodes <3>, <1>.
Node <0> is connected to nodes <3>, <1>.
Node <1> is connected to nodes <0>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <4>, <3>, <2>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<3>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <1>].
Visit node <3>. Neighors of node <3>: [<2>, <4>, <0>].
Visit node <2>. Neighors of node <2>: [<3>, <5>].
Visit node <5>. Neighors of node <5>: [<2>].
So the DFS traversal is ","('[[<0>, <1>, <4>, <5>, <3>, <2>], [<0>, <1>, <4>, <3>, <2>, <5>], [<0>, <1>, <2>, <5>, <4>, <3>], [<0>, <2>, <5>, <3>, <1>, <4>]]',)",1,28
DFS,"[(<1>, <3>), (<1>, <2>), (<3>, <4>), (<2>, <0>), (<2>, <4>)]","{<1>: [<3>, <2>],
<3>: [<1>, <4>],
<2>: [<1>, <0>, <4>],
<4>: [<3>, <2>],
<0>: [<2>]}","Node <1> is connected to nodes <3>, <2>.
Node <3> is connected to nodes <1>, <4>.
Node <2> is connected to nodes <1>, <0>, <4>.
Node <4> is connected to nodes <3>, <2>.
Node <0> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <2>, <4>, <3>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<1>, <0>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <2>].
Visit node <3>. Neighors of node <3>: [<1>, <4>].
Visit node <0>. Neighors of node <0>: [<2>].
So the DFS traversal is ","('[[<1>, <3>, <4>, <2>, <0>], [<1>, <2>, <4>, <3>, <0>], [<1>, <0>, <2>, <4>, <3>], [<1>, <2>, <4>, <0>, <3>]]',)",1,29
DFS,"[(<0>, <4>), (<0>, <2>), (<4>, <1>), (<2>, <1>), (<2>, <6>), (<2>, <3>), (<2>, <5>), (<1>, <6>), (<6>, <3>), (<3>, <5>)]","{<0>: [<4>, <2>],
<4>: [<0>, <1>],
<2>: [<0>, <1>, <6>, <3>, <5>],
<1>: [<4>, <2>, <6>],
<6>: [<2>, <1>, <3>],
<3>: [<2>, <5>, <6>],
<5>: [<2>, <3>]}","Node <0> is connected to nodes <4>, <2>.
Node <4> is connected to nodes <0>, <1>.
Node <2> is connected to nodes <0>, <1>, <6>, <3>, <5>.
Node <1> is connected to nodes <4>, <2>, <6>.
Node <6> is connected to nodes <2>, <1>, <3>.
Node <3> is connected to nodes <2>, <5>, <6>.
Node <5> is connected to nodes <2>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <3>, <5>, <2>, <1>, <4>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<2>, <1>, <3>].
Visit node <3>. Neighors of node <3>: [<2>, <5>, <6>].
Visit node <5>. Neighors of node <5>: [<2>, <3>].
Visit node <2>. Neighors of node <2>: [<0>, <1>, <6>, <3>, <5>].
Visit node <1>. Neighors of node <1>: [<4>, <2>, <6>].
Visit node <4>. Neighors of node <4>: [<0>, <1>].
Visit node <0>. Neighors of node <0>: [<4>, <2>].
So the DFS traversal is ","('[[<6>, <0>, <5>, <2>, <4>, <3>, <1>], [<6>, <3>, <5>, <2>, <1>, <4>, <0>], [<6>, <3>, <4>, <0>, <5>, <2>, <1>], [<6>, <3>, <5>, <0>, <1>, <2>, <4>]]',)",1,30
DFS,"[(<2>, <0>), (<2>, <1>), (<0>, <1>), (<0>, <5>), (<1>, <5>), (<1>, <6>), (<1>, <3>), (<1>, <0>), (<6>, <1>), (<6>, <2>), (<3>, <1>), (<3>, <4>), (<3>, <2>), (<4>, <3>), (<4>, <0>), (<5>, <2>), (<5>, <0>)]","{<2>: [<0>, <1>],
<0>: [<1>, <5>],
<1>: [<5>, <6>, <3>, <0>],
<6>: [<1>, <2>],
<3>: [<1>, <4>, <2>],
<4>: [<3>, <0>],
<5>: [<2>, <0>]}","Node <2> is connected to nodes <0>, <1>.
Node <0> is connected to nodes <1>, <5>.
Node <1> is connected to nodes <5>, <6>, <3>, <0>.
Node <6> is connected to nodes <1>, <2>.
Node <3> is connected to nodes <1>, <4>, <2>.
Node <4> is connected to nodes <3>, <0>.
Node <5> is connected to nodes <2>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,17,True,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <2>, <1>, <0>, <5>, <3>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<1>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <1>].
Visit node <1>. Neighors of node <1>: [<5>, <6>, <3>, <0>].
Visit node <0>. Neighors of node <0>: [<1>, <5>].
Visit node <5>. Neighors of node <5>: [<2>, <0>].
Visit node <3>. Neighors of node <3>: [<1>, <4>, <2>].
Visit node <4>. Neighors of node <4>: [<3>, <0>].
So the DFS traversal is ","('[[<6>, <2>, <1>, <0>, <5>, <3>, <4>], [<6>, <2>, <1>, <3>, <0>, <5>, <4>], [<6>, <2>, <3>, <4>, <1>, <0>, <5>], [<6>, <5>, <1>, <0>, <3>, <2>, <4>]]',)",0,31
DFS,"[(<5>, <6>), (<5>, <4>), (<4>, <2>), (<4>, <0>), (<0>, <1>), (<0>, <3>)]","{<5>: [<6>, <4>],
<6>: [<5>],
<4>: [<5>, <2>, <0>],
<2>: [<4>],
<0>: [<4>, <1>, <3>],
<1>: [<0>],
<3>: [<0>]}","Node <5> is connected to nodes <6>, <4>.
Node <6> is connected to node <5>.
Node <4> is connected to nodes <5>, <2>, <0>.
Node <2> is connected to node <4>.
Node <0> is connected to nodes <4>, <1>, <3>.
Node <1> is connected to node <0>.
Node <3> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <0>, <3>, <1>, <2>, <5>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<5>, <2>, <0>].
Visit node <0>. Neighors of node <0>: [<4>, <1>, <3>].
Visit node <3>. Neighors of node <3>: [<0>].
Visit node <1>. Neighors of node <1>: [<0>].
Visit node <2>. Neighors of node <2>: [<4>].
Visit node <5>. Neighors of node <5>: [<6>, <4>].
Visit node <6>. Neighors of node <6>: [<5>].
So the DFS traversal is ","('[[<4>, <0>, <5>, <6>, <3>, <1>, <2>], [<4>, <0>, <3>, <1>, <2>, <5>, <6>], [<4>, <0>, <3>, <1>, <2>, <6>, <5>], [<4>, <1>, <3>, <5>, <0>, <6>, <2>]]',)",1,32
DFS,"[(<1>, <0>), (<1>, <4>), (<1>, <2>), (<0>, <4>), (<0>, <2>), (<0>, <5>), (<0>, <3>), (<4>, <2>), (<4>, <5>), (<4>, <3>), (<2>, <5>), (<2>, <3>), (<5>, <3>)]","{<1>: [<0>, <4>, <2>],
<0>: [<1>, <4>, <2>, <5>, <3>],
<4>: [<1>, <0>, <2>, <5>, <3>],
<2>: [<1>, <0>, <4>, <5>, <3>],
<5>: [<0>, <4>, <2>, <3>],
<3>: [<0>, <4>, <2>, <5>]}","Node <1> is connected to nodes <0>, <4>, <2>.
Node <0> is connected to nodes <1>, <4>, <2>, <5>, <3>.
Node <4> is connected to nodes <1>, <0>, <2>, <5>, <3>.
Node <2> is connected to nodes <1>, <0>, <4>, <5>, <3>.
Node <5> is connected to nodes <0>, <4>, <2>, <3>.
Node <3> is connected to nodes <0>, <4>, <2>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,13,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <3>, <5>, <4>, <0>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<1>, <0>, <4>, <5>, <3>].
Visit node <3>. Neighors of node <3>: [<0>, <4>, <2>, <5>].
Visit node <5>. Neighors of node <5>: [<0>, <4>, <2>, <3>].
Visit node <4>. Neighors of node <4>: [<1>, <0>, <2>, <5>, <3>].
Visit node <0>. Neighors of node <0>: [<1>, <4>, <2>, <5>, <3>].
Visit node <1>. Neighors of node <1>: [<0>, <4>, <2>].
So the DFS traversal is ","('[[<2>, <3>, <5>, <0>, <4>, <1>], [<2>, <3>, <5>, <4>, <0>, <1>], [<2>, <3>, <0>, <1>, <5>, <4>], [<2>, <3>, <1>, <5>, <4>, <0>]]',)",1,33
DFS,"[(<5>, <3>), (<5>, <4>), (<5>, <0>), (<5>, <2>), (<5>, <1>), (<3>, <4>), (<3>, <0>), (<3>, <1>), (<4>, <2>), (<4>, <1>), (<0>, <2>), (<0>, <1>), (<2>, <1>)]","{<5>: [<3>, <4>, <0>, <2>, <1>],
<3>: [<5>, <4>, <0>, <1>],
<4>: [<5>, <3>, <2>, <1>],
<0>: [<5>, <3>, <2>, <1>],
<2>: [<5>, <4>, <0>, <1>],
<1>: [<5>, <3>, <4>, <0>, <2>]}","Node <5> is connected to nodes <3>, <4>, <0>, <2>, <1>.
Node <3> is connected to nodes <5>, <4>, <0>, <1>.
Node <4> is connected to nodes <5>, <3>, <2>, <1>.
Node <0> is connected to nodes <5>, <3>, <2>, <1>.
Node <2> is connected to nodes <5>, <4>, <0>, <1>.
Node <1> is connected to nodes <5>, <3>, <4>, <0>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,13,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <1>, <2>, <0>, <3>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<5>, <3>, <2>, <1>].
Visit node <1>. Neighors of node <1>: [<5>, <3>, <4>, <0>, <2>].
Visit node <2>. Neighors of node <2>: [<5>, <4>, <0>, <1>].
Visit node <0>. Neighors of node <0>: [<5>, <3>, <2>, <1>].
Visit node <3>. Neighors of node <3>: [<5>, <4>, <0>, <1>].
Visit node <5>. Neighors of node <5>: [<3>, <4>, <0>, <2>, <1>].
So the DFS traversal is ","('[[<4>, <1>, <2>, <0>, <3>, <5>], [<4>, <1>, <2>, <0>, <3>, <5>], [<4>, <1>, <3>, <5>, <2>, <0>], [<4>, <0>, <5>, <1>, <2>, <3>]]',)",1,34
DFS,"[(<1>, <4>), (<1>, <3>), (<4>, <2>), (<4>, <3>), (<4>, <0>), (<3>, <1>), (<3>, <2>), (<0>, <3>), (<2>, <1>), (<2>, <4>)]","{<1>: [<4>, <3>],
<4>: [<2>, <3>, <0>],
<3>: [<1>, <2>],
<0>: [<3>],
<2>: [<1>, <4>]}","Node <1> is connected to nodes <4>, <3>.
Node <4> is connected to nodes <2>, <3>, <0>.
Node <3> is connected to nodes <1>, <2>.
Node <0> is connected to node <3>.
Node <2> is connected to nodes <1>, <4>.","[<0>, <1>, <2>, <3>, <4>]",5,10,True,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <4>, <0>, <3>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<1>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <3>, <0>].
Visit node <0>. Neighors of node <0>: [<3>].
Visit node <3>. Neighors of node <3>: [<1>, <2>].
Visit node <1>. Neighors of node <1>: [<4>, <3>].
So the DFS traversal is ","('[[<2>, <4>, <1>, <0>, <3>], [<2>, <1>, <4>, <0>, <3>], [<2>, <4>, <1>, <0>, <3>], [<2>, <4>, <0>, <3>, <1>]]',)",3,35
DFS,"[(<4>, <5>), (<5>, <1>), (<5>, <4>), (<5>, <2>), (<5>, <0>), (<2>, <3>), (<2>, <1>), (<2>, <4>), (<1>, <4>), (<1>, <2>), (<1>, <3>), (<0>, <5>), (<0>, <1>), (<0>, <4>)]","{<4>: [<5>],
<5>: [<1>, <4>, <2>, <0>],
<2>: [<3>, <1>, <4>],
<3>: [],
<1>: [<4>, <2>, <3>],
<0>: [<5>, <1>, <4>]}","Node <4> is connected to node <5>.
Node <5> is connected to nodes <1>, <4>, <2>, <0>.
Node <2> is connected to nodes <3>, <1>, <4>.
Node <1> is connected to nodes <4>, <2>, <3>.
Node <0> is connected to nodes <5>, <1>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,14,True,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <4>, <5>, <0>, <1>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<3>, <1>, <4>].
Visit node <4>. Neighors of node <4>: [<5>].
Visit node <5>. Neighors of node <5>: [<1>, <4>, <2>, <0>].
Visit node <0>. Neighors of node <0>: [<5>, <1>, <4>].
Visit node <1>. Neighors of node <1>: [<4>, <2>, <3>].
Visit node <3>. Neighors of node <3>: [].
So the DFS traversal is ","('[[<2>, <4>, <1>, <3>, <5>, <0>], [<2>, <4>, <5>, <3>, <1>, <0>], [<2>, <3>, <5>, <1>, <4>, <0>], [<2>, <4>, <5>, <0>, <1>, <3>]]',)",3,36
DFS,"[(<5>, <4>), (<5>, <1>), (<5>, <6>), (<1>, <0>), (<0>, <2>), (<0>, <3>)]","{<5>: [<4>, <1>, <6>],
<4>: [<5>],
<1>: [<5>, <0>],
<6>: [<5>],
<0>: [<1>, <2>, <3>],
<2>: [<0>],
<3>: [<0>]}","Node <5> is connected to nodes <4>, <1>, <6>.
Node <4> is connected to node <5>.
Node <1> is connected to nodes <5>, <0>.
Node <6> is connected to node <5>.
Node <0> is connected to nodes <1>, <2>, <3>.
Node <2> is connected to node <0>.
Node <3> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <0>, <3>, <2>, <5>, <6>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<5>, <0>].
Visit node <0>. Neighors of node <0>: [<1>, <2>, <3>].
Visit node <3>. Neighors of node <3>: [<0>].
Visit node <2>. Neighors of node <2>: [<0>].
Visit node <5>. Neighors of node <5>: [<4>, <1>, <6>].
Visit node <6>. Neighors of node <6>: [<5>].
Visit node <4>. Neighors of node <4>: [<5>].
So the DFS traversal is ","('[[<1>, <0>, <6>, <4>, <3>, <2>, <5>], [<1>, <0>, <3>, <2>, <5>, <6>, <4>], [<1>, <0>, <3>, <6>, <4>, <5>, <2>], [<1>, <4>, <0>, <5>, <6>, <2>, <3>]]',)",1,37
DFS,"[(<0>, <6>), (<0>, <4>), (<0>, <1>), (<0>, <3>), (<6>, <3>), (<4>, <2>), (<4>, <5>), (<1>, <3>), (<3>, <2>), (<2>, <5>)]","{<0>: [<6>, <4>, <1>, <3>],
<6>: [<0>, <3>],
<4>: [<0>, <2>, <5>],
<1>: [<0>, <3>],
<3>: [<0>, <6>, <2>, <1>],
<2>: [<4>, <5>, <3>],
<5>: [<4>, <2>]}","Node <0> is connected to nodes <6>, <4>, <1>, <3>.
Node <6> is connected to nodes <0>, <3>.
Node <4> is connected to nodes <0>, <2>, <5>.
Node <1> is connected to nodes <0>, <3>.
Node <3> is connected to nodes <0>, <6>, <2>, <1>.
Node <2> is connected to nodes <4>, <5>, <3>.
Node <5> is connected to nodes <4>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <3>, <1>, <0>, <4>, <5>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<4>, <5>, <3>].
Visit node <3>. Neighors of node <3>: [<0>, <6>, <2>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <3>].
Visit node <0>. Neighors of node <0>: [<6>, <4>, <1>, <3>].
Visit node <4>. Neighors of node <4>: [<0>, <2>, <5>].
Visit node <5>. Neighors of node <5>: [<4>, <2>].
Visit node <6>. Neighors of node <6>: [<0>, <3>].
So the DFS traversal is ","('[[<2>, <3>, <1>, <0>, <5>, <4>, <6>], [<2>, <3>, <1>, <0>, <4>, <5>, <6>], [<2>, <3>, <5>, <6>, <1>, <0>, <4>], [<2>, <0>, <3>, <1>, <6>, <5>, <4>]]',)",1,38
DFS,"[(<0>, <3>), (<0>, <1>), (<1>, <4>), (<4>, <2>), (<2>, <5>)]","{<0>: [<3>, <1>],
<3>: [<0>],
<1>: [<0>, <4>],
<4>: [<1>, <2>],
<2>: [<4>, <5>],
<5>: [<2>]}","Node <0> is connected to nodes <3>, <1>.
Node <3> is connected to node <0>.
Node <1> is connected to nodes <0>, <4>.
Node <4> is connected to nodes <1>, <2>.
Node <2> is connected to nodes <4>, <5>.
Node <5> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <5>, <4>, <1>, <0>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<4>, <5>].
Visit node <5>. Neighors of node <5>: [<2>].
Visit node <4>. Neighors of node <4>: [<1>, <2>].
Visit node <1>. Neighors of node <1>: [<0>, <4>].
Visit node <0>. Neighors of node <0>: [<3>, <1>].
Visit node <3>. Neighors of node <3>: [<0>].
So the DFS traversal is ","('[[<2>, <5>, <4>, <1>, <0>, <3>], [<2>, <5>, <0>, <3>, <4>, <1>], [<2>, <5>, <4>, <3>, <1>, <0>], [<2>, <5>, <4>, <1>, <3>, <0>]]',)",0,39
DFS,"[(<1>, <3>), (<1>, <4>), (<3>, <1>), (<3>, <0>), (<4>, <0>), (<4>, <3>), (<2>, <0>), (<2>, <3>), (<2>, <4>), (<2>, <1>), (<0>, <2>)]","{<1>: [<3>, <4>],
<3>: [<1>, <0>],
<4>: [<0>, <3>],
<2>: [<0>, <3>, <4>, <1>],
<0>: [<2>]}","Node <1> is connected to nodes <3>, <4>.
Node <3> is connected to nodes <1>, <0>.
Node <4> is connected to nodes <0>, <3>.
Node <2> is connected to nodes <0>, <3>, <4>, <1>.
Node <0> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>]",5,11,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <4>, <3>, <0>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>, <4>].
Visit node <4>. Neighors of node <4>: [<0>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <0>].
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <2>. Neighors of node <2>: [<0>, <3>, <4>, <1>].
So the DFS traversal is ","('[[<1>, <4>, <3>, <2>, <0>], [<1>, <4>, <3>, <0>, <2>], [<1>, <3>, <2>, <0>, <4>], [<1>, <2>, <4>, <3>, <0>]]',)",1,40
DFS,"[(<2>, <0>), (<0>, <1>), (<0>, <4>), (<1>, <3>), (<5>, <6>), (<5>, <3>), (<6>, <3>)]","{<2>: [<0>],
<0>: [<2>, <1>, <4>],
<1>: [<0>, <3>],
<4>: [<0>],
<5>: [<6>, <3>],
<6>: [<5>, <3>],
<3>: [<5>, <6>, <1>]}","Node <2> is connected to node <0>.
Node <0> is connected to nodes <2>, <1>, <4>.
Node <1> is connected to nodes <0>, <3>.
Node <4> is connected to node <0>.
Node <5> is connected to nodes <6>, <3>.
Node <6> is connected to nodes <5>, <3>.
Node <3> is connected to nodes <5>, <6>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <3>, <6>, <5>, <0>, <4>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<0>, <3>].
Visit node <3>. Neighors of node <3>: [<5>, <6>, <1>].
Visit node <6>. Neighors of node <6>: [<5>, <3>].
Visit node <5>. Neighors of node <5>: [<6>, <3>].
Visit node <0>. Neighors of node <0>: [<2>, <1>, <4>].
Visit node <4>. Neighors of node <4>: [<0>].
Visit node <2>. Neighors of node <2>: [<0>].
So the DFS traversal is ","('[[<1>, <3>, <4>, <2>, <6>, <5>, <0>], [<1>, <3>, <6>, <4>, <5>, <0>, <2>], [<1>, <3>, <4>, <0>, <2>, <5>, <6>], [<1>, <3>, <6>, <5>, <0>, <4>, <2>]]',)",3,41
DFS,"[(<0>, <1>), (<0>, <3>), (<0>, <2>), (<1>, <3>), (<1>, <5>), (<1>, <4>), (<1>, <2>), (<3>, <5>), (<3>, <4>), (<3>, <2>), (<2>, <5>), (<2>, <4>), (<5>, <4>)]","{<0>: [<1>, <3>, <2>],
<1>: [<0>, <3>, <5>, <4>, <2>],
<3>: [<0>, <1>, <5>, <4>, <2>],
<2>: [<0>, <1>, <3>, <5>, <4>],
<5>: [<1>, <3>, <4>, <2>],
<4>: [<1>, <3>, <5>, <2>]}","Node <0> is connected to nodes <1>, <3>, <2>.
Node <1> is connected to nodes <0>, <3>, <5>, <4>, <2>.
Node <3> is connected to nodes <0>, <1>, <5>, <4>, <2>.
Node <2> is connected to nodes <0>, <1>, <3>, <5>, <4>.
Node <5> is connected to nodes <1>, <3>, <4>, <2>.
Node <4> is connected to nodes <1>, <3>, <5>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,13,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <2>, <4>, <5>, <3>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<0>, <3>, <5>, <4>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <1>, <3>, <5>, <4>].
Visit node <4>. Neighors of node <4>: [<1>, <3>, <5>, <2>].
Visit node <5>. Neighors of node <5>: [<1>, <3>, <4>, <2>].
Visit node <3>. Neighors of node <3>: [<0>, <1>, <5>, <4>, <2>].
Visit node <0>. Neighors of node <0>: [<1>, <3>, <2>].
So the DFS traversal is ","('[[<1>, <2>, <4>, <3>, <0>, <5>], [<1>, <2>, <3>, <0>, <4>, <5>], [<1>, <0>, <2>, <3>, <4>, <5>], [<1>, <2>, <4>, <5>, <3>, <0>]]',)",3,42
DFS,"[(<2>, <3>), (<2>, <5>), (<2>, <1>), (<3>, <4>), (<3>, <0>), (<3>, <5>), (<3>, <1>), (<5>, <4>), (<5>, <0>), (<5>, <1>), (<1>, <4>), (<1>, <0>)]","{<2>: [<3>, <5>, <1>],
<3>: [<2>, <4>, <0>, <5>, <1>],
<5>: [<2>, <4>, <3>, <0>, <1>],
<1>: [<2>, <4>, <3>, <0>, <5>],
<4>: [<3>, <5>, <1>],
<0>: [<3>, <5>, <1>]}","Node <2> is connected to nodes <3>, <5>, <1>.
Node <3> is connected to nodes <2>, <4>, <0>, <5>, <1>.
Node <5> is connected to nodes <2>, <4>, <3>, <0>, <1>.
Node <1> is connected to nodes <2>, <4>, <3>, <0>, <5>.
Node <4> is connected to nodes <3>, <5>, <1>.
Node <0> is connected to nodes <3>, <5>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,12,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <5>, <0>, <3>, <4>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<2>, <4>, <3>, <0>, <5>].
Visit node <5>. Neighors of node <5>: [<2>, <4>, <3>, <0>, <1>].
Visit node <0>. Neighors of node <0>: [<3>, <5>, <1>].
Visit node <3>. Neighors of node <3>: [<2>, <4>, <0>, <5>, <1>].
Visit node <4>. Neighors of node <4>: [<3>, <5>, <1>].
Visit node <2>. Neighors of node <2>: [<3>, <5>, <1>].
So the DFS traversal is ","('[[<1>, <3>, <5>, <2>, <0>, <4>], [<1>, <5>, <4>, <2>, <0>, <3>], [<1>, <5>, <0>, <2>, <3>, <4>], [<1>, <5>, <0>, <3>, <4>, <2>]]',)",3,43
DFS,"[(<0>, <3>), (<0>, <5>), (<0>, <2>), (<3>, <5>), (<2>, <4>), (<4>, <1>)]","{<0>: [<3>, <5>, <2>],
<3>: [<0>, <5>],
<5>: [<0>, <3>],
<2>: [<0>, <4>],
<4>: [<2>, <1>],
<1>: [<4>]}","Node <0> is connected to nodes <3>, <5>, <2>.
Node <3> is connected to nodes <0>, <5>.
Node <5> is connected to nodes <0>, <3>.
Node <2> is connected to nodes <0>, <4>.
Node <4> is connected to nodes <2>, <1>.
Node <1> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <4>, <1>, <0>, <5>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<0>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <1>].
Visit node <1>. Neighors of node <1>: [<4>].
Visit node <0>. Neighors of node <0>: [<3>, <5>, <2>].
Visit node <5>. Neighors of node <5>: [<0>, <3>].
Visit node <3>. Neighors of node <3>: [<0>, <5>].
So the DFS traversal is ","('[[<2>, <4>, <1>, <0>, <5>, <3>], [<2>, <4>, <5>, <3>, <1>, <0>], [<2>, <1>, <5>, <3>, <0>, <4>], [<2>, <4>, <1>, <0>, <5>, <3>]]',)",3,44
DFS,"[(<3>, <0>), (<3>, <2>), (<3>, <1>), (<3>, <4>), (<3>, <5>), (<0>, <6>), (<0>, <2>), (<0>, <5>), (<2>, <6>), (<2>, <4>), (<2>, <5>), (<1>, <6>), (<1>, <5>), (<4>, <5>)]","{<3>: [<0>, <2>, <1>, <4>, <5>],
<0>: [<3>, <6>, <2>, <5>],
<2>: [<3>, <6>, <0>, <4>, <5>],
<1>: [<3>, <6>, <5>],
<4>: [<3>, <2>, <5>],
<5>: [<3>, <0>, <2>, <1>, <4>],
<6>: [<0>, <2>, <1>]}","Node <3> is connected to nodes <0>, <2>, <1>, <4>, <5>.
Node <0> is connected to nodes <3>, <6>, <2>, <5>.
Node <2> is connected to nodes <3>, <6>, <0>, <4>, <5>.
Node <1> is connected to nodes <3>, <6>, <5>.
Node <4> is connected to nodes <3>, <2>, <5>.
Node <5> is connected to nodes <3>, <0>, <2>, <1>, <4>.
Node <6> is connected to nodes <0>, <2>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,14,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <4>, <2>, <0>, <6>, <1>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<3>, <0>, <2>, <1>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <2>, <5>].
Visit node <2>. Neighors of node <2>: [<3>, <6>, <0>, <4>, <5>].
Visit node <0>. Neighors of node <0>: [<3>, <6>, <2>, <5>].
Visit node <6>. Neighors of node <6>: [<0>, <2>, <1>].
Visit node <1>. Neighors of node <1>: [<3>, <6>, <5>].
Visit node <3>. Neighors of node <3>: [<0>, <2>, <1>, <4>, <5>].
So the DFS traversal is ","('[[<5>, <4>, <2>, <0>, <6>, <1>, <3>], [<5>, <4>, <1>, <3>, <2>, <0>, <6>], [<5>, <4>, <0>, <6>, <2>, <1>, <3>], [<5>, <4>, <2>, <1>, <0>, <3>, <6>]]',)",0,45
DFS,"[(<0>, <2>), (<0>, <3>), (<0>, <4>), (<2>, <4>), (<2>, <1>), (<3>, <1>), (<3>, <0>), (<3>, <2>), (<3>, <5>), (<4>, <1>), (<4>, <0>), (<4>, <3>), (<1>, <0>), (<1>, <2>), (<5>, <4>), (<5>, <1>), (<5>, <0>), (<5>, <2>)]","{<0>: [<2>, <3>, <4>],
<2>: [<4>, <1>],
<3>: [<1>, <0>, <2>, <5>],
<4>: [<1>, <0>, <3>],
<1>: [<0>, <2>],
<5>: [<4>, <1>, <0>, <2>]}","Node <0> is connected to nodes <2>, <3>, <4>.
Node <2> is connected to nodes <4>, <1>.
Node <3> is connected to nodes <1>, <0>, <2>, <5>.
Node <4> is connected to nodes <1>, <0>, <3>.
Node <1> is connected to nodes <0>, <2>.
Node <5> is connected to nodes <4>, <1>, <0>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,18,True,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <1>, <0>, <4>, <3>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<4>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <2>].
Visit node <0>. Neighors of node <0>: [<2>, <3>, <4>].
Visit node <4>. Neighors of node <4>: [<1>, <0>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <0>, <2>, <5>].
Visit node <5>. Neighors of node <5>: [<4>, <1>, <0>, <2>].
So the DFS traversal is ","('[[<2>, <5>, <0>, <4>, <1>, <3>], [<2>, <1>, <3>, <5>, <0>, <4>], [<2>, <1>, <0>, <4>, <3>, <5>], [<2>, <1>, <0>, <5>, <4>, <3>]]',)",2,46
DFS,"[(<0>, <1>), (<0>, <4>), (<0>, <2>), (<2>, <3>)]","{<0>: [<1>, <4>, <2>],
<1>: [<0>],
<4>: [<0>],
<2>: [<0>, <3>],
<3>: [<2>]}","Node <0> is connected to nodes <1>, <4>, <2>.
Node <1> is connected to node <0>.
Node <4> is connected to node <0>.
Node <2> is connected to nodes <0>, <3>.
Node <3> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <3>, <0>, <4>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<0>, <3>].
Visit node <3>. Neighors of node <3>: [<2>].
Visit node <0>. Neighors of node <0>: [<1>, <4>, <2>].
Visit node <4>. Neighors of node <4>: [<0>].
Visit node <1>. Neighors of node <1>: [<0>].
So the DFS traversal is ","('[[<2>, <1>, <3>, <0>, <4>], [<2>, <3>, <0>, <4>, <1>], [<2>, <3>, <1>, <0>, <4>], [<2>, <0>, <3>, <4>, <1>]]',)",1,47
DFS,"[(<0>, <5>), (<0>, <4>), (<0>, <6>), (<0>, <1>), (<0>, <3>), (<4>, <2>)]","{<0>: [<5>, <4>, <6>, <1>, <3>],
<5>: [<0>],
<4>: [<0>, <2>],
<6>: [<0>],
<1>: [<0>],
<3>: [<0>],
<2>: [<4>]}","Node <0> is connected to nodes <5>, <4>, <6>, <1>, <3>.
Node <5> is connected to node <0>.
Node <4> is connected to nodes <0>, <2>.
Node <6> is connected to node <0>.
Node <1> is connected to node <0>.
Node <3> is connected to node <0>.
Node <2> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <0>, <3>, <1>, <6>, <4>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<0>].
Visit node <0>. Neighors of node <0>: [<5>, <4>, <6>, <1>, <3>].
Visit node <3>. Neighors of node <3>: [<0>].
Visit node <1>. Neighors of node <1>: [<0>].
Visit node <6>. Neighors of node <6>: [<0>].
Visit node <4>. Neighors of node <4>: [<0>, <2>].
Visit node <2>. Neighors of node <2>: [<4>].
So the DFS traversal is ","('[[<5>, <2>, <6>, <1>, <3>, <4>, <0>], [<5>, <0>, <4>, <2>, <3>, <1>, <6>], [<5>, <0>, <3>, <1>, <6>, <4>, <2>], [<5>, <0>, <3>, <4>, <6>, <1>, <2>]]',)",2,48
DFS,"[(<3>, <0>), (<3>, <1>), (<3>, <4>), (<0>, <2>), (<1>, <2>)]","{<3>: [<0>, <1>, <4>],
<0>: [<3>, <2>],
<1>: [<3>, <2>],
<4>: [<3>],
<2>: [<0>, <1>]}","Node <3> is connected to nodes <0>, <1>, <4>.
Node <0> is connected to nodes <3>, <2>.
Node <1> is connected to nodes <3>, <2>.
Node <4> is connected to node <3>.
Node <2> is connected to nodes <0>, <1>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <4>, <1>, <2>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<0>, <1>, <4>].
Visit node <4>. Neighors of node <4>: [<3>].
Visit node <1>. Neighors of node <1>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <1>].
Visit node <0>. Neighors of node <0>: [<3>, <2>].
So the DFS traversal is ","('[[<3>, <4>, <1>, <0>, <2>], [<3>, <4>, <1>, <2>, <0>], [<3>, <0>, <4>, <1>, <2>], [<3>, <0>, <1>, <2>, <4>]]',)",1,49
DFS,"[(<1>, <4>), (<1>, <3>), (<1>, <5>), (<4>, <3>), (<4>, <5>), (<3>, <4>), (<3>, <0>), (<5>, <1>), (<0>, <3>), (<0>, <2>), (<0>, <1>), (<0>, <4>), (<2>, <5>), (<2>, <4>), (<2>, <3>)]","{<1>: [<4>, <3>, <5>],
<4>: [<3>, <5>],
<3>: [<4>, <0>],
<5>: [<1>],
<0>: [<3>, <2>, <1>, <4>],
<2>: [<5>, <4>, <3>]}","Node <1> is connected to nodes <4>, <3>, <5>.
Node <4> is connected to nodes <3>, <5>.
Node <3> is connected to nodes <4>, <0>.
Node <5> is connected to node <1>.
Node <0> is connected to nodes <3>, <2>, <1>, <4>.
Node <2> is connected to nodes <5>, <4>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,15,True,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <3>, <0>, <4>, <5>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<5>, <4>, <3>].
Visit node <3>. Neighors of node <3>: [<4>, <0>].
Visit node <0>. Neighors of node <0>: [<3>, <2>, <1>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <5>].
Visit node <5>. Neighors of node <5>: [<1>].
Visit node <1>. Neighors of node <1>: [<4>, <3>, <5>].
So the DFS traversal is ","('[[<2>, <3>, <0>, <5>, <1>, <4>], [<2>, <3>, <5>, <1>, <0>, <4>], [<2>, <1>, <4>, <3>, <5>, <0>], [<2>, <3>, <0>, <4>, <5>, <1>]]',)",3,50
DFS,"[(<3>, <5>), (<3>, <4>), (<3>, <6>), (<3>, <1>), (<3>, <0>), (<3>, <2>), (<5>, <4>), (<5>, <1>), (<6>, <2>), (<1>, <2>)]","{<3>: [<5>, <4>, <6>, <1>, <0>, <2>],
<5>: [<3>, <4>, <1>],
<4>: [<3>, <5>],
<6>: [<3>, <2>],
<1>: [<3>, <5>, <2>],
<0>: [<3>],
<2>: [<3>, <6>, <1>]}","Node <3> is connected to nodes <5>, <4>, <6>, <1>, <0>, <2>.
Node <5> is connected to nodes <3>, <4>, <1>.
Node <4> is connected to nodes <3>, <5>.
Node <6> is connected to nodes <3>, <2>.
Node <1> is connected to nodes <3>, <5>, <2>.
Node <0> is connected to node <3>.
Node <2> is connected to nodes <3>, <6>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <3>, <2>, <1>, <5>, <4>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<3>].
Visit node <3>. Neighors of node <3>: [<5>, <4>, <6>, <1>, <0>, <2>].
Visit node <2>. Neighors of node <2>: [<3>, <6>, <1>].
Visit node <1>. Neighors of node <1>: [<3>, <5>, <2>].
Visit node <5>. Neighors of node <5>: [<3>, <4>, <1>].
Visit node <4>. Neighors of node <4>: [<3>, <5>].
Visit node <6>. Neighors of node <6>: [<3>, <2>].
So the DFS traversal is ","('[[<0>, <3>, <2>, <1>, <5>, <4>, <6>], [<0>, <3>, <4>, <6>, <2>, <1>, <5>], [<0>, <1>, <3>, <4>, <5>, <6>, <2>], [<0>, <3>, <2>, <1>, <6>, <5>, <4>]]',)",0,51
DFS,"[(<5>, <0>), (<5>, <3>), (<5>, <2>), (<5>, <4>), (<5>, <1>)]","{<5>: [<0>, <3>, <2>, <4>, <1>],
<0>: [<5>],
<3>: [<5>],
<2>: [<5>],
<4>: [<5>],
<1>: [<5>]}","Node <5> is connected to nodes <0>, <3>, <2>, <4>, <1>.
Node <0> is connected to node <5>.
Node <3> is connected to node <5>.
Node <2> is connected to node <5>.
Node <4> is connected to node <5>.
Node <1> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <5>, <1>, <4>, <3>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<5>].
Visit node <5>. Neighors of node <5>: [<0>, <3>, <2>, <4>, <1>].
Visit node <1>. Neighors of node <1>: [<5>].
Visit node <4>. Neighors of node <4>: [<5>].
Visit node <3>. Neighors of node <3>: [<5>].
Visit node <0>. Neighors of node <0>: [<5>].
So the DFS traversal is ","('[[<2>, <5>, <3>, <0>, <1>, <4>], [<2>, <5>, <1>, <4>, <3>, <0>], [<2>, <5>, <1>, <0>, <3>, <4>], [<2>, <3>, <4>, <0>, <1>, <5>]]',)",1,52
DFS,"[(<3>, <4>), (<3>, <6>), (<3>, <0>), (<3>, <1>), (<3>, <5>), (<6>, <1>), (<0>, <1>), (<0>, <2>), (<1>, <5>), (<1>, <2>)]","{<3>: [<4>, <6>, <0>, <1>, <5>],
<4>: [<3>],
<6>: [<3>, <1>],
<0>: [<3>, <1>, <2>],
<1>: [<3>, <5>, <2>, <0>, <6>],
<5>: [<3>, <1>],
<2>: [<1>, <0>]}","Node <3> is connected to nodes <4>, <6>, <0>, <1>, <5>.
Node <4> is connected to node <3>.
Node <6> is connected to nodes <3>, <1>.
Node <0> is connected to nodes <3>, <1>, <2>.
Node <1> is connected to nodes <3>, <5>, <2>, <0>, <6>.
Node <5> is connected to nodes <3>, <1>.
Node <2> is connected to nodes <1>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <6>, <3>, <5>, <0>, <2>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>, <5>, <2>, <0>, <6>].
Visit node <6>. Neighors of node <6>: [<3>, <1>].
Visit node <3>. Neighors of node <3>: [<4>, <6>, <0>, <1>, <5>].
Visit node <5>. Neighors of node <5>: [<3>, <1>].
Visit node <0>. Neighors of node <0>: [<3>, <1>, <2>].
Visit node <2>. Neighors of node <2>: [<1>, <0>].
Visit node <4>. Neighors of node <4>: [<3>].
So the DFS traversal is ","('[[<1>, <6>, <3>, <0>, <4>, <2>, <5>], [<1>, <6>, <3>, <5>, <0>, <2>, <4>], [<1>, <2>, <5>, <0>, <4>, <3>, <6>], [<1>, <6>, <2>, <4>, <3>, <5>, <0>]]',)",1,53
DFS,"[(<1>, <4>), (<1>, <5>), (<4>, <5>), (<4>, <2>), (<4>, <1>), (<5>, <3>), (<5>, <2>), (<2>, <1>), (<3>, <0>), (<3>, <5>), (<0>, <2>), (<0>, <5>)]","{<1>: [<4>, <5>],
<4>: [<5>, <2>, <1>],
<5>: [<3>, <2>],
<2>: [<1>],
<3>: [<0>, <5>],
<0>: [<2>, <5>]}","Node <1> is connected to nodes <4>, <5>.
Node <4> is connected to nodes <5>, <2>, <1>.
Node <5> is connected to nodes <3>, <2>.
Node <2> is connected to node <1>.
Node <3> is connected to nodes <0>, <5>.
Node <0> is connected to nodes <2>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,12,True,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <1>, <5>, <3>, <0>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <1>. Neighors of node <1>: [<4>, <5>].
Visit node <5>. Neighors of node <5>: [<3>, <2>].
Visit node <3>. Neighors of node <3>: [<0>, <5>].
Visit node <0>. Neighors of node <0>: [<2>, <5>].
Visit node <4>. Neighors of node <4>: [<5>, <2>, <1>].
So the DFS traversal is ","('[[<2>, <0>, <3>, <4>, <5>, <1>], [<2>, <1>, <5>, <3>, <0>, <4>], [<2>, <1>, <0>, <4>, <5>, <3>], [<2>, <1>, <5>, <4>, <0>, <3>]]',)",1,54
DFS,"[(<1>, <2>), (<1>, <3>), (<1>, <4>), (<1>, <0>), (<2>, <3>), (<2>, <4>), (<2>, <0>), (<3>, <4>), (<4>, <5>), (<0>, <5>)]","{<1>: [<2>, <3>, <4>, <0>],
<2>: [<1>, <3>, <4>, <0>],
<3>: [<1>, <2>, <4>],
<4>: [<1>, <2>, <5>, <3>],
<0>: [<1>, <2>, <5>],
<5>: [<4>, <0>]}","Node <1> is connected to nodes <2>, <3>, <4>, <0>.
Node <2> is connected to nodes <1>, <3>, <4>, <0>.
Node <3> is connected to nodes <1>, <2>, <4>.
Node <4> is connected to nodes <1>, <2>, <5>, <3>.
Node <0> is connected to nodes <1>, <2>, <5>.
Node <5> is connected to nodes <4>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,10,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <5>, <4>, <3>, <2>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<1>, <2>, <5>].
Visit node <5>. Neighors of node <5>: [<4>, <0>].
Visit node <4>. Neighors of node <4>: [<1>, <2>, <5>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <2>, <4>].
Visit node <2>. Neighors of node <2>: [<1>, <3>, <4>, <0>].
Visit node <1>. Neighors of node <1>: [<2>, <3>, <4>, <0>].
So the DFS traversal is ","('[[<0>, <5>, <4>, <2>, <3>, <1>], [<0>, <5>, <4>, <3>, <2>, <1>], [<0>, <3>, <1>, <4>, <5>, <2>], [<0>, <5>, <2>, <1>, <4>, <3>]]',)",1,55
DFS,"[(<4>, <1>), (<4>, <6>), (<4>, <2>), (<4>, <5>), (<4>, <3>), (<1>, <5>), (<3>, <0>)]","{<4>: [<1>, <6>, <2>, <5>, <3>],
<1>: [<4>, <5>],
<6>: [<4>],
<2>: [<4>],
<5>: [<4>, <1>],
<3>: [<4>, <0>],
<0>: [<3>]}","Node <4> is connected to nodes <1>, <6>, <2>, <5>, <3>.
Node <1> is connected to nodes <4>, <5>.
Node <6> is connected to node <4>.
Node <2> is connected to node <4>.
Node <5> is connected to nodes <4>, <1>.
Node <3> is connected to nodes <4>, <0>.
Node <0> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <0>, <4>, <5>, <1>, <2>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<4>, <0>].
Visit node <0>. Neighors of node <0>: [<3>].
Visit node <4>. Neighors of node <4>: [<1>, <6>, <2>, <5>, <3>].
Visit node <5>. Neighors of node <5>: [<4>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <5>].
Visit node <2>. Neighors of node <2>: [<4>].
Visit node <6>. Neighors of node <6>: [<4>].
So the DFS traversal is ","('[[<3>, <0>, <4>, <1>, <5>, <6>, <2>], [<3>, <0>, <2>, <6>, <4>, <5>, <1>], [<3>, <0>, <4>, <5>, <1>, <2>, <6>], [<3>, <4>, <5>, <0>, <1>, <6>, <2>]]',)",2,56
DFS,"[(<0>, <1>), (<0>, <2>), (<0>, <4>), (<0>, <3>), (<1>, <5>), (<1>, <2>), (<1>, <4>), (<2>, <5>), (<2>, <4>), (<2>, <3>), (<4>, <3>), (<3>, <5>)]","{<0>: [<1>, <2>, <4>, <3>],
<1>: [<0>, <5>, <2>, <4>],
<2>: [<0>, <1>, <5>, <4>, <3>],
<4>: [<0>, <1>, <2>, <3>],
<3>: [<0>, <5>, <2>, <4>],
<5>: [<1>, <2>, <3>]}","Node <0> is connected to nodes <1>, <2>, <4>, <3>.
Node <1> is connected to nodes <0>, <5>, <2>, <4>.
Node <2> is connected to nodes <0>, <1>, <5>, <4>, <3>.
Node <4> is connected to nodes <0>, <1>, <2>, <3>.
Node <3> is connected to nodes <0>, <5>, <2>, <4>.
Node <5> is connected to nodes <1>, <2>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,12,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <4>, <2>, <5>, <1>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<0>, <5>, <2>, <4>].
Visit node <4>. Neighors of node <4>: [<0>, <1>, <2>, <3>].
Visit node <2>. Neighors of node <2>: [<0>, <1>, <5>, <4>, <3>].
Visit node <5>. Neighors of node <5>: [<1>, <2>, <3>].
Visit node <1>. Neighors of node <1>: [<0>, <5>, <2>, <4>].
Visit node <0>. Neighors of node <0>: [<1>, <2>, <4>, <3>].
So the DFS traversal is ","('[[<3>, <4>, <2>, <0>, <1>, <5>], [<3>, <4>, <2>, <5>, <1>, <0>], [<3>, <4>, <1>, <0>, <2>, <5>], [<3>, <2>, <1>, <0>, <4>, <5>]]',)",1,57
DFS,"[(<2>, <1>), (<2>, <3>), (<2>, <0>), (<1>, <4>)]","{<2>: [<1>, <3>, <0>],
<1>: [<2>, <4>],
<3>: [<2>],
<0>: [<2>],
<4>: [<1>]}","Node <2> is connected to nodes <1>, <3>, <0>.
Node <1> is connected to nodes <2>, <4>.
Node <3> is connected to node <2>.
Node <0> is connected to node <2>.
Node <4> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <2>, <0>, <1>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<2>].
Visit node <2>. Neighors of node <2>: [<1>, <3>, <0>].
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <1>. Neighors of node <1>: [<2>, <4>].
Visit node <4>. Neighors of node <4>: [<1>].
So the DFS traversal is ","('[[<3>, <4>, <2>, <0>, <1>], [<3>, <2>, <1>, <4>, <0>], [<3>, <2>, <0>, <1>, <4>], [<3>, <2>, <4>, <1>, <0>]]',)",2,58
DFS,"[(<0>, <1>), (<0>, <2>), (<1>, <3>), (<1>, <5>), (<2>, <5>), (<3>, <4>)]","{<0>: [<1>, <2>],
<1>: [<0>, <3>, <5>],
<2>: [<0>, <5>],
<3>: [<1>, <4>],
<5>: [<1>, <2>],
<4>: [<3>]}","Node <0> is connected to nodes <1>, <2>.
Node <1> is connected to nodes <0>, <3>, <5>.
Node <2> is connected to nodes <0>, <5>.
Node <3> is connected to nodes <1>, <4>.
Node <5> is connected to nodes <1>, <2>.
Node <4> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <3>, <1>, <5>, <2>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<3>].
Visit node <3>. Neighors of node <3>: [<1>, <4>].
Visit node <1>. Neighors of node <1>: [<0>, <3>, <5>].
Visit node <5>. Neighors of node <5>: [<1>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <5>].
Visit node <0>. Neighors of node <0>: [<1>, <2>].
So the DFS traversal is ","('[[<4>, <3>, <2>, <0>, <1>, <5>], [<4>, <3>, <1>, <5>, <2>, <0>], [<4>, <3>, <1>, <5>, <2>, <0>], [<4>, <1>, <2>, <3>, <0>, <5>]]',)",1,59
DFS,"[(<5>, <0>), (<5>, <3>), (<0>, <2>), (<3>, <4>), (<3>, <2>), (<4>, <1>)]","{<5>: [<0>, <3>],
<0>: [<5>, <2>],
<3>: [<5>, <4>, <2>],
<2>: [<0>, <3>],
<4>: [<3>, <1>],
<1>: [<4>]}","Node <5> is connected to nodes <0>, <3>.
Node <0> is connected to nodes <5>, <2>.
Node <3> is connected to nodes <5>, <4>, <2>.
Node <2> is connected to nodes <0>, <3>.
Node <4> is connected to nodes <3>, <1>.
Node <1> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <2>, <0>, <5>, <4>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<5>, <4>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <3>].
Visit node <0>. Neighors of node <0>: [<5>, <2>].
Visit node <5>. Neighors of node <5>: [<0>, <3>].
Visit node <4>. Neighors of node <4>: [<3>, <1>].
Visit node <1>. Neighors of node <1>: [<4>].
So the DFS traversal is ","('[[<3>, <5>, <2>, <1>, <0>, <4>], [<3>, <2>, <0>, <5>, <1>, <4>], [<3>, <2>, <4>, <1>, <0>, <5>], [<3>, <2>, <0>, <5>, <4>, <1>]]',)",3,60
DFS,"[(<1>, <2>), (<1>, <4>), (<2>, <0>), (<2>, <3>), (<4>, <0>)]","{<1>: [<2>, <4>],
<2>: [<1>, <0>, <3>],
<4>: [<1>, <0>],
<0>: [<2>, <4>],
<3>: [<2>]}","Node <1> is connected to nodes <2>, <4>.
Node <2> is connected to nodes <1>, <0>, <3>.
Node <4> is connected to nodes <1>, <0>.
Node <0> is connected to nodes <2>, <4>.
Node <3> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <0>, <2>, <3>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<1>, <0>].
Visit node <0>. Neighors of node <0>: [<2>, <4>].
Visit node <2>. Neighors of node <2>: [<1>, <0>, <3>].
Visit node <3>. Neighors of node <3>: [<2>].
Visit node <1>. Neighors of node <1>: [<2>, <4>].
So the DFS traversal is ","('[[<4>, <0>, <2>, <3>, <1>], [<4>, <0>, <2>, <3>, <1>], [<4>, <1>, <0>, <2>, <3>], [<4>, <1>, <0>, <2>, <3>]]',)",1,61
DFS,"[(<1>, <3>), (<1>, <2>), (<3>, <4>), (<3>, <1>), (<2>, <4>), (<2>, <0>), (<2>, <3>), (<4>, <1>), (<4>, <3>), (<0>, <1>), (<0>, <2>)]","{<1>: [<3>, <2>],
<3>: [<4>, <1>],
<2>: [<4>, <0>, <3>],
<4>: [<1>, <3>],
<0>: [<1>, <2>]}","Node <1> is connected to nodes <3>, <2>.
Node <3> is connected to nodes <4>, <1>.
Node <2> is connected to nodes <4>, <0>, <3>.
Node <4> is connected to nodes <1>, <3>.
Node <0> is connected to nodes <1>, <2>.","[<0>, <1>, <2>, <3>, <4>]",5,11,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <2>, <3>, <4>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<4>, <0>, <3>].
Visit node <3>. Neighors of node <3>: [<4>, <1>].
Visit node <4>. Neighors of node <4>: [<1>, <3>].
Visit node <0>. Neighors of node <0>: [<1>, <2>].
So the DFS traversal is ","('[[<1>, <2>, <4>, <3>, <0>], [<1>, <0>, <2>, <3>, <4>], [<1>, <2>, <3>, <4>, <0>], [<1>, <2>, <0>, <3>, <4>]]',)",2,62
DFS,"[(<4>, <3>), (<3>, <2>), (<3>, <1>), (<3>, <0>)]","{<4>: [<3>],
<3>: [<4>, <2>, <1>, <0>],
<2>: [<3>],
<1>: [<3>],
<0>: [<3>]}","Node <4> is connected to node <3>.
Node <3> is connected to nodes <4>, <2>, <1>, <0>.
Node <2> is connected to node <3>.
Node <1> is connected to node <3>.
Node <0> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <3>, <0>, <1>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<3>].
Visit node <3>. Neighors of node <3>: [<4>, <2>, <1>, <0>].
Visit node <0>. Neighors of node <0>: [<3>].
Visit node <1>. Neighors of node <1>: [<3>].
Visit node <4>. Neighors of node <4>: [<3>].
So the DFS traversal is ","('[[<2>, <0>, <1>, <3>, <4>], [<2>, <3>, <0>, <1>, <4>], [<2>, <3>, <4>, <0>, <1>], [<2>, <4>, <3>, <0>, <1>]]',)",1,63
DFS,"[(<5>, <2>), (<5>, <6>), (<5>, <0>), (<2>, <3>), (<2>, <6>), (<2>, <1>), (<6>, <3>), (<6>, <4>), (<6>, <0>), (<0>, <3>), (<0>, <4>), (<3>, <1>), (<3>, <4>), (<1>, <4>)]","{<5>: [<2>, <6>, <0>],
<2>: [<5>, <3>, <6>, <1>],
<6>: [<5>, <2>, <3>, <4>, <0>],
<0>: [<5>, <3>, <6>, <4>],
<3>: [<2>, <6>, <1>, <4>, <0>],
<1>: [<2>, <3>, <4>],
<4>: [<3>, <6>, <1>, <0>]}","Node <5> is connected to nodes <2>, <6>, <0>.
Node <2> is connected to nodes <5>, <3>, <6>, <1>.
Node <6> is connected to nodes <5>, <2>, <3>, <4>, <0>.
Node <0> is connected to nodes <5>, <3>, <6>, <4>.
Node <3> is connected to nodes <2>, <6>, <1>, <4>, <0>.
Node <1> is connected to nodes <2>, <3>, <4>.
Node <4> is connected to nodes <3>, <6>, <1>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,14,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <4>, <0>, <6>, <3>, <2>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<2>, <3>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <6>, <1>, <0>].
Visit node <0>. Neighors of node <0>: [<5>, <3>, <6>, <4>].
Visit node <6>. Neighors of node <6>: [<5>, <2>, <3>, <4>, <0>].
Visit node <3>. Neighors of node <3>: [<2>, <6>, <1>, <4>, <0>].
Visit node <2>. Neighors of node <2>: [<5>, <3>, <6>, <1>].
Visit node <5>. Neighors of node <5>: [<2>, <6>, <0>].
So the DFS traversal is ","('[[<1>, <4>, <0>, <6>, <5>, <3>, <2>], [<1>, <4>, <2>, <5>, <0>, <6>, <3>], [<1>, <4>, <0>, <6>, <3>, <2>, <5>], [<1>, <4>, <2>, <6>, <3>, <5>, <0>]]',)",2,64
DFS,"[(<2>, <4>), (<2>, <0>), (<4>, <3>), (<4>, <2>), (<0>, <3>), (<3>, <1>), (<3>, <2>), (<3>, <4>), (<3>, <0>), (<1>, <2>), (<1>, <0>), (<1>, <3>)]","{<2>: [<4>, <0>],
<4>: [<3>, <2>],
<0>: [<3>],
<3>: [<1>, <2>, <4>, <0>],
<1>: [<2>, <0>, <3>]}","Node <2> is connected to nodes <4>, <0>.
Node <4> is connected to nodes <3>, <2>.
Node <0> is connected to node <3>.
Node <3> is connected to nodes <1>, <2>, <4>, <0>.
Node <1> is connected to nodes <2>, <0>, <3>.","[<0>, <1>, <2>, <3>, <4>]",5,12,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <3>, <0>, <4>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<2>, <0>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <2>, <4>, <0>].
Visit node <0>. Neighors of node <0>: [<3>].
Visit node <4>. Neighors of node <4>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<4>, <0>].
So the DFS traversal is ","('[[<1>, <3>, <4>, <0>, <2>], [<1>, <2>, <3>, <0>, <4>], [<1>, <2>, <4>, <3>, <0>], [<1>, <3>, <0>, <4>, <2>]]',)",3,65
DFS,"[(<3>, <1>), (<3>, <2>), (<3>, <0>), (<0>, <4>)]","{<3>: [<1>, <2>, <0>],
<1>: [<3>],
<2>: [<3>],
<0>: [<3>, <4>],
<4>: [<0>]}","Node <3> is connected to nodes <1>, <2>, <0>.
Node <1> is connected to node <3>.
Node <2> is connected to node <3>.
Node <0> is connected to nodes <3>, <4>.
Node <4> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <0>, <4>, <2>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<1>, <2>, <0>].
Visit node <0>. Neighors of node <0>: [<3>, <4>].
Visit node <4>. Neighors of node <4>: [<0>].
Visit node <2>. Neighors of node <2>: [<3>].
Visit node <1>. Neighors of node <1>: [<3>].
So the DFS traversal is ","('[[<3>, <1>, <0>, <4>, <2>], [<3>, <4>, <0>, <2>, <1>], [<3>, <0>, <4>, <2>, <1>], [<3>, <0>, <1>, <2>, <4>]]',)",2,66
DFS,"[(<5>, <1>), (<5>, <2>), (<5>, <4>), (<1>, <2>), (<1>, <3>), (<2>, <0>)]","{<5>: [<1>, <2>, <4>],
<1>: [<5>, <2>, <3>],
<2>: [<5>, <1>, <0>],
<4>: [<5>],
<3>: [<1>],
<0>: [<2>]}","Node <5> is connected to nodes <1>, <2>, <4>.
Node <1> is connected to nodes <5>, <2>, <3>.
Node <2> is connected to nodes <5>, <1>, <0>.
Node <4> is connected to node <5>.
Node <3> is connected to node <1>.
Node <0> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <2>, <1>, <3>, <5>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <2>. Neighors of node <2>: [<5>, <1>, <0>].
Visit node <1>. Neighors of node <1>: [<5>, <2>, <3>].
Visit node <3>. Neighors of node <3>: [<1>].
Visit node <5>. Neighors of node <5>: [<1>, <2>, <4>].
Visit node <4>. Neighors of node <4>: [<5>].
So the DFS traversal is ","('[[<0>, <2>, <5>, <4>, <1>, <3>], [<0>, <2>, <1>, <3>, <5>, <4>], [<0>, <2>, <1>, <3>, <4>, <5>], [<0>, <2>, <5>, <1>, <4>, <3>]]',)",1,67
DFS,"[(<3>, <2>), (<3>, <4>), (<3>, <0>), (<4>, <1>)]","{<3>: [<2>, <4>, <0>],
<2>: [<3>],
<4>: [<3>, <1>],
<0>: [<3>],
<1>: [<4>]}","Node <3> is connected to nodes <2>, <4>, <0>.
Node <2> is connected to node <3>.
Node <4> is connected to nodes <3>, <1>.
Node <0> is connected to node <3>.
Node <1> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <3>, <0>, <4>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<3>].
Visit node <3>. Neighors of node <3>: [<2>, <4>, <0>].
Visit node <0>. Neighors of node <0>: [<3>].
Visit node <4>. Neighors of node <4>: [<3>, <1>].
Visit node <1>. Neighors of node <1>: [<4>].
So the DFS traversal is ","('[[<2>, <3>, <4>, <0>, <1>], [<2>, <1>, <3>, <0>, <4>], [<2>, <3>, <1>, <0>, <4>], [<2>, <3>, <0>, <4>, <1>]]',)",3,68
DFS,"[(<3>, <4>), (<3>, <0>), (<4>, <2>), (<4>, <1>), (<4>, <3>), (<0>, <1>), (<2>, <1>), (<2>, <0>), (<1>, <4>)]","{<3>: [<4>, <0>],
<4>: [<2>, <1>, <3>],
<0>: [<1>],
<2>: [<1>, <0>],
<1>: [<4>]}","Node <3> is connected to nodes <4>, <0>.
Node <4> is connected to nodes <2>, <1>, <3>.
Node <0> is connected to node <1>.
Node <2> is connected to nodes <1>, <0>.
Node <1> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>]",5,9,True,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <0>, <1>, <4>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<4>, <0>].
Visit node <0>. Neighors of node <0>: [<1>].
Visit node <1>. Neighors of node <1>: [<4>].
Visit node <4>. Neighors of node <4>: [<2>, <1>, <3>].
Visit node <2>. Neighors of node <2>: [<1>, <0>].
So the DFS traversal is ","('[[<3>, <0>, <1>, <4>, <2>], [<3>, <2>, <0>, <1>, <4>], [<3>, <4>, <1>, <2>, <0>], [<3>, <0>, <4>, <2>, <1>]]',)",0,69
DFS,"[(<2>, <3>), (<2>, <1>), (<2>, <6>), (<2>, <5>), (<3>, <5>), (<3>, <4>), (<1>, <6>), (<6>, <0>), (<5>, <4>), (<4>, <0>)]","{<2>: [<3>, <1>, <6>, <5>],
<3>: [<2>, <5>, <4>],
<1>: [<2>, <6>],
<6>: [<2>, <1>, <0>],
<5>: [<2>, <3>, <4>],
<4>: [<3>, <5>, <0>],
<0>: [<4>, <6>]}","Node <2> is connected to nodes <3>, <1>, <6>, <5>.
Node <3> is connected to nodes <2>, <5>, <4>.
Node <1> is connected to nodes <2>, <6>.
Node <6> is connected to nodes <2>, <1>, <0>.
Node <5> is connected to nodes <2>, <3>, <4>.
Node <4> is connected to nodes <3>, <5>, <0>.
Node <0> is connected to nodes <4>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <6>, <1>, <2>, <5>, <4>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<4>, <6>].
Visit node <6>. Neighors of node <6>: [<2>, <1>, <0>].
Visit node <1>. Neighors of node <1>: [<2>, <6>].
Visit node <2>. Neighors of node <2>: [<3>, <1>, <6>, <5>].
Visit node <5>. Neighors of node <5>: [<2>, <3>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <5>, <0>].
Visit node <3>. Neighors of node <3>: [<2>, <5>, <4>].
So the DFS traversal is ","('[[<0>, <6>, <1>, <2>, <5>, <4>, <3>], [<0>, <6>, <4>, <3>, <1>, <2>, <5>], [<0>, <6>, <1>, <2>, <4>, <3>, <5>], [<0>, <4>, <3>, <2>, <5>, <6>, <1>]]',)",0,70
DFS,"[(<2>, <3>), (<2>, <1>), (<2>, <0>), (<2>, <4>)]","{<2>: [<3>, <1>, <0>, <4>],
<3>: [<2>],
<1>: [<2>],
<0>: [<2>],
<4>: [<2>]}","Node <2> is connected to nodes <3>, <1>, <0>, <4>.
Node <3> is connected to node <2>.
Node <1> is connected to node <2>.
Node <0> is connected to node <2>.
Node <4> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <4>, <0>, <1>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<3>, <1>, <0>, <4>].
Visit node <4>. Neighors of node <4>: [<2>].
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <1>. Neighors of node <1>: [<2>].
Visit node <3>. Neighors of node <3>: [<2>].
So the DFS traversal is ","('[[<2>, <4>, <1>, <3>, <0>], [<2>, <3>, <4>, <0>, <1>], [<2>, <4>, <0>, <1>, <3>], [<2>, <4>, <0>, <1>, <3>]]',)",2,71
DFS,"[(<1>, <0>), (<1>, <5>), (<1>, <4>), (<0>, <5>), (<0>, <4>), (<0>, <1>), (<5>, <4>), (<5>, <1>), (<5>, <0>), (<4>, <1>), (<4>, <0>), (<4>, <3>), (<3>, <4>), (<3>, <1>), (<3>, <0>), (<2>, <0>)]","{<1>: [<0>, <5>, <4>],
<0>: [<5>, <4>, <1>],
<5>: [<4>, <1>, <0>],
<4>: [<1>, <0>, <3>],
<3>: [<4>, <1>, <0>],
<2>: [<0>]}","Node <1> is connected to nodes <0>, <5>, <4>.
Node <0> is connected to nodes <5>, <4>, <1>.
Node <5> is connected to nodes <4>, <1>, <0>.
Node <4> is connected to nodes <1>, <0>, <3>.
Node <3> is connected to nodes <4>, <1>, <0>.
Node <2> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,16,True,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <3>, <0>, <1>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<1>, <0>, <3>].
Visit node <3>. Neighors of node <3>: [<4>, <1>, <0>].
Visit node <0>. Neighors of node <0>: [<5>, <4>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <5>, <4>].
Visit node <5>. Neighors of node <5>: [<4>, <1>, <0>].
So the DFS traversal is ","('[[<4>, <3>, <0>, <5>, <1>], [<4>, <5>, <3>, <0>, <1>], [<4>, <3>, <0>, <1>, <5>], [<4>, <0>, <5>, <3>, <1>]]',)",2,72
DFS,"[(<5>, <3>), (<5>, <1>), (<5>, <2>), (<5>, <0>), (<0>, <4>), (<4>, <6>)]","{<5>: [<3>, <1>, <2>, <0>],
<3>: [<5>],
<1>: [<5>],
<2>: [<5>],
<0>: [<5>, <4>],
<4>: [<6>, <0>],
<6>: [<4>]}","Node <5> is connected to nodes <3>, <1>, <2>, <0>.
Node <3> is connected to node <5>.
Node <1> is connected to node <5>.
Node <2> is connected to node <5>.
Node <0> is connected to nodes <5>, <4>.
Node <4> is connected to nodes <6>, <0>.
Node <6> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <4>, <6>, <5>, <2>, <1>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<5>, <4>].
Visit node <4>. Neighors of node <4>: [<6>, <0>].
Visit node <6>. Neighors of node <6>: [<4>].
Visit node <5>. Neighors of node <5>: [<3>, <1>, <2>, <0>].
Visit node <2>. Neighors of node <2>: [<5>].
Visit node <1>. Neighors of node <1>: [<5>].
Visit node <3>. Neighors of node <3>: [<5>].
So the DFS traversal is ","('[[<0>, <4>, <6>, <5>, <3>, <1>, <2>], [<0>, <3>, <4>, <5>, <1>, <6>, <2>], [<0>, <4>, <6>, <5>, <2>, <1>, <3>], [<0>, <4>, <1>, <3>, <6>, <5>, <2>]]',)",2,73
DFS,"[(<2>, <3>), (<2>, <4>), (<2>, <0>), (<3>, <4>), (<3>, <0>), (<4>, <0>), (<4>, <2>), (<4>, <3>), (<0>, <2>), (<0>, <1>), (<1>, <4>), (<1>, <0>)]","{<2>: [<3>, <4>, <0>],
<3>: [<4>, <0>],
<4>: [<0>, <2>, <3>],
<0>: [<2>, <1>],
<1>: [<4>, <0>]}","Node <2> is connected to nodes <3>, <4>, <0>.
Node <3> is connected to nodes <4>, <0>.
Node <4> is connected to nodes <0>, <2>, <3>.
Node <0> is connected to nodes <2>, <1>.
Node <1> is connected to nodes <4>, <0>.","[<0>, <1>, <2>, <3>, <4>]",5,12,True,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <4>, <3>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <0>].
Visit node <4>. Neighors of node <4>: [<0>, <2>, <3>].
Visit node <3>. Neighors of node <3>: [<4>, <0>].
Visit node <2>. Neighors of node <2>: [<3>, <4>, <0>].
So the DFS traversal is ","('[[<0>, <4>, <1>, <3>, <2>], [<0>, <1>, <2>, <4>, <3>], [<0>, <1>, <4>, <3>, <2>], [<0>, <2>, <1>, <4>, <3>]]',)",2,74
DFS,"[(<0>, <5>), (<0>, <3>), (<0>, <1>), (<5>, <2>), (<5>, <3>), (<5>, <4>), (<3>, <2>), (<3>, <4>), (<3>, <1>), (<1>, <2>), (<1>, <4>), (<2>, <4>)]","{<0>: [<5>, <3>, <1>],
<5>: [<0>, <2>, <3>, <4>],
<3>: [<0>, <2>, <5>, <4>, <1>],
<1>: [<0>, <2>, <3>, <4>],
<2>: [<5>, <3>, <4>, <1>],
<4>: [<2>, <5>, <3>, <1>]}","Node <0> is connected to nodes <5>, <3>, <1>.
Node <5> is connected to nodes <0>, <2>, <3>, <4>.
Node <3> is connected to nodes <0>, <2>, <5>, <4>, <1>.
Node <1> is connected to nodes <0>, <2>, <3>, <4>.
Node <2> is connected to nodes <5>, <3>, <4>, <1>.
Node <4> is connected to nodes <2>, <5>, <3>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,12,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <1>, <4>, <5>, <2>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<0>, <2>, <5>, <4>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <2>, <3>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <5>, <3>, <1>].
Visit node <5>. Neighors of node <5>: [<0>, <2>, <3>, <4>].
Visit node <2>. Neighors of node <2>: [<5>, <3>, <4>, <1>].
Visit node <0>. Neighors of node <0>: [<5>, <3>, <1>].
So the DFS traversal is ","('[[<3>, <1>, <4>, <5>, <2>, <0>], [<3>, <5>, <1>, <2>, <0>, <4>], [<3>, <1>, <4>, <2>, <0>, <5>], [<3>, <1>, <2>, <0>, <4>, <5>]]',)",0,75
DFS,"[(<6>, <3>), (<6>, <2>), (<6>, <0>), (<6>, <5>), (<3>, <0>), (<3>, <1>), (<2>, <4>), (<0>, <5>), (<0>, <3>), (<5>, <4>), (<5>, <6>), (<5>, <3>), (<5>, <2>), (<5>, <0>), (<1>, <3>), (<1>, <2>), (<1>, <5>), (<1>, <4>), (<4>, <2>), (<4>, <5>)]","{<6>: [<3>, <2>, <0>, <5>],
<3>: [<0>, <1>],
<2>: [<4>],
<0>: [<5>, <3>],
<5>: [<4>, <6>, <3>, <2>, <0>],
<1>: [<3>, <2>, <5>, <4>],
<4>: [<2>, <5>]}","Node <6> is connected to nodes <3>, <2>, <0>, <5>.
Node <3> is connected to nodes <0>, <1>.
Node <2> is connected to node <4>.
Node <0> is connected to nodes <5>, <3>.
Node <5> is connected to nodes <4>, <6>, <3>, <2>, <0>.
Node <1> is connected to nodes <3>, <2>, <5>, <4>.
Node <4> is connected to nodes <2>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,20,True,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <3>, <1>, <4>, <5>, <2>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<5>, <3>].
Visit node <3>. Neighors of node <3>: [<0>, <1>].
Visit node <1>. Neighors of node <1>: [<3>, <2>, <5>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <5>].
Visit node <5>. Neighors of node <5>: [<4>, <6>, <3>, <2>, <0>].
Visit node <2>. Neighors of node <2>: [<4>].
Visit node <6>. Neighors of node <6>: [<3>, <2>, <0>, <5>].
So the DFS traversal is ","('[[<0>, <3>, <2>, <6>, <1>, <4>, <5>], [<0>, <3>, <1>, <4>, <5>, <2>, <6>], [<0>, <6>, <1>, <4>, <2>, <5>, <3>], [<0>, <3>, <1>, <4>, <6>, <2>, <5>]]',)",1,76
DFS,"[(<1>, <5>), (<1>, <3>), (<1>, <4>), (<5>, <2>), (<5>, <3>), (<5>, <0>), (<5>, <4>), (<3>, <2>), (<3>, <0>), (<3>, <4>), (<4>, <2>), (<4>, <0>), (<2>, <0>)]","{<1>: [<5>, <3>, <4>],
<5>: [<1>, <2>, <3>, <0>, <4>],
<3>: [<1>, <5>, <2>, <0>, <4>],
<4>: [<1>, <5>, <2>, <3>, <0>],
<2>: [<5>, <3>, <0>, <4>],
<0>: [<5>, <2>, <3>, <4>]}","Node <1> is connected to nodes <5>, <3>, <4>.
Node <5> is connected to nodes <1>, <2>, <3>, <0>, <4>.
Node <3> is connected to nodes <1>, <5>, <2>, <0>, <4>.
Node <4> is connected to nodes <1>, <5>, <2>, <3>, <0>.
Node <2> is connected to nodes <5>, <3>, <0>, <4>.
Node <0> is connected to nodes <5>, <2>, <3>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,13,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <4>, <0>, <3>, <5>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<5>, <3>, <0>, <4>].
Visit node <4>. Neighors of node <4>: [<1>, <5>, <2>, <3>, <0>].
Visit node <0>. Neighors of node <0>: [<5>, <2>, <3>, <4>].
Visit node <3>. Neighors of node <3>: [<1>, <5>, <2>, <0>, <4>].
Visit node <5>. Neighors of node <5>: [<1>, <2>, <3>, <0>, <4>].
Visit node <1>. Neighors of node <1>: [<5>, <3>, <4>].
So the DFS traversal is ","('[[<2>, <4>, <0>, <3>, <1>, <5>], [<2>, <4>, <0>, <1>, <5>, <3>], [<2>, <4>, <0>, <3>, <5>, <1>], [<2>, <4>, <5>, <1>, <0>, <3>]]',)",2,77
DFS,"[(<5>, <0>), (<5>, <4>), (<0>, <3>), (<4>, <3>), (<4>, <1>), (<1>, <2>)]","{<5>: [<0>, <4>],
<0>: [<5>, <3>],
<4>: [<5>, <3>, <1>],
<3>: [<0>, <4>],
<1>: [<4>, <2>],
<2>: [<1>]}","Node <5> is connected to nodes <0>, <4>.
Node <0> is connected to nodes <5>, <3>.
Node <4> is connected to nodes <5>, <3>, <1>.
Node <3> is connected to nodes <0>, <4>.
Node <1> is connected to nodes <4>, <2>.
Node <2> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <4>, <1>, <2>, <3>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<0>, <4>].
Visit node <4>. Neighors of node <4>: [<5>, <3>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <2>].
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <3>. Neighors of node <3>: [<0>, <4>].
Visit node <0>. Neighors of node <0>: [<5>, <3>].
So the DFS traversal is ","('[[<5>, <4>, <1>, <3>, <0>, <2>], [<5>, <4>, <1>, <2>, <3>, <0>], [<5>, <0>, <1>, <3>, <4>, <2>], [<5>, <4>, <3>, <0>, <1>, <2>]]',)",1,78
DFS,"[(<1>, <4>), (<4>, <5>), (<4>, <0>), (<4>, <2>), (<0>, <3>)]","{<1>: [<4>],
<4>: [<1>, <5>, <0>, <2>],
<5>: [<4>],
<0>: [<4>, <3>],
<2>: [<4>],
<3>: [<0>]}","Node <1> is connected to node <4>.
Node <4> is connected to nodes <1>, <5>, <0>, <2>.
Node <5> is connected to node <4>.
Node <0> is connected to nodes <4>, <3>.
Node <2> is connected to node <4>.
Node <3> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <0>, <4>, <2>, <5>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<0>].
Visit node <0>. Neighors of node <0>: [<4>, <3>].
Visit node <4>. Neighors of node <4>: [<1>, <5>, <0>, <2>].
Visit node <2>. Neighors of node <2>: [<4>].
Visit node <5>. Neighors of node <5>: [<4>].
Visit node <1>. Neighors of node <1>: [<4>].
So the DFS traversal is ","('[[<3>, <0>, <4>, <2>, <5>, <1>], [<3>, <5>, <1>, <0>, <2>, <4>], [<3>, <0>, <4>, <2>, <1>, <5>], [<3>, <0>, <5>, <1>, <4>, <2>]]',)",0,79
DFS,"[(<0>, <6>), (<0>, <4>), (<0>, <5>), (<0>, <1>), (<6>, <4>), (<6>, <1>), (<6>, <3>), (<4>, <2>), (<4>, <5>), (<4>, <1>), (<4>, <3>), (<5>, <2>), (<5>, <1>), (<5>, <3>), (<1>, <2>), (<1>, <3>), (<3>, <2>)]","{<0>: [<6>, <4>, <5>, <1>],
<6>: [<0>, <4>, <1>, <3>],
<4>: [<0>, <6>, <2>, <5>, <1>, <3>],
<5>: [<0>, <4>, <2>, <1>, <3>],
<1>: [<0>, <6>, <4>, <2>, <5>, <3>],
<3>: [<6>, <4>, <2>, <5>, <1>],
<2>: [<4>, <5>, <1>, <3>]}","Node <0> is connected to nodes <6>, <4>, <5>, <1>.
Node <6> is connected to nodes <0>, <4>, <1>, <3>.
Node <4> is connected to nodes <0>, <6>, <2>, <5>, <1>, <3>.
Node <5> is connected to nodes <0>, <4>, <2>, <1>, <3>.
Node <1> is connected to nodes <0>, <6>, <4>, <2>, <5>, <3>.
Node <3> is connected to nodes <6>, <4>, <2>, <5>, <1>.
Node <2> is connected to nodes <4>, <5>, <1>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,17,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <3>, <5>, <2>, <4>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<6>, <4>, <5>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <6>, <4>, <2>, <5>, <3>].
Visit node <3>. Neighors of node <3>: [<6>, <4>, <2>, <5>, <1>].
Visit node <5>. Neighors of node <5>: [<0>, <4>, <2>, <1>, <3>].
Visit node <2>. Neighors of node <2>: [<4>, <5>, <1>, <3>].
Visit node <4>. Neighors of node <4>: [<0>, <6>, <2>, <5>, <1>, <3>].
Visit node <6>. Neighors of node <6>: [<0>, <4>, <1>, <3>].
So the DFS traversal is ","('[[<0>, <1>, <4>, <6>, <3>, <5>, <2>], [<0>, <1>, <3>, <5>, <2>, <4>, <6>], [<0>, <4>, <1>, <6>, <2>, <5>, <3>], [<0>, <1>, <3>, <4>, <2>, <5>, <6>]]',)",1,80
DFS,"[(<2>, <0>), (<2>, <1>), (<2>, <4>), (<2>, <3>)]","{<2>: [<0>, <1>, <4>, <3>],
<0>: [<2>],
<1>: [<2>],
<4>: [<2>],
<3>: [<2>]}","Node <2> is connected to nodes <0>, <1>, <4>, <3>.
Node <0> is connected to node <2>.
Node <1> is connected to node <2>.
Node <4> is connected to node <2>.
Node <3> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <2>, <3>, <4>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <2>. Neighors of node <2>: [<0>, <1>, <4>, <3>].
Visit node <3>. Neighors of node <3>: [<2>].
Visit node <4>. Neighors of node <4>: [<2>].
Visit node <1>. Neighors of node <1>: [<2>].
So the DFS traversal is ","('[[<0>, <2>, <3>, <4>, <1>], [<0>, <2>, <1>, <3>, <4>], [<0>, <1>, <2>, <3>, <4>], [<0>, <4>, <2>, <1>, <3>]]',)",0,81
DFS,"[(<2>, <1>), (<2>, <3>), (<2>, <0>), (<2>, <4>)]","{<2>: [<1>, <3>, <0>, <4>],
<1>: [<2>],
<3>: [<2>],
<0>: [<2>],
<4>: [<2>]}","Node <2> is connected to nodes <1>, <3>, <0>, <4>.
Node <1> is connected to node <2>.
Node <3> is connected to node <2>.
Node <0> is connected to node <2>.
Node <4> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <2>, <4>, <0>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<2>].
Visit node <2>. Neighors of node <2>: [<1>, <3>, <0>, <4>].
Visit node <4>. Neighors of node <4>: [<2>].
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <1>. Neighors of node <1>: [<2>].
So the DFS traversal is ","('[[<3>, <2>, <1>, <4>, <0>], [<3>, <2>, <4>, <0>, <1>], [<3>, <2>, <4>, <0>, <1>], [<3>, <1>, <2>, <4>, <0>]]',)",1,82
DFS,"[(<4>, <3>), (<4>, <0>), (<4>, <2>), (<3>, <2>), (<0>, <1>)]","{<4>: [<3>, <0>, <2>],
<3>: [<4>, <2>],
<0>: [<4>, <1>],
<2>: [<4>, <3>],
<1>: [<0>]}","Node <4> is connected to nodes <3>, <0>, <2>.
Node <3> is connected to nodes <4>, <2>.
Node <0> is connected to nodes <4>, <1>.
Node <2> is connected to nodes <4>, <3>.
Node <1> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <3>, <4>, <0>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<4>, <3>].
Visit node <3>. Neighors of node <3>: [<4>, <2>].
Visit node <4>. Neighors of node <4>: [<3>, <0>, <2>].
Visit node <0>. Neighors of node <0>: [<4>, <1>].
Visit node <1>. Neighors of node <1>: [<0>].
So the DFS traversal is ","('[[<2>, <3>, <4>, <0>, <1>], [<2>, <3>, <4>, <0>, <1>], [<2>, <1>, <3>, <4>, <0>], [<2>, <3>, <0>, <1>, <4>]]',)",0,83
DFS,"[(<0>, <2>), (<0>, <4>), (<4>, <3>), (<3>, <1>)]","{<0>: [<2>, <4>],
<2>: [<0>],
<4>: [<0>, <3>],
<3>: [<4>, <1>],
<1>: [<3>]}","Node <0> is connected to nodes <2>, <4>.
Node <2> is connected to node <0>.
Node <4> is connected to nodes <0>, <3>.
Node <3> is connected to nodes <4>, <1>.
Node <1> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <1>, <4>, <0>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<4>, <1>].
Visit node <1>. Neighors of node <1>: [<3>].
Visit node <4>. Neighors of node <4>: [<0>, <3>].
Visit node <0>. Neighors of node <0>: [<2>, <4>].
Visit node <2>. Neighors of node <2>: [<0>].
So the DFS traversal is ","('[[<3>, <1>, <4>, <0>, <2>], [<3>, <1>, <4>, <0>, <2>], [<3>, <2>, <1>, <4>, <0>], [<3>, <1>, <4>, <2>, <0>]]',)",0,84
DFS,"[(<0>, <2>), (<0>, <4>), (<2>, <0>), (<2>, <1>), (<4>, <3>), (<1>, <3>), (<1>, <0>), (<3>, <1>)]","{<0>: [<2>, <4>],
<2>: [<0>, <1>],
<4>: [<3>],
<1>: [<3>, <0>],
<3>: [<1>]}","Node <0> is connected to nodes <2>, <4>.
Node <2> is connected to nodes <0>, <1>.
Node <4> is connected to node <3>.
Node <1> is connected to nodes <3>, <0>.
Node <3> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>]",5,8,True,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <1>, <0>, <4>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<0>, <1>].
Visit node <1>. Neighors of node <1>: [<3>, <0>].
Visit node <0>. Neighors of node <0>: [<2>, <4>].
Visit node <4>. Neighors of node <4>: [<3>].
Visit node <3>. Neighors of node <3>: [<1>].
So the DFS traversal is ","('[[<2>, <1>, <0>, <3>, <4>], [<2>, <4>, <1>, <0>, <3>], [<2>, <3>, <1>, <0>, <4>], [<2>, <1>, <0>, <4>, <3>]]',)",3,85
DFS,"[(<2>, <5>), (<2>, <1>), (<2>, <3>), (<2>, <4>), (<5>, <0>), (<5>, <3>), (<5>, <4>), (<5>, <2>), (<1>, <6>), (<3>, <2>), (<3>, <6>), (<4>, <2>), (<4>, <5>), (<4>, <6>), (<4>, <0>), (<0>, <3>), (<0>, <2>), (<0>, <5>), (<6>, <4>), (<6>, <5>), (<6>, <1>)]","{<2>: [<5>, <1>, <3>, <4>],
<5>: [<0>, <3>, <4>, <2>],
<1>: [<6>],
<3>: [<2>, <6>],
<4>: [<2>, <5>, <6>, <0>],
<0>: [<3>, <2>, <5>],
<6>: [<4>, <5>, <1>]}","Node <2> is connected to nodes <5>, <1>, <3>, <4>.
Node <5> is connected to nodes <0>, <3>, <4>, <2>.
Node <1> is connected to node <6>.
Node <3> is connected to nodes <2>, <6>.
Node <4> is connected to nodes <2>, <5>, <6>, <0>.
Node <0> is connected to nodes <3>, <2>, <5>.
Node <6> is connected to nodes <4>, <5>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,21,True,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <0>, <5>, <2>, <3>, <6>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<2>, <5>, <6>, <0>].
Visit node <0>. Neighors of node <0>: [<3>, <2>, <5>].
Visit node <5>. Neighors of node <5>: [<0>, <3>, <4>, <2>].
Visit node <2>. Neighors of node <2>: [<5>, <1>, <3>, <4>].
Visit node <3>. Neighors of node <3>: [<2>, <6>].
Visit node <6>. Neighors of node <6>: [<4>, <5>, <1>].
Visit node <1>. Neighors of node <1>: [<6>].
So the DFS traversal is ","('[[<4>, <5>, <0>, <2>, <6>, <3>, <1>], [<4>, <0>, <5>, <2>, <3>, <6>, <1>], [<4>, <0>, <5>, <2>, <3>, <6>, <1>], [<4>, <0>, <6>, <1>, <5>, <2>, <3>]]',)",1,86
DFS,"[(<2>, <1>), (<2>, <3>), (<2>, <5>), (<1>, <3>), (<1>, <4>), (<1>, <5>), (<1>, <0>), (<3>, <4>), (<3>, <5>), (<3>, <0>), (<5>, <4>), (<5>, <0>), (<4>, <0>)]","{<2>: [<1>, <3>, <5>],
<1>: [<2>, <3>, <4>, <5>, <0>],
<3>: [<2>, <1>, <4>, <5>, <0>],
<5>: [<2>, <1>, <3>, <4>, <0>],
<4>: [<1>, <3>, <5>, <0>],
<0>: [<1>, <3>, <4>, <5>]}","Node <2> is connected to nodes <1>, <3>, <5>.
Node <1> is connected to nodes <2>, <3>, <4>, <5>, <0>.
Node <3> is connected to nodes <2>, <1>, <4>, <5>, <0>.
Node <5> is connected to nodes <2>, <1>, <3>, <4>, <0>.
Node <4> is connected to nodes <1>, <3>, <5>, <0>.
Node <0> is connected to nodes <1>, <3>, <4>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,13,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <5>, <4>, <3>, <1>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<1>, <3>, <4>, <5>].
Visit node <5>. Neighors of node <5>: [<2>, <1>, <3>, <4>, <0>].
Visit node <4>. Neighors of node <4>: [<1>, <3>, <5>, <0>].
Visit node <3>. Neighors of node <3>: [<2>, <1>, <4>, <5>, <0>].
Visit node <1>. Neighors of node <1>: [<2>, <3>, <4>, <5>, <0>].
Visit node <2>. Neighors of node <2>: [<1>, <3>, <5>].
So the DFS traversal is ","('[[<0>, <2>, <3>, <5>, <4>, <1>], [<0>, <5>, <1>, <2>, <4>, <3>], [<0>, <5>, <4>, <2>, <3>, <1>], [<0>, <5>, <4>, <3>, <1>, <2>]]',)",3,87
DFS,"[(<2>, <1>), (<2>, <5>), (<2>, <3>), (<2>, <4>), (<5>, <0>)]","{<2>: [<1>, <5>, <3>, <4>],
<1>: [<2>],
<5>: [<2>, <0>],
<3>: [<2>],
<4>: [<2>],
<0>: [<5>]}","Node <2> is connected to nodes <1>, <5>, <3>, <4>.
Node <1> is connected to node <2>.
Node <5> is connected to nodes <2>, <0>.
Node <3> is connected to node <2>.
Node <4> is connected to node <2>.
Node <0> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <0>, <2>, <4>, <3>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<2>, <0>].
Visit node <0>. Neighors of node <0>: [<5>].
Visit node <2>. Neighors of node <2>: [<1>, <5>, <3>, <4>].
Visit node <4>. Neighors of node <4>: [<2>].
Visit node <3>. Neighors of node <3>: [<2>].
Visit node <1>. Neighors of node <1>: [<2>].
So the DFS traversal is ","('[[<5>, <0>, <3>, <1>, <2>, <4>], [<5>, <0>, <2>, <1>, <4>, <3>], [<5>, <0>, <2>, <4>, <3>, <1>], [<5>, <1>, <4>, <0>, <3>, <2>]]',)",2,88
DFS,"[(<5>, <0>), (<5>, <2>), (<0>, <1>), (<0>, <5>), (<0>, <3>), (<2>, <5>), (<2>, <3>), (<2>, <0>), (<3>, <0>), (<3>, <4>), (<4>, <5>), (<4>, <1>), (<4>, <2>), (<1>, <4>)]","{<5>: [<0>, <2>],
<0>: [<1>, <5>, <3>],
<2>: [<5>, <3>, <0>],
<3>: [<0>, <4>],
<4>: [<5>, <1>, <2>],
<1>: [<4>]}","Node <5> is connected to nodes <0>, <2>.
Node <0> is connected to nodes <1>, <5>, <3>.
Node <2> is connected to nodes <5>, <3>, <0>.
Node <3> is connected to nodes <0>, <4>.
Node <4> is connected to nodes <5>, <1>, <2>.
Node <1> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,14,True,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <0>, <3>, <4>, <1>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<5>, <3>, <0>].
Visit node <0>. Neighors of node <0>: [<1>, <5>, <3>].
Visit node <3>. Neighors of node <3>: [<0>, <4>].
Visit node <4>. Neighors of node <4>: [<5>, <1>, <2>].
Visit node <1>. Neighors of node <1>: [<4>].
Visit node <5>. Neighors of node <5>: [<0>, <2>].
So the DFS traversal is ","('[[<2>, <0>, <3>, <4>, <1>, <5>], [<2>, <0>, <1>, <5>, <3>, <4>], [<2>, <0>, <5>, <3>, <1>, <4>], [<2>, <0>, <3>, <5>, <4>, <1>]]',)",0,89
DFS,"[(<3>, <2>), (<3>, <1>), (<3>, <4>), (<3>, <0>)]","{<3>: [<2>, <1>, <4>, <0>],
<2>: [<3>],
<1>: [<3>],
<4>: [<3>],
<0>: [<3>]}","Node <3> is connected to nodes <2>, <1>, <4>, <0>.
Node <2> is connected to node <3>.
Node <1> is connected to node <3>.
Node <4> is connected to node <3>.
Node <0> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <3>, <4>, <1>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<3>].
Visit node <3>. Neighors of node <3>: [<2>, <1>, <4>, <0>].
Visit node <4>. Neighors of node <4>: [<3>].
Visit node <1>. Neighors of node <1>: [<3>].
Visit node <2>. Neighors of node <2>: [<3>].
So the DFS traversal is ","('[[<0>, <4>, <1>, <3>, <2>], [<0>, <3>, <4>, <2>, <1>], [<0>, <2>, <3>, <4>, <1>], [<0>, <3>, <4>, <1>, <2>]]',)",3,90
DFS,"[(<1>, <3>), (<1>, <6>), (<1>, <5>), (<1>, <2>), (<3>, <6>), (<3>, <5>), (<6>, <4>), (<5>, <0>), (<2>, <4>), (<2>, <0>)]","{<1>: [<3>, <6>, <5>, <2>],
<3>: [<1>, <6>, <5>],
<6>: [<1>, <3>, <4>],
<5>: [<1>, <3>, <0>],
<2>: [<1>, <4>, <0>],
<4>: [<6>, <2>],
<0>: [<2>, <5>]}","Node <1> is connected to nodes <3>, <6>, <5>, <2>.
Node <3> is connected to nodes <1>, <6>, <5>.
Node <6> is connected to nodes <1>, <3>, <4>.
Node <5> is connected to nodes <1>, <3>, <0>.
Node <2> is connected to nodes <1>, <4>, <0>.
Node <4> is connected to nodes <6>, <2>.
Node <0> is connected to nodes <2>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <2>, <0>, <5>, <3>, <6>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>, <6>, <5>, <2>].
Visit node <2>. Neighors of node <2>: [<1>, <4>, <0>].
Visit node <0>. Neighors of node <0>: [<2>, <5>].
Visit node <5>. Neighors of node <5>: [<1>, <3>, <0>].
Visit node <3>. Neighors of node <3>: [<1>, <6>, <5>].
Visit node <6>. Neighors of node <6>: [<1>, <3>, <4>].
Visit node <4>. Neighors of node <4>: [<6>, <2>].
So the DFS traversal is ","('[[<1>, <2>, <6>, <4>, <0>, <5>, <3>], [<1>, <2>, <0>, <5>, <6>, <3>, <4>], [<1>, <2>, <0>, <5>, <3>, <6>, <4>], [<1>, <2>, <3>, <5>, <6>, <0>, <4>]]',)",2,91
DFS,"[(<1>, <2>), (<1>, <5>), (<2>, <0>), (<2>, <1>), (<5>, <3>), (<5>, <1>), (<5>, <2>), (<4>, <0>), (<0>, <5>)]","{<1>: [<2>, <5>],
<2>: [<0>, <1>],
<5>: [<3>, <1>, <2>],
<4>: [<0>],
<0>: [<5>],
<3>: []}","Node <1> is connected to nodes <2>, <5>.
Node <2> is connected to nodes <0>, <1>.
Node <5> is connected to nodes <3>, <1>, <2>.
Node <4> is connected to node <0>.
Node <0> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,9,True,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <5>, <2>, <1>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<5>].
Visit node <5>. Neighors of node <5>: [<3>, <1>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <1>].
Visit node <1>. Neighors of node <1>: [<2>, <5>].
Visit node <3>. Neighors of node <3>: [].
So the DFS traversal is ","('[[<0>, <5>, <2>, <1>, <3>], [<0>, <3>, <5>, <2>, <1>], [<0>, <2>, <5>, <1>, <3>], [<0>, <5>, <1>, <2>, <3>]]',)",0,92
DFS,"[(<4>, <3>), (<4>, <1>), (<4>, <0>), (<4>, <5>), (<3>, <2>)]","{<4>: [<3>, <1>, <0>, <5>],
<3>: [<4>, <2>],
<1>: [<4>],
<0>: [<4>],
<5>: [<4>],
<2>: [<3>]}","Node <4> is connected to nodes <3>, <1>, <0>, <5>.
Node <3> is connected to nodes <4>, <2>.
Node <1> is connected to node <4>.
Node <0> is connected to node <4>.
Node <5> is connected to node <4>.
Node <2> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <2>, <4>, <5>, <0>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<4>, <2>].
Visit node <2>. Neighors of node <2>: [<3>].
Visit node <4>. Neighors of node <4>: [<3>, <1>, <0>, <5>].
Visit node <5>. Neighors of node <5>: [<4>].
Visit node <0>. Neighors of node <0>: [<4>].
Visit node <1>. Neighors of node <1>: [<4>].
So the DFS traversal is ","('[[<3>, <2>, <4>, <5>, <0>, <1>], [<3>, <2>, <0>, <1>, <4>, <5>], [<3>, <1>, <2>, <0>, <5>, <4>], [<3>, <2>, <4>, <1>, <0>, <5>]]',)",0,93
DFS,"[(<0>, <2>), (<0>, <3>), (<0>, <1>), (<0>, <4>), (<2>, <5>)]","{<0>: [<2>, <3>, <1>, <4>],
<2>: [<0>, <5>],
<3>: [<0>],
<1>: [<0>],
<4>: [<0>],
<5>: [<2>]}","Node <0> is connected to nodes <2>, <3>, <1>, <4>.
Node <2> is connected to nodes <0>, <5>.
Node <3> is connected to node <0>.
Node <1> is connected to node <0>.
Node <4> is connected to node <0>.
Node <5> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <0>, <4>, <3>, <2>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<0>].
Visit node <0>. Neighors of node <0>: [<2>, <3>, <1>, <4>].
Visit node <4>. Neighors of node <4>: [<0>].
Visit node <3>. Neighors of node <3>: [<0>].
Visit node <2>. Neighors of node <2>: [<0>, <5>].
Visit node <5>. Neighors of node <5>: [<2>].
So the DFS traversal is ","('[[<1>, <5>, <3>, <2>, <0>, <4>], [<1>, <0>, <4>, <3>, <2>, <5>], [<1>, <0>, <2>, <5>, <4>, <3>], [<1>, <0>, <4>, <3>, <2>, <5>]]',)",3,94
DFS,"[(<2>, <3>), (<2>, <0>), (<2>, <1>), (<3>, <1>), (<3>, <6>), (<3>, <5>), (<5>, <4>)]","{<2>: [<3>, <0>, <1>],
<3>: [<2>, <1>, <6>, <5>],
<0>: [<2>],
<1>: [<2>, <3>],
<6>: [<3>],
<5>: [<3>, <4>],
<4>: [<5>]}","Node <2> is connected to nodes <3>, <0>, <1>.
Node <3> is connected to nodes <2>, <1>, <6>, <5>.
Node <0> is connected to node <2>.
Node <1> is connected to nodes <2>, <3>.
Node <6> is connected to node <3>.
Node <5> is connected to nodes <3>, <4>.
Node <4> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <5>, <3>, <6>, <1>, <2>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<5>].
Visit node <5>. Neighors of node <5>: [<3>, <4>].
Visit node <3>. Neighors of node <3>: [<2>, <1>, <6>, <5>].
Visit node <6>. Neighors of node <6>: [<3>].
Visit node <1>. Neighors of node <1>: [<2>, <3>].
Visit node <2>. Neighors of node <2>: [<3>, <0>, <1>].
Visit node <0>. Neighors of node <0>: [<2>].
So the DFS traversal is ","('[[<4>, <5>, <3>, <1>, <2>, <0>, <6>], [<4>, <2>, <5>, <0>, <6>, <3>, <1>], [<4>, <5>, <3>, <6>, <1>, <2>, <0>], [<4>, <5>, <2>, <0>, <3>, <6>, <1>]]',)",2,95
DFS,"[(<6>, <0>), (<6>, <4>), (<0>, <1>), (<0>, <2>), (<4>, <6>), (<4>, <5>), (<1>, <6>), (<1>, <0>), (<2>, <5>), (<3>, <5>)]","{<6>: [<0>, <4>],
<0>: [<1>, <2>],
<4>: [<6>, <5>],
<1>: [<6>, <0>],
<2>: [<5>],
<5>: [],
<3>: [<5>]}","Node <6> is connected to nodes <0>, <4>.
Node <0> is connected to nodes <1>, <2>.
Node <4> is connected to nodes <6>, <5>.
Node <1> is connected to nodes <6>, <0>.
Node <2> is connected to node <5>.
Node <3> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,True,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <5>, <6>, <0>, <2>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<6>, <5>].
Visit node <5>. Neighors of node <5>: [].
Visit node <6>. Neighors of node <6>: [<0>, <4>].
Visit node <0>. Neighors of node <0>: [<1>, <2>].
Visit node <2>. Neighors of node <2>: [<5>].
Visit node <1>. Neighors of node <1>: [<6>, <0>].
So the DFS traversal is ","('[[<4>, <5>, <6>, <0>, <2>, <1>], [<4>, <6>, <2>, <0>, <5>, <1>], [<4>, <5>, <6>, <2>, <0>, <1>], [<4>, <5>, <2>, <1>, <6>, <0>]]',)",0,96
DFS,"[(<0>, <5>), (<0>, <3>), (<0>, <6>), (<5>, <4>), (<3>, <4>), (<3>, <1>), (<3>, <2>), (<6>, <4>), (<6>, <1>), (<6>, <2>)]","{<0>: [<5>, <3>, <6>],
<5>: [<0>, <4>],
<3>: [<0>, <4>, <1>, <2>],
<6>: [<0>, <4>, <1>, <2>],
<4>: [<5>, <6>, <3>],
<1>: [<3>, <6>],
<2>: [<3>, <6>]}","Node <0> is connected to nodes <5>, <3>, <6>.
Node <5> is connected to nodes <0>, <4>.
Node <3> is connected to nodes <0>, <4>, <1>, <2>.
Node <6> is connected to nodes <0>, <4>, <1>, <2>.
Node <4> is connected to nodes <5>, <6>, <3>.
Node <1> is connected to nodes <3>, <6>.
Node <2> is connected to nodes <3>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <6>, <2>, <3>, <1>, <4>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<5>, <3>, <6>].
Visit node <6>. Neighors of node <6>: [<0>, <4>, <1>, <2>].
Visit node <2>. Neighors of node <2>: [<3>, <6>].
Visit node <3>. Neighors of node <3>: [<0>, <4>, <1>, <2>].
Visit node <1>. Neighors of node <1>: [<3>, <6>].
Visit node <4>. Neighors of node <4>: [<5>, <6>, <3>].
Visit node <5>. Neighors of node <5>: [<0>, <4>].
So the DFS traversal is ","('[[<0>, <3>, <2>, <1>, <4>, <5>, <6>], [<0>, <6>, <4>, <5>, <2>, <3>, <1>], [<0>, <6>, <2>, <3>, <1>, <4>, <5>], [<0>, <6>, <2>, <4>, <3>, <1>, <5>]]',)",2,97
DFS,"[(<1>, <0>), (<1>, <2>), (<0>, <3>), (<2>, <3>), (<2>, <4>)]","{<1>: [<0>, <2>],
<0>: [<1>, <3>],
<2>: [<1>, <3>, <4>],
<3>: [<0>, <2>],
<4>: [<2>]}","Node <1> is connected to nodes <0>, <2>.
Node <0> is connected to nodes <1>, <3>.
Node <2> is connected to nodes <1>, <3>, <4>.
Node <3> is connected to nodes <0>, <2>.
Node <4> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <4>, <3>, <0>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<1>, <3>, <4>].
Visit node <4>. Neighors of node <4>: [<2>].
Visit node <3>. Neighors of node <3>: [<0>, <2>].
Visit node <0>. Neighors of node <0>: [<1>, <3>].
Visit node <1>. Neighors of node <1>: [<0>, <2>].
So the DFS traversal is ","('[[<2>, <4>, <3>, <0>, <1>], [<2>, <3>, <4>, <1>, <0>], [<2>, <1>, <4>, <3>, <0>], [<2>, <4>, <3>, <1>, <0>]]',)",0,98
DFS,"[(<0>, <2>), (<0>, <3>), (<2>, <3>), (<3>, <4>), (<4>, <1>)]","{<0>: [<2>, <3>],
<2>: [<0>, <3>],
<3>: [<0>, <2>, <4>],
<4>: [<3>, <1>],
<1>: [<4>]}","Node <0> is connected to nodes <2>, <3>.
Node <2> is connected to nodes <0>, <3>.
Node <3> is connected to nodes <0>, <2>, <4>.
Node <4> is connected to nodes <3>, <1>.
Node <1> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <1>, <3>, <2>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<3>, <1>].
Visit node <1>. Neighors of node <1>: [<4>].
Visit node <3>. Neighors of node <3>: [<0>, <2>, <4>].
Visit node <2>. Neighors of node <2>: [<0>, <3>].
Visit node <0>. Neighors of node <0>: [<2>, <3>].
So the DFS traversal is ","('[[<4>, <1>, <3>, <2>, <0>], [<4>, <3>, <2>, <1>, <0>], [<4>, <1>, <3>, <2>, <0>], [<4>, <0>, <1>, <3>, <2>]]',)",0,99
DFS,"[(<6>, <1>), (<6>, <4>), (<6>, <5>), (<6>, <0>), (<1>, <2>), (<1>, <4>), (<1>, <3>), (<4>, <2>), (<5>, <3>), (<5>, <0>), (<0>, <3>), (<2>, <3>)]","{<6>: [<1>, <4>, <5>, <0>],
<1>: [<6>, <2>, <4>, <3>],
<4>: [<6>, <1>, <2>],
<5>: [<6>, <3>, <0>],
<0>: [<6>, <5>, <3>],
<2>: [<1>, <4>, <3>],
<3>: [<1>, <2>, <5>, <0>]}","Node <6> is connected to nodes <1>, <4>, <5>, <0>.
Node <1> is connected to nodes <6>, <2>, <4>, <3>.
Node <4> is connected to nodes <6>, <1>, <2>.
Node <5> is connected to nodes <6>, <3>, <0>.
Node <0> is connected to nodes <6>, <5>, <3>.
Node <2> is connected to nodes <1>, <4>, <3>.
Node <3> is connected to nodes <1>, <2>, <5>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,12,False,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <0>, <3>, <5>, <2>, <4>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<1>, <4>, <5>, <0>].
Visit node <0>. Neighors of node <0>: [<6>, <5>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <2>, <5>, <0>].
Visit node <5>. Neighors of node <5>: [<6>, <3>, <0>].
Visit node <2>. Neighors of node <2>: [<1>, <4>, <3>].
Visit node <4>. Neighors of node <4>: [<6>, <1>, <2>].
Visit node <1>. Neighors of node <1>: [<6>, <2>, <4>, <3>].
So the DFS traversal is ","('[[<6>, <1>, <0>, <3>, <2>, <5>, <4>], [<6>, <0>, <3>, <1>, <5>, <2>, <4>], [<6>, <0>, <4>, <1>, <3>, <5>, <2>], [<6>, <0>, <3>, <5>, <2>, <4>, <1>]]',)",3,100
DFS,"[(<0>, <1>), (<0>, <4>), (<0>, <3>), (<0>, <5>), (<1>, <4>), (<1>, <3>), (<1>, <5>), (<1>, <2>), (<4>, <5>), (<4>, <2>), (<3>, <2>), (<5>, <2>)]","{<0>: [<1>, <4>, <3>, <5>],
<1>: [<0>, <4>, <3>, <5>, <2>],
<4>: [<0>, <1>, <5>, <2>],
<3>: [<0>, <1>, <2>],
<5>: [<0>, <1>, <4>, <2>],
<2>: [<1>, <4>, <3>, <5>]}","Node <0> is connected to nodes <1>, <4>, <3>, <5>.
Node <1> is connected to nodes <0>, <4>, <3>, <5>, <2>.
Node <4> is connected to nodes <0>, <1>, <5>, <2>.
Node <3> is connected to nodes <0>, <1>, <2>.
Node <5> is connected to nodes <0>, <1>, <4>, <2>.
Node <2> is connected to nodes <1>, <4>, <3>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,12,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <2>, <5>, <1>, <3>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<0>, <1>, <5>, <2>].
Visit node <2>. Neighors of node <2>: [<1>, <4>, <3>, <5>].
Visit node <5>. Neighors of node <5>: [<0>, <1>, <4>, <2>].
Visit node <1>. Neighors of node <1>: [<0>, <4>, <3>, <5>, <2>].
Visit node <3>. Neighors of node <3>: [<0>, <1>, <2>].
Visit node <0>. Neighors of node <0>: [<1>, <4>, <3>, <5>].
So the DFS traversal is ","('[[<4>, <1>, <5>, <0>, <3>, <2>], [<4>, <2>, <3>, <0>, <5>, <1>], [<4>, <2>, <5>, <1>, <3>, <0>], [<4>, <2>, <5>, <3>, <0>, <1>]]',)",2,101
DFS,"[(<4>, <6>), (<4>, <5>), (<6>, <2>), (<5>, <0>), (<2>, <0>), (<2>, <3>), (<3>, <1>)]","{<4>: [<6>, <5>],
<6>: [<4>, <2>],
<5>: [<4>, <0>],
<2>: [<6>, <0>, <3>],
<0>: [<2>, <5>],
<3>: [<2>, <1>],
<1>: [<3>]}","Node <4> is connected to nodes <6>, <5>.
Node <6> is connected to nodes <4>, <2>.
Node <5> is connected to nodes <4>, <0>.
Node <2> is connected to nodes <6>, <0>, <3>.
Node <0> is connected to nodes <2>, <5>.
Node <3> is connected to nodes <2>, <1>.
Node <1> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <3>, <2>, <0>, <5>, <4>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>].
Visit node <3>. Neighors of node <3>: [<2>, <1>].
Visit node <2>. Neighors of node <2>: [<6>, <0>, <3>].
Visit node <0>. Neighors of node <0>: [<2>, <5>].
Visit node <5>. Neighors of node <5>: [<4>, <0>].
Visit node <4>. Neighors of node <4>: [<6>, <5>].
Visit node <6>. Neighors of node <6>: [<4>, <2>].
So the DFS traversal is ","('[[<1>, <3>, <5>, <6>, <4>, <2>, <0>], [<1>, <3>, <2>, <0>, <5>, <4>, <6>], [<1>, <3>, <2>, <0>, <5>, <6>, <4>], [<1>, <3>, <4>, <6>, <2>, <0>, <5>]]',)",1,102
DFS,"[(<0>, <2>), (<2>, <3>), (<4>, <2>), (<4>, <3>), (<4>, <0>), (<3>, <1>), (<3>, <0>), (<3>, <4>), (<3>, <2>), (<1>, <0>), (<1>, <2>)]","{<0>: [<2>],
<2>: [<3>],
<4>: [<2>, <3>, <0>],
<3>: [<1>, <0>, <4>, <2>],
<1>: [<0>, <2>]}","Node <0> is connected to node <2>.
Node <2> is connected to node <3>.
Node <4> is connected to nodes <2>, <3>, <0>.
Node <3> is connected to nodes <1>, <0>, <4>, <2>.
Node <1> is connected to nodes <0>, <2>.","[<0>, <1>, <2>, <3>, <4>]",5,11,True,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <2>, <3>, <4>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <2>. Neighors of node <2>: [<3>].
Visit node <3>. Neighors of node <3>: [<1>, <0>, <4>, <2>].
Visit node <4>. Neighors of node <4>: [<2>, <3>, <0>].
Visit node <1>. Neighors of node <1>: [<0>, <2>].
So the DFS traversal is ","('[[<0>, <2>, <4>, <1>, <3>], [<0>, <2>, <3>, <4>, <1>], [<0>, <1>, <2>, <3>, <4>], [<0>, <2>, <3>, <4>, <1>]]',)",1,103
DFS,"[(<3>, <5>), (<3>, <2>), (<3>, <0>), (<5>, <2>), (<5>, <0>), (<2>, <1>), (<2>, <0>), (<2>, <4>), (<0>, <4>), (<1>, <4>)]","{<3>: [<5>, <2>, <0>],
<5>: [<3>, <2>, <0>],
<2>: [<3>, <5>, <1>, <0>, <4>],
<0>: [<3>, <5>, <2>, <4>],
<1>: [<2>, <4>],
<4>: [<1>, <2>, <0>]}","Node <3> is connected to nodes <5>, <2>, <0>.
Node <5> is connected to nodes <3>, <2>, <0>.
Node <2> is connected to nodes <3>, <5>, <1>, <0>, <4>.
Node <0> is connected to nodes <3>, <5>, <2>, <4>.
Node <1> is connected to nodes <2>, <4>.
Node <4> is connected to nodes <1>, <2>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,10,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <0>, <4>, <2>, <1>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<3>, <2>, <0>].
Visit node <0>. Neighors of node <0>: [<3>, <5>, <2>, <4>].
Visit node <4>. Neighors of node <4>: [<1>, <2>, <0>].
Visit node <2>. Neighors of node <2>: [<3>, <5>, <1>, <0>, <4>].
Visit node <1>. Neighors of node <1>: [<2>, <4>].
Visit node <3>. Neighors of node <3>: [<5>, <2>, <0>].
So the DFS traversal is ","('[[<5>, <0>, <4>, <2>, <1>, <3>], [<5>, <0>, <4>, <2>, <1>, <3>], [<5>, <0>, <1>, <3>, <4>, <2>], [<5>, <0>, <4>, <3>, <1>, <2>]]',)",1,104
DFS,"[(<0>, <1>), (<1>, <2>), (<2>, <3>), (<2>, <4>), (<2>, <5>), (<3>, <4>)]","{<0>: [<1>],
<1>: [<0>, <2>],
<2>: [<1>, <3>, <4>, <5>],
<3>: [<2>, <4>],
<4>: [<3>, <2>],
<5>: [<2>]}","Node <0> is connected to node <1>.
Node <1> is connected to nodes <0>, <2>.
Node <2> is connected to nodes <1>, <3>, <4>, <5>.
Node <3> is connected to nodes <2>, <4>.
Node <4> is connected to nodes <3>, <2>.
Node <5> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <5>, <4>, <3>, <1>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<1>, <3>, <4>, <5>].
Visit node <5>. Neighors of node <5>: [<2>].
Visit node <4>. Neighors of node <4>: [<3>, <2>].
Visit node <3>. Neighors of node <3>: [<2>, <4>].
Visit node <1>. Neighors of node <1>: [<0>, <2>].
Visit node <0>. Neighors of node <0>: [<1>].
So the DFS traversal is ","('[[<2>, <3>, <5>, <1>, <0>, <4>], [<2>, <5>, <4>, <1>, <0>, <3>], [<2>, <5>, <4>, <3>, <1>, <0>], [<2>, <5>, <1>, <0>, <4>, <3>]]',)",2,105
DFS,"[(<0>, <3>), (<3>, <4>), (<3>, <2>), (<4>, <1>), (<4>, <3>), (<4>, <5>), (<1>, <2>), (<1>, <0>), (<1>, <4>), (<5>, <4>), (<5>, <1>), (<5>, <2>), (<5>, <3>), (<2>, <0>), (<2>, <1>)]","{<0>: [<3>],
<3>: [<4>, <2>],
<4>: [<1>, <3>, <5>],
<1>: [<2>, <0>, <4>],
<5>: [<4>, <1>, <2>, <3>],
<2>: [<0>, <1>]}","Node <0> is connected to node <3>.
Node <3> is connected to nodes <4>, <2>.
Node <4> is connected to nodes <1>, <3>, <5>.
Node <1> is connected to nodes <2>, <0>, <4>.
Node <5> is connected to nodes <4>, <1>, <2>, <3>.
Node <2> is connected to nodes <0>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,15,True,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <3>, <2>, <1>, <4>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<4>, <1>, <2>, <3>].
Visit node <3>. Neighors of node <3>: [<4>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <1>].
Visit node <1>. Neighors of node <1>: [<2>, <0>, <4>].
Visit node <4>. Neighors of node <4>: [<1>, <3>, <5>].
Visit node <0>. Neighors of node <0>: [<3>].
So the DFS traversal is ","('[[<5>, <3>, <2>, <4>, <1>, <0>], [<5>, <3>, <4>, <0>, <2>, <1>], [<5>, <3>, <2>, <1>, <4>, <0>], [<5>, <1>, <2>, <4>, <3>, <0>]]',)",2,106
DFS,"[(<4>, <0>), (<4>, <1>), (<1>, <3>), (<1>, <2>)]","{<4>: [<0>, <1>],
<0>: [<4>],
<1>: [<4>, <3>, <2>],
<3>: [<1>],
<2>: [<1>]}","Node <4> is connected to nodes <0>, <1>.
Node <0> is connected to node <4>.
Node <1> is connected to nodes <4>, <3>, <2>.
Node <3> is connected to node <1>.
Node <2> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <2>, <3>, <4>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<4>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <3>. Neighors of node <3>: [<1>].
Visit node <4>. Neighors of node <4>: [<0>, <1>].
Visit node <0>. Neighors of node <0>: [<4>].
So the DFS traversal is ","('[[<1>, <2>, <4>, <3>, <0>], [<1>, <0>, <2>, <3>, <4>], [<1>, <2>, <3>, <4>, <0>], [<1>, <2>, <3>, <4>, <0>]]',)",3,107
DFS,"[(<1>, <3>), (<3>, <1>), (<3>, <4>), (<4>, <2>), (<4>, <3>), (<2>, <1>), (<0>, <3>), (<0>, <1>)]","{<1>: [<3>],
<3>: [<1>, <4>],
<4>: [<2>, <3>],
<2>: [<1>],
<0>: [<3>, <1>]}","Node <1> is connected to node <3>.
Node <3> is connected to nodes <1>, <4>.
Node <4> is connected to nodes <2>, <3>.
Node <2> is connected to node <1>.
Node <0> is connected to nodes <3>, <1>.","[<0>, <1>, <2>, <3>, <4>]",5,8,True,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <3>, <4>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<3>, <1>].
Visit node <1>. Neighors of node <1>: [<3>].
Visit node <3>. Neighors of node <3>: [<1>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <3>].
Visit node <2>. Neighors of node <2>: [<1>].
So the DFS traversal is ","('[[<0>, <1>, <3>, <4>, <2>], [<0>, <2>, <1>, <3>, <4>], [<0>, <1>, <3>, <4>, <2>], [<0>, <1>, <3>, <2>, <4>]]',)",0,108
DFS,"[(<0>, <5>), (<0>, <1>), (<0>, <4>), (<0>, <3>), (<5>, <2>)]","{<0>: [<5>, <1>, <4>, <3>],
<5>: [<0>, <2>],
<1>: [<0>],
<4>: [<0>],
<3>: [<0>],
<2>: [<5>]}","Node <0> is connected to nodes <5>, <1>, <4>, <3>.
Node <5> is connected to nodes <0>, <2>.
Node <1> is connected to node <0>.
Node <4> is connected to node <0>.
Node <3> is connected to node <0>.
Node <2> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <5>, <0>, <3>, <4>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<5>].
Visit node <5>. Neighors of node <5>: [<0>, <2>].
Visit node <0>. Neighors of node <0>: [<5>, <1>, <4>, <3>].
Visit node <3>. Neighors of node <3>: [<0>].
Visit node <4>. Neighors of node <4>: [<0>].
Visit node <1>. Neighors of node <1>: [<0>].
So the DFS traversal is ","('[[<2>, <3>, <5>, <0>, <1>, <4>], [<2>, <5>, <4>, <1>, <0>, <3>], [<2>, <5>, <0>, <1>, <3>, <4>], [<2>, <5>, <0>, <3>, <4>, <1>]]',)",3,109
DFS,"[(<3>, <0>), (<3>, <1>), (<3>, <2>), (<0>, <4>), (<1>, <4>)]","{<3>: [<0>, <1>, <2>],
<0>: [<3>, <4>],
<1>: [<3>, <4>],
<2>: [<3>],
<4>: [<0>, <1>]}","Node <3> is connected to nodes <0>, <1>, <2>.
Node <0> is connected to nodes <3>, <4>.
Node <1> is connected to nodes <3>, <4>.
Node <2> is connected to node <3>.
Node <4> is connected to nodes <0>, <1>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <4>, <0>, <3>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>, <4>].
Visit node <4>. Neighors of node <4>: [<0>, <1>].
Visit node <0>. Neighors of node <0>: [<3>, <4>].
Visit node <3>. Neighors of node <3>: [<0>, <1>, <2>].
Visit node <2>. Neighors of node <2>: [<3>].
So the DFS traversal is ","('[[<1>, <2>, <4>, <0>, <3>], [<1>, <4>, <2>, <3>, <0>], [<1>, <4>, <0>, <3>, <2>], [<1>, <4>, <3>, <0>, <2>]]',)",2,110
DFS,"[(<6>, <0>), (<6>, <1>), (<0>, <3>), (<1>, <4>), (<3>, <2>), (<3>, <5>), (<2>, <5>)]","{<6>: [<0>, <1>],
<0>: [<6>, <3>],
<1>: [<6>, <4>],
<3>: [<0>, <2>, <5>],
<2>: [<5>, <3>],
<5>: [<2>, <3>],
<4>: [<1>]}","Node <6> is connected to nodes <0>, <1>.
Node <0> is connected to nodes <6>, <3>.
Node <1> is connected to nodes <6>, <4>.
Node <3> is connected to nodes <0>, <2>, <5>.
Node <2> is connected to nodes <5>, <3>.
Node <5> is connected to nodes <2>, <3>.
Node <4> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <4>, <6>, <0>, <3>, <5>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<6>, <4>].
Visit node <4>. Neighors of node <4>: [<1>].
Visit node <6>. Neighors of node <6>: [<0>, <1>].
Visit node <0>. Neighors of node <0>: [<6>, <3>].
Visit node <3>. Neighors of node <3>: [<0>, <2>, <5>].
Visit node <5>. Neighors of node <5>: [<2>, <3>].
Visit node <2>. Neighors of node <2>: [<5>, <3>].
So the DFS traversal is ","('[[<1>, <4>, <6>, <0>, <3>, <5>, <2>], [<1>, <4>, <5>, <2>, <6>, <0>, <3>], [<1>, <3>, <0>, <6>, <5>, <2>, <4>], [<1>, <4>, <6>, <3>, <5>, <0>, <2>]]',)",0,111
DFS,"[(<2>, <4>), (<4>, <1>), (<4>, <3>), (<4>, <0>), (<3>, <0>)]","{<2>: [<4>],
<4>: [<2>, <1>, <3>, <0>],
<1>: [<4>],
<3>: [<4>, <0>],
<0>: [<4>, <3>]}","Node <2> is connected to node <4>.
Node <4> is connected to nodes <2>, <1>, <3>, <0>.
Node <1> is connected to node <4>.
Node <3> is connected to nodes <4>, <0>.
Node <0> is connected to nodes <4>, <3>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <0>, <4>, <1>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<4>, <0>].
Visit node <0>. Neighors of node <0>: [<4>, <3>].
Visit node <4>. Neighors of node <4>: [<2>, <1>, <3>, <0>].
Visit node <1>. Neighors of node <1>: [<4>].
Visit node <2>. Neighors of node <2>: [<4>].
So the DFS traversal is ","('[[<3>, <0>, <4>, <2>, <1>], [<3>, <0>, <4>, <1>, <2>], [<3>, <4>, <1>, <0>, <2>], [<3>, <2>, <0>, <4>, <1>]]',)",1,112
DFS,"[(<0>, <5>), (<0>, <1>), (<0>, <3>), (<0>, <4>), (<5>, <2>), (<5>, <1>), (<5>, <3>), (<5>, <4>), (<1>, <2>), (<1>, <3>), (<1>, <4>), (<3>, <4>), (<4>, <2>)]","{<0>: [<5>, <1>, <3>, <4>],
<5>: [<0>, <2>, <1>, <3>, <4>],
<1>: [<0>, <5>, <2>, <3>, <4>],
<3>: [<0>, <5>, <1>, <4>],
<4>: [<0>, <5>, <2>, <1>, <3>],
<2>: [<5>, <1>, <4>]}","Node <0> is connected to nodes <5>, <1>, <3>, <4>.
Node <5> is connected to nodes <0>, <2>, <1>, <3>, <4>.
Node <1> is connected to nodes <0>, <5>, <2>, <3>, <4>.
Node <3> is connected to nodes <0>, <5>, <1>, <4>.
Node <4> is connected to nodes <0>, <5>, <2>, <1>, <3>.
Node <2> is connected to nodes <5>, <1>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,13,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <4>, <3>, <5>, <2>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<0>, <5>, <2>, <3>, <4>].
Visit node <4>. Neighors of node <4>: [<0>, <5>, <2>, <1>, <3>].
Visit node <3>. Neighors of node <3>: [<0>, <5>, <1>, <4>].
Visit node <5>. Neighors of node <5>: [<0>, <2>, <1>, <3>, <4>].
Visit node <2>. Neighors of node <2>: [<5>, <1>, <4>].
Visit node <0>. Neighors of node <0>: [<5>, <1>, <3>, <4>].
So the DFS traversal is ","('[[<1>, <0>, <3>, <5>, <2>, <4>], [<1>, <4>, <3>, <5>, <2>, <0>], [<1>, <4>, <2>, <0>, <3>, <5>], [<1>, <4>, <3>, <0>, <5>, <2>]]',)",1,113
DFS,"[(<0>, <4>), (<0>, <3>), (<0>, <2>), (<0>, <1>), (<4>, <3>), (<4>, <2>), (<4>, <0>), (<3>, <1>), (<3>, <0>), (<3>, <4>), (<2>, <1>), (<2>, <4>), (<2>, <6>), (<1>, <4>), (<1>, <3>), (<5>, <6>), (<5>, <3>), (<5>, <2>), (<5>, <1>), (<5>, <0>), (<6>, <1>), (<6>, <0>)]","{<0>: [<4>, <3>, <2>, <1>],
<4>: [<3>, <2>, <0>],
<3>: [<1>, <0>, <4>],
<2>: [<1>, <4>, <6>],
<1>: [<4>, <3>],
<5>: [<6>, <3>, <2>, <1>, <0>],
<6>: [<1>, <0>]}","Node <0> is connected to nodes <4>, <3>, <2>, <1>.
Node <4> is connected to nodes <3>, <2>, <0>.
Node <3> is connected to nodes <1>, <0>, <4>.
Node <2> is connected to nodes <1>, <4>, <6>.
Node <1> is connected to nodes <4>, <3>.
Node <5> is connected to nodes <6>, <3>, <2>, <1>, <0>.
Node <6> is connected to nodes <1>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,22,True,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <0>, <1>, <3>, <4>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<1>, <0>].
Visit node <0>. Neighors of node <0>: [<4>, <3>, <2>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <0>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <2>, <0>].
Visit node <2>. Neighors of node <2>: [<1>, <4>, <6>].
So the DFS traversal is ","('[[<6>, <0>, <1>, <4>, <2>, <3>], [<6>, <4>, <2>, <1>, <3>, <0>], [<6>, <0>, <1>, <3>, <4>, <2>], [<6>, <0>, <4>, <2>, <1>, <3>]]',)",2,114
DFS,"[(<4>, <3>), (<3>, <2>), (<2>, <1>), (<2>, <0>), (<1>, <0>)]","{<4>: [<3>],
<3>: [<4>, <2>],
<2>: [<3>, <1>, <0>],
<1>: [<2>, <0>],
<0>: [<2>, <1>]}","Node <4> is connected to node <3>.
Node <3> is connected to nodes <4>, <2>.
Node <2> is connected to nodes <3>, <1>, <0>.
Node <1> is connected to nodes <2>, <0>.
Node <0> is connected to nodes <2>, <1>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <0>, <2>, <3>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<2>, <0>].
Visit node <0>. Neighors of node <0>: [<2>, <1>].
Visit node <2>. Neighors of node <2>: [<3>, <1>, <0>].
Visit node <3>. Neighors of node <3>: [<4>, <2>].
Visit node <4>. Neighors of node <4>: [<3>].
So the DFS traversal is ","('[[<1>, <0>, <2>, <3>, <4>], [<1>, <4>, <3>, <0>, <2>], [<1>, <4>, <0>, <2>, <3>], [<1>, <0>, <3>, <4>, <2>]]',)",0,115
DFS,"[(<3>, <6>), (<3>, <4>), (<6>, <1>), (<6>, <0>), (<6>, <2>), (<6>, <5>), (<4>, <5>)]","{<3>: [<6>, <4>],
<6>: [<3>, <1>, <0>, <2>, <5>],
<4>: [<3>, <5>],
<1>: [<6>],
<0>: [<6>],
<2>: [<6>],
<5>: [<6>, <4>]}","Node <3> is connected to nodes <6>, <4>.
Node <6> is connected to nodes <3>, <1>, <0>, <2>, <5>.
Node <4> is connected to nodes <3>, <5>.
Node <1> is connected to node <6>.
Node <0> is connected to node <6>.
Node <2> is connected to node <6>.
Node <5> is connected to nodes <6>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <5>, <4>, <3>, <2>, <0>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<3>, <1>, <0>, <2>, <5>].
Visit node <5>. Neighors of node <5>: [<6>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <5>].
Visit node <3>. Neighors of node <3>: [<6>, <4>].
Visit node <2>. Neighors of node <2>: [<6>].
Visit node <0>. Neighors of node <0>: [<6>].
Visit node <1>. Neighors of node <1>: [<6>].
So the DFS traversal is ","('[[<6>, <5>, <4>, <0>, <2>, <3>, <1>], [<6>, <5>, <0>, <1>, <4>, <3>, <2>], [<6>, <5>, <4>, <3>, <2>, <0>, <1>], [<6>, <1>, <3>, <5>, <4>, <0>, <2>]]',)",2,116
DFS,"[(<5>, <3>), (<5>, <4>), (<3>, <1>), (<4>, <2>), (<1>, <2>), (<2>, <0>)]","{<5>: [<3>, <4>],
<3>: [<5>, <1>],
<4>: [<5>, <2>],
<1>: [<3>, <2>],
<2>: [<1>, <4>, <0>],
<0>: [<2>]}","Node <5> is connected to nodes <3>, <4>.
Node <3> is connected to nodes <5>, <1>.
Node <4> is connected to nodes <5>, <2>.
Node <1> is connected to nodes <3>, <2>.
Node <2> is connected to nodes <1>, <4>, <0>.
Node <0> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <0>, <4>, <5>, <3>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<1>, <4>, <0>].
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <4>. Neighors of node <4>: [<5>, <2>].
Visit node <5>. Neighors of node <5>: [<3>, <4>].
Visit node <3>. Neighors of node <3>: [<5>, <1>].
Visit node <1>. Neighors of node <1>: [<3>, <2>].
So the DFS traversal is ","('[[<2>, <0>, <4>, <5>, <3>, <1>], [<2>, <0>, <3>, <1>, <4>, <5>], [<2>, <5>, <3>, <0>, <4>, <1>], [<2>, <0>, <4>, <3>, <5>, <1>]]',)",0,117
DFS,"[(<0>, <5>), (<0>, <4>), (<0>, <1>), (<1>, <3>), (<1>, <2>)]","{<0>: [<5>, <4>, <1>],
<5>: [<0>],
<4>: [<0>],
<1>: [<0>, <3>, <2>],
<3>: [<1>],
<2>: [<1>]}","Node <0> is connected to nodes <5>, <4>, <1>.
Node <5> is connected to node <0>.
Node <4> is connected to node <0>.
Node <1> is connected to nodes <0>, <3>, <2>.
Node <3> is connected to node <1>.
Node <2> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <1>, <2>, <0>, <4>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<1>].
Visit node <1>. Neighors of node <1>: [<0>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <0>. Neighors of node <0>: [<5>, <4>, <1>].
Visit node <4>. Neighors of node <4>: [<0>].
Visit node <5>. Neighors of node <5>: [<0>].
So the DFS traversal is ","('[[<3>, <1>, <2>, <0>, <4>, <5>], [<3>, <1>, <4>, <5>, <2>, <0>], [<3>, <1>, <2>, <5>, <4>, <0>], [<3>, <5>, <0>, <1>, <2>, <4>]]',)",0,118
DFS,"[(<4>, <5>), (<4>, <1>), (<5>, <2>), (<1>, <6>), (<2>, <3>), (<6>, <0>), (<3>, <0>)]","{<4>: [<5>, <1>],
<5>: [<4>, <2>],
<1>: [<4>, <6>],
<2>: [<5>, <3>],
<6>: [<1>, <0>],
<3>: [<0>, <2>],
<0>: [<3>, <6>]}","Node <4> is connected to nodes <5>, <1>.
Node <5> is connected to nodes <4>, <2>.
Node <1> is connected to nodes <4>, <6>.
Node <2> is connected to nodes <5>, <3>.
Node <6> is connected to nodes <1>, <0>.
Node <3> is connected to nodes <0>, <2>.
Node <0> is connected to nodes <3>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <6>, <0>, <3>, <2>, <5>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<4>, <6>].
Visit node <6>. Neighors of node <6>: [<1>, <0>].
Visit node <0>. Neighors of node <0>: [<3>, <6>].
Visit node <3>. Neighors of node <3>: [<0>, <2>].
Visit node <2>. Neighors of node <2>: [<5>, <3>].
Visit node <5>. Neighors of node <5>: [<4>, <2>].
Visit node <4>. Neighors of node <4>: [<5>, <1>].
So the DFS traversal is ","('[[<1>, <6>, <0>, <3>, <4>, <5>, <2>], [<1>, <6>, <5>, <4>, <0>, <3>, <2>], [<1>, <2>, <6>, <5>, <3>, <4>, <0>], [<1>, <6>, <0>, <3>, <2>, <5>, <4>]]',)",3,119
DFS,"[(<0>, <1>), (<0>, <4>), (<1>, <2>), (<1>, <6>), (<1>, <3>), (<2>, <3>), (<6>, <5>)]","{<0>: [<1>, <4>],
<1>: [<0>, <2>, <6>, <3>],
<4>: [<0>],
<2>: [<1>, <3>],
<6>: [<1>, <5>],
<3>: [<1>, <2>],
<5>: [<6>]}","Node <0> is connected to nodes <1>, <4>.
Node <1> is connected to nodes <0>, <2>, <6>, <3>.
Node <4> is connected to node <0>.
Node <2> is connected to nodes <1>, <3>.
Node <6> is connected to nodes <1>, <5>.
Node <3> is connected to nodes <1>, <2>.
Node <5> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <5>, <1>, <3>, <2>, <0>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<1>, <5>].
Visit node <5>. Neighors of node <5>: [<6>].
Visit node <1>. Neighors of node <1>: [<0>, <2>, <6>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <2>].
Visit node <2>. Neighors of node <2>: [<1>, <3>].
Visit node <0>. Neighors of node <0>: [<1>, <4>].
Visit node <4>. Neighors of node <4>: [<0>].
So the DFS traversal is ","('[[<6>, <3>, <2>, <1>, <0>, <4>, <5>], [<6>, <5>, <1>, <3>, <2>, <0>, <4>], [<6>, <5>, <1>, <2>, <0>, <3>, <4>], [<6>, <5>, <0>, <4>, <1>, <3>, <2>]]',)",1,120
DFS,"[(<6>, <2>), (<6>, <3>), (<6>, <5>), (<6>, <4>), (<2>, <1>), (<2>, <3>), (<3>, <1>), (<3>, <5>), (<3>, <4>), (<3>, <0>), (<5>, <1>), (<5>, <0>), (<4>, <0>), (<1>, <0>)]","{<6>: [<2>, <3>, <5>, <4>],
<2>: [<6>, <1>, <3>],
<3>: [<6>, <1>, <2>, <5>, <4>, <0>],
<5>: [<6>, <1>, <3>, <0>],
<4>: [<6>, <3>, <0>],
<1>: [<2>, <3>, <5>, <0>],
<0>: [<1>, <3>, <5>, <4>]}","Node <6> is connected to nodes <2>, <3>, <5>, <4>.
Node <2> is connected to nodes <6>, <1>, <3>.
Node <3> is connected to nodes <6>, <1>, <2>, <5>, <4>, <0>.
Node <5> is connected to nodes <6>, <1>, <3>, <0>.
Node <4> is connected to nodes <6>, <3>, <0>.
Node <1> is connected to nodes <2>, <3>, <5>, <0>.
Node <0> is connected to nodes <1>, <3>, <5>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,14,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <0>, <4>, <6>, <5>, <1>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<6>, <1>, <2>, <5>, <4>, <0>].
Visit node <0>. Neighors of node <0>: [<1>, <3>, <5>, <4>].
Visit node <4>. Neighors of node <4>: [<6>, <3>, <0>].
Visit node <6>. Neighors of node <6>: [<2>, <3>, <5>, <4>].
Visit node <5>. Neighors of node <5>: [<6>, <1>, <3>, <0>].
Visit node <1>. Neighors of node <1>: [<2>, <3>, <5>, <0>].
Visit node <2>. Neighors of node <2>: [<6>, <1>, <3>].
So the DFS traversal is ","('[[<3>, <0>, <4>, <6>, <5>, <1>, <2>], [<3>, <6>, <4>, <0>, <2>, <5>, <1>], [<3>, <0>, <4>, <2>, <1>, <5>, <6>], [<3>, <0>, <1>, <2>, <4>, <6>, <5>]]',)",0,121
DFS,"[(<1>, <2>), (<1>, <3>), (<2>, <6>), (<6>, <0>), (<6>, <4>), (<0>, <5>), (<5>, <4>)]","{<1>: [<2>, <3>],
<2>: [<1>, <6>],
<3>: [<1>],
<6>: [<2>, <0>, <4>],
<0>: [<6>, <5>],
<5>: [<0>, <4>],
<4>: [<6>, <5>]}","Node <1> is connected to nodes <2>, <3>.
Node <2> is connected to nodes <1>, <6>.
Node <3> is connected to node <1>.
Node <6> is connected to nodes <2>, <0>, <4>.
Node <0> is connected to nodes <6>, <5>.
Node <5> is connected to nodes <0>, <4>.
Node <4> is connected to nodes <6>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <5>, <0>, <6>, <2>, <1>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<6>, <5>].
Visit node <5>. Neighors of node <5>: [<0>, <4>].
Visit node <0>. Neighors of node <0>: [<6>, <5>].
Visit node <6>. Neighors of node <6>: [<2>, <0>, <4>].
Visit node <2>. Neighors of node <2>: [<1>, <6>].
Visit node <1>. Neighors of node <1>: [<2>, <3>].
Visit node <3>. Neighors of node <3>: [<1>].
So the DFS traversal is ","('[[<4>, <5>, <0>, <6>, <2>, <1>, <3>], [<4>, <2>, <1>, <0>, <5>, <3>, <6>], [<4>, <5>, <1>, <3>, <0>, <6>, <2>], [<4>, <5>, <0>, <2>, <1>, <6>, <3>]]',)",0,122
DFS,"[(<0>, <2>), (<0>, <1>), (<2>, <3>), (<1>, <3>), (<3>, <4>)]","{<0>: [<2>, <1>],
<2>: [<0>, <3>],
<1>: [<0>, <3>],
<3>: [<2>, <1>, <4>],
<4>: [<3>]}","Node <0> is connected to nodes <2>, <1>.
Node <2> is connected to nodes <0>, <3>.
Node <1> is connected to nodes <0>, <3>.
Node <3> is connected to nodes <2>, <1>, <4>.
Node <4> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <3>, <4>, <2>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<0>, <3>].
Visit node <3>. Neighors of node <3>: [<2>, <1>, <4>].
Visit node <4>. Neighors of node <4>: [<3>].
Visit node <2>. Neighors of node <2>: [<0>, <3>].
Visit node <0>. Neighors of node <0>: [<2>, <1>].
So the DFS traversal is ","('[[<1>, <3>, <2>, <0>, <4>], [<1>, <0>, <3>, <4>, <2>], [<1>, <3>, <4>, <2>, <0>], [<1>, <0>, <2>, <3>, <4>]]',)",2,123
DFS,"[(<2>, <1>), (<2>, <4>), (<2>, <5>), (<1>, <4>), (<1>, <0>), (<1>, <2>), (<4>, <3>), (<4>, <0>), (<5>, <3>), (<5>, <0>), (<0>, <5>), (<0>, <1>), (<0>, <3>), (<3>, <2>)]","{<2>: [<1>, <4>, <5>],
<1>: [<4>, <0>, <2>],
<4>: [<3>, <0>],
<5>: [<3>, <0>],
<0>: [<5>, <1>, <3>],
<3>: [<2>]}","Node <2> is connected to nodes <1>, <4>, <5>.
Node <1> is connected to nodes <4>, <0>, <2>.
Node <4> is connected to nodes <3>, <0>.
Node <5> is connected to nodes <3>, <0>.
Node <0> is connected to nodes <5>, <1>, <3>.
Node <3> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,14,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <2>, <5>, <0>, <3>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<4>, <0>, <2>].
Visit node <2>. Neighors of node <2>: [<1>, <4>, <5>].
Visit node <5>. Neighors of node <5>: [<3>, <0>].
Visit node <0>. Neighors of node <0>: [<5>, <1>, <3>].
Visit node <3>. Neighors of node <3>: [<2>].
Visit node <4>. Neighors of node <4>: [<3>, <0>].
So the DFS traversal is ","('[[<1>, <2>, <5>, <4>, <3>, <0>], [<1>, <2>, <3>, <4>, <5>, <0>], [<1>, <5>, <4>, <2>, <3>, <0>], [<1>, <2>, <5>, <0>, <3>, <4>]]',)",3,124
DFS,"[(<3>, <0>), (<0>, <4>), (<0>, <1>), (<4>, <1>), (<1>, <2>)]","{<3>: [<0>],
<0>: [<3>, <4>, <1>],
<4>: [<0>, <1>],
<1>: [<0>, <4>, <2>],
<2>: [<1>]}","Node <3> is connected to node <0>.
Node <0> is connected to nodes <3>, <4>, <1>.
Node <4> is connected to nodes <0>, <1>.
Node <1> is connected to nodes <0>, <4>, <2>.
Node <2> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <1>, <4>, <0>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <1>. Neighors of node <1>: [<0>, <4>, <2>].
Visit node <4>. Neighors of node <4>: [<0>, <1>].
Visit node <0>. Neighors of node <0>: [<3>, <4>, <1>].
Visit node <3>. Neighors of node <3>: [<0>].
So the DFS traversal is ","('[[<2>, <3>, <1>, <4>, <0>], [<2>, <1>, <3>, <4>, <0>], [<2>, <4>, <0>, <1>, <3>], [<2>, <1>, <4>, <0>, <3>]]',)",3,125
DFS,"[(<0>, <5>), (<0>, <2>), (<0>, <3>), (<0>, <1>), (<0>, <4>), (<5>, <2>), (<5>, <1>), (<5>, <4>), (<2>, <3>), (<2>, <1>), (<2>, <4>), (<3>, <1>)]","{<0>: [<5>, <2>, <3>, <1>, <4>],
<5>: [<0>, <2>, <1>, <4>],
<2>: [<0>, <5>, <3>, <1>, <4>],
<3>: [<0>, <2>, <1>],
<1>: [<0>, <5>, <2>, <3>],
<4>: [<0>, <5>, <2>]}","Node <0> is connected to nodes <5>, <2>, <3>, <1>, <4>.
Node <5> is connected to nodes <0>, <2>, <1>, <4>.
Node <2> is connected to nodes <0>, <5>, <3>, <1>, <4>.
Node <3> is connected to nodes <0>, <2>, <1>.
Node <1> is connected to nodes <0>, <5>, <2>, <3>.
Node <4> is connected to nodes <0>, <5>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,12,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <3>, <2>, <4>, <5>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<0>, <5>, <2>, <3>].
Visit node <3>. Neighors of node <3>: [<0>, <2>, <1>].
Visit node <2>. Neighors of node <2>: [<0>, <5>, <3>, <1>, <4>].
Visit node <4>. Neighors of node <4>: [<0>, <5>, <2>].
Visit node <5>. Neighors of node <5>: [<0>, <2>, <1>, <4>].
Visit node <0>. Neighors of node <0>: [<5>, <2>, <3>, <1>, <4>].
So the DFS traversal is ","('[[<1>, <3>, <2>, <5>, <0>, <4>], [<1>, <5>, <2>, <4>, <3>, <0>], [<1>, <3>, <2>, <4>, <5>, <0>], [<1>, <3>, <5>, <0>, <2>, <4>]]',)",2,126
DFS,"[(<4>, <0>), (<0>, <3>), (<0>, <2>), (<3>, <1>), (<2>, <5>), (<1>, <5>)]","{<4>: [<0>],
<0>: [<4>, <3>, <2>],
<3>: [<0>, <1>],
<2>: [<0>, <5>],
<1>: [<3>, <5>],
<5>: [<1>, <2>]}","Node <4> is connected to node <0>.
Node <0> is connected to nodes <4>, <3>, <2>.
Node <3> is connected to nodes <0>, <1>.
Node <2> is connected to nodes <0>, <5>.
Node <1> is connected to nodes <3>, <5>.
Node <5> is connected to nodes <1>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <1>, <5>, <2>, <0>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<0>, <1>].
Visit node <1>. Neighors of node <1>: [<3>, <5>].
Visit node <5>. Neighors of node <5>: [<1>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <5>].
Visit node <0>. Neighors of node <0>: [<4>, <3>, <2>].
Visit node <4>. Neighors of node <4>: [<0>].
So the DFS traversal is ","('[[<3>, <1>, <5>, <2>, <0>, <4>], [<3>, <1>, <0>, <4>, <5>, <2>], [<3>, <1>, <5>, <0>, <2>, <4>], [<3>, <1>, <5>, <2>, <4>, <0>]]',)",0,127
DFS,"[(<5>, <0>), (<5>, <4>), (<0>, <1>), (<4>, <6>), (<1>, <3>), (<1>, <2>), (<6>, <3>)]","{<5>: [<0>, <4>],
<0>: [<5>, <1>],
<4>: [<5>, <6>],
<1>: [<0>, <3>, <2>],
<6>: [<4>, <3>],
<3>: [<6>, <1>],
<2>: [<1>]}","Node <5> is connected to nodes <0>, <4>.
Node <0> is connected to nodes <5>, <1>.
Node <4> is connected to nodes <5>, <6>.
Node <1> is connected to nodes <0>, <3>, <2>.
Node <6> is connected to nodes <4>, <3>.
Node <3> is connected to nodes <6>, <1>.
Node <2> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <2>, <3>, <6>, <4>, <5>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<0>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <3>. Neighors of node <3>: [<6>, <1>].
Visit node <6>. Neighors of node <6>: [<4>, <3>].
Visit node <4>. Neighors of node <4>: [<5>, <6>].
Visit node <5>. Neighors of node <5>: [<0>, <4>].
Visit node <0>. Neighors of node <0>: [<5>, <1>].
So the DFS traversal is ","('[[<1>, <2>, <3>, <5>, <0>, <4>, <6>], [<1>, <0>, <6>, <3>, <2>, <4>, <5>], [<1>, <2>, <3>, <6>, <4>, <5>, <0>], [<1>, <2>, <5>, <0>, <3>, <6>, <4>]]',)",2,128
DFS,"[(<4>, <6>), (<4>, <0>), (<4>, <5>), (<6>, <0>), (<6>, <2>), (<0>, <3>), (<0>, <1>), (<0>, <2>), (<0>, <5>), (<5>, <3>), (<5>, <1>)]","{<4>: [<6>, <0>, <5>],
<6>: [<4>, <0>, <2>],
<0>: [<4>, <6>, <3>, <1>, <2>, <5>],
<5>: [<4>, <0>, <3>, <1>],
<2>: [<6>, <0>],
<3>: [<0>, <5>],
<1>: [<0>, <5>]}","Node <4> is connected to nodes <6>, <0>, <5>.
Node <6> is connected to nodes <4>, <0>, <2>.
Node <0> is connected to nodes <4>, <6>, <3>, <1>, <2>, <5>.
Node <5> is connected to nodes <4>, <0>, <3>, <1>.
Node <2> is connected to nodes <6>, <0>.
Node <3> is connected to nodes <0>, <5>.
Node <1> is connected to nodes <0>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,11,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <0>, <5>, <1>, <3>, <4>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<6>, <0>].
Visit node <0>. Neighors of node <0>: [<4>, <6>, <3>, <1>, <2>, <5>].
Visit node <5>. Neighors of node <5>: [<4>, <0>, <3>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <5>].
Visit node <3>. Neighors of node <3>: [<0>, <5>].
Visit node <4>. Neighors of node <4>: [<6>, <0>, <5>].
Visit node <6>. Neighors of node <6>: [<4>, <0>, <2>].
So the DFS traversal is ","('[[<2>, <0>, <3>, <6>, <1>, <4>, <5>], [<2>, <0>, <4>, <6>, <5>, <1>, <3>], [<2>, <0>, <5>, <1>, <3>, <4>, <6>], [<2>, <0>, <5>, <4>, <1>, <6>, <3>]]',)",2,129
DFS,"[(<4>, <3>), (<4>, <0>), (<4>, <2>), (<3>, <2>), (<0>, <1>)]","{<4>: [<3>, <0>, <2>],
<3>: [<4>, <2>],
<0>: [<4>, <1>],
<2>: [<4>, <3>],
<1>: [<0>]}","Node <4> is connected to nodes <3>, <0>, <2>.
Node <3> is connected to nodes <4>, <2>.
Node <0> is connected to nodes <4>, <1>.
Node <2> is connected to nodes <4>, <3>.
Node <1> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <2>, <3>, <0>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<3>, <0>, <2>].
Visit node <2>. Neighors of node <2>: [<4>, <3>].
Visit node <3>. Neighors of node <3>: [<4>, <2>].
Visit node <0>. Neighors of node <0>: [<4>, <1>].
Visit node <1>. Neighors of node <1>: [<0>].
So the DFS traversal is ","('[[<4>, <2>, <1>, <3>, <0>], [<4>, <1>, <2>, <3>, <0>], [<4>, <1>, <3>, <2>, <0>], [<4>, <2>, <3>, <0>, <1>]]',)",3,130
DFS,"[(<2>, <1>), (<2>, <5>), (<2>, <4>), (<5>, <6>), (<5>, <3>), (<4>, <0>)]","{<2>: [<1>, <5>, <4>],
<1>: [<2>],
<5>: [<2>, <6>, <3>],
<4>: [<2>, <0>],
<6>: [<5>],
<3>: [<5>],
<0>: [<4>]}","Node <2> is connected to nodes <1>, <5>, <4>.
Node <1> is connected to node <2>.
Node <5> is connected to nodes <2>, <6>, <3>.
Node <4> is connected to nodes <2>, <0>.
Node <6> is connected to node <5>.
Node <3> is connected to node <5>.
Node <0> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <4>, <2>, <5>, <3>, <6>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<4>].
Visit node <4>. Neighors of node <4>: [<2>, <0>].
Visit node <2>. Neighors of node <2>: [<1>, <5>, <4>].
Visit node <5>. Neighors of node <5>: [<2>, <6>, <3>].
Visit node <3>. Neighors of node <3>: [<5>].
Visit node <6>. Neighors of node <6>: [<5>].
Visit node <1>. Neighors of node <1>: [<2>].
So the DFS traversal is ","('[[<0>, <4>, <2>, <1>, <3>, <6>, <5>], [<0>, <4>, <6>, <1>, <2>, <5>, <3>], [<0>, <4>, <2>, <5>, <3>, <6>, <1>], [<0>, <1>, <6>, <3>, <5>, <4>, <2>]]',)",2,131
DFS,"[(<1>, <2>), (<1>, <5>), (<2>, <5>), (<2>, <0>), (<0>, <4>), (<4>, <3>)]","{<1>: [<2>, <5>],
<2>: [<1>, <5>, <0>],
<5>: [<1>, <2>],
<0>: [<2>, <4>],
<4>: [<0>, <3>],
<3>: [<4>]}","Node <1> is connected to nodes <2>, <5>.
Node <2> is connected to nodes <1>, <5>, <0>.
Node <5> is connected to nodes <1>, <2>.
Node <0> is connected to nodes <2>, <4>.
Node <4> is connected to nodes <0>, <3>.
Node <3> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <2>, <0>, <4>, <3>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<1>, <2>].
Visit node <2>. Neighors of node <2>: [<1>, <5>, <0>].
Visit node <0>. Neighors of node <0>: [<2>, <4>].
Visit node <4>. Neighors of node <4>: [<0>, <3>].
Visit node <3>. Neighors of node <3>: [<4>].
Visit node <1>. Neighors of node <1>: [<2>, <5>].
So the DFS traversal is ","('[[<5>, <2>, <0>, <3>, <1>, <4>], [<5>, <2>, <0>, <4>, <3>, <1>], [<5>, <2>, <3>, <1>, <0>, <4>], [<5>, <2>, <1>, <4>, <3>, <0>]]',)",1,132
DFS,"[(<2>, <1>), (<2>, <3>), (<2>, <0>), (<0>, <4>)]","{<2>: [<1>, <3>, <0>],
<1>: [<2>],
<3>: [<2>],
<0>: [<2>, <4>],
<4>: [<0>]}","Node <2> is connected to nodes <1>, <3>, <0>.
Node <1> is connected to node <2>.
Node <3> is connected to node <2>.
Node <0> is connected to nodes <2>, <4>.
Node <4> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <2>, <0>, <4>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<2>].
Visit node <2>. Neighors of node <2>: [<1>, <3>, <0>].
Visit node <0>. Neighors of node <0>: [<2>, <4>].
Visit node <4>. Neighors of node <4>: [<0>].
Visit node <3>. Neighors of node <3>: [<2>].
So the DFS traversal is ","('[[<1>, <2>, <4>, <3>, <0>], [<1>, <0>, <2>, <3>, <4>], [<1>, <3>, <2>, <0>, <4>], [<1>, <2>, <0>, <4>, <3>]]',)",3,133
DFS,"[(<5>, <4>), (<5>, <6>), (<4>, <3>), (<4>, <2>), (<4>, <1>), (<6>, <3>), (<1>, <0>)]","{<5>: [<4>, <6>],
<4>: [<5>, <3>, <2>, <1>],
<6>: [<5>, <3>],
<3>: [<4>, <6>],
<2>: [<4>],
<1>: [<4>, <0>],
<0>: [<1>]}","Node <5> is connected to nodes <4>, <6>.
Node <4> is connected to nodes <5>, <3>, <2>, <1>.
Node <6> is connected to nodes <5>, <3>.
Node <3> is connected to nodes <4>, <6>.
Node <2> is connected to node <4>.
Node <1> is connected to nodes <4>, <0>.
Node <0> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <0>, <4>, <2>, <3>, <6>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<4>, <0>].
Visit node <0>. Neighors of node <0>: [<1>].
Visit node <4>. Neighors of node <4>: [<5>, <3>, <2>, <1>].
Visit node <2>. Neighors of node <2>: [<4>].
Visit node <3>. Neighors of node <3>: [<4>, <6>].
Visit node <6>. Neighors of node <6>: [<5>, <3>].
Visit node <5>. Neighors of node <5>: [<4>, <6>].
So the DFS traversal is ","('[[<1>, <0>, <4>, <2>, <3>, <5>, <6>], [<1>, <5>, <0>, <4>, <2>, <3>, <6>], [<1>, <0>, <4>, <2>, <3>, <6>, <5>], [<1>, <0>, <6>, <5>, <4>, <2>, <3>]]',)",2,134
DFS,"[(<1>, <2>), (<1>, <4>), (<2>, <4>), (<4>, <3>), (<3>, <2>), (<3>, <4>), (<3>, <1>), (<0>, <2>)]","{<1>: [<2>, <4>],
<2>: [<4>],
<4>: [<3>],
<3>: [<2>, <4>, <1>],
<0>: [<2>]}","Node <1> is connected to nodes <2>, <4>.
Node <2> is connected to node <4>.
Node <4> is connected to node <3>.
Node <3> is connected to nodes <2>, <4>, <1>.
Node <0> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>]",5,8,True,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <2>, <4>, <3>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <2>. Neighors of node <2>: [<4>].
Visit node <4>. Neighors of node <4>: [<3>].
Visit node <3>. Neighors of node <3>: [<2>, <4>, <1>].
Visit node <1>. Neighors of node <1>: [<2>, <4>].
So the DFS traversal is ","('[[<0>, <2>, <4>, <3>, <1>], [<0>, <1>, <4>, <2>, <3>], [<0>, <1>, <2>, <4>, <3>], [<0>, <2>, <1>, <4>, <3>]]',)",0,135
DFS,"[(<1>, <0>), (<1>, <2>), (<1>, <5>), (<1>, <4>), (<4>, <3>)]","{<1>: [<0>, <2>, <5>, <4>],
<0>: [<1>],
<2>: [<1>],
<5>: [<1>],
<4>: [<1>, <3>],
<3>: [<4>]}","Node <1> is connected to nodes <0>, <2>, <5>, <4>.
Node <0> is connected to node <1>.
Node <2> is connected to node <1>.
Node <5> is connected to node <1>.
Node <4> is connected to nodes <1>, <3>.
Node <3> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <1>, <4>, <3>, <2>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<1>].
Visit node <1>. Neighors of node <1>: [<0>, <2>, <5>, <4>].
Visit node <4>. Neighors of node <4>: [<1>, <3>].
Visit node <3>. Neighors of node <3>: [<4>].
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <0>. Neighors of node <0>: [<1>].
So the DFS traversal is ","('[[<5>, <1>, <4>, <0>, <3>, <2>], [<5>, <1>, <3>, <2>, <0>, <4>], [<5>, <1>, <2>, <0>, <4>, <3>], [<5>, <1>, <4>, <3>, <2>, <0>]]',)",3,136
DFS,"[(<5>, <1>), (<5>, <4>), (<5>, <0>), (<5>, <3>), (<1>, <4>), (<1>, <0>), (<1>, <3>), (<4>, <2>), (<4>, <0>), (<4>, <3>), (<0>, <2>), (<0>, <3>)]","{<5>: [<1>, <4>, <0>, <3>],
<1>: [<5>, <4>, <0>, <3>],
<4>: [<5>, <2>, <1>, <0>, <3>],
<0>: [<5>, <2>, <1>, <4>, <3>],
<3>: [<5>, <1>, <4>, <0>],
<2>: [<4>, <0>]}","Node <5> is connected to nodes <1>, <4>, <0>, <3>.
Node <1> is connected to nodes <5>, <4>, <0>, <3>.
Node <4> is connected to nodes <5>, <2>, <1>, <0>, <3>.
Node <0> is connected to nodes <5>, <2>, <1>, <4>, <3>.
Node <3> is connected to nodes <5>, <1>, <4>, <0>.
Node <2> is connected to nodes <4>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,12,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <0>, <3>, <4>, <1>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<4>, <0>].
Visit node <0>. Neighors of node <0>: [<5>, <2>, <1>, <4>, <3>].
Visit node <3>. Neighors of node <3>: [<5>, <1>, <4>, <0>].
Visit node <4>. Neighors of node <4>: [<5>, <2>, <1>, <0>, <3>].
Visit node <1>. Neighors of node <1>: [<5>, <4>, <0>, <3>].
Visit node <5>. Neighors of node <5>: [<1>, <4>, <0>, <3>].
So the DFS traversal is ","('[[<2>, <0>, <3>, <4>, <1>, <5>], [<2>, <3>, <5>, <4>, <0>, <1>], [<2>, <0>, <3>, <5>, <4>, <1>], [<2>, <0>, <1>, <5>, <3>, <4>]]',)",0,137
DFS,"[(<4>, <0>), (<4>, <2>), (<4>, <5>), (<4>, <1>), (<0>, <5>), (<0>, <1>), (<0>, <3>), (<2>, <5>), (<2>, <3>), (<5>, <3>), (<1>, <3>)]","{<4>: [<0>, <2>, <5>, <1>],
<0>: [<4>, <5>, <1>, <3>],
<2>: [<4>, <5>, <3>],
<5>: [<4>, <0>, <2>, <3>],
<1>: [<4>, <0>, <3>],
<3>: [<0>, <2>, <5>, <1>]}","Node <4> is connected to nodes <0>, <2>, <5>, <1>.
Node <0> is connected to nodes <4>, <5>, <1>, <3>.
Node <2> is connected to nodes <4>, <5>, <3>.
Node <5> is connected to nodes <4>, <0>, <2>, <3>.
Node <1> is connected to nodes <4>, <0>, <3>.
Node <3> is connected to nodes <0>, <2>, <5>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,11,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <1>, <0>, <5>, <2>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<0>, <2>, <5>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <0>, <3>].
Visit node <0>. Neighors of node <0>: [<4>, <5>, <1>, <3>].
Visit node <5>. Neighors of node <5>: [<4>, <0>, <2>, <3>].
Visit node <2>. Neighors of node <2>: [<4>, <5>, <3>].
Visit node <4>. Neighors of node <4>: [<0>, <2>, <5>, <1>].
So the DFS traversal is ","('[[<3>, <4>, <1>, <2>, <5>, <0>], [<3>, <1>, <0>, <5>, <2>, <4>], [<3>, <1>, <0>, <5>, <2>, <4>], [<3>, <1>, <2>, <4>, <0>, <5>]]',)",1,138
DFS,"[(<5>, <0>), (<5>, <4>), (<0>, <4>), (<0>, <2>), (<0>, <5>), (<4>, <2>), (<4>, <5>), (<4>, <1>), (<4>, <0>), (<1>, <0>), (<1>, <3>), (<1>, <4>), (<1>, <5>), (<3>, <4>), (<3>, <5>), (<2>, <5>), (<2>, <4>)]","{<5>: [<0>, <4>],
<0>: [<4>, <2>, <5>],
<4>: [<2>, <5>, <1>, <0>],
<1>: [<0>, <3>, <4>, <5>],
<3>: [<4>, <5>],
<2>: [<5>, <4>]}","Node <5> is connected to nodes <0>, <4>.
Node <0> is connected to nodes <4>, <2>, <5>.
Node <4> is connected to nodes <2>, <5>, <1>, <0>.
Node <1> is connected to nodes <0>, <3>, <4>, <5>.
Node <3> is connected to nodes <4>, <5>.
Node <2> is connected to nodes <5>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,17,True,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <4>, <0>, <5>, <1>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<5>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <5>, <1>, <0>].
Visit node <0>. Neighors of node <0>: [<4>, <2>, <5>].
Visit node <5>. Neighors of node <5>: [<0>, <4>].
Visit node <1>. Neighors of node <1>: [<0>, <3>, <4>, <5>].
Visit node <3>. Neighors of node <3>: [<4>, <5>].
So the DFS traversal is ","('[[<2>, <1>, <3>, <4>, <0>, <5>], [<2>, <4>, <0>, <5>, <1>, <3>], [<2>, <4>, <0>, <5>, <3>, <1>], [<2>, <4>, <1>, <3>, <0>, <5>]]',)",1,139
DFS,"[(<4>, <5>), (<4>, <2>), (<5>, <1>), (<2>, <0>), (<2>, <3>)]","{<4>: [<5>, <2>],
<5>: [<4>, <1>],
<2>: [<4>, <0>, <3>],
<1>: [<5>],
<0>: [<2>],
<3>: [<2>]}","Node <4> is connected to nodes <5>, <2>.
Node <5> is connected to nodes <4>, <1>.
Node <2> is connected to nodes <4>, <0>, <3>.
Node <1> is connected to node <5>.
Node <0> is connected to node <2>.
Node <3> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <1>, <4>, <2>, <3>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<4>, <1>].
Visit node <1>. Neighors of node <1>: [<5>].
Visit node <4>. Neighors of node <4>: [<5>, <2>].
Visit node <2>. Neighors of node <2>: [<4>, <0>, <3>].
Visit node <3>. Neighors of node <3>: [<2>].
Visit node <0>. Neighors of node <0>: [<2>].
So the DFS traversal is ","('[[<5>, <1>, <4>, <0>, <2>, <3>], [<5>, <1>, <3>, <0>, <4>, <2>], [<5>, <3>, <4>, <0>, <1>, <2>], [<5>, <1>, <4>, <2>, <3>, <0>]]',)",3,140
DFS,"[(<0>, <4>), (<0>, <1>), (<0>, <3>), (<0>, <2>), (<4>, <5>)]","{<0>: [<4>, <1>, <3>, <2>],
<4>: [<0>, <5>],
<1>: [<0>],
<3>: [<0>],
<2>: [<0>],
<5>: [<4>]}","Node <0> is connected to nodes <4>, <1>, <3>, <2>.
Node <4> is connected to nodes <0>, <5>.
Node <1> is connected to node <0>.
Node <3> is connected to node <0>.
Node <2> is connected to node <0>.
Node <5> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <4>, <0>, <2>, <3>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<4>].
Visit node <4>. Neighors of node <4>: [<0>, <5>].
Visit node <0>. Neighors of node <0>: [<4>, <1>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<0>].
Visit node <3>. Neighors of node <3>: [<0>].
Visit node <1>. Neighors of node <1>: [<0>].
So the DFS traversal is ","('[[<5>, <4>, <3>, <1>, <0>, <2>], [<5>, <4>, <0>, <2>, <3>, <1>], [<5>, <4>, <0>, <3>, <1>, <2>], [<5>, <3>, <1>, <0>, <2>, <4>]]',)",1,141
DFS,"[(<1>, <4>), (<1>, <3>), (<1>, <0>), (<0>, <2>)]","{<1>: [<4>, <3>, <0>],
<4>: [<1>],
<3>: [<1>],
<0>: [<1>, <2>],
<2>: [<0>]}","Node <1> is connected to nodes <4>, <3>, <0>.
Node <4> is connected to node <1>.
Node <3> is connected to node <1>.
Node <0> is connected to nodes <1>, <2>.
Node <2> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <2>, <1>, <3>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<1>, <2>].
Visit node <2>. Neighors of node <2>: [<0>].
Visit node <1>. Neighors of node <1>: [<4>, <3>, <0>].
Visit node <3>. Neighors of node <3>: [<1>].
Visit node <4>. Neighors of node <4>: [<1>].
So the DFS traversal is ","('[[<0>, <4>, <2>, <1>, <3>], [<0>, <2>, <1>, <3>, <4>], [<0>, <2>, <1>, <3>, <4>], [<0>, <1>, <2>, <3>, <4>]]',)",1,142
DFS,"[(<4>, <2>), (<4>, <3>), (<2>, <0>), (<3>, <1>), (<3>, <5>)]","{<4>: [<2>, <3>],
<2>: [<4>, <0>],
<3>: [<4>, <1>, <5>],
<0>: [<2>],
<1>: [<3>],
<5>: [<3>]}","Node <4> is connected to nodes <2>, <3>.
Node <2> is connected to nodes <4>, <0>.
Node <3> is connected to nodes <4>, <1>, <5>.
Node <0> is connected to node <2>.
Node <1> is connected to node <3>.
Node <5> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <0>, <4>, <3>, <5>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<4>, <0>].
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <4>. Neighors of node <4>: [<2>, <3>].
Visit node <3>. Neighors of node <3>: [<4>, <1>, <5>].
Visit node <5>. Neighors of node <5>: [<3>].
Visit node <1>. Neighors of node <1>: [<3>].
So the DFS traversal is ","('[[<2>, <5>, <4>, <1>, <3>, <0>], [<2>, <0>, <5>, <1>, <4>, <3>], [<2>, <0>, <4>, <3>, <5>, <1>], [<2>, <0>, <4>, <1>, <5>, <3>]]',)",2,143
DFS,"[(<4>, <5>), (<4>, <3>), (<5>, <1>), (<5>, <2>), (<1>, <2>), (<2>, <0>)]","{<4>: [<5>, <3>],
<5>: [<4>, <1>, <2>],
<3>: [<4>],
<1>: [<5>, <2>],
<2>: [<5>, <1>, <0>],
<0>: [<2>]}","Node <4> is connected to nodes <5>, <3>.
Node <5> is connected to nodes <4>, <1>, <2>.
Node <3> is connected to node <4>.
Node <1> is connected to nodes <5>, <2>.
Node <2> is connected to nodes <5>, <1>, <0>.
Node <0> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <0>, <1>, <5>, <4>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<5>, <1>, <0>].
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <1>. Neighors of node <1>: [<5>, <2>].
Visit node <5>. Neighors of node <5>: [<4>, <1>, <2>].
Visit node <4>. Neighors of node <4>: [<5>, <3>].
Visit node <3>. Neighors of node <3>: [<4>].
So the DFS traversal is ","('[[<2>, <0>, <1>, <3>, <5>, <4>], [<2>, <0>, <1>, <5>, <4>, <3>], [<2>, <3>, <1>, <4>, <0>, <5>], [<2>, <0>, <4>, <3>, <1>, <5>]]',)",1,144
DFS,"[(<2>, <4>), (<2>, <1>), (<4>, <0>), (<4>, <3>)]","{<2>: [<4>, <1>],
<4>: [<2>, <0>, <3>],
<1>: [<2>],
<0>: [<4>],
<3>: [<4>]}","Node <2> is connected to nodes <4>, <1>.
Node <4> is connected to nodes <2>, <0>, <3>.
Node <1> is connected to node <2>.
Node <0> is connected to node <4>.
Node <3> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <4>, <0>, <2>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<4>].
Visit node <4>. Neighors of node <4>: [<2>, <0>, <3>].
Visit node <0>. Neighors of node <0>: [<4>].
Visit node <2>. Neighors of node <2>: [<4>, <1>].
Visit node <1>. Neighors of node <1>: [<2>].
So the DFS traversal is ","('[[<3>, <1>, <4>, <0>, <2>], [<3>, <4>, <2>, <1>, <0>], [<3>, <4>, <0>, <2>, <1>], [<3>, <4>, <1>, <2>, <0>]]',)",2,145
DFS,"[(<3>, <0>), (<3>, <4>), (<0>, <2>), (<0>, <1>), (<2>, <1>)]","{<3>: [<0>, <4>],
<0>: [<3>, <2>, <1>],
<4>: [<3>],
<2>: [<0>, <1>],
<1>: [<0>, <2>]}","Node <3> is connected to nodes <0>, <4>.
Node <0> is connected to nodes <3>, <2>, <1>.
Node <4> is connected to node <3>.
Node <2> is connected to nodes <0>, <1>.
Node <1> is connected to nodes <0>, <2>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <1>, <0>, <3>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<0>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <2>].
Visit node <0>. Neighors of node <0>: [<3>, <2>, <1>].
Visit node <3>. Neighors of node <3>: [<0>, <4>].
Visit node <4>. Neighors of node <4>: [<3>].
So the DFS traversal is ","('[[<2>, <4>, <0>, <1>, <3>], [<2>, <1>, <4>, <3>, <0>], [<2>, <1>, <0>, <3>, <4>], [<2>, <4>, <1>, <0>, <3>]]',)",2,146
DFS,"[(<3>, <6>), (<3>, <5>), (<5>, <4>), (<5>, <1>), (<5>, <2>), (<4>, <0>)]","{<3>: [<6>, <5>],
<6>: [<3>],
<5>: [<3>, <4>, <1>, <2>],
<4>: [<5>, <0>],
<1>: [<5>],
<2>: [<5>],
<0>: [<4>]}","Node <3> is connected to nodes <6>, <5>.
Node <6> is connected to node <3>.
Node <5> is connected to nodes <3>, <4>, <1>, <2>.
Node <4> is connected to nodes <5>, <0>.
Node <1> is connected to node <5>.
Node <2> is connected to node <5>.
Node <0> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <4>, <5>, <2>, <1>, <3>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<4>].
Visit node <4>. Neighors of node <4>: [<5>, <0>].
Visit node <5>. Neighors of node <5>: [<3>, <4>, <1>, <2>].
Visit node <2>. Neighors of node <2>: [<5>].
Visit node <1>. Neighors of node <1>: [<5>].
Visit node <3>. Neighors of node <3>: [<6>, <5>].
Visit node <6>. Neighors of node <6>: [<3>].
So the DFS traversal is ","('[[<0>, <4>, <5>, <3>, <1>, <6>, <2>], [<0>, <1>, <4>, <2>, <5>, <6>, <3>], [<0>, <4>, <5>, <2>, <1>, <3>, <6>], [<0>, <4>, <3>, <6>, <5>, <2>, <1>]]',)",2,147
DFS,"[(<0>, <3>), (<0>, <6>), (<0>, <1>), (<0>, <4>), (<0>, <5>), (<4>, <2>)]","{<0>: [<3>, <6>, <1>, <4>, <5>],
<3>: [<0>],
<6>: [<0>],
<1>: [<0>],
<4>: [<0>, <2>],
<5>: [<0>],
<2>: [<4>]}","Node <0> is connected to nodes <3>, <6>, <1>, <4>, <5>.
Node <3> is connected to node <0>.
Node <6> is connected to node <0>.
Node <1> is connected to node <0>.
Node <4> is connected to nodes <0>, <2>.
Node <5> is connected to node <0>.
Node <2> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <4>, <0>, <5>, <1>, <6>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<4>].
Visit node <4>. Neighors of node <4>: [<0>, <2>].
Visit node <0>. Neighors of node <0>: [<3>, <6>, <1>, <4>, <5>].
Visit node <5>. Neighors of node <5>: [<0>].
Visit node <1>. Neighors of node <1>: [<0>].
Visit node <6>. Neighors of node <6>: [<0>].
Visit node <3>. Neighors of node <3>: [<0>].
So the DFS traversal is ","('[[<2>, <0>, <4>, <5>, <3>, <6>, <1>], [<2>, <4>, <0>, <5>, <1>, <6>, <3>], [<2>, <4>, <0>, <3>, <5>, <1>, <6>], [<2>, <4>, <6>, <3>, <0>, <5>, <1>]]',)",1,148
DFS,"[(<3>, <2>), (<3>, <4>), (<2>, <5>), (<4>, <6>), (<4>, <3>), (<4>, <2>), (<5>, <1>), (<5>, <4>), (<5>, <6>), (<1>, <3>), (<0>, <6>), (<0>, <1>)]","{<3>: [<2>, <4>],
<2>: [<5>],
<4>: [<6>, <3>, <2>],
<5>: [<1>, <4>, <6>],
<1>: [<3>],
<6>: [],
<0>: [<6>, <1>]}","Node <3> is connected to nodes <2>, <4>.
Node <2> is connected to node <5>.
Node <4> is connected to nodes <6>, <3>, <2>.
Node <5> is connected to nodes <1>, <4>, <6>.
Node <1> is connected to node <3>.
Node <0> is connected to nodes <6>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,12,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <3>, <4>, <2>, <5>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>].
Visit node <3>. Neighors of node <3>: [<2>, <4>].
Visit node <4>. Neighors of node <4>: [<6>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<5>].
Visit node <5>. Neighors of node <5>: [<1>, <4>, <6>].
Visit node <6>. Neighors of node <6>: [].
So the DFS traversal is ","('[[<1>, <3>, <4>, <6>, <2>, <5>], [<1>, <3>, <4>, <2>, <5>, <6>], [<1>, <3>, <2>, <6>, <5>, <4>], [<1>, <3>, <5>, <6>, <4>, <2>]]',)",1,149
DFS,"[(<3>, <0>), (<0>, <4>), (<0>, <1>), (<4>, <2>)]","{<3>: [<0>],
<0>: [<3>, <4>, <1>],
<4>: [<0>, <2>],
<1>: [<0>],
<2>: [<4>]}","Node <3> is connected to node <0>.
Node <0> is connected to nodes <3>, <4>, <1>.
Node <4> is connected to nodes <0>, <2>.
Node <1> is connected to node <0>.
Node <2> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <0>, <4>, <2>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<0>].
Visit node <0>. Neighors of node <0>: [<3>, <4>, <1>].
Visit node <4>. Neighors of node <4>: [<0>, <2>].
Visit node <2>. Neighors of node <2>: [<4>].
Visit node <3>. Neighors of node <3>: [<0>].
So the DFS traversal is ","('[[<1>, <3>, <0>, <4>, <2>], [<1>, <4>, <2>, <0>, <3>], [<1>, <0>, <4>, <2>, <3>], [<1>, <0>, <3>, <4>, <2>]]',)",2,150
DFS,"[(<2>, <1>), (<2>, <4>), (<1>, <3>), (<1>, <2>), (<4>, <1>), (<4>, <3>), (<3>, <0>), (<3>, <1>), (<0>, <4>), (<0>, <2>), (<0>, <1>)]","{<2>: [<1>, <4>],
<1>: [<3>, <2>],
<4>: [<1>, <3>],
<3>: [<0>, <1>],
<0>: [<4>, <2>, <1>]}","Node <2> is connected to nodes <1>, <4>.
Node <1> is connected to nodes <3>, <2>.
Node <4> is connected to nodes <1>, <3>.
Node <3> is connected to nodes <0>, <1>.
Node <0> is connected to nodes <4>, <2>, <1>.","[<0>, <1>, <2>, <3>, <4>]",5,11,True,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <3>, <1>, <2>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<1>, <3>].
Visit node <3>. Neighors of node <3>: [<0>, <1>].
Visit node <1>. Neighors of node <1>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<1>, <4>].
Visit node <0>. Neighors of node <0>: [<4>, <2>, <1>].
So the DFS traversal is ","('[[<4>, <3>, <2>, <1>, <0>], [<4>, <0>, <3>, <1>, <2>], [<4>, <2>, <3>, <0>, <1>], [<4>, <3>, <1>, <2>, <0>]]',)",3,151
DFS,"[(<4>, <3>), (<4>, <0>), (<3>, <0>), (<0>, <5>), (<5>, <2>), (<2>, <1>)]","{<4>: [<3>, <0>],
<3>: [<4>, <0>],
<0>: [<4>, <3>, <5>],
<5>: [<0>, <2>],
<2>: [<5>, <1>],
<1>: [<2>]}","Node <4> is connected to nodes <3>, <0>.
Node <3> is connected to nodes <4>, <0>.
Node <0> is connected to nodes <4>, <3>, <5>.
Node <5> is connected to nodes <0>, <2>.
Node <2> is connected to nodes <5>, <1>.
Node <1> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <2>, <1>, <0>, <3>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<0>, <2>].
Visit node <2>. Neighors of node <2>: [<5>, <1>].
Visit node <1>. Neighors of node <1>: [<2>].
Visit node <0>. Neighors of node <0>: [<4>, <3>, <5>].
Visit node <3>. Neighors of node <3>: [<4>, <0>].
Visit node <4>. Neighors of node <4>: [<3>, <0>].
So the DFS traversal is ","('[[<5>, <2>, <1>, <4>, <3>, <0>], [<5>, <4>, <0>, <2>, <1>, <3>], [<5>, <2>, <1>, <0>, <3>, <4>], [<5>, <2>, <3>, <4>, <1>, <0>]]',)",2,152
DFS,"[(<0>, <4>), (<0>, <2>), (<0>, <3>), (<0>, <1>), (<4>, <5>), (<4>, <6>), (<4>, <1>), (<2>, <6>), (<2>, <1>), (<1>, <5>)]","{<0>: [<4>, <2>, <3>, <1>],
<4>: [<0>, <5>, <6>, <1>],
<2>: [<0>, <6>, <1>],
<3>: [<0>],
<1>: [<0>, <4>, <5>, <2>],
<5>: [<4>, <1>],
<6>: [<4>, <2>]}","Node <0> is connected to nodes <4>, <2>, <3>, <1>.
Node <4> is connected to nodes <0>, <5>, <6>, <1>.
Node <2> is connected to nodes <0>, <6>, <1>.
Node <3> is connected to node <0>.
Node <1> is connected to nodes <0>, <4>, <5>, <2>.
Node <5> is connected to nodes <4>, <1>.
Node <6> is connected to nodes <4>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <0>, <1>, <2>, <6>, <4>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<0>].
Visit node <0>. Neighors of node <0>: [<4>, <2>, <3>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <4>, <5>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <6>, <1>].
Visit node <6>. Neighors of node <6>: [<4>, <2>].
Visit node <4>. Neighors of node <4>: [<0>, <5>, <6>, <1>].
Visit node <5>. Neighors of node <5>: [<4>, <1>].
So the DFS traversal is ","('[[<3>, <6>, <4>, <2>, <5>, <0>, <1>], [<3>, <0>, <1>, <2>, <6>, <4>, <5>], [<3>, <0>, <1>, <2>, <4>, <6>, <5>], [<3>, <0>, <4>, <5>, <1>, <2>, <6>]]',)",1,153
DFS,"[(<0>, <1>), (<0>, <4>), (<4>, <3>), (<4>, <2>), (<3>, <5>)]","{<0>: [<1>, <4>],
<1>: [<0>],
<4>: [<0>, <3>, <2>],
<3>: [<4>, <5>],
<5>: [<3>],
<2>: [<4>]}","Node <0> is connected to nodes <1>, <4>.
Node <1> is connected to node <0>.
Node <4> is connected to nodes <0>, <3>, <2>.
Node <3> is connected to nodes <4>, <5>.
Node <5> is connected to node <3>.
Node <2> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <2>, <3>, <5>, <0>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<0>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<4>].
Visit node <3>. Neighors of node <3>: [<4>, <5>].
Visit node <5>. Neighors of node <5>: [<3>].
Visit node <0>. Neighors of node <0>: [<1>, <4>].
Visit node <1>. Neighors of node <1>: [<0>].
So the DFS traversal is ","('[[<4>, <2>, <0>, <1>, <3>, <5>], [<4>, <2>, <3>, <5>, <0>, <1>], [<4>, <5>, <3>, <0>, <2>, <1>], [<4>, <2>, <3>, <0>, <5>, <1>]]',)",1,154
DFS,"[(<2>, <5>), (<2>, <4>), (<5>, <3>), (<5>, <4>), (<5>, <0>), (<5>, <1>), (<5>, <6>), (<4>, <0>), (<4>, <1>), (<3>, <0>), (<3>, <1>), (<0>, <1>)]","{<2>: [<5>, <4>],
<5>: [<2>, <3>, <4>, <0>, <1>, <6>],
<4>: [<2>, <5>, <0>, <1>],
<3>: [<5>, <0>, <1>],
<0>: [<3>, <5>, <4>, <1>],
<1>: [<3>, <5>, <4>, <0>],
<6>: [<5>]}","Node <2> is connected to nodes <5>, <4>.
Node <5> is connected to nodes <2>, <3>, <4>, <0>, <1>, <6>.
Node <4> is connected to nodes <2>, <5>, <0>, <1>.
Node <3> is connected to nodes <5>, <0>, <1>.
Node <0> is connected to nodes <3>, <5>, <4>, <1>.
Node <1> is connected to nodes <3>, <5>, <4>, <0>.
Node <6> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,12,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <4>, <5>, <6>, <3>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<3>, <5>, <4>, <1>].
Visit node <1>. Neighors of node <1>: [<3>, <5>, <4>, <0>].
Visit node <4>. Neighors of node <4>: [<2>, <5>, <0>, <1>].
Visit node <5>. Neighors of node <5>: [<2>, <3>, <4>, <0>, <1>, <6>].
Visit node <6>. Neighors of node <6>: [<5>].
Visit node <3>. Neighors of node <3>: [<5>, <0>, <1>].
Visit node <2>. Neighors of node <2>: [<5>, <4>].
So the DFS traversal is ","('[[<0>, <1>, <4>, <2>, <3>, <5>, <6>], [<0>, <1>, <4>, <5>, <6>, <3>, <2>], [<0>, <1>, <3>, <2>, <4>, <5>, <6>], [<0>, <1>, <6>, <2>, <5>, <3>, <4>]]',)",1,155
DFS,"[(<2>, <1>), (<1>, <6>), (<6>, <3>), (<6>, <0>), (<3>, <4>), (<0>, <4>), (<4>, <5>)]","{<2>: [<1>],
<1>: [<2>, <6>],
<6>: [<1>, <3>, <0>],
<3>: [<6>, <4>],
<0>: [<6>, <4>],
<4>: [<3>, <5>, <0>],
<5>: [<4>]}","Node <2> is connected to node <1>.
Node <1> is connected to nodes <2>, <6>.
Node <6> is connected to nodes <1>, <3>, <0>.
Node <3> is connected to nodes <6>, <4>.
Node <0> is connected to nodes <6>, <4>.
Node <4> is connected to nodes <3>, <5>, <0>.
Node <5> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <0>, <4>, <5>, <3>, <1>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<1>, <3>, <0>].
Visit node <0>. Neighors of node <0>: [<6>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <5>, <0>].
Visit node <5>. Neighors of node <5>: [<4>].
Visit node <3>. Neighors of node <3>: [<6>, <4>].
Visit node <1>. Neighors of node <1>: [<2>, <6>].
Visit node <2>. Neighors of node <2>: [<1>].
So the DFS traversal is ","('[[<6>, <0>, <1>, <2>, <4>, <5>, <3>], [<6>, <1>, <0>, <2>, <4>, <3>, <5>], [<6>, <0>, <4>, <5>, <3>, <1>, <2>], [<6>, <0>, <4>, <1>, <2>, <3>, <5>]]',)",2,156
DFS,"[(<0>, <4>), (<0>, <3>), (<4>, <2>), (<4>, <1>), (<2>, <1>)]","{<0>: [<4>, <3>],
<4>: [<0>, <2>, <1>],
<3>: [<0>],
<2>: [<4>, <1>],
<1>: [<4>, <2>]}","Node <0> is connected to nodes <4>, <3>.
Node <4> is connected to nodes <0>, <2>, <1>.
Node <3> is connected to node <0>.
Node <2> is connected to nodes <4>, <1>.
Node <1> is connected to nodes <4>, <2>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <1>, <2>, <0>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<0>, <2>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <2>].
Visit node <2>. Neighors of node <2>: [<4>, <1>].
Visit node <0>. Neighors of node <0>: [<4>, <3>].
Visit node <3>. Neighors of node <3>: [<0>].
So the DFS traversal is ","('[[<4>, <1>, <3>, <2>, <0>], [<4>, <0>, <3>, <1>, <2>], [<4>, <1>, <2>, <0>, <3>], [<4>, <3>, <1>, <2>, <0>]]',)",2,157
DFS,"[(<2>, <5>), (<2>, <4>), (<2>, <1>), (<5>, <0>), (<5>, <4>), (<1>, <3>)]","{<2>: [<5>, <4>, <1>],
<5>: [<2>, <0>, <4>],
<4>: [<2>, <5>],
<1>: [<2>, <3>],
<0>: [<5>],
<3>: [<1>]}","Node <2> is connected to nodes <5>, <4>, <1>.
Node <5> is connected to nodes <2>, <0>, <4>.
Node <4> is connected to nodes <2>, <5>.
Node <1> is connected to nodes <2>, <3>.
Node <0> is connected to node <5>.
Node <3> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <5>, <0>, <2>, <1>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<2>, <5>].
Visit node <5>. Neighors of node <5>: [<2>, <0>, <4>].
Visit node <0>. Neighors of node <0>: [<5>].
Visit node <2>. Neighors of node <2>: [<5>, <4>, <1>].
Visit node <1>. Neighors of node <1>: [<2>, <3>].
Visit node <3>. Neighors of node <3>: [<1>].
So the DFS traversal is ","('[[<4>, <5>, <0>, <3>, <2>, <1>], [<4>, <5>, <1>, <3>, <0>, <2>], [<4>, <1>, <5>, <3>, <0>, <2>], [<4>, <5>, <0>, <2>, <1>, <3>]]',)",3,158
DFS,"[(<3>, <0>), (<3>, <4>), (<0>, <4>), (<4>, <1>), (<2>, <1>)]","{<3>: [<0>, <4>],
<0>: [<3>, <4>],
<4>: [<3>, <0>, <1>],
<2>: [<1>],
<1>: [<2>, <4>]}","Node <3> is connected to nodes <0>, <4>.
Node <0> is connected to nodes <3>, <4>.
Node <4> is connected to nodes <3>, <0>, <1>.
Node <2> is connected to node <1>.
Node <1> is connected to nodes <2>, <4>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <1>, <4>, <0>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <1>. Neighors of node <1>: [<2>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <0>, <1>].
Visit node <0>. Neighors of node <0>: [<3>, <4>].
Visit node <3>. Neighors of node <3>: [<0>, <4>].
So the DFS traversal is ","('[[<2>, <3>, <1>, <4>, <0>], [<2>, <1>, <4>, <0>, <3>], [<2>, <1>, <0>, <3>, <4>], [<2>, <0>, <3>, <1>, <4>]]',)",1,159
DFS,"[(<1>, <4>), (<1>, <5>), (<4>, <0>), (<5>, <0>), (<0>, <2>), (<2>, <3>)]","{<1>: [<4>, <5>],
<4>: [<1>, <0>],
<5>: [<1>, <0>],
<0>: [<4>, <5>, <2>],
<2>: [<0>, <3>],
<3>: [<2>]}","Node <1> is connected to nodes <4>, <5>.
Node <4> is connected to nodes <1>, <0>.
Node <5> is connected to nodes <1>, <0>.
Node <0> is connected to nodes <4>, <5>, <2>.
Node <2> is connected to nodes <0>, <3>.
Node <3> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <0>, <2>, <3>, <5>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<1>, <0>].
Visit node <0>. Neighors of node <0>: [<4>, <5>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <3>].
Visit node <3>. Neighors of node <3>: [<2>].
Visit node <5>. Neighors of node <5>: [<1>, <0>].
Visit node <1>. Neighors of node <1>: [<4>, <5>].
So the DFS traversal is ","('[[<4>, <0>, <5>, <1>, <2>, <3>], [<4>, <0>, <2>, <3>, <5>, <1>], [<4>, <0>, <2>, <3>, <1>, <5>], [<4>, <3>, <5>, <1>, <0>, <2>]]',)",1,160
DFS,"[(<3>, <4>), (<4>, <5>), (<4>, <3>), (<0>, <1>), (<0>, <3>), (<1>, <2>), (<1>, <3>), (<1>, <4>), (<5>, <2>), (<5>, <3>), (<5>, <1>), (<2>, <3>), (<2>, <1>), (<2>, <5>)]","{<3>: [<4>],
<4>: [<5>, <3>],
<0>: [<1>, <3>],
<1>: [<2>, <3>, <4>],
<5>: [<2>, <3>, <1>],
<2>: [<3>, <1>, <5>]}","Node <3> is connected to node <4>.
Node <4> is connected to nodes <5>, <3>.
Node <0> is connected to nodes <1>, <3>.
Node <1> is connected to nodes <2>, <3>, <4>.
Node <5> is connected to nodes <2>, <3>, <1>.
Node <2> is connected to nodes <3>, <1>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,14,True,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <3>, <4>, <5>, <1>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<1>, <3>].
Visit node <3>. Neighors of node <3>: [<4>].
Visit node <4>. Neighors of node <4>: [<5>, <3>].
Visit node <5>. Neighors of node <5>: [<2>, <3>, <1>].
Visit node <1>. Neighors of node <1>: [<2>, <3>, <4>].
Visit node <2>. Neighors of node <2>: [<3>, <1>, <5>].
So the DFS traversal is ","('[[<0>, <3>, <4>, <5>, <1>, <2>], [<0>, <3>, <1>, <2>, <4>, <5>], [<0>, <3>, <4>, <1>, <2>, <5>], [<0>, <3>, <4>, <5>, <1>, <2>]]',)",3,161
DFS,"[(<3>, <0>), (<3>, <4>), (<3>, <5>), (<3>, <1>), (<4>, <2>)]","{<3>: [<0>, <4>, <5>, <1>],
<0>: [<3>],
<4>: [<3>, <2>],
<5>: [<3>],
<1>: [<3>],
<2>: [<4>]}","Node <3> is connected to nodes <0>, <4>, <5>, <1>.
Node <0> is connected to node <3>.
Node <4> is connected to nodes <3>, <2>.
Node <5> is connected to node <3>.
Node <1> is connected to node <3>.
Node <2> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <3>, <1>, <5>, <4>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<3>].
Visit node <3>. Neighors of node <3>: [<0>, <4>, <5>, <1>].
Visit node <1>. Neighors of node <1>: [<3>].
Visit node <5>. Neighors of node <5>: [<3>].
Visit node <4>. Neighors of node <4>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<4>].
So the DFS traversal is ","('[[<0>, <4>, <3>, <2>, <1>, <5>], [<0>, <3>, <4>, <2>, <1>, <5>], [<0>, <3>, <1>, <5>, <4>, <2>], [<0>, <3>, <1>, <4>, <2>, <5>]]',)",2,162
DFS,"[(<1>, <5>), (<1>, <3>), (<1>, <4>), (<1>, <6>), (<1>, <0>), (<5>, <4>), (<5>, <6>), (<3>, <4>), (<3>, <2>), (<3>, <1>), (<4>, <6>), (<4>, <5>), (<6>, <5>), (<6>, <3>), (<0>, <5>), (<0>, <3>), (<0>, <4>), (<0>, <6>), (<2>, <6>), (<2>, <0>), (<2>, <5>), (<2>, <3>), (<2>, <4>)]","{<1>: [<5>, <3>, <4>, <6>, <0>],
<5>: [<4>, <6>],
<3>: [<4>, <2>, <1>],
<4>: [<6>, <5>],
<6>: [<5>, <3>],
<0>: [<5>, <3>, <4>, <6>],
<2>: [<6>, <0>, <5>, <3>, <4>]}","Node <1> is connected to nodes <5>, <3>, <4>, <6>, <0>.
Node <5> is connected to nodes <4>, <6>.
Node <3> is connected to nodes <4>, <2>, <1>.
Node <4> is connected to nodes <6>, <5>.
Node <6> is connected to nodes <5>, <3>.
Node <0> is connected to nodes <5>, <3>, <4>, <6>.
Node <2> is connected to nodes <6>, <0>, <5>, <3>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,23,True,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <4>, <5>, <6>, <3>, <1>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<6>, <0>, <5>, <3>, <4>].
Visit node <4>. Neighors of node <4>: [<6>, <5>].
Visit node <5>. Neighors of node <5>: [<4>, <6>].
Visit node <6>. Neighors of node <6>: [<5>, <3>].
Visit node <3>. Neighors of node <3>: [<4>, <2>, <1>].
Visit node <1>. Neighors of node <1>: [<5>, <3>, <4>, <6>, <0>].
Visit node <0>. Neighors of node <0>: [<5>, <3>, <4>, <6>].
So the DFS traversal is ","('[[<2>, <6>, <4>, <1>, <0>, <3>, <5>], [<2>, <4>, <1>, <0>, <5>, <6>, <3>], [<2>, <4>, <5>, <1>, <6>, <3>, <0>], [<2>, <4>, <5>, <6>, <3>, <1>, <0>]]',)",3,163
DFS,"[(<5>, <3>), (<5>, <0>), (<5>, <4>), (<3>, <6>), (<0>, <4>), (<0>, <2>), (<0>, <1>), (<0>, <5>), (<4>, <2>), (<4>, <6>), (<4>, <5>), (<4>, <0>), (<6>, <1>), (<6>, <0>), (<6>, <4>), (<2>, <1>), (<2>, <0>), (<1>, <0>), (<1>, <4>), (<1>, <2>), (<1>, <6>)]","{<5>: [<3>, <0>, <4>],
<3>: [<6>],
<0>: [<4>, <2>, <1>, <5>],
<4>: [<2>, <6>, <5>, <0>],
<6>: [<1>, <0>, <4>],
<2>: [<1>, <0>],
<1>: [<0>, <4>, <2>, <6>]}","Node <5> is connected to nodes <3>, <0>, <4>.
Node <3> is connected to node <6>.
Node <0> is connected to nodes <4>, <2>, <1>, <5>.
Node <4> is connected to nodes <2>, <6>, <5>, <0>.
Node <6> is connected to nodes <1>, <0>, <4>.
Node <2> is connected to nodes <1>, <0>.
Node <1> is connected to nodes <0>, <4>, <2>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,21,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <6>, <4>, <0>, <5>, <3>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<0>, <4>, <2>, <6>].
Visit node <6>. Neighors of node <6>: [<1>, <0>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <6>, <5>, <0>].
Visit node <0>. Neighors of node <0>: [<4>, <2>, <1>, <5>].
Visit node <5>. Neighors of node <5>: [<3>, <0>, <4>].
Visit node <3>. Neighors of node <3>: [<6>].
Visit node <2>. Neighors of node <2>: [<1>, <0>].
So the DFS traversal is ","('[[<1>, <2>, <6>, <4>, <5>, <3>, <0>], [<1>, <6>, <4>, <5>, <2>, <0>, <3>], [<1>, <6>, <3>, <2>, <4>, <0>, <5>], [<1>, <6>, <4>, <0>, <5>, <3>, <2>]]',)",3,164
DFS,"[(<5>, <4>), (<5>, <1>), (<5>, <0>), (<4>, <5>), (<4>, <2>), (<4>, <3>), (<1>, <0>), (<1>, <2>), (<1>, <3>), (<0>, <2>), (<0>, <1>), (<2>, <3>), (<2>, <1>), (<2>, <5>), (<3>, <0>), (<3>, <2>)]","{<5>: [<4>, <1>, <0>],
<4>: [<5>, <2>, <3>],
<1>: [<0>, <2>, <3>],
<0>: [<2>, <1>],
<2>: [<3>, <1>, <5>],
<3>: [<0>, <2>]}","Node <5> is connected to nodes <4>, <1>, <0>.
Node <4> is connected to nodes <5>, <2>, <3>.
Node <1> is connected to nodes <0>, <2>, <3>.
Node <0> is connected to nodes <2>, <1>.
Node <2> is connected to nodes <3>, <1>, <5>.
Node <3> is connected to nodes <0>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,16,True,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <3>, <2>, <5>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <2>, <3>].
Visit node <3>. Neighors of node <3>: [<0>, <2>].
Visit node <2>. Neighors of node <2>: [<3>, <1>, <5>].
Visit node <5>. Neighors of node <5>: [<4>, <1>, <0>].
Visit node <4>. Neighors of node <4>: [<5>, <2>, <3>].
So the DFS traversal is ","('[[<0>, <1>, <5>, <4>, <3>, <2>], [<0>, <1>, <3>, <5>, <4>, <2>], [<0>, <5>, <4>, <2>, <1>, <3>], [<0>, <1>, <3>, <2>, <5>, <4>]]',)",3,165
DFS,"[(<1>, <5>), (<1>, <4>), (<5>, <2>), (<4>, <6>), (<2>, <3>), (<2>, <0>), (<3>, <0>)]","{<1>: [<5>, <4>],
<5>: [<1>, <2>],
<4>: [<1>, <6>],
<2>: [<5>, <3>, <0>],
<6>: [<4>],
<3>: [<2>, <0>],
<0>: [<2>, <3>]}","Node <1> is connected to nodes <5>, <4>.
Node <5> is connected to nodes <1>, <2>.
Node <4> is connected to nodes <1>, <6>.
Node <2> is connected to nodes <5>, <3>, <0>.
Node <6> is connected to node <4>.
Node <3> is connected to nodes <2>, <0>.
Node <0> is connected to nodes <2>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <0>, <2>, <5>, <1>, <4>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<2>, <0>].
Visit node <0>. Neighors of node <0>: [<2>, <3>].
Visit node <2>. Neighors of node <2>: [<5>, <3>, <0>].
Visit node <5>. Neighors of node <5>: [<1>, <2>].
Visit node <1>. Neighors of node <1>: [<5>, <4>].
Visit node <4>. Neighors of node <4>: [<1>, <6>].
Visit node <6>. Neighors of node <6>: [<4>].
So the DFS traversal is ","('[[<3>, <4>, <1>, <0>, <6>, <5>, <2>], [<3>, <0>, <2>, <4>, <1>, <6>, <5>], [<3>, <0>, <2>, <5>, <1>, <4>, <6>], [<3>, <0>, <4>, <6>, <2>, <5>, <1>]]',)",2,166
DFS,"[(<3>, <2>), (<3>, <1>), (<3>, <0>), (<2>, <4>), (<1>, <4>), (<1>, <3>), (<0>, <3>), (<0>, <2>), (<4>, <3>), (<4>, <2>)]","{<3>: [<2>, <1>, <0>],
<2>: [<4>],
<1>: [<4>, <3>],
<0>: [<3>, <2>],
<4>: [<3>, <2>]}","Node <3> is connected to nodes <2>, <1>, <0>.
Node <2> is connected to node <4>.
Node <1> is connected to nodes <4>, <3>.
Node <0> is connected to nodes <3>, <2>.
Node <4> is connected to nodes <3>, <2>.","[<0>, <1>, <2>, <3>, <4>]",5,10,True,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <0>, <2>, <4>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<2>, <1>, <0>].
Visit node <0>. Neighors of node <0>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<4>].
Visit node <4>. Neighors of node <4>: [<3>, <2>].
Visit node <1>. Neighors of node <1>: [<4>, <3>].
So the DFS traversal is ","('[[<3>, <1>, <4>, <0>, <2>], [<3>, <1>, <0>, <2>, <4>], [<3>, <0>, <2>, <4>, <1>], [<3>, <0>, <2>, <4>, <1>]]',)",3,167
DFS,"[(<3>, <5>), (<3>, <2>), (<3>, <1>), (<5>, <4>), (<5>, <0>), (<2>, <1>), (<2>, <0>), (<1>, <4>), (<1>, <0>), (<1>, <5>), (<4>, <0>), (<4>, <2>), (<4>, <3>), (<0>, <5>), (<0>, <1>)]","{<3>: [<5>, <2>, <1>],
<5>: [<4>, <0>],
<2>: [<1>, <0>],
<1>: [<4>, <0>, <5>],
<4>: [<0>, <2>, <3>],
<0>: [<5>, <1>]}","Node <3> is connected to nodes <5>, <2>, <1>.
Node <5> is connected to nodes <4>, <0>.
Node <2> is connected to nodes <1>, <0>.
Node <1> is connected to nodes <4>, <0>, <5>.
Node <4> is connected to nodes <0>, <2>, <3>.
Node <0> is connected to nodes <5>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,15,True,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <0>, <1>, <5>, <4>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<1>, <0>].
Visit node <0>. Neighors of node <0>: [<5>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <0>, <5>].
Visit node <5>. Neighors of node <5>: [<4>, <0>].
Visit node <4>. Neighors of node <4>: [<0>, <2>, <3>].
Visit node <3>. Neighors of node <3>: [<5>, <2>, <1>].
So the DFS traversal is ","('[[<2>, <0>, <1>, <3>, <5>, <4>], [<2>, <0>, <1>, <5>, <4>, <3>], [<2>, <0>, <4>, <3>, <1>, <5>], [<2>, <1>, <0>, <5>, <4>, <3>]]',)",1,168
DFS,"[(<0>, <2>), (<0>, <5>), (<2>, <4>), (<2>, <1>), (<2>, <5>), (<5>, <3>), (<5>, <4>), (<5>, <1>), (<3>, <1>), (<1>, <4>)]","{<0>: [<2>, <5>],
<2>: [<0>, <4>, <1>, <5>],
<5>: [<0>, <3>, <2>, <4>, <1>],
<3>: [<1>, <5>],
<1>: [<3>, <2>, <4>, <5>],
<4>: [<2>, <1>, <5>]}","Node <0> is connected to nodes <2>, <5>.
Node <2> is connected to nodes <0>, <4>, <1>, <5>.
Node <5> is connected to nodes <0>, <3>, <2>, <4>, <1>.
Node <3> is connected to nodes <1>, <5>.
Node <1> is connected to nodes <3>, <2>, <4>, <5>.
Node <4> is connected to nodes <2>, <1>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,10,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <5>, <1>, <2>, <0>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<2>, <1>, <5>].
Visit node <5>. Neighors of node <5>: [<0>, <3>, <2>, <4>, <1>].
Visit node <1>. Neighors of node <1>: [<3>, <2>, <4>, <5>].
Visit node <2>. Neighors of node <2>: [<0>, <4>, <1>, <5>].
Visit node <0>. Neighors of node <0>: [<2>, <5>].
Visit node <3>. Neighors of node <3>: [<1>, <5>].
So the DFS traversal is ","('[[<4>, <5>, <1>, <2>, <0>, <3>], [<4>, <5>, <0>, <3>, <1>, <2>], [<4>, <0>, <3>, <5>, <2>, <1>], [<4>, <5>, <1>, <0>, <2>, <3>]]',)",0,169
DFS,"[(<5>, <0>), (<5>, <6>), (<5>, <4>), (<0>, <6>), (<0>, <4>), (<0>, <2>), (<6>, <2>), (<6>, <1>), (<4>, <3>), (<4>, <2>), (<4>, <1>), (<2>, <3>)]","{<5>: [<0>, <6>, <4>],
<0>: [<5>, <6>, <4>, <2>],
<6>: [<5>, <0>, <2>, <1>],
<4>: [<5>, <0>, <3>, <2>, <1>],
<2>: [<0>, <3>, <6>, <4>],
<3>: [<4>, <2>],
<1>: [<6>, <4>]}","Node <5> is connected to nodes <0>, <6>, <4>.
Node <0> is connected to nodes <5>, <6>, <4>, <2>.
Node <6> is connected to nodes <5>, <0>, <2>, <1>.
Node <4> is connected to nodes <5>, <0>, <3>, <2>, <1>.
Node <2> is connected to nodes <0>, <3>, <6>, <4>.
Node <3> is connected to nodes <4>, <2>.
Node <1> is connected to nodes <6>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,12,False,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <1>, <4>, <2>, <3>, <0>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<5>, <0>, <2>, <1>].
Visit node <1>. Neighors of node <1>: [<6>, <4>].
Visit node <4>. Neighors of node <4>: [<5>, <0>, <3>, <2>, <1>].
Visit node <2>. Neighors of node <2>: [<0>, <3>, <6>, <4>].
Visit node <3>. Neighors of node <3>: [<4>, <2>].
Visit node <0>. Neighors of node <0>: [<5>, <6>, <4>, <2>].
Visit node <5>. Neighors of node <5>: [<0>, <6>, <4>].
So the DFS traversal is ","('[[<6>, <1>, <0>, <5>, <4>, <2>, <3>], [<6>, <1>, <4>, <2>, <3>, <0>, <5>], [<6>, <2>, <1>, <0>, <4>, <5>, <3>], [<6>, <1>, <4>, <0>, <5>, <3>, <2>]]',)",1,170
DFS,"[(<6>, <4>), (<6>, <0>), (<6>, <3>), (<4>, <2>), (<0>, <2>), (<3>, <5>), (<5>, <1>)]","{<6>: [<4>, <0>, <3>],
<4>: [<6>, <2>],
<0>: [<6>, <2>],
<3>: [<6>, <5>],
<2>: [<4>, <0>],
<5>: [<1>, <3>],
<1>: [<5>]}","Node <6> is connected to nodes <4>, <0>, <3>.
Node <4> is connected to nodes <6>, <2>.
Node <0> is connected to nodes <6>, <2>.
Node <3> is connected to nodes <6>, <5>.
Node <2> is connected to nodes <4>, <0>.
Node <5> is connected to nodes <1>, <3>.
Node <1> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <5>, <1>, <6>, <0>, <2>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<6>, <5>].
Visit node <5>. Neighors of node <5>: [<1>, <3>].
Visit node <1>. Neighors of node <1>: [<5>].
Visit node <6>. Neighors of node <6>: [<4>, <0>, <3>].
Visit node <0>. Neighors of node <0>: [<6>, <2>].
Visit node <2>. Neighors of node <2>: [<4>, <0>].
Visit node <4>. Neighors of node <4>: [<6>, <2>].
So the DFS traversal is ","('[[<3>, <4>, <6>, <1>, <2>, <0>, <5>], [<3>, <5>, <2>, <4>, <1>, <6>, <0>], [<3>, <5>, <1>, <6>, <0>, <2>, <4>], [<3>, <5>, <1>, <4>, <2>, <6>, <0>]]',)",2,171
DFS,"[(<2>, <5>), (<2>, <4>), (<2>, <3>), (<2>, <1>), (<5>, <0>), (<5>, <4>), (<5>, <1>), (<4>, <0>), (<4>, <3>), (<4>, <1>), (<3>, <0>), (<3>, <1>), (<1>, <0>)]","{<2>: [<5>, <4>, <3>, <1>],
<5>: [<2>, <0>, <4>, <1>],
<4>: [<2>, <5>, <0>, <3>, <1>],
<3>: [<2>, <0>, <4>, <1>],
<1>: [<2>, <5>, <0>, <4>, <3>],
<0>: [<5>, <4>, <3>, <1>]}","Node <2> is connected to nodes <5>, <4>, <3>, <1>.
Node <5> is connected to nodes <2>, <0>, <4>, <1>.
Node <4> is connected to nodes <2>, <5>, <0>, <3>, <1>.
Node <3> is connected to nodes <2>, <0>, <4>, <1>.
Node <1> is connected to nodes <2>, <5>, <0>, <4>, <3>.
Node <0> is connected to nodes <5>, <4>, <3>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,13,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <3>, <4>, <5>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<5>, <4>, <3>, <1>].
Visit node <1>. Neighors of node <1>: [<2>, <5>, <0>, <4>, <3>].
Visit node <3>. Neighors of node <3>: [<2>, <0>, <4>, <1>].
Visit node <4>. Neighors of node <4>: [<2>, <5>, <0>, <3>, <1>].
Visit node <5>. Neighors of node <5>: [<2>, <0>, <4>, <1>].
Visit node <2>. Neighors of node <2>: [<5>, <4>, <3>, <1>].
So the DFS traversal is ","('[[<0>, <1>, <3>, <4>, <5>, <2>], [<0>, <3>, <2>, <1>, <4>, <5>], [<0>, <1>, <3>, <4>, <5>, <2>], [<0>, <1>, <5>, <2>, <3>, <4>]]',)",0,172
DFS,"[(<2>, <4>), (<2>, <3>), (<2>, <6>), (<2>, <5>), (<3>, <0>), (<6>, <1>)]","{<2>: [<4>, <3>, <6>, <5>],
<4>: [<2>],
<3>: [<2>, <0>],
<6>: [<2>, <1>],
<5>: [<2>],
<0>: [<3>],
<1>: [<6>]}","Node <2> is connected to nodes <4>, <3>, <6>, <5>.
Node <4> is connected to node <2>.
Node <3> is connected to nodes <2>, <0>.
Node <6> is connected to nodes <2>, <1>.
Node <5> is connected to node <2>.
Node <0> is connected to node <3>.
Node <1> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <3>, <2>, <5>, <6>, <1>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<3>].
Visit node <3>. Neighors of node <3>: [<2>, <0>].
Visit node <2>. Neighors of node <2>: [<4>, <3>, <6>, <5>].
Visit node <5>. Neighors of node <5>: [<2>].
Visit node <6>. Neighors of node <6>: [<2>, <1>].
Visit node <1>. Neighors of node <1>: [<6>].
Visit node <4>. Neighors of node <4>: [<2>].
So the DFS traversal is ","('[[<0>, <3>, <2>, <4>, <6>, <1>, <5>], [<0>, <3>, <1>, <4>, <2>, <5>, <6>], [<0>, <3>, <2>, <5>, <6>, <1>, <4>], [<0>, <4>, <3>, <2>, <6>, <1>, <5>]]',)",2,173
DFS,"[(<0>, <2>), (<0>, <1>), (<2>, <4>), (<2>, <0>), (<1>, <0>), (<1>, <4>), (<1>, <3>), (<4>, <0>), (<4>, <2>), (<3>, <1>), (<3>, <4>)]","{<0>: [<2>, <1>],
<2>: [<4>, <0>],
<1>: [<0>, <4>, <3>],
<4>: [<0>, <2>],
<3>: [<1>, <4>]}","Node <0> is connected to nodes <2>, <1>.
Node <2> is connected to nodes <4>, <0>.
Node <1> is connected to nodes <0>, <4>, <3>.
Node <4> is connected to nodes <0>, <2>.
Node <3> is connected to nodes <1>, <4>.","[<0>, <1>, <2>, <3>, <4>]",5,11,True,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <3>, <4>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <4>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <4>].
Visit node <4>. Neighors of node <4>: [<0>, <2>].
Visit node <2>. Neighors of node <2>: [<4>, <0>].
So the DFS traversal is ","('[[<0>, <4>, <3>, <1>, <2>], [<0>, <2>, <1>, <3>, <4>], [<0>, <1>, <3>, <2>, <4>], [<0>, <1>, <3>, <4>, <2>]]',)",3,174
DFS,"[(<4>, <1>), (<4>, <5>), (<4>, <2>), (<4>, <0>), (<2>, <0>), (<0>, <3>)]","{<4>: [<1>, <5>, <2>, <0>],
<1>: [<4>],
<5>: [<4>],
<2>: [<4>, <0>],
<0>: [<4>, <2>, <3>],
<3>: [<0>]}","Node <4> is connected to nodes <1>, <5>, <2>, <0>.
Node <1> is connected to node <4>.
Node <5> is connected to node <4>.
Node <2> is connected to nodes <4>, <0>.
Node <0> is connected to nodes <4>, <2>, <3>.
Node <3> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <4>, <0>, <3>, <2>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<4>].
Visit node <4>. Neighors of node <4>: [<1>, <5>, <2>, <0>].
Visit node <0>. Neighors of node <0>: [<4>, <2>, <3>].
Visit node <3>. Neighors of node <3>: [<0>].
Visit node <2>. Neighors of node <2>: [<4>, <0>].
Visit node <5>. Neighors of node <5>: [<4>].
So the DFS traversal is ","('[[<1>, <2>, <0>, <3>, <4>, <5>], [<1>, <4>, <0>, <3>, <2>, <5>], [<1>, <4>, <2>, <5>, <0>, <3>], [<1>, <4>, <0>, <5>, <3>, <2>]]',)",1,175
DFS,"[(<4>, <2>), (<4>, <0>), (<2>, <1>), (<2>, <3>)]","{<4>: [<2>, <0>],
<2>: [<4>, <1>, <3>],
<0>: [<4>],
<1>: [<2>],
<3>: [<2>]}","Node <4> is connected to nodes <2>, <0>.
Node <2> is connected to nodes <4>, <1>, <3>.
Node <0> is connected to node <4>.
Node <1> is connected to node <2>.
Node <3> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <2>, <1>, <4>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<2>].
Visit node <2>. Neighors of node <2>: [<4>, <1>, <3>].
Visit node <1>. Neighors of node <1>: [<2>].
Visit node <4>. Neighors of node <4>: [<2>, <0>].
Visit node <0>. Neighors of node <0>: [<4>].
So the DFS traversal is ","('[[<3>, <2>, <0>, <4>, <1>], [<3>, <4>, <0>, <1>, <2>], [<3>, <2>, <1>, <4>, <0>], [<3>, <0>, <2>, <1>, <4>]]',)",2,176
DFS,"[(<0>, <3>), (<0>, <1>), (<3>, <1>), (<3>, <0>), (<1>, <4>), (<1>, <2>), (<1>, <0>), (<1>, <5>), (<5>, <3>), (<5>, <1>), (<4>, <0>), (<4>, <1>), (<2>, <5>), (<2>, <3>), (<2>, <4>)]","{<0>: [<3>, <1>],
<3>: [<1>, <0>],
<1>: [<4>, <2>, <0>, <5>],
<5>: [<3>, <1>],
<4>: [<0>, <1>],
<2>: [<5>, <3>, <4>]}","Node <0> is connected to nodes <3>, <1>.
Node <3> is connected to nodes <1>, <0>.
Node <1> is connected to nodes <4>, <2>, <0>, <5>.
Node <5> is connected to nodes <3>, <1>.
Node <4> is connected to nodes <0>, <1>.
Node <2> is connected to nodes <5>, <3>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,15,True,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <5>, <3>, <2>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<3>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <2>, <0>, <5>].
Visit node <5>. Neighors of node <5>: [<3>, <1>].
Visit node <3>. Neighors of node <3>: [<1>, <0>].
Visit node <2>. Neighors of node <2>: [<5>, <3>, <4>].
Visit node <4>. Neighors of node <4>: [<0>, <1>].
So the DFS traversal is ","('[[<0>, <1>, <2>, <4>, <5>, <3>], [<0>, <1>, <5>, <3>, <2>, <4>], [<0>, <1>, <5>, <4>, <2>, <3>], [<0>, <2>, <4>, <3>, <5>, <1>]]',)",1,177
DFS,"[(<1>, <4>), (<4>, <3>), (<3>, <2>), (<3>, <5>), (<2>, <0>), (<5>, <0>)]","{<1>: [<4>],
<4>: [<1>, <3>],
<3>: [<4>, <2>, <5>],
<2>: [<3>, <0>],
<5>: [<3>, <0>],
<0>: [<2>, <5>]}","Node <1> is connected to node <4>.
Node <4> is connected to nodes <1>, <3>.
Node <3> is connected to nodes <4>, <2>, <5>.
Node <2> is connected to nodes <3>, <0>.
Node <5> is connected to nodes <3>, <0>.
Node <0> is connected to nodes <2>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <5>, <3>, <2>, <4>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>, <5>].
Visit node <5>. Neighors of node <5>: [<3>, <0>].
Visit node <3>. Neighors of node <3>: [<4>, <2>, <5>].
Visit node <2>. Neighors of node <2>: [<3>, <0>].
Visit node <4>. Neighors of node <4>: [<1>, <3>].
Visit node <1>. Neighors of node <1>: [<4>].
So the DFS traversal is ","('[[<0>, <1>, <4>, <2>, <3>, <5>], [<0>, <5>, <4>, <1>, <3>, <2>], [<0>, <5>, <3>, <4>, <2>, <1>], [<0>, <5>, <3>, <2>, <4>, <1>]]',)",3,178
DFS,"[(<1>, <4>), (<1>, <5>), (<4>, <2>), (<5>, <3>), (<5>, <0>), (<2>, <3>)]","{<1>: [<4>, <5>],
<4>: [<1>, <2>],
<5>: [<1>, <3>, <0>],
<2>: [<4>, <3>],
<3>: [<2>, <5>],
<0>: [<5>]}","Node <1> is connected to nodes <4>, <5>.
Node <4> is connected to nodes <1>, <2>.
Node <5> is connected to nodes <1>, <3>, <0>.
Node <2> is connected to nodes <4>, <3>.
Node <3> is connected to nodes <2>, <5>.
Node <0> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <3>, <5>, <0>, <1>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<4>, <3>].
Visit node <3>. Neighors of node <3>: [<2>, <5>].
Visit node <5>. Neighors of node <5>: [<1>, <3>, <0>].
Visit node <0>. Neighors of node <0>: [<5>].
Visit node <1>. Neighors of node <1>: [<4>, <5>].
Visit node <4>. Neighors of node <4>: [<1>, <2>].
So the DFS traversal is ","('[[<2>, <3>, <1>, <4>, <5>, <0>], [<2>, <3>, <5>, <0>, <1>, <4>], [<2>, <3>, <5>, <0>, <4>, <1>], [<2>, <5>, <4>, <3>, <1>, <0>]]',)",1,179
DFS,"[(<3>, <5>), (<3>, <0>), (<3>, <4>), (<3>, <1>), (<3>, <6>), (<1>, <2>)]","{<3>: [<5>, <0>, <4>, <1>, <6>],
<5>: [<3>],
<0>: [<3>],
<4>: [<3>],
<1>: [<3>, <2>],
<6>: [<3>],
<2>: [<1>]}","Node <3> is connected to nodes <5>, <0>, <4>, <1>, <6>.
Node <5> is connected to node <3>.
Node <0> is connected to node <3>.
Node <4> is connected to node <3>.
Node <1> is connected to nodes <3>, <2>.
Node <6> is connected to node <3>.
Node <2> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <3>, <6>, <1>, <2>, <4>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<3>].
Visit node <3>. Neighors of node <3>: [<5>, <0>, <4>, <1>, <6>].
Visit node <6>. Neighors of node <6>: [<3>].
Visit node <1>. Neighors of node <1>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <4>. Neighors of node <4>: [<3>].
Visit node <5>. Neighors of node <5>: [<3>].
So the DFS traversal is ","('[[<0>, <3>, <6>, <1>, <2>, <4>, <5>], [<0>, <3>, <4>, <5>, <6>, <1>, <2>], [<0>, <3>, <6>, <5>, <1>, <2>, <4>], [<0>, <1>, <2>, <5>, <6>, <4>, <3>]]',)",0,180
DFS,"[(<4>, <6>), (<4>, <1>), (<4>, <5>), (<6>, <1>), (<6>, <5>), (<1>, <3>), (<1>, <5>), (<1>, <0>), (<1>, <2>), (<5>, <6>), (<5>, <2>), (<5>, <1>), (<5>, <3>), (<0>, <6>), (<0>, <4>), (<2>, <5>), (<2>, <4>), (<2>, <6>), (<3>, <5>), (<3>, <6>), (<3>, <1>)]","{<4>: [<6>, <1>, <5>],
<6>: [<1>, <5>],
<1>: [<3>, <5>, <0>, <2>],
<5>: [<6>, <2>, <1>, <3>],
<0>: [<6>, <4>],
<2>: [<5>, <4>, <6>],
<3>: [<5>, <6>, <1>]}","Node <4> is connected to nodes <6>, <1>, <5>.
Node <6> is connected to nodes <1>, <5>.
Node <1> is connected to nodes <3>, <5>, <0>, <2>.
Node <5> is connected to nodes <6>, <2>, <1>, <3>.
Node <0> is connected to nodes <6>, <4>.
Node <2> is connected to nodes <5>, <4>, <6>.
Node <3> is connected to nodes <5>, <6>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,21,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <2>, <6>, <5>, <3>, <4>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>, <5>, <0>, <2>].
Visit node <2>. Neighors of node <2>: [<5>, <4>, <6>].
Visit node <6>. Neighors of node <6>: [<1>, <5>].
Visit node <5>. Neighors of node <5>: [<6>, <2>, <1>, <3>].
Visit node <3>. Neighors of node <3>: [<5>, <6>, <1>].
Visit node <4>. Neighors of node <4>: [<6>, <1>, <5>].
Visit node <0>. Neighors of node <0>: [<6>, <4>].
So the DFS traversal is ","('[[<1>, <2>, <6>, <5>, <4>, <0>, <3>], [<1>, <2>, <4>, <0>, <6>, <5>, <3>], [<1>, <2>, <6>, <5>, <3>, <4>, <0>], [<1>, <5>, <3>, <6>, <4>, <2>, <0>]]',)",2,181
DFS,"[(<0>, <1>), (<0>, <5>), (<1>, <2>), (<5>, <3>), (<5>, <1>), (<3>, <2>), (<3>, <4>), (<3>, <5>), (<4>, <5>), (<4>, <0>)]","{<0>: [<1>, <5>],
<1>: [<2>],
<5>: [<3>, <1>],
<3>: [<2>, <4>, <5>],
<2>: [],
<4>: [<5>, <0>]}","Node <0> is connected to nodes <1>, <5>.
Node <1> is connected to node <2>.
Node <5> is connected to nodes <3>, <1>.
Node <3> is connected to nodes <2>, <4>, <5>.
Node <4> is connected to nodes <5>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,10,True,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <5>, <1>, <2>, <3>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<1>, <5>].
Visit node <5>. Neighors of node <5>: [<3>, <1>].
Visit node <1>. Neighors of node <1>: [<2>].
Visit node <2>. Neighors of node <2>: [].
Visit node <3>. Neighors of node <3>: [<2>, <4>, <5>].
Visit node <4>. Neighors of node <4>: [<5>, <0>].
So the DFS traversal is ","('[[<0>, <5>, <1>, <2>, <3>, <4>], [<0>, <5>, <1>, <4>, <2>, <3>], [<0>, <5>, <3>, <4>, <1>, <2>], [<0>, <1>, <2>, <3>, <4>, <5>]]',)",0,182
DFS,"[(<2>, <4>), (<2>, <0>), (<2>, <3>), (<4>, <1>), (<3>, <1>)]","{<2>: [<4>, <0>, <3>],
<4>: [<2>, <1>],
<0>: [<2>],
<3>: [<2>, <1>],
<1>: [<4>, <3>]}","Node <2> is connected to nodes <4>, <0>, <3>.
Node <4> is connected to nodes <2>, <1>.
Node <0> is connected to node <2>.
Node <3> is connected to nodes <2>, <1>.
Node <1> is connected to nodes <4>, <3>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <2>, <3>, <1>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <2>. Neighors of node <2>: [<4>, <0>, <3>].
Visit node <3>. Neighors of node <3>: [<2>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <3>].
Visit node <4>. Neighors of node <4>: [<2>, <1>].
So the DFS traversal is ","('[[<0>, <2>, <3>, <1>, <4>], [<0>, <2>, <1>, <3>, <4>], [<0>, <4>, <2>, <3>, <1>], [<0>, <3>, <1>, <2>, <4>]]',)",0,183
DFS,"[(<3>, <6>), (<3>, <1>), (<3>, <0>), (<3>, <4>), (<3>, <5>), (<6>, <0>), (<1>, <0>), (<1>, <2>), (<1>, <4>), (<0>, <5>)]","{<3>: [<6>, <1>, <0>, <4>, <5>],
<6>: [<3>, <0>],
<1>: [<3>, <0>, <2>, <4>],
<0>: [<3>, <6>, <5>, <1>],
<4>: [<3>, <1>],
<5>: [<3>, <0>],
<2>: [<1>]}","Node <3> is connected to nodes <6>, <1>, <0>, <4>, <5>.
Node <6> is connected to nodes <3>, <0>.
Node <1> is connected to nodes <3>, <0>, <2>, <4>.
Node <0> is connected to nodes <3>, <6>, <5>, <1>.
Node <4> is connected to nodes <3>, <1>.
Node <5> is connected to nodes <3>, <0>.
Node <2> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <1>, <2>, <0>, <5>, <3>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<3>, <1>].
Visit node <1>. Neighors of node <1>: [<3>, <0>, <2>, <4>].
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <0>. Neighors of node <0>: [<3>, <6>, <5>, <1>].
Visit node <5>. Neighors of node <5>: [<3>, <0>].
Visit node <3>. Neighors of node <3>: [<6>, <1>, <0>, <4>, <5>].
Visit node <6>. Neighors of node <6>: [<3>, <0>].
So the DFS traversal is ","('[[<4>, <1>, <3>, <6>, <2>, <0>, <5>], [<4>, <1>, <2>, <6>, <0>, <3>, <5>], [<4>, <5>, <0>, <6>, <1>, <3>, <2>], [<4>, <1>, <2>, <0>, <5>, <3>, <6>]]',)",3,184
DFS,"[(<0>, <4>), (<0>, <5>), (<4>, <1>), (<4>, <6>), (<5>, <2>), (<5>, <3>), (<1>, <3>)]","{<0>: [<4>, <5>],
<4>: [<0>, <1>, <6>],
<5>: [<0>, <2>, <3>],
<1>: [<4>, <3>],
<6>: [<4>],
<2>: [<5>],
<3>: [<5>, <1>]}","Node <0> is connected to nodes <4>, <5>.
Node <4> is connected to nodes <0>, <1>, <6>.
Node <5> is connected to nodes <0>, <2>, <3>.
Node <1> is connected to nodes <4>, <3>.
Node <6> is connected to node <4>.
Node <2> is connected to node <5>.
Node <3> is connected to nodes <5>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <5>, <3>, <1>, <4>, <6>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<4>, <5>].
Visit node <5>. Neighors of node <5>: [<0>, <2>, <3>].
Visit node <3>. Neighors of node <3>: [<5>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <3>].
Visit node <4>. Neighors of node <4>: [<0>, <1>, <6>].
Visit node <6>. Neighors of node <6>: [<4>].
Visit node <2>. Neighors of node <2>: [<5>].
So the DFS traversal is ","('[[<0>, <5>, <6>, <2>, <3>, <1>, <4>], [<0>, <5>, <3>, <4>, <2>, <1>, <6>], [<0>, <5>, <3>, <1>, <4>, <6>, <2>], [<0>, <2>, <5>, <1>, <4>, <6>, <3>]]',)",2,185
DFS,"[(<2>, <3>), (<2>, <0>), (<2>, <4>), (<2>, <1>), (<4>, <5>)]","{<2>: [<3>, <0>, <4>, <1>],
<3>: [<2>],
<0>: [<2>],
<4>: [<2>, <5>],
<1>: [<2>],
<5>: [<4>]}","Node <2> is connected to nodes <3>, <0>, <4>, <1>.
Node <3> is connected to node <2>.
Node <0> is connected to node <2>.
Node <4> is connected to nodes <2>, <5>.
Node <1> is connected to node <2>.
Node <5> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <5>, <2>, <1>, <0>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<2>, <5>].
Visit node <5>. Neighors of node <5>: [<4>].
Visit node <2>. Neighors of node <2>: [<3>, <0>, <4>, <1>].
Visit node <1>. Neighors of node <1>: [<2>].
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <3>. Neighors of node <3>: [<2>].
So the DFS traversal is ","('[[<4>, <5>, <2>, <1>, <0>, <3>], [<4>, <5>, <0>, <3>, <2>, <1>], [<4>, <5>, <2>, <0>, <3>, <1>], [<4>, <1>, <0>, <5>, <3>, <2>]]',)",0,186
DFS,"[(<4>, <1>), (<4>, <0>), (<1>, <2>), (<0>, <1>), (<0>, <3>), (<2>, <6>), (<6>, <1>), (<6>, <2>), (<6>, <3>), (<6>, <5>), (<3>, <0>), (<5>, <6>), (<5>, <4>)]","{<4>: [<1>, <0>],
<1>: [<2>],
<0>: [<1>, <3>],
<2>: [<6>],
<6>: [<1>, <2>, <3>, <5>],
<3>: [<0>],
<5>: [<6>, <4>]}","Node <4> is connected to nodes <1>, <0>.
Node <1> is connected to node <2>.
Node <0> is connected to nodes <1>, <3>.
Node <2> is connected to node <6>.
Node <6> is connected to nodes <1>, <2>, <3>, <5>.
Node <3> is connected to node <0>.
Node <5> is connected to nodes <6>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,13,True,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <0>, <1>, <2>, <6>, <5>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<0>].
Visit node <0>. Neighors of node <0>: [<1>, <3>].
Visit node <1>. Neighors of node <1>: [<2>].
Visit node <2>. Neighors of node <2>: [<6>].
Visit node <6>. Neighors of node <6>: [<1>, <2>, <3>, <5>].
Visit node <5>. Neighors of node <5>: [<6>, <4>].
Visit node <4>. Neighors of node <4>: [<1>, <0>].
So the DFS traversal is ","('[[<3>, <5>, <2>, <4>, <0>, <6>, <1>], [<3>, <0>, <1>, <5>, <2>, <6>, <4>], [<3>, <0>, <5>, <4>, <1>, <2>, <6>], [<3>, <0>, <1>, <2>, <6>, <5>, <4>]]',)",3,187
DFS,"[(<3>, <6>), (<3>, <1>), (<3>, <4>), (<6>, <0>), (<1>, <5>), (<1>, <4>), (<1>, <0>), (<4>, <5>), (<4>, <0>), (<4>, <2>)]","{<3>: [<6>, <1>, <4>],
<6>: [<3>, <0>],
<1>: [<3>, <5>, <4>, <0>],
<4>: [<3>, <1>, <5>, <0>, <2>],
<0>: [<6>, <1>, <4>],
<5>: [<1>, <4>],
<2>: [<4>]}","Node <3> is connected to nodes <6>, <1>, <4>.
Node <6> is connected to nodes <3>, <0>.
Node <1> is connected to nodes <3>, <5>, <4>, <0>.
Node <4> is connected to nodes <3>, <1>, <5>, <0>, <2>.
Node <0> is connected to nodes <6>, <1>, <4>.
Node <5> is connected to nodes <1>, <4>.
Node <2> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <0>, <4>, <2>, <5>, <1>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<3>, <0>].
Visit node <0>. Neighors of node <0>: [<6>, <1>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <1>, <5>, <0>, <2>].
Visit node <2>. Neighors of node <2>: [<4>].
Visit node <5>. Neighors of node <5>: [<1>, <4>].
Visit node <1>. Neighors of node <1>: [<3>, <5>, <4>, <0>].
Visit node <3>. Neighors of node <3>: [<6>, <1>, <4>].
So the DFS traversal is ","('[[<6>, <0>, <4>, <5>, <1>, <2>, <3>], [<6>, <5>, <0>, <2>, <4>, <3>, <1>], [<6>, <0>, <4>, <2>, <5>, <1>, <3>], [<6>, <0>, <1>, <3>, <4>, <2>, <5>]]',)",2,188
DFS,"[(<1>, <3>), (<1>, <0>), (<1>, <4>), (<0>, <2>)]","{<1>: [<3>, <0>, <4>],
<3>: [<1>],
<0>: [<1>, <2>],
<4>: [<1>],
<2>: [<0>]}","Node <1> is connected to nodes <3>, <0>, <4>.
Node <3> is connected to node <1>.
Node <0> is connected to nodes <1>, <2>.
Node <4> is connected to node <1>.
Node <2> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <1>, <4>, <0>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<1>].
Visit node <1>. Neighors of node <1>: [<3>, <0>, <4>].
Visit node <4>. Neighors of node <4>: [<1>].
Visit node <0>. Neighors of node <0>: [<1>, <2>].
Visit node <2>. Neighors of node <2>: [<0>].
So the DFS traversal is ","('[[<3>, <1>, <4>, <0>, <2>], [<3>, <2>, <1>, <4>, <0>], [<3>, <1>, <4>, <0>, <2>], [<3>, <4>, <2>, <1>, <0>]]',)",2,189
DFS,"[(<5>, <6>), (<5>, <4>), (<6>, <0>), (<4>, <3>), (<3>, <1>), (<1>, <2>)]","{<5>: [<6>, <4>],
<6>: [<5>, <0>],
<4>: [<5>, <3>],
<0>: [<6>],
<3>: [<4>, <1>],
<1>: [<3>, <2>],
<2>: [<1>]}","Node <5> is connected to nodes <6>, <4>.
Node <6> is connected to nodes <5>, <0>.
Node <4> is connected to nodes <5>, <3>.
Node <0> is connected to node <6>.
Node <3> is connected to nodes <4>, <1>.
Node <1> is connected to nodes <3>, <2>.
Node <2> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <2>, <3>, <4>, <5>, <6>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <3>. Neighors of node <3>: [<4>, <1>].
Visit node <4>. Neighors of node <4>: [<5>, <3>].
Visit node <5>. Neighors of node <5>: [<6>, <4>].
Visit node <6>. Neighors of node <6>: [<5>, <0>].
Visit node <0>. Neighors of node <0>: [<6>].
So the DFS traversal is ","('[[<1>, <2>, <6>, <0>, <3>, <4>, <5>], [<1>, <2>, <5>, <6>, <0>, <4>, <3>], [<1>, <2>, <3>, <4>, <5>, <6>, <0>], [<1>, <2>, <3>, <6>, <5>, <0>, <4>]]',)",2,190
DFS,"[(<0>, <1>), (<0>, <3>), (<0>, <6>), (<0>, <5>), (<0>, <2>), (<0>, <4>), (<1>, <6>), (<1>, <4>), (<3>, <6>), (<3>, <5>), (<3>, <4>), (<6>, <4>), (<2>, <4>)]","{<0>: [<1>, <3>, <6>, <5>, <2>, <4>],
<1>: [<0>, <6>, <4>],
<3>: [<0>, <6>, <5>, <4>],
<6>: [<0>, <1>, <3>, <4>],
<5>: [<0>, <3>],
<2>: [<0>, <4>],
<4>: [<0>, <1>, <3>, <6>, <2>]}","Node <0> is connected to nodes <1>, <3>, <6>, <5>, <2>, <4>.
Node <1> is connected to nodes <0>, <6>, <4>.
Node <3> is connected to nodes <0>, <6>, <5>, <4>.
Node <6> is connected to nodes <0>, <1>, <3>, <4>.
Node <5> is connected to nodes <0>, <3>.
Node <2> is connected to nodes <0>, <4>.
Node <4> is connected to nodes <0>, <1>, <3>, <6>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,13,False,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <4>, <2>, <0>, <5>, <3>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<0>, <1>, <3>, <4>].
Visit node <4>. Neighors of node <4>: [<0>, <1>, <3>, <6>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <4>].
Visit node <0>. Neighors of node <0>: [<1>, <3>, <6>, <5>, <2>, <4>].
Visit node <5>. Neighors of node <5>: [<0>, <3>].
Visit node <3>. Neighors of node <3>: [<0>, <6>, <5>, <4>].
Visit node <1>. Neighors of node <1>: [<0>, <6>, <4>].
So the DFS traversal is ","('[[<6>, <4>, <2>, <0>, <5>, <3>, <1>], [<6>, <5>, <3>, <0>, <2>, <4>, <1>], [<6>, <4>, <2>, <0>, <3>, <1>, <5>], [<6>, <4>, <3>, <1>, <2>, <0>, <5>]]',)",0,191
DFS,"[(<3>, <1>), (<1>, <5>), (<1>, <4>), (<1>, <0>), (<2>, <1>), (<2>, <5>), (<2>, <0>), (<2>, <3>), (<5>, <2>), (<0>, <2>), (<0>, <5>), (<4>, <0>), (<4>, <3>), (<4>, <1>)]","{<3>: [<1>],
<1>: [<5>, <4>, <0>],
<2>: [<1>, <5>, <0>, <3>],
<5>: [<2>],
<0>: [<2>, <5>],
<4>: [<0>, <3>, <1>]}","Node <3> is connected to node <1>.
Node <1> is connected to nodes <5>, <4>, <0>.
Node <2> is connected to nodes <1>, <5>, <0>, <3>.
Node <5> is connected to node <2>.
Node <0> is connected to nodes <2>, <5>.
Node <4> is connected to nodes <0>, <3>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,14,True,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <1>, <0>, <5>, <2>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<1>].
Visit node <1>. Neighors of node <1>: [<5>, <4>, <0>].
Visit node <0>. Neighors of node <0>: [<2>, <5>].
Visit node <5>. Neighors of node <5>: [<2>].
Visit node <2>. Neighors of node <2>: [<1>, <5>, <0>, <3>].
Visit node <4>. Neighors of node <4>: [<0>, <3>, <1>].
So the DFS traversal is ","('[[<3>, <2>, <0>, <4>, <5>, <1>], [<3>, <1>, <0>, <5>, <2>, <4>], [<3>, <1>, <0>, <5>, <4>, <2>], [<3>, <1>, <2>, <4>, <0>, <5>]]',)",1,192
DFS,"[(<0>, <3>), (<0>, <4>), (<0>, <2>), (<3>, <4>), (<3>, <2>), (<3>, <1>), (<4>, <0>), (<2>, <4>), (<1>, <3>), (<1>, <0>)]","{<0>: [<3>, <4>, <2>],
<3>: [<4>, <2>, <1>],
<4>: [<0>],
<2>: [<4>],
<1>: [<3>, <0>]}","Node <0> is connected to nodes <3>, <4>, <2>.
Node <3> is connected to nodes <4>, <2>, <1>.
Node <4> is connected to node <0>.
Node <2> is connected to node <4>.
Node <1> is connected to nodes <3>, <0>.","[<0>, <1>, <2>, <3>, <4>]",5,10,True,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <0>, <2>, <3>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<0>].
Visit node <0>. Neighors of node <0>: [<3>, <4>, <2>].
Visit node <2>. Neighors of node <2>: [<4>].
Visit node <3>. Neighors of node <3>: [<4>, <2>, <1>].
Visit node <1>. Neighors of node <1>: [<3>, <0>].
So the DFS traversal is ","('[[<4>, <1>, <0>, <2>, <3>], [<4>, <0>, <2>, <3>, <1>], [<4>, <0>, <2>, <3>, <1>], [<4>, <2>, <1>, <0>, <3>]]',)",2,193
DFS,"[(<5>, <0>), (<5>, <3>), (<5>, <6>), (<5>, <2>), (<2>, <4>), (<2>, <1>)]","{<5>: [<0>, <3>, <6>, <2>],
<0>: [<5>],
<3>: [<5>],
<6>: [<5>],
<2>: [<5>, <4>, <1>],
<4>: [<2>],
<1>: [<2>]}","Node <5> is connected to nodes <0>, <3>, <6>, <2>.
Node <0> is connected to node <5>.
Node <3> is connected to node <5>.
Node <6> is connected to node <5>.
Node <2> is connected to nodes <5>, <4>, <1>.
Node <4> is connected to node <2>.
Node <1> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <5>, <2>, <1>, <4>, <3>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<5>].
Visit node <5>. Neighors of node <5>: [<0>, <3>, <6>, <2>].
Visit node <2>. Neighors of node <2>: [<5>, <4>, <1>].
Visit node <1>. Neighors of node <1>: [<2>].
Visit node <4>. Neighors of node <4>: [<2>].
Visit node <3>. Neighors of node <3>: [<5>].
Visit node <0>. Neighors of node <0>: [<5>].
So the DFS traversal is ","('[[<6>, <1>, <4>, <3>, <2>, <5>, <0>], [<6>, <5>, <2>, <1>, <4>, <3>, <0>], [<6>, <5>, <2>, <3>, <0>, <4>, <1>], [<6>, <5>, <3>, <0>, <2>, <1>, <4>]]',)",1,194
DFS,"[(<1>, <2>), (<1>, <3>), (<2>, <3>), (<3>, <4>), (<4>, <0>)]","{<1>: [<2>, <3>],
<2>: [<1>, <3>],
<3>: [<1>, <2>, <4>],
<4>: [<3>, <0>],
<0>: [<4>]}","Node <1> is connected to nodes <2>, <3>.
Node <2> is connected to nodes <1>, <3>.
Node <3> is connected to nodes <1>, <2>, <4>.
Node <4> is connected to nodes <3>, <0>.
Node <0> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <3>, <4>, <0>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<2>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <2>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <0>].
Visit node <0>. Neighors of node <0>: [<4>].
Visit node <2>. Neighors of node <2>: [<1>, <3>].
So the DFS traversal is ","('[[<1>, <3>, <2>, <0>, <4>], [<1>, <3>, <4>, <2>, <0>], [<1>, <3>, <4>, <0>, <2>], [<1>, <2>, <3>, <4>, <0>]]',)",2,195
DFS,"[(<3>, <1>), (<1>, <0>), (<1>, <4>), (<1>, <2>)]","{<3>: [<1>],
<1>: [<3>, <0>, <4>, <2>],
<0>: [<1>],
<4>: [<1>],
<2>: [<1>]}","Node <3> is connected to node <1>.
Node <1> is connected to nodes <3>, <0>, <4>, <2>.
Node <0> is connected to node <1>.
Node <4> is connected to node <1>.
Node <2> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <1>, <2>, <0>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<1>].
Visit node <1>. Neighors of node <1>: [<3>, <0>, <4>, <2>].
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <0>. Neighors of node <0>: [<1>].
Visit node <3>. Neighors of node <3>: [<1>].
So the DFS traversal is ","('[[<4>, <3>, <1>, <2>, <0>], [<4>, <3>, <1>, <2>, <0>], [<4>, <1>, <3>, <2>, <0>], [<4>, <1>, <2>, <0>, <3>]]',)",3,196
DFS,"[(<1>, <0>), (<1>, <2>), (<2>, <4>), (<4>, <3>)]","{<1>: [<0>, <2>],
<0>: [<1>],
<2>: [<1>, <4>],
<4>: [<3>, <2>],
<3>: [<4>]}","Node <1> is connected to nodes <0>, <2>.
Node <0> is connected to node <1>.
Node <2> is connected to nodes <1>, <4>.
Node <4> is connected to nodes <3>, <2>.
Node <3> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <2>, <1>, <0>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<1>, <4>].
Visit node <1>. Neighors of node <1>: [<0>, <2>].
Visit node <0>. Neighors of node <0>: [<1>].
Visit node <3>. Neighors of node <3>: [<4>].
So the DFS traversal is ","('[[<4>, <3>, <2>, <1>, <0>], [<4>, <0>, <1>, <3>, <2>], [<4>, <2>, <1>, <0>, <3>], [<4>, <2>, <1>, <0>, <3>]]',)",3,197
DFS,"[(<4>, <3>), (<4>, <1>), (<3>, <2>), (<3>, <0>), (<1>, <4>), (<2>, <3>), (<0>, <3>)]","{<4>: [<3>, <1>],
<3>: [<2>, <0>],
<1>: [<4>],
<2>: [<3>],
<0>: [<3>]}","Node <4> is connected to nodes <3>, <1>.
Node <3> is connected to nodes <2>, <0>.
Node <1> is connected to node <4>.
Node <2> is connected to node <3>.
Node <0> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>]",5,7,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <4>, <3>, <0>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<4>].
Visit node <4>. Neighors of node <4>: [<3>, <1>].
Visit node <3>. Neighors of node <3>: [<2>, <0>].
Visit node <0>. Neighors of node <0>: [<3>].
Visit node <2>. Neighors of node <2>: [<3>].
So the DFS traversal is ","('[[<1>, <2>, <4>, <3>, <0>], [<1>, <4>, <0>, <3>, <2>], [<1>, <4>, <3>, <0>, <2>], [<1>, <2>, <0>, <4>, <3>]]',)",2,198
DFS,"[(<3>, <1>), (<3>, <0>), (<3>, <5>), (<3>, <2>), (<1>, <4>), (<1>, <0>), (<1>, <5>), (<0>, <4>), (<0>, <5>), (<0>, <2>), (<5>, <4>), (<2>, <4>)]","{<3>: [<1>, <0>, <5>, <2>],
<1>: [<3>, <4>, <0>, <5>],
<0>: [<3>, <1>, <4>, <5>, <2>],
<5>: [<3>, <1>, <4>, <0>],
<2>: [<3>, <4>, <0>],
<4>: [<1>, <0>, <5>, <2>]}","Node <3> is connected to nodes <1>, <0>, <5>, <2>.
Node <1> is connected to nodes <3>, <4>, <0>, <5>.
Node <0> is connected to nodes <3>, <1>, <4>, <5>, <2>.
Node <5> is connected to nodes <3>, <1>, <4>, <0>.
Node <2> is connected to nodes <3>, <4>, <0>.
Node <4> is connected to nodes <1>, <0>, <5>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,12,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <0>, <2>, <4>, <1>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<3>, <1>, <4>, <0>].
Visit node <0>. Neighors of node <0>: [<3>, <1>, <4>, <5>, <2>].
Visit node <2>. Neighors of node <2>: [<3>, <4>, <0>].
Visit node <4>. Neighors of node <4>: [<1>, <0>, <5>, <2>].
Visit node <1>. Neighors of node <1>: [<3>, <4>, <0>, <5>].
Visit node <3>. Neighors of node <3>: [<1>, <0>, <5>, <2>].
So the DFS traversal is ","('[[<5>, <0>, <1>, <3>, <2>, <4>], [<5>, <0>, <2>, <4>, <3>, <1>], [<5>, <0>, <2>, <4>, <1>, <3>], [<5>, <1>, <0>, <4>, <3>, <2>]]',)",2,199
DFS,"[(<0>, <2>), (<0>, <3>), (<2>, <4>), (<4>, <1>)]","{<0>: [<2>, <3>],
<2>: [<0>, <4>],
<3>: [<0>],
<4>: [<2>, <1>],
<1>: [<4>]}","Node <0> is connected to nodes <2>, <3>.
Node <2> is connected to nodes <0>, <4>.
Node <3> is connected to node <0>.
Node <4> is connected to nodes <2>, <1>.
Node <1> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <3>, <2>, <4>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>, <3>].
Visit node <3>. Neighors of node <3>: [<0>].
Visit node <2>. Neighors of node <2>: [<0>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <1>].
Visit node <1>. Neighors of node <1>: [<4>].
So the DFS traversal is ","('[[<0>, <1>, <3>, <2>, <4>], [<0>, <3>, <2>, <4>, <1>], [<0>, <3>, <4>, <2>, <1>], [<0>, <4>, <2>, <1>, <3>]]',)",1,200
DFS,"[(<0>, <1>), (<0>, <4>), (<0>, <3>), (<3>, <2>)]","{<0>: [<1>, <4>, <3>],
<1>: [<0>],
<4>: [<0>],
<3>: [<0>, <2>],
<2>: [<3>]}","Node <0> is connected to nodes <1>, <4>, <3>.
Node <1> is connected to node <0>.
Node <4> is connected to node <0>.
Node <3> is connected to nodes <0>, <2>.
Node <2> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <2>, <0>, <4>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<0>, <2>].
Visit node <2>. Neighors of node <2>: [<3>].
Visit node <0>. Neighors of node <0>: [<1>, <4>, <3>].
Visit node <4>. Neighors of node <4>: [<0>].
Visit node <1>. Neighors of node <1>: [<0>].
So the DFS traversal is ","('[[<3>, <2>, <0>, <4>, <1>], [<3>, <2>, <4>, <0>, <1>], [<3>, <1>, <0>, <2>, <4>], [<3>, <1>, <2>, <0>, <4>]]',)",0,201
DFS,"[(<4>, <1>), (<4>, <6>), (<4>, <3>), (<4>, <2>), (<4>, <0>), (<1>, <3>), (<1>, <5>), (<1>, <2>), (<1>, <0>), (<6>, <0>), (<3>, <2>), (<3>, <0>), (<3>, <1>), (<3>, <6>), (<2>, <0>), (<0>, <6>), (<0>, <3>), (<0>, <5>)]","{<4>: [<1>, <6>, <3>, <2>, <0>],
<1>: [<3>, <5>, <2>, <0>],
<6>: [<0>],
<3>: [<2>, <0>, <1>, <6>],
<2>: [<0>],
<0>: [<6>, <3>, <5>],
<5>: []}","Node <4> is connected to nodes <1>, <6>, <3>, <2>, <0>.
Node <1> is connected to nodes <3>, <5>, <2>, <0>.
Node <6> is connected to node <0>.
Node <3> is connected to nodes <2>, <0>, <1>, <6>.
Node <2> is connected to node <0>.
Node <0> is connected to nodes <6>, <3>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,18,True,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <0>, <5>, <3>, <1>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<0>].
Visit node <0>. Neighors of node <0>: [<6>, <3>, <5>].
Visit node <5>. Neighors of node <5>: [].
Visit node <3>. Neighors of node <3>: [<2>, <0>, <1>, <6>].
Visit node <1>. Neighors of node <1>: [<3>, <5>, <2>, <0>].
Visit node <2>. Neighors of node <2>: [<0>].
So the DFS traversal is ","('[[<6>, <0>, <1>, <2>, <5>, <3>], [<6>, <0>, <5>, <3>, <1>, <2>], [<6>, <0>, <5>, <2>, <3>, <1>], [<6>, <1>, <2>, <0>, <3>, <5>]]',)",1,202
DFS,"[(<0>, <4>), (<0>, <1>), (<0>, <3>), (<0>, <2>), (<3>, <2>), (<3>, <0>), (<3>, <1>)]","{<0>: [<4>, <1>, <3>, <2>],
<4>: [],
<1>: [],
<3>: [<2>, <0>, <1>],
<2>: []}","Node <0> is connected to nodes <4>, <1>, <3>, <2>.
Node <3> is connected to nodes <2>, <0>, <1>.","[<0>, <1>, <2>, <3>, <4>]",5,7,True,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <1>, <0>, <2>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<2>, <0>, <1>].
Visit node <1>. Neighors of node <1>: [].
Visit node <0>. Neighors of node <0>: [<4>, <1>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [].
Visit node <4>. Neighors of node <4>: [].
So the DFS traversal is ","('[[<3>, <1>, <0>, <2>, <4>], [<3>, <2>, <1>, <4>, <0>], [<3>, <1>, <2>, <0>, <4>], [<3>, <4>, <1>, <0>, <2>]]',)",0,203
DFS,"[(<1>, <0>), (<1>, <2>), (<0>, <5>), (<0>, <6>), (<5>, <4>), (<6>, <4>), (<4>, <3>)]","{<1>: [<0>, <2>],
<0>: [<1>, <5>, <6>],
<2>: [<1>],
<5>: [<0>, <4>],
<6>: [<0>, <4>],
<4>: [<5>, <3>, <6>],
<3>: [<4>]}","Node <1> is connected to nodes <0>, <2>.
Node <0> is connected to nodes <1>, <5>, <6>.
Node <2> is connected to node <1>.
Node <5> is connected to nodes <0>, <4>.
Node <6> is connected to nodes <0>, <4>.
Node <4> is connected to nodes <5>, <3>, <6>.
Node <3> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <6>, <4>, <3>, <5>, <1>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<1>, <5>, <6>].
Visit node <6>. Neighors of node <6>: [<0>, <4>].
Visit node <4>. Neighors of node <4>: [<5>, <3>, <6>].
Visit node <3>. Neighors of node <3>: [<4>].
Visit node <5>. Neighors of node <5>: [<0>, <4>].
Visit node <1>. Neighors of node <1>: [<0>, <2>].
Visit node <2>. Neighors of node <2>: [<1>].
So the DFS traversal is ","('[[<0>, <6>, <4>, <3>, <5>, <1>, <2>], [<0>, <5>, <1>, <6>, <2>, <4>, <3>], [<0>, <6>, <4>, <2>, <3>, <1>, <5>], [<0>, <6>, <1>, <2>, <4>, <3>, <5>]]',)",0,204
DFS,"[(<1>, <2>), (<1>, <0>), (<1>, <6>), (<1>, <5>), (<2>, <3>), (<2>, <0>), (<2>, <6>), (<0>, <3>), (<0>, <4>), (<0>, <6>), (<0>, <5>), (<6>, <3>), (<6>, <4>), (<6>, <5>), (<5>, <4>)]","{<1>: [<2>, <0>, <6>, <5>],
<2>: [<1>, <3>, <0>, <6>],
<0>: [<1>, <3>, <2>, <4>, <6>, <5>],
<6>: [<1>, <3>, <2>, <0>, <4>, <5>],
<5>: [<1>, <0>, <4>, <6>],
<3>: [<2>, <0>, <6>],
<4>: [<0>, <6>, <5>]}","Node <1> is connected to nodes <2>, <0>, <6>, <5>.
Node <2> is connected to nodes <1>, <3>, <0>, <6>.
Node <0> is connected to nodes <1>, <3>, <2>, <4>, <6>, <5>.
Node <6> is connected to nodes <1>, <3>, <2>, <0>, <4>, <5>.
Node <5> is connected to nodes <1>, <0>, <4>, <6>.
Node <3> is connected to nodes <2>, <0>, <6>.
Node <4> is connected to nodes <0>, <6>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,15,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <6>, <4>, <0>, <2>, <3>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<1>, <0>, <4>, <6>].
Visit node <6>. Neighors of node <6>: [<1>, <3>, <2>, <0>, <4>, <5>].
Visit node <4>. Neighors of node <4>: [<0>, <6>, <5>].
Visit node <0>. Neighors of node <0>: [<1>, <3>, <2>, <4>, <6>, <5>].
Visit node <2>. Neighors of node <2>: [<1>, <3>, <0>, <6>].
Visit node <3>. Neighors of node <3>: [<2>, <0>, <6>].
Visit node <1>. Neighors of node <1>: [<2>, <0>, <6>, <5>].
So the DFS traversal is ","('[[<5>, <6>, <3>, <1>, <4>, <0>, <2>], [<5>, <6>, <4>, <0>, <3>, <1>, <2>], [<5>, <6>, <4>, <0>, <2>, <3>, <1>], [<5>, <6>, <3>, <0>, <4>, <1>, <2>]]',)",2,205
DFS,"[(<0>, <2>), (<0>, <1>), (<0>, <4>), (<1>, <3>), (<4>, <3>), (<3>, <5>)]","{<0>: [<2>, <1>, <4>],
<2>: [<0>],
<1>: [<0>, <3>],
<4>: [<0>, <3>],
<3>: [<1>, <5>, <4>],
<5>: [<3>]}","Node <0> is connected to nodes <2>, <1>, <4>.
Node <2> is connected to node <0>.
Node <1> is connected to nodes <0>, <3>.
Node <4> is connected to nodes <0>, <3>.
Node <3> is connected to nodes <1>, <5>, <4>.
Node <5> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <3>, <5>, <1>, <0>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<0>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <5>, <4>].
Visit node <5>. Neighors of node <5>: [<3>].
Visit node <1>. Neighors of node <1>: [<0>, <3>].
Visit node <0>. Neighors of node <0>: [<2>, <1>, <4>].
Visit node <2>. Neighors of node <2>: [<0>].
So the DFS traversal is ","('[[<4>, <5>, <1>, <2>, <0>, <3>], [<4>, <3>, <5>, <1>, <0>, <2>], [<4>, <3>, <5>, <1>, <0>, <2>], [<4>, <3>, <0>, <2>, <5>, <1>]]',)",2,206
DFS,"[(<1>, <0>), (<1>, <2>), (<0>, <3>), (<2>, <5>), (<3>, <4>), (<4>, <5>)]","{<1>: [<0>, <2>],
<0>: [<1>, <3>],
<2>: [<1>, <5>],
<3>: [<0>, <4>],
<4>: [<3>, <5>],
<5>: [<2>, <4>]}","Node <1> is connected to nodes <0>, <2>.
Node <0> is connected to nodes <1>, <3>.
Node <2> is connected to nodes <1>, <5>.
Node <3> is connected to nodes <0>, <4>.
Node <4> is connected to nodes <3>, <5>.
Node <5> is connected to nodes <2>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <5>, <2>, <1>, <0>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<3>, <5>].
Visit node <5>. Neighors of node <5>: [<2>, <4>].
Visit node <2>. Neighors of node <2>: [<1>, <5>].
Visit node <1>. Neighors of node <1>: [<0>, <2>].
Visit node <0>. Neighors of node <0>: [<1>, <3>].
Visit node <3>. Neighors of node <3>: [<0>, <4>].
So the DFS traversal is ","('[[<4>, <5>, <2>, <1>, <0>, <3>], [<4>, <5>, <0>, <3>, <2>, <1>], [<4>, <5>, <1>, <3>, <0>, <2>], [<4>, <5>, <2>, <0>, <3>, <1>]]',)",0,207
DFS,"[(<4>, <2>), (<4>, <1>), (<2>, <0>), (<2>, <5>), (<2>, <6>), (<0>, <3>)]","{<4>: [<2>, <1>],
<2>: [<4>, <0>, <5>, <6>],
<1>: [<4>],
<0>: [<2>, <3>],
<5>: [<2>],
<6>: [<2>],
<3>: [<0>]}","Node <4> is connected to nodes <2>, <1>.
Node <2> is connected to nodes <4>, <0>, <5>, <6>.
Node <1> is connected to node <4>.
Node <0> is connected to nodes <2>, <3>.
Node <5> is connected to node <2>.
Node <6> is connected to node <2>.
Node <3> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <2>, <5>, <0>, <3>, <4>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<2>].
Visit node <2>. Neighors of node <2>: [<4>, <0>, <5>, <6>].
Visit node <5>. Neighors of node <5>: [<2>].
Visit node <0>. Neighors of node <0>: [<2>, <3>].
Visit node <3>. Neighors of node <3>: [<0>].
Visit node <4>. Neighors of node <4>: [<2>, <1>].
Visit node <1>. Neighors of node <1>: [<4>].
So the DFS traversal is ","('[[<6>, <3>, <2>, <5>, <4>, <0>, <1>], [<6>, <2>, <4>, <1>, <5>, <0>, <3>], [<6>, <2>, <5>, <0>, <3>, <4>, <1>], [<6>, <2>, <5>, <4>, <0>, <3>, <1>]]',)",2,208
DFS,"[(<0>, <4>), (<0>, <1>), (<0>, <2>), (<4>, <3>), (<4>, <6>), (<4>, <0>), (<1>, <5>), (<1>, <3>), (<1>, <0>), (<2>, <0>), (<2>, <1>), (<2>, <5>), (<2>, <6>), (<3>, <6>), (<3>, <4>), (<3>, <1>), (<6>, <2>), (<6>, <5>), (<6>, <3>), (<5>, <3>), (<5>, <6>)]","{<0>: [<4>, <1>, <2>],
<4>: [<3>, <6>, <0>],
<1>: [<5>, <3>, <0>],
<2>: [<0>, <1>, <5>, <6>],
<3>: [<6>, <4>, <1>],
<6>: [<2>, <5>, <3>],
<5>: [<3>, <6>]}","Node <0> is connected to nodes <4>, <1>, <2>.
Node <4> is connected to nodes <3>, <6>, <0>.
Node <1> is connected to nodes <5>, <3>, <0>.
Node <2> is connected to nodes <0>, <1>, <5>, <6>.
Node <3> is connected to nodes <6>, <4>, <1>.
Node <6> is connected to nodes <2>, <5>, <3>.
Node <5> is connected to nodes <3>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,21,True,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <6>, <3>, <1>, <0>, <4>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<0>, <1>, <5>, <6>].
Visit node <6>. Neighors of node <6>: [<2>, <5>, <3>].
Visit node <3>. Neighors of node <3>: [<6>, <4>, <1>].
Visit node <1>. Neighors of node <1>: [<5>, <3>, <0>].
Visit node <0>. Neighors of node <0>: [<4>, <1>, <2>].
Visit node <4>. Neighors of node <4>: [<3>, <6>, <0>].
Visit node <5>. Neighors of node <5>: [<3>, <6>].
So the DFS traversal is ","('[[<2>, <6>, <4>, <5>, <3>, <1>, <0>], [<2>, <5>, <3>, <6>, <4>, <0>, <1>], [<2>, <6>, <3>, <0>, <5>, <4>, <1>], [<2>, <6>, <3>, <1>, <0>, <4>, <5>]]',)",3,209
DFS,"[(<2>, <6>), (<2>, <5>), (<2>, <1>), (<2>, <4>), (<6>, <0>), (<6>, <5>), (<6>, <1>), (<6>, <4>), (<5>, <1>), (<5>, <4>), (<5>, <2>), (<1>, <4>), (<1>, <2>), (<1>, <3>), (<1>, <6>), (<1>, <0>), (<1>, <5>), (<4>, <2>), (<4>, <3>), (<4>, <0>), (<3>, <0>), (<3>, <1>), (<3>, <4>), (<3>, <2>), (<0>, <5>), (<0>, <1>), (<0>, <4>), (<0>, <2>), (<0>, <6>)]","{<2>: [<6>, <5>, <1>, <4>],
<6>: [<0>, <5>, <1>, <4>],
<5>: [<1>, <4>, <2>],
<1>: [<4>, <2>, <3>, <6>, <0>, <5>],
<4>: [<2>, <3>, <0>],
<3>: [<0>, <1>, <4>, <2>],
<0>: [<5>, <1>, <4>, <2>, <6>]}","Node <2> is connected to nodes <6>, <5>, <1>, <4>.
Node <6> is connected to nodes <0>, <5>, <1>, <4>.
Node <5> is connected to nodes <1>, <4>, <2>.
Node <1> is connected to nodes <4>, <2>, <3>, <6>, <0>, <5>.
Node <4> is connected to nodes <2>, <3>, <0>.
Node <3> is connected to nodes <0>, <1>, <4>, <2>.
Node <0> is connected to nodes <5>, <1>, <4>, <2>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,29,True,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <4>, <0>, <6>, <1>, <5>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<6>, <5>, <1>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <3>, <0>].
Visit node <0>. Neighors of node <0>: [<5>, <1>, <4>, <2>, <6>].
Visit node <6>. Neighors of node <6>: [<0>, <5>, <1>, <4>].
Visit node <1>. Neighors of node <1>: [<4>, <2>, <3>, <6>, <0>, <5>].
Visit node <5>. Neighors of node <5>: [<1>, <4>, <2>].
Visit node <3>. Neighors of node <3>: [<0>, <1>, <4>, <2>].
So the DFS traversal is ","('[[<2>, <4>, <5>, <3>, <0>, <6>, <1>], [<2>, <4>, <0>, <3>, <6>, <1>, <5>], [<2>, <4>, <0>, <6>, <1>, <5>, <3>], [<2>, <1>, <0>, <5>, <3>, <4>, <6>]]',)",2,210
DFS,"[(<3>, <0>), (<3>, <4>), (<3>, <2>), (<2>, <1>), (<2>, <5>)]","{<3>: [<0>, <4>, <2>],
<0>: [<3>],
<4>: [<3>],
<2>: [<3>, <1>, <5>],
<1>: [<2>],
<5>: [<2>]}","Node <3> is connected to nodes <0>, <4>, <2>.
Node <0> is connected to node <3>.
Node <4> is connected to node <3>.
Node <2> is connected to nodes <3>, <1>, <5>.
Node <1> is connected to node <2>.
Node <5> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <5>, <1>, <3>, <4>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<3>, <1>, <5>].
Visit node <5>. Neighors of node <5>: [<2>].
Visit node <1>. Neighors of node <1>: [<2>].
Visit node <3>. Neighors of node <3>: [<0>, <4>, <2>].
Visit node <4>. Neighors of node <4>: [<3>].
Visit node <0>. Neighors of node <0>: [<3>].
So the DFS traversal is ","('[[<2>, <4>, <3>, <1>, <0>, <5>], [<2>, <5>, <1>, <3>, <0>, <4>], [<2>, <5>, <4>, <0>, <1>, <3>], [<2>, <5>, <1>, <3>, <4>, <0>]]',)",3,211
DFS,"[(<3>, <2>), (<3>, <4>), (<2>, <1>), (<2>, <4>), (<2>, <3>), (<2>, <0>), (<4>, <3>), (<4>, <2>), (<0>, <1>), (<0>, <4>), (<0>, <3>), (<1>, <4>), (<1>, <2>)]","{<3>: [<2>, <4>],
<2>: [<1>, <4>, <3>, <0>],
<4>: [<3>, <2>],
<0>: [<1>, <4>, <3>],
<1>: [<4>, <2>]}","Node <3> is connected to nodes <2>, <4>.
Node <2> is connected to nodes <1>, <4>, <3>, <0>.
Node <4> is connected to nodes <3>, <2>.
Node <0> is connected to nodes <1>, <4>, <3>.
Node <1> is connected to nodes <4>, <2>.","[<0>, <1>, <2>, <3>, <4>]",5,13,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <2>, <0>, <3>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<4>, <2>].
Visit node <2>. Neighors of node <2>: [<1>, <4>, <3>, <0>].
Visit node <0>. Neighors of node <0>: [<1>, <4>, <3>].
Visit node <3>. Neighors of node <3>: [<2>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <2>].
So the DFS traversal is ","('[[<1>, <2>, <4>, <3>, <0>], [<1>, <2>, <3>, <0>, <4>], [<1>, <4>, <2>, <0>, <3>], [<1>, <2>, <0>, <3>, <4>]]',)",3,212
DFS,"[(<1>, <4>), (<1>, <0>), (<1>, <3>), (<1>, <2>), (<0>, <3>), (<0>, <2>), (<0>, <1>), (<0>, <4>), (<3>, <4>), (<3>, <0>), (<3>, <5>), (<2>, <4>), (<2>, <0>), (<2>, <5>), (<5>, <4>), (<5>, <0>)]","{<1>: [<4>, <0>, <3>, <2>],
<4>: [],
<0>: [<3>, <2>, <1>, <4>],
<3>: [<4>, <0>, <5>],
<2>: [<4>, <0>, <5>],
<5>: [<4>, <0>]}","Node <1> is connected to nodes <4>, <0>, <3>, <2>.
Node <0> is connected to nodes <3>, <2>, <1>, <4>.
Node <3> is connected to nodes <4>, <0>, <5>.
Node <2> is connected to nodes <4>, <0>, <5>.
Node <5> is connected to nodes <4>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,16,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <2>, <5>, <0>, <4>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<4>, <0>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<4>, <0>, <5>].
Visit node <5>. Neighors of node <5>: [<4>, <0>].
Visit node <0>. Neighors of node <0>: [<3>, <2>, <1>, <4>].
Visit node <4>. Neighors of node <4>: [].
Visit node <3>. Neighors of node <3>: [<4>, <0>, <5>].
So the DFS traversal is ","('[[<1>, <2>, <5>, <0>, <3>, <4>], [<1>, <2>, <5>, <0>, <4>, <3>], [<1>, <3>, <5>, <4>, <2>, <0>], [<1>, <2>, <4>, <3>, <5>, <0>]]',)",1,213
DFS,"[(<2>, <0>), (<2>, <4>), (<2>, <1>), (<1>, <3>)]","{<2>: [<0>, <4>, <1>],
<0>: [<2>],
<4>: [<2>],
<1>: [<2>, <3>],
<3>: [<1>]}","Node <2> is connected to nodes <0>, <4>, <1>.
Node <0> is connected to node <2>.
Node <4> is connected to node <2>.
Node <1> is connected to nodes <2>, <3>.
Node <3> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <1>, <3>, <4>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<0>, <4>, <1>].
Visit node <1>. Neighors of node <1>: [<2>, <3>].
Visit node <3>. Neighors of node <3>: [<1>].
Visit node <4>. Neighors of node <4>: [<2>].
Visit node <0>. Neighors of node <0>: [<2>].
So the DFS traversal is ","('[[<2>, <1>, <3>, <4>, <0>], [<2>, <0>, <1>, <3>, <4>], [<2>, <1>, <4>, <0>, <3>], [<2>, <0>, <1>, <3>, <4>]]',)",0,214
DFS,"[(<3>, <0>), (<3>, <5>), (<3>, <1>), (<3>, <4>), (<3>, <2>), (<0>, <5>), (<0>, <1>), (<0>, <4>), (<0>, <2>), (<5>, <1>), (<5>, <4>), (<5>, <2>), (<4>, <2>)]","{<3>: [<0>, <5>, <1>, <4>, <2>],
<0>: [<3>, <5>, <1>, <4>, <2>],
<5>: [<3>, <0>, <1>, <4>, <2>],
<1>: [<3>, <0>, <5>],
<4>: [<3>, <0>, <5>, <2>],
<2>: [<3>, <0>, <5>, <4>]}","Node <3> is connected to nodes <0>, <5>, <1>, <4>, <2>.
Node <0> is connected to nodes <3>, <5>, <1>, <4>, <2>.
Node <5> is connected to nodes <3>, <0>, <1>, <4>, <2>.
Node <1> is connected to nodes <3>, <0>, <5>.
Node <4> is connected to nodes <3>, <0>, <5>, <2>.
Node <2> is connected to nodes <3>, <0>, <5>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,13,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <2>, <4>, <5>, <1>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<3>, <5>, <1>, <4>, <2>].
Visit node <2>. Neighors of node <2>: [<3>, <0>, <5>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <0>, <5>, <2>].
Visit node <5>. Neighors of node <5>: [<3>, <0>, <1>, <4>, <2>].
Visit node <1>. Neighors of node <1>: [<3>, <0>, <5>].
Visit node <3>. Neighors of node <3>: [<0>, <5>, <1>, <4>, <2>].
So the DFS traversal is ","('[[<0>, <2>, <1>, <3>, <4>, <5>], [<0>, <2>, <4>, <5>, <1>, <3>], [<0>, <2>, <4>, <1>, <3>, <5>], [<0>, <3>, <2>, <1>, <4>, <5>]]',)",1,215
DFS,"[(<0>, <1>), (<0>, <2>), (<0>, <6>), (<0>, <4>), (<1>, <6>), (<1>, <3>), (<6>, <4>), (<6>, <5>), (<4>, <5>), (<4>, <3>)]","{<0>: [<1>, <2>, <6>, <4>],
<1>: [<0>, <6>, <3>],
<2>: [<0>],
<6>: [<0>, <1>, <4>, <5>],
<4>: [<0>, <5>, <3>, <6>],
<3>: [<1>, <4>],
<5>: [<4>, <6>]}","Node <0> is connected to nodes <1>, <2>, <6>, <4>.
Node <1> is connected to nodes <0>, <6>, <3>.
Node <2> is connected to node <0>.
Node <6> is connected to nodes <0>, <1>, <4>, <5>.
Node <4> is connected to nodes <0>, <5>, <3>, <6>.
Node <3> is connected to nodes <1>, <4>.
Node <5> is connected to nodes <4>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <6>, <4>, <3>, <1>, <0>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<4>, <6>].
Visit node <6>. Neighors of node <6>: [<0>, <1>, <4>, <5>].
Visit node <4>. Neighors of node <4>: [<0>, <5>, <3>, <6>].
Visit node <3>. Neighors of node <3>: [<1>, <4>].
Visit node <1>. Neighors of node <1>: [<0>, <6>, <3>].
Visit node <0>. Neighors of node <0>: [<1>, <2>, <6>, <4>].
Visit node <2>. Neighors of node <2>: [<0>].
So the DFS traversal is ","('[[<5>, <6>, <4>, <3>, <1>, <0>, <2>], [<5>, <6>, <0>, <4>, <2>, <1>, <3>], [<5>, <6>, <0>, <2>, <4>, <3>, <1>], [<5>, <6>, <4>, <3>, <2>, <1>, <0>]]',)",0,216
DFS,"[(<0>, <2>), (<0>, <5>), (<2>, <6>), (<5>, <3>), (<5>, <6>), (<1>, <4>), (<1>, <3>)]","{<0>: [<2>, <5>],
<2>: [<0>, <6>],
<5>: [<0>, <3>, <6>],
<6>: [<2>, <5>],
<1>: [<4>, <3>],
<4>: [<1>],
<3>: [<1>, <5>]}","Node <0> is connected to nodes <2>, <5>.
Node <2> is connected to nodes <0>, <6>.
Node <5> is connected to nodes <0>, <3>, <6>.
Node <6> is connected to nodes <2>, <5>.
Node <1> is connected to nodes <4>, <3>.
Node <4> is connected to node <1>.
Node <3> is connected to nodes <1>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <6>, <2>, <0>, <3>, <1>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<0>, <3>, <6>].
Visit node <6>. Neighors of node <6>: [<2>, <5>].
Visit node <2>. Neighors of node <2>: [<0>, <6>].
Visit node <0>. Neighors of node <0>: [<2>, <5>].
Visit node <3>. Neighors of node <3>: [<1>, <5>].
Visit node <1>. Neighors of node <1>: [<4>, <3>].
Visit node <4>. Neighors of node <4>: [<1>].
So the DFS traversal is ","('[[<5>, <4>, <1>, <0>, <3>, <2>, <6>], [<5>, <6>, <1>, <4>, <2>, <0>, <3>], [<5>, <6>, <2>, <3>, <1>, <0>, <4>], [<5>, <6>, <2>, <0>, <3>, <1>, <4>]]',)",3,217
DFS,"[(<0>, <3>), (<0>, <4>), (<3>, <4>), (<3>, <1>), (<4>, <1>), (<4>, <3>), (<4>, <2>), (<1>, <0>), (<1>, <3>), (<1>, <5>), (<1>, <4>), (<5>, <0>), (<2>, <4>), (<2>, <0>), (<2>, <5>)]","{<0>: [<3>, <4>],
<3>: [<4>, <1>],
<4>: [<1>, <3>, <2>],
<1>: [<0>, <3>, <5>, <4>],
<5>: [<0>],
<2>: [<4>, <0>, <5>]}","Node <0> is connected to nodes <3>, <4>.
Node <3> is connected to nodes <4>, <1>.
Node <4> is connected to nodes <1>, <3>, <2>.
Node <1> is connected to nodes <0>, <3>, <5>, <4>.
Node <5> is connected to node <0>.
Node <2> is connected to nodes <4>, <0>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,15,True,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <2>, <5>, <0>, <3>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<1>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<4>, <0>, <5>].
Visit node <5>. Neighors of node <5>: [<0>].
Visit node <0>. Neighors of node <0>: [<3>, <4>].
Visit node <3>. Neighors of node <3>: [<4>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <3>, <5>, <4>].
So the DFS traversal is ","('[[<4>, <3>, <1>, <2>, <0>, <5>], [<4>, <2>, <5>, <0>, <3>, <1>], [<4>, <2>, <3>, <1>, <5>, <0>], [<4>, <2>, <5>, <0>, <3>, <1>]]',)",3,218
DFS,"[(<3>, <1>), (<3>, <2>), (<3>, <4>), (<1>, <2>), (<1>, <3>), (<2>, <6>), (<2>, <4>), (<2>, <3>), (<2>, <0>), (<4>, <5>), (<4>, <1>), (<4>, <2>), (<4>, <6>), (<5>, <0>), (<5>, <6>), (<0>, <1>), (<0>, <4>), (<0>, <3>), (<0>, <5>), (<6>, <4>), (<6>, <3>), (<6>, <0>), (<6>, <1>)]","{<3>: [<1>, <2>, <4>],
<1>: [<2>, <3>],
<2>: [<6>, <4>, <3>, <0>],
<4>: [<5>, <1>, <2>, <6>],
<5>: [<0>, <6>],
<0>: [<1>, <4>, <3>, <5>],
<6>: [<4>, <3>, <0>, <1>]}","Node <3> is connected to nodes <1>, <2>, <4>.
Node <1> is connected to nodes <2>, <3>.
Node <2> is connected to nodes <6>, <4>, <3>, <0>.
Node <4> is connected to nodes <5>, <1>, <2>, <6>.
Node <5> is connected to nodes <0>, <6>.
Node <0> is connected to nodes <1>, <4>, <3>, <5>.
Node <6> is connected to nodes <4>, <3>, <0>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,23,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <3>, <4>, <6>, <0>, <5>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<2>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <2>, <4>].
Visit node <4>. Neighors of node <4>: [<5>, <1>, <2>, <6>].
Visit node <6>. Neighors of node <6>: [<4>, <3>, <0>, <1>].
Visit node <0>. Neighors of node <0>: [<1>, <4>, <3>, <5>].
Visit node <5>. Neighors of node <5>: [<0>, <6>].
Visit node <2>. Neighors of node <2>: [<6>, <4>, <3>, <0>].
So the DFS traversal is ","('[[<1>, <3>, <4>, <0>, <5>, <6>, <2>], [<1>, <3>, <4>, <6>, <0>, <5>, <2>], [<1>, <4>, <0>, <2>, <6>, <5>, <3>], [<1>, <3>, <5>, <2>, <4>, <6>, <0>]]',)",1,219
DFS,"[(<6>, <3>), (<6>, <2>), (<3>, <2>), (<2>, <4>), (<4>, <5>), (<5>, <0>), (<0>, <1>)]","{<6>: [<3>, <2>],
<3>: [<6>, <2>],
<2>: [<6>, <3>, <4>],
<4>: [<2>, <5>],
<5>: [<4>, <0>],
<0>: [<5>, <1>],
<1>: [<0>]}","Node <6> is connected to nodes <3>, <2>.
Node <3> is connected to nodes <6>, <2>.
Node <2> is connected to nodes <6>, <3>, <4>.
Node <4> is connected to nodes <2>, <5>.
Node <5> is connected to nodes <4>, <0>.
Node <0> is connected to nodes <5>, <1>.
Node <1> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <5>, <4>, <2>, <3>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<5>, <1>].
Visit node <1>. Neighors of node <1>: [<0>].
Visit node <5>. Neighors of node <5>: [<4>, <0>].
Visit node <4>. Neighors of node <4>: [<2>, <5>].
Visit node <2>. Neighors of node <2>: [<6>, <3>, <4>].
Visit node <3>. Neighors of node <3>: [<6>, <2>].
Visit node <6>. Neighors of node <6>: [<3>, <2>].
So the DFS traversal is ","('[[<0>, <6>, <4>, <5>, <1>, <2>, <3>], [<0>, <1>, <3>, <6>, <5>, <4>, <2>], [<0>, <1>, <5>, <4>, <2>, <3>, <6>], [<0>, <1>, <5>, <2>, <6>, <3>, <4>]]',)",2,220
DFS,"[(<4>, <0>), (<4>, <3>), (<0>, <1>), (<0>, <2>), (<3>, <1>)]","{<4>: [<0>, <3>],
<0>: [<4>, <1>, <2>],
<3>: [<4>, <1>],
<1>: [<0>, <3>],
<2>: [<0>]}","Node <4> is connected to nodes <0>, <3>.
Node <0> is connected to nodes <4>, <1>, <2>.
Node <3> is connected to nodes <4>, <1>.
Node <1> is connected to nodes <0>, <3>.
Node <2> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <0>, <1>, <3>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<0>].
Visit node <0>. Neighors of node <0>: [<4>, <1>, <2>].
Visit node <1>. Neighors of node <1>: [<0>, <3>].
Visit node <3>. Neighors of node <3>: [<4>, <1>].
Visit node <4>. Neighors of node <4>: [<0>, <3>].
So the DFS traversal is ","('[[<2>, <4>, <0>, <1>, <3>], [<2>, <0>, <4>, <3>, <1>], [<2>, <4>, <0>, <1>, <3>], [<2>, <0>, <1>, <3>, <4>]]',)",3,221
DFS,"[(<1>, <0>), (<1>, <4>), (<0>, <3>), (<4>, <2>), (<3>, <2>)]","{<1>: [<0>, <4>],
<0>: [<1>, <3>],
<4>: [<1>, <2>],
<3>: [<0>, <2>],
<2>: [<4>, <3>]}","Node <1> is connected to nodes <0>, <4>.
Node <0> is connected to nodes <1>, <3>.
Node <4> is connected to nodes <1>, <2>.
Node <3> is connected to nodes <0>, <2>.
Node <2> is connected to nodes <4>, <3>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <2>, <4>, <1>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<0>, <2>].
Visit node <2>. Neighors of node <2>: [<4>, <3>].
Visit node <4>. Neighors of node <4>: [<1>, <2>].
Visit node <1>. Neighors of node <1>: [<0>, <4>].
Visit node <0>. Neighors of node <0>: [<1>, <3>].
So the DFS traversal is ","('[[<3>, <2>, <0>, <1>, <4>], [<3>, <0>, <2>, <4>, <1>], [<3>, <0>, <2>, <4>, <1>], [<3>, <2>, <4>, <1>, <0>]]',)",3,222
DFS,"[(<5>, <1>), (<5>, <4>), (<5>, <0>), (<1>, <6>), (<1>, <0>), (<4>, <0>), (<4>, <2>), (<0>, <3>), (<0>, <6>), (<6>, <4>), (<6>, <5>), (<6>, <1>), (<3>, <4>), (<3>, <0>), (<2>, <3>), (<2>, <6>)]","{<5>: [<1>, <4>, <0>],
<1>: [<6>, <0>],
<4>: [<0>, <2>],
<0>: [<3>, <6>],
<6>: [<4>, <5>, <1>],
<3>: [<4>, <0>],
<2>: [<3>, <6>]}","Node <5> is connected to nodes <1>, <4>, <0>.
Node <1> is connected to nodes <6>, <0>.
Node <4> is connected to nodes <0>, <2>.
Node <0> is connected to nodes <3>, <6>.
Node <6> is connected to nodes <4>, <5>, <1>.
Node <3> is connected to nodes <4>, <0>.
Node <2> is connected to nodes <3>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,16,True,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <0>, <6>, <1>, <4>, <2>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<1>, <4>, <0>].
Visit node <0>. Neighors of node <0>: [<3>, <6>].
Visit node <6>. Neighors of node <6>: [<4>, <5>, <1>].
Visit node <1>. Neighors of node <1>: [<6>, <0>].
Visit node <4>. Neighors of node <4>: [<0>, <2>].
Visit node <2>. Neighors of node <2>: [<3>, <6>].
Visit node <3>. Neighors of node <3>: [<4>, <0>].
So the DFS traversal is ","('[[<5>, <0>, <6>, <2>, <4>, <1>, <3>], [<5>, <6>, <1>, <3>, <2>, <0>, <4>], [<5>, <0>, <6>, <1>, <4>, <2>, <3>], [<5>, <0>, <2>, <3>, <6>, <1>, <4>]]',)",2,223
DFS,"[(<0>, <3>), (<0>, <1>), (<3>, <1>), (<3>, <2>), (<1>, <4>), (<1>, <0>), (<2>, <3>), (<2>, <1>), (<2>, <0>), (<4>, <3>)]","{<0>: [<3>, <1>],
<3>: [<1>, <2>],
<1>: [<4>, <0>],
<2>: [<3>, <1>, <0>],
<4>: [<3>]}","Node <0> is connected to nodes <3>, <1>.
Node <3> is connected to nodes <1>, <2>.
Node <1> is connected to nodes <4>, <0>.
Node <2> is connected to nodes <3>, <1>, <0>.
Node <4> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>]",5,10,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <0>, <3>, <2>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<4>, <0>].
Visit node <0>. Neighors of node <0>: [<3>, <1>].
Visit node <3>. Neighors of node <3>: [<1>, <2>].
Visit node <2>. Neighors of node <2>: [<3>, <1>, <0>].
Visit node <4>. Neighors of node <4>: [<3>].
So the DFS traversal is ","('[[<1>, <0>, <3>, <2>, <4>], [<1>, <0>, <4>, <3>, <2>], [<1>, <4>, <0>, <3>, <2>], [<1>, <4>, <0>, <2>, <3>]]',)",0,224
DFS,"[(<2>, <0>), (<2>, <6>), (<2>, <4>), (<2>, <5>), (<2>, <1>), (<6>, <3>)]","{<2>: [<0>, <6>, <4>, <5>, <1>],
<0>: [<2>],
<6>: [<2>, <3>],
<4>: [<2>],
<5>: [<2>],
<1>: [<2>],
<3>: [<6>]}","Node <2> is connected to nodes <0>, <6>, <4>, <5>, <1>.
Node <0> is connected to node <2>.
Node <6> is connected to nodes <2>, <3>.
Node <4> is connected to node <2>.
Node <5> is connected to node <2>.
Node <1> is connected to node <2>.
Node <3> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <2>, <1>, <5>, <4>, <6>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <2>. Neighors of node <2>: [<0>, <6>, <4>, <5>, <1>].
Visit node <1>. Neighors of node <1>: [<2>].
Visit node <5>. Neighors of node <5>: [<2>].
Visit node <4>. Neighors of node <4>: [<2>].
Visit node <6>. Neighors of node <6>: [<2>, <3>].
Visit node <3>. Neighors of node <3>: [<6>].
So the DFS traversal is ","('[[<0>, <2>, <1>, <3>, <4>, <6>, <5>], [<0>, <2>, <6>, <3>, <1>, <5>, <4>], [<0>, <6>, <4>, <5>, <1>, <2>, <3>], [<0>, <2>, <1>, <5>, <4>, <6>, <3>]]',)",3,225
DFS,"[(<3>, <4>), (<3>, <1>), (<4>, <2>), (<2>, <0>)]","{<3>: [<4>, <1>],
<4>: [<3>, <2>],
<1>: [<3>],
<2>: [<4>, <0>],
<0>: [<2>]}","Node <3> is connected to nodes <4>, <1>.
Node <4> is connected to nodes <3>, <2>.
Node <1> is connected to node <3>.
Node <2> is connected to nodes <4>, <0>.
Node <0> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <3>, <4>, <2>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>].
Visit node <3>. Neighors of node <3>: [<4>, <1>].
Visit node <4>. Neighors of node <4>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<4>, <0>].
Visit node <0>. Neighors of node <0>: [<2>].
So the DFS traversal is ","('[[<1>, <3>, <4>, <2>, <0>], [<1>, <3>, <2>, <0>, <4>], [<1>, <0>, <3>, <4>, <2>], [<1>, <2>, <0>, <4>, <3>]]',)",0,226
DFS,"[(<3>, <0>), (<3>, <2>), (<3>, <4>), (<3>, <1>), (<3>, <5>), (<3>, <6>), (<0>, <1>), (<2>, <4>), (<4>, <1>), (<1>, <6>)]","{<3>: [<0>, <2>, <4>, <1>, <5>, <6>],
<0>: [<3>, <1>],
<2>: [<3>, <4>],
<4>: [<3>, <1>, <2>],
<1>: [<3>, <0>, <6>, <4>],
<5>: [<3>],
<6>: [<3>, <1>]}","Node <3> is connected to nodes <0>, <2>, <4>, <1>, <5>, <6>.
Node <0> is connected to nodes <3>, <1>.
Node <2> is connected to nodes <3>, <4>.
Node <4> is connected to nodes <3>, <1>, <2>.
Node <1> is connected to nodes <3>, <0>, <6>, <4>.
Node <5> is connected to node <3>.
Node <6> is connected to nodes <3>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <4>, <1>, <6>, <3>, <5>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<3>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <1>, <2>].
Visit node <1>. Neighors of node <1>: [<3>, <0>, <6>, <4>].
Visit node <6>. Neighors of node <6>: [<3>, <1>].
Visit node <3>. Neighors of node <3>: [<0>, <2>, <4>, <1>, <5>, <6>].
Visit node <5>. Neighors of node <5>: [<3>].
Visit node <0>. Neighors of node <0>: [<3>, <1>].
So the DFS traversal is ","('[[<2>, <4>, <5>, <0>, <1>, <6>, <3>], [<2>, <4>, <1>, <6>, <3>, <5>, <0>], [<2>, <6>, <0>, <3>, <4>, <1>, <5>], [<2>, <4>, <1>, <3>, <0>, <6>, <5>]]',)",1,227
DFS,"[(<0>, <2>), (<0>, <5>), (<0>, <3>), (<0>, <4>), (<2>, <3>), (<2>, <0>), (<5>, <3>), (<5>, <0>), (<5>, <1>), (<3>, <0>), (<3>, <5>), (<4>, <1>), (<1>, <5>)]","{<0>: [<2>, <5>, <3>, <4>],
<2>: [<3>, <0>],
<5>: [<3>, <0>, <1>],
<3>: [<0>, <5>],
<4>: [<1>],
<1>: [<5>]}","Node <0> is connected to nodes <2>, <5>, <3>, <4>.
Node <2> is connected to nodes <3>, <0>.
Node <5> is connected to nodes <3>, <0>, <1>.
Node <3> is connected to nodes <0>, <5>.
Node <4> is connected to node <1>.
Node <1> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,13,True,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <4>, <1>, <5>, <3>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>, <5>, <3>, <4>].
Visit node <4>. Neighors of node <4>: [<1>].
Visit node <1>. Neighors of node <1>: [<5>].
Visit node <5>. Neighors of node <5>: [<3>, <0>, <1>].
Visit node <3>. Neighors of node <3>: [<0>, <5>].
Visit node <2>. Neighors of node <2>: [<3>, <0>].
So the DFS traversal is ","('[[<0>, <3>, <1>, <4>, <2>, <5>], [<0>, <4>, <1>, <5>, <3>, <2>], [<0>, <4>, <3>, <2>, <1>, <5>], [<0>, <4>, <1>, <5>, <3>, <2>]]',)",1,228
DFS,"[(<3>, <0>), (<3>, <2>), (<3>, <4>), (<0>, <1>)]","{<3>: [<0>, <2>, <4>],
<0>: [<3>, <1>],
<2>: [<3>],
<4>: [<3>],
<1>: [<0>]}","Node <3> is connected to nodes <0>, <2>, <4>.
Node <0> is connected to nodes <3>, <1>.
Node <2> is connected to node <3>.
Node <4> is connected to node <3>.
Node <1> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <3>, <4>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<3>, <1>].
Visit node <1>. Neighors of node <1>: [<0>].
Visit node <3>. Neighors of node <3>: [<0>, <2>, <4>].
Visit node <4>. Neighors of node <4>: [<3>].
Visit node <2>. Neighors of node <2>: [<3>].
So the DFS traversal is ","('[[<0>, <1>, <3>, <4>, <2>], [<0>, <1>, <2>, <4>, <3>], [<0>, <2>, <1>, <3>, <4>], [<0>, <3>, <1>, <2>, <4>]]',)",0,229
DFS,"[(<2>, <0>), (<2>, <1>), (<2>, <3>), (<2>, <5>), (<2>, <6>), (<0>, <1>), (<0>, <3>), (<0>, <5>), (<0>, <2>), (<0>, <4>), (<1>, <3>), (<1>, <5>), (<1>, <4>), (<1>, <0>), (<3>, <5>), (<3>, <6>), (<3>, <2>), (<5>, <2>), (<5>, <3>), (<6>, <2>), (<6>, <1>), (<6>, <5>), (<4>, <6>), (<4>, <2>)]","{<2>: [<0>, <1>, <3>, <5>, <6>],
<0>: [<1>, <3>, <5>, <2>, <4>],
<1>: [<3>, <5>, <4>, <0>],
<3>: [<5>, <6>, <2>],
<5>: [<2>, <3>],
<6>: [<2>, <1>, <5>],
<4>: [<6>, <2>]}","Node <2> is connected to nodes <0>, <1>, <3>, <5>, <6>.
Node <0> is connected to nodes <1>, <3>, <5>, <2>, <4>.
Node <1> is connected to nodes <3>, <5>, <4>, <0>.
Node <3> is connected to nodes <5>, <6>, <2>.
Node <5> is connected to nodes <2>, <3>.
Node <6> is connected to nodes <2>, <1>, <5>.
Node <4> is connected to nodes <6>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,24,True,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <2>, <6>, <5>, <3>, <1>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<6>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <1>, <3>, <5>, <6>].
Visit node <6>. Neighors of node <6>: [<2>, <1>, <5>].
Visit node <5>. Neighors of node <5>: [<2>, <3>].
Visit node <3>. Neighors of node <3>: [<5>, <6>, <2>].
Visit node <1>. Neighors of node <1>: [<3>, <5>, <4>, <0>].
Visit node <0>. Neighors of node <0>: [<1>, <3>, <5>, <2>, <4>].
So the DFS traversal is ","('[[<4>, <2>, <6>, <5>, <3>, <1>, <0>], [<4>, <6>, <0>, <1>, <5>, <2>, <3>], [<4>, <2>, <1>, <0>, <6>, <5>, <3>], [<4>, <2>, <6>, <0>, <5>, <3>, <1>]]',)",0,230
DFS,"[(<3>, <0>), (<3>, <2>), (<0>, <1>), (<2>, <6>), (<2>, <0>), (<1>, <0>), (<1>, <4>), (<6>, <3>), (<6>, <0>), (<5>, <3>), (<5>, <4>)]","{<3>: [<0>, <2>],
<0>: [<1>],
<2>: [<6>, <0>],
<1>: [<0>, <4>],
<6>: [<3>, <0>],
<4>: [],
<5>: [<3>, <4>]}","Node <3> is connected to nodes <0>, <2>.
Node <0> is connected to node <1>.
Node <2> is connected to nodes <6>, <0>.
Node <1> is connected to nodes <0>, <4>.
Node <6> is connected to nodes <3>, <0>.
Node <5> is connected to nodes <3>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,11,True,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <4>, <3>, <2>, <0>, <1>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<3>, <4>].
Visit node <4>. Neighors of node <4>: [].
Visit node <3>. Neighors of node <3>: [<0>, <2>].
Visit node <2>. Neighors of node <2>: [<6>, <0>].
Visit node <0>. Neighors of node <0>: [<1>].
Visit node <1>. Neighors of node <1>: [<0>, <4>].
Visit node <6>. Neighors of node <6>: [<3>, <0>].
So the DFS traversal is ","('[[<5>, <4>, <1>, <6>, <3>, <2>, <0>], [<5>, <4>, <3>, <2>, <1>, <0>, <6>], [<5>, <4>, <3>, <2>, <0>, <1>, <6>], [<5>, <4>, <3>, <2>, <0>, <1>, <6>]]',)",2,231
DFS,"[(<1>, <2>), (<1>, <5>), (<2>, <0>), (<5>, <4>), (<5>, <3>), (<0>, <4>)]","{<1>: [<2>, <5>],
<2>: [<1>, <0>],
<5>: [<1>, <4>, <3>],
<0>: [<2>, <4>],
<4>: [<0>, <5>],
<3>: [<5>]}","Node <1> is connected to nodes <2>, <5>.
Node <2> is connected to nodes <1>, <0>.
Node <5> is connected to nodes <1>, <4>, <3>.
Node <0> is connected to nodes <2>, <4>.
Node <4> is connected to nodes <0>, <5>.
Node <3> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <4>, <5>, <3>, <1>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>, <4>].
Visit node <4>. Neighors of node <4>: [<0>, <5>].
Visit node <5>. Neighors of node <5>: [<1>, <4>, <3>].
Visit node <3>. Neighors of node <3>: [<5>].
Visit node <1>. Neighors of node <1>: [<2>, <5>].
Visit node <2>. Neighors of node <2>: [<1>, <0>].
So the DFS traversal is ","('[[<0>, <4>, <1>, <2>, <5>, <3>], [<0>, <4>, <5>, <1>, <2>, <3>], [<0>, <4>, <5>, <3>, <1>, <2>], [<0>, <3>, <2>, <1>, <4>, <5>]]',)",2,232
DFS,"[(<4>, <0>), (<4>, <2>), (<4>, <1>), (<4>, <3>)]","{<4>: [<0>, <2>, <1>, <3>],
<0>: [<4>],
<2>: [<4>],
<1>: [<4>],
<3>: [<4>]}","Node <4> is connected to nodes <0>, <2>, <1>, <3>.
Node <0> is connected to node <4>.
Node <2> is connected to node <4>.
Node <1> is connected to node <4>.
Node <3> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <3>, <1>, <2>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<0>, <2>, <1>, <3>].
Visit node <3>. Neighors of node <3>: [<4>].
Visit node <1>. Neighors of node <1>: [<4>].
Visit node <2>. Neighors of node <2>: [<4>].
Visit node <0>. Neighors of node <0>: [<4>].
So the DFS traversal is ","('[[<4>, <3>, <1>, <2>, <0>], [<4>, <1>, <0>, <3>, <2>], [<4>, <0>, <3>, <1>, <2>], [<4>, <3>, <2>, <0>, <1>]]',)",0,233
DFS,"[(<0>, <4>), (<0>, <1>), (<0>, <6>), (<6>, <5>), (<5>, <2>), (<5>, <3>)]","{<0>: [<4>, <1>, <6>],
<4>: [<0>],
<1>: [<0>],
<6>: [<0>, <5>],
<5>: [<2>, <6>, <3>],
<2>: [<5>],
<3>: [<5>]}","Node <0> is connected to nodes <4>, <1>, <6>.
Node <4> is connected to node <0>.
Node <1> is connected to node <0>.
Node <6> is connected to nodes <0>, <5>.
Node <5> is connected to nodes <2>, <6>, <3>.
Node <2> is connected to node <5>.
Node <3> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <6>, <5>, <3>, <2>, <1>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<4>, <1>, <6>].
Visit node <6>. Neighors of node <6>: [<0>, <5>].
Visit node <5>. Neighors of node <5>: [<2>, <6>, <3>].
Visit node <3>. Neighors of node <3>: [<5>].
Visit node <2>. Neighors of node <2>: [<5>].
Visit node <1>. Neighors of node <1>: [<0>].
Visit node <4>. Neighors of node <4>: [<0>].
So the DFS traversal is ","('[[<0>, <6>, <5>, <3>, <2>, <1>, <4>], [<0>, <6>, <5>, <1>, <3>, <2>, <4>], [<0>, <1>, <2>, <5>, <4>, <3>, <6>], [<0>, <6>, <1>, <4>, <5>, <3>, <2>]]',)",0,234
DFS,"[(<1>, <3>), (<1>, <4>), (<1>, <0>), (<1>, <5>), (<3>, <2>), (<4>, <5>), (<0>, <1>), (<0>, <2>), (<0>, <3>), (<2>, <3>), (<2>, <4>)]","{<1>: [<3>, <4>, <0>, <5>],
<3>: [<2>],
<4>: [<5>],
<0>: [<1>, <2>, <3>],
<5>: [],
<2>: [<3>, <4>]}","Node <1> is connected to nodes <3>, <4>, <0>, <5>.
Node <3> is connected to node <2>.
Node <4> is connected to node <5>.
Node <0> is connected to nodes <1>, <2>, <3>.
Node <2> is connected to nodes <3>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,11,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <5>, <0>, <3>, <2>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>, <4>, <0>, <5>].
Visit node <5>. Neighors of node <5>: [].
Visit node <0>. Neighors of node <0>: [<1>, <2>, <3>].
Visit node <3>. Neighors of node <3>: [<2>].
Visit node <2>. Neighors of node <2>: [<3>, <4>].
Visit node <4>. Neighors of node <4>: [<5>].
So the DFS traversal is ","('[[<1>, <5>, <2>, <4>, <0>, <3>], [<1>, <5>, <0>, <3>, <2>, <4>], [<1>, <5>, <0>, <3>, <2>, <4>], [<1>, <3>, <4>, <2>, <0>, <5>]]',)",1,235
DFS,"[(<3>, <0>), (<3>, <2>), (<0>, <4>), (<0>, <1>), (<2>, <5>), (<2>, <4>), (<5>, <0>), (<5>, <4>), (<5>, <2>), (<4>, <2>), (<4>, <0>), (<1>, <4>), (<1>, <5>)]","{<3>: [<0>, <2>],
<0>: [<4>, <1>],
<2>: [<5>, <4>],
<5>: [<0>, <4>, <2>],
<4>: [<2>, <0>],
<1>: [<4>, <5>]}","Node <3> is connected to nodes <0>, <2>.
Node <0> is connected to nodes <4>, <1>.
Node <2> is connected to nodes <5>, <4>.
Node <5> is connected to nodes <0>, <4>, <2>.
Node <4> is connected to nodes <2>, <0>.
Node <1> is connected to nodes <4>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,13,True,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <2>, <4>, <0>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<0>, <4>, <2>].
Visit node <2>. Neighors of node <2>: [<5>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <0>].
Visit node <0>. Neighors of node <0>: [<4>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <5>].
So the DFS traversal is ","('[[<5>, <2>, <0>, <4>, <1>], [<5>, <1>, <2>, <4>, <0>], [<5>, <1>, <4>, <0>, <2>], [<5>, <2>, <4>, <0>, <1>]]',)",3,236
DFS,"[(<3>, <2>), (<3>, <4>), (<2>, <0>), (<2>, <5>), (<4>, <5>), (<0>, <1>)]","{<3>: [<2>, <4>],
<2>: [<3>, <0>, <5>],
<4>: [<3>, <5>],
<0>: [<2>, <1>],
<5>: [<2>, <4>],
<1>: [<0>]}","Node <3> is connected to nodes <2>, <4>.
Node <2> is connected to nodes <3>, <0>, <5>.
Node <4> is connected to nodes <3>, <5>.
Node <0> is connected to nodes <2>, <1>.
Node <5> is connected to nodes <2>, <4>.
Node <1> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <2>, <5>, <4>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>, <1>].
Visit node <1>. Neighors of node <1>: [<0>].
Visit node <2>. Neighors of node <2>: [<3>, <0>, <5>].
Visit node <5>. Neighors of node <5>: [<2>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <5>].
Visit node <3>. Neighors of node <3>: [<2>, <4>].
So the DFS traversal is ","('[[<0>, <1>, <2>, <5>, <4>, <3>], [<0>, <1>, <2>, <5>, <4>, <3>], [<0>, <1>, <4>, <3>, <2>, <5>], [<0>, <1>, <4>, <3>, <2>, <5>]]',)",1,237
DFS,"[(<3>, <5>), (<3>, <0>), (<3>, <6>), (<3>, <1>), (<3>, <4>), (<5>, <2>), (<0>, <1>), (<6>, <2>), (<1>, <2>), (<4>, <2>)]","{<3>: [<5>, <0>, <6>, <1>, <4>],
<5>: [<3>, <2>],
<0>: [<3>, <1>],
<6>: [<3>, <2>],
<1>: [<3>, <0>, <2>],
<4>: [<3>, <2>],
<2>: [<5>, <6>, <1>, <4>]}","Node <3> is connected to nodes <5>, <0>, <6>, <1>, <4>.
Node <5> is connected to nodes <3>, <2>.
Node <0> is connected to nodes <3>, <1>.
Node <6> is connected to nodes <3>, <2>.
Node <1> is connected to nodes <3>, <0>, <2>.
Node <4> is connected to nodes <3>, <2>.
Node <2> is connected to nodes <5>, <6>, <1>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <4>, <3>, <1>, <0>, <6>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<5>, <6>, <1>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <2>].
Visit node <3>. Neighors of node <3>: [<5>, <0>, <6>, <1>, <4>].
Visit node <1>. Neighors of node <1>: [<3>, <0>, <2>].
Visit node <0>. Neighors of node <0>: [<3>, <1>].
Visit node <6>. Neighors of node <6>: [<3>, <2>].
Visit node <5>. Neighors of node <5>: [<3>, <2>].
So the DFS traversal is ","('[[<2>, <4>, <3>, <1>, <0>, <6>, <5>], [<2>, <4>, <5>, <6>, <0>, <3>, <1>], [<2>, <4>, <3>, <0>, <1>, <6>, <5>], [<2>, <4>, <6>, <5>, <3>, <1>, <0>]]',)",0,238
DFS,"[(<2>, <3>), (<2>, <0>), (<2>, <5>), (<2>, <1>), (<3>, <4>), (<1>, <6>)]","{<2>: [<3>, <0>, <5>, <1>],
<3>: [<2>, <4>],
<0>: [<2>],
<5>: [<2>],
<1>: [<2>, <6>],
<4>: [<3>],
<6>: [<1>]}","Node <2> is connected to nodes <3>, <0>, <5>, <1>.
Node <3> is connected to nodes <2>, <4>.
Node <0> is connected to node <2>.
Node <5> is connected to node <2>.
Node <1> is connected to nodes <2>, <6>.
Node <4> is connected to node <3>.
Node <6> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <2>, <1>, <6>, <5>, <3>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <2>. Neighors of node <2>: [<3>, <0>, <5>, <1>].
Visit node <1>. Neighors of node <1>: [<2>, <6>].
Visit node <6>. Neighors of node <6>: [<1>].
Visit node <5>. Neighors of node <5>: [<2>].
Visit node <3>. Neighors of node <3>: [<2>, <4>].
Visit node <4>. Neighors of node <4>: [<3>].
So the DFS traversal is ","('[[<0>, <2>, <1>, <6>, <5>, <4>, <3>], [<0>, <2>, <5>, <1>, <4>, <3>, <6>], [<0>, <2>, <3>, <4>, <1>, <6>, <5>], [<0>, <2>, <1>, <6>, <5>, <3>, <4>]]',)",3,239
DFS,"[(<3>, <5>), (<3>, <0>), (<0>, <2>), (<0>, <4>), (<0>, <1>)]","{<3>: [<5>, <0>],
<5>: [<3>],
<0>: [<3>, <2>, <4>, <1>],
<2>: [<0>],
<4>: [<0>],
<1>: [<0>]}","Node <3> is connected to nodes <5>, <0>.
Node <5> is connected to node <3>.
Node <0> is connected to nodes <3>, <2>, <4>, <1>.
Node <2> is connected to node <0>.
Node <4> is connected to node <0>.
Node <1> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <0>, <4>, <2>, <3>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<0>].
Visit node <0>. Neighors of node <0>: [<3>, <2>, <4>, <1>].
Visit node <4>. Neighors of node <4>: [<0>].
Visit node <2>. Neighors of node <2>: [<0>].
Visit node <3>. Neighors of node <3>: [<5>, <0>].
Visit node <5>. Neighors of node <5>: [<3>].
So the DFS traversal is ","('[[<1>, <0>, <4>, <3>, <2>, <5>], [<1>, <0>, <4>, <2>, <3>, <5>], [<1>, <0>, <3>, <5>, <4>, <2>], [<1>, <0>, <4>, <3>, <5>, <2>]]',)",1,240
DFS,"[(<0>, <4>), (<0>, <5>), (<4>, <2>), (<4>, <1>), (<5>, <2>), (<5>, <6>), (<5>, <3>), (<5>, <1>), (<2>, <3>), (<2>, <1>), (<3>, <6>), (<3>, <1>), (<1>, <6>)]","{<0>: [<4>, <5>],
<4>: [<0>, <2>, <1>],
<5>: [<0>, <2>, <6>, <3>, <1>],
<2>: [<3>, <4>, <5>, <1>],
<3>: [<2>, <6>, <5>, <1>],
<1>: [<2>, <6>, <3>, <4>, <5>],
<6>: [<3>, <5>, <1>]}","Node <0> is connected to nodes <4>, <5>.
Node <4> is connected to nodes <0>, <2>, <1>.
Node <5> is connected to nodes <0>, <2>, <6>, <3>, <1>.
Node <2> is connected to nodes <3>, <4>, <5>, <1>.
Node <3> is connected to nodes <2>, <6>, <5>, <1>.
Node <1> is connected to nodes <2>, <6>, <3>, <4>, <5>.
Node <6> is connected to nodes <3>, <5>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,13,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <1>, <5>, <3>, <6>, <0>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<3>, <4>, <5>, <1>].
Visit node <1>. Neighors of node <1>: [<2>, <6>, <3>, <4>, <5>].
Visit node <5>. Neighors of node <5>: [<0>, <2>, <6>, <3>, <1>].
Visit node <3>. Neighors of node <3>: [<2>, <6>, <5>, <1>].
Visit node <6>. Neighors of node <6>: [<3>, <5>, <1>].
Visit node <0>. Neighors of node <0>: [<4>, <5>].
Visit node <4>. Neighors of node <4>: [<0>, <2>, <1>].
So the DFS traversal is ","('[[<2>, <1>, <0>, <4>, <5>, <3>, <6>], [<2>, <1>, <5>, <3>, <6>, <0>, <4>], [<2>, <1>, <5>, <0>, <6>, <3>, <4>], [<2>, <5>, <4>, <6>, <3>, <0>, <1>]]',)",1,241
DFS,"[(<3>, <2>), (<3>, <0>), (<0>, <1>), (<0>, <6>), (<0>, <4>), (<6>, <5>)]","{<3>: [<2>, <0>],
<2>: [<3>],
<0>: [<3>, <1>, <6>, <4>],
<1>: [<0>],
<6>: [<0>, <5>],
<4>: [<0>],
<5>: [<6>]}","Node <3> is connected to nodes <2>, <0>.
Node <2> is connected to node <3>.
Node <0> is connected to nodes <3>, <1>, <6>, <4>.
Node <1> is connected to node <0>.
Node <6> is connected to nodes <0>, <5>.
Node <4> is connected to node <0>.
Node <5> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <0>, <6>, <5>, <1>, <3>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<0>].
Visit node <0>. Neighors of node <0>: [<3>, <1>, <6>, <4>].
Visit node <6>. Neighors of node <6>: [<0>, <5>].
Visit node <5>. Neighors of node <5>: [<6>].
Visit node <1>. Neighors of node <1>: [<0>].
Visit node <3>. Neighors of node <3>: [<2>, <0>].
Visit node <2>. Neighors of node <2>: [<3>].
So the DFS traversal is ","('[[<4>, <0>, <6>, <5>, <1>, <3>, <2>], [<4>, <3>, <2>, <0>, <5>, <6>, <1>], [<4>, <0>, <6>, <5>, <1>, <2>, <3>], [<4>, <0>, <3>, <2>, <6>, <5>, <1>]]',)",0,242
DFS,"[(<0>, <6>), (<0>, <5>), (<0>, <3>), (<0>, <1>), (<0>, <2>), (<0>, <4>), (<6>, <5>), (<6>, <1>), (<6>, <2>), (<6>, <4>), (<5>, <2>), (<3>, <1>), (<3>, <2>), (<3>, <4>), (<1>, <2>), (<2>, <4>)]","{<0>: [<6>, <5>, <3>, <1>, <2>, <4>],
<6>: [<0>, <5>, <1>, <2>, <4>],
<5>: [<0>, <6>, <2>],
<3>: [<0>, <1>, <2>, <4>],
<1>: [<0>, <6>, <3>, <2>],
<2>: [<0>, <6>, <5>, <3>, <1>, <4>],
<4>: [<0>, <6>, <3>, <2>]}","Node <0> is connected to nodes <6>, <5>, <3>, <1>, <2>, <4>.
Node <6> is connected to nodes <0>, <5>, <1>, <2>, <4>.
Node <5> is connected to nodes <0>, <6>, <2>.
Node <3> is connected to nodes <0>, <1>, <2>, <4>.
Node <1> is connected to nodes <0>, <6>, <3>, <2>.
Node <2> is connected to nodes <0>, <6>, <5>, <3>, <1>, <4>.
Node <4> is connected to nodes <0>, <6>, <3>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,16,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <2>, <1>, <3>, <0>, <5>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<0>, <6>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <6>, <5>, <3>, <1>, <4>].
Visit node <1>. Neighors of node <1>: [<0>, <6>, <3>, <2>].
Visit node <3>. Neighors of node <3>: [<0>, <1>, <2>, <4>].
Visit node <0>. Neighors of node <0>: [<6>, <5>, <3>, <1>, <2>, <4>].
Visit node <5>. Neighors of node <5>: [<0>, <6>, <2>].
Visit node <6>. Neighors of node <6>: [<0>, <5>, <1>, <2>, <4>].
So the DFS traversal is ","('[[<4>, <2>, <1>, <3>, <0>, <5>, <6>], [<4>, <6>, <3>, <1>, <5>, <0>, <2>], [<4>, <2>, <5>, <6>, <1>, <3>, <0>], [<4>, <2>, <1>, <6>, <0>, <5>, <3>]]',)",0,243
DFS,"[(<3>, <6>), (<6>, <4>), (<4>, <2>), (<2>, <1>), (<2>, <5>), (<1>, <0>), (<0>, <5>)]","{<3>: [<6>],
<6>: [<3>, <4>],
<4>: [<6>, <2>],
<2>: [<4>, <1>, <5>],
<1>: [<2>, <0>],
<0>: [<1>, <5>],
<5>: [<2>, <0>]}","Node <3> is connected to node <6>.
Node <6> is connected to nodes <3>, <4>.
Node <4> is connected to nodes <6>, <2>.
Node <2> is connected to nodes <4>, <1>, <5>.
Node <1> is connected to nodes <2>, <0>.
Node <0> is connected to nodes <1>, <5>.
Node <5> is connected to nodes <2>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <5>, <0>, <1>, <4>, <6>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<4>, <1>, <5>].
Visit node <5>. Neighors of node <5>: [<2>, <0>].
Visit node <0>. Neighors of node <0>: [<1>, <5>].
Visit node <1>. Neighors of node <1>: [<2>, <0>].
Visit node <4>. Neighors of node <4>: [<6>, <2>].
Visit node <6>. Neighors of node <6>: [<3>, <4>].
Visit node <3>. Neighors of node <3>: [<6>].
So the DFS traversal is ","('[[<2>, <5>, <6>, <3>, <0>, <1>, <4>], [<2>, <5>, <0>, <1>, <4>, <6>, <3>], [<2>, <6>, <4>, <3>, <0>, <1>, <5>], [<2>, <5>, <0>, <3>, <4>, <6>, <1>]]',)",1,244
DFS,"[(<2>, <0>), (<2>, <4>), (<0>, <1>), (<4>, <5>), (<4>, <3>), (<1>, <5>)]","{<2>: [<0>, <4>],
<0>: [<2>, <1>],
<4>: [<2>, <5>, <3>],
<1>: [<0>, <5>],
<5>: [<1>, <4>],
<3>: [<4>]}","Node <2> is connected to nodes <0>, <4>.
Node <0> is connected to nodes <2>, <1>.
Node <4> is connected to nodes <2>, <5>, <3>.
Node <1> is connected to nodes <0>, <5>.
Node <5> is connected to nodes <1>, <4>.
Node <3> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <4>, <5>, <1>, <0>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<4>].
Visit node <4>. Neighors of node <4>: [<2>, <5>, <3>].
Visit node <5>. Neighors of node <5>: [<1>, <4>].
Visit node <1>. Neighors of node <1>: [<0>, <5>].
Visit node <0>. Neighors of node <0>: [<2>, <1>].
Visit node <2>. Neighors of node <2>: [<0>, <4>].
So the DFS traversal is ","('[[<3>, <2>, <0>, <4>, <1>, <5>], [<3>, <4>, <0>, <2>, <5>, <1>], [<3>, <4>, <5>, <1>, <0>, <2>], [<3>, <4>, <5>, <1>, <0>, <2>]]',)",3,245
DFS,"[(<4>, <2>), (<4>, <3>), (<2>, <6>), (<3>, <6>), (<3>, <2>), (<3>, <0>), (<3>, <1>), (<6>, <1>), (<6>, <4>), (<1>, <3>), (<1>, <4>), (<1>, <6>), (<1>, <2>), (<1>, <5>), (<5>, <3>), (<5>, <2>), (<0>, <1>), (<0>, <3>), (<0>, <6>), (<0>, <2>)]","{<4>: [<2>, <3>],
<2>: [<6>],
<3>: [<6>, <2>, <0>, <1>],
<6>: [<1>, <4>],
<1>: [<3>, <4>, <6>, <2>, <5>],
<5>: [<3>, <2>],
<0>: [<1>, <3>, <6>, <2>]}","Node <4> is connected to nodes <2>, <3>.
Node <2> is connected to node <6>.
Node <3> is connected to nodes <6>, <2>, <0>, <1>.
Node <6> is connected to nodes <1>, <4>.
Node <1> is connected to nodes <3>, <4>, <6>, <2>, <5>.
Node <5> is connected to nodes <3>, <2>.
Node <0> is connected to nodes <1>, <3>, <6>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,20,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <5>, <2>, <6>, <4>, <3>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>, <4>, <6>, <2>, <5>].
Visit node <5>. Neighors of node <5>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<6>].
Visit node <6>. Neighors of node <6>: [<1>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <3>].
Visit node <3>. Neighors of node <3>: [<6>, <2>, <0>, <1>].
Visit node <0>. Neighors of node <0>: [<1>, <3>, <6>, <2>].
So the DFS traversal is ","('[[<1>, <5>, <3>, <0>, <2>, <6>, <4>], [<1>, <5>, <2>, <0>, <4>, <3>, <6>], [<1>, <2>, <3>, <6>, <4>, <0>, <5>], [<1>, <5>, <2>, <6>, <4>, <3>, <0>]]',)",3,246
DFS,"[(<2>, <4>), (<2>, <1>), (<2>, <5>), (<4>, <2>), (<4>, <3>), (<1>, <0>), (<5>, <2>), (<5>, <4>), (<5>, <1>), (<5>, <0>), (<3>, <0>), (<3>, <5>), (<0>, <2>)]","{<2>: [<4>, <1>, <5>],
<4>: [<2>, <3>],
<1>: [<0>],
<5>: [<2>, <4>, <1>, <0>],
<3>: [<0>, <5>],
<0>: [<2>]}","Node <2> is connected to nodes <4>, <1>, <5>.
Node <4> is connected to nodes <2>, <3>.
Node <1> is connected to node <0>.
Node <5> is connected to nodes <2>, <4>, <1>, <0>.
Node <3> is connected to nodes <0>, <5>.
Node <0> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,13,True,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <0>, <2>, <1>, <4>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<2>, <4>, <1>, <0>].
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <2>. Neighors of node <2>: [<4>, <1>, <5>].
Visit node <1>. Neighors of node <1>: [<0>].
Visit node <4>. Neighors of node <4>: [<2>, <3>].
Visit node <3>. Neighors of node <3>: [<0>, <5>].
So the DFS traversal is ","('[[<5>, <4>, <0>, <3>, <2>, <1>], [<5>, <0>, <2>, <1>, <4>, <3>], [<5>, <0>, <2>, <1>, <4>, <3>], [<5>, <0>, <4>, <3>, <2>, <1>]]',)",1,247
DFS,"[(<4>, <5>), (<4>, <2>), (<5>, <0>), (<5>, <4>), (<2>, <1>), (<2>, <4>), (<2>, <3>), (<3>, <0>), (<3>, <4>), (<0>, <2>), (<0>, <1>), (<1>, <4>), (<1>, <3>), (<1>, <2>)]","{<4>: [<5>, <2>],
<5>: [<0>, <4>],
<2>: [<1>, <4>, <3>],
<3>: [<0>, <4>],
<0>: [<2>, <1>],
<1>: [<4>, <3>, <2>]}","Node <4> is connected to nodes <5>, <2>.
Node <5> is connected to nodes <0>, <4>.
Node <2> is connected to nodes <1>, <4>, <3>.
Node <3> is connected to nodes <0>, <4>.
Node <0> is connected to nodes <2>, <1>.
Node <1> is connected to nodes <4>, <3>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,14,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <2>, <3>, <4>, <5>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<4>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<1>, <4>, <3>].
Visit node <3>. Neighors of node <3>: [<0>, <4>].
Visit node <4>. Neighors of node <4>: [<5>, <2>].
Visit node <5>. Neighors of node <5>: [<0>, <4>].
Visit node <0>. Neighors of node <0>: [<2>, <1>].
So the DFS traversal is ","('[[<1>, <2>, <3>, <5>, <4>, <0>], [<1>, <2>, <3>, <4>, <5>, <0>], [<1>, <2>, <5>, <0>, <3>, <4>], [<1>, <5>, <2>, <0>, <3>, <4>]]',)",1,248
DFS,"[(<0>, <5>), (<0>, <2>), (<2>, <1>), (<1>, <3>), (<1>, <4>), (<3>, <2>), (<4>, <0>), (<4>, <5>)]","{<0>: [<5>, <2>],
<5>: [],
<2>: [<1>],
<1>: [<3>, <4>],
<3>: [<2>],
<4>: [<0>, <5>]}","Node <0> is connected to nodes <5>, <2>.
Node <2> is connected to node <1>.
Node <1> is connected to nodes <3>, <4>.
Node <3> is connected to node <2>.
Node <4> is connected to nodes <0>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,8,True,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <1>, <4>, <5>, <0>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <1>. Neighors of node <1>: [<3>, <4>].
Visit node <4>. Neighors of node <4>: [<0>, <5>].
Visit node <5>. Neighors of node <5>: [].
Visit node <0>. Neighors of node <0>: [<5>, <2>].
Visit node <3>. Neighors of node <3>: [<2>].
So the DFS traversal is ","('[[<2>, <0>, <4>, <1>, <5>, <3>], [<2>, <1>, <4>, <5>, <0>, <3>], [<2>, <1>, <0>, <3>, <4>, <5>], [<2>, <1>, <4>, <5>, <0>, <3>]]',)",3,249
DFS,"[(<3>, <1>), (<3>, <4>), (<3>, <0>), (<4>, <2>), (<2>, <5>)]","{<3>: [<1>, <4>, <0>],
<1>: [<3>],
<4>: [<3>, <2>],
<0>: [<3>],
<2>: [<4>, <5>],
<5>: [<2>]}","Node <3> is connected to nodes <1>, <4>, <0>.
Node <1> is connected to node <3>.
Node <4> is connected to nodes <3>, <2>.
Node <0> is connected to node <3>.
Node <2> is connected to nodes <4>, <5>.
Node <5> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <3>, <4>, <2>, <5>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<3>].
Visit node <3>. Neighors of node <3>: [<1>, <4>, <0>].
Visit node <4>. Neighors of node <4>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<4>, <5>].
Visit node <5>. Neighors of node <5>: [<2>].
Visit node <1>. Neighors of node <1>: [<3>].
So the DFS traversal is ","('[[<0>, <3>, <4>, <2>, <5>, <1>], [<0>, <3>, <4>, <1>, <5>, <2>], [<0>, <3>, <5>, <1>, <4>, <2>], [<0>, <5>, <2>, <3>, <4>, <1>]]',)",0,250
DFS,"[(<3>, <0>), (<3>, <4>), (<3>, <1>), (<3>, <2>), (<0>, <1>)]","{<3>: [<0>, <4>, <1>, <2>],
<0>: [<3>, <1>],
<4>: [<3>],
<1>: [<3>, <0>],
<2>: [<3>]}","Node <3> is connected to nodes <0>, <4>, <1>, <2>.
Node <0> is connected to nodes <3>, <1>.
Node <4> is connected to node <3>.
Node <1> is connected to nodes <3>, <0>.
Node <2> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <2>, <1>, <0>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<0>, <4>, <1>, <2>].
Visit node <2>. Neighors of node <2>: [<3>].
Visit node <1>. Neighors of node <1>: [<3>, <0>].
Visit node <0>. Neighors of node <0>: [<3>, <1>].
Visit node <4>. Neighors of node <4>: [<3>].
So the DFS traversal is ","('[[<3>, <4>, <2>, <1>, <0>], [<3>, <2>, <1>, <4>, <0>], [<3>, <2>, <1>, <0>, <4>], [<3>, <2>, <4>, <0>, <1>]]',)",2,251
DFS,"[(<1>, <5>), (<1>, <0>), (<1>, <4>), (<1>, <6>), (<5>, <2>), (<5>, <3>), (<5>, <6>), (<0>, <4>), (<0>, <3>), (<0>, <6>), (<0>, <2>), (<4>, <3>), (<4>, <1>), (<4>, <5>), (<4>, <0>), (<6>, <1>), (<6>, <0>), (<2>, <4>), (<2>, <6>), (<2>, <1>), (<2>, <5>), (<3>, <1>), (<3>, <2>), (<3>, <4>)]","{<1>: [<5>, <0>, <4>, <6>],
<5>: [<2>, <3>, <6>],
<0>: [<4>, <3>, <6>, <2>],
<4>: [<3>, <1>, <5>, <0>],
<6>: [<1>, <0>],
<2>: [<4>, <6>, <1>, <5>],
<3>: [<1>, <2>, <4>]}","Node <1> is connected to nodes <5>, <0>, <4>, <6>.
Node <5> is connected to nodes <2>, <3>, <6>.
Node <0> is connected to nodes <4>, <3>, <6>, <2>.
Node <4> is connected to nodes <3>, <1>, <5>, <0>.
Node <6> is connected to nodes <1>, <0>.
Node <2> is connected to nodes <4>, <6>, <1>, <5>.
Node <3> is connected to nodes <1>, <2>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,24,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <6>, <0>, <2>, <5>, <3>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<5>, <0>, <4>, <6>].
Visit node <6>. Neighors of node <6>: [<1>, <0>].
Visit node <0>. Neighors of node <0>: [<4>, <3>, <6>, <2>].
Visit node <2>. Neighors of node <2>: [<4>, <6>, <1>, <5>].
Visit node <5>. Neighors of node <5>: [<2>, <3>, <6>].
Visit node <3>. Neighors of node <3>: [<1>, <2>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <1>, <5>, <0>].
So the DFS traversal is ","('[[<1>, <6>, <3>, <4>, <0>, <2>, <5>], [<1>, <6>, <0>, <2>, <5>, <3>, <4>], [<1>, <3>, <6>, <0>, <5>, <4>, <2>], [<1>, <6>, <0>, <4>, <5>, <3>, <2>]]',)",1,252
DFS,"[(<0>, <2>), (<0>, <1>), (<2>, <3>), (<3>, <4>)]","{<0>: [<2>, <1>],
<2>: [<0>, <3>],
<1>: [<0>],
<3>: [<2>, <4>],
<4>: [<3>]}","Node <0> is connected to nodes <2>, <1>.
Node <2> is connected to nodes <0>, <3>.
Node <1> is connected to node <0>.
Node <3> is connected to nodes <2>, <4>.
Node <4> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <0>, <2>, <3>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<0>].
Visit node <0>. Neighors of node <0>: [<2>, <1>].
Visit node <2>. Neighors of node <2>: [<0>, <3>].
Visit node <3>. Neighors of node <3>: [<2>, <4>].
Visit node <4>. Neighors of node <4>: [<3>].
So the DFS traversal is ","('[[<1>, <0>, <2>, <3>, <4>], [<1>, <0>, <2>, <4>, <3>], [<1>, <4>, <0>, <2>, <3>], [<1>, <4>, <0>, <2>, <3>]]',)",0,253
DFS,"[(<3>, <5>), (<3>, <2>), (<3>, <0>), (<3>, <4>), (<5>, <2>), (<5>, <1>), (<5>, <4>), (<2>, <0>), (<2>, <4>), (<0>, <1>), (<0>, <4>), (<4>, <1>)]","{<3>: [<5>, <2>, <0>, <4>],
<5>: [<3>, <2>, <1>, <4>],
<2>: [<3>, <5>, <0>, <4>],
<0>: [<3>, <2>, <1>, <4>],
<4>: [<3>, <5>, <2>, <0>, <1>],
<1>: [<5>, <0>, <4>]}","Node <3> is connected to nodes <5>, <2>, <0>, <4>.
Node <5> is connected to nodes <3>, <2>, <1>, <4>.
Node <2> is connected to nodes <3>, <5>, <0>, <4>.
Node <0> is connected to nodes <3>, <2>, <1>, <4>.
Node <4> is connected to nodes <3>, <5>, <2>, <0>, <1>.
Node <1> is connected to nodes <5>, <0>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,12,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <1>, <0>, <2>, <5>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<3>, <5>, <2>, <0>, <1>].
Visit node <1>. Neighors of node <1>: [<5>, <0>, <4>].
Visit node <0>. Neighors of node <0>: [<3>, <2>, <1>, <4>].
Visit node <2>. Neighors of node <2>: [<3>, <5>, <0>, <4>].
Visit node <5>. Neighors of node <5>: [<3>, <2>, <1>, <4>].
Visit node <3>. Neighors of node <3>: [<5>, <2>, <0>, <4>].
So the DFS traversal is ","('[[<4>, <1>, <5>, <3>, <0>, <2>], [<4>, <5>, <2>, <3>, <1>, <0>], [<4>, <1>, <0>, <2>, <5>, <3>], [<4>, <1>, <0>, <3>, <2>, <5>]]',)",2,254
DFS,"[(<1>, <2>), (<1>, <0>), (<2>, <5>), (<2>, <4>), (<0>, <3>)]","{<1>: [<2>, <0>],
<2>: [<1>, <5>, <4>],
<0>: [<1>, <3>],
<5>: [<2>],
<4>: [<2>],
<3>: [<0>]}","Node <1> is connected to nodes <2>, <0>.
Node <2> is connected to nodes <1>, <5>, <4>.
Node <0> is connected to nodes <1>, <3>.
Node <5> is connected to node <2>.
Node <4> is connected to node <2>.
Node <3> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <2>, <5>, <1>, <0>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<2>].
Visit node <2>. Neighors of node <2>: [<1>, <5>, <4>].
Visit node <5>. Neighors of node <5>: [<2>].
Visit node <1>. Neighors of node <1>: [<2>, <0>].
Visit node <0>. Neighors of node <0>: [<1>, <3>].
Visit node <3>. Neighors of node <3>: [<0>].
So the DFS traversal is ","('[[<4>, <2>, <0>, <3>, <5>, <1>], [<4>, <1>, <3>, <5>, <0>, <2>], [<4>, <2>, <5>, <1>, <0>, <3>], [<4>, <2>, <5>, <1>, <0>, <3>]]',)",2,255
DFS,"[(<1>, <2>), (<2>, <4>), (<2>, <3>), (<4>, <3>), (<3>, <0>)]","{<1>: [<2>],
<2>: [<1>, <4>, <3>],
<4>: [<2>, <3>],
<3>: [<2>, <4>, <0>],
<0>: [<3>]}","Node <1> is connected to node <2>.
Node <2> is connected to nodes <1>, <4>, <3>.
Node <4> is connected to nodes <2>, <3>.
Node <3> is connected to nodes <2>, <4>, <0>.
Node <0> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <0>, <4>, <2>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<2>, <4>, <0>].
Visit node <0>. Neighors of node <0>: [<3>].
Visit node <4>. Neighors of node <4>: [<2>, <3>].
Visit node <2>. Neighors of node <2>: [<1>, <4>, <3>].
Visit node <1>. Neighors of node <1>: [<2>].
So the DFS traversal is ","('[[<3>, <0>, <4>, <2>, <1>], [<3>, <0>, <2>, <4>, <1>], [<3>, <1>, <0>, <4>, <2>], [<3>, <4>, <2>, <0>, <1>]]',)",0,256
DFS,"[(<1>, <3>), (<1>, <0>), (<1>, <4>), (<3>, <4>), (<4>, <2>), (<5>, <6>), (<6>, <2>)]","{<1>: [<3>, <0>, <4>],
<3>: [<1>, <4>],
<0>: [<1>],
<4>: [<1>, <3>, <2>],
<5>: [<6>],
<6>: [<5>, <2>],
<2>: [<6>, <4>]}","Node <1> is connected to nodes <3>, <0>, <4>.
Node <3> is connected to nodes <1>, <4>.
Node <0> is connected to node <1>.
Node <4> is connected to nodes <1>, <3>, <2>.
Node <5> is connected to node <6>.
Node <6> is connected to nodes <5>, <2>.
Node <2> is connected to nodes <6>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <2>, <6>, <5>, <3>, <1>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<1>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<6>, <4>].
Visit node <6>. Neighors of node <6>: [<5>, <2>].
Visit node <5>. Neighors of node <5>: [<6>].
Visit node <3>. Neighors of node <3>: [<1>, <4>].
Visit node <1>. Neighors of node <1>: [<3>, <0>, <4>].
Visit node <0>. Neighors of node <0>: [<1>].
So the DFS traversal is ","('[[<4>, <2>, <6>, <5>, <3>, <1>, <0>], [<4>, <2>, <3>, <1>, <5>, <6>, <0>], [<4>, <2>, <6>, <3>, <1>, <5>, <0>], [<4>, <2>, <1>, <0>, <6>, <5>, <3>]]',)",0,257
DFS,"[(<1>, <5>), (<1>, <3>), (<3>, <4>), (<2>, <0>), (<2>, <4>)]","{<1>: [<5>, <3>],
<5>: [<1>],
<3>: [<1>, <4>],
<2>: [<0>, <4>],
<0>: [<2>],
<4>: [<2>, <3>]}","Node <1> is connected to nodes <5>, <3>.
Node <5> is connected to node <1>.
Node <3> is connected to nodes <1>, <4>.
Node <2> is connected to nodes <0>, <4>.
Node <0> is connected to node <2>.
Node <4> is connected to nodes <2>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <4>, <2>, <0>, <1>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<1>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <3>].
Visit node <2>. Neighors of node <2>: [<0>, <4>].
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <1>. Neighors of node <1>: [<5>, <3>].
Visit node <5>. Neighors of node <5>: [<1>].
So the DFS traversal is ","('[[<3>, <4>, <2>, <0>, <5>, <1>], [<3>, <4>, <1>, <5>, <2>, <0>], [<3>, <2>, <1>, <4>, <5>, <0>], [<3>, <4>, <2>, <0>, <1>, <5>]]',)",3,258
DFS,"[(<1>, <0>), (<1>, <3>), (<0>, <4>), (<3>, <2>), (<4>, <2>)]","{<1>: [<0>, <3>],
<0>: [<1>, <4>],
<3>: [<1>, <2>],
<4>: [<0>, <2>],
<2>: [<4>, <3>]}","Node <1> is connected to nodes <0>, <3>.
Node <0> is connected to nodes <1>, <4>.
Node <3> is connected to nodes <1>, <2>.
Node <4> is connected to nodes <0>, <2>.
Node <2> is connected to nodes <4>, <3>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <2>, <4>, <0>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<1>, <2>].
Visit node <2>. Neighors of node <2>: [<4>, <3>].
Visit node <4>. Neighors of node <4>: [<0>, <2>].
Visit node <0>. Neighors of node <0>: [<1>, <4>].
Visit node <1>. Neighors of node <1>: [<0>, <3>].
So the DFS traversal is ","('[[<3>, <1>, <2>, <4>, <0>], [<3>, <2>, <4>, <0>, <1>], [<3>, <4>, <0>, <2>, <1>], [<3>, <2>, <0>, <4>, <1>]]',)",1,259
DFS,"[(<3>, <0>), (<3>, <5>), (<3>, <4>), (<3>, <6>), (<3>, <1>), (<0>, <5>), (<0>, <1>), (<4>, <1>), (<6>, <1>), (<1>, <2>)]","{<3>: [<0>, <5>, <4>, <6>, <1>],
<0>: [<3>, <5>, <1>],
<5>: [<3>, <0>],
<4>: [<3>, <1>],
<6>: [<3>, <1>],
<1>: [<3>, <0>, <2>, <6>, <4>],
<2>: [<1>]}","Node <3> is connected to nodes <0>, <5>, <4>, <6>, <1>.
Node <0> is connected to nodes <3>, <5>, <1>.
Node <5> is connected to nodes <3>, <0>.
Node <4> is connected to nodes <3>, <1>.
Node <6> is connected to nodes <3>, <1>.
Node <1> is connected to nodes <3>, <0>, <2>, <6>, <4>.
Node <2> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <1>, <4>, <6>, <2>, <0>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<0>, <5>, <4>, <6>, <1>].
Visit node <1>. Neighors of node <1>: [<3>, <0>, <2>, <6>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <1>].
Visit node <6>. Neighors of node <6>: [<3>, <1>].
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <0>. Neighors of node <0>: [<3>, <5>, <1>].
Visit node <5>. Neighors of node <5>: [<3>, <0>].
So the DFS traversal is ","('[[<3>, <1>, <4>, <2>, <6>, <0>, <5>], [<3>, <6>, <2>, <0>, <5>, <1>, <4>], [<3>, <1>, <0>, <5>, <4>, <6>, <2>], [<3>, <1>, <4>, <6>, <2>, <0>, <5>]]',)",3,260
DFS,"[(<4>, <1>), (<4>, <0>), (<1>, <3>), (<1>, <0>), (<0>, <2>)]","{<4>: [<1>, <0>],
<1>: [<4>, <3>, <0>],
<0>: [<4>, <1>, <2>],
<3>: [<1>],
<2>: [<0>]}","Node <4> is connected to nodes <1>, <0>.
Node <1> is connected to nodes <4>, <3>, <0>.
Node <0> is connected to nodes <4>, <1>, <2>.
Node <3> is connected to node <1>.
Node <2> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <2>, <1>, <3>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<4>, <1>, <2>].
Visit node <2>. Neighors of node <2>: [<0>].
Visit node <1>. Neighors of node <1>: [<4>, <3>, <0>].
Visit node <3>. Neighors of node <3>: [<1>].
Visit node <4>. Neighors of node <4>: [<1>, <0>].
So the DFS traversal is ","('[[<0>, <4>, <2>, <1>, <3>], [<0>, <2>, <1>, <3>, <4>], [<0>, <4>, <1>, <3>, <2>], [<0>, <2>, <1>, <3>, <4>]]',)",3,261
DFS,"[(<6>, <1>), (<1>, <4>), (<1>, <3>), (<4>, <0>), (<3>, <0>), (<3>, <5>), (<2>, <5>)]","{<6>: [<1>],
<1>: [<6>, <4>, <3>],
<4>: [<1>, <0>],
<3>: [<1>, <0>, <5>],
<0>: [<4>, <3>],
<2>: [<5>],
<5>: [<2>, <3>]}","Node <6> is connected to node <1>.
Node <1> is connected to nodes <6>, <4>, <3>.
Node <4> is connected to nodes <1>, <0>.
Node <3> is connected to nodes <1>, <0>, <5>.
Node <0> is connected to nodes <4>, <3>.
Node <2> is connected to node <5>.
Node <5> is connected to nodes <2>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <5>, <3>, <0>, <4>, <1>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<5>].
Visit node <5>. Neighors of node <5>: [<2>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <0>, <5>].
Visit node <0>. Neighors of node <0>: [<4>, <3>].
Visit node <4>. Neighors of node <4>: [<1>, <0>].
Visit node <1>. Neighors of node <1>: [<6>, <4>, <3>].
Visit node <6>. Neighors of node <6>: [<1>].
So the DFS traversal is ","('[[<2>, <3>, <0>, <6>, <4>, <1>, <5>], [<2>, <5>, <1>, <6>, <3>, <0>, <4>], [<2>, <5>, <3>, <1>, <6>, <0>, <4>], [<2>, <5>, <3>, <0>, <4>, <1>, <6>]]',)",3,262
DFS,"[(<0>, <4>), (<0>, <5>), (<0>, <1>), (<0>, <3>), (<3>, <2>)]","{<0>: [<4>, <5>, <1>, <3>],
<4>: [<0>],
<5>: [<0>],
<1>: [<0>],
<3>: [<0>, <2>],
<2>: [<3>]}","Node <0> is connected to nodes <4>, <5>, <1>, <3>.
Node <4> is connected to node <0>.
Node <5> is connected to node <0>.
Node <1> is connected to node <0>.
Node <3> is connected to nodes <0>, <2>.
Node <2> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <3>, <0>, <1>, <5>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<3>].
Visit node <3>. Neighors of node <3>: [<0>, <2>].
Visit node <0>. Neighors of node <0>: [<4>, <5>, <1>, <3>].
Visit node <1>. Neighors of node <1>: [<0>].
Visit node <5>. Neighors of node <5>: [<0>].
Visit node <4>. Neighors of node <4>: [<0>].
So the DFS traversal is ","('[[<2>, <3>, <0>, <5>, <4>, <1>], [<2>, <3>, <5>, <4>, <0>, <1>], [<2>, <3>, <0>, <1>, <5>, <4>], [<2>, <1>, <3>, <5>, <4>, <0>]]',)",2,263
DFS,"[(<1>, <2>), (<1>, <5>), (<1>, <0>), (<0>, <4>), (<0>, <3>)]","{<1>: [<2>, <5>, <0>],
<2>: [<1>],
<5>: [<1>],
<0>: [<1>, <4>, <3>],
<4>: [<0>],
<3>: [<0>]}","Node <1> is connected to nodes <2>, <5>, <0>.
Node <2> is connected to node <1>.
Node <5> is connected to node <1>.
Node <0> is connected to nodes <1>, <4>, <3>.
Node <4> is connected to node <0>.
Node <3> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,5,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <3>, <4>, <1>, <5>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<1>, <4>, <3>].
Visit node <3>. Neighors of node <3>: [<0>].
Visit node <4>. Neighors of node <4>: [<0>].
Visit node <1>. Neighors of node <1>: [<2>, <5>, <0>].
Visit node <5>. Neighors of node <5>: [<1>].
Visit node <2>. Neighors of node <2>: [<1>].
So the DFS traversal is ","('[[<0>, <3>, <5>, <2>, <4>, <1>], [<0>, <3>, <5>, <2>, <4>, <1>], [<0>, <3>, <4>, <1>, <5>, <2>], [<0>, <3>, <4>, <5>, <2>, <1>]]',)",2,264
DFS,"[(<1>, <5>), (<5>, <0>), (<0>, <4>), (<0>, <3>), (<4>, <3>), (<3>, <2>)]","{<1>: [<5>],
<5>: [<1>, <0>],
<0>: [<5>, <4>, <3>],
<4>: [<0>, <3>],
<3>: [<4>, <0>, <2>],
<2>: [<3>]}","Node <1> is connected to node <5>.
Node <5> is connected to nodes <1>, <0>.
Node <0> is connected to nodes <5>, <4>, <3>.
Node <4> is connected to nodes <0>, <3>.
Node <3> is connected to nodes <4>, <0>, <2>.
Node <2> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <3>, <2>, <4>, <5>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<5>, <4>, <3>].
Visit node <3>. Neighors of node <3>: [<4>, <0>, <2>].
Visit node <2>. Neighors of node <2>: [<3>].
Visit node <4>. Neighors of node <4>: [<0>, <3>].
Visit node <5>. Neighors of node <5>: [<1>, <0>].
Visit node <1>. Neighors of node <1>: [<5>].
So the DFS traversal is ","('[[<0>, <4>, <5>, <1>, <2>, <3>], [<0>, <3>, <5>, <1>, <2>, <4>], [<0>, <3>, <2>, <4>, <1>, <5>], [<0>, <3>, <2>, <4>, <5>, <1>]]',)",3,265
DFS,"[(<1>, <3>), (<3>, <4>), (<3>, <0>), (<0>, <2>)]","{<1>: [<3>],
<3>: [<1>, <4>, <0>],
<4>: [<3>],
<0>: [<3>, <2>],
<2>: [<0>]}","Node <1> is connected to node <3>.
Node <3> is connected to nodes <1>, <4>, <0>.
Node <4> is connected to node <3>.
Node <0> is connected to nodes <3>, <2>.
Node <2> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <3>, <0>, <2>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<3>].
Visit node <3>. Neighors of node <3>: [<1>, <4>, <0>].
Visit node <0>. Neighors of node <0>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<0>].
Visit node <1>. Neighors of node <1>: [<3>].
So the DFS traversal is ","('[[<4>, <3>, <1>, <2>, <0>], [<4>, <3>, <0>, <2>, <1>], [<4>, <1>, <3>, <0>, <2>], [<4>, <2>, <0>, <1>, <3>]]',)",1,266
DFS,"[(<3>, <0>), (<3>, <5>), (<0>, <4>), (<0>, <1>), (<4>, <2>), (<4>, <1>)]","{<3>: [<0>, <5>],
<0>: [<3>, <4>, <1>],
<5>: [<3>],
<4>: [<0>, <2>, <1>],
<1>: [<0>, <4>],
<2>: [<4>]}","Node <3> is connected to nodes <0>, <5>.
Node <0> is connected to nodes <3>, <4>, <1>.
Node <5> is connected to node <3>.
Node <4> is connected to nodes <0>, <2>, <1>.
Node <1> is connected to nodes <0>, <4>.
Node <2> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <4>, <2>, <3>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<3>, <4>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <4>].
Visit node <4>. Neighors of node <4>: [<0>, <2>, <1>].
Visit node <2>. Neighors of node <2>: [<4>].
Visit node <3>. Neighors of node <3>: [<0>, <5>].
Visit node <5>. Neighors of node <5>: [<3>].
So the DFS traversal is ","('[[<0>, <1>, <3>, <5>, <4>, <2>], [<0>, <4>, <2>, <5>, <3>, <1>], [<0>, <1>, <4>, <5>, <2>, <3>], [<0>, <1>, <4>, <2>, <3>, <5>]]',)",3,267
DFS,"[(<0>, <4>), (<4>, <1>), (<4>, <2>), (<2>, <3>), (<2>, <1>), (<3>, <5>), (<3>, <4>), (<3>, <1>), (<1>, <0>), (<1>, <4>), (<5>, <0>), (<5>, <2>), (<5>, <3>)]","{<0>: [<4>],
<4>: [<1>, <2>],
<2>: [<3>, <1>],
<3>: [<5>, <4>, <1>],
<1>: [<0>, <4>],
<5>: [<0>, <2>, <3>]}","Node <0> is connected to node <4>.
Node <4> is connected to nodes <1>, <2>.
Node <2> is connected to nodes <3>, <1>.
Node <3> is connected to nodes <5>, <4>, <1>.
Node <1> is connected to nodes <0>, <4>.
Node <5> is connected to nodes <0>, <2>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,13,True,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <1>, <4>, <2>, <0>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<5>, <4>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <4>].
Visit node <4>. Neighors of node <4>: [<1>, <2>].
Visit node <2>. Neighors of node <2>: [<3>, <1>].
Visit node <0>. Neighors of node <0>: [<4>].
Visit node <5>. Neighors of node <5>: [<0>, <2>, <3>].
So the DFS traversal is ","('[[<3>, <0>, <2>, <4>, <5>, <1>], [<3>, <1>, <4>, <5>, <0>, <2>], [<3>, <1>, <0>, <5>, <4>, <2>], [<3>, <1>, <4>, <2>, <0>, <5>]]',)",3,268
DFS,"[(<2>, <0>), (<2>, <4>), (<2>, <1>), (<1>, <3>)]","{<2>: [<0>, <4>, <1>],
<0>: [<2>],
<4>: [<2>],
<1>: [<2>, <3>],
<3>: [<1>]}","Node <2> is connected to nodes <0>, <4>, <1>.
Node <0> is connected to node <2>.
Node <4> is connected to node <2>.
Node <1> is connected to nodes <2>, <3>.
Node <3> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <1>, <2>, <4>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<1>].
Visit node <1>. Neighors of node <1>: [<2>, <3>].
Visit node <2>. Neighors of node <2>: [<0>, <4>, <1>].
Visit node <4>. Neighors of node <4>: [<2>].
Visit node <0>. Neighors of node <0>: [<2>].
So the DFS traversal is ","('[[<3>, <0>, <4>, <2>, <1>], [<3>, <1>, <0>, <4>, <2>], [<3>, <0>, <1>, <2>, <4>], [<3>, <1>, <2>, <4>, <0>]]',)",3,269
DFS,"[(<3>, <0>), (<3>, <6>), (<0>, <2>), (<6>, <4>), (<2>, <1>), (<1>, <5>), (<5>, <4>)]","{<3>: [<0>, <6>],
<0>: [<3>, <2>],
<6>: [<3>, <4>],
<2>: [<0>, <1>],
<1>: [<2>, <5>],
<5>: [<1>, <4>],
<4>: [<5>, <6>]}","Node <3> is connected to nodes <0>, <6>.
Node <0> is connected to nodes <3>, <2>.
Node <6> is connected to nodes <3>, <4>.
Node <2> is connected to nodes <0>, <1>.
Node <1> is connected to nodes <2>, <5>.
Node <5> is connected to nodes <1>, <4>.
Node <4> is connected to nodes <5>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <5>, <4>, <6>, <3>, <0>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<2>, <5>].
Visit node <5>. Neighors of node <5>: [<1>, <4>].
Visit node <4>. Neighors of node <4>: [<5>, <6>].
Visit node <6>. Neighors of node <6>: [<3>, <4>].
Visit node <3>. Neighors of node <3>: [<0>, <6>].
Visit node <0>. Neighors of node <0>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <1>].
So the DFS traversal is ","('[[<1>, <5>, <4>, <6>, <3>, <0>, <2>], [<1>, <6>, <3>, <0>, <2>, <4>, <5>], [<1>, <5>, <0>, <2>, <4>, <6>, <3>], [<1>, <5>, <4>, <2>, <3>, <0>, <6>]]',)",0,270
DFS,"[(<0>, <2>), (<0>, <4>), (<0>, <3>), (<2>, <1>), (<2>, <4>), (<2>, <3>), (<4>, <1>), (<4>, <5>), (<4>, <3>), (<3>, <1>), (<3>, <5>), (<1>, <5>)]","{<0>: [<2>, <4>, <3>],
<2>: [<0>, <1>, <4>, <3>],
<4>: [<0>, <1>, <2>, <5>, <3>],
<3>: [<0>, <1>, <2>, <4>, <5>],
<1>: [<2>, <4>, <5>, <3>],
<5>: [<1>, <4>, <3>]}","Node <0> is connected to nodes <2>, <4>, <3>.
Node <2> is connected to nodes <0>, <1>, <4>, <3>.
Node <4> is connected to nodes <0>, <1>, <2>, <5>, <3>.
Node <3> is connected to nodes <0>, <1>, <2>, <4>, <5>.
Node <1> is connected to nodes <2>, <4>, <5>, <3>.
Node <5> is connected to nodes <1>, <4>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,12,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <3>, <5>, <4>, <2>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<2>, <4>, <3>].
Visit node <3>. Neighors of node <3>: [<0>, <1>, <2>, <4>, <5>].
Visit node <5>. Neighors of node <5>: [<1>, <4>, <3>].
Visit node <4>. Neighors of node <4>: [<0>, <1>, <2>, <5>, <3>].
Visit node <2>. Neighors of node <2>: [<0>, <1>, <4>, <3>].
Visit node <1>. Neighors of node <1>: [<2>, <4>, <5>, <3>].
So the DFS traversal is ","('[[<0>, <3>, <2>, <1>, <5>, <4>], [<0>, <3>, <5>, <4>, <2>, <1>], [<0>, <3>, <5>, <1>, <2>, <4>], [<0>, <3>, <2>, <1>, <5>, <4>]]',)",1,271
DFS,"[(<4>, <2>), (<4>, <1>), (<4>, <5>), (<2>, <1>), (<2>, <3>), (<2>, <0>), (<2>, <4>), (<1>, <5>), (<1>, <0>), (<1>, <4>), (<1>, <2>), (<5>, <2>), (<3>, <4>), (<3>, <2>), (<3>, <1>), (<0>, <1>), (<0>, <3>)]","{<4>: [<2>, <1>, <5>],
<2>: [<1>, <3>, <0>, <4>],
<1>: [<5>, <0>, <4>, <2>],
<5>: [<2>],
<3>: [<4>, <2>, <1>],
<0>: [<1>, <3>]}","Node <4> is connected to nodes <2>, <1>, <5>.
Node <2> is connected to nodes <1>, <3>, <0>, <4>.
Node <1> is connected to nodes <5>, <0>, <4>, <2>.
Node <5> is connected to node <2>.
Node <3> is connected to nodes <4>, <2>, <1>.
Node <0> is connected to nodes <1>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,17,True,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <3>, <1>, <2>, <4>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<1>, <3>].
Visit node <3>. Neighors of node <3>: [<4>, <2>, <1>].
Visit node <1>. Neighors of node <1>: [<5>, <0>, <4>, <2>].
Visit node <2>. Neighors of node <2>: [<1>, <3>, <0>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <1>, <5>].
Visit node <5>. Neighors of node <5>: [<2>].
So the DFS traversal is ","('[[<0>, <3>, <5>, <4>, <1>, <2>], [<0>, <3>, <4>, <5>, <1>, <2>], [<0>, <3>, <1>, <2>, <5>, <4>], [<0>, <3>, <1>, <2>, <4>, <5>]]',)",3,272
DFS,"[(<2>, <6>), (<2>, <4>), (<2>, <3>), (<6>, <1>), (<4>, <0>), (<4>, <3>), (<1>, <5>)]","{<2>: [<6>, <4>, <3>],
<6>: [<2>, <1>],
<4>: [<2>, <0>, <3>],
<3>: [<2>, <4>],
<1>: [<6>, <5>],
<5>: [<1>],
<0>: [<4>]}","Node <2> is connected to nodes <6>, <4>, <3>.
Node <6> is connected to nodes <2>, <1>.
Node <4> is connected to nodes <2>, <0>, <3>.
Node <3> is connected to nodes <2>, <4>.
Node <1> is connected to nodes <6>, <5>.
Node <5> is connected to node <1>.
Node <0> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <1>, <6>, <2>, <3>, <4>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<1>].
Visit node <1>. Neighors of node <1>: [<6>, <5>].
Visit node <6>. Neighors of node <6>: [<2>, <1>].
Visit node <2>. Neighors of node <2>: [<6>, <4>, <3>].
Visit node <3>. Neighors of node <3>: [<2>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <0>, <3>].
Visit node <0>. Neighors of node <0>: [<4>].
So the DFS traversal is ","('[[<5>, <3>, <0>, <4>, <1>, <2>, <6>], [<5>, <1>, <6>, <2>, <3>, <4>, <0>], [<5>, <1>, <4>, <0>, <6>, <2>, <3>], [<5>, <1>, <6>, <4>, <2>, <0>, <3>]]',)",1,273
DFS,"[(<3>, <2>), (<3>, <1>), (<2>, <6>), (<2>, <0>), (<6>, <0>), (<0>, <5>), (<5>, <4>)]","{<3>: [<2>, <1>],
<2>: [<3>, <6>, <0>],
<1>: [<3>],
<6>: [<2>, <0>],
<0>: [<2>, <6>, <5>],
<5>: [<0>, <4>],
<4>: [<5>]}","Node <3> is connected to nodes <2>, <1>.
Node <2> is connected to nodes <3>, <6>, <0>.
Node <1> is connected to node <3>.
Node <6> is connected to nodes <2>, <0>.
Node <0> is connected to nodes <2>, <6>, <5>.
Node <5> is connected to nodes <0>, <4>.
Node <4> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <1>, <2>, <0>, <5>, <4>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<2>, <1>].
Visit node <1>. Neighors of node <1>: [<3>].
Visit node <2>. Neighors of node <2>: [<3>, <6>, <0>].
Visit node <0>. Neighors of node <0>: [<2>, <6>, <5>].
Visit node <5>. Neighors of node <5>: [<0>, <4>].
Visit node <4>. Neighors of node <4>: [<5>].
Visit node <6>. Neighors of node <6>: [<2>, <0>].
So the DFS traversal is ","('[[<3>, <1>, <2>, <0>, <5>, <4>, <6>], [<3>, <1>, <2>, <0>, <6>, <5>, <4>], [<3>, <5>, <0>, <1>, <6>, <4>, <2>], [<3>, <1>, <4>, <6>, <2>, <0>, <5>]]',)",0,274
DFS,"[(<5>, <6>), (<5>, <1>), (<6>, <3>), (<6>, <0>), (<1>, <5>), (<1>, <0>), (<1>, <3>), (<2>, <0>), (<2>, <3>), (<2>, <5>), (<0>, <2>), (<3>, <2>), (<4>, <1>), (<4>, <5>), (<4>, <6>)]","{<5>: [<6>, <1>],
<6>: [<3>, <0>],
<1>: [<5>, <0>, <3>],
<2>: [<0>, <3>, <5>],
<0>: [<2>],
<3>: [<2>],
<4>: [<1>, <5>, <6>]}","Node <5> is connected to nodes <6>, <1>.
Node <6> is connected to nodes <3>, <0>.
Node <1> is connected to nodes <5>, <0>, <3>.
Node <2> is connected to nodes <0>, <3>, <5>.
Node <0> is connected to node <2>.
Node <3> is connected to node <2>.
Node <4> is connected to nodes <1>, <5>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,15,True,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <5>, <1>, <3>, <0>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<0>, <3>, <5>].
Visit node <5>. Neighors of node <5>: [<6>, <1>].
Visit node <1>. Neighors of node <1>: [<5>, <0>, <3>].
Visit node <3>. Neighors of node <3>: [<2>].
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <6>. Neighors of node <6>: [<3>, <0>].
So the DFS traversal is ","('[[<2>, <5>, <1>, <3>, <0>, <6>], [<2>, <6>, <1>, <3>, <5>, <0>], [<2>, <5>, <0>, <6>, <1>, <3>], [<2>, <5>, <1>, <6>, <3>, <0>]]',)",0,275
DFS,"[(<3>, <0>), (<3>, <5>), (<0>, <6>), (<5>, <4>), (<5>, <2>), (<5>, <1>)]","{<3>: [<0>, <5>],
<0>: [<3>, <6>],
<5>: [<3>, <4>, <2>, <1>],
<6>: [<0>],
<4>: [<5>],
<2>: [<5>],
<1>: [<5>]}","Node <3> is connected to nodes <0>, <5>.
Node <0> is connected to nodes <3>, <6>.
Node <5> is connected to nodes <3>, <4>, <2>, <1>.
Node <6> is connected to node <0>.
Node <4> is connected to node <5>.
Node <2> is connected to node <5>.
Node <1> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <5>, <2>, <4>, <3>, <0>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<5>].
Visit node <5>. Neighors of node <5>: [<3>, <4>, <2>, <1>].
Visit node <2>. Neighors of node <2>: [<5>].
Visit node <4>. Neighors of node <4>: [<5>].
Visit node <3>. Neighors of node <3>: [<0>, <5>].
Visit node <0>. Neighors of node <0>: [<3>, <6>].
Visit node <6>. Neighors of node <6>: [<0>].
So the DFS traversal is ","('[[<1>, <5>, <0>, <6>, <2>, <4>, <3>], [<1>, <5>, <2>, <4>, <3>, <0>, <6>], [<1>, <0>, <3>, <2>, <6>, <5>, <4>], [<1>, <5>, <2>, <0>, <3>, <4>, <6>]]',)",1,276
DFS,"[(<4>, <1>), (<4>, <5>), (<1>, <5>), (<5>, <3>), (<3>, <0>), (<0>, <2>)]","{<4>: [<1>, <5>],
<1>: [<4>, <5>],
<5>: [<4>, <1>, <3>],
<3>: [<5>, <0>],
<0>: [<3>, <2>],
<2>: [<0>]}","Node <4> is connected to nodes <1>, <5>.
Node <1> is connected to nodes <4>, <5>.
Node <5> is connected to nodes <4>, <1>, <3>.
Node <3> is connected to nodes <5>, <0>.
Node <0> is connected to nodes <3>, <2>.
Node <2> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <3>, <0>, <2>, <1>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<4>, <1>, <3>].
Visit node <3>. Neighors of node <3>: [<5>, <0>].
Visit node <0>. Neighors of node <0>: [<3>, <2>].
Visit node <2>. Neighors of node <2>: [<0>].
Visit node <1>. Neighors of node <1>: [<4>, <5>].
Visit node <4>. Neighors of node <4>: [<1>, <5>].
So the DFS traversal is ","('[[<5>, <3>, <0>, <2>, <1>, <4>], [<5>, <1>, <2>, <4>, <3>, <0>], [<5>, <3>, <0>, <2>, <4>, <1>], [<5>, <3>, <1>, <4>, <0>, <2>]]',)",0,277
DFS,"[(<2>, <0>), (<2>, <3>), (<2>, <4>), (<0>, <3>), (<0>, <5>), (<0>, <6>), (<3>, <1>), (<3>, <6>), (<4>, <1>), (<4>, <5>), (<4>, <6>), (<5>, <6>)]","{<2>: [<0>, <3>, <4>],
<0>: [<2>, <3>, <5>, <6>],
<3>: [<2>, <0>, <1>, <6>],
<4>: [<2>, <1>, <5>, <6>],
<5>: [<0>, <4>, <6>],
<6>: [<0>, <3>, <4>, <5>],
<1>: [<3>, <4>]}","Node <2> is connected to nodes <0>, <3>, <4>.
Node <0> is connected to nodes <2>, <3>, <5>, <6>.
Node <3> is connected to nodes <2>, <0>, <1>, <6>.
Node <4> is connected to nodes <2>, <1>, <5>, <6>.
Node <5> is connected to nodes <0>, <4>, <6>.
Node <6> is connected to nodes <0>, <3>, <4>, <5>.
Node <1> is connected to nodes <3>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,12,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <6>, <4>, <1>, <3>, <0>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<0>, <4>, <6>].
Visit node <6>. Neighors of node <6>: [<0>, <3>, <4>, <5>].
Visit node <4>. Neighors of node <4>: [<2>, <1>, <5>, <6>].
Visit node <1>. Neighors of node <1>: [<3>, <4>].
Visit node <3>. Neighors of node <3>: [<2>, <0>, <1>, <6>].
Visit node <0>. Neighors of node <0>: [<2>, <3>, <5>, <6>].
Visit node <2>. Neighors of node <2>: [<0>, <3>, <4>].
So the DFS traversal is ","('[[<5>, <6>, <4>, <2>, <3>, <0>, <1>], [<5>, <2>, <1>, <0>, <6>, <4>, <3>], [<5>, <6>, <0>, <2>, <4>, <1>, <3>], [<5>, <6>, <4>, <1>, <3>, <0>, <2>]]',)",3,278
DFS,"[(<3>, <4>), (<3>, <2>), (<4>, <1>), (<4>, <0>), (<4>, <2>), (<2>, <1>), (<2>, <0>), (<1>, <5>), (<5>, <0>)]","{<3>: [<4>, <2>],
<4>: [<3>, <1>, <0>, <2>],
<2>: [<3>, <1>, <0>, <4>],
<1>: [<5>, <4>, <2>],
<5>: [<1>, <0>],
<0>: [<5>, <4>, <2>]}","Node <3> is connected to nodes <4>, <2>.
Node <4> is connected to nodes <3>, <1>, <0>, <2>.
Node <2> is connected to nodes <3>, <1>, <0>, <4>.
Node <1> is connected to nodes <5>, <4>, <2>.
Node <5> is connected to nodes <1>, <0>.
Node <0> is connected to nodes <5>, <4>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,9,False,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <2>, <4>, <1>, <5>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<5>, <4>, <2>].
Visit node <2>. Neighors of node <2>: [<3>, <1>, <0>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <1>, <0>, <2>].
Visit node <1>. Neighors of node <1>: [<5>, <4>, <2>].
Visit node <5>. Neighors of node <5>: [<1>, <0>].
Visit node <3>. Neighors of node <3>: [<4>, <2>].
So the DFS traversal is ","('[[<0>, <2>, <4>, <1>, <5>, <3>], [<0>, <2>, <4>, <1>, <3>, <5>], [<0>, <2>, <3>, <5>, <4>, <1>], [<0>, <2>, <5>, <3>, <4>, <1>]]',)",0,279
DFS,"[(<2>, <0>), (<2>, <4>), (<2>, <1>), (<2>, <5>), (<0>, <3>), (<0>, <4>), (<1>, <6>)]","{<2>: [<0>, <4>, <1>, <5>],
<0>: [<2>, <3>, <4>],
<4>: [<2>, <0>],
<1>: [<2>, <6>],
<5>: [<2>],
<3>: [<0>],
<6>: [<1>]}","Node <2> is connected to nodes <0>, <4>, <1>, <5>.
Node <0> is connected to nodes <2>, <3>, <4>.
Node <4> is connected to nodes <2>, <0>.
Node <1> is connected to nodes <2>, <6>.
Node <5> is connected to node <2>.
Node <3> is connected to node <0>.
Node <6> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <5>, <1>, <6>, <4>, <0>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<0>, <4>, <1>, <5>].
Visit node <5>. Neighors of node <5>: [<2>].
Visit node <1>. Neighors of node <1>: [<2>, <6>].
Visit node <6>. Neighors of node <6>: [<1>].
Visit node <4>. Neighors of node <4>: [<2>, <0>].
Visit node <0>. Neighors of node <0>: [<2>, <3>, <4>].
Visit node <3>. Neighors of node <3>: [<0>].
So the DFS traversal is ","('[[<2>, <5>, <1>, <6>, <4>, <0>, <3>], [<2>, <5>, <1>, <0>, <4>, <6>, <3>], [<2>, <5>, <0>, <3>, <1>, <6>, <4>], [<2>, <5>, <4>, <3>, <0>, <1>, <6>]]',)",0,280
DFS,"[(<4>, <6>), (<4>, <2>), (<6>, <1>), (<6>, <0>), (<6>, <5>), (<6>, <2>), (<6>, <4>), (<2>, <4>), (<2>, <6>), (<2>, <1>), (<2>, <5>), (<1>, <0>), (<1>, <5>), (<1>, <3>), (<1>, <2>), (<1>, <4>), (<1>, <6>), (<0>, <3>), (<5>, <3>), (<5>, <2>), (<5>, <4>), (<5>, <1>), (<5>, <0>), (<3>, <2>), (<3>, <6>), (<3>, <1>), (<3>, <5>)]","{<4>: [<6>, <2>],
<6>: [<1>, <0>, <5>, <2>, <4>],
<2>: [<4>, <6>, <1>, <5>],
<1>: [<0>, <5>, <3>, <2>, <4>, <6>],
<0>: [<3>],
<5>: [<3>, <2>, <4>, <1>, <0>],
<3>: [<2>, <6>, <1>, <5>]}","Node <4> is connected to nodes <6>, <2>.
Node <6> is connected to nodes <1>, <0>, <5>, <2>, <4>.
Node <2> is connected to nodes <4>, <6>, <1>, <5>.
Node <1> is connected to nodes <0>, <5>, <3>, <2>, <4>, <6>.
Node <0> is connected to node <3>.
Node <5> is connected to nodes <3>, <2>, <4>, <1>, <0>.
Node <3> is connected to nodes <2>, <6>, <1>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,27,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <6>, <4>, <2>, <5>, <0>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<0>, <5>, <3>, <2>, <4>, <6>].
Visit node <6>. Neighors of node <6>: [<1>, <0>, <5>, <2>, <4>].
Visit node <4>. Neighors of node <4>: [<6>, <2>].
Visit node <2>. Neighors of node <2>: [<4>, <6>, <1>, <5>].
Visit node <5>. Neighors of node <5>: [<3>, <2>, <4>, <1>, <0>].
Visit node <0>. Neighors of node <0>: [<3>].
Visit node <3>. Neighors of node <3>: [<2>, <6>, <1>, <5>].
So the DFS traversal is ","('[[<1>, <6>, <4>, <5>, <3>, <2>, <0>], [<1>, <6>, <4>, <2>, <5>, <0>, <3>], [<1>, <2>, <3>, <4>, <6>, <5>, <0>], [<1>, <6>, <0>, <3>, <4>, <2>, <5>]]',)",1,281
DFS,"[(<1>, <2>), (<1>, <3>), (<1>, <0>), (<2>, <5>), (<2>, <4>), (<5>, <4>)]","{<1>: [<2>, <3>, <0>],
<2>: [<1>, <5>, <4>],
<3>: [<1>],
<0>: [<1>],
<5>: [<2>, <4>],
<4>: [<2>, <5>]}","Node <1> is connected to nodes <2>, <3>, <0>.
Node <2> is connected to nodes <1>, <5>, <4>.
Node <3> is connected to node <1>.
Node <0> is connected to node <1>.
Node <5> is connected to nodes <2>, <4>.
Node <4> is connected to nodes <2>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <0>, <3>, <2>, <4>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<2>, <3>, <0>].
Visit node <0>. Neighors of node <0>: [<1>].
Visit node <3>. Neighors of node <3>: [<1>].
Visit node <2>. Neighors of node <2>: [<1>, <5>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <5>].
Visit node <5>. Neighors of node <5>: [<2>, <4>].
So the DFS traversal is ","('[[<1>, <4>, <5>, <0>, <2>, <3>], [<1>, <0>, <4>, <5>, <3>, <2>], [<1>, <0>, <3>, <2>, <4>, <5>], [<1>, <0>, <3>, <5>, <4>, <2>]]',)",2,282
DFS,"[(<4>, <0>), (<4>, <5>), (<0>, <2>), (<5>, <1>), (<2>, <3>), (<1>, <3>)]","{<4>: [<0>, <5>],
<0>: [<4>, <2>],
<5>: [<4>, <1>],
<2>: [<0>, <3>],
<1>: [<5>, <3>],
<3>: [<1>, <2>]}","Node <4> is connected to nodes <0>, <5>.
Node <0> is connected to nodes <4>, <2>.
Node <5> is connected to nodes <4>, <1>.
Node <2> is connected to nodes <0>, <3>.
Node <1> is connected to nodes <5>, <3>.
Node <3> is connected to nodes <1>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <3>, <1>, <5>, <4>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<0>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <2>].
Visit node <1>. Neighors of node <1>: [<5>, <3>].
Visit node <5>. Neighors of node <5>: [<4>, <1>].
Visit node <4>. Neighors of node <4>: [<0>, <5>].
Visit node <0>. Neighors of node <0>: [<4>, <2>].
So the DFS traversal is ","('[[<2>, <3>, <4>, <0>, <1>, <5>], [<2>, <1>, <3>, <4>, <5>, <0>], [<2>, <3>, <1>, <0>, <5>, <4>], [<2>, <3>, <1>, <5>, <4>, <0>]]',)",3,283
DFS,"[(<6>, <1>), (<6>, <2>), (<6>, <5>), (<5>, <0>), (<5>, <3>), (<3>, <4>)]","{<6>: [<1>, <2>, <5>],
<1>: [<6>],
<2>: [<6>],
<5>: [<6>, <0>, <3>],
<0>: [<5>],
<3>: [<5>, <4>],
<4>: [<3>]}","Node <6> is connected to nodes <1>, <2>, <5>.
Node <1> is connected to node <6>.
Node <2> is connected to node <6>.
Node <5> is connected to nodes <6>, <0>, <3>.
Node <0> is connected to node <5>.
Node <3> is connected to nodes <5>, <4>.
Node <4> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,6,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <6>, <5>, <3>, <4>, <0>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<6>].
Visit node <6>. Neighors of node <6>: [<1>, <2>, <5>].
Visit node <5>. Neighors of node <5>: [<6>, <0>, <3>].
Visit node <3>. Neighors of node <3>: [<5>, <4>].
Visit node <4>. Neighors of node <4>: [<3>].
Visit node <0>. Neighors of node <0>: [<5>].
Visit node <2>. Neighors of node <2>: [<6>].
So the DFS traversal is ","('[[<1>, <6>, <5>, <2>, <4>, <0>, <3>], [<1>, <6>, <5>, <3>, <4>, <0>, <2>], [<1>, <6>, <0>, <2>, <5>, <3>, <4>], [<1>, <4>, <2>, <6>, <3>, <0>, <5>]]',)",1,284
DFS,"[(<2>, <3>), (<3>, <1>), (<1>, <5>), (<5>, <4>), (<5>, <0>), (<4>, <0>)]","{<2>: [<3>],
<3>: [<2>, <1>],
<1>: [<3>, <5>],
<5>: [<4>, <0>, <1>],
<4>: [<5>, <0>],
<0>: [<5>, <4>]}","Node <2> is connected to node <3>.
Node <3> is connected to nodes <2>, <1>.
Node <1> is connected to nodes <3>, <5>.
Node <5> is connected to nodes <4>, <0>, <1>.
Node <4> is connected to nodes <5>, <0>.
Node <0> is connected to nodes <5>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,6,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <1>, <5>, <0>, <4>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<2>, <1>].
Visit node <1>. Neighors of node <1>: [<3>, <5>].
Visit node <5>. Neighors of node <5>: [<4>, <0>, <1>].
Visit node <0>. Neighors of node <0>: [<5>, <4>].
Visit node <4>. Neighors of node <4>: [<5>, <0>].
Visit node <2>. Neighors of node <2>: [<3>].
So the DFS traversal is ","('[[<3>, <1>, <4>, <2>, <5>, <0>], [<3>, <2>, <4>, <5>, <1>, <0>], [<3>, <1>, <5>, <4>, <2>, <0>], [<3>, <1>, <5>, <0>, <4>, <2>]]',)",3,285
DFS,"[(<2>, <0>), (<2>, <3>), (<0>, <5>), (<0>, <6>), (<0>, <4>), (<3>, <5>), (<3>, <1>)]","{<2>: [<0>, <3>],
<0>: [<2>, <5>, <6>, <4>],
<3>: [<2>, <5>, <1>],
<5>: [<0>, <3>],
<6>: [<0>],
<4>: [<0>],
<1>: [<3>]}","Node <2> is connected to nodes <0>, <3>.
Node <0> is connected to nodes <2>, <5>, <6>, <4>.
Node <3> is connected to nodes <2>, <5>, <1>.
Node <5> is connected to nodes <0>, <3>.
Node <6> is connected to node <0>.
Node <4> is connected to node <0>.
Node <1> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <3>, <1>, <2>, <0>, <4>, <6>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<0>, <3>].
Visit node <3>. Neighors of node <3>: [<2>, <5>, <1>].
Visit node <1>. Neighors of node <1>: [<3>].
Visit node <2>. Neighors of node <2>: [<0>, <3>].
Visit node <0>. Neighors of node <0>: [<2>, <5>, <6>, <4>].
Visit node <4>. Neighors of node <4>: [<0>].
Visit node <6>. Neighors of node <6>: [<0>].
So the DFS traversal is ","('[[<5>, <3>, <1>, <0>, <6>, <4>, <2>], [<5>, <3>, <1>, <2>, <0>, <4>, <6>], [<5>, <3>, <4>, <6>, <1>, <2>, <0>], [<5>, <1>, <4>, <6>, <0>, <2>, <3>]]',)",1,286
DFS,"[(<0>, <1>), (<0>, <4>), (<0>, <3>), (<1>, <3>), (<4>, <2>), (<4>, <5>), (<4>, <0>), (<3>, <4>), (<3>, <2>), (<2>, <5>), (<2>, <4>), (<5>, <0>), (<5>, <4>), (<5>, <2>)]","{<0>: [<1>, <4>, <3>],
<1>: [<3>],
<4>: [<2>, <5>, <0>],
<3>: [<4>, <2>],
<2>: [<5>, <4>],
<5>: [<0>, <4>, <2>]}","Node <0> is connected to nodes <1>, <4>, <3>.
Node <1> is connected to node <3>.
Node <4> is connected to nodes <2>, <5>, <0>.
Node <3> is connected to nodes <4>, <2>.
Node <2> is connected to nodes <5>, <4>.
Node <5> is connected to nodes <0>, <4>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,14,True,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <3>, <2>, <4>, <0>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>].
Visit node <3>. Neighors of node <3>: [<4>, <2>].
Visit node <2>. Neighors of node <2>: [<5>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <5>, <0>].
Visit node <0>. Neighors of node <0>: [<1>, <4>, <3>].
Visit node <5>. Neighors of node <5>: [<0>, <4>, <2>].
So the DFS traversal is ","('[[<1>, <3>, <2>, <4>, <0>, <5>], [<1>, <3>, <2>, <0>, <4>, <5>], [<1>, <0>, <3>, <5>, <2>, <4>], [<1>, <3>, <0>, <5>, <2>, <4>]]',)",0,287
DFS,"[(<1>, <3>), (<1>, <0>), (<1>, <2>), (<1>, <4>), (<3>, <4>), (<0>, <4>), (<0>, <5>), (<2>, <4>), (<4>, <6>), (<6>, <5>)]","{<1>: [<3>, <0>, <2>, <4>],
<3>: [<1>, <4>],
<0>: [<1>, <4>, <5>],
<2>: [<1>, <4>],
<4>: [<1>, <3>, <6>, <0>, <2>],
<6>: [<4>, <5>],
<5>: [<6>, <0>]}","Node <1> is connected to nodes <3>, <0>, <2>, <4>.
Node <3> is connected to nodes <1>, <4>.
Node <0> is connected to nodes <1>, <4>, <5>.
Node <2> is connected to nodes <1>, <4>.
Node <4> is connected to nodes <1>, <3>, <6>, <0>, <2>.
Node <6> is connected to nodes <4>, <5>.
Node <5> is connected to nodes <6>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,10,False,"Start from node <6>, output a sequence of traversal in depth-first search (DFS) order.","[<6>, <5>, <0>, <4>, <2>, <1>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <6>. Neighors of node <6>: [<4>, <5>].
Visit node <5>. Neighors of node <5>: [<6>, <0>].
Visit node <0>. Neighors of node <0>: [<1>, <4>, <5>].
Visit node <4>. Neighors of node <4>: [<1>, <3>, <6>, <0>, <2>].
Visit node <2>. Neighors of node <2>: [<1>, <4>].
Visit node <1>. Neighors of node <1>: [<3>, <0>, <2>, <4>].
Visit node <3>. Neighors of node <3>: [<1>, <4>].
So the DFS traversal is ","('[[<6>, <5>, <0>, <1>, <4>, <2>, <3>], [<6>, <5>, <1>, <3>, <0>, <4>, <2>], [<6>, <0>, <4>, <1>, <3>, <5>, <2>], [<6>, <5>, <0>, <4>, <2>, <1>, <3>]]',)",3,288
DFS,"[(<6>, <2>), (<6>, <5>), (<2>, <5>), (<2>, <3>), (<2>, <0>), (<2>, <4>), (<5>, <3>), (<5>, <0>), (<5>, <4>), (<3>, <2>), (<3>, <6>), (<0>, <1>), (<0>, <2>), (<0>, <5>), (<1>, <2>), (<1>, <6>), (<1>, <4>), (<4>, <2>), (<4>, <6>)]","{<6>: [<2>, <5>],
<2>: [<5>, <3>, <0>, <4>],
<5>: [<3>, <0>, <4>],
<3>: [<2>, <6>],
<0>: [<1>, <2>, <5>],
<1>: [<2>, <6>, <4>],
<4>: [<2>, <6>]}","Node <6> is connected to nodes <2>, <5>.
Node <2> is connected to nodes <5>, <3>, <0>, <4>.
Node <5> is connected to nodes <3>, <0>, <4>.
Node <3> is connected to nodes <2>, <6>.
Node <0> is connected to nodes <1>, <2>, <5>.
Node <1> is connected to nodes <2>, <6>, <4>.
Node <4> is connected to nodes <2>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,19,True,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <4>, <6>, <2>, <0>, <1>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<3>, <0>, <4>].
Visit node <4>. Neighors of node <4>: [<2>, <6>].
Visit node <6>. Neighors of node <6>: [<2>, <5>].
Visit node <2>. Neighors of node <2>: [<5>, <3>, <0>, <4>].
Visit node <0>. Neighors of node <0>: [<1>, <2>, <5>].
Visit node <1>. Neighors of node <1>: [<2>, <6>, <4>].
Visit node <3>. Neighors of node <3>: [<2>, <6>].
So the DFS traversal is ","('[[<5>, <4>, <6>, <2>, <3>, <0>, <1>], [<5>, <4>, <1>, <3>, <6>, <2>, <0>], [<5>, <2>, <3>, <1>, <6>, <4>, <0>], [<5>, <4>, <6>, <2>, <0>, <1>, <3>]]',)",3,289
DFS,"[(<3>, <0>), (<3>, <2>), (<0>, <4>), (<2>, <6>), (<4>, <5>), (<6>, <1>), (<5>, <1>)]","{<3>: [<0>, <2>],
<0>: [<3>, <4>],
<2>: [<3>, <6>],
<4>: [<0>, <5>],
<6>: [<2>, <1>],
<5>: [<1>, <4>],
<1>: [<5>, <6>]}","Node <3> is connected to nodes <0>, <2>.
Node <0> is connected to nodes <3>, <4>.
Node <2> is connected to nodes <3>, <6>.
Node <4> is connected to nodes <0>, <5>.
Node <6> is connected to nodes <2>, <1>.
Node <5> is connected to nodes <1>, <4>.
Node <1> is connected to nodes <5>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,7,False,"Start from node <5>, output a sequence of traversal in depth-first search (DFS) order.","[<5>, <4>, <0>, <3>, <2>, <6>, <1>]","Let's run depth-first search (DFS) step by step.
Visit node <5>. Neighors of node <5>: [<1>, <4>].
Visit node <4>. Neighors of node <4>: [<0>, <5>].
Visit node <0>. Neighors of node <0>: [<3>, <4>].
Visit node <3>. Neighors of node <3>: [<0>, <2>].
Visit node <2>. Neighors of node <2>: [<3>, <6>].
Visit node <6>. Neighors of node <6>: [<2>, <1>].
Visit node <1>. Neighors of node <1>: [<5>, <6>].
So the DFS traversal is ","('[[<5>, <0>, <2>, <3>, <1>, <4>, <6>], [<5>, <4>, <0>, <2>, <3>, <6>, <1>], [<5>, <4>, <0>, <3>, <2>, <6>, <1>], [<5>, <4>, <6>, <1>, <0>, <3>, <2>]]',)",2,290
DFS,"[(<3>, <1>), (<1>, <2>), (<1>, <4>), (<2>, <0>)]","{<3>: [<1>],
<1>: [<3>, <2>, <4>],
<2>: [<1>, <0>],
<4>: [<1>],
<0>: [<2>]}","Node <3> is connected to node <1>.
Node <1> is connected to nodes <3>, <2>, <4>.
Node <2> is connected to nodes <1>, <0>.
Node <4> is connected to node <1>.
Node <0> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <4>, <2>, <0>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>, <2>, <4>].
Visit node <4>. Neighors of node <4>: [<1>].
Visit node <2>. Neighors of node <2>: [<1>, <0>].
Visit node <0>. Neighors of node <0>: [<2>].
Visit node <3>. Neighors of node <3>: [<1>].
So the DFS traversal is ","('[[<1>, <4>, <2>, <0>, <3>], [<1>, <4>, <0>, <2>, <3>], [<1>, <3>, <4>, <2>, <0>], [<1>, <4>, <0>, <3>, <2>]]',)",0,291
DFS,"[(<2>, <3>), (<2>, <0>), (<3>, <0>), (<3>, <2>), (<0>, <4>), (<0>, <3>), (<0>, <1>), (<4>, <3>), (<1>, <0>), (<1>, <4>)]","{<2>: [<3>, <0>],
<3>: [<0>, <2>],
<0>: [<4>, <3>, <1>],
<4>: [<3>],
<1>: [<0>, <4>]}","Node <2> is connected to nodes <3>, <0>.
Node <3> is connected to nodes <0>, <2>.
Node <0> is connected to nodes <4>, <3>, <1>.
Node <4> is connected to node <3>.
Node <1> is connected to nodes <0>, <4>.","[<0>, <1>, <2>, <3>, <4>]",5,10,True,"Start from node <0>, output a sequence of traversal in depth-first search (DFS) order.","[<0>, <1>, <4>, <3>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <0>. Neighors of node <0>: [<4>, <3>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <4>].
Visit node <4>. Neighors of node <4>: [<3>].
Visit node <3>. Neighors of node <3>: [<0>, <2>].
Visit node <2>. Neighors of node <2>: [<3>, <0>].
So the DFS traversal is ","('[[<0>, <1>, <4>, <3>, <2>], [<0>, <4>, <2>, <1>, <3>], [<0>, <2>, <1>, <4>, <3>], [<0>, <1>, <4>, <3>, <2>]]',)",0,292
DFS,"[(<0>, <4>), (<0>, <3>), (<3>, <1>), (<3>, <2>)]","{<0>: [<4>, <3>],
<4>: [<0>],
<3>: [<0>, <1>, <2>],
<1>: [<3>],
<2>: [<3>]}","Node <0> is connected to nodes <4>, <3>.
Node <4> is connected to node <0>.
Node <3> is connected to nodes <0>, <1>, <2>.
Node <1> is connected to node <3>.
Node <2> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <2>, <1>, <0>, <4>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<0>, <1>, <2>].
Visit node <2>. Neighors of node <2>: [<3>].
Visit node <1>. Neighors of node <1>: [<3>].
Visit node <0>. Neighors of node <0>: [<4>, <3>].
Visit node <4>. Neighors of node <4>: [<0>].
So the DFS traversal is ","('[[<3>, <4>, <2>, <1>, <0>], [<3>, <2>, <4>, <0>, <1>], [<3>, <2>, <1>, <0>, <4>], [<3>, <2>, <1>, <0>, <4>]]',)",2,293
DFS,"[(<1>, <3>), (<1>, <4>), (<1>, <0>), (<1>, <2>)]","{<1>: [<3>, <4>, <0>, <2>],
<3>: [<1>],
<4>: [<1>],
<0>: [<1>],
<2>: [<1>]}","Node <1> is connected to nodes <3>, <4>, <0>, <2>.
Node <3> is connected to node <1>.
Node <4> is connected to node <1>.
Node <0> is connected to node <1>.
Node <2> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>]",5,4,False,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <1>, <0>, <4>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<1>].
Visit node <1>. Neighors of node <1>: [<3>, <4>, <0>, <2>].
Visit node <0>. Neighors of node <0>: [<1>].
Visit node <4>. Neighors of node <4>: [<1>].
Visit node <3>. Neighors of node <3>: [<1>].
So the DFS traversal is ","('[[<2>, <1>, <0>, <3>, <4>], [<2>, <3>, <1>, <0>, <4>], [<2>, <1>, <0>, <4>, <3>], [<2>, <1>, <4>, <3>, <0>]]',)",2,294
DFS,"[(<1>, <0>), (<1>, <5>), (<1>, <4>), (<1>, <3>), (<5>, <2>), (<5>, <4>), (<5>, <3>), (<4>, <3>), (<3>, <2>)]","{<1>: [<0>, <5>, <4>, <3>],
<0>: [<1>],
<5>: [<1>, <2>, <4>, <3>],
<4>: [<1>, <5>, <3>],
<3>: [<1>, <2>, <5>, <4>],
<2>: [<5>, <3>]}","Node <1> is connected to nodes <0>, <5>, <4>, <3>.
Node <0> is connected to node <1>.
Node <5> is connected to nodes <1>, <2>, <4>, <3>.
Node <4> is connected to nodes <1>, <5>, <3>.
Node <3> is connected to nodes <1>, <2>, <5>, <4>.
Node <2> is connected to nodes <5>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,9,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <3>, <4>, <5>, <2>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<0>, <5>, <4>, <3>].
Visit node <3>. Neighors of node <3>: [<1>, <2>, <5>, <4>].
Visit node <4>. Neighors of node <4>: [<1>, <5>, <3>].
Visit node <5>. Neighors of node <5>: [<1>, <2>, <4>, <3>].
Visit node <2>. Neighors of node <2>: [<5>, <3>].
Visit node <0>. Neighors of node <0>: [<1>].
So the DFS traversal is ","('[[<1>, <3>, <2>, <0>, <4>, <5>], [<1>, <3>, <4>, <5>, <2>, <0>], [<1>, <3>, <4>, <0>, <2>, <5>], [<1>, <3>, <2>, <4>, <5>, <0>]]',)",1,295
DFS,"[(<4>, <0>), (<4>, <3>), (<4>, <2>), (<0>, <1>), (<0>, <3>)]","{<4>: [<0>, <3>, <2>],
<0>: [<4>, <1>, <3>],
<3>: [<4>, <0>],
<2>: [<4>],
<1>: [<0>]}","Node <4> is connected to nodes <0>, <3>, <2>.
Node <0> is connected to nodes <4>, <1>, <3>.
Node <3> is connected to nodes <4>, <0>.
Node <2> is connected to node <4>.
Node <1> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>]",5,5,False,"Start from node <3>, output a sequence of traversal in depth-first search (DFS) order.","[<3>, <0>, <1>, <4>, <2>]","Let's run depth-first search (DFS) step by step.
Visit node <3>. Neighors of node <3>: [<4>, <0>].
Visit node <0>. Neighors of node <0>: [<4>, <1>, <3>].
Visit node <1>. Neighors of node <1>: [<0>].
Visit node <4>. Neighors of node <4>: [<0>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<4>].
So the DFS traversal is ","('[[<3>, <4>, <0>, <2>, <1>], [<3>, <0>, <4>, <2>, <1>], [<3>, <0>, <1>, <4>, <2>], [<3>, <2>, <0>, <1>, <4>]]',)",2,296
DFS,"[(<3>, <1>), (<3>, <0>), (<3>, <5>), (<3>, <2>), (<3>, <4>), (<1>, <5>), (<1>, <4>), (<0>, <2>), (<5>, <2>), (<5>, <4>)]","{<3>: [<1>, <0>, <5>, <2>, <4>],
<1>: [<3>, <5>, <4>],
<0>: [<3>, <2>],
<5>: [<3>, <1>, <2>, <4>],
<2>: [<3>, <0>, <5>],
<4>: [<3>, <1>, <5>]}","Node <3> is connected to nodes <1>, <0>, <5>, <2>, <4>.
Node <1> is connected to nodes <3>, <5>, <4>.
Node <0> is connected to nodes <3>, <2>.
Node <5> is connected to nodes <3>, <1>, <2>, <4>.
Node <2> is connected to nodes <3>, <0>, <5>.
Node <4> is connected to nodes <3>, <1>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,10,False,"Start from node <1>, output a sequence of traversal in depth-first search (DFS) order.","[<1>, <4>, <5>, <2>, <0>, <3>]","Let's run depth-first search (DFS) step by step.
Visit node <1>. Neighors of node <1>: [<3>, <5>, <4>].
Visit node <4>. Neighors of node <4>: [<3>, <1>, <5>].
Visit node <5>. Neighors of node <5>: [<3>, <1>, <2>, <4>].
Visit node <2>. Neighors of node <2>: [<3>, <0>, <5>].
Visit node <0>. Neighors of node <0>: [<3>, <2>].
Visit node <3>. Neighors of node <3>: [<1>, <0>, <5>, <2>, <4>].
So the DFS traversal is ","('[[<1>, <4>, <0>, <3>, <5>, <2>], [<1>, <2>, <3>, <5>, <4>, <0>], [<1>, <4>, <5>, <2>, <0>, <3>], [<1>, <4>, <5>, <2>, <0>, <3>]]',)",3,297
DFS,"[(<0>, <4>), (<0>, <3>), (<0>, <2>), (<0>, <1>), (<4>, <3>), (<4>, <2>), (<4>, <1>), (<3>, <2>), (<3>, <1>), (<2>, <5>), (<2>, <1>), (<1>, <5>)]","{<0>: [<4>, <3>, <2>, <1>],
<4>: [<0>, <3>, <2>, <1>],
<3>: [<0>, <4>, <2>, <1>],
<2>: [<0>, <5>, <4>, <3>, <1>],
<1>: [<0>, <5>, <4>, <3>, <2>],
<5>: [<2>, <1>]}","Node <0> is connected to nodes <4>, <3>, <2>, <1>.
Node <4> is connected to nodes <0>, <3>, <2>, <1>.
Node <3> is connected to nodes <0>, <4>, <2>, <1>.
Node <2> is connected to nodes <0>, <5>, <4>, <3>, <1>.
Node <1> is connected to nodes <0>, <5>, <4>, <3>, <2>.
Node <5> is connected to nodes <2>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>]",6,12,False,"Start from node <4>, output a sequence of traversal in depth-first search (DFS) order.","[<4>, <1>, <2>, <3>, <0>, <5>]","Let's run depth-first search (DFS) step by step.
Visit node <4>. Neighors of node <4>: [<0>, <3>, <2>, <1>].
Visit node <1>. Neighors of node <1>: [<0>, <5>, <4>, <3>, <2>].
Visit node <2>. Neighors of node <2>: [<0>, <5>, <4>, <3>, <1>].
Visit node <3>. Neighors of node <3>: [<0>, <4>, <2>, <1>].
Visit node <0>. Neighors of node <0>: [<4>, <3>, <2>, <1>].
Visit node <5>. Neighors of node <5>: [<2>, <1>].
So the DFS traversal is ","('[[<4>, <1>, <2>, <3>, <0>, <5>], [<4>, <5>, <1>, <2>, <0>, <3>], [<4>, <1>, <2>, <5>, <0>, <3>], [<4>, <1>, <0>, <5>, <2>, <3>]]',)",0,298
DFS,"[(<3>, <4>), (<3>, <1>), (<4>, <6>), (<4>, <1>), (<4>, <3>), (<1>, <4>), (<1>, <2>), (<6>, <0>), (<6>, <1>), (<6>, <3>), (<6>, <2>), (<5>, <6>), (<5>, <0>), (<5>, <3>), (<0>, <3>), (<0>, <5>), (<0>, <2>), (<0>, <6>), (<2>, <0>), (<2>, <3>), (<2>, <5>)]","{<3>: [<4>, <1>],
<4>: [<6>, <1>, <3>],
<1>: [<4>, <2>],
<6>: [<0>, <1>, <3>, <2>],
<5>: [<6>, <0>, <3>],
<0>: [<3>, <5>, <2>, <6>],
<2>: [<0>, <3>, <5>]}","Node <3> is connected to nodes <4>, <1>.
Node <4> is connected to nodes <6>, <1>, <3>.
Node <1> is connected to nodes <4>, <2>.
Node <6> is connected to nodes <0>, <1>, <3>, <2>.
Node <5> is connected to nodes <6>, <0>, <3>.
Node <0> is connected to nodes <3>, <5>, <2>, <6>.
Node <2> is connected to nodes <0>, <3>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>]",7,21,True,"Start from node <2>, output a sequence of traversal in depth-first search (DFS) order.","[<2>, <5>, <3>, <1>, <4>, <6>, <0>]","Let's run depth-first search (DFS) step by step.
Visit node <2>. Neighors of node <2>: [<0>, <3>, <5>].
Visit node <5>. Neighors of node <5>: [<6>, <0>, <3>].
Visit node <3>. Neighors of node <3>: [<4>, <1>].
Visit node <1>. Neighors of node <1>: [<4>, <2>].
Visit node <4>. Neighors of node <4>: [<6>, <1>, <3>].
Visit node <6>. Neighors of node <6>: [<0>, <1>, <3>, <2>].
Visit node <0>. Neighors of node <0>: [<3>, <5>, <2>, <6>].
So the DFS traversal is ","('[[<2>, <5>, <6>, <0>, <3>, <1>, <4>], [<2>, <5>, <4>, <1>, <6>, <0>, <3>], [<2>, <5>, <3>, <6>, <0>, <1>, <4>], [<2>, <5>, <3>, <1>, <4>, <6>, <0>]]',)",3,299
