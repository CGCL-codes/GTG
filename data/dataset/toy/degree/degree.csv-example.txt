####### sample 1 #######

>> task:

degree

>> graph:

[(<4>, <2>), (<4>, <5>), (<4>, <3>), (<2>, <5>), (<2>, <4>), (<5>, <1>), (<3>, <1>), (<3>, <5>), (<1>, <3>), (<0>, <4>), (<0>, <2>), (<0>, <1>), (<0>, <5>)]

>> graph_adj:

{<4>: [<2>, <5>, <3>],
<2>: [<5>, <4>],
<5>: [<1>],
<3>: [<1>, <5>],
<1>: [<3>],
<0>: [<4>, <2>, <1>, <5>]}

>> graph_nl:

Node <4> is connected to nodes <2>, <5>, <3>.
Node <2> is connected to nodes <5>, <4>.
Node <5> is connected to node <1>.
Node <3> is connected to nodes <1>, <5>.
Node <1> is connected to node <3>.
Node <0> is connected to nodes <4>, <2>, <1>, <5>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>]

>> num_nodes:

6

>> num_edges:

13

>> directed:

True

>> question:

What is the out-degree of node <4>?

>> answer:

3

>> steps:

Let's solve this problem step by step.
The successors of node <4> are: [<2>, <5>, <3>], and there are 3 successor nodes.
So the degree of node <4> is 

>> choices:

('[4, 3, 8, 0]',)

>> label:

1

####### sample 2 #######

>> task:

degree

>> graph:

[(<6>, <4>), (<6>, <1>), (<1>, <3>), (<1>, <5>), (<3>, <2>), (<3>, <0>)]

>> graph_adj:

{<6>: [<4>, <1>],
<4>: [<6>],
<1>: [<6>, <3>, <5>],
<3>: [<2>, <0>, <1>],
<2>: [<3>],
<0>: [<3>],
<5>: [<1>]}

>> graph_nl:

Node <6> is connected to nodes <4>, <1>.
Node <4> is connected to node <6>.
Node <1> is connected to nodes <6>, <3>, <5>.
Node <3> is connected to nodes <2>, <0>, <1>.
Node <2> is connected to node <3>.
Node <0> is connected to node <3>.
Node <5> is connected to node <1>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>]

>> num_nodes:

7

>> num_edges:

6

>> directed:

False

>> question:

What is the degree of node <4>?

>> answer:

1

>> steps:

Let's solve this problem step by step.
The neighbors of node <4> are: [<6>], and there are 1 neighbor nodes.
So the degree of node <4> is 

>> choices:

('[0, 1, 3, 5]',)

>> label:

1

####### sample 3 #######

>> task:

degree

>> graph:

[(<0>, <4>), (<0>, <1>), (<0>, <3>), (<0>, <5>), (<5>, <2>)]

>> graph_adj:

{<0>: [<4>, <1>, <3>, <5>],
<4>: [<0>],
<1>: [<0>],
<3>: [<0>],
<5>: [<0>, <2>],
<2>: [<5>]}

>> graph_nl:

Node <0> is connected to nodes <4>, <1>, <3>, <5>.
Node <4> is connected to node <0>.
Node <1> is connected to node <0>.
Node <3> is connected to node <0>.
Node <5> is connected to nodes <0>, <2>.
Node <2> is connected to node <5>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>]

>> num_nodes:

6

>> num_edges:

5

>> directed:

False

>> question:

What is the degree of node <5>?

>> answer:

2

>> steps:

Let's solve this problem step by step.
The neighbors of node <5> are: [<0>, <2>], and there are 2 neighbor nodes.
So the degree of node <5> is 

>> choices:

('[2, 5, 0, 6]',)

>> label:

0

####### sample 4 #######

>> task:

degree

>> graph:

[(<3>, <0>), (<3>, <4>), (<4>, <2>), (<2>, <1>)]

>> graph_adj:

{<3>: [<0>, <4>],
<0>: [<3>],
<4>: [<3>, <2>],
<2>: [<1>, <4>],
<1>: [<2>]}

>> graph_nl:

Node <3> is connected to nodes <0>, <4>.
Node <0> is connected to node <3>.
Node <4> is connected to nodes <3>, <2>.
Node <2> is connected to nodes <1>, <4>.
Node <1> is connected to node <2>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>]

>> num_nodes:

5

>> num_edges:

4

>> directed:

False

>> question:

What is the degree of node <1>?

>> answer:

1

>> steps:

Let's solve this problem step by step.
The neighbors of node <1> are: [<2>], and there are 1 neighbor nodes.
So the degree of node <1> is 

>> choices:

('[0, 4, 1, 10]',)

>> label:

2

####### sample 5 #######

>> task:

degree

>> graph:

[(<3>, <1>), (<3>, <5>), (<3>, <2>), (<1>, <0>), (<5>, <2>), (<2>, <4>)]

>> graph_adj:

{<3>: [<1>, <5>, <2>],
<1>: [<3>, <0>],
<5>: [<3>, <2>],
<2>: [<3>, <5>, <4>],
<0>: [<1>],
<4>: [<2>]}

>> graph_nl:

Node <3> is connected to nodes <1>, <5>, <2>.
Node <1> is connected to nodes <3>, <0>.
Node <5> is connected to nodes <3>, <2>.
Node <2> is connected to nodes <3>, <5>, <4>.
Node <0> is connected to node <1>.
Node <4> is connected to node <2>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>]

>> num_nodes:

6

>> num_edges:

6

>> directed:

False

>> question:

What is the degree of node <1>?

>> answer:

2

>> steps:

Let's solve this problem step by step.
The neighbors of node <1> are: [<3>, <0>], and there are 2 neighbor nodes.
So the degree of node <1> is 

>> choices:

('[2, 6, 0, 7]',)

>> label:

0

####### sample 6 #######

>> task:

degree

>> graph:

[(<3>, <4>), (<3>, <0>), (<4>, <6>), (<0>, <1>), (<0>, <2>), (<1>, <2>), (<1>, <6>), (<1>, <3>), (<2>, <0>), (<6>, <5>), (<5>, <2>), (<5>, <0>), (<5>, <3>)]

>> graph_adj:

{<3>: [<4>, <0>],
<4>: [<6>],
<0>: [<1>, <2>],
<1>: [<2>, <6>, <3>],
<2>: [<0>],
<6>: [<5>],
<5>: [<2>, <0>, <3>]}

>> graph_nl:

Node <3> is connected to nodes <4>, <0>.
Node <4> is connected to node <6>.
Node <0> is connected to nodes <1>, <2>.
Node <1> is connected to nodes <2>, <6>, <3>.
Node <2> is connected to node <0>.
Node <6> is connected to node <5>.
Node <5> is connected to nodes <2>, <0>, <3>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>]

>> num_nodes:

7

>> num_edges:

13

>> directed:

True

>> question:

What is the out-degree of node <4>?

>> answer:

1

>> steps:

Let's solve this problem step by step.
The successors of node <4> are: [<6>], and there are 1 successor nodes.
So the degree of node <4> is 

>> choices:

('[0, 3, 7, 1]',)

>> label:

3

####### sample 7 #######

>> task:

degree

>> graph:

[(<6>, <2>), (<6>, <1>), (<6>, <0>), (<6>, <4>), (<6>, <3>), (<2>, <3>), (<2>, <5>), (<1>, <0>), (<0>, <4>), (<4>, <5>)]

>> graph_adj:

{<6>: [<2>, <1>, <0>, <4>, <3>],
<2>: [<6>, <3>, <5>],
<1>: [<6>, <0>],
<0>: [<6>, <1>, <4>],
<4>: [<6>, <0>, <5>],
<3>: [<6>, <2>],
<5>: [<2>, <4>]}

>> graph_nl:

Node <6> is connected to nodes <2>, <1>, <0>, <4>, <3>.
Node <2> is connected to nodes <6>, <3>, <5>.
Node <1> is connected to nodes <6>, <0>.
Node <0> is connected to nodes <6>, <1>, <4>.
Node <4> is connected to nodes <6>, <0>, <5>.
Node <3> is connected to nodes <6>, <2>.
Node <5> is connected to nodes <2>, <4>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>]

>> num_nodes:

7

>> num_edges:

10

>> directed:

False

>> question:

What is the degree of node <4>?

>> answer:

3

>> steps:

Let's solve this problem step by step.
The neighbors of node <4> are: [<6>, <0>, <5>], and there are 3 neighbor nodes.
So the degree of node <4> is 

>> choices:

('[3, 1, 0, 7]',)

>> label:

0

####### sample 8 #######

>> task:

degree

>> graph:

[(<5>, <2>), (<5>, <0>), (<2>, <0>), (<2>, <4>), (<2>, <6>), (<2>, <1>), (<0>, <6>), (<0>, <1>), (<4>, <3>), (<4>, <0>), (<4>, <5>), (<3>, <0>), (<3>, <5>), (<3>, <4>), (<3>, <2>), (<6>, <2>), (<6>, <0>), (<6>, <5>), (<1>, <3>), (<1>, <6>)]

>> graph_adj:

{<5>: [<2>, <0>],
<2>: [<0>, <4>, <6>, <1>],
<0>: [<6>, <1>],
<4>: [<3>, <0>, <5>],
<3>: [<0>, <5>, <4>, <2>],
<6>: [<2>, <0>, <5>],
<1>: [<3>, <6>]}

>> graph_nl:

Node <5> is connected to nodes <2>, <0>.
Node <2> is connected to nodes <0>, <4>, <6>, <1>.
Node <0> is connected to nodes <6>, <1>.
Node <4> is connected to nodes <3>, <0>, <5>.
Node <3> is connected to nodes <0>, <5>, <4>, <2>.
Node <6> is connected to nodes <2>, <0>, <5>.
Node <1> is connected to nodes <3>, <6>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>]

>> num_nodes:

7

>> num_edges:

20

>> directed:

True

>> question:

What is the out-degree of node <5>?

>> answer:

2

>> steps:

Let's solve this problem step by step.
The successors of node <5> are: [<2>, <0>], and there are 2 successor nodes.
So the degree of node <5> is 

>> choices:

('[5, 2, 9, 0]',)

>> label:

1

####### sample 9 #######

>> task:

degree

>> graph:

[(<2>, <0>), (<2>, <3>), (<2>, <1>), (<1>, <4>)]

>> graph_adj:

{<2>: [<0>, <3>, <1>],
<0>: [<2>],
<3>: [<2>],
<1>: [<2>, <4>],
<4>: [<1>]}

>> graph_nl:

Node <2> is connected to nodes <0>, <3>, <1>.
Node <0> is connected to node <2>.
Node <3> is connected to node <2>.
Node <1> is connected to nodes <2>, <4>.
Node <4> is connected to node <1>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>]

>> num_nodes:

5

>> num_edges:

4

>> directed:

False

>> question:

What is the degree of node <4>?

>> answer:

1

>> steps:

Let's solve this problem step by step.
The neighbors of node <4> are: [<1>], and there are 1 neighbor nodes.
So the degree of node <4> is 

>> choices:

('[2, 7, 1, 0]',)

>> label:

2

####### sample 10 #######

>> task:

degree

>> graph:

[(<1>, <3>), (<1>, <0>), (<1>, <5>), (<1>, <4>), (<3>, <0>), (<3>, <5>), (<3>, <4>), (<0>, <2>), (<0>, <5>), (<0>, <4>), (<5>, <2>), (<5>, <4>), (<4>, <2>)]

>> graph_adj:

{<1>: [<3>, <0>, <5>, <4>],
<3>: [<1>, <0>, <5>, <4>],
<0>: [<1>, <3>, <2>, <5>, <4>],
<5>: [<1>, <3>, <0>, <2>, <4>],
<4>: [<1>, <3>, <0>, <2>, <5>],
<2>: [<0>, <5>, <4>]}

>> graph_nl:

Node <1> is connected to nodes <3>, <0>, <5>, <4>.
Node <3> is connected to nodes <1>, <0>, <5>, <4>.
Node <0> is connected to nodes <1>, <3>, <2>, <5>, <4>.
Node <5> is connected to nodes <1>, <3>, <0>, <2>, <4>.
Node <4> is connected to nodes <1>, <3>, <0>, <2>, <5>.
Node <2> is connected to nodes <0>, <5>, <4>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>]

>> num_nodes:

6

>> num_edges:

13

>> directed:

False

>> question:

What is the degree of node <0>?

>> answer:

5

>> steps:

Let's solve this problem step by step.
The neighbors of node <0> are: [<1>, <3>, <2>, <5>, <4>], and there are 5 neighbor nodes.
So the degree of node <0> is 

>> choices:

('[5, 10, 0, 2]',)

>> label:

0

