task,graph,graph_adj,graph_nl,nodes,num_nodes,num_edges,directed,question,answer,steps,choices,label,id
topological_sort,"[(JUC, HYB), (JUC, OHR), (JUC, GWN), (JUC, PML), (JUC, TSZ), (JUC, PNN), (HYB, OHR), (OHR, JMF), (OHR, AYI), (OHR, PVI), (PML, PWA), (PML, HYB), (PML, JMF), (TSZ, PNN), (TSZ, GWN), (TSZ, JMF), (TSZ, HYB), (PNN, GWN), (PNN, PWA), (PWA, HYB), (JMF, OXO), (JMF, GWN), (JMF, AYI), (PES, PNN), (PES, GWN), (OXO, GWN), (PVI, AYI)]","{JUC: [HYB, OHR, GWN, PML, TSZ, PNN],
HYB: [OHR],
OHR: [JMF, AYI, PVI],
GWN: [],
PML: [PWA, HYB, JMF],
TSZ: [PNN, GWN, JMF, HYB],
PNN: [GWN, PWA],
PWA: [HYB],
JMF: [OXO, GWN, AYI],
PES: [PNN, GWN],
OXO: [GWN],
AYI: [],
PVI: [AYI]}","Node JUC is connected to nodes HYB, OHR, GWN, PML, TSZ, PNN.
Node HYB is connected to node OHR.
Node OHR is connected to nodes JMF, AYI, PVI.
Node PML is connected to nodes PWA, HYB, JMF.
Node TSZ is connected to nodes PNN, GWN, JMF, HYB.
Node PNN is connected to nodes GWN, PWA.
Node PWA is connected to node HYB.
Node JMF is connected to nodes OXO, GWN, AYI.
Node PES is connected to nodes PNN, GWN.
Node OXO is connected to node GWN.
Node PVI is connected to node AYI.","[TSZ, HYB, PES, AYI, PVI, OHR, OXO, PWA, JMF, PML, PNN, JUC, GWN]",13,27,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JUC, PES, PML, TSZ, PNN, PWA, HYB, OHR, JMF, PVI, OXO, AYI, GWN]","Let's solve it step by step.
Nodes with 0 in-degree: [JUC, PES].
Visit node JUC and remove it from the graph.
Nodes with 0 in-degree: [PES, PML, TSZ].
Visit node PES and remove it from the graph.
Nodes with 0 in-degree: [PML, TSZ].
Visit node PML and remove it from the graph.
Nodes with 0 in-degree: [TSZ].
Visit node TSZ and remove it from the graph.
Nodes with 0 in-degree: [PNN].
Visit node PNN and remove it from the graph.
Nodes with 0 in-degree: [PWA].
Visit node PWA and remove it from the graph.
Nodes with 0 in-degree: [HYB].
Visit node HYB and remove it from the graph.
Nodes with 0 in-degree: [OHR].
Visit node OHR and remove it from the graph.
Nodes with 0 in-degree: [JMF, PVI].
Visit node JMF and remove it from the graph.
Nodes with 0 in-degree: [PVI, OXO].
Visit node PVI and remove it from the graph.
Nodes with 0 in-degree: [OXO, AYI].
Visit node OXO and remove it from the graph.
Nodes with 0 in-degree: [AYI, GWN].
Visit node AYI and remove it from the graph.
Nodes with 0 in-degree: [GWN].
Visit node GWN and remove it from the graph.
So the result of topological sorting is ","('[[JUC, PVI, OXO, PWA, GWN, OHR, PES, PNN, PML, JMF, HYB, TSZ, AYI], [JUC, PES, PML, TSZ, PVI, OXO, AYI, GWN, PNN, PWA, HYB, OHR, JMF], [JUC, PES, PML, TSZ, PNN, PWA, HYB, OHR, JMF, PVI, OXO, AYI, GWN], [JUC, PES, PML, TSZ, PNN, PWA, GWN, HYB, JMF, OHR, OXO, AYI, PVI]]',)",2,0
topological_sort,"[(TYV, TIR), (NXT, TBJ), (NXT, CHZ), (NXT, BWR), (TBJ, OHT), (TBJ, TIR), (TBJ, YFV), (TBJ, CHZ), (TBJ, TYV), (BWR, YFV), (BWR, DFJ), (BWR, CHZ), (OHT, CHZ), (YFV, TYV), (YFV, ZCU), (DSN, TIR), (DSN, DFJ), (DSN, CHZ), (DFJ, TYV), (DFJ, ZCU), (DFJ, TBJ), (DFJ, CHZ), (AMZ, TIR), (AMZ, DFJ), (VNJ, ZCU), (VNJ, KSD), (VNJ, TBJ), (VNJ, DFJ), (ZCU, TIR), (KSD, NXT), (KSD, CHZ), (KSD, BWR), (KSD, AMZ), (KSD, ZCU), (AEZ, DFJ), (AEZ, CHZ), (AEZ, NXT), (AEZ, VNJ)]","{TYV: [TIR],
TIR: [],
NXT: [TBJ, CHZ, BWR],
TBJ: [OHT, TIR, YFV, CHZ, TYV],
CHZ: [],
BWR: [YFV, DFJ, CHZ],
OHT: [CHZ],
YFV: [TYV, ZCU],
DSN: [TIR, DFJ, CHZ],
DFJ: [TYV, ZCU, TBJ, CHZ],
AMZ: [TIR, DFJ],
VNJ: [ZCU, KSD, TBJ, DFJ],
ZCU: [TIR],
KSD: [NXT, CHZ, BWR, AMZ, ZCU],
AEZ: [DFJ, CHZ, NXT, VNJ]}","Node TYV is connected to node TIR.
Node NXT is connected to nodes TBJ, CHZ, BWR.
Node TBJ is connected to nodes OHT, TIR, YFV, CHZ, TYV.
Node BWR is connected to nodes YFV, DFJ, CHZ.
Node OHT is connected to node CHZ.
Node YFV is connected to nodes TYV, ZCU.
Node DSN is connected to nodes TIR, DFJ, CHZ.
Node DFJ is connected to nodes TYV, ZCU, TBJ, CHZ.
Node AMZ is connected to nodes TIR, DFJ.
Node VNJ is connected to nodes ZCU, KSD, TBJ, DFJ.
Node ZCU is connected to node TIR.
Node KSD is connected to nodes NXT, CHZ, BWR, AMZ, ZCU.
Node AEZ is connected to nodes DFJ, CHZ, NXT, VNJ.","[AMZ, TIR, AEZ, NXT, ZCU, TYV, VNJ, CHZ, BWR, TBJ, OHT, DFJ, YFV, KSD, DSN]",15,38,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DSN, AEZ, VNJ, KSD, NXT, AMZ, BWR, DFJ, TBJ, OHT, YFV, CHZ, TYV, ZCU, TIR]","Let's solve it step by step.
Nodes with 0 in-degree: [DSN, AEZ].
Visit node DSN and remove it from the graph.
Nodes with 0 in-degree: [AEZ].
Visit node AEZ and remove it from the graph.
Nodes with 0 in-degree: [VNJ].
Visit node VNJ and remove it from the graph.
Nodes with 0 in-degree: [KSD].
Visit node KSD and remove it from the graph.
Nodes with 0 in-degree: [NXT, AMZ].
Visit node NXT and remove it from the graph.
Nodes with 0 in-degree: [AMZ, BWR].
Visit node AMZ and remove it from the graph.
Nodes with 0 in-degree: [BWR].
Visit node BWR and remove it from the graph.
Nodes with 0 in-degree: [DFJ].
Visit node DFJ and remove it from the graph.
Nodes with 0 in-degree: [TBJ].
Visit node TBJ and remove it from the graph.
Nodes with 0 in-degree: [OHT, YFV].
Visit node OHT and remove it from the graph.
Nodes with 0 in-degree: [YFV, CHZ].
Visit node YFV and remove it from the graph.
Nodes with 0 in-degree: [CHZ, TYV, ZCU].
Visit node CHZ and remove it from the graph.
Nodes with 0 in-degree: [TYV, ZCU].
Visit node TYV and remove it from the graph.
Nodes with 0 in-degree: [ZCU].
Visit node ZCU and remove it from the graph.
Nodes with 0 in-degree: [TIR].
Visit node TIR and remove it from the graph.
So the result of topological sorting is ","('[[DSN, AEZ, VNJ, KSD, NXT, AMZ, BWR, TYV, CHZ, TIR, OHT, TBJ, ZCU, DFJ, YFV], [DSN, AEZ, VNJ, KSD, NXT, YFV, CHZ, TYV, ZCU, TIR, AMZ, BWR, DFJ, TBJ, OHT], [DSN, OHT, TIR, TBJ, TYV, CHZ, ZCU, NXT, BWR, VNJ, YFV, AEZ, DFJ, KSD, AMZ], [DSN, AEZ, VNJ, KSD, NXT, AMZ, BWR, DFJ, TBJ, OHT, YFV, CHZ, TYV, ZCU, TIR]]',)",3,1
topological_sort,"[(HQY, HRQ), (HQY, YXJ), (HRQ, NNX), (HRQ, QCZ), (YXJ, CGZ), (YXJ, LSS), (NNX, YXJ), (NNX, RSM), (QCZ, KYN), (RSM, YXJ), (RSM, CGZ), (RSM, QCZ), (HRW, HRQ), (HRW, PZJ), (HRW, KYN), (PZJ, YXJ), (PZJ, HQY), (KYN, YXJ)]","{HQY: [HRQ, YXJ],
HRQ: [NNX, QCZ],
YXJ: [CGZ, LSS],
NNX: [YXJ, RSM],
QCZ: [KYN],
CGZ: [],
LSS: [],
RSM: [YXJ, CGZ, QCZ],
HRW: [HRQ, PZJ, KYN],
PZJ: [YXJ, HQY],
KYN: [YXJ]}","Node HQY is connected to nodes HRQ, YXJ.
Node HRQ is connected to nodes NNX, QCZ.
Node YXJ is connected to nodes CGZ, LSS.
Node NNX is connected to nodes YXJ, RSM.
Node QCZ is connected to node KYN.
Node RSM is connected to nodes YXJ, CGZ, QCZ.
Node HRW is connected to nodes HRQ, PZJ, KYN.
Node PZJ is connected to nodes YXJ, HQY.
Node KYN is connected to node YXJ.","[YXJ, CGZ, RSM, PZJ, HRW, HRQ, HQY, LSS, QCZ, NNX, KYN]",11,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HRW, PZJ, HQY, HRQ, NNX, RSM, QCZ, KYN, YXJ, CGZ, LSS]","Let's solve it step by step.
Nodes with 0 in-degree: [HRW].
Visit node HRW and remove it from the graph.
Nodes with 0 in-degree: [PZJ].
Visit node PZJ and remove it from the graph.
Nodes with 0 in-degree: [HQY].
Visit node HQY and remove it from the graph.
Nodes with 0 in-degree: [HRQ].
Visit node HRQ and remove it from the graph.
Nodes with 0 in-degree: [NNX].
Visit node NNX and remove it from the graph.
Nodes with 0 in-degree: [RSM].
Visit node RSM and remove it from the graph.
Nodes with 0 in-degree: [QCZ].
Visit node QCZ and remove it from the graph.
Nodes with 0 in-degree: [KYN].
Visit node KYN and remove it from the graph.
Nodes with 0 in-degree: [YXJ].
Visit node YXJ and remove it from the graph.
Nodes with 0 in-degree: [CGZ, LSS].
Visit node CGZ and remove it from the graph.
Nodes with 0 in-degree: [LSS].
Visit node LSS and remove it from the graph.
So the result of topological sorting is ","('[[HRW, HQY, NNX, LSS, QCZ, YXJ, CGZ, PZJ, RSM, HRQ, KYN], [HRW, PZJ, HQY, HRQ, NNX, RSM, QCZ, KYN, YXJ, CGZ, LSS], [HRW, PZJ, HQY, YXJ, CGZ, LSS, HRQ, NNX, RSM, QCZ, KYN], [HRW, PZJ, HQY, HRQ, NNX, CGZ, RSM, KYN, LSS, YXJ, QCZ]]',)",1,2
topological_sort,"[(WOC, IGS), (WOC, NEY), (NEY, IGS), (QZR, TAB), (QZR, MHW), (TAB, WOC), (MHW, WOC), (MHW, TAB), (MHW, NSH), (MHW, IGS), (NSH, UJA), (NSH, WOC), (NSH, NEY), (UJA, TAB), (UJA, IGS)]","{WOC: [IGS, NEY],
IGS: [],
NEY: [IGS],
QZR: [TAB, MHW],
TAB: [WOC],
MHW: [WOC, TAB, NSH, IGS],
NSH: [UJA, WOC, NEY],
UJA: [TAB, IGS]}","Node WOC is connected to nodes IGS, NEY.
Node NEY is connected to node IGS.
Node QZR is connected to nodes TAB, MHW.
Node TAB is connected to node WOC.
Node MHW is connected to nodes WOC, TAB, NSH, IGS.
Node NSH is connected to nodes UJA, WOC, NEY.
Node UJA is connected to nodes TAB, IGS.","[UJA, NEY, QZR, MHW, WOC, TAB, IGS, NSH]",8,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QZR, MHW, NSH, UJA, TAB, WOC, NEY, IGS]","Let's solve it step by step.
Nodes with 0 in-degree: [QZR].
Visit node QZR and remove it from the graph.
Nodes with 0 in-degree: [MHW].
Visit node MHW and remove it from the graph.
Nodes with 0 in-degree: [NSH].
Visit node NSH and remove it from the graph.
Nodes with 0 in-degree: [UJA].
Visit node UJA and remove it from the graph.
Nodes with 0 in-degree: [TAB].
Visit node TAB and remove it from the graph.
Nodes with 0 in-degree: [WOC].
Visit node WOC and remove it from the graph.
Nodes with 0 in-degree: [NEY].
Visit node NEY and remove it from the graph.
Nodes with 0 in-degree: [IGS].
Visit node IGS and remove it from the graph.
So the result of topological sorting is ","('[[QZR, MHW, NSH, UJA, TAB, NEY, IGS, WOC], [QZR, MHW, NSH, UJA, TAB, WOC, NEY, IGS], [QZR, MHW, WOC, NSH, UJA, IGS, TAB, NEY], [QZR, MHW, NEY, IGS, NSH, UJA, TAB, WOC]]',)",1,3
topological_sort,"[(DWE, KLO), (VJP, NBM), (VJP, FAU), (VJP, VIZ), (NBM, KLO), (FAU, NBM), (FAU, DWE), (VIZ, KLO), (VIZ, DWE), (VIZ, NBM), (CVD, VJP), (CVD, KLO), (CVD, FAU), (CVD, VIZ), (KQQ, VJP), (KQQ, FAU), (KQQ, DWE), (KQQ, NBM), (AJE, VIZ), (AJE, NBM), (AJE, VJP), (AJE, DWE)]","{DWE: [KLO],
KLO: [],
VJP: [NBM, FAU, VIZ],
NBM: [KLO],
FAU: [NBM, DWE],
VIZ: [KLO, DWE, NBM],
CVD: [VJP, KLO, FAU, VIZ],
KQQ: [VJP, FAU, DWE, NBM],
AJE: [VIZ, NBM, VJP, DWE]}","Node DWE is connected to node KLO.
Node VJP is connected to nodes NBM, FAU, VIZ.
Node NBM is connected to node KLO.
Node FAU is connected to nodes NBM, DWE.
Node VIZ is connected to nodes KLO, DWE, NBM.
Node CVD is connected to nodes VJP, KLO, FAU, VIZ.
Node KQQ is connected to nodes VJP, FAU, DWE, NBM.
Node AJE is connected to nodes VIZ, NBM, VJP, DWE.","[CVD, KLO, AJE, DWE, VIZ, KQQ, FAU, NBM, VJP]",9,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CVD, KQQ, AJE, VJP, FAU, VIZ, DWE, NBM, KLO]","Let's solve it step by step.
Nodes with 0 in-degree: [CVD, KQQ, AJE].
Visit node CVD and remove it from the graph.
Nodes with 0 in-degree: [KQQ, AJE].
Visit node KQQ and remove it from the graph.
Nodes with 0 in-degree: [AJE].
Visit node AJE and remove it from the graph.
Nodes with 0 in-degree: [VJP].
Visit node VJP and remove it from the graph.
Nodes with 0 in-degree: [FAU, VIZ].
Visit node FAU and remove it from the graph.
Nodes with 0 in-degree: [VIZ].
Visit node VIZ and remove it from the graph.
Nodes with 0 in-degree: [DWE, NBM].
Visit node DWE and remove it from the graph.
Nodes with 0 in-degree: [NBM].
Visit node NBM and remove it from the graph.
Nodes with 0 in-degree: [KLO].
Visit node KLO and remove it from the graph.
So the result of topological sorting is ","('[[CVD, KQQ, AJE, VJP, FAU, NBM, VIZ, KLO, DWE], [CVD, KQQ, AJE, VJP, FAU, VIZ, DWE, NBM, KLO], [CVD, KQQ, VJP, FAU, KLO, AJE, VIZ, DWE, NBM], [CVD, KQQ, AJE, DWE, NBM, KLO, VJP, FAU, VIZ]]',)",1,4
topological_sort,"[(DRA, TVF), (TVF, INE), (INE, XAA), (EDI, PMS), (EDI, FLK), (PMS, INE), (PMS, FLK), (FLK, DRA), (FLK, TVF), (FLK, OVC), (OVC, DRA), (OVC, INE), (OVC, XAA), (KTI, OVC), (KTI, FLK), (CWW, TVF), (CWW, DRA)]","{DRA: [TVF],
TVF: [INE],
INE: [XAA],
EDI: [PMS, FLK],
PMS: [INE, FLK],
FLK: [DRA, TVF, OVC],
OVC: [DRA, INE, XAA],
XAA: [],
KTI: [OVC, FLK],
CWW: [TVF, DRA]}","Node DRA is connected to node TVF.
Node TVF is connected to node INE.
Node INE is connected to node XAA.
Node EDI is connected to nodes PMS, FLK.
Node PMS is connected to nodes INE, FLK.
Node FLK is connected to nodes DRA, TVF, OVC.
Node OVC is connected to nodes DRA, INE, XAA.
Node KTI is connected to nodes OVC, FLK.
Node CWW is connected to nodes TVF, DRA.","[INE, FLK, TVF, OVC, DRA, PMS, KTI, CWW, XAA, EDI]",10,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EDI, KTI, CWW, PMS, FLK, OVC, DRA, TVF, INE, XAA]","Let's solve it step by step.
Nodes with 0 in-degree: [EDI, KTI, CWW].
Visit node EDI and remove it from the graph.
Nodes with 0 in-degree: [KTI, CWW, PMS].
Visit node KTI and remove it from the graph.
Nodes with 0 in-degree: [CWW, PMS].
Visit node CWW and remove it from the graph.
Nodes with 0 in-degree: [PMS].
Visit node PMS and remove it from the graph.
Nodes with 0 in-degree: [FLK].
Visit node FLK and remove it from the graph.
Nodes with 0 in-degree: [OVC].
Visit node OVC and remove it from the graph.
Nodes with 0 in-degree: [DRA].
Visit node DRA and remove it from the graph.
Nodes with 0 in-degree: [TVF].
Visit node TVF and remove it from the graph.
Nodes with 0 in-degree: [INE].
Visit node INE and remove it from the graph.
Nodes with 0 in-degree: [XAA].
Visit node XAA and remove it from the graph.
So the result of topological sorting is ","('[[EDI, INE, OVC, CWW, DRA, PMS, FLK, KTI, TVF, XAA], [EDI, KTI, CWW, TVF, INE, XAA, PMS, FLK, OVC, DRA], [EDI, KTI, CWW, PMS, FLK, DRA, XAA, OVC, TVF, INE], [EDI, KTI, CWW, PMS, FLK, OVC, DRA, TVF, INE, XAA]]',)",3,5
topological_sort,"[(EXI, SIM), (EXI, AIT), (EXI, PZE), (SIM, PZE), (HBU, EXI), (HBU, PZE), (HBU, PST), (HBU, OQL), (OQL, AIT), (OQL, EXI), (OQL, QEH), (TOK, EXI), (TOK, PST), (TOK, SIM), (TOK, AIT), (VTC, HBU), (VTC, JLI), (VTC, SIM), (JLI, SIM), (QEH, PZE), (NAO, EXI), (PYL, QEH)]","{EXI: [SIM, AIT, PZE],
SIM: [PZE],
AIT: [],
PZE: [],
HBU: [EXI, PZE, PST, OQL],
PST: [],
OQL: [AIT, EXI, QEH],
TOK: [EXI, PST, SIM, AIT],
VTC: [HBU, JLI, SIM],
JLI: [SIM],
QEH: [PZE],
NAO: [EXI],
PYL: [QEH]}","Node EXI is connected to nodes SIM, AIT, PZE.
Node SIM is connected to node PZE.
Node HBU is connected to nodes EXI, PZE, PST, OQL.
Node OQL is connected to nodes AIT, EXI, QEH.
Node TOK is connected to nodes EXI, PST, SIM, AIT.
Node VTC is connected to nodes HBU, JLI, SIM.
Node JLI is connected to node SIM.
Node QEH is connected to node PZE.
Node NAO is connected to node EXI.
Node PYL is connected to node QEH.","[SIM, AIT, VTC, OQL, TOK, NAO, PST, EXI, JLI, PZE, QEH, PYL, HBU]",13,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TOK, VTC, NAO, PYL, HBU, JLI, PST, OQL, EXI, QEH, SIM, AIT, PZE]","Let's solve it step by step.
Nodes with 0 in-degree: [TOK, VTC, NAO, PYL].
Visit node TOK and remove it from the graph.
Nodes with 0 in-degree: [VTC, NAO, PYL].
Visit node VTC and remove it from the graph.
Nodes with 0 in-degree: [NAO, PYL, HBU, JLI].
Visit node NAO and remove it from the graph.
Nodes with 0 in-degree: [PYL, HBU, JLI].
Visit node PYL and remove it from the graph.
Nodes with 0 in-degree: [HBU, JLI].
Visit node HBU and remove it from the graph.
Nodes with 0 in-degree: [JLI, PST, OQL].
Visit node JLI and remove it from the graph.
Nodes with 0 in-degree: [PST, OQL].
Visit node PST and remove it from the graph.
Nodes with 0 in-degree: [OQL].
Visit node OQL and remove it from the graph.
Nodes with 0 in-degree: [EXI, QEH].
Visit node EXI and remove it from the graph.
Nodes with 0 in-degree: [QEH, SIM, AIT].
Visit node QEH and remove it from the graph.
Nodes with 0 in-degree: [SIM, AIT].
Visit node SIM and remove it from the graph.
Nodes with 0 in-degree: [AIT, PZE].
Visit node AIT and remove it from the graph.
Nodes with 0 in-degree: [PZE].
Visit node PZE and remove it from the graph.
So the result of topological sorting is ","('[[TOK, HBU, SIM, PST, JLI, VTC, OQL, EXI, NAO, PYL, QEH, AIT, PZE], [TOK, VTC, NAO, PYL, HBU, JLI, OQL, EXI, SIM, PZE, AIT, QEH, PST], [TOK, VTC, NAO, PYL, QEH, SIM, AIT, PZE, HBU, JLI, PST, OQL, EXI], [TOK, VTC, NAO, PYL, HBU, JLI, PST, OQL, EXI, QEH, SIM, AIT, PZE]]',)",3,6
topological_sort,"[(BLM, XLZ), (BLM, RWP), (BLM, CPH), (BLM, OLY), (BLM, HFR), (BLM, HHE), (CPH, RWP), (CPH, HHE), (CPH, XLZ), (OLY, CPH), (OLY, XLZ), (HFR, RWP), (HFR, CPH), (HFR, LUF), (HFR, XLZ), (HHE, RWP), (JEX, RWP), (JEX, OLY), (MKS, HHE), (MKS, JEX), (MKS, CPH), (MKS, OUK), (OUK, RWP), (OUK, CPH), (LUF, OUK), (LUF, HHE), (LUF, MKS), (LUF, CPH), (LUF, OLY), (HDT, HHE), (HDT, LUF), (HDT, BLM), (HDT, RWP)]","{BLM: [XLZ, RWP, CPH, OLY, HFR, HHE],
XLZ: [],
RWP: [],
CPH: [RWP, HHE, XLZ],
OLY: [CPH, XLZ],
HFR: [RWP, CPH, LUF, XLZ],
HHE: [RWP],
JEX: [RWP, OLY],
MKS: [HHE, JEX, CPH, OUK],
OUK: [RWP, CPH],
LUF: [OUK, HHE, MKS, CPH, OLY],
HDT: [HHE, LUF, BLM, RWP]}","Node BLM is connected to nodes XLZ, RWP, CPH, OLY, HFR, HHE.
Node CPH is connected to nodes RWP, HHE, XLZ.
Node OLY is connected to nodes CPH, XLZ.
Node HFR is connected to nodes RWP, CPH, LUF, XLZ.
Node HHE is connected to node RWP.
Node JEX is connected to nodes RWP, OLY.
Node MKS is connected to nodes HHE, JEX, CPH, OUK.
Node OUK is connected to nodes RWP, CPH.
Node LUF is connected to nodes OUK, HHE, MKS, CPH, OLY.
Node HDT is connected to nodes HHE, LUF, BLM, RWP.","[OLY, HDT, HHE, LUF, MKS, HFR, JEX, BLM, OUK, RWP, CPH, XLZ]",12,33,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HDT, BLM, HFR, LUF, MKS, JEX, OUK, OLY, CPH, HHE, XLZ, RWP]","Let's solve it step by step.
Nodes with 0 in-degree: [HDT].
Visit node HDT and remove it from the graph.
Nodes with 0 in-degree: [BLM].
Visit node BLM and remove it from the graph.
Nodes with 0 in-degree: [HFR].
Visit node HFR and remove it from the graph.
Nodes with 0 in-degree: [LUF].
Visit node LUF and remove it from the graph.
Nodes with 0 in-degree: [MKS].
Visit node MKS and remove it from the graph.
Nodes with 0 in-degree: [JEX, OUK].
Visit node JEX and remove it from the graph.
Nodes with 0 in-degree: [OUK, OLY].
Visit node OUK and remove it from the graph.
Nodes with 0 in-degree: [OLY].
Visit node OLY and remove it from the graph.
Nodes with 0 in-degree: [CPH].
Visit node CPH and remove it from the graph.
Nodes with 0 in-degree: [HHE, XLZ].
Visit node HHE and remove it from the graph.
Nodes with 0 in-degree: [XLZ, RWP].
Visit node XLZ and remove it from the graph.
Nodes with 0 in-degree: [RWP].
Visit node RWP and remove it from the graph.
So the result of topological sorting is ","('[[HDT, BLM, HFR, LUF, MKS, JEX, OUK, OLY, CPH, HHE, XLZ, RWP], [HDT, BLM, HFR, LUF, CPH, HHE, XLZ, RWP, MKS, JEX, OUK, OLY], [HDT, BLM, HFR, LUF, MKS, JEX, RWP, OUK, HHE, XLZ, CPH, OLY], [HDT, CPH, HFR, RWP, JEX, XLZ, OLY, OUK, HHE, BLM, LUF, MKS]]',)",0,7
topological_sort,"[(EUE, WWH), (WWH, LLS), (LLS, WLB), (HAW, ACV), (HAW, IGH), (ACV, GOC), (ACV, WWH), (IGH, GOC), (IGH, AFG), (IIM, IGH), (IIM, WWZ), (AFG, WLB), (AFG, EUE), (WLB, GOC), (JIJ, UCN), (JIJ, EUE), (UCN, HAW), (UCN, EUE), (UCN, WWZ), (UCN, LLS), (PMB, WWH), (PMB, UCN), (PMB, IGH), (PMB, IIM)]","{EUE: [WWH],
WWH: [LLS],
LLS: [WLB],
HAW: [ACV, IGH],
ACV: [GOC, WWH],
IGH: [GOC, AFG],
GOC: [],
IIM: [IGH, WWZ],
WWZ: [],
AFG: [WLB, EUE],
WLB: [GOC],
JIJ: [UCN, EUE],
UCN: [HAW, EUE, WWZ, LLS],
PMB: [WWH, UCN, IGH, IIM]}","Node EUE is connected to node WWH.
Node WWH is connected to node LLS.
Node LLS is connected to node WLB.
Node HAW is connected to nodes ACV, IGH.
Node ACV is connected to nodes GOC, WWH.
Node IGH is connected to nodes GOC, AFG.
Node IIM is connected to nodes IGH, WWZ.
Node AFG is connected to nodes WLB, EUE.
Node WLB is connected to node GOC.
Node JIJ is connected to nodes UCN, EUE.
Node UCN is connected to nodes HAW, EUE, WWZ, LLS.
Node PMB is connected to nodes WWH, UCN, IGH, IIM.","[LLS, PMB, UCN, HAW, WLB, GOC, WWZ, IIM, JIJ, EUE, WWH, IGH, AFG, ACV]",14,24,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JIJ, PMB, UCN, IIM, HAW, WWZ, ACV, IGH, AFG, EUE, WWH, LLS, WLB, GOC]","Let's solve it step by step.
Nodes with 0 in-degree: [JIJ, PMB].
Visit node JIJ and remove it from the graph.
Nodes with 0 in-degree: [PMB].
Visit node PMB and remove it from the graph.
Nodes with 0 in-degree: [UCN, IIM].
Visit node UCN and remove it from the graph.
Nodes with 0 in-degree: [IIM, HAW].
Visit node IIM and remove it from the graph.
Nodes with 0 in-degree: [HAW, WWZ].
Visit node HAW and remove it from the graph.
Nodes with 0 in-degree: [WWZ, ACV, IGH].
Visit node WWZ and remove it from the graph.
Nodes with 0 in-degree: [ACV, IGH].
Visit node ACV and remove it from the graph.
Nodes with 0 in-degree: [IGH].
Visit node IGH and remove it from the graph.
Nodes with 0 in-degree: [AFG].
Visit node AFG and remove it from the graph.
Nodes with 0 in-degree: [EUE].
Visit node EUE and remove it from the graph.
Nodes with 0 in-degree: [WWH].
Visit node WWH and remove it from the graph.
Nodes with 0 in-degree: [LLS].
Visit node LLS and remove it from the graph.
Nodes with 0 in-degree: [WLB].
Visit node WLB and remove it from the graph.
Nodes with 0 in-degree: [GOC].
Visit node GOC and remove it from the graph.
So the result of topological sorting is ","('[[JIJ, WWZ, HAW, AFG, WWH, ACV, WLB, PMB, GOC, IGH, LLS, UCN, EUE, IIM], [JIJ, PMB, UCN, IIM, HAW, WWZ, ACV, EUE, LLS, GOC, IGH, AFG, WLB, WWH], [JIJ, PMB, UCN, IIM, WWH, LLS, WLB, GOC, HAW, WWZ, ACV, IGH, AFG, EUE], [JIJ, PMB, UCN, IIM, HAW, WWZ, ACV, IGH, AFG, EUE, WWH, LLS, WLB, GOC]]',)",3,8
topological_sort,"[(KLD, EKG), (KLD, SHS), (KLD, COA), (EKG, ROI), (SHS, KHN), (COA, BOV), (COA, KHN), (ROI, SHS), (ROI, KHN), (BOV, VFM), (BOV, QEJ), (LCQ, VFM), (LCQ, COA), (KHN, QEJ), (KHN, GMY), (KHN, BOV), (GMY, VFM), (HXW, SHS), (HXW, KHN), (HXW, EKG)]","{KLD: [EKG, SHS, COA],
EKG: [ROI],
SHS: [KHN],
COA: [BOV, KHN],
ROI: [SHS, KHN],
BOV: [VFM, QEJ],
VFM: [],
QEJ: [],
LCQ: [VFM, COA],
KHN: [QEJ, GMY, BOV],
GMY: [VFM],
HXW: [SHS, KHN, EKG]}","Node KLD is connected to nodes EKG, SHS, COA.
Node EKG is connected to node ROI.
Node SHS is connected to node KHN.
Node COA is connected to nodes BOV, KHN.
Node ROI is connected to nodes SHS, KHN.
Node BOV is connected to nodes VFM, QEJ.
Node LCQ is connected to nodes VFM, COA.
Node KHN is connected to nodes QEJ, GMY, BOV.
Node GMY is connected to node VFM.
Node HXW is connected to nodes SHS, KHN, EKG.","[KHN, QEJ, HXW, BOV, KLD, GMY, SHS, COA, ROI, LCQ, EKG, VFM]",12,20,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KLD, LCQ, HXW, COA, EKG, ROI, SHS, KHN, GMY, BOV, VFM, QEJ]","Let's solve it step by step.
Nodes with 0 in-degree: [KLD, LCQ, HXW].
Visit node KLD and remove it from the graph.
Nodes with 0 in-degree: [LCQ, HXW].
Visit node LCQ and remove it from the graph.
Nodes with 0 in-degree: [HXW, COA].
Visit node HXW and remove it from the graph.
Nodes with 0 in-degree: [COA, EKG].
Visit node COA and remove it from the graph.
Nodes with 0 in-degree: [EKG].
Visit node EKG and remove it from the graph.
Nodes with 0 in-degree: [ROI].
Visit node ROI and remove it from the graph.
Nodes with 0 in-degree: [SHS].
Visit node SHS and remove it from the graph.
Nodes with 0 in-degree: [KHN].
Visit node KHN and remove it from the graph.
Nodes with 0 in-degree: [GMY, BOV].
Visit node GMY and remove it from the graph.
Nodes with 0 in-degree: [BOV].
Visit node BOV and remove it from the graph.
Nodes with 0 in-degree: [VFM, QEJ].
Visit node VFM and remove it from the graph.
Nodes with 0 in-degree: [QEJ].
Visit node QEJ and remove it from the graph.
So the result of topological sorting is ","('[[KLD, LCQ, HXW, COA, GMY, BOV, VFM, QEJ, EKG, ROI, SHS, KHN], [KLD, LCQ, HXW, COA, EKG, ROI, SHS, KHN, GMY, BOV, VFM, QEJ], [KLD, LCQ, HXW, COA, EKG, ROI, BOV, SHS, GMY, KHN, VFM, QEJ], [KLD, EKG, QEJ, GMY, SHS, KHN, ROI, COA, HXW, LCQ, VFM, BOV]]',)",1,9
topological_sort,"[(JBZ, IBA), (JBZ, SDP), (IBA, SDP), (IBA, YEY), (BXY, DCC), (BXY, ITH), (DCC, IBA), (DCC, JBZ), (ITH, DCC), (ITH, RPX), (ITH, YEY), (ITH, GLQ), (RPX, IBA), (RPX, JBZ)]","{JBZ: [IBA, SDP],
IBA: [SDP, YEY],
SDP: [],
YEY: [],
BXY: [DCC, ITH],
DCC: [IBA, JBZ],
ITH: [DCC, RPX, YEY, GLQ],
RPX: [IBA, JBZ],
GLQ: []}","Node JBZ is connected to nodes IBA, SDP.
Node IBA is connected to nodes SDP, YEY.
Node BXY is connected to nodes DCC, ITH.
Node DCC is connected to nodes IBA, JBZ.
Node ITH is connected to nodes DCC, RPX, YEY, GLQ.
Node RPX is connected to nodes IBA, JBZ.","[GLQ, JBZ, SDP, ITH, RPX, BXY, DCC, IBA, YEY]",9,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BXY, ITH, DCC, RPX, GLQ, JBZ, IBA, SDP, YEY]","Let's solve it step by step.
Nodes with 0 in-degree: [BXY].
Visit node BXY and remove it from the graph.
Nodes with 0 in-degree: [ITH].
Visit node ITH and remove it from the graph.
Nodes with 0 in-degree: [DCC, RPX, GLQ].
Visit node DCC and remove it from the graph.
Nodes with 0 in-degree: [RPX, GLQ].
Visit node RPX and remove it from the graph.
Nodes with 0 in-degree: [GLQ, JBZ].
Visit node GLQ and remove it from the graph.
Nodes with 0 in-degree: [JBZ].
Visit node JBZ and remove it from the graph.
Nodes with 0 in-degree: [IBA].
Visit node IBA and remove it from the graph.
Nodes with 0 in-degree: [SDP, YEY].
Visit node SDP and remove it from the graph.
Nodes with 0 in-degree: [YEY].
Visit node YEY and remove it from the graph.
So the result of topological sorting is ","('[[BXY, ITH, DCC, IBA, SDP, YEY, RPX, GLQ, JBZ], [BXY, ITH, DCC, RPX, GLQ, JBZ, IBA, SDP, YEY], [BXY, ITH, DCC, RPX, SDP, IBA, JBZ, YEY, GLQ], [BXY, SDP, ITH, DCC, YEY, IBA, GLQ, JBZ, RPX]]',)",1,10
topological_sort,"[(OLF, XUB), (OLF, LHY), (OLF, DGL), (OLF, QXI), (OLF, RGH), (OLF, IOM), (XUB, SXC), (LHY, IOM), (LHY, SXC), (DGL, SXC), (DGL, QXI), (QXI, SXC), (QXI, IOM), (RGH, QXI), (RGH, XUB), (RGH, LHY), (RGH, SXC), (IOM, SXC), (GIK, LHY), (GIK, QXI), (GIK, ZZM), (GIK, OLF), (ZZM, DGL), (ZZM, IOM), (HJL, OLF), (HJL, ZZM)]","{OLF: [XUB, LHY, DGL, QXI, RGH, IOM],
XUB: [SXC],
LHY: [IOM, SXC],
DGL: [SXC, QXI],
QXI: [SXC, IOM],
RGH: [QXI, XUB, LHY, SXC],
IOM: [SXC],
SXC: [],
GIK: [LHY, QXI, ZZM, OLF],
ZZM: [DGL, IOM],
HJL: [OLF, ZZM]}","Node OLF is connected to nodes XUB, LHY, DGL, QXI, RGH, IOM.
Node XUB is connected to node SXC.
Node LHY is connected to nodes IOM, SXC.
Node DGL is connected to nodes SXC, QXI.
Node QXI is connected to nodes SXC, IOM.
Node RGH is connected to nodes QXI, XUB, LHY, SXC.
Node IOM is connected to node SXC.
Node GIK is connected to nodes LHY, QXI, ZZM, OLF.
Node ZZM is connected to nodes DGL, IOM.
Node HJL is connected to nodes OLF, ZZM.","[HJL, LHY, ZZM, SXC, RGH, IOM, GIK, QXI, DGL, OLF, XUB]",11,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GIK, HJL, OLF, ZZM, RGH, DGL, XUB, LHY, QXI, IOM, SXC]","Let's solve it step by step.
Nodes with 0 in-degree: [GIK, HJL].
Visit node GIK and remove it from the graph.
Nodes with 0 in-degree: [HJL].
Visit node HJL and remove it from the graph.
Nodes with 0 in-degree: [OLF, ZZM].
Visit node OLF and remove it from the graph.
Nodes with 0 in-degree: [ZZM, RGH].
Visit node ZZM and remove it from the graph.
Nodes with 0 in-degree: [RGH, DGL].
Visit node RGH and remove it from the graph.
Nodes with 0 in-degree: [DGL, XUB, LHY].
Visit node DGL and remove it from the graph.
Nodes with 0 in-degree: [XUB, LHY, QXI].
Visit node XUB and remove it from the graph.
Nodes with 0 in-degree: [LHY, QXI].
Visit node LHY and remove it from the graph.
Nodes with 0 in-degree: [QXI].
Visit node QXI and remove it from the graph.
Nodes with 0 in-degree: [IOM].
Visit node IOM and remove it from the graph.
Nodes with 0 in-degree: [SXC].
Visit node SXC and remove it from the graph.
So the result of topological sorting is ","('[[GIK, XUB, DGL, RGH, QXI, SXC, OLF, IOM, HJL, LHY, ZZM], [GIK, HJL, OLF, QXI, IOM, SXC, ZZM, RGH, DGL, XUB, LHY], [GIK, HJL, OLF, ZZM, RGH, DGL, XUB, LHY, QXI, IOM, SXC], [GIK, HJL, OLF, ZZM, RGH, LHY, SXC, XUB, QXI, DGL, IOM]]',)",2,11
topological_sort,"[(OCR, PBL), (OCR, DLV), (PBL, FEK), (PBL, FZS), (PBL, DLV), (FEK, AEG), (FEK, KGR), (FEK, CNK), (FEK, DLV), (FZS, YWZ), (FZS, DHU), (AEG, YWZ), (AEG, ZCF), (AEG, FZS), (KGR, ZCF), (KGR, FZS), (KGR, DHU), (KGR, AEG), (CNK, DHU), (CNK, KGR), (ZCF, YWZ), (JTJ, AMY), (JTJ, PBL), (JTJ, OCR), (JTJ, FEK), (JTJ, AEG), (AMY, FEK), (DHU, ZCF), (DHU, DLV)]","{OCR: [PBL, DLV],
PBL: [FEK, FZS, DLV],
DLV: [],
FEK: [AEG, KGR, CNK, DLV],
FZS: [YWZ, DHU],
AEG: [YWZ, ZCF, FZS],
KGR: [ZCF, FZS, DHU, AEG],
CNK: [DHU, KGR],
YWZ: [],
ZCF: [YWZ],
JTJ: [AMY, PBL, OCR, FEK, AEG],
AMY: [FEK],
DHU: [ZCF, DLV]}","Node OCR is connected to nodes PBL, DLV.
Node PBL is connected to nodes FEK, FZS, DLV.
Node FEK is connected to nodes AEG, KGR, CNK, DLV.
Node FZS is connected to nodes YWZ, DHU.
Node AEG is connected to nodes YWZ, ZCF, FZS.
Node KGR is connected to nodes ZCF, FZS, DHU, AEG.
Node CNK is connected to nodes DHU, KGR.
Node ZCF is connected to node YWZ.
Node JTJ is connected to nodes AMY, PBL, OCR, FEK, AEG.
Node AMY is connected to node FEK.
Node DHU is connected to nodes ZCF, DLV.","[DHU, YWZ, KGR, FEK, AEG, ZCF, JTJ, FZS, DLV, PBL, CNK, OCR, AMY]",13,29,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JTJ, AMY, OCR, PBL, FEK, CNK, KGR, AEG, FZS, DHU, ZCF, DLV, YWZ]","Let's solve it step by step.
Nodes with 0 in-degree: [JTJ].
Visit node JTJ and remove it from the graph.
Nodes with 0 in-degree: [AMY, OCR].
Visit node AMY and remove it from the graph.
Nodes with 0 in-degree: [OCR].
Visit node OCR and remove it from the graph.
Nodes with 0 in-degree: [PBL].
Visit node PBL and remove it from the graph.
Nodes with 0 in-degree: [FEK].
Visit node FEK and remove it from the graph.
Nodes with 0 in-degree: [CNK].
Visit node CNK and remove it from the graph.
Nodes with 0 in-degree: [KGR].
Visit node KGR and remove it from the graph.
Nodes with 0 in-degree: [AEG].
Visit node AEG and remove it from the graph.
Nodes with 0 in-degree: [FZS].
Visit node FZS and remove it from the graph.
Nodes with 0 in-degree: [DHU].
Visit node DHU and remove it from the graph.
Nodes with 0 in-degree: [ZCF, DLV].
Visit node ZCF and remove it from the graph.
Nodes with 0 in-degree: [DLV, YWZ].
Visit node DLV and remove it from the graph.
Nodes with 0 in-degree: [YWZ].
Visit node YWZ and remove it from the graph.
So the result of topological sorting is ","('[[JTJ, AMY, OCR, PBL, FEK, CNK, DHU, YWZ, KGR, DLV, ZCF, AEG, FZS], [JTJ, AMY, OCR, PBL, DHU, ZCF, DLV, YWZ, FEK, CNK, KGR, AEG, FZS], [JTJ, AMY, OCR, PBL, FEK, CNK, KGR, AEG, FZS, DHU, ZCF, DLV, YWZ], [JTJ, DHU, KGR, AEG, YWZ, PBL, OCR, FZS, DLV, ZCF, CNK, AMY, FEK]]',)",2,12
topological_sort,"[(EVG, RMD), (CDV, FSL), (CDV, LFA), (CDV, ICP), (CDV, EVG), (CDV, QWC), (CDV, SQB), (FSL, EVG), (LFA, QWC), (LFA, ZAZ), (LFA, FSL), (ICP, EVG), (QWC, ICP), (QWC, EVG), (QWC, FSL), (SQB, SVT), (SQB, EVG), (SQB, LFA), (ZAI, RMD), (ZAI, CDV), (ZAI, QWC), (ZAZ, SVT), (ZAZ, QWC), (ZAZ, RMD), (SVT, ICP), (SVT, EVG), (SVT, QWC), (VPF, CDV), (VPF, ZAI), (VPF, FSL), (VPF, QWC), (VPF, LFA)]","{EVG: [RMD],
RMD: [],
CDV: [FSL, LFA, ICP, EVG, QWC, SQB],
FSL: [EVG],
LFA: [QWC, ZAZ, FSL],
ICP: [EVG],
QWC: [ICP, EVG, FSL],
SQB: [SVT, EVG, LFA],
ZAI: [RMD, CDV, QWC],
ZAZ: [SVT, QWC, RMD],
SVT: [ICP, EVG, QWC],
VPF: [CDV, ZAI, FSL, QWC, LFA]}","Node EVG is connected to node RMD.
Node CDV is connected to nodes FSL, LFA, ICP, EVG, QWC, SQB.
Node FSL is connected to node EVG.
Node LFA is connected to nodes QWC, ZAZ, FSL.
Node ICP is connected to node EVG.
Node QWC is connected to nodes ICP, EVG, FSL.
Node SQB is connected to nodes SVT, EVG, LFA.
Node ZAI is connected to nodes RMD, CDV, QWC.
Node ZAZ is connected to nodes SVT, QWC, RMD.
Node SVT is connected to nodes ICP, EVG, QWC.
Node VPF is connected to nodes CDV, ZAI, FSL, QWC, LFA.","[SVT, ZAI, EVG, ZAZ, LFA, SQB, VPF, RMD, ICP, FSL, CDV, QWC]",12,32,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VPF, ZAI, CDV, SQB, LFA, ZAZ, SVT, QWC, ICP, FSL, EVG, RMD]","Let's solve it step by step.
Nodes with 0 in-degree: [VPF].
Visit node VPF and remove it from the graph.
Nodes with 0 in-degree: [ZAI].
Visit node ZAI and remove it from the graph.
Nodes with 0 in-degree: [CDV].
Visit node CDV and remove it from the graph.
Nodes with 0 in-degree: [SQB].
Visit node SQB and remove it from the graph.
Nodes with 0 in-degree: [LFA].
Visit node LFA and remove it from the graph.
Nodes with 0 in-degree: [ZAZ].
Visit node ZAZ and remove it from the graph.
Nodes with 0 in-degree: [SVT].
Visit node SVT and remove it from the graph.
Nodes with 0 in-degree: [QWC].
Visit node QWC and remove it from the graph.
Nodes with 0 in-degree: [ICP, FSL].
Visit node ICP and remove it from the graph.
Nodes with 0 in-degree: [FSL].
Visit node FSL and remove it from the graph.
Nodes with 0 in-degree: [EVG].
Visit node EVG and remove it from the graph.
Nodes with 0 in-degree: [RMD].
Visit node RMD and remove it from the graph.
So the result of topological sorting is ","('[[VPF, CDV, RMD, ICP, SVT, QWC, LFA, ZAI, ZAZ, SQB, EVG, FSL], [VPF, ZAI, CDV, SQB, ICP, FSL, EVG, RMD, LFA, ZAZ, SVT, QWC], [VPF, ZAI, CDV, SQB, LFA, ZAZ, FSL, EVG, ICP, SVT, QWC, RMD], [VPF, ZAI, CDV, SQB, LFA, ZAZ, SVT, QWC, ICP, FSL, EVG, RMD]]',)",3,13
topological_sort,"[(ZVR, RIX), (ZVR, TJY), (ZVR, QWE), (ZVR, ZUH), (ZVR, TOU), (RIX, ZUH), (RIX, GJA), (RIX, TQD), (RIX, YKS), (RIX, TRE), (RIX, YYU), (TJY, ZUH), (TJY, TQD), (TJY, FSL), (QWE, YOZ), (QWE, TJY), (TOU, YKS), (TOU, FSL), (GJA, TRE), (GJA, FSL), (GJA, TJY), (GJA, TQD), (TQD, YOZ), (TQD, FSL), (TQD, YKS), (TQD, YYU), (YKS, ZUH), (TRE, TQD), (YYU, YKS), (WYL, YYU), (WYL, TOU), (WYL, TQD), (WYL, ZUH), (WYL, QWE), (FSL, ZUH), (FSL, YOZ), (YOZ, ZUH), (YOZ, YYU), (KUO, FSL), (KUO, WYL), (KUO, TOU), (KUO, ZVR), (KUO, YKS), (KUO, TQD), (KUO, GJA)]","{ZVR: [RIX, TJY, QWE, ZUH, TOU],
RIX: [ZUH, GJA, TQD, YKS, TRE, YYU],
TJY: [ZUH, TQD, FSL],
QWE: [YOZ, TJY],
ZUH: [],
TOU: [YKS, FSL],
GJA: [TRE, FSL, TJY, TQD],
TQD: [YOZ, FSL, YKS, YYU],
YKS: [ZUH],
TRE: [TQD],
YYU: [YKS],
WYL: [YYU, TOU, TQD, ZUH, QWE],
FSL: [ZUH, YOZ],
YOZ: [ZUH, YYU],
KUO: [FSL, WYL, TOU, ZVR, YKS, TQD, GJA]}","Node ZVR is connected to nodes RIX, TJY, QWE, ZUH, TOU.
Node RIX is connected to nodes ZUH, GJA, TQD, YKS, TRE, YYU.
Node TJY is connected to nodes ZUH, TQD, FSL.
Node QWE is connected to nodes YOZ, TJY.
Node TOU is connected to nodes YKS, FSL.
Node GJA is connected to nodes TRE, FSL, TJY, TQD.
Node TQD is connected to nodes YOZ, FSL, YKS, YYU.
Node YKS is connected to node ZUH.
Node TRE is connected to node TQD.
Node YYU is connected to node YKS.
Node WYL is connected to nodes YYU, TOU, TQD, ZUH, QWE.
Node FSL is connected to nodes ZUH, YOZ.
Node YOZ is connected to nodes ZUH, YYU.
Node KUO is connected to nodes FSL, WYL, TOU, ZVR, YKS, TQD, GJA.","[TRE, KUO, TJY, YKS, YYU, FSL, GJA, TQD, WYL, ZVR, QWE, RIX, ZUH, TOU, YOZ]",15,45,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KUO, WYL, ZVR, RIX, QWE, TOU, GJA, TRE, TJY, TQD, FSL, YOZ, YYU, YKS, ZUH]","Let's solve it step by step.
Nodes with 0 in-degree: [KUO].
Visit node KUO and remove it from the graph.
Nodes with 0 in-degree: [WYL, ZVR].
Visit node WYL and remove it from the graph.
Nodes with 0 in-degree: [ZVR].
Visit node ZVR and remove it from the graph.
Nodes with 0 in-degree: [RIX, QWE, TOU].
Visit node RIX and remove it from the graph.
Nodes with 0 in-degree: [QWE, TOU, GJA].
Visit node QWE and remove it from the graph.
Nodes with 0 in-degree: [TOU, GJA].
Visit node TOU and remove it from the graph.
Nodes with 0 in-degree: [GJA].
Visit node GJA and remove it from the graph.
Nodes with 0 in-degree: [TRE, TJY].
Visit node TRE and remove it from the graph.
Nodes with 0 in-degree: [TJY].
Visit node TJY and remove it from the graph.
Nodes with 0 in-degree: [TQD].
Visit node TQD and remove it from the graph.
Nodes with 0 in-degree: [FSL].
Visit node FSL and remove it from the graph.
Nodes with 0 in-degree: [YOZ].
Visit node YOZ and remove it from the graph.
Nodes with 0 in-degree: [YYU].
Visit node YYU and remove it from the graph.
Nodes with 0 in-degree: [YKS].
Visit node YKS and remove it from the graph.
Nodes with 0 in-degree: [ZUH].
Visit node ZUH and remove it from the graph.
So the result of topological sorting is ","('[[KUO, GJA, YKS, RIX, FSL, TOU, YOZ, ZUH, YYU, TQD, WYL, TJY, ZVR, TRE, QWE], [KUO, WYL, ZVR, RIX, QWE, FSL, YOZ, YYU, YKS, ZUH, TOU, GJA, TRE, TJY, TQD], [KUO, WYL, ZVR, RIX, QWE, TOU, GJA, TRE, TJY, TQD, FSL, YOZ, YYU, YKS, ZUH], [KUO, WYL, ZVR, RIX, QWE, TOU, GJA, TRE, YOZ, YYU, YKS, TQD, FSL, ZUH, TJY]]',)",2,14
topological_sort,"[(UDJ, GDC), (UDJ, OHF), (UDJ, IMS), (OHF, BCJ), (OHF, EES), (IMS, OHF), (BCJ, GDC), (EES, BCJ), (EES, RDI), (RDI, GDC), (YEN, GDC), (YEN, BCJ), (YEN, UDJ), (YEN, OHF)]","{UDJ: [GDC, OHF, IMS],
GDC: [],
OHF: [BCJ, EES],
IMS: [OHF],
BCJ: [GDC],
EES: [BCJ, RDI],
RDI: [GDC],
YEN: [GDC, BCJ, UDJ, OHF]}","Node UDJ is connected to nodes GDC, OHF, IMS.
Node OHF is connected to nodes BCJ, EES.
Node IMS is connected to node OHF.
Node BCJ is connected to node GDC.
Node EES is connected to nodes BCJ, RDI.
Node RDI is connected to node GDC.
Node YEN is connected to nodes GDC, BCJ, UDJ, OHF.","[IMS, RDI, BCJ, YEN, EES, GDC, OHF, UDJ]",8,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YEN, UDJ, IMS, OHF, EES, BCJ, RDI, GDC]","Let's solve it step by step.
Nodes with 0 in-degree: [YEN].
Visit node YEN and remove it from the graph.
Nodes with 0 in-degree: [UDJ].
Visit node UDJ and remove it from the graph.
Nodes with 0 in-degree: [IMS].
Visit node IMS and remove it from the graph.
Nodes with 0 in-degree: [OHF].
Visit node OHF and remove it from the graph.
Nodes with 0 in-degree: [EES].
Visit node EES and remove it from the graph.
Nodes with 0 in-degree: [BCJ, RDI].
Visit node BCJ and remove it from the graph.
Nodes with 0 in-degree: [RDI].
Visit node RDI and remove it from the graph.
Nodes with 0 in-degree: [GDC].
Visit node GDC and remove it from the graph.
So the result of topological sorting is ","('[[YEN, UDJ, RDI, GDC, IMS, OHF, EES, BCJ], [YEN, GDC, EES, RDI, IMS, BCJ, OHF, UDJ], [YEN, UDJ, IMS, OHF, EES, BCJ, RDI, GDC], [YEN, UDJ, IMS, OHF, EES, GDC, BCJ, RDI]]',)",2,15
topological_sort,"[(YOA, TXY), (YOA, OII), (YOA, CXH), (TXY, QXY), (TXY, OII), (TXY, KVP), (OII, CXH), (QXY, IVB), (QXY, CXH), (KVP, IVB), (KVP, CXH), (PQK, CXH), (PQK, QXY), (PQK, IVB), (PQK, YOA), (PQK, KVP), (PQK, SAF), (SAF, YOA), (SAF, TXY), (SAF, KVP)]","{YOA: [TXY, OII, CXH],
TXY: [QXY, OII, KVP],
OII: [CXH],
CXH: [],
QXY: [IVB, CXH],
KVP: [IVB, CXH],
IVB: [],
PQK: [CXH, QXY, IVB, YOA, KVP, SAF],
SAF: [YOA, TXY, KVP]}","Node YOA is connected to nodes TXY, OII, CXH.
Node TXY is connected to nodes QXY, OII, KVP.
Node OII is connected to node CXH.
Node QXY is connected to nodes IVB, CXH.
Node KVP is connected to nodes IVB, CXH.
Node PQK is connected to nodes CXH, QXY, IVB, YOA, KVP, SAF.
Node SAF is connected to nodes YOA, TXY, KVP.","[IVB, PQK, TXY, YOA, KVP, SAF, QXY, OII, CXH]",9,20,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PQK, SAF, YOA, TXY, QXY, OII, KVP, IVB, CXH]","Let's solve it step by step.
Nodes with 0 in-degree: [PQK].
Visit node PQK and remove it from the graph.
Nodes with 0 in-degree: [SAF].
Visit node SAF and remove it from the graph.
Nodes with 0 in-degree: [YOA].
Visit node YOA and remove it from the graph.
Nodes with 0 in-degree: [TXY].
Visit node TXY and remove it from the graph.
Nodes with 0 in-degree: [QXY, OII, KVP].
Visit node QXY and remove it from the graph.
Nodes with 0 in-degree: [OII, KVP].
Visit node OII and remove it from the graph.
Nodes with 0 in-degree: [KVP].
Visit node KVP and remove it from the graph.
Nodes with 0 in-degree: [IVB, CXH].
Visit node IVB and remove it from the graph.
Nodes with 0 in-degree: [CXH].
Visit node CXH and remove it from the graph.
So the result of topological sorting is ","('[[PQK, SAF, YOA, TXY, QXY, OII, KVP, IVB, CXH], [PQK, SAF, YOA, TXY, IVB, OII, KVP, CXH, QXY], [PQK, IVB, QXY, YOA, OII, CXH, TXY, KVP, SAF], [PQK, SAF, YOA, KVP, IVB, CXH, TXY, QXY, OII]]',)",0,16
topological_sort,"[(PZJ, VIT), (VIT, ZCD), (VIT, OKC), (VIT, RLB), (ZCD, OKC), (FXM, RLB), (FXM, PZJ), (FXM, WYF), (WYF, RLB), (JLH, VIT), (JLH, UJM), (UJM, RQA), (RQA, VIT), (RQA, PZJ)]","{PZJ: [VIT],
VIT: [ZCD, OKC, RLB],
ZCD: [OKC],
OKC: [],
RLB: [],
FXM: [RLB, PZJ, WYF],
WYF: [RLB],
JLH: [VIT, UJM],
UJM: [RQA],
RQA: [VIT, PZJ]}","Node PZJ is connected to node VIT.
Node VIT is connected to nodes ZCD, OKC, RLB.
Node ZCD is connected to node OKC.
Node FXM is connected to nodes RLB, PZJ, WYF.
Node WYF is connected to node RLB.
Node JLH is connected to nodes VIT, UJM.
Node UJM is connected to node RQA.
Node RQA is connected to nodes VIT, PZJ.","[WYF, JLH, PZJ, VIT, FXM, OKC, RLB, UJM, RQA, ZCD]",10,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FXM, JLH, WYF, UJM, RQA, PZJ, VIT, ZCD, RLB, OKC]","Let's solve it step by step.
Nodes with 0 in-degree: [FXM, JLH].
Visit node FXM and remove it from the graph.
Nodes with 0 in-degree: [JLH, WYF].
Visit node JLH and remove it from the graph.
Nodes with 0 in-degree: [WYF, UJM].
Visit node WYF and remove it from the graph.
Nodes with 0 in-degree: [UJM].
Visit node UJM and remove it from the graph.
Nodes with 0 in-degree: [RQA].
Visit node RQA and remove it from the graph.
Nodes with 0 in-degree: [PZJ].
Visit node PZJ and remove it from the graph.
Nodes with 0 in-degree: [VIT].
Visit node VIT and remove it from the graph.
Nodes with 0 in-degree: [ZCD, RLB].
Visit node ZCD and remove it from the graph.
Nodes with 0 in-degree: [RLB, OKC].
Visit node RLB and remove it from the graph.
Nodes with 0 in-degree: [OKC].
Visit node OKC and remove it from the graph.
So the result of topological sorting is ","('[[FXM, JLH, WYF, UJM, RQA, OKC, VIT, RLB, PZJ, ZCD], [FXM, JLH, WYF, UJM, RQA, PZJ, VIT, ZCD, RLB, OKC], [FXM, RLB, UJM, ZCD, OKC, JLH, VIT, PZJ, WYF, RQA], [FXM, JLH, WYF, ZCD, RLB, OKC, UJM, RQA, PZJ, VIT]]',)",1,17
topological_sort,"[(JTX, TZF), (JTX, LBP), (JTX, FRG), (TZF, TOZ), (TZF, ESO), (TOZ, RFD), (ESO, RFD), (VBR, TZF), (VBR, HTT), (HTT, JTX), (CRZ, HTT), (CRZ, TOZ), (CRZ, LBP), (CRZ, VBR), (CRZ, FRG), (OJR, TZF), (OJR, CRZ), (OJR, HTT), (PQA, HTT), (PQA, TZF), (PQA, CRZ), (PQA, RFD)]","{JTX: [TZF, LBP, FRG],
TZF: [TOZ, ESO],
LBP: [],
FRG: [],
TOZ: [RFD],
ESO: [RFD],
VBR: [TZF, HTT],
HTT: [JTX],
RFD: [],
CRZ: [HTT, TOZ, LBP, VBR, FRG],
OJR: [TZF, CRZ, HTT],
PQA: [HTT, TZF, CRZ, RFD]}","Node JTX is connected to nodes TZF, LBP, FRG.
Node TZF is connected to nodes TOZ, ESO.
Node TOZ is connected to node RFD.
Node ESO is connected to node RFD.
Node VBR is connected to nodes TZF, HTT.
Node HTT is connected to node JTX.
Node CRZ is connected to nodes HTT, TOZ, LBP, VBR, FRG.
Node OJR is connected to nodes TZF, CRZ, HTT.
Node PQA is connected to nodes HTT, TZF, CRZ, RFD.","[TOZ, VBR, JTX, HTT, PQA, FRG, RFD, TZF, LBP, CRZ, ESO, OJR]",12,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OJR, PQA, CRZ, VBR, HTT, JTX, TZF, LBP, FRG, TOZ, ESO, RFD]","Let's solve it step by step.
Nodes with 0 in-degree: [OJR, PQA].
Visit node OJR and remove it from the graph.
Nodes with 0 in-degree: [PQA].
Visit node PQA and remove it from the graph.
Nodes with 0 in-degree: [CRZ].
Visit node CRZ and remove it from the graph.
Nodes with 0 in-degree: [VBR].
Visit node VBR and remove it from the graph.
Nodes with 0 in-degree: [HTT].
Visit node HTT and remove it from the graph.
Nodes with 0 in-degree: [JTX].
Visit node JTX and remove it from the graph.
Nodes with 0 in-degree: [TZF, LBP, FRG].
Visit node TZF and remove it from the graph.
Nodes with 0 in-degree: [LBP, FRG, TOZ, ESO].
Visit node LBP and remove it from the graph.
Nodes with 0 in-degree: [FRG, TOZ, ESO].
Visit node FRG and remove it from the graph.
Nodes with 0 in-degree: [TOZ, ESO].
Visit node TOZ and remove it from the graph.
Nodes with 0 in-degree: [ESO].
Visit node ESO and remove it from the graph.
Nodes with 0 in-degree: [RFD].
Visit node RFD and remove it from the graph.
So the result of topological sorting is ","('[[OJR, PQA, CRZ, VBR, HTT, JTX, TOZ, FRG, TZF, RFD, ESO, LBP], [OJR, FRG, CRZ, VBR, TZF, LBP, HTT, JTX, ESO, PQA, RFD, TOZ], [OJR, PQA, CRZ, VBR, FRG, TOZ, ESO, RFD, HTT, JTX, TZF, LBP], [OJR, PQA, CRZ, VBR, HTT, JTX, TZF, LBP, FRG, TOZ, ESO, RFD]]',)",3,18
topological_sort,"[(FGM, CTU), (FGM, LDB), (CTU, KHL), (LDB, CTU), (KHL, JLG), (KHL, JTK), (JLG, QBH), (JTK, JLG), (YNG, KHL), (YNG, QBH), (SAE, FGM), (XKF, JTK), (XKF, JLG)]","{FGM: [CTU, LDB],
CTU: [KHL],
LDB: [CTU],
KHL: [JLG, JTK],
JLG: [QBH],
JTK: [JLG],
QBH: [],
YNG: [KHL, QBH],
SAE: [FGM],
XKF: [JTK, JLG]}","Node FGM is connected to nodes CTU, LDB.
Node CTU is connected to node KHL.
Node LDB is connected to node CTU.
Node KHL is connected to nodes JLG, JTK.
Node JLG is connected to node QBH.
Node JTK is connected to node JLG.
Node YNG is connected to nodes KHL, QBH.
Node SAE is connected to node FGM.
Node XKF is connected to nodes JTK, JLG.","[JTK, XKF, QBH, FGM, LDB, JLG, CTU, SAE, YNG, KHL]",10,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YNG, SAE, XKF, FGM, LDB, CTU, KHL, JTK, JLG, QBH]","Let's solve it step by step.
Nodes with 0 in-degree: [YNG, SAE, XKF].
Visit node YNG and remove it from the graph.
Nodes with 0 in-degree: [SAE, XKF].
Visit node SAE and remove it from the graph.
Nodes with 0 in-degree: [XKF, FGM].
Visit node XKF and remove it from the graph.
Nodes with 0 in-degree: [FGM].
Visit node FGM and remove it from the graph.
Nodes with 0 in-degree: [LDB].
Visit node LDB and remove it from the graph.
Nodes with 0 in-degree: [CTU].
Visit node CTU and remove it from the graph.
Nodes with 0 in-degree: [KHL].
Visit node KHL and remove it from the graph.
Nodes with 0 in-degree: [JTK].
Visit node JTK and remove it from the graph.
Nodes with 0 in-degree: [JLG].
Visit node JLG and remove it from the graph.
Nodes with 0 in-degree: [QBH].
Visit node QBH and remove it from the graph.
So the result of topological sorting is ","('[[YNG, SAE, XKF, FGM, LDB, QBH, JLG, JTK, KHL, CTU], [YNG, SAE, XKF, FGM, LDB, CTU, KHL, JTK, JLG, QBH], [YNG, CTU, KHL, JTK, SAE, FGM, LDB, QBH, XKF, JLG], [YNG, SAE, XKF, JTK, JLG, QBH, FGM, LDB, CTU, KHL]]',)",1,19
topological_sort,"[(ZFJ, WRB), (WRB, FMG), (WRB, YNH), (FMG, WMH), (FMG, HZV), (YNH, YVB), (YNH, FMG), (YNH, VHI), (HZV, YVB), (HZV, WMH), (VHI, YVB), (VHI, HZV)]","{ZFJ: [WRB],
WRB: [FMG, YNH],
FMG: [WMH, HZV],
YNH: [YVB, FMG, VHI],
WMH: [],
HZV: [YVB, WMH],
YVB: [],
VHI: [YVB, HZV]}","Node ZFJ is connected to node WRB.
Node WRB is connected to nodes FMG, YNH.
Node FMG is connected to nodes WMH, HZV.
Node YNH is connected to nodes YVB, FMG, VHI.
Node HZV is connected to nodes YVB, WMH.
Node VHI is connected to nodes YVB, HZV.","[VHI, WMH, WRB, FMG, YNH, HZV, YVB, ZFJ]",8,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZFJ, WRB, YNH, FMG, VHI, HZV, YVB, WMH]","Let's solve it step by step.
Nodes with 0 in-degree: [ZFJ].
Visit node ZFJ and remove it from the graph.
Nodes with 0 in-degree: [WRB].
Visit node WRB and remove it from the graph.
Nodes with 0 in-degree: [YNH].
Visit node YNH and remove it from the graph.
Nodes with 0 in-degree: [FMG, VHI].
Visit node FMG and remove it from the graph.
Nodes with 0 in-degree: [VHI].
Visit node VHI and remove it from the graph.
Nodes with 0 in-degree: [HZV].
Visit node HZV and remove it from the graph.
Nodes with 0 in-degree: [YVB, WMH].
Visit node YVB and remove it from the graph.
Nodes with 0 in-degree: [WMH].
Visit node WMH and remove it from the graph.
So the result of topological sorting is ","('[[ZFJ, WRB, YVB, WMH, YNH, FMG, VHI, HZV], [ZFJ, WRB, YNH, FMG, VHI, HZV, YVB, WMH], [ZFJ, WRB, YNH, FMG, WMH, HZV, YVB, VHI], [ZFJ, WRB, YVB, WMH, FMG, YNH, VHI, HZV]]',)",1,20
topological_sort,"[(UAG, DSS), (UAG, EXS), (DSS, VFP), (EXS, LOG), (EXS, YOI), (WCB, DSS), (WCB, QDJ), (VXZ, GOY), (GOY, WCB), (QJY, EKC), (QJY, RBF), (EKC, UAG), (EKC, YOI), (EKC, VFP), (RBF, VXZ), (YOI, VXZ), (YOI, RBF), (YOI, OFN), (LOG, DSS), (LOG, RBF), (LOG, GOY)]","{UAG: [DSS, EXS],
DSS: [VFP],
EXS: [LOG, YOI],
VFP: [],
WCB: [DSS, QDJ],
QDJ: [],
VXZ: [GOY],
GOY: [WCB],
QJY: [EKC, RBF],
EKC: [UAG, YOI, VFP],
RBF: [VXZ],
YOI: [VXZ, RBF, OFN],
LOG: [DSS, RBF, GOY],
OFN: []}","Node UAG is connected to nodes DSS, EXS.
Node DSS is connected to node VFP.
Node EXS is connected to nodes LOG, YOI.
Node WCB is connected to nodes DSS, QDJ.
Node VXZ is connected to node GOY.
Node GOY is connected to node WCB.
Node QJY is connected to nodes EKC, RBF.
Node EKC is connected to nodes UAG, YOI, VFP.
Node RBF is connected to node VXZ.
Node YOI is connected to nodes VXZ, RBF, OFN.
Node LOG is connected to nodes DSS, RBF, GOY.","[QJY, OFN, YOI, WCB, EXS, VFP, RBF, DSS, EKC, UAG, LOG, VXZ, GOY, QDJ]",14,21,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QJY, EKC, UAG, EXS, LOG, YOI, RBF, OFN, VXZ, GOY, WCB, DSS, QDJ, VFP]","Let's solve it step by step.
Nodes with 0 in-degree: [QJY].
Visit node QJY and remove it from the graph.
Nodes with 0 in-degree: [EKC].
Visit node EKC and remove it from the graph.
Nodes with 0 in-degree: [UAG].
Visit node UAG and remove it from the graph.
Nodes with 0 in-degree: [EXS].
Visit node EXS and remove it from the graph.
Nodes with 0 in-degree: [LOG, YOI].
Visit node LOG and remove it from the graph.
Nodes with 0 in-degree: [YOI].
Visit node YOI and remove it from the graph.
Nodes with 0 in-degree: [RBF, OFN].
Visit node RBF and remove it from the graph.
Nodes with 0 in-degree: [OFN, VXZ].
Visit node OFN and remove it from the graph.
Nodes with 0 in-degree: [VXZ].
Visit node VXZ and remove it from the graph.
Nodes with 0 in-degree: [GOY].
Visit node GOY and remove it from the graph.
Nodes with 0 in-degree: [WCB].
Visit node WCB and remove it from the graph.
Nodes with 0 in-degree: [DSS, QDJ].
Visit node DSS and remove it from the graph.
Nodes with 0 in-degree: [QDJ, VFP].
Visit node QDJ and remove it from the graph.
Nodes with 0 in-degree: [VFP].
Visit node VFP and remove it from the graph.
So the result of topological sorting is ","('[[QJY, EKC, UAG, EXS, WCB, DSS, QDJ, VFP, LOG, YOI, RBF, OFN, VXZ, GOY], [QJY, RBF, EKC, WCB, UAG, EXS, YOI, VFP, LOG, DSS, QDJ, GOY, OFN, VXZ], [QJY, EKC, UAG, EXS, LOG, YOI, RBF, OFN, VXZ, GOY, WCB, DSS, QDJ, VFP], [QJY, EKC, UAG, EXS, LOG, YOI, RBF, QDJ, WCB, DSS, GOY, OFN, VXZ, VFP]]',)",2,21
topological_sort,"[(QEL, STM), (QEL, EYG), (QEL, QIV), (STM, ENZ), (EYG, YAA), (EYG, PXO), (QIV, UBD), (LKN, ENZ), (UBD, EYG), (PSY, ENZ), (PSY, STM), (PSY, LKN), (PSY, RKD), (PSY, YAA), (RKD, ENZ), (RKD, QEL), (RKD, UBD), (SGB, RKD), (IFM, QEL), (IFM, PXO), (IFM, ENZ)]","{QEL: [STM, EYG, QIV],
STM: [ENZ],
EYG: [YAA, PXO],
QIV: [UBD],
ENZ: [],
LKN: [ENZ],
UBD: [EYG],
YAA: [],
PXO: [],
PSY: [ENZ, STM, LKN, RKD, YAA],
RKD: [ENZ, QEL, UBD],
SGB: [RKD],
IFM: [QEL, PXO, ENZ]}","Node QEL is connected to nodes STM, EYG, QIV.
Node STM is connected to node ENZ.
Node EYG is connected to nodes YAA, PXO.
Node QIV is connected to node UBD.
Node LKN is connected to node ENZ.
Node UBD is connected to node EYG.
Node PSY is connected to nodes ENZ, STM, LKN, RKD, YAA.
Node RKD is connected to nodes ENZ, QEL, UBD.
Node SGB is connected to node RKD.
Node IFM is connected to nodes QEL, PXO, ENZ.","[PXO, RKD, STM, PSY, UBD, SGB, LKN, QIV, EYG, QEL, ENZ, IFM, YAA]",13,21,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PSY, SGB, IFM, LKN, RKD, QEL, STM, QIV, ENZ, UBD, EYG, YAA, PXO]","Let's solve it step by step.
Nodes with 0 in-degree: [PSY, SGB, IFM].
Visit node PSY and remove it from the graph.
Nodes with 0 in-degree: [SGB, IFM, LKN].
Visit node SGB and remove it from the graph.
Nodes with 0 in-degree: [IFM, LKN, RKD].
Visit node IFM and remove it from the graph.
Nodes with 0 in-degree: [LKN, RKD].
Visit node LKN and remove it from the graph.
Nodes with 0 in-degree: [RKD].
Visit node RKD and remove it from the graph.
Nodes with 0 in-degree: [QEL].
Visit node QEL and remove it from the graph.
Nodes with 0 in-degree: [STM, QIV].
Visit node STM and remove it from the graph.
Nodes with 0 in-degree: [QIV, ENZ].
Visit node QIV and remove it from the graph.
Nodes with 0 in-degree: [ENZ, UBD].
Visit node ENZ and remove it from the graph.
Nodes with 0 in-degree: [UBD].
Visit node UBD and remove it from the graph.
Nodes with 0 in-degree: [EYG].
Visit node EYG and remove it from the graph.
Nodes with 0 in-degree: [YAA, PXO].
Visit node YAA and remove it from the graph.
Nodes with 0 in-degree: [PXO].
Visit node PXO and remove it from the graph.
So the result of topological sorting is ","('[[PSY, SGB, IFM, LKN, RKD, QEL, UBD, YAA, PXO, QIV, STM, EYG, ENZ], [PSY, SGB, IFM, LKN, RKD, QEL, STM, QIV, ENZ, UBD, EYG, YAA, PXO], [PSY, UBD, LKN, QEL, EYG, STM, PXO, QIV, ENZ, YAA, SGB, RKD, IFM], [PSY, SGB, IFM, LKN, UBD, EYG, YAA, PXO, RKD, QEL, STM, QIV, ENZ]]',)",1,22
topological_sort,"[(DCS, RIJ), (RIJ, DWX), (RIJ, GMS), (RIJ, VAE), (DWX, QCC), (DWX, GMS), (DWX, MJD), (GMS, QCC), (GMS, WVF), (GMS, QJM), (VAE, YAU), (QCC, VUK), (QCC, YAU), (WVF, QJM), (VUK, QJM), (YAU, VHD), (QCN, YAU), (QCN, WVF), (QCN, DCS), (VHD, WVF), (XAO, WVF), (XAO, VHD)]","{DCS: [RIJ],
RIJ: [DWX, GMS, VAE],
DWX: [QCC, GMS, MJD],
GMS: [QCC, WVF, QJM],
VAE: [YAU],
QCC: [VUK, YAU],
WVF: [QJM],
QJM: [],
VUK: [QJM],
YAU: [VHD],
MJD: [],
QCN: [YAU, WVF, DCS],
VHD: [WVF],
XAO: [WVF, VHD]}","Node DCS is connected to node RIJ.
Node RIJ is connected to nodes DWX, GMS, VAE.
Node DWX is connected to nodes QCC, GMS, MJD.
Node GMS is connected to nodes QCC, WVF, QJM.
Node VAE is connected to node YAU.
Node QCC is connected to nodes VUK, YAU.
Node WVF is connected to node QJM.
Node VUK is connected to node QJM.
Node YAU is connected to node VHD.
Node QCN is connected to nodes YAU, WVF, DCS.
Node VHD is connected to node WVF.
Node XAO is connected to nodes WVF, VHD.","[QCC, VHD, WVF, YAU, DWX, QCN, RIJ, VUK, VAE, QJM, XAO, GMS, DCS, MJD]",14,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QCN, XAO, DCS, RIJ, DWX, VAE, GMS, MJD, QCC, VUK, YAU, VHD, WVF, QJM]","Let's solve it step by step.
Nodes with 0 in-degree: [QCN, XAO].
Visit node QCN and remove it from the graph.
Nodes with 0 in-degree: [XAO, DCS].
Visit node XAO and remove it from the graph.
Nodes with 0 in-degree: [DCS].
Visit node DCS and remove it from the graph.
Nodes with 0 in-degree: [RIJ].
Visit node RIJ and remove it from the graph.
Nodes with 0 in-degree: [DWX, VAE].
Visit node DWX and remove it from the graph.
Nodes with 0 in-degree: [VAE, GMS, MJD].
Visit node VAE and remove it from the graph.
Nodes with 0 in-degree: [GMS, MJD].
Visit node GMS and remove it from the graph.
Nodes with 0 in-degree: [MJD, QCC].
Visit node MJD and remove it from the graph.
Nodes with 0 in-degree: [QCC].
Visit node QCC and remove it from the graph.
Nodes with 0 in-degree: [VUK, YAU].
Visit node VUK and remove it from the graph.
Nodes with 0 in-degree: [YAU].
Visit node YAU and remove it from the graph.
Nodes with 0 in-degree: [VHD].
Visit node VHD and remove it from the graph.
Nodes with 0 in-degree: [WVF].
Visit node WVF and remove it from the graph.
Nodes with 0 in-degree: [QJM].
Visit node QJM and remove it from the graph.
So the result of topological sorting is ","('[[QCN, XAO, DCS, RIJ, DWX, VAE, GMS, MJD, QCC, VUK, YAU, VHD, WVF, QJM], [QCN, RIJ, MJD, VAE, QJM, YAU, VUK, VHD, DWX, QCC, DCS, WVF, GMS, XAO], [QCN, XAO, DCS, RIJ, YAU, VHD, WVF, QJM, DWX, VAE, GMS, MJD, QCC, VUK], [QCN, XAO, DCS, RIJ, DWX, VAE, GMS, MJD, VUK, VHD, YAU, QJM, QCC, WVF]]',)",0,23
topological_sort,"[(NVF, UZU), (NVF, XBX), (UZU, IGZ), (UZU, QWE), (XBX, UZU), (IGZ, SXI), (QWE, ECP), (NUH, IGZ), (NUH, UZU), (NUH, ECP), (NUH, XBX), (SXI, QWE), (TYF, SXI), (TYF, XBX), (TYF, NUH), (OHA, NVF), (OHA, IGZ), (OHA, SXI)]","{NVF: [UZU, XBX],
UZU: [IGZ, QWE],
XBX: [UZU],
IGZ: [SXI],
QWE: [ECP],
NUH: [IGZ, UZU, ECP, XBX],
ECP: [],
SXI: [QWE],
TYF: [SXI, XBX, NUH],
OHA: [NVF, IGZ, SXI]}","Node NVF is connected to nodes UZU, XBX.
Node UZU is connected to nodes IGZ, QWE.
Node XBX is connected to node UZU.
Node IGZ is connected to node SXI.
Node QWE is connected to node ECP.
Node NUH is connected to nodes IGZ, UZU, ECP, XBX.
Node SXI is connected to node QWE.
Node TYF is connected to nodes SXI, XBX, NUH.
Node OHA is connected to nodes NVF, IGZ, SXI.","[NUH, XBX, OHA, IGZ, ECP, SXI, TYF, NVF, QWE, UZU]",10,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TYF, OHA, NUH, NVF, XBX, UZU, IGZ, SXI, QWE, ECP]","Let's solve it step by step.
Nodes with 0 in-degree: [TYF, OHA].
Visit node TYF and remove it from the graph.
Nodes with 0 in-degree: [OHA, NUH].
Visit node OHA and remove it from the graph.
Nodes with 0 in-degree: [NUH, NVF].
Visit node NUH and remove it from the graph.
Nodes with 0 in-degree: [NVF].
Visit node NVF and remove it from the graph.
Nodes with 0 in-degree: [XBX].
Visit node XBX and remove it from the graph.
Nodes with 0 in-degree: [UZU].
Visit node UZU and remove it from the graph.
Nodes with 0 in-degree: [IGZ].
Visit node IGZ and remove it from the graph.
Nodes with 0 in-degree: [SXI].
Visit node SXI and remove it from the graph.
Nodes with 0 in-degree: [QWE].
Visit node QWE and remove it from the graph.
Nodes with 0 in-degree: [ECP].
Visit node ECP and remove it from the graph.
So the result of topological sorting is ","('[[TYF, OHA, NUH, NVF, XBX, UZU, ECP, QWE, SXI, IGZ], [TYF, OHA, NUH, NVF, XBX, UZU, IGZ, SXI, QWE, ECP], [TYF, OHA, NUH, SXI, QWE, ECP, NVF, XBX, UZU, IGZ], [TYF, QWE, UZU, IGZ, NUH, ECP, XBX, NVF, SXI, OHA]]',)",1,24
topological_sort,"[(UZN, JZY), (UZN, ZEG), (JZY, FRB), (JZY, XDE), (JZY, SGE), (FRB, SFQ), (XDE, FRB), (XDE, ZEG), (SGE, FRB), (SGE, SFQ), (SGE, ZEG), (SGE, XDE), (QVF, SGE), (QVF, XDE), (SFQ, ZEG)]","{UZN: [JZY, ZEG],
JZY: [FRB, XDE, SGE],
ZEG: [],
FRB: [SFQ],
XDE: [FRB, ZEG],
SGE: [FRB, SFQ, ZEG, XDE],
QVF: [SGE, XDE],
SFQ: [ZEG]}","Node UZN is connected to nodes JZY, ZEG.
Node JZY is connected to nodes FRB, XDE, SGE.
Node FRB is connected to node SFQ.
Node XDE is connected to nodes FRB, ZEG.
Node SGE is connected to nodes FRB, SFQ, ZEG, XDE.
Node QVF is connected to nodes SGE, XDE.
Node SFQ is connected to node ZEG.","[QVF, SGE, FRB, JZY, XDE, SFQ, ZEG, UZN]",8,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UZN, QVF, JZY, SGE, XDE, FRB, SFQ, ZEG]","Let's solve it step by step.
Nodes with 0 in-degree: [UZN, QVF].
Visit node UZN and remove it from the graph.
Nodes with 0 in-degree: [QVF, JZY].
Visit node QVF and remove it from the graph.
Nodes with 0 in-degree: [JZY].
Visit node JZY and remove it from the graph.
Nodes with 0 in-degree: [SGE].
Visit node SGE and remove it from the graph.
Nodes with 0 in-degree: [XDE].
Visit node XDE and remove it from the graph.
Nodes with 0 in-degree: [FRB].
Visit node FRB and remove it from the graph.
Nodes with 0 in-degree: [SFQ].
Visit node SFQ and remove it from the graph.
Nodes with 0 in-degree: [ZEG].
Visit node ZEG and remove it from the graph.
So the result of topological sorting is ","('[[UZN, QVF, JZY, SGE, XDE, FRB, SFQ, ZEG], [UZN, QVF, JZY, SGE, ZEG, FRB, XDE, SFQ], [UZN, QVF, SFQ, ZEG, JZY, SGE, XDE, FRB], [UZN, SGE, ZEG, FRB, QVF, JZY, SFQ, XDE]]',)",0,25
topological_sort,"[(EWU, WZX), (EWU, TVI), (TVI, WZX), (JPJ, EWU), (JPJ, SIE), (JPJ, WZX), (JPJ, TVI), (SIE, WZX), (SIE, TVI), (YSX, JPJ), (YSX, SIE), (YSX, WZX), (YSX, TVI), (EYG, JPJ), (EYG, TOH), (EYG, TVI), (TOH, SIE), (TOH, WZX), (TOH, EWU)]","{EWU: [WZX, TVI],
WZX: [],
TVI: [WZX],
JPJ: [EWU, SIE, WZX, TVI],
SIE: [WZX, TVI],
YSX: [JPJ, SIE, WZX, TVI],
EYG: [JPJ, TOH, TVI],
TOH: [SIE, WZX, EWU]}","Node EWU is connected to nodes WZX, TVI.
Node TVI is connected to node WZX.
Node JPJ is connected to nodes EWU, SIE, WZX, TVI.
Node SIE is connected to nodes WZX, TVI.
Node YSX is connected to nodes JPJ, SIE, WZX, TVI.
Node EYG is connected to nodes JPJ, TOH, TVI.
Node TOH is connected to nodes SIE, WZX, EWU.","[SIE, TOH, JPJ, EWU, TVI, WZX, EYG, YSX]",8,19,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YSX, EYG, JPJ, TOH, SIE, EWU, TVI, WZX]","Let's solve it step by step.
Nodes with 0 in-degree: [YSX, EYG].
Visit node YSX and remove it from the graph.
Nodes with 0 in-degree: [EYG].
Visit node EYG and remove it from the graph.
Nodes with 0 in-degree: [JPJ, TOH].
Visit node JPJ and remove it from the graph.
Nodes with 0 in-degree: [TOH].
Visit node TOH and remove it from the graph.
Nodes with 0 in-degree: [SIE, EWU].
Visit node SIE and remove it from the graph.
Nodes with 0 in-degree: [EWU].
Visit node EWU and remove it from the graph.
Nodes with 0 in-degree: [TVI].
Visit node TVI and remove it from the graph.
Nodes with 0 in-degree: [WZX].
Visit node WZX and remove it from the graph.
So the result of topological sorting is ","('[[YSX, EYG, JPJ, TOH, SIE, EWU, TVI, WZX], [YSX, EYG, JPJ, TOH, SIE, EWU, TVI, WZX], [YSX, EWU, WZX, TOH, TVI, SIE, EYG, JPJ], [YSX, EYG, TVI, WZX, JPJ, TOH, SIE, EWU]]',)",1,26
topological_sort,"[(DOA, OGT), (DOA, YYL), (OGT, YYL), (OGT, YOI), (YYL, YOI), (YYL, YME), (TYG, TMK), (TYG, ZMX), (TYG, OGT), (TYG, YPY), (TMK, YPY), (TMK, ZCM), (TMK, YOI), (ZMX, YPY), (ZMX, YME), (ZMX, YOI), (ZMX, DOA), (ZMX, TMK), (YPY, ZCM), (YPY, OGT), (YPY, YME), (YPY, YYL), (ZCM, DOA), (BXP, YOI), (BXP, DOA), (BXP, TYG), (BXP, YPY), (BXP, ZMX), (BXP, ZCM), (GSO, TMK), (GSO, BXP), (GSO, DWZ), (GSO, YPY), (GSO, TYG), (GSO, ZMX), (DWZ, EKO), (DWZ, ZCM), (DWZ, YOI), (DWZ, YYL), (DWZ, ZMX), (DWZ, YPY), (EKO, DOA), (EKO, BXP), (EKO, YOI), (EKO, ZCM), (EKO, YPY)]","{DOA: [OGT, YYL],
OGT: [YYL, YOI],
YYL: [YOI, YME],
YOI: [],
TYG: [TMK, ZMX, OGT, YPY],
TMK: [YPY, ZCM, YOI],
ZMX: [YPY, YME, YOI, DOA, TMK],
YPY: [ZCM, OGT, YME, YYL],
ZCM: [DOA],
YME: [],
BXP: [YOI, DOA, TYG, YPY, ZMX, ZCM],
GSO: [TMK, BXP, DWZ, YPY, TYG, ZMX],
DWZ: [EKO, ZCM, YOI, YYL, ZMX, YPY],
EKO: [DOA, BXP, YOI, ZCM, YPY]}","Node DOA is connected to nodes OGT, YYL.
Node OGT is connected to nodes YYL, YOI.
Node YYL is connected to nodes YOI, YME.
Node TYG is connected to nodes TMK, ZMX, OGT, YPY.
Node TMK is connected to nodes YPY, ZCM, YOI.
Node ZMX is connected to nodes YPY, YME, YOI, DOA, TMK.
Node YPY is connected to nodes ZCM, OGT, YME, YYL.
Node ZCM is connected to node DOA.
Node BXP is connected to nodes YOI, DOA, TYG, YPY, ZMX, ZCM.
Node GSO is connected to nodes TMK, BXP, DWZ, YPY, TYG, ZMX.
Node DWZ is connected to nodes EKO, ZCM, YOI, YYL, ZMX, YPY.
Node EKO is connected to nodes DOA, BXP, YOI, ZCM, YPY.","[YYL, TYG, DWZ, YOI, EKO, TMK, YPY, BXP, OGT, GSO, ZMX, DOA, ZCM, YME]",14,46,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GSO, DWZ, EKO, BXP, TYG, ZMX, TMK, YPY, ZCM, DOA, OGT, YYL, YOI, YME]","Let's solve it step by step.
Nodes with 0 in-degree: [GSO].
Visit node GSO and remove it from the graph.
Nodes with 0 in-degree: [DWZ].
Visit node DWZ and remove it from the graph.
Nodes with 0 in-degree: [EKO].
Visit node EKO and remove it from the graph.
Nodes with 0 in-degree: [BXP].
Visit node BXP and remove it from the graph.
Nodes with 0 in-degree: [TYG].
Visit node TYG and remove it from the graph.
Nodes with 0 in-degree: [ZMX].
Visit node ZMX and remove it from the graph.
Nodes with 0 in-degree: [TMK].
Visit node TMK and remove it from the graph.
Nodes with 0 in-degree: [YPY].
Visit node YPY and remove it from the graph.
Nodes with 0 in-degree: [ZCM].
Visit node ZCM and remove it from the graph.
Nodes with 0 in-degree: [DOA].
Visit node DOA and remove it from the graph.
Nodes with 0 in-degree: [OGT].
Visit node OGT and remove it from the graph.
Nodes with 0 in-degree: [YYL].
Visit node YYL and remove it from the graph.
Nodes with 0 in-degree: [YOI, YME].
Visit node YOI and remove it from the graph.
Nodes with 0 in-degree: [YME].
Visit node YME and remove it from the graph.
So the result of topological sorting is ","('[[GSO, DWZ, EKO, BXP, TYG, ZMX, TMK, YPY, ZCM, DOA, OGT, YYL, YOI, YME], [GSO, DWZ, EKO, BXP, OGT, YYL, YOI, YME, TYG, ZMX, TMK, YPY, ZCM, DOA], [GSO, DWZ, EKO, BXP, TYG, ZMX, TMK, YPY, YYL, YOI, OGT, ZCM, YME, DOA], [GSO, TYG, EKO, ZCM, DOA, YYL, TMK, BXP, YME, YPY, DWZ, YOI, ZMX, OGT]]',)",0,27
topological_sort,"[(JHH, YZG), (JHH, KOT), (JHH, LOC), (YZG, LOC), (KOT, IHS), (KOT, JWW), (LOC, IHS), (LOC, KOT), (XUO, LOC), (XUO, JWW), (XUO, YZG), (IHS, JWW), (PDR, XUO), (PDR, KOT), (PDR, LOC), (PDR, JHH)]","{JHH: [YZG, KOT, LOC],
YZG: [LOC],
KOT: [IHS, JWW],
LOC: [IHS, KOT],
XUO: [LOC, JWW, YZG],
JWW: [],
IHS: [JWW],
PDR: [XUO, KOT, LOC, JHH]}","Node JHH is connected to nodes YZG, KOT, LOC.
Node YZG is connected to node LOC.
Node KOT is connected to nodes IHS, JWW.
Node LOC is connected to nodes IHS, KOT.
Node XUO is connected to nodes LOC, JWW, YZG.
Node IHS is connected to node JWW.
Node PDR is connected to nodes XUO, KOT, LOC, JHH.","[XUO, JWW, LOC, KOT, YZG, JHH, IHS, PDR]",8,16,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PDR, XUO, JHH, YZG, LOC, KOT, IHS, JWW]","Let's solve it step by step.
Nodes with 0 in-degree: [PDR].
Visit node PDR and remove it from the graph.
Nodes with 0 in-degree: [XUO, JHH].
Visit node XUO and remove it from the graph.
Nodes with 0 in-degree: [JHH].
Visit node JHH and remove it from the graph.
Nodes with 0 in-degree: [YZG].
Visit node YZG and remove it from the graph.
Nodes with 0 in-degree: [LOC].
Visit node LOC and remove it from the graph.
Nodes with 0 in-degree: [KOT].
Visit node KOT and remove it from the graph.
Nodes with 0 in-degree: [IHS].
Visit node IHS and remove it from the graph.
Nodes with 0 in-degree: [JWW].
Visit node JWW and remove it from the graph.
So the result of topological sorting is ","('[[PDR, XUO, JHH, YZG, LOC, KOT, IHS, JWW], [PDR, XUO, IHS, JWW, JHH, YZG, LOC, KOT], [PDR, XUO, JWW, YZG, JHH, IHS, LOC, KOT], [PDR, XUO, JHH, YZG, LOC, IHS, JWW, KOT]]',)",0,28
topological_sort,"[(FFH, KFO), (FFH, WOG), (FFH, CBC), (KFO, LDT), (WOG, YWX), (WOG, AHP), (WOG, WAB), (CBC, UEB), (CBC, LDT), (CBC, WAB), (CBC, KFO), (UEB, AOL), (WAB, UEB), (AOL, LDT), (AOL, KFO), (YWX, KFO), (YWX, UEB), (AHP, CBC), (AHP, AKF), (AHP, YWX), (AKF, KFO), (AKF, CBC), (AKF, AOL), (QTH, AOL), (QTH, KFO), (QTH, UEB), (QTH, CBC), (QTH, KEB), (QTH, FFH), (KEB, YWX), (KEB, UEB), (KEB, AHP), (VZK, WOG), (VZK, AHP)]","{FFH: [KFO, WOG, CBC],
KFO: [LDT],
WOG: [YWX, AHP, WAB],
CBC: [UEB, LDT, WAB, KFO],
LDT: [],
UEB: [AOL],
WAB: [UEB],
AOL: [LDT, KFO],
YWX: [KFO, UEB],
AHP: [CBC, AKF, YWX],
AKF: [KFO, CBC, AOL],
QTH: [AOL, KFO, UEB, CBC, KEB, FFH],
KEB: [YWX, UEB, AHP],
VZK: [WOG, AHP]}","Node FFH is connected to nodes KFO, WOG, CBC.
Node KFO is connected to node LDT.
Node WOG is connected to nodes YWX, AHP, WAB.
Node CBC is connected to nodes UEB, LDT, WAB, KFO.
Node UEB is connected to node AOL.
Node WAB is connected to node UEB.
Node AOL is connected to nodes LDT, KFO.
Node YWX is connected to nodes KFO, UEB.
Node AHP is connected to nodes CBC, AKF, YWX.
Node AKF is connected to nodes KFO, CBC, AOL.
Node QTH is connected to nodes AOL, KFO, UEB, CBC, KEB, FFH.
Node KEB is connected to nodes YWX, UEB, AHP.
Node VZK is connected to nodes WOG, AHP.","[YWX, FFH, AKF, AOL, KFO, WOG, QTH, CBC, VZK, WAB, UEB, KEB, AHP, LDT]",14,34,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QTH, VZK, KEB, FFH, WOG, AHP, AKF, YWX, CBC, WAB, UEB, AOL, KFO, LDT]","Let's solve it step by step.
Nodes with 0 in-degree: [QTH, VZK].
Visit node QTH and remove it from the graph.
Nodes with 0 in-degree: [VZK, KEB, FFH].
Visit node VZK and remove it from the graph.
Nodes with 0 in-degree: [KEB, FFH].
Visit node KEB and remove it from the graph.
Nodes with 0 in-degree: [FFH].
Visit node FFH and remove it from the graph.
Nodes with 0 in-degree: [WOG].
Visit node WOG and remove it from the graph.
Nodes with 0 in-degree: [AHP].
Visit node AHP and remove it from the graph.
Nodes with 0 in-degree: [AKF, YWX].
Visit node AKF and remove it from the graph.
Nodes with 0 in-degree: [YWX, CBC].
Visit node YWX and remove it from the graph.
Nodes with 0 in-degree: [CBC].
Visit node CBC and remove it from the graph.
Nodes with 0 in-degree: [WAB].
Visit node WAB and remove it from the graph.
Nodes with 0 in-degree: [UEB].
Visit node UEB and remove it from the graph.
Nodes with 0 in-degree: [AOL].
Visit node AOL and remove it from the graph.
Nodes with 0 in-degree: [KFO].
Visit node KFO and remove it from the graph.
Nodes with 0 in-degree: [LDT].
Visit node LDT and remove it from the graph.
So the result of topological sorting is ","('[[QTH, VZK, KEB, FFH, WOG, AHP, AKF, YWX, CBC, WAB, UEB, AOL, KFO, LDT], [QTH, VZK, KEB, FFH, UEB, AOL, KFO, LDT, WOG, AHP, AKF, YWX, CBC, WAB], [QTH, VZK, KEB, FFH, WOG, AHP, AKF, KFO, AOL, WAB, CBC, UEB, LDT, YWX], [QTH, KFO, AKF, AHP, VZK, AOL, WOG, KEB, CBC, YWX, LDT, UEB, FFH, WAB]]',)",0,29
topological_sort,"[(XGF, ISO), (XGF, GFE), (XGF, IIW), (XGF, ZYH), (ISO, IIW), (ISO, ZYH), (ZYH, IIW), (YOU, PJK), (YOU, ZYH), (YOU, GFE), (PJK, IIW), (PJK, GFE), (PJK, TMN), (TMN, XGF), (BUX, PJK), (BUX, YOU), (BUX, IIW), (BUX, GFE), (UYT, ZYH), (UYT, GFE), (UYT, XGF), (UYT, ISO), (UYT, KBZ), (KBZ, GFE), (KBZ, TMN), (KBZ, VTS), (KBZ, WOS), (VTS, ISO), (VTS, IIW), (VTS, WOS), (VTS, XGF), (WOS, YOU), (WOS, ZYH), (WOS, BUX), (WOS, ISO)]","{XGF: [ISO, GFE, IIW, ZYH],
ISO: [IIW, ZYH],
GFE: [],
IIW: [],
ZYH: [IIW],
YOU: [PJK, ZYH, GFE],
PJK: [IIW, GFE, TMN],
TMN: [XGF],
BUX: [PJK, YOU, IIW, GFE],
UYT: [ZYH, GFE, XGF, ISO, KBZ],
KBZ: [GFE, TMN, VTS, WOS],
VTS: [ISO, IIW, WOS, XGF],
WOS: [YOU, ZYH, BUX, ISO]}","Node XGF is connected to nodes ISO, GFE, IIW, ZYH.
Node ISO is connected to nodes IIW, ZYH.
Node ZYH is connected to node IIW.
Node YOU is connected to nodes PJK, ZYH, GFE.
Node PJK is connected to nodes IIW, GFE, TMN.
Node TMN is connected to node XGF.
Node BUX is connected to nodes PJK, YOU, IIW, GFE.
Node UYT is connected to nodes ZYH, GFE, XGF, ISO, KBZ.
Node KBZ is connected to nodes GFE, TMN, VTS, WOS.
Node VTS is connected to nodes ISO, IIW, WOS, XGF.
Node WOS is connected to nodes YOU, ZYH, BUX, ISO.","[TMN, YOU, BUX, XGF, KBZ, VTS, WOS, ZYH, ISO, IIW, UYT, GFE, PJK]",13,35,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UYT, KBZ, VTS, WOS, BUX, YOU, PJK, TMN, XGF, ISO, GFE, ZYH, IIW]","Let's solve it step by step.
Nodes with 0 in-degree: [UYT].
Visit node UYT and remove it from the graph.
Nodes with 0 in-degree: [KBZ].
Visit node KBZ and remove it from the graph.
Nodes with 0 in-degree: [VTS].
Visit node VTS and remove it from the graph.
Nodes with 0 in-degree: [WOS].
Visit node WOS and remove it from the graph.
Nodes with 0 in-degree: [BUX].
Visit node BUX and remove it from the graph.
Nodes with 0 in-degree: [YOU].
Visit node YOU and remove it from the graph.
Nodes with 0 in-degree: [PJK].
Visit node PJK and remove it from the graph.
Nodes with 0 in-degree: [TMN].
Visit node TMN and remove it from the graph.
Nodes with 0 in-degree: [XGF].
Visit node XGF and remove it from the graph.
Nodes with 0 in-degree: [ISO, GFE].
Visit node ISO and remove it from the graph.
Nodes with 0 in-degree: [GFE, ZYH].
Visit node GFE and remove it from the graph.
Nodes with 0 in-degree: [ZYH].
Visit node ZYH and remove it from the graph.
Nodes with 0 in-degree: [IIW].
Visit node IIW and remove it from the graph.
So the result of topological sorting is ","('[[UYT, KBZ, VTS, WOS, BUX, YOU, ZYH, ISO, GFE, PJK, IIW, TMN, XGF], [UYT, KBZ, VTS, WOS, BUX, YOU, PJK, TMN, XGF, ISO, GFE, ZYH, IIW], [UYT, KBZ, BUX, XGF, PJK, YOU, ZYH, GFE, WOS, IIW, VTS, TMN, ISO], [UYT, KBZ, VTS, WOS, ISO, GFE, ZYH, IIW, BUX, YOU, PJK, TMN, XGF]]',)",1,30
topological_sort,"[(SFV, XUV), (SFV, HFU), (SFV, LED), (SFV, LYT), (HFU, XUV), (LED, XUV), (LED, SXE), (LYT, LED), (LYT, CTI), (LYT, APG), (LYT, ZMW), (KZL, CTI), (KZL, SXE), (KZL, ZMW), (KZL, HFU), (KZL, APG), (CTI, XUV), (CTI, APG), (CTI, HFU), (SXE, HFU), (SXE, FXX), (ZMW, FXX), (ZMW, LED), (ZMW, CTI), (APG, FXX), (APG, HFU), (APG, YGA), (FXX, XUV), (YGA, HFU), (YGA, LED), (YGA, SXE), (WVL, HFU), (WVL, APG), (WVL, SFV), (WVL, LED), (WVL, YGA), (WVL, SXE), (WVL, XUV)]","{SFV: [XUV, HFU, LED, LYT],
XUV: [],
HFU: [XUV],
LED: [XUV, SXE],
LYT: [LED, CTI, APG, ZMW],
KZL: [CTI, SXE, ZMW, HFU, APG],
CTI: [XUV, APG, HFU],
SXE: [HFU, FXX],
ZMW: [FXX, LED, CTI],
APG: [FXX, HFU, YGA],
FXX: [XUV],
YGA: [HFU, LED, SXE],
WVL: [HFU, APG, SFV, LED, YGA, SXE, XUV]}","Node SFV is connected to nodes XUV, HFU, LED, LYT.
Node HFU is connected to node XUV.
Node LED is connected to nodes XUV, SXE.
Node LYT is connected to nodes LED, CTI, APG, ZMW.
Node KZL is connected to nodes CTI, SXE, ZMW, HFU, APG.
Node CTI is connected to nodes XUV, APG, HFU.
Node SXE is connected to nodes HFU, FXX.
Node ZMW is connected to nodes FXX, LED, CTI.
Node APG is connected to nodes FXX, HFU, YGA.
Node FXX is connected to node XUV.
Node YGA is connected to nodes HFU, LED, SXE.
Node WVL is connected to nodes HFU, APG, SFV, LED, YGA, SXE, XUV.","[XUV, HFU, CTI, APG, WVL, SXE, ZMW, YGA, KZL, FXX, LED, LYT, SFV]",13,38,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KZL, WVL, SFV, LYT, ZMW, CTI, APG, YGA, LED, SXE, HFU, FXX, XUV]","Let's solve it step by step.
Nodes with 0 in-degree: [KZL, WVL].
Visit node KZL and remove it from the graph.
Nodes with 0 in-degree: [WVL].
Visit node WVL and remove it from the graph.
Nodes with 0 in-degree: [SFV].
Visit node SFV and remove it from the graph.
Nodes with 0 in-degree: [LYT].
Visit node LYT and remove it from the graph.
Nodes with 0 in-degree: [ZMW].
Visit node ZMW and remove it from the graph.
Nodes with 0 in-degree: [CTI].
Visit node CTI and remove it from the graph.
Nodes with 0 in-degree: [APG].
Visit node APG and remove it from the graph.
Nodes with 0 in-degree: [YGA].
Visit node YGA and remove it from the graph.
Nodes with 0 in-degree: [LED].
Visit node LED and remove it from the graph.
Nodes with 0 in-degree: [SXE].
Visit node SXE and remove it from the graph.
Nodes with 0 in-degree: [HFU, FXX].
Visit node HFU and remove it from the graph.
Nodes with 0 in-degree: [FXX].
Visit node FXX and remove it from the graph.
Nodes with 0 in-degree: [XUV].
Visit node XUV and remove it from the graph.
So the result of topological sorting is ","('[[KZL, WVL, SFV, LYT, ZMW, CTI, LED, SXE, FXX, APG, XUV, HFU, YGA], [KZL, WVL, SFV, LYT, SXE, HFU, FXX, XUV, ZMW, CTI, APG, YGA, LED], [KZL, WVL, SFV, LYT, ZMW, CTI, APG, YGA, LED, SXE, HFU, FXX, XUV], [KZL, HFU, YGA, XUV, SFV, LYT, CTI, WVL, LED, FXX, APG, SXE, ZMW]]',)",2,31
topological_sort,"[(XXS, LIQ), (XXS, BJC), (XXS, MVZ), (XXS, FWS), (BJC, DYK), (BJC, YNF), (BJC, RGE), (BJC, PET), (MVZ, GSF), (MVZ, JWD), (MVZ, IAN), (FWS, JWD), (FWS, MVZ), (JWD, DYK), (IAN, JWD), (YNF, MVZ), (RGE, MVZ), (RGE, LIQ), (RGE, GSF), (MDX, MCB), (MDX, XXS), (MCB, BJC), (MCB, LIQ), (MCB, YNF), (TWZ, IAN), (TWZ, XXS)]","{XXS: [LIQ, BJC, MVZ, FWS],
LIQ: [],
BJC: [DYK, YNF, RGE, PET],
MVZ: [GSF, JWD, IAN],
FWS: [JWD, MVZ],
GSF: [],
JWD: [DYK],
IAN: [JWD],
DYK: [],
YNF: [MVZ],
RGE: [MVZ, LIQ, GSF],
PET: [],
MDX: [MCB, XXS],
MCB: [BJC, LIQ, YNF],
TWZ: [IAN, XXS]}","Node XXS is connected to nodes LIQ, BJC, MVZ, FWS.
Node BJC is connected to nodes DYK, YNF, RGE, PET.
Node MVZ is connected to nodes GSF, JWD, IAN.
Node FWS is connected to nodes JWD, MVZ.
Node JWD is connected to node DYK.
Node IAN is connected to node JWD.
Node YNF is connected to node MVZ.
Node RGE is connected to nodes MVZ, LIQ, GSF.
Node MDX is connected to nodes MCB, XXS.
Node MCB is connected to nodes BJC, LIQ, YNF.
Node TWZ is connected to nodes IAN, XXS.","[BJC, JWD, LIQ, GSF, RGE, XXS, MVZ, MDX, MCB, DYK, PET, FWS, IAN, YNF, TWZ]",15,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MDX, TWZ, MCB, XXS, BJC, FWS, YNF, RGE, PET, MVZ, LIQ, GSF, IAN, JWD, DYK]","Let's solve it step by step.
Nodes with 0 in-degree: [MDX, TWZ].
Visit node MDX and remove it from the graph.
Nodes with 0 in-degree: [TWZ, MCB].
Visit node TWZ and remove it from the graph.
Nodes with 0 in-degree: [MCB, XXS].
Visit node MCB and remove it from the graph.
Nodes with 0 in-degree: [XXS].
Visit node XXS and remove it from the graph.
Nodes with 0 in-degree: [BJC, FWS].
Visit node BJC and remove it from the graph.
Nodes with 0 in-degree: [FWS, YNF, RGE, PET].
Visit node FWS and remove it from the graph.
Nodes with 0 in-degree: [YNF, RGE, PET].
Visit node YNF and remove it from the graph.
Nodes with 0 in-degree: [RGE, PET].
Visit node RGE and remove it from the graph.
Nodes with 0 in-degree: [PET, MVZ, LIQ].
Visit node PET and remove it from the graph.
Nodes with 0 in-degree: [MVZ, LIQ].
Visit node MVZ and remove it from the graph.
Nodes with 0 in-degree: [LIQ, GSF, IAN].
Visit node LIQ and remove it from the graph.
Nodes with 0 in-degree: [GSF, IAN].
Visit node GSF and remove it from the graph.
Nodes with 0 in-degree: [IAN].
Visit node IAN and remove it from the graph.
Nodes with 0 in-degree: [JWD].
Visit node JWD and remove it from the graph.
Nodes with 0 in-degree: [DYK].
Visit node DYK and remove it from the graph.
So the result of topological sorting is ","('[[MDX, TWZ, MCB, XXS, BJC, LIQ, GSF, IAN, JWD, DYK, FWS, YNF, RGE, PET, MVZ], [MDX, TWZ, JWD, GSF, IAN, YNF, DYK, RGE, XXS, FWS, LIQ, PET, MVZ, BJC, MCB], [MDX, TWZ, MCB, XXS, BJC, FWS, YNF, PET, MVZ, GSF, JWD, LIQ, DYK, RGE, IAN], [MDX, TWZ, MCB, XXS, BJC, FWS, YNF, RGE, PET, MVZ, LIQ, GSF, IAN, JWD, DYK]]',)",3,32
topological_sort,"[(VQK, PDM), (VQK, EPY), (PDM, JNG), (PDM, EPY), (EPY, JNG), (JNG, MCZ), (HWE, MCZ), (HWE, EPY), (HWE, HSU), (HSU, VQK), (ZME, EPY)]","{VQK: [PDM, EPY],
PDM: [JNG, EPY],
EPY: [JNG],
JNG: [MCZ],
HWE: [MCZ, EPY, HSU],
MCZ: [],
HSU: [VQK],
ZME: [EPY]}","Node VQK is connected to nodes PDM, EPY.
Node PDM is connected to nodes JNG, EPY.
Node EPY is connected to node JNG.
Node JNG is connected to node MCZ.
Node HWE is connected to nodes MCZ, EPY, HSU.
Node HSU is connected to node VQK.
Node ZME is connected to node EPY.","[ZME, HWE, PDM, MCZ, VQK, JNG, HSU, EPY]",8,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HWE, ZME, HSU, VQK, PDM, EPY, JNG, MCZ]","Let's solve it step by step.
Nodes with 0 in-degree: [HWE, ZME].
Visit node HWE and remove it from the graph.
Nodes with 0 in-degree: [ZME, HSU].
Visit node ZME and remove it from the graph.
Nodes with 0 in-degree: [HSU].
Visit node HSU and remove it from the graph.
Nodes with 0 in-degree: [VQK].
Visit node VQK and remove it from the graph.
Nodes with 0 in-degree: [PDM].
Visit node PDM and remove it from the graph.
Nodes with 0 in-degree: [EPY].
Visit node EPY and remove it from the graph.
Nodes with 0 in-degree: [JNG].
Visit node JNG and remove it from the graph.
Nodes with 0 in-degree: [MCZ].
Visit node MCZ and remove it from the graph.
So the result of topological sorting is ","('[[HWE, ZME, JNG, MCZ, HSU, VQK, PDM, EPY], [HWE, ZME, HSU, VQK, EPY, MCZ, PDM, JNG], [HWE, ZME, HSU, VQK, PDM, EPY, JNG, MCZ], [HWE, HSU, ZME, PDM, JNG, MCZ, EPY, VQK]]',)",2,33
topological_sort,"[(KJS, BKS), (YLD, BKS), (ZZU, JCM), (ZZU, KJS), (JCM, RQC), (RQC, YLD), (RQC, KJS), (GFY, CGP), (GFY, ZZU), (CGP, YLD), (CGP, ZZU), (NIO, YLD), (NIO, CGP)]","{KJS: [BKS],
BKS: [],
YLD: [BKS],
ZZU: [JCM, KJS],
JCM: [RQC],
RQC: [YLD, KJS],
GFY: [CGP, ZZU],
CGP: [YLD, ZZU],
NIO: [YLD, CGP]}","Node KJS is connected to node BKS.
Node YLD is connected to node BKS.
Node ZZU is connected to nodes JCM, KJS.
Node JCM is connected to node RQC.
Node RQC is connected to nodes YLD, KJS.
Node GFY is connected to nodes CGP, ZZU.
Node CGP is connected to nodes YLD, ZZU.
Node NIO is connected to nodes YLD, CGP.","[KJS, NIO, ZZU, RQC, YLD, GFY, JCM, BKS, CGP]",9,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GFY, NIO, CGP, ZZU, JCM, RQC, YLD, KJS, BKS]","Let's solve it step by step.
Nodes with 0 in-degree: [GFY, NIO].
Visit node GFY and remove it from the graph.
Nodes with 0 in-degree: [NIO].
Visit node NIO and remove it from the graph.
Nodes with 0 in-degree: [CGP].
Visit node CGP and remove it from the graph.
Nodes with 0 in-degree: [ZZU].
Visit node ZZU and remove it from the graph.
Nodes with 0 in-degree: [JCM].
Visit node JCM and remove it from the graph.
Nodes with 0 in-degree: [RQC].
Visit node RQC and remove it from the graph.
Nodes with 0 in-degree: [YLD, KJS].
Visit node YLD and remove it from the graph.
Nodes with 0 in-degree: [KJS].
Visit node KJS and remove it from the graph.
Nodes with 0 in-degree: [BKS].
Visit node BKS and remove it from the graph.
So the result of topological sorting is ","('[[GFY, NIO, CGP, ZZU, JCM, RQC, YLD, KJS, BKS], [GFY, NIO, CGP, ZZU, RQC, KJS, BKS, YLD, JCM], [GFY, ZZU, NIO, CGP, RQC, YLD, KJS, BKS, JCM], [GFY, NIO, CGP, YLD, KJS, BKS, ZZU, JCM, RQC]]',)",0,34
topological_sort,"[(WZH, TVU), (GHV, TVU), (GHV, WFK), (GHV, GBO), (GHV, WCR), (WFK, WCR), (WFK, TVU), (GBO, YQI), (GBO, RIM), (WCR, WZH), (IFQ, XFA), (IFQ, GHV), (IFQ, YQI), (IFQ, QZX), (IFQ, RIM), (IFQ, UWV), (IFQ, WZH), (IFQ, WCR), (XFA, WCR), (YQI, WZH), (YQI, WCR), (YQI, RIM), (QZX, YQI), (UWV, WCR), (UWV, YQI), (UWV, XFA), (UWV, TVU), (UWV, GBO), (UWV, RIM), (UWV, QZX), (TSC, WZH), (TSC, TVU), (TSC, WCR), (TSC, WFK), (TSC, UWV), (TSC, GBO)]","{WZH: [TVU],
TVU: [],
GHV: [TVU, WFK, GBO, WCR],
WFK: [WCR, TVU],
GBO: [YQI, RIM],
WCR: [WZH],
IFQ: [XFA, GHV, YQI, QZX, RIM, UWV, WZH, WCR],
XFA: [WCR],
YQI: [WZH, WCR, RIM],
QZX: [YQI],
RIM: [],
UWV: [WCR, YQI, XFA, TVU, GBO, RIM, QZX],
TSC: [WZH, TVU, WCR, WFK, UWV, GBO]}","Node WZH is connected to node TVU.
Node GHV is connected to nodes TVU, WFK, GBO, WCR.
Node WFK is connected to nodes WCR, TVU.
Node GBO is connected to nodes YQI, RIM.
Node WCR is connected to node WZH.
Node IFQ is connected to nodes XFA, GHV, YQI, QZX, RIM, UWV, WZH, WCR.
Node XFA is connected to node WCR.
Node YQI is connected to nodes WZH, WCR, RIM.
Node QZX is connected to node YQI.
Node UWV is connected to nodes WCR, YQI, XFA, TVU, GBO, RIM, QZX.
Node TSC is connected to nodes WZH, TVU, WCR, WFK, UWV, GBO.","[QZX, WZH, RIM, GHV, WCR, UWV, GBO, TSC, XFA, IFQ, YQI, WFK, TVU]",13,36,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IFQ, TSC, GHV, UWV, WFK, XFA, GBO, QZX, YQI, WCR, RIM, WZH, TVU]","Let's solve it step by step.
Nodes with 0 in-degree: [IFQ, TSC].
Visit node IFQ and remove it from the graph.
Nodes with 0 in-degree: [TSC, GHV].
Visit node TSC and remove it from the graph.
Nodes with 0 in-degree: [GHV, UWV].
Visit node GHV and remove it from the graph.
Nodes with 0 in-degree: [UWV, WFK].
Visit node UWV and remove it from the graph.
Nodes with 0 in-degree: [WFK, XFA, GBO, QZX].
Visit node WFK and remove it from the graph.
Nodes with 0 in-degree: [XFA, GBO, QZX].
Visit node XFA and remove it from the graph.
Nodes with 0 in-degree: [GBO, QZX].
Visit node GBO and remove it from the graph.
Nodes with 0 in-degree: [QZX].
Visit node QZX and remove it from the graph.
Nodes with 0 in-degree: [YQI].
Visit node YQI and remove it from the graph.
Nodes with 0 in-degree: [WCR, RIM].
Visit node WCR and remove it from the graph.
Nodes with 0 in-degree: [RIM, WZH].
Visit node RIM and remove it from the graph.
Nodes with 0 in-degree: [WZH].
Visit node WZH and remove it from the graph.
Nodes with 0 in-degree: [TVU].
Visit node TVU and remove it from the graph.
So the result of topological sorting is ","('[[IFQ, TSC, GHV, UWV, WFK, XFA, RIM, YQI, WZH, WCR, QZX, TVU, GBO], [IFQ, TSC, GHV, UWV, WFK, XFA, GBO, QZX, YQI, WCR, RIM, WZH, TVU], [IFQ, TSC, GHV, UWV, WCR, RIM, WZH, TVU, WFK, XFA, GBO, QZX, YQI], [IFQ, YQI, WFK, WZH, QZX, WCR, TSC, UWV, RIM, GHV, TVU, GBO, XFA]]',)",1,35
topological_sort,"[(MEG, FDH), (MEG, SDI), (FDH, JCF), (FDH, SDI), (SDI, TWP), (SDI, FBM), (UOV, FBM), (UOV, MOK), (UOV, TWP), (UOV, FDH), (MOK, FBV), (MOK, FDH), (MOK, JCF), (FBV, FDH), (FBV, SDI)]","{MEG: [FDH, SDI],
FDH: [JCF, SDI],
SDI: [TWP, FBM],
JCF: [],
UOV: [FBM, MOK, TWP, FDH],
FBM: [],
MOK: [FBV, FDH, JCF],
TWP: [],
FBV: [FDH, SDI]}","Node MEG is connected to nodes FDH, SDI.
Node FDH is connected to nodes JCF, SDI.
Node SDI is connected to nodes TWP, FBM.
Node UOV is connected to nodes FBM, MOK, TWP, FDH.
Node MOK is connected to nodes FBV, FDH, JCF.
Node FBV is connected to nodes FDH, SDI.","[JCF, UOV, FBM, TWP, MEG, SDI, FDH, MOK, FBV]",9,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MEG, UOV, MOK, FBV, FDH, JCF, SDI, TWP, FBM]","Let's solve it step by step.
Nodes with 0 in-degree: [MEG, UOV].
Visit node MEG and remove it from the graph.
Nodes with 0 in-degree: [UOV].
Visit node UOV and remove it from the graph.
Nodes with 0 in-degree: [MOK].
Visit node MOK and remove it from the graph.
Nodes with 0 in-degree: [FBV].
Visit node FBV and remove it from the graph.
Nodes with 0 in-degree: [FDH].
Visit node FDH and remove it from the graph.
Nodes with 0 in-degree: [JCF, SDI].
Visit node JCF and remove it from the graph.
Nodes with 0 in-degree: [SDI].
Visit node SDI and remove it from the graph.
Nodes with 0 in-degree: [TWP, FBM].
Visit node TWP and remove it from the graph.
Nodes with 0 in-degree: [FBM].
Visit node FBM and remove it from the graph.
So the result of topological sorting is ","('[[MEG, UOV, MOK, SDI, TWP, FBM, FBV, FDH, JCF], [MEG, UOV, MOK, FBV, FDH, JCF, SDI, TWP, FBM], [MEG, FBV, TWP, MOK, UOV, FBM, FDH, JCF, SDI], [MEG, UOV, MOK, FBV, TWP, FDH, FBM, SDI, JCF]]',)",1,36
topological_sort,"[(KAC, WPL), (KAC, GXO), (KAC, CBM), (WPL, UCA), (WPL, APE), (WPL, GXO), (UCA, GXO), (UCA, CBM), (APE, CBM), (APE, GXO), (RTP, GXO), (RTP, KAC), (RTP, WPL), (NKY, RTP), (NKY, WPL), (NKY, KAC), (NKY, UCA)]","{KAC: [WPL, GXO, CBM],
WPL: [UCA, APE, GXO],
GXO: [],
CBM: [],
UCA: [GXO, CBM],
APE: [CBM, GXO],
RTP: [GXO, KAC, WPL],
NKY: [RTP, WPL, KAC, UCA]}","Node KAC is connected to nodes WPL, GXO, CBM.
Node WPL is connected to nodes UCA, APE, GXO.
Node UCA is connected to nodes GXO, CBM.
Node APE is connected to nodes CBM, GXO.
Node RTP is connected to nodes GXO, KAC, WPL.
Node NKY is connected to nodes RTP, WPL, KAC, UCA.","[RTP, WPL, KAC, GXO, UCA, CBM, NKY, APE]",8,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[NKY, RTP, KAC, WPL, UCA, APE, CBM, GXO]","Let's solve it step by step.
Nodes with 0 in-degree: [NKY].
Visit node NKY and remove it from the graph.
Nodes with 0 in-degree: [RTP].
Visit node RTP and remove it from the graph.
Nodes with 0 in-degree: [KAC].
Visit node KAC and remove it from the graph.
Nodes with 0 in-degree: [WPL].
Visit node WPL and remove it from the graph.
Nodes with 0 in-degree: [UCA, APE].
Visit node UCA and remove it from the graph.
Nodes with 0 in-degree: [APE].
Visit node APE and remove it from the graph.
Nodes with 0 in-degree: [CBM, GXO].
Visit node CBM and remove it from the graph.
Nodes with 0 in-degree: [GXO].
Visit node GXO and remove it from the graph.
So the result of topological sorting is ","('[[NKY, APE, UCA, RTP, WPL, CBM, KAC, GXO], [NKY, RTP, KAC, WPL, UCA, APE, CBM, GXO], [NKY, RTP, KAC, WPL, GXO, CBM, APE, UCA], [NKY, RTP, CBM, GXO, KAC, WPL, UCA, APE]]',)",1,37
topological_sort,"[(DUL, MXV), (DUL, VHS), (DUL, IQX), (DUL, HKY), (DUL, DWJ), (MXV, VZP), (VHS, VZP), (VHS, DWJ), (VHS, AWB), (IQX, VDG), (IQX, CRH), (IQX, AWB), (HKY, VZP), (HKY, VHS), (HKY, AWB), (HKY, WYB), (HKY, MXV), (VDG, YVA), (VDG, KIA), (CRH, VZP), (AWB, DWJ), (YVA, EDX), (YVA, CRH), (YVA, HKY), (YVA, DWJ), (YVA, AWB), (YVA, KIA), (KIA, AWB), (KIA, VHS), (KIA, DWJ), (KIA, CRH), (KIA, MXV), (VYV, CRH), (VYV, EDX), (VYV, IQX), (VYV, DWJ), (VYV, DUL), (VYV, AWB), (VYV, HKY), (EDX, CRH), (EDX, DWJ), (EDX, VHS), (EDX, KIA), (EDX, MXV), (EDX, HKY), (EDX, VZP), (WYB, KIA), (WYB, MXV), (WYB, VHS)]","{DUL: [MXV, VHS, IQX, HKY, DWJ],
MXV: [VZP],
VHS: [VZP, DWJ, AWB],
IQX: [VDG, CRH, AWB],
HKY: [VZP, VHS, AWB, WYB, MXV],
DWJ: [],
VZP: [],
VDG: [YVA, KIA],
CRH: [VZP],
AWB: [DWJ],
YVA: [EDX, CRH, HKY, DWJ, AWB, KIA],
KIA: [AWB, VHS, DWJ, CRH, MXV],
VYV: [CRH, EDX, IQX, DWJ, DUL, AWB, HKY],
EDX: [CRH, DWJ, VHS, KIA, MXV, HKY, VZP],
WYB: [KIA, MXV, VHS]}","Node DUL is connected to nodes MXV, VHS, IQX, HKY, DWJ.
Node MXV is connected to node VZP.
Node VHS is connected to nodes VZP, DWJ, AWB.
Node IQX is connected to nodes VDG, CRH, AWB.
Node HKY is connected to nodes VZP, VHS, AWB, WYB, MXV.
Node VDG is connected to nodes YVA, KIA.
Node CRH is connected to node VZP.
Node AWB is connected to node DWJ.
Node YVA is connected to nodes EDX, CRH, HKY, DWJ, AWB, KIA.
Node KIA is connected to nodes AWB, VHS, DWJ, CRH, MXV.
Node VYV is connected to nodes CRH, EDX, IQX, DWJ, DUL, AWB, HKY.
Node EDX is connected to nodes CRH, DWJ, VHS, KIA, MXV, HKY, VZP.
Node WYB is connected to nodes KIA, MXV, VHS.","[AWB, CRH, YVA, KIA, HKY, DUL, VZP, IQX, VDG, VHS, VYV, EDX, MXV, DWJ, WYB]",15,49,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VYV, DUL, IQX, VDG, YVA, EDX, HKY, WYB, KIA, VHS, CRH, MXV, AWB, VZP, DWJ]","Let's solve it step by step.
Nodes with 0 in-degree: [VYV].
Visit node VYV and remove it from the graph.
Nodes with 0 in-degree: [DUL].
Visit node DUL and remove it from the graph.
Nodes with 0 in-degree: [IQX].
Visit node IQX and remove it from the graph.
Nodes with 0 in-degree: [VDG].
Visit node VDG and remove it from the graph.
Nodes with 0 in-degree: [YVA].
Visit node YVA and remove it from the graph.
Nodes with 0 in-degree: [EDX].
Visit node EDX and remove it from the graph.
Nodes with 0 in-degree: [HKY].
Visit node HKY and remove it from the graph.
Nodes with 0 in-degree: [WYB].
Visit node WYB and remove it from the graph.
Nodes with 0 in-degree: [KIA].
Visit node KIA and remove it from the graph.
Nodes with 0 in-degree: [VHS, CRH, MXV].
Visit node VHS and remove it from the graph.
Nodes with 0 in-degree: [CRH, MXV, AWB].
Visit node CRH and remove it from the graph.
Nodes with 0 in-degree: [MXV, AWB].
Visit node MXV and remove it from the graph.
Nodes with 0 in-degree: [AWB, VZP].
Visit node AWB and remove it from the graph.
Nodes with 0 in-degree: [VZP, DWJ].
Visit node VZP and remove it from the graph.
Nodes with 0 in-degree: [DWJ].
Visit node DWJ and remove it from the graph.
So the result of topological sorting is ","('[[VYV, DUL, IQX, VDG, YVA, EDX, HKY, WYB, KIA, VHS, CRH, MXV, AWB, VZP, DWJ], [VYV, DUL, IQX, VDG, YVA, EDX, HKY, MXV, VHS, DWJ, VZP, CRH, WYB, KIA, AWB], [VYV, DUL, IQX, VDG, YVA, CRH, MXV, AWB, VZP, DWJ, EDX, HKY, WYB, KIA, VHS], [VYV, AWB, VDG, HKY, DWJ, VHS, CRH, DUL, MXV, IQX, YVA, VZP, EDX, WYB, KIA]]',)",0,38
topological_sort,"[(HWU, RDC), (HWU, KZL), (HWU, DUQ), (HWU, ZKZ), (HWU, TKQ), (HWU, GBY), (RDC, GBY), (RDC, URI), (RDC, ZKZ), (KZL, ZKZ), (KZL, GBY), (KZL, NDJ), (DUQ, TKQ), (ZKZ, URI), (ZKZ, NDJ), (ZKZ, TKQ), (ZKZ, ZIS), (TKQ, ZIS), (GBY, DUQ), (GBY, XXN), (GBY, URI), (URI, DUQ), (NDJ, ZIS), (NDJ, DUQ), (NDJ, URI), (NDJ, TKQ), (MWR, GBY), (MWR, TKQ), (MWR, JRK), (MWR, NDJ), (MWR, RDC), (MWR, ZIS), (JRK, XXN), (JRK, RDC), (XXN, ZKZ), (XXN, ZIS), (XXN, URI), (JIV, XXN), (JIV, ZKZ), (JIV, NDJ), (JIV, MWR), (JIV, JRK), (JIV, DUQ), (JIV, URI), (JIV, RDC), (JIV, ZIS), (JIV, KZL), (UPK, GBY), (UPK, ZKZ), (UPK, MWR), (UPK, JIV), (UPK, HWU)]","{HWU: [RDC, KZL, DUQ, ZKZ, TKQ, GBY],
RDC: [GBY, URI, ZKZ],
KZL: [ZKZ, GBY, NDJ],
DUQ: [TKQ],
ZKZ: [URI, NDJ, TKQ, ZIS],
TKQ: [ZIS],
GBY: [DUQ, XXN, URI],
URI: [DUQ],
NDJ: [ZIS, DUQ, URI, TKQ],
MWR: [GBY, TKQ, JRK, NDJ, RDC, ZIS],
JRK: [XXN, RDC],
ZIS: [],
XXN: [ZKZ, ZIS, URI],
JIV: [XXN, ZKZ, NDJ, MWR, JRK, DUQ, URI, RDC, ZIS, KZL],
UPK: [GBY, ZKZ, MWR, JIV, HWU]}","Node HWU is connected to nodes RDC, KZL, DUQ, ZKZ, TKQ, GBY.
Node RDC is connected to nodes GBY, URI, ZKZ.
Node KZL is connected to nodes ZKZ, GBY, NDJ.
Node DUQ is connected to node TKQ.
Node ZKZ is connected to nodes URI, NDJ, TKQ, ZIS.
Node TKQ is connected to node ZIS.
Node GBY is connected to nodes DUQ, XXN, URI.
Node URI is connected to node DUQ.
Node NDJ is connected to nodes ZIS, DUQ, URI, TKQ.
Node MWR is connected to nodes GBY, TKQ, JRK, NDJ, RDC, ZIS.
Node JRK is connected to nodes XXN, RDC.
Node XXN is connected to nodes ZKZ, ZIS, URI.
Node JIV is connected to nodes XXN, ZKZ, NDJ, MWR, JRK, DUQ, URI, RDC, ZIS, KZL.
Node UPK is connected to nodes GBY, ZKZ, MWR, JIV, HWU.","[RDC, MWR, HWU, UPK, XXN, JRK, JIV, NDJ, ZIS, ZKZ, KZL, TKQ, DUQ, URI, GBY]",15,52,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UPK, JIV, HWU, MWR, KZL, JRK, RDC, GBY, XXN, ZKZ, NDJ, URI, DUQ, TKQ, ZIS]","Let's solve it step by step.
Nodes with 0 in-degree: [UPK].
Visit node UPK and remove it from the graph.
Nodes with 0 in-degree: [JIV, HWU].
Visit node JIV and remove it from the graph.
Nodes with 0 in-degree: [HWU, MWR].
Visit node HWU and remove it from the graph.
Nodes with 0 in-degree: [MWR, KZL].
Visit node MWR and remove it from the graph.
Nodes with 0 in-degree: [KZL, JRK].
Visit node KZL and remove it from the graph.
Nodes with 0 in-degree: [JRK].
Visit node JRK and remove it from the graph.
Nodes with 0 in-degree: [RDC].
Visit node RDC and remove it from the graph.
Nodes with 0 in-degree: [GBY].
Visit node GBY and remove it from the graph.
Nodes with 0 in-degree: [XXN].
Visit node XXN and remove it from the graph.
Nodes with 0 in-degree: [ZKZ].
Visit node ZKZ and remove it from the graph.
Nodes with 0 in-degree: [NDJ].
Visit node NDJ and remove it from the graph.
Nodes with 0 in-degree: [URI].
Visit node URI and remove it from the graph.
Nodes with 0 in-degree: [DUQ].
Visit node DUQ and remove it from the graph.
Nodes with 0 in-degree: [TKQ].
Visit node TKQ and remove it from the graph.
Nodes with 0 in-degree: [ZIS].
Visit node ZIS and remove it from the graph.
So the result of topological sorting is ","('[[UPK, MWR, RDC, TKQ, JIV, NDJ, URI, ZIS, XXN, GBY, KZL, DUQ, HWU, ZKZ, JRK], [UPK, JIV, HWU, MWR, KZL, JRK, RDC, ZIS, ZKZ, DUQ, NDJ, GBY, URI, TKQ, XXN], [UPK, JIV, HWU, MWR, KZL, JRK, RDC, GBY, XXN, ZKZ, NDJ, URI, DUQ, TKQ, ZIS], [UPK, JIV, HWU, MWR, KZL, NDJ, URI, DUQ, TKQ, ZIS, JRK, RDC, GBY, XXN, ZKZ]]',)",2,39
topological_sort,"[(MLU, WBE), (MLU, KIT), (MLU, YOK), (MLU, AGI), (YOK, WBE), (AGI, YOK), (KRF, AGI), (KRF, ADO), (KRF, VAU), (ADO, WBE), (ADO, MLU), (ADO, KIT), (VAU, YOK), (RWV, KIT), (RWV, WBE), (RWV, FSC), (RWV, KRF), (FSC, MLU)]","{MLU: [WBE, KIT, YOK, AGI],
WBE: [],
KIT: [],
YOK: [WBE],
AGI: [YOK],
KRF: [AGI, ADO, VAU],
ADO: [WBE, MLU, KIT],
VAU: [YOK],
RWV: [KIT, WBE, FSC, KRF],
FSC: [MLU]}","Node MLU is connected to nodes WBE, KIT, YOK, AGI.
Node YOK is connected to node WBE.
Node AGI is connected to node YOK.
Node KRF is connected to nodes AGI, ADO, VAU.
Node ADO is connected to nodes WBE, MLU, KIT.
Node VAU is connected to node YOK.
Node RWV is connected to nodes KIT, WBE, FSC, KRF.
Node FSC is connected to node MLU.","[KRF, VAU, AGI, FSC, KIT, ADO, WBE, MLU, YOK, RWV]",10,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RWV, FSC, KRF, ADO, VAU, MLU, KIT, AGI, YOK, WBE]","Let's solve it step by step.
Nodes with 0 in-degree: [RWV].
Visit node RWV and remove it from the graph.
Nodes with 0 in-degree: [FSC, KRF].
Visit node FSC and remove it from the graph.
Nodes with 0 in-degree: [KRF].
Visit node KRF and remove it from the graph.
Nodes with 0 in-degree: [ADO, VAU].
Visit node ADO and remove it from the graph.
Nodes with 0 in-degree: [VAU, MLU].
Visit node VAU and remove it from the graph.
Nodes with 0 in-degree: [MLU].
Visit node MLU and remove it from the graph.
Nodes with 0 in-degree: [KIT, AGI].
Visit node KIT and remove it from the graph.
Nodes with 0 in-degree: [AGI].
Visit node AGI and remove it from the graph.
Nodes with 0 in-degree: [YOK].
Visit node YOK and remove it from the graph.
Nodes with 0 in-degree: [WBE].
Visit node WBE and remove it from the graph.
So the result of topological sorting is ","('[[RWV, FSC, KRF, AGI, YOK, WBE, ADO, VAU, MLU, KIT], [RWV, FSC, KRF, ADO, VAU, MLU, KIT, AGI, YOK, WBE], [RWV, KIT, AGI, WBE, YOK, VAU, MLU, KRF, FSC, ADO], [RWV, FSC, KRF, ADO, VAU, AGI, KIT, YOK, MLU, WBE]]',)",1,40
topological_sort,"[(ZYT, KWW), (ZYT, BQR), (ZYT, HNX), (KWW, ZSC), (KWW, HNX), (BQR, HNX), (BQR, BPD), (HNX, LKM), (HNX, ZSC), (BPD, LKM), (BPD, KWW), (BPD, ZSC), (LKM, ZSC), (GNO, HNX), (GNO, ZSC), (GNO, BPD)]","{ZYT: [KWW, BQR, HNX],
KWW: [ZSC, HNX],
BQR: [HNX, BPD],
HNX: [LKM, ZSC],
ZSC: [],
BPD: [LKM, KWW, ZSC],
LKM: [ZSC],
GNO: [HNX, ZSC, BPD]}","Node ZYT is connected to nodes KWW, BQR, HNX.
Node KWW is connected to nodes ZSC, HNX.
Node BQR is connected to nodes HNX, BPD.
Node HNX is connected to nodes LKM, ZSC.
Node BPD is connected to nodes LKM, KWW, ZSC.
Node LKM is connected to node ZSC.
Node GNO is connected to nodes HNX, ZSC, BPD.","[ZSC, BPD, KWW, GNO, LKM, HNX, ZYT, BQR]",8,16,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZYT, GNO, BQR, BPD, KWW, HNX, LKM, ZSC]","Let's solve it step by step.
Nodes with 0 in-degree: [ZYT, GNO].
Visit node ZYT and remove it from the graph.
Nodes with 0 in-degree: [GNO, BQR].
Visit node GNO and remove it from the graph.
Nodes with 0 in-degree: [BQR].
Visit node BQR and remove it from the graph.
Nodes with 0 in-degree: [BPD].
Visit node BPD and remove it from the graph.
Nodes with 0 in-degree: [KWW].
Visit node KWW and remove it from the graph.
Nodes with 0 in-degree: [HNX].
Visit node HNX and remove it from the graph.
Nodes with 0 in-degree: [LKM].
Visit node LKM and remove it from the graph.
Nodes with 0 in-degree: [ZSC].
Visit node ZSC and remove it from the graph.
So the result of topological sorting is ","('[[ZYT, ZSC, KWW, BQR, HNX, LKM, BPD, GNO], [ZYT, GNO, BQR, BPD, KWW, HNX, LKM, ZSC], [ZYT, GNO, BQR, BPD, ZSC, HNX, LKM, KWW], [ZYT, GNO, LKM, ZSC, BQR, BPD, KWW, HNX]]',)",1,41
topological_sort,"[(XCV, SIC), (XCV, RSE), (XCV, WYM), (SIC, CGN), (RSE, QVE), (RSE, JCC), (RSE, DVB), (RSE, UXY), (CGN, DVB), (CGN, WOT), (CGN, QVE), (DVB, WYM), (WOT, QVE), (WOT, WYM), (WOT, JCC), (JCC, WYM), (UXY, JCC), (UXY, QVE), (TJO, CGN), (TJO, RSE), (TJO, SIC), (TJO, XCV)]","{XCV: [SIC, RSE, WYM],
SIC: [CGN],
RSE: [QVE, JCC, DVB, UXY],
WYM: [],
CGN: [DVB, WOT, QVE],
DVB: [WYM],
WOT: [QVE, WYM, JCC],
QVE: [],
JCC: [WYM],
UXY: [JCC, QVE],
TJO: [CGN, RSE, SIC, XCV]}","Node XCV is connected to nodes SIC, RSE, WYM.
Node SIC is connected to node CGN.
Node RSE is connected to nodes QVE, JCC, DVB, UXY.
Node CGN is connected to nodes DVB, WOT, QVE.
Node DVB is connected to node WYM.
Node WOT is connected to nodes QVE, WYM, JCC.
Node JCC is connected to node WYM.
Node UXY is connected to nodes JCC, QVE.
Node TJO is connected to nodes CGN, RSE, SIC, XCV.","[UXY, DVB, WYM, JCC, SIC, RSE, WOT, TJO, QVE, XCV, CGN]",11,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TJO, XCV, SIC, RSE, CGN, UXY, DVB, WOT, QVE, JCC, WYM]","Let's solve it step by step.
Nodes with 0 in-degree: [TJO].
Visit node TJO and remove it from the graph.
Nodes with 0 in-degree: [XCV].
Visit node XCV and remove it from the graph.
Nodes with 0 in-degree: [SIC, RSE].
Visit node SIC and remove it from the graph.
Nodes with 0 in-degree: [RSE, CGN].
Visit node RSE and remove it from the graph.
Nodes with 0 in-degree: [CGN, UXY].
Visit node CGN and remove it from the graph.
Nodes with 0 in-degree: [UXY, DVB, WOT].
Visit node UXY and remove it from the graph.
Nodes with 0 in-degree: [DVB, WOT].
Visit node DVB and remove it from the graph.
Nodes with 0 in-degree: [WOT].
Visit node WOT and remove it from the graph.
Nodes with 0 in-degree: [QVE, JCC].
Visit node QVE and remove it from the graph.
Nodes with 0 in-degree: [JCC].
Visit node JCC and remove it from the graph.
Nodes with 0 in-degree: [WYM].
Visit node WYM and remove it from the graph.
So the result of topological sorting is ","('[[TJO, XCV, SIC, RSE, CGN, WYM, JCC, QVE, WOT, UXY, DVB], [TJO, XCV, SIC, RSE, CGN, UXY, DVB, WOT, QVE, JCC, WYM], [TJO, XCV, SIC, QVE, JCC, WYM, RSE, CGN, UXY, DVB, WOT], [TJO, RSE, CGN, XCV, QVE, DVB, WYM, UXY, JCC, SIC, WOT]]',)",1,42
topological_sort,"[(OWE, GDM), (OWE, RMA), (RMA, OZX), (BUY, HWT), (BUY, OZX), (HWT, EHZ), (HWT, RMA), (HWT, FKP), (HWT, ZEM), (EHZ, OWE), (EHZ, ZEM), (FKP, TYF), (FKP, OWE), (ZEM, OZX), (MYG, GDM), (MYG, BUY), (TYF, ZEM), (YAV, ZEM)]","{OWE: [GDM, RMA],
GDM: [],
RMA: [OZX],
BUY: [HWT, OZX],
HWT: [EHZ, RMA, FKP, ZEM],
OZX: [],
EHZ: [OWE, ZEM],
FKP: [TYF, OWE],
ZEM: [OZX],
MYG: [GDM, BUY],
TYF: [ZEM],
YAV: [ZEM]}","Node OWE is connected to nodes GDM, RMA.
Node RMA is connected to node OZX.
Node BUY is connected to nodes HWT, OZX.
Node HWT is connected to nodes EHZ, RMA, FKP, ZEM.
Node EHZ is connected to nodes OWE, ZEM.
Node FKP is connected to nodes TYF, OWE.
Node ZEM is connected to node OZX.
Node MYG is connected to nodes GDM, BUY.
Node TYF is connected to node ZEM.
Node YAV is connected to node ZEM.","[RMA, YAV, EHZ, HWT, FKP, OWE, OZX, ZEM, TYF, GDM, MYG, BUY]",12,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MYG, YAV, BUY, HWT, EHZ, FKP, TYF, OWE, ZEM, GDM, RMA, OZX]","Let's solve it step by step.
Nodes with 0 in-degree: [MYG, YAV].
Visit node MYG and remove it from the graph.
Nodes with 0 in-degree: [YAV, BUY].
Visit node YAV and remove it from the graph.
Nodes with 0 in-degree: [BUY].
Visit node BUY and remove it from the graph.
Nodes with 0 in-degree: [HWT].
Visit node HWT and remove it from the graph.
Nodes with 0 in-degree: [EHZ, FKP].
Visit node EHZ and remove it from the graph.
Nodes with 0 in-degree: [FKP].
Visit node FKP and remove it from the graph.
Nodes with 0 in-degree: [TYF, OWE].
Visit node TYF and remove it from the graph.
Nodes with 0 in-degree: [OWE, ZEM].
Visit node OWE and remove it from the graph.
Nodes with 0 in-degree: [ZEM, GDM, RMA].
Visit node ZEM and remove it from the graph.
Nodes with 0 in-degree: [GDM, RMA].
Visit node GDM and remove it from the graph.
Nodes with 0 in-degree: [RMA].
Visit node RMA and remove it from the graph.
Nodes with 0 in-degree: [OZX].
Visit node OZX and remove it from the graph.
So the result of topological sorting is ","('[[MYG, YAV, BUY, HWT, EHZ, FKP, TYF, OWE, ZEM, GDM, RMA, OZX], [MYG, YAV, BUY, HWT, ZEM, GDM, RMA, OZX, EHZ, FKP, TYF, OWE], [MYG, YAV, BUY, HWT, EHZ, FKP, TYF, RMA, OZX, ZEM, GDM, OWE], [MYG, OZX, FKP, ZEM, OWE, BUY, YAV, TYF, EHZ, HWT, GDM, RMA]]',)",0,43
topological_sort,"[(KVW, KYZ), (KVW, HER), (KVW, AEA), (KYZ, HER), (KYZ, FBE), (KYZ, SUD), (HER, DLC), (AEA, SUD), (AEA, FBE), (SUD, HER), (DLC, FBE), (BBQ, KVW), (BBQ, KYZ), (BBQ, FBE), (BBQ, DLC), (BBQ, SUD), (BBQ, AEA)]","{KVW: [KYZ, HER, AEA],
KYZ: [HER, FBE, SUD],
HER: [DLC],
AEA: [SUD, FBE],
FBE: [],
SUD: [HER],
DLC: [FBE],
BBQ: [KVW, KYZ, FBE, DLC, SUD, AEA]}","Node KVW is connected to nodes KYZ, HER, AEA.
Node KYZ is connected to nodes HER, FBE, SUD.
Node HER is connected to node DLC.
Node AEA is connected to nodes SUD, FBE.
Node SUD is connected to node HER.
Node DLC is connected to node FBE.
Node BBQ is connected to nodes KVW, KYZ, FBE, DLC, SUD, AEA.","[BBQ, FBE, KVW, AEA, SUD, KYZ, HER, DLC]",8,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BBQ, KVW, KYZ, AEA, SUD, HER, DLC, FBE]","Let's solve it step by step.
Nodes with 0 in-degree: [BBQ].
Visit node BBQ and remove it from the graph.
Nodes with 0 in-degree: [KVW].
Visit node KVW and remove it from the graph.
Nodes with 0 in-degree: [KYZ, AEA].
Visit node KYZ and remove it from the graph.
Nodes with 0 in-degree: [AEA].
Visit node AEA and remove it from the graph.
Nodes with 0 in-degree: [SUD].
Visit node SUD and remove it from the graph.
Nodes with 0 in-degree: [HER].
Visit node HER and remove it from the graph.
Nodes with 0 in-degree: [DLC].
Visit node DLC and remove it from the graph.
Nodes with 0 in-degree: [FBE].
Visit node FBE and remove it from the graph.
So the result of topological sorting is ","('[[BBQ, KVW, KYZ, AEA, SUD, HER, DLC, FBE], [BBQ, AEA, FBE, DLC, HER, KYZ, KVW, SUD], [BBQ, KVW, KYZ, AEA, FBE, HER, DLC, SUD], [BBQ, KVW, DLC, FBE, KYZ, AEA, SUD, HER]]',)",0,44
topological_sort,"[(ZFL, MFG), (ZFL, ASO), (ZFL, YUR), (ZFL, ZTM), (MFG, YUR), (MFG, ASO), (MFG, WTW), (ASO, WTW), (YUR, ASO), (ZTM, RFQ), (RFQ, NXA), (RFQ, MFG), (NXA, IYA), (IYA, RXO), (IYA, MFG), (BKQ, NXA), (BKQ, ZFL), (BKQ, RVU)]","{ZFL: [MFG, ASO, YUR, ZTM],
MFG: [YUR, ASO, WTW],
ASO: [WTW],
YUR: [ASO],
ZTM: [RFQ],
WTW: [],
RFQ: [NXA, MFG],
NXA: [IYA],
IYA: [RXO, MFG],
RXO: [],
BKQ: [NXA, ZFL, RVU],
RVU: []}","Node ZFL is connected to nodes MFG, ASO, YUR, ZTM.
Node MFG is connected to nodes YUR, ASO, WTW.
Node ASO is connected to node WTW.
Node YUR is connected to node ASO.
Node ZTM is connected to node RFQ.
Node RFQ is connected to nodes NXA, MFG.
Node NXA is connected to node IYA.
Node IYA is connected to nodes RXO, MFG.
Node BKQ is connected to nodes NXA, ZFL, RVU.","[ZTM, NXA, BKQ, RFQ, ZFL, RVU, YUR, IYA, WTW, RXO, ASO, MFG]",12,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BKQ, ZFL, RVU, ZTM, RFQ, NXA, IYA, RXO, MFG, YUR, ASO, WTW]","Let's solve it step by step.
Nodes with 0 in-degree: [BKQ].
Visit node BKQ and remove it from the graph.
Nodes with 0 in-degree: [ZFL, RVU].
Visit node ZFL and remove it from the graph.
Nodes with 0 in-degree: [RVU, ZTM].
Visit node RVU and remove it from the graph.
Nodes with 0 in-degree: [ZTM].
Visit node ZTM and remove it from the graph.
Nodes with 0 in-degree: [RFQ].
Visit node RFQ and remove it from the graph.
Nodes with 0 in-degree: [NXA].
Visit node NXA and remove it from the graph.
Nodes with 0 in-degree: [IYA].
Visit node IYA and remove it from the graph.
Nodes with 0 in-degree: [RXO, MFG].
Visit node RXO and remove it from the graph.
Nodes with 0 in-degree: [MFG].
Visit node MFG and remove it from the graph.
Nodes with 0 in-degree: [YUR].
Visit node YUR and remove it from the graph.
Nodes with 0 in-degree: [ASO].
Visit node ASO and remove it from the graph.
Nodes with 0 in-degree: [WTW].
Visit node WTW and remove it from the graph.
So the result of topological sorting is ","('[[BKQ, RFQ, IYA, YUR, WTW, RVU, MFG, RXO, ZTM, ASO, ZFL, NXA], [BKQ, ZFL, RVU, ZTM, RFQ, NXA, MFG, WTW, RXO, IYA, YUR, ASO], [BKQ, ZFL, RVU, ZTM, RFQ, NXA, IYA, RXO, MFG, YUR, ASO, WTW], [BKQ, ZFL, RVU, ZTM, MFG, YUR, ASO, WTW, RFQ, NXA, IYA, RXO]]',)",2,45
topological_sort,"[(VEA, VNO), (VEA, TZL), (VEA, TQO), (VEA, XVV), (VEA, MCI), (VEA, XRP), (VNO, TZL), (TQO, TZL), (XVV, RPU), (MCI, VNO), (MCI, XVV), (MCI, MKB), (MCI, RPU), (XRP, TZL), (XRP, RPU), (DCN, MCI), (DCN, QVA), (DCN, MKB), (DCN, TZL), (DCN, XRP), (QVA, MKB), (QVA, SXS), (QVA, XRP), (QVA, TZL), (RPU, TZL), (SXS, VNO), (SXS, MKB), (SXS, XRP), (SXS, VEA), (SXS, RPU), (SXS, XVV), (SXS, TZL), (BRW, DCN), (BRW, MKB), (BRW, QVA), (BRW, XVV)]","{VEA: [VNO, TZL, TQO, XVV, MCI, XRP],
VNO: [TZL],
TZL: [],
TQO: [TZL],
XVV: [RPU],
MCI: [VNO, XVV, MKB, RPU],
XRP: [TZL, RPU],
DCN: [MCI, QVA, MKB, TZL, XRP],
QVA: [MKB, SXS, XRP, TZL],
MKB: [],
RPU: [TZL],
SXS: [VNO, MKB, XRP, VEA, RPU, XVV, TZL],
BRW: [DCN, MKB, QVA, XVV]}","Node VEA is connected to nodes VNO, TZL, TQO, XVV, MCI, XRP.
Node VNO is connected to node TZL.
Node TQO is connected to node TZL.
Node XVV is connected to node RPU.
Node MCI is connected to nodes VNO, XVV, MKB, RPU.
Node XRP is connected to nodes TZL, RPU.
Node DCN is connected to nodes MCI, QVA, MKB, TZL, XRP.
Node QVA is connected to nodes MKB, SXS, XRP, TZL.
Node RPU is connected to node TZL.
Node SXS is connected to nodes VNO, MKB, XRP, VEA, RPU, XVV, TZL.
Node BRW is connected to nodes DCN, MKB, QVA, XVV.","[QVA, DCN, SXS, XVV, TQO, VEA, RPU, MCI, BRW, XRP, MKB, VNO, TZL]",13,36,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BRW, DCN, QVA, SXS, VEA, TQO, MCI, XRP, VNO, XVV, MKB, RPU, TZL]","Let's solve it step by step.
Nodes with 0 in-degree: [BRW].
Visit node BRW and remove it from the graph.
Nodes with 0 in-degree: [DCN].
Visit node DCN and remove it from the graph.
Nodes with 0 in-degree: [QVA].
Visit node QVA and remove it from the graph.
Nodes with 0 in-degree: [SXS].
Visit node SXS and remove it from the graph.
Nodes with 0 in-degree: [VEA].
Visit node VEA and remove it from the graph.
Nodes with 0 in-degree: [TQO, MCI, XRP].
Visit node TQO and remove it from the graph.
Nodes with 0 in-degree: [MCI, XRP].
Visit node MCI and remove it from the graph.
Nodes with 0 in-degree: [XRP, VNO, XVV, MKB].
Visit node XRP and remove it from the graph.
Nodes with 0 in-degree: [VNO, XVV, MKB].
Visit node VNO and remove it from the graph.
Nodes with 0 in-degree: [XVV, MKB].
Visit node XVV and remove it from the graph.
Nodes with 0 in-degree: [MKB, RPU].
Visit node MKB and remove it from the graph.
Nodes with 0 in-degree: [RPU].
Visit node RPU and remove it from the graph.
Nodes with 0 in-degree: [TZL].
Visit node TZL and remove it from the graph.
So the result of topological sorting is ","('[[BRW, DCN, QVA, SXS, VEA, TQO, MCI, VNO, RPU, XVV, TZL, XRP, MKB], [BRW, DCN, QVA, SXS, VEA, TQO, MCI, XRP, VNO, XVV, MKB, RPU, TZL], [BRW, DCN, QVA, SXS, XVV, MKB, RPU, TZL, VEA, TQO, MCI, XRP, VNO], [BRW, VEA, QVA, RPU, XVV, DCN, MKB, TZL, SXS, MCI, TQO, XRP, VNO]]',)",1,46
topological_sort,"[(JAS, MVP), (JAS, HYC), (JAS, WYD), (JAS, JDV), (MVP, HYY), (MVP, QFE), (HYC, ZQW), (HYC, MVP), (WYD, QFE), (WYD, MVP), (JDV, MVP), (HYY, QFE), (VTS, ZQW), (VTS, WYD), (ZQW, MVP), (ZQW, JDV), (ZQW, QFE)]","{JAS: [MVP, HYC, WYD, JDV],
MVP: [HYY, QFE],
HYC: [ZQW, MVP],
WYD: [QFE, MVP],
JDV: [MVP],
HYY: [QFE],
QFE: [],
VTS: [ZQW, WYD],
ZQW: [MVP, JDV, QFE]}","Node JAS is connected to nodes MVP, HYC, WYD, JDV.
Node MVP is connected to nodes HYY, QFE.
Node HYC is connected to nodes ZQW, MVP.
Node WYD is connected to nodes QFE, MVP.
Node JDV is connected to node MVP.
Node HYY is connected to node QFE.
Node VTS is connected to nodes ZQW, WYD.
Node ZQW is connected to nodes MVP, JDV, QFE.","[HYY, ZQW, VTS, QFE, HYC, WYD, JAS, MVP, JDV]",9,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JAS, VTS, HYC, WYD, ZQW, JDV, MVP, HYY, QFE]","Let's solve it step by step.
Nodes with 0 in-degree: [JAS, VTS].
Visit node JAS and remove it from the graph.
Nodes with 0 in-degree: [VTS, HYC].
Visit node VTS and remove it from the graph.
Nodes with 0 in-degree: [HYC, WYD].
Visit node HYC and remove it from the graph.
Nodes with 0 in-degree: [WYD, ZQW].
Visit node WYD and remove it from the graph.
Nodes with 0 in-degree: [ZQW].
Visit node ZQW and remove it from the graph.
Nodes with 0 in-degree: [JDV].
Visit node JDV and remove it from the graph.
Nodes with 0 in-degree: [MVP].
Visit node MVP and remove it from the graph.
Nodes with 0 in-degree: [HYY].
Visit node HYY and remove it from the graph.
Nodes with 0 in-degree: [QFE].
Visit node QFE and remove it from the graph.
So the result of topological sorting is ","('[[JAS, VTS, HYC, WYD, MVP, HYY, QFE, JDV, ZQW], [JAS, VTS, HYC, WYD, ZQW, JDV, MVP, HYY, QFE], [JAS, VTS, HYC, MVP, HYY, QFE, WYD, ZQW, JDV], [JAS, JDV, HYY, MVP, QFE, VTS, WYD, ZQW, HYC]]',)",1,47
topological_sort,"[(TEF, DNY), (TEF, QNQ), (DNY, VUO), (VUO, QNQ), (YWZ, RMB), (YWZ, VUO), (RMB, DNY), (MEV, TEF), (MEV, SHW), (MEV, YWZ), (MEV, RMB), (MEV, VUO), (MEV, QNQ), (SHW, TEF), (SHW, RMB), (SHW, VUO), (SHW, QNQ)]","{TEF: [DNY, QNQ],
DNY: [VUO],
QNQ: [],
VUO: [QNQ],
YWZ: [RMB, VUO],
RMB: [DNY],
MEV: [TEF, SHW, YWZ, RMB, VUO, QNQ],
SHW: [TEF, RMB, VUO, QNQ]}","Node TEF is connected to nodes DNY, QNQ.
Node DNY is connected to node VUO.
Node VUO is connected to node QNQ.
Node YWZ is connected to nodes RMB, VUO.
Node RMB is connected to node DNY.
Node MEV is connected to nodes TEF, SHW, YWZ, RMB, VUO, QNQ.
Node SHW is connected to nodes TEF, RMB, VUO, QNQ.","[YWZ, MEV, DNY, RMB, VUO, SHW, QNQ, TEF]",8,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MEV, SHW, YWZ, TEF, RMB, DNY, VUO, QNQ]","Let's solve it step by step.
Nodes with 0 in-degree: [MEV].
Visit node MEV and remove it from the graph.
Nodes with 0 in-degree: [SHW, YWZ].
Visit node SHW and remove it from the graph.
Nodes with 0 in-degree: [YWZ, TEF].
Visit node YWZ and remove it from the graph.
Nodes with 0 in-degree: [TEF, RMB].
Visit node TEF and remove it from the graph.
Nodes with 0 in-degree: [RMB].
Visit node RMB and remove it from the graph.
Nodes with 0 in-degree: [DNY].
Visit node DNY and remove it from the graph.
Nodes with 0 in-degree: [VUO].
Visit node VUO and remove it from the graph.
Nodes with 0 in-degree: [QNQ].
Visit node QNQ and remove it from the graph.
So the result of topological sorting is ","('[[MEV, SHW, YWZ, TEF, DNY, VUO, QNQ, RMB], [MEV, VUO, QNQ, SHW, YWZ, DNY, RMB, TEF], [MEV, SHW, VUO, QNQ, YWZ, TEF, RMB, DNY], [MEV, SHW, YWZ, TEF, RMB, DNY, VUO, QNQ]]',)",3,48
topological_sort,"[(OPX, YEG), (OPX, ADJ), (OPX, EKV), (YEG, EKV), (YEG, VOO), (YEG, ZDF), (ADJ, EKV), (ADJ, ZDF), (VOO, EKV), (VOO, ADJ), (VOO, ZDF), (CMX, ZDF), (CMX, YEG), (LSE, OPX), (LSE, YEG), (LSE, EKV), (LSE, ZDF)]","{OPX: [YEG, ADJ, EKV],
YEG: [EKV, VOO, ZDF],
ADJ: [EKV, ZDF],
EKV: [],
VOO: [EKV, ADJ, ZDF],
ZDF: [],
CMX: [ZDF, YEG],
LSE: [OPX, YEG, EKV, ZDF]}","Node OPX is connected to nodes YEG, ADJ, EKV.
Node YEG is connected to nodes EKV, VOO, ZDF.
Node ADJ is connected to nodes EKV, ZDF.
Node VOO is connected to nodes EKV, ADJ, ZDF.
Node CMX is connected to nodes ZDF, YEG.
Node LSE is connected to nodes OPX, YEG, EKV, ZDF.","[YEG, EKV, OPX, ADJ, CMX, ZDF, VOO, LSE]",8,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CMX, LSE, OPX, YEG, VOO, ADJ, EKV, ZDF]","Let's solve it step by step.
Nodes with 0 in-degree: [CMX, LSE].
Visit node CMX and remove it from the graph.
Nodes with 0 in-degree: [LSE].
Visit node LSE and remove it from the graph.
Nodes with 0 in-degree: [OPX].
Visit node OPX and remove it from the graph.
Nodes with 0 in-degree: [YEG].
Visit node YEG and remove it from the graph.
Nodes with 0 in-degree: [VOO].
Visit node VOO and remove it from the graph.
Nodes with 0 in-degree: [ADJ].
Visit node ADJ and remove it from the graph.
Nodes with 0 in-degree: [EKV, ZDF].
Visit node EKV and remove it from the graph.
Nodes with 0 in-degree: [ZDF].
Visit node ZDF and remove it from the graph.
So the result of topological sorting is ","('[[CMX, LSE, EKV, ZDF, OPX, YEG, VOO, ADJ], [CMX, LSE, OPX, YEG, VOO, ADJ, EKV, ZDF], [CMX, ADJ, LSE, ZDF, OPX, YEG, VOO, EKV], [CMX, LSE, OPX, YEG, ADJ, ZDF, EKV, VOO]]',)",1,49
topological_sort,"[(VCV, OIR), (VCV, CJK), (OIR, ABP), (CJK, XOI), (ABP, NGT), (XOI, LQC), (NGT, XOI), (NGT, LQC), (NGT, VHU), (VHU, LQC)]","{VCV: [OIR, CJK],
OIR: [ABP],
CJK: [XOI],
ABP: [NGT],
XOI: [LQC],
LQC: [],
NGT: [XOI, LQC, VHU],
VHU: [LQC]}","Node VCV is connected to nodes OIR, CJK.
Node OIR is connected to node ABP.
Node CJK is connected to node XOI.
Node ABP is connected to node NGT.
Node XOI is connected to node LQC.
Node NGT is connected to nodes XOI, LQC, VHU.
Node VHU is connected to node LQC.","[LQC, ABP, NGT, CJK, XOI, VHU, VCV, OIR]",8,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VCV, OIR, CJK, ABP, NGT, XOI, VHU, LQC]","Let's solve it step by step.
Nodes with 0 in-degree: [VCV].
Visit node VCV and remove it from the graph.
Nodes with 0 in-degree: [OIR, CJK].
Visit node OIR and remove it from the graph.
Nodes with 0 in-degree: [CJK, ABP].
Visit node CJK and remove it from the graph.
Nodes with 0 in-degree: [ABP].
Visit node ABP and remove it from the graph.
Nodes with 0 in-degree: [NGT].
Visit node NGT and remove it from the graph.
Nodes with 0 in-degree: [XOI, VHU].
Visit node XOI and remove it from the graph.
Nodes with 0 in-degree: [VHU].
Visit node VHU and remove it from the graph.
Nodes with 0 in-degree: [LQC].
Visit node LQC and remove it from the graph.
So the result of topological sorting is ","('[[VCV, OIR, CJK, ABP, VHU, NGT, XOI, LQC], [VCV, OIR, CJK, ABP, NGT, XOI, VHU, LQC], [VCV, VHU, NGT, CJK, XOI, ABP, LQC, OIR], [VCV, OIR, VHU, LQC, CJK, ABP, NGT, XOI]]',)",1,50
topological_sort,"[(ZHE, PBL), (ZHE, UTX), (ZHE, YPB), (PBL, YWX), (PBL, QJW), (PBL, YPB), (PBL, PMY), (PBL, UTX), (YPB, YWX), (YPB, QJW), (YWX, PHA), (YWX, PMY), (YWX, QND), (YWX, HEB), (PMY, QJW), (HEB, PMY), (HEB, UTX), (HEB, QND), (HEB, PHA), (QND, PMY), (QND, UTX), (PHA, EIE), (EIE, UTX), (EIE, QND)]","{ZHE: [PBL, UTX, YPB],
PBL: [YWX, QJW, YPB, PMY, UTX],
UTX: [],
YPB: [YWX, QJW],
YWX: [PHA, PMY, QND, HEB],
QJW: [],
PMY: [QJW],
HEB: [PMY, UTX, QND, PHA],
QND: [PMY, UTX],
PHA: [EIE],
EIE: [UTX, QND]}","Node ZHE is connected to nodes PBL, UTX, YPB.
Node PBL is connected to nodes YWX, QJW, YPB, PMY, UTX.
Node YPB is connected to nodes YWX, QJW.
Node YWX is connected to nodes PHA, PMY, QND, HEB.
Node PMY is connected to node QJW.
Node HEB is connected to nodes PMY, UTX, QND, PHA.
Node QND is connected to nodes PMY, UTX.
Node PHA is connected to node EIE.
Node EIE is connected to nodes UTX, QND.","[PMY, YWX, QND, EIE, QJW, HEB, PBL, UTX, ZHE, YPB, PHA]",11,24,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZHE, PBL, YPB, YWX, HEB, PHA, EIE, QND, PMY, UTX, QJW]","Let's solve it step by step.
Nodes with 0 in-degree: [ZHE].
Visit node ZHE and remove it from the graph.
Nodes with 0 in-degree: [PBL].
Visit node PBL and remove it from the graph.
Nodes with 0 in-degree: [YPB].
Visit node YPB and remove it from the graph.
Nodes with 0 in-degree: [YWX].
Visit node YWX and remove it from the graph.
Nodes with 0 in-degree: [HEB].
Visit node HEB and remove it from the graph.
Nodes with 0 in-degree: [PHA].
Visit node PHA and remove it from the graph.
Nodes with 0 in-degree: [EIE].
Visit node EIE and remove it from the graph.
Nodes with 0 in-degree: [QND].
Visit node QND and remove it from the graph.
Nodes with 0 in-degree: [PMY, UTX].
Visit node PMY and remove it from the graph.
Nodes with 0 in-degree: [UTX, QJW].
Visit node UTX and remove it from the graph.
Nodes with 0 in-degree: [QJW].
Visit node QJW and remove it from the graph.
So the result of topological sorting is ","('[[ZHE, PMY, QND, QJW, YPB, PHA, UTX, EIE, YWX, PBL, HEB], [ZHE, PBL, YPB, YWX, HEB, PHA, EIE, QND, PMY, UTX, QJW], [ZHE, PBL, YPB, PMY, UTX, QJW, YWX, HEB, PHA, EIE, QND], [ZHE, PBL, YPB, YWX, HEB, UTX, QJW, PMY, QND, PHA, EIE]]',)",1,51
topological_sort,"[(QDA, YZG), (QDA, VAI), (YZG, NPS), (YZG, TRR), (WHJ, EGR), (WHJ, VAI), (EGR, TRR), (SGX, WHJ), (DIT, EGR), (DIT, TRR)]","{QDA: [YZG, VAI],
YZG: [NPS, TRR],
VAI: [],
NPS: [],
TRR: [],
WHJ: [EGR, VAI],
EGR: [TRR],
SGX: [WHJ],
DIT: [EGR, TRR]}","Node QDA is connected to nodes YZG, VAI.
Node YZG is connected to nodes NPS, TRR.
Node WHJ is connected to nodes EGR, VAI.
Node EGR is connected to node TRR.
Node SGX is connected to node WHJ.
Node DIT is connected to nodes EGR, TRR.","[SGX, VAI, QDA, WHJ, DIT, YZG, EGR, TRR, NPS]",9,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QDA, SGX, DIT, YZG, WHJ, NPS, EGR, VAI, TRR]","Let's solve it step by step.
Nodes with 0 in-degree: [QDA, SGX, DIT].
Visit node QDA and remove it from the graph.
Nodes with 0 in-degree: [SGX, DIT, YZG].
Visit node SGX and remove it from the graph.
Nodes with 0 in-degree: [DIT, YZG, WHJ].
Visit node DIT and remove it from the graph.
Nodes with 0 in-degree: [YZG, WHJ].
Visit node YZG and remove it from the graph.
Nodes with 0 in-degree: [WHJ, NPS].
Visit node WHJ and remove it from the graph.
Nodes with 0 in-degree: [NPS, EGR, VAI].
Visit node NPS and remove it from the graph.
Nodes with 0 in-degree: [EGR, VAI].
Visit node EGR and remove it from the graph.
Nodes with 0 in-degree: [VAI, TRR].
Visit node VAI and remove it from the graph.
Nodes with 0 in-degree: [TRR].
Visit node TRR and remove it from the graph.
So the result of topological sorting is ","('[[QDA, NPS, SGX, YZG, WHJ, VAI, DIT, TRR, EGR], [QDA, SGX, DIT, EGR, VAI, TRR, YZG, WHJ, NPS], [QDA, SGX, DIT, YZG, WHJ, NPS, EGR, VAI, TRR], [QDA, SGX, DIT, YZG, EGR, WHJ, NPS, TRR, VAI]]',)",2,52
topological_sort,"[(KST, TRP), (TRP, QBA), (QBA, XVJ), (HQU, UNP), (HQU, XVJ), (HQU, SSK), (UNP, SOU), (SSK, FDQ), (SOU, TRP), (SOU, XBN), (SOU, KST), (XBN, VEA), (XBN, XVJ), (VEA, XVJ), (HBL, VEA), (HBL, QBA), (HBL, HQU), (HBL, SSK), (FDQ, KST), (FDQ, SOU), (YIJ, UNP), (YIJ, XBN), (YIJ, HBL)]","{KST: [TRP],
TRP: [QBA],
QBA: [XVJ],
XVJ: [],
HQU: [UNP, XVJ, SSK],
UNP: [SOU],
SSK: [FDQ],
SOU: [TRP, XBN, KST],
XBN: [VEA, XVJ],
VEA: [XVJ],
HBL: [VEA, QBA, HQU, SSK],
FDQ: [KST, SOU],
YIJ: [UNP, XBN, HBL]}","Node KST is connected to node TRP.
Node TRP is connected to node QBA.
Node QBA is connected to node XVJ.
Node HQU is connected to nodes UNP, XVJ, SSK.
Node UNP is connected to node SOU.
Node SSK is connected to node FDQ.
Node SOU is connected to nodes TRP, XBN, KST.
Node XBN is connected to nodes VEA, XVJ.
Node VEA is connected to node XVJ.
Node HBL is connected to nodes VEA, QBA, HQU, SSK.
Node FDQ is connected to nodes KST, SOU.
Node YIJ is connected to nodes UNP, XBN, HBL.","[HQU, XBN, SOU, VEA, TRP, XVJ, UNP, KST, YIJ, QBA, SSK, HBL, FDQ]",13,23,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YIJ, HBL, HQU, UNP, SSK, FDQ, SOU, XBN, KST, VEA, TRP, QBA, XVJ]","Let's solve it step by step.
Nodes with 0 in-degree: [YIJ].
Visit node YIJ and remove it from the graph.
Nodes with 0 in-degree: [HBL].
Visit node HBL and remove it from the graph.
Nodes with 0 in-degree: [HQU].
Visit node HQU and remove it from the graph.
Nodes with 0 in-degree: [UNP, SSK].
Visit node UNP and remove it from the graph.
Nodes with 0 in-degree: [SSK].
Visit node SSK and remove it from the graph.
Nodes with 0 in-degree: [FDQ].
Visit node FDQ and remove it from the graph.
Nodes with 0 in-degree: [SOU].
Visit node SOU and remove it from the graph.
Nodes with 0 in-degree: [XBN, KST].
Visit node XBN and remove it from the graph.
Nodes with 0 in-degree: [KST, VEA].
Visit node KST and remove it from the graph.
Nodes with 0 in-degree: [VEA, TRP].
Visit node VEA and remove it from the graph.
Nodes with 0 in-degree: [TRP].
Visit node TRP and remove it from the graph.
Nodes with 0 in-degree: [QBA].
Visit node QBA and remove it from the graph.
Nodes with 0 in-degree: [XVJ].
Visit node XVJ and remove it from the graph.
So the result of topological sorting is ","('[[YIJ, HBL, HQU, UNP, VEA, TRP, QBA, XVJ, SSK, FDQ, SOU, XBN, KST], [YIJ, HBL, XVJ, QBA, KST, UNP, HQU, SSK, VEA, TRP, SOU, XBN, FDQ], [YIJ, HBL, HQU, UNP, SSK, FDQ, TRP, KST, SOU, QBA, VEA, XVJ, XBN], [YIJ, HBL, HQU, UNP, SSK, FDQ, SOU, XBN, KST, VEA, TRP, QBA, XVJ]]',)",3,53
topological_sort,"[(XFI, SYP), (XFI, AKW), (XFI, DGE), (XFI, GVV), (XFI, FEU), (SYP, DGE), (SYP, GVV), (SYP, AKX), (SYP, HAV), (AKW, AKX), (AKW, LKF), (AKW, GSV), (DGE, XKY), (GVV, FHX), (GVV, GSV), (GVV, DGE), (GVV, AKW), (FEU, HAV), (FEU, AKX), (FEU, SYP), (FEU, DGE), (AKX, ZOQ), (HAV, DBW), (XKY, FHX), (XKY, HAV), (FHX, HAV), (FHX, DBW), (LKF, DGE), (LKF, FHX), (GSV, DBW), (ZOQ, DGE)]","{XFI: [SYP, AKW, DGE, GVV, FEU],
SYP: [DGE, GVV, AKX, HAV],
AKW: [AKX, LKF, GSV],
DGE: [XKY],
GVV: [FHX, GSV, DGE, AKW],
FEU: [HAV, AKX, SYP, DGE],
AKX: [ZOQ],
HAV: [DBW],
XKY: [FHX, HAV],
FHX: [HAV, DBW],
DBW: [],
LKF: [DGE, FHX],
GSV: [DBW],
ZOQ: [DGE]}","Node XFI is connected to nodes SYP, AKW, DGE, GVV, FEU.
Node SYP is connected to nodes DGE, GVV, AKX, HAV.
Node AKW is connected to nodes AKX, LKF, GSV.
Node DGE is connected to node XKY.
Node GVV is connected to nodes FHX, GSV, DGE, AKW.
Node FEU is connected to nodes HAV, AKX, SYP, DGE.
Node AKX is connected to node ZOQ.
Node HAV is connected to node DBW.
Node XKY is connected to nodes FHX, HAV.
Node FHX is connected to nodes HAV, DBW.
Node LKF is connected to nodes DGE, FHX.
Node GSV is connected to node DBW.
Node ZOQ is connected to node DGE.","[AKX, HAV, GSV, AKW, ZOQ, FHX, GVV, DBW, FEU, XFI, DGE, SYP, XKY, LKF]",14,31,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XFI, FEU, SYP, GVV, AKW, AKX, LKF, GSV, ZOQ, DGE, XKY, FHX, HAV, DBW]","Let's solve it step by step.
Nodes with 0 in-degree: [XFI].
Visit node XFI and remove it from the graph.
Nodes with 0 in-degree: [FEU].
Visit node FEU and remove it from the graph.
Nodes with 0 in-degree: [SYP].
Visit node SYP and remove it from the graph.
Nodes with 0 in-degree: [GVV].
Visit node GVV and remove it from the graph.
Nodes with 0 in-degree: [AKW].
Visit node AKW and remove it from the graph.
Nodes with 0 in-degree: [AKX, LKF, GSV].
Visit node AKX and remove it from the graph.
Nodes with 0 in-degree: [LKF, GSV, ZOQ].
Visit node LKF and remove it from the graph.
Nodes with 0 in-degree: [GSV, ZOQ].
Visit node GSV and remove it from the graph.
Nodes with 0 in-degree: [ZOQ].
Visit node ZOQ and remove it from the graph.
Nodes with 0 in-degree: [DGE].
Visit node DGE and remove it from the graph.
Nodes with 0 in-degree: [XKY].
Visit node XKY and remove it from the graph.
Nodes with 0 in-degree: [FHX].
Visit node FHX and remove it from the graph.
Nodes with 0 in-degree: [HAV].
Visit node HAV and remove it from the graph.
Nodes with 0 in-degree: [DBW].
Visit node DBW and remove it from the graph.
So the result of topological sorting is ","('[[XFI, FEU, SYP, GVV, AKW, AKX, LKF, XKY, DBW, HAV, ZOQ, FHX, GSV, DGE], [XFI, LKF, SYP, ZOQ, DGE, AKX, HAV, FEU, DBW, AKW, XKY, GVV, FHX, GSV], [XFI, FEU, SYP, GVV, AKW, AKX, LKF, GSV, ZOQ, DGE, XKY, FHX, HAV, DBW], [XFI, FEU, SYP, GVV, XKY, FHX, HAV, DBW, AKW, AKX, LKF, GSV, ZOQ, DGE]]',)",2,54
topological_sort,"[(LZF, JHU), (LZF, LSK), (LZF, UNF), (JHU, UNF), (JHU, LLC), (JHU, RIG), (JHU, LSK), (LSK, OEN), (LSK, UNF), (LSK, ECM), (LLC, RIG), (LLC, IAD), (RIG, LSK), (OEN, UNF), (ECM, UNF), (ECM, OEN), (ZRP, UNF), (ZRP, IAD), (ZRP, XIM), (ZRP, LZF), (ZRP, ECM), (XIM, LSK), (XIM, UNF), (CWD, UNF), (CWD, ZRP), (CWD, IAD), (CWD, LLC), (WMK, ZRP), (WMK, ECM), (IKO, ZRP), (IKO, LZF)]","{LZF: [JHU, LSK, UNF],
JHU: [UNF, LLC, RIG, LSK],
LSK: [OEN, UNF, ECM],
UNF: [],
LLC: [RIG, IAD],
RIG: [LSK],
IAD: [],
OEN: [UNF],
ECM: [UNF, OEN],
ZRP: [UNF, IAD, XIM, LZF, ECM],
XIM: [LSK, UNF],
CWD: [UNF, ZRP, IAD, LLC],
WMK: [ZRP, ECM],
IKO: [ZRP, LZF]}","Node LZF is connected to nodes JHU, LSK, UNF.
Node JHU is connected to nodes UNF, LLC, RIG, LSK.
Node LSK is connected to nodes OEN, UNF, ECM.
Node LLC is connected to nodes RIG, IAD.
Node RIG is connected to node LSK.
Node OEN is connected to node UNF.
Node ECM is connected to nodes UNF, OEN.
Node ZRP is connected to nodes UNF, IAD, XIM, LZF, ECM.
Node XIM is connected to nodes LSK, UNF.
Node CWD is connected to nodes UNF, ZRP, IAD, LLC.
Node WMK is connected to nodes ZRP, ECM.
Node IKO is connected to nodes ZRP, LZF.","[ZRP, IAD, XIM, LSK, WMK, JHU, LZF, UNF, OEN, ECM, RIG, IKO, LLC, CWD]",14,31,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CWD, WMK, IKO, ZRP, XIM, LZF, JHU, LLC, RIG, IAD, LSK, ECM, OEN, UNF]","Let's solve it step by step.
Nodes with 0 in-degree: [CWD, WMK, IKO].
Visit node CWD and remove it from the graph.
Nodes with 0 in-degree: [WMK, IKO].
Visit node WMK and remove it from the graph.
Nodes with 0 in-degree: [IKO].
Visit node IKO and remove it from the graph.
Nodes with 0 in-degree: [ZRP].
Visit node ZRP and remove it from the graph.
Nodes with 0 in-degree: [XIM, LZF].
Visit node XIM and remove it from the graph.
Nodes with 0 in-degree: [LZF].
Visit node LZF and remove it from the graph.
Nodes with 0 in-degree: [JHU].
Visit node JHU and remove it from the graph.
Nodes with 0 in-degree: [LLC].
Visit node LLC and remove it from the graph.
Nodes with 0 in-degree: [RIG, IAD].
Visit node RIG and remove it from the graph.
Nodes with 0 in-degree: [IAD, LSK].
Visit node IAD and remove it from the graph.
Nodes with 0 in-degree: [LSK].
Visit node LSK and remove it from the graph.
Nodes with 0 in-degree: [ECM].
Visit node ECM and remove it from the graph.
Nodes with 0 in-degree: [OEN].
Visit node OEN and remove it from the graph.
Nodes with 0 in-degree: [UNF].
Visit node UNF and remove it from the graph.
So the result of topological sorting is ","('[[CWD, WMK, IKO, ZRP, XIM, LZF, JHU, IAD, RIG, LSK, UNF, OEN, LLC, ECM], [CWD, WMK, IKO, ZRP, XIM, LZF, JHU, LLC, RIG, IAD, LSK, ECM, OEN, UNF], [CWD, WMK, IKO, ZRP, LSK, ECM, OEN, UNF, XIM, LZF, JHU, LLC, RIG, IAD], [CWD, LSK, ZRP, IKO, JHU, ECM, LZF, IAD, UNF, RIG, XIM, OEN, WMK, LLC]]',)",1,55
topological_sort,"[(DCO, CRP), (CRP, KIP), (PZJ, CRP), (PZJ, KIP), (DDF, SSB), (DDF, ZJK), (DDF, KIP), (SSB, PZJ), (ZJK, SSB), (ZJK, NRQ), (ZJK, PZJ), (VGZ, KIP)]","{DCO: [CRP],
CRP: [KIP],
KIP: [],
PZJ: [CRP, KIP],
DDF: [SSB, ZJK, KIP],
SSB: [PZJ],
ZJK: [SSB, NRQ, PZJ],
NRQ: [],
VGZ: [KIP]}","Node DCO is connected to node CRP.
Node CRP is connected to node KIP.
Node PZJ is connected to nodes CRP, KIP.
Node DDF is connected to nodes SSB, ZJK, KIP.
Node SSB is connected to node PZJ.
Node ZJK is connected to nodes SSB, NRQ, PZJ.
Node VGZ is connected to node KIP.","[NRQ, PZJ, CRP, DCO, DDF, ZJK, VGZ, SSB, KIP]",9,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DCO, DDF, VGZ, ZJK, SSB, NRQ, PZJ, CRP, KIP]","Let's solve it step by step.
Nodes with 0 in-degree: [DCO, DDF, VGZ].
Visit node DCO and remove it from the graph.
Nodes with 0 in-degree: [DDF, VGZ].
Visit node DDF and remove it from the graph.
Nodes with 0 in-degree: [VGZ, ZJK].
Visit node VGZ and remove it from the graph.
Nodes with 0 in-degree: [ZJK].
Visit node ZJK and remove it from the graph.
Nodes with 0 in-degree: [SSB, NRQ].
Visit node SSB and remove it from the graph.
Nodes with 0 in-degree: [NRQ, PZJ].
Visit node NRQ and remove it from the graph.
Nodes with 0 in-degree: [PZJ].
Visit node PZJ and remove it from the graph.
Nodes with 0 in-degree: [CRP].
Visit node CRP and remove it from the graph.
Nodes with 0 in-degree: [KIP].
Visit node KIP and remove it from the graph.
So the result of topological sorting is ","('[[DCO, CRP, NRQ, ZJK, DDF, SSB, VGZ, PZJ, KIP], [DCO, DDF, VGZ, PZJ, CRP, KIP, ZJK, SSB, NRQ], [DCO, DDF, VGZ, ZJK, CRP, SSB, KIP, PZJ, NRQ], [DCO, DDF, VGZ, ZJK, SSB, NRQ, PZJ, CRP, KIP]]',)",3,56
topological_sort,"[(XIJ, QIM), (XIJ, RCT), (RCT, OZQ), (DIT, OZQ), (DIT, RCT), (OZQ, ODN), (ERN, DIT), (ERN, OZQ), (CTW, QIM), (CTW, ERN), (CTW, ODN), (CTW, DIT), (KDT, RCT), (KDT, QIM)]","{XIJ: [QIM, RCT],
QIM: [],
RCT: [OZQ],
DIT: [OZQ, RCT],
OZQ: [ODN],
ODN: [],
ERN: [DIT, OZQ],
CTW: [QIM, ERN, ODN, DIT],
KDT: [RCT, QIM]}","Node XIJ is connected to nodes QIM, RCT.
Node RCT is connected to node OZQ.
Node DIT is connected to nodes OZQ, RCT.
Node OZQ is connected to node ODN.
Node ERN is connected to nodes DIT, OZQ.
Node CTW is connected to nodes QIM, ERN, ODN, DIT.
Node KDT is connected to nodes RCT, QIM.","[CTW, XIJ, OZQ, ERN, DIT, QIM, ODN, KDT, RCT]",9,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XIJ, CTW, KDT, ERN, QIM, DIT, RCT, OZQ, ODN]","Let's solve it step by step.
Nodes with 0 in-degree: [XIJ, CTW, KDT].
Visit node XIJ and remove it from the graph.
Nodes with 0 in-degree: [CTW, KDT].
Visit node CTW and remove it from the graph.
Nodes with 0 in-degree: [KDT, ERN].
Visit node KDT and remove it from the graph.
Nodes with 0 in-degree: [ERN, QIM].
Visit node ERN and remove it from the graph.
Nodes with 0 in-degree: [QIM, DIT].
Visit node QIM and remove it from the graph.
Nodes with 0 in-degree: [DIT].
Visit node DIT and remove it from the graph.
Nodes with 0 in-degree: [RCT].
Visit node RCT and remove it from the graph.
Nodes with 0 in-degree: [OZQ].
Visit node OZQ and remove it from the graph.
Nodes with 0 in-degree: [ODN].
Visit node ODN and remove it from the graph.
So the result of topological sorting is ","('[[XIJ, ERN, OZQ, RCT, CTW, DIT, QIM, ODN, KDT], [XIJ, CTW, KDT, ERN, QIM, DIT, RCT, OZQ, ODN], [XIJ, CTW, KDT, RCT, OZQ, ODN, ERN, QIM, DIT], [XIJ, CTW, KDT, ERN, ODN, OZQ, QIM, RCT, DIT]]',)",1,57
topological_sort,"[(JRM, RSX), (JRM, VSA), (JRM, KAL), (RSX, KAL), (RSX, UEF), (KAL, VSA), (KAL, CJG), (UEF, KAL), (UEF, QIO), (QIO, VSA), (CJG, VSA), (XQY, JRM), (XQY, VSA), (XQY, RSX), (ZWC, LLV), (ZWC, XQY), (ZWC, QIO), (ZWC, RSX), (ZWC, JRM), (LLV, VSA), (LLV, XQY), (LLV, GOO), (GOO, UEF), (GOO, RSX), (ZHY, KAL), (ZHY, XQY), (ZHY, UEF), (ZHY, ZWC), (ZHY, ACY), (ACY, ZWC), (ACY, QIO), (ACY, CJG)]","{JRM: [RSX, VSA, KAL],
RSX: [KAL, UEF],
VSA: [],
KAL: [VSA, CJG],
UEF: [KAL, QIO],
QIO: [VSA],
CJG: [VSA],
XQY: [JRM, VSA, RSX],
ZWC: [LLV, XQY, QIO, RSX, JRM],
LLV: [VSA, XQY, GOO],
GOO: [UEF, RSX],
ZHY: [KAL, XQY, UEF, ZWC, ACY],
ACY: [ZWC, QIO, CJG]}","Node JRM is connected to nodes RSX, VSA, KAL.
Node RSX is connected to nodes KAL, UEF.
Node KAL is connected to nodes VSA, CJG.
Node UEF is connected to nodes KAL, QIO.
Node QIO is connected to node VSA.
Node CJG is connected to node VSA.
Node XQY is connected to nodes JRM, VSA, RSX.
Node ZWC is connected to nodes LLV, XQY, QIO, RSX, JRM.
Node LLV is connected to nodes VSA, XQY, GOO.
Node GOO is connected to nodes UEF, RSX.
Node ZHY is connected to nodes KAL, XQY, UEF, ZWC, ACY.
Node ACY is connected to nodes ZWC, QIO, CJG.","[GOO, CJG, XQY, ZHY, LLV, JRM, KAL, RSX, UEF, QIO, ACY, VSA, ZWC]",13,32,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZHY, ACY, ZWC, LLV, XQY, GOO, JRM, RSX, UEF, KAL, QIO, CJG, VSA]","Let's solve it step by step.
Nodes with 0 in-degree: [ZHY].
Visit node ZHY and remove it from the graph.
Nodes with 0 in-degree: [ACY].
Visit node ACY and remove it from the graph.
Nodes with 0 in-degree: [ZWC].
Visit node ZWC and remove it from the graph.
Nodes with 0 in-degree: [LLV].
Visit node LLV and remove it from the graph.
Nodes with 0 in-degree: [XQY, GOO].
Visit node XQY and remove it from the graph.
Nodes with 0 in-degree: [GOO, JRM].
Visit node GOO and remove it from the graph.
Nodes with 0 in-degree: [JRM].
Visit node JRM and remove it from the graph.
Nodes with 0 in-degree: [RSX].
Visit node RSX and remove it from the graph.
Nodes with 0 in-degree: [UEF].
Visit node UEF and remove it from the graph.
Nodes with 0 in-degree: [KAL, QIO].
Visit node KAL and remove it from the graph.
Nodes with 0 in-degree: [QIO, CJG].
Visit node QIO and remove it from the graph.
Nodes with 0 in-degree: [CJG].
Visit node CJG and remove it from the graph.
Nodes with 0 in-degree: [VSA].
Visit node VSA and remove it from the graph.
So the result of topological sorting is ","('[[ZHY, ACY, ZWC, LLV, XQY, GOO, JRM, RSX, UEF, KAL, QIO, CJG, VSA], [ZHY, ACY, ZWC, LLV, KAL, QIO, CJG, VSA, XQY, GOO, JRM, RSX, UEF], [ZHY, ACY, QIO, UEF, JRM, VSA, XQY, RSX, KAL, CJG, ZWC, GOO, LLV], [ZHY, ACY, ZWC, LLV, XQY, GOO, JRM, RSX, VSA, QIO, UEF, KAL, CJG]]',)",0,58
topological_sort,"[(UWB, NYG), (UWB, PQN), (NYG, ZWC), (NYG, EWW), (NYG, CUR), (PQN, VCI), (PQN, CUR), (PQN, JDS), (ZWC, EWW), (ZWC, CUR), (EWW, XKU), (EWW, QEK), (CUR, XLX), (QEK, XLX), (QEK, XKU), (AOC, UWB), (AOC, SRQ), (AOC, XKU), (AOC, JDS), (SRQ, EWW), (SRQ, NYG), (SRQ, CUR), (JDS, ZWC), (JDS, QEK), (JDS, EWW), (JDS, SRQ), (JDS, VCI), (JDS, XKU), (VCI, XLX), (VCI, ZWC), (VCI, SRQ), (WKW, QEK), (WKW, PQN), (WKW, AOC), (WKW, SRQ), (WKW, NYG)]","{UWB: [NYG, PQN],
NYG: [ZWC, EWW, CUR],
PQN: [VCI, CUR, JDS],
ZWC: [EWW, CUR],
EWW: [XKU, QEK],
CUR: [XLX],
QEK: [XLX, XKU],
XLX: [],
XKU: [],
AOC: [UWB, SRQ, XKU, JDS],
SRQ: [EWW, NYG, CUR],
JDS: [ZWC, QEK, EWW, SRQ, VCI, XKU],
VCI: [XLX, ZWC, SRQ],
WKW: [QEK, PQN, AOC, SRQ, NYG]}","Node UWB is connected to nodes NYG, PQN.
Node NYG is connected to nodes ZWC, EWW, CUR.
Node PQN is connected to nodes VCI, CUR, JDS.
Node ZWC is connected to nodes EWW, CUR.
Node EWW is connected to nodes XKU, QEK.
Node CUR is connected to node XLX.
Node QEK is connected to nodes XLX, XKU.
Node AOC is connected to nodes UWB, SRQ, XKU, JDS.
Node SRQ is connected to nodes EWW, NYG, CUR.
Node JDS is connected to nodes ZWC, QEK, EWW, SRQ, VCI, XKU.
Node VCI is connected to nodes XLX, ZWC, SRQ.
Node WKW is connected to nodes QEK, PQN, AOC, SRQ, NYG.","[VCI, EWW, XLX, CUR, UWB, WKW, JDS, XKU, ZWC, AOC, SRQ, NYG, QEK, PQN]",14,36,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WKW, AOC, UWB, PQN, JDS, VCI, SRQ, NYG, ZWC, EWW, CUR, QEK, XLX, XKU]","Let's solve it step by step.
Nodes with 0 in-degree: [WKW].
Visit node WKW and remove it from the graph.
Nodes with 0 in-degree: [AOC].
Visit node AOC and remove it from the graph.
Nodes with 0 in-degree: [UWB].
Visit node UWB and remove it from the graph.
Nodes with 0 in-degree: [PQN].
Visit node PQN and remove it from the graph.
Nodes with 0 in-degree: [JDS].
Visit node JDS and remove it from the graph.
Nodes with 0 in-degree: [VCI].
Visit node VCI and remove it from the graph.
Nodes with 0 in-degree: [SRQ].
Visit node SRQ and remove it from the graph.
Nodes with 0 in-degree: [NYG].
Visit node NYG and remove it from the graph.
Nodes with 0 in-degree: [ZWC].
Visit node ZWC and remove it from the graph.
Nodes with 0 in-degree: [EWW, CUR].
Visit node EWW and remove it from the graph.
Nodes with 0 in-degree: [CUR, QEK].
Visit node CUR and remove it from the graph.
Nodes with 0 in-degree: [QEK].
Visit node QEK and remove it from the graph.
Nodes with 0 in-degree: [XLX, XKU].
Visit node XLX and remove it from the graph.
Nodes with 0 in-degree: [XKU].
Visit node XKU and remove it from the graph.
So the result of topological sorting is ","('[[WKW, AOC, UWB, PQN, CUR, QEK, XLX, XKU, JDS, VCI, SRQ, NYG, ZWC, EWW], [WKW, AOC, UWB, PQN, JDS, VCI, SRQ, CUR, EWW, XKU, ZWC, XLX, QEK, NYG], [WKW, XKU, NYG, UWB, PQN, QEK, SRQ, AOC, CUR, VCI, EWW, JDS, ZWC, XLX], [WKW, AOC, UWB, PQN, JDS, VCI, SRQ, NYG, ZWC, EWW, CUR, QEK, XLX, XKU]]',)",3,59
topological_sort,"[(HJC, USC), (HJC, SGH), (HJC, WHG), (USC, JCN), (USC, ZVP), (USC, MAO), (SGH, ANC), (SGH, VNT), (ZVP, WHG), (MAO, VNT), (PVC, WHG), (PVC, ANC), (PVC, LHR), (ANC, WHG), (LHR, USC), (LHR, BQS), (KWW, LHR)]","{HJC: [USC, SGH, WHG],
USC: [JCN, ZVP, MAO],
SGH: [ANC, VNT],
WHG: [],
JCN: [],
ZVP: [WHG],
MAO: [VNT],
PVC: [WHG, ANC, LHR],
ANC: [WHG],
LHR: [USC, BQS],
VNT: [],
BQS: [],
KWW: [LHR]}","Node HJC is connected to nodes USC, SGH, WHG.
Node USC is connected to nodes JCN, ZVP, MAO.
Node SGH is connected to nodes ANC, VNT.
Node ZVP is connected to node WHG.
Node MAO is connected to node VNT.
Node PVC is connected to nodes WHG, ANC, LHR.
Node ANC is connected to node WHG.
Node LHR is connected to nodes USC, BQS.
Node KWW is connected to node LHR.","[USC, BQS, KWW, LHR, SGH, JCN, ZVP, WHG, VNT, ANC, MAO, HJC, PVC]",13,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HJC, PVC, KWW, SGH, LHR, ANC, USC, BQS, JCN, ZVP, MAO, WHG, VNT]","Let's solve it step by step.
Nodes with 0 in-degree: [HJC, PVC, KWW].
Visit node HJC and remove it from the graph.
Nodes with 0 in-degree: [PVC, KWW, SGH].
Visit node PVC and remove it from the graph.
Nodes with 0 in-degree: [KWW, SGH].
Visit node KWW and remove it from the graph.
Nodes with 0 in-degree: [SGH, LHR].
Visit node SGH and remove it from the graph.
Nodes with 0 in-degree: [LHR, ANC].
Visit node LHR and remove it from the graph.
Nodes with 0 in-degree: [ANC, USC, BQS].
Visit node ANC and remove it from the graph.
Nodes with 0 in-degree: [USC, BQS].
Visit node USC and remove it from the graph.
Nodes with 0 in-degree: [BQS, JCN, ZVP, MAO].
Visit node BQS and remove it from the graph.
Nodes with 0 in-degree: [JCN, ZVP, MAO].
Visit node JCN and remove it from the graph.
Nodes with 0 in-degree: [ZVP, MAO].
Visit node ZVP and remove it from the graph.
Nodes with 0 in-degree: [MAO, WHG].
Visit node MAO and remove it from the graph.
Nodes with 0 in-degree: [WHG, VNT].
Visit node WHG and remove it from the graph.
Nodes with 0 in-degree: [VNT].
Visit node VNT and remove it from the graph.
So the result of topological sorting is ","('[[HJC, PVC, KWW, SGH, LHR, ANC, JCN, VNT, WHG, USC, BQS, MAO, ZVP], [HJC, SGH, USC, PVC, JCN, ANC, LHR, WHG, MAO, VNT, KWW, BQS, ZVP], [HJC, PVC, KWW, SGH, LHR, ANC, USC, BQS, JCN, ZVP, MAO, WHG, VNT], [HJC, PVC, KWW, SGH, ZVP, MAO, WHG, VNT, LHR, ANC, USC, BQS, JCN]]',)",2,60
topological_sort,"[(ISE, JLV), (ISE, BYB), (ISE, NLL), (ISE, MNZ), (ISE, TQF), (JLV, IGV), (JLV, MNZ), (JLV, NLL), (MNZ, BYB), (IGV, DRZ), (DRZ, CON), (CON, MNZ), (CON, TQF), (CON, ATX), (CON, NLL), (ATX, NLL), (HGH, TQF), (HGH, JLV), (JOJ, JLV), (JOJ, BYB), (QMJ, NLL), (QMJ, ISE)]","{ISE: [JLV, BYB, NLL, MNZ, TQF],
JLV: [IGV, MNZ, NLL],
BYB: [],
NLL: [],
MNZ: [BYB],
TQF: [],
IGV: [DRZ],
DRZ: [CON],
CON: [MNZ, TQF, ATX, NLL],
ATX: [NLL],
HGH: [TQF, JLV],
JOJ: [JLV, BYB],
QMJ: [NLL, ISE]}","Node ISE is connected to nodes JLV, BYB, NLL, MNZ, TQF.
Node JLV is connected to nodes IGV, MNZ, NLL.
Node MNZ is connected to node BYB.
Node IGV is connected to node DRZ.
Node DRZ is connected to node CON.
Node CON is connected to nodes MNZ, TQF, ATX, NLL.
Node ATX is connected to node NLL.
Node HGH is connected to nodes TQF, JLV.
Node JOJ is connected to nodes JLV, BYB.
Node QMJ is connected to nodes NLL, ISE.","[IGV, ATX, ISE, MNZ, NLL, HGH, CON, JOJ, JLV, TQF, BYB, DRZ, QMJ]",13,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HGH, JOJ, QMJ, ISE, JLV, IGV, DRZ, CON, MNZ, TQF, ATX, BYB, NLL]","Let's solve it step by step.
Nodes with 0 in-degree: [HGH, JOJ, QMJ].
Visit node HGH and remove it from the graph.
Nodes with 0 in-degree: [JOJ, QMJ].
Visit node JOJ and remove it from the graph.
Nodes with 0 in-degree: [QMJ].
Visit node QMJ and remove it from the graph.
Nodes with 0 in-degree: [ISE].
Visit node ISE and remove it from the graph.
Nodes with 0 in-degree: [JLV].
Visit node JLV and remove it from the graph.
Nodes with 0 in-degree: [IGV].
Visit node IGV and remove it from the graph.
Nodes with 0 in-degree: [DRZ].
Visit node DRZ and remove it from the graph.
Nodes with 0 in-degree: [CON].
Visit node CON and remove it from the graph.
Nodes with 0 in-degree: [MNZ, TQF, ATX].
Visit node MNZ and remove it from the graph.
Nodes with 0 in-degree: [TQF, ATX, BYB].
Visit node TQF and remove it from the graph.
Nodes with 0 in-degree: [ATX, BYB].
Visit node ATX and remove it from the graph.
Nodes with 0 in-degree: [BYB, NLL].
Visit node BYB and remove it from the graph.
Nodes with 0 in-degree: [NLL].
Visit node NLL and remove it from the graph.
So the result of topological sorting is ","('[[HGH, JLV, BYB, IGV, QMJ, ISE, TQF, MNZ, CON, ATX, JOJ, NLL, DRZ], [HGH, JOJ, QMJ, ISE, JLV, IGV, MNZ, NLL, DRZ, BYB, ATX, TQF, CON], [HGH, JOJ, QMJ, ISE, JLV, IGV, DRZ, CON, MNZ, TQF, ATX, BYB, NLL], [HGH, JOJ, QMJ, ISE, TQF, ATX, BYB, NLL, JLV, IGV, DRZ, CON, MNZ]]',)",2,61
topological_sort,"[(VIU, WIO), (VIU, WBU), (WBU, MYD), (WBU, WIO), (JZN, LJF), (LJF, WIO), (MYD, WFK), (MYD, FNW), (WFK, WIO), (FNW, WIO), (FNW, JZN), (PQS, LJF), (PQS, WBU), (PQS, JZN), (GSA, WBU), (GSA, JZN), (GSA, VIU), (YXM, JZN), (YXM, VIU), (YXM, UKF), (UKF, GSA), (UKF, WFK), (UKF, VIU), (UKF, LJF)]","{VIU: [WIO, WBU],
WIO: [],
WBU: [MYD, WIO],
JZN: [LJF],
LJF: [WIO],
MYD: [WFK, FNW],
WFK: [WIO],
FNW: [WIO, JZN],
PQS: [LJF, WBU, JZN],
GSA: [WBU, JZN, VIU],
YXM: [JZN, VIU, UKF],
UKF: [GSA, WFK, VIU, LJF]}","Node VIU is connected to nodes WIO, WBU.
Node WBU is connected to nodes MYD, WIO.
Node JZN is connected to node LJF.
Node LJF is connected to node WIO.
Node MYD is connected to nodes WFK, FNW.
Node WFK is connected to node WIO.
Node FNW is connected to nodes WIO, JZN.
Node PQS is connected to nodes LJF, WBU, JZN.
Node GSA is connected to nodes WBU, JZN, VIU.
Node YXM is connected to nodes JZN, VIU, UKF.
Node UKF is connected to nodes GSA, WFK, VIU, LJF.","[MYD, GSA, YXM, FNW, PQS, LJF, WBU, JZN, VIU, WIO, UKF, WFK]",12,24,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PQS, YXM, UKF, GSA, VIU, WBU, MYD, WFK, FNW, JZN, LJF, WIO]","Let's solve it step by step.
Nodes with 0 in-degree: [PQS, YXM].
Visit node PQS and remove it from the graph.
Nodes with 0 in-degree: [YXM].
Visit node YXM and remove it from the graph.
Nodes with 0 in-degree: [UKF].
Visit node UKF and remove it from the graph.
Nodes with 0 in-degree: [GSA].
Visit node GSA and remove it from the graph.
Nodes with 0 in-degree: [VIU].
Visit node VIU and remove it from the graph.
Nodes with 0 in-degree: [WBU].
Visit node WBU and remove it from the graph.
Nodes with 0 in-degree: [MYD].
Visit node MYD and remove it from the graph.
Nodes with 0 in-degree: [WFK, FNW].
Visit node WFK and remove it from the graph.
Nodes with 0 in-degree: [FNW].
Visit node FNW and remove it from the graph.
Nodes with 0 in-degree: [JZN].
Visit node JZN and remove it from the graph.
Nodes with 0 in-degree: [LJF].
Visit node LJF and remove it from the graph.
Nodes with 0 in-degree: [WIO].
Visit node WIO and remove it from the graph.
So the result of topological sorting is ","('[[PQS, FNW, GSA, UKF, WIO, LJF, YXM, JZN, WBU, VIU, WFK, MYD], [PQS, YXM, UKF, GSA, VIU, WBU, JZN, WIO, MYD, WFK, LJF, FNW], [PQS, YXM, UKF, GSA, VIU, WBU, MYD, WFK, FNW, JZN, LJF, WIO], [PQS, YXM, UKF, GSA, FNW, JZN, LJF, WIO, VIU, WBU, MYD, WFK]]',)",2,62
topological_sort,"[(SXV, YTE), (SXV, FFZ), (SXV, SUN), (SXV, SOO), (SXV, CDS), (SXV, SZM), (YTE, MCP), (YTE, FFZ), (YTE, SUN), (SUN, CDS), (SUN, FFZ), (SUN, MCP), (CDS, FZB), (CDS, SZM), (CDS, FFZ), (SZM, FZB), (MCP, CDS), (MCP, SZM), (MCP, FFZ), (FZB, SOO), (FZB, FFZ), (STM, MCP), (STM, SOO), (STM, SUN), (STM, FZB), (STM, SXV), (STM, CDS)]","{SXV: [YTE, FFZ, SUN, SOO, CDS, SZM],
YTE: [MCP, FFZ, SUN],
FFZ: [],
SUN: [CDS, FFZ, MCP],
SOO: [],
CDS: [FZB, SZM, FFZ],
SZM: [FZB],
MCP: [CDS, SZM, FFZ],
FZB: [SOO, FFZ],
STM: [MCP, SOO, SUN, FZB, SXV, CDS]}","Node SXV is connected to nodes YTE, FFZ, SUN, SOO, CDS, SZM.
Node YTE is connected to nodes MCP, FFZ, SUN.
Node SUN is connected to nodes CDS, FFZ, MCP.
Node CDS is connected to nodes FZB, SZM, FFZ.
Node SZM is connected to node FZB.
Node MCP is connected to nodes CDS, SZM, FFZ.
Node FZB is connected to nodes SOO, FFZ.
Node STM is connected to nodes MCP, SOO, SUN, FZB, SXV, CDS.","[STM, SOO, YTE, MCP, CDS, FFZ, FZB, SZM, SXV, SUN]",10,27,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[STM, SXV, YTE, SUN, MCP, CDS, SZM, FZB, SOO, FFZ]","Let's solve it step by step.
Nodes with 0 in-degree: [STM].
Visit node STM and remove it from the graph.
Nodes with 0 in-degree: [SXV].
Visit node SXV and remove it from the graph.
Nodes with 0 in-degree: [YTE].
Visit node YTE and remove it from the graph.
Nodes with 0 in-degree: [SUN].
Visit node SUN and remove it from the graph.
Nodes with 0 in-degree: [MCP].
Visit node MCP and remove it from the graph.
Nodes with 0 in-degree: [CDS].
Visit node CDS and remove it from the graph.
Nodes with 0 in-degree: [SZM].
Visit node SZM and remove it from the graph.
Nodes with 0 in-degree: [FZB].
Visit node FZB and remove it from the graph.
Nodes with 0 in-degree: [SOO, FFZ].
Visit node SOO and remove it from the graph.
Nodes with 0 in-degree: [FFZ].
Visit node FFZ and remove it from the graph.
So the result of topological sorting is ","('[[STM, SXV, YTE, FZB, SOO, FFZ, SUN, MCP, CDS, SZM], [STM, SXV, YTE, SUN, MCP, FZB, CDS, SOO, SZM, FFZ], [STM, SXV, YTE, SUN, MCP, CDS, SZM, FZB, SOO, FFZ], [STM, YTE, FFZ, SZM, SUN, SOO, FZB, MCP, CDS, SXV]]',)",2,63
topological_sort,"[(ENN, OKV), (ENN, DWY), (ENN, SNX), (ENN, GYZ), (OKV, GYZ), (OKV, KFX), (DWY, SNX), (DWY, UWA), (DWY, JEH), (DWY, KFX), (KFX, SNX), (KFX, GYZ), (JEH, KFX), (JEH, SNX), (JEH, OKV), (UWA, GYZ), (UWA, OKV), (UWA, JEH)]","{ENN: [OKV, DWY, SNX, GYZ],
OKV: [GYZ, KFX],
DWY: [SNX, UWA, JEH, KFX],
SNX: [],
GYZ: [],
KFX: [SNX, GYZ],
JEH: [KFX, SNX, OKV],
UWA: [GYZ, OKV, JEH]}","Node ENN is connected to nodes OKV, DWY, SNX, GYZ.
Node OKV is connected to nodes GYZ, KFX.
Node DWY is connected to nodes SNX, UWA, JEH, KFX.
Node KFX is connected to nodes SNX, GYZ.
Node JEH is connected to nodes KFX, SNX, OKV.
Node UWA is connected to nodes GYZ, OKV, JEH.","[KFX, DWY, UWA, OKV, JEH, ENN, SNX, GYZ]",8,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ENN, DWY, UWA, JEH, OKV, KFX, SNX, GYZ]","Let's solve it step by step.
Nodes with 0 in-degree: [ENN].
Visit node ENN and remove it from the graph.
Nodes with 0 in-degree: [DWY].
Visit node DWY and remove it from the graph.
Nodes with 0 in-degree: [UWA].
Visit node UWA and remove it from the graph.
Nodes with 0 in-degree: [JEH].
Visit node JEH and remove it from the graph.
Nodes with 0 in-degree: [OKV].
Visit node OKV and remove it from the graph.
Nodes with 0 in-degree: [KFX].
Visit node KFX and remove it from the graph.
Nodes with 0 in-degree: [SNX, GYZ].
Visit node SNX and remove it from the graph.
Nodes with 0 in-degree: [GYZ].
Visit node GYZ and remove it from the graph.
So the result of topological sorting is ","('[[ENN, DWY, UWA, JEH, GYZ, SNX, OKV, KFX], [ENN, DWY, SNX, GYZ, UWA, JEH, OKV, KFX], [ENN, GYZ, OKV, SNX, KFX, DWY, UWA, JEH], [ENN, DWY, UWA, JEH, OKV, KFX, SNX, GYZ]]',)",3,64
topological_sort,"[(NUQ, YOV), (NUQ, NNK), (NNK, YOV), (ZNI, BUH), (ZNI, QRO), (ZNI, YOV), (BUH, NNK), (QRO, BUH), (QRO, NUQ), (QRO, HGC), (HGC, YOV), (CUQ, NIC), (CUQ, JYE), (CUQ, XKO), (CUQ, ZNI), (NIC, ZNI), (NIC, YOV), (JYE, AAP), (XKO, AAP), (XKO, CVM), (AAP, GLI), (AAP, NIC), (GLI, ZNI), (GLI, CVM), (CVM, NUQ), (CVM, YOV), (CVM, QRO), (CVM, NIC)]","{NUQ: [YOV, NNK],
YOV: [],
NNK: [YOV],
ZNI: [BUH, QRO, YOV],
BUH: [NNK],
QRO: [BUH, NUQ, HGC],
HGC: [YOV],
CUQ: [NIC, JYE, XKO, ZNI],
NIC: [ZNI, YOV],
JYE: [AAP],
XKO: [AAP, CVM],
AAP: [GLI, NIC],
GLI: [ZNI, CVM],
CVM: [NUQ, YOV, QRO, NIC]}","Node NUQ is connected to nodes YOV, NNK.
Node NNK is connected to node YOV.
Node ZNI is connected to nodes BUH, QRO, YOV.
Node BUH is connected to node NNK.
Node QRO is connected to nodes BUH, NUQ, HGC.
Node HGC is connected to node YOV.
Node CUQ is connected to nodes NIC, JYE, XKO, ZNI.
Node NIC is connected to nodes ZNI, YOV.
Node JYE is connected to node AAP.
Node XKO is connected to nodes AAP, CVM.
Node AAP is connected to nodes GLI, NIC.
Node GLI is connected to nodes ZNI, CVM.
Node CVM is connected to nodes NUQ, YOV, QRO, NIC.","[BUH, YOV, QRO, NIC, HGC, AAP, XKO, CVM, GLI, CUQ, NUQ, JYE, ZNI, NNK]",14,28,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CUQ, JYE, XKO, AAP, GLI, CVM, NIC, ZNI, QRO, BUH, NUQ, HGC, NNK, YOV]","Let's solve it step by step.
Nodes with 0 in-degree: [CUQ].
Visit node CUQ and remove it from the graph.
Nodes with 0 in-degree: [JYE, XKO].
Visit node JYE and remove it from the graph.
Nodes with 0 in-degree: [XKO].
Visit node XKO and remove it from the graph.
Nodes with 0 in-degree: [AAP].
Visit node AAP and remove it from the graph.
Nodes with 0 in-degree: [GLI].
Visit node GLI and remove it from the graph.
Nodes with 0 in-degree: [CVM].
Visit node CVM and remove it from the graph.
Nodes with 0 in-degree: [NIC].
Visit node NIC and remove it from the graph.
Nodes with 0 in-degree: [ZNI].
Visit node ZNI and remove it from the graph.
Nodes with 0 in-degree: [QRO].
Visit node QRO and remove it from the graph.
Nodes with 0 in-degree: [BUH, NUQ, HGC].
Visit node BUH and remove it from the graph.
Nodes with 0 in-degree: [NUQ, HGC].
Visit node NUQ and remove it from the graph.
Nodes with 0 in-degree: [HGC, NNK].
Visit node HGC and remove it from the graph.
Nodes with 0 in-degree: [NNK].
Visit node NNK and remove it from the graph.
Nodes with 0 in-degree: [YOV].
Visit node YOV and remove it from the graph.
So the result of topological sorting is ","('[[CUQ, JYE, XKO, AAP, GLI, CVM, NIC, NNK, YOV, QRO, ZNI, BUH, NUQ, HGC], [CUQ, JYE, XKO, AAP, NUQ, HGC, NNK, YOV, GLI, CVM, NIC, ZNI, QRO, BUH], [CUQ, JYE, XKO, AAP, GLI, CVM, NIC, ZNI, QRO, BUH, NUQ, HGC, NNK, YOV], [CUQ, BUH, HGC, NNK, XKO, GLI, NUQ, ZNI, NIC, QRO, CVM, YOV, JYE, AAP]]',)",2,65
topological_sort,"[(RGQ, FEP), (RGQ, GKP), (RGQ, CLT), (CLT, HXC), (CLT, FZQ), (ESX, FZQ), (ESX, GKP), (FZQ, FEP), (HXC, IXQ), (HXC, FEP), (IXQ, FEP), (IXQ, GKP)]","{RGQ: [FEP, GKP, CLT],
FEP: [],
GKP: [],
CLT: [HXC, FZQ],
ESX: [FZQ, GKP],
FZQ: [FEP],
HXC: [IXQ, FEP],
IXQ: [FEP, GKP]}","Node RGQ is connected to nodes FEP, GKP, CLT.
Node CLT is connected to nodes HXC, FZQ.
Node ESX is connected to nodes FZQ, GKP.
Node FZQ is connected to node FEP.
Node HXC is connected to nodes IXQ, FEP.
Node IXQ is connected to nodes FEP, GKP.","[CLT, IXQ, FEP, ESX, GKP, FZQ, RGQ, HXC]",8,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RGQ, ESX, CLT, HXC, FZQ, IXQ, FEP, GKP]","Let's solve it step by step.
Nodes with 0 in-degree: [RGQ, ESX].
Visit node RGQ and remove it from the graph.
Nodes with 0 in-degree: [ESX, CLT].
Visit node ESX and remove it from the graph.
Nodes with 0 in-degree: [CLT].
Visit node CLT and remove it from the graph.
Nodes with 0 in-degree: [HXC, FZQ].
Visit node HXC and remove it from the graph.
Nodes with 0 in-degree: [FZQ, IXQ].
Visit node FZQ and remove it from the graph.
Nodes with 0 in-degree: [IXQ].
Visit node IXQ and remove it from the graph.
Nodes with 0 in-degree: [FEP, GKP].
Visit node FEP and remove it from the graph.
Nodes with 0 in-degree: [GKP].
Visit node GKP and remove it from the graph.
So the result of topological sorting is ","('[[RGQ, ESX, FEP, GKP, CLT, HXC, FZQ, IXQ], [RGQ, ESX, CLT, HXC, IXQ, FZQ, GKP, FEP], [RGQ, ESX, CLT, HXC, FZQ, IXQ, FEP, GKP], [RGQ, FZQ, CLT, ESX, HXC, IXQ, FEP, GKP]]',)",2,66
topological_sort,"[(SLP, ETK), (SLP, MXJ), (SLP, LYG), (ETK, VQJ), (MXJ, QOI), (MXJ, ETK), (MXJ, VQJ), (LYG, MXJ), (LYG, NBA), (LYG, VQJ), (VQJ, QOI), (IRC, NBA), (IRC, VQJ), (IXJ, ETK), (IXJ, NBA)]","{SLP: [ETK, MXJ, LYG],
ETK: [VQJ],
MXJ: [QOI, ETK, VQJ],
LYG: [MXJ, NBA, VQJ],
VQJ: [QOI],
NBA: [],
QOI: [],
IRC: [NBA, VQJ],
IXJ: [ETK, NBA]}","Node SLP is connected to nodes ETK, MXJ, LYG.
Node ETK is connected to node VQJ.
Node MXJ is connected to nodes QOI, ETK, VQJ.
Node LYG is connected to nodes MXJ, NBA, VQJ.
Node VQJ is connected to node QOI.
Node IRC is connected to nodes NBA, VQJ.
Node IXJ is connected to nodes ETK, NBA.","[MXJ, ETK, LYG, QOI, NBA, IRC, IXJ, SLP, VQJ]",9,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SLP, IRC, IXJ, LYG, MXJ, NBA, ETK, VQJ, QOI]","Let's solve it step by step.
Nodes with 0 in-degree: [SLP, IRC, IXJ].
Visit node SLP and remove it from the graph.
Nodes with 0 in-degree: [IRC, IXJ, LYG].
Visit node IRC and remove it from the graph.
Nodes with 0 in-degree: [IXJ, LYG].
Visit node IXJ and remove it from the graph.
Nodes with 0 in-degree: [LYG].
Visit node LYG and remove it from the graph.
Nodes with 0 in-degree: [MXJ, NBA].
Visit node MXJ and remove it from the graph.
Nodes with 0 in-degree: [NBA, ETK].
Visit node NBA and remove it from the graph.
Nodes with 0 in-degree: [ETK].
Visit node ETK and remove it from the graph.
Nodes with 0 in-degree: [VQJ].
Visit node VQJ and remove it from the graph.
Nodes with 0 in-degree: [QOI].
Visit node QOI and remove it from the graph.
So the result of topological sorting is ","('[[SLP, IRC, IXJ, LYG, MXJ, NBA, ETK, VQJ, QOI], [SLP, IRC, IXJ, LYG, MXJ, NBA, QOI, VQJ, ETK], [SLP, IRC, IXJ, ETK, VQJ, QOI, LYG, MXJ, NBA], [SLP, IXJ, VQJ, IRC, NBA, ETK, QOI, LYG, MXJ]]',)",0,67
topological_sort,"[(VUD, MMP), (VUD, NWZ), (VUD, DRB), (MMP, QNB), (MMP, DPS), (MMP, DGE), (NWZ, QNB), (NWZ, UOZ), (DRB, MMP), (DRB, ALE), (DRB, QNB), (QNB, DPS), (QNB, EZP), (DPS, DGE), (VTN, ALE), (ALE, ZGC), (ALE, MMP), (ALE, DPS), (UOZ, DRB), (UOZ, DGE), (UOZ, QNB), (UOZ, ALE), (TGK, DRB), (TGK, ZGC), (TGK, VUD), (TGK, QNB), (VSC, DRB), (VSC, TGK), (VSC, UOZ)]","{VUD: [MMP, NWZ, DRB],
MMP: [QNB, DPS, DGE],
NWZ: [QNB, UOZ],
DRB: [MMP, ALE, QNB],
QNB: [DPS, EZP],
DPS: [DGE],
DGE: [],
EZP: [],
VTN: [ALE],
ALE: [ZGC, MMP, DPS],
ZGC: [],
UOZ: [DRB, DGE, QNB, ALE],
TGK: [DRB, ZGC, VUD, QNB],
VSC: [DRB, TGK, UOZ]}","Node VUD is connected to nodes MMP, NWZ, DRB.
Node MMP is connected to nodes QNB, DPS, DGE.
Node NWZ is connected to nodes QNB, UOZ.
Node DRB is connected to nodes MMP, ALE, QNB.
Node QNB is connected to nodes DPS, EZP.
Node DPS is connected to node DGE.
Node VTN is connected to node ALE.
Node ALE is connected to nodes ZGC, MMP, DPS.
Node UOZ is connected to nodes DRB, DGE, QNB, ALE.
Node TGK is connected to nodes DRB, ZGC, VUD, QNB.
Node VSC is connected to nodes DRB, TGK, UOZ.","[DRB, TGK, UOZ, VSC, MMP, QNB, DPS, DGE, EZP, ZGC, ALE, VUD, NWZ, VTN]",14,29,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VTN, VSC, TGK, VUD, NWZ, UOZ, DRB, ALE, ZGC, MMP, QNB, DPS, EZP, DGE]","Let's solve it step by step.
Nodes with 0 in-degree: [VTN, VSC].
Visit node VTN and remove it from the graph.
Nodes with 0 in-degree: [VSC].
Visit node VSC and remove it from the graph.
Nodes with 0 in-degree: [TGK].
Visit node TGK and remove it from the graph.
Nodes with 0 in-degree: [VUD].
Visit node VUD and remove it from the graph.
Nodes with 0 in-degree: [NWZ].
Visit node NWZ and remove it from the graph.
Nodes with 0 in-degree: [UOZ].
Visit node UOZ and remove it from the graph.
Nodes with 0 in-degree: [DRB].
Visit node DRB and remove it from the graph.
Nodes with 0 in-degree: [ALE].
Visit node ALE and remove it from the graph.
Nodes with 0 in-degree: [ZGC, MMP].
Visit node ZGC and remove it from the graph.
Nodes with 0 in-degree: [MMP].
Visit node MMP and remove it from the graph.
Nodes with 0 in-degree: [QNB].
Visit node QNB and remove it from the graph.
Nodes with 0 in-degree: [DPS, EZP].
Visit node DPS and remove it from the graph.
Nodes with 0 in-degree: [EZP, DGE].
Visit node EZP and remove it from the graph.
Nodes with 0 in-degree: [DGE].
Visit node DGE and remove it from the graph.
So the result of topological sorting is ","('[[VTN, DPS, EZP, QNB, ZGC, DRB, MMP, DGE, VSC, VUD, UOZ, ALE, NWZ, TGK], [VTN, VSC, TGK, VUD, NWZ, UOZ, DRB, ALE, ZGC, MMP, QNB, DPS, EZP, DGE], [VTN, VSC, TGK, VUD, NWZ, UOZ, DRB, ZGC, ALE, MMP, QNB, EZP, DGE, DPS], [VTN, VSC, TGK, VUD, QNB, DPS, EZP, DGE, NWZ, UOZ, DRB, ALE, ZGC, MMP]]',)",1,68
topological_sort,"[(PXC, YJU), (ZOU, YJU), (ZOU, NHC), (ZOU, PXC), (ZOU, HMZ), (ZOU, BQY), (NHC, HMZ), (NHC, YJU), (NHC, BQY), (NHC, APU), (HMZ, BQY), (LFC, HMZ), (LFC, APU), (JAJ, YJU), (JAJ, ZOU), (JAJ, NHC), (JAJ, HMZ), (JAJ, RBR), (JAJ, BQY), (RBR, YJU), (RBR, NHC)]","{PXC: [YJU],
YJU: [],
ZOU: [YJU, NHC, PXC, HMZ, BQY],
NHC: [HMZ, YJU, BQY, APU],
HMZ: [BQY],
BQY: [],
LFC: [HMZ, APU],
APU: [],
JAJ: [YJU, ZOU, NHC, HMZ, RBR, BQY],
RBR: [YJU, NHC]}","Node PXC is connected to node YJU.
Node ZOU is connected to nodes YJU, NHC, PXC, HMZ, BQY.
Node NHC is connected to nodes HMZ, YJU, BQY, APU.
Node HMZ is connected to node BQY.
Node LFC is connected to nodes HMZ, APU.
Node JAJ is connected to nodes YJU, ZOU, NHC, HMZ, RBR, BQY.
Node RBR is connected to nodes YJU, NHC.","[BQY, RBR, LFC, NHC, JAJ, YJU, ZOU, PXC, HMZ, APU]",10,21,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LFC, JAJ, ZOU, RBR, PXC, NHC, HMZ, YJU, APU, BQY]","Let's solve it step by step.
Nodes with 0 in-degree: [LFC, JAJ].
Visit node LFC and remove it from the graph.
Nodes with 0 in-degree: [JAJ].
Visit node JAJ and remove it from the graph.
Nodes with 0 in-degree: [ZOU, RBR].
Visit node ZOU and remove it from the graph.
Nodes with 0 in-degree: [RBR, PXC].
Visit node RBR and remove it from the graph.
Nodes with 0 in-degree: [PXC, NHC].
Visit node PXC and remove it from the graph.
Nodes with 0 in-degree: [NHC].
Visit node NHC and remove it from the graph.
Nodes with 0 in-degree: [HMZ, YJU, APU].
Visit node HMZ and remove it from the graph.
Nodes with 0 in-degree: [YJU, APU, BQY].
Visit node YJU and remove it from the graph.
Nodes with 0 in-degree: [APU, BQY].
Visit node APU and remove it from the graph.
Nodes with 0 in-degree: [BQY].
Visit node BQY and remove it from the graph.
So the result of topological sorting is ","('[[LFC, JAJ, ZOU, YJU, APU, BQY, RBR, PXC, NHC, HMZ], [LFC, APU, RBR, NHC, JAJ, BQY, YJU, PXC, HMZ, ZOU], [LFC, JAJ, ZOU, RBR, PXC, NHC, HMZ, YJU, APU, BQY], [LFC, JAJ, ZOU, RBR, PXC, NHC, BQY, HMZ, APU, YJU]]',)",2,69
topological_sort,"[(YHV, SGL), (YHV, RBU), (YHV, DCC), (YHV, ULU), (YHV, IPY), (SGL, IPY), (RBU, ULU), (IPY, RBU), (NJW, ULU), (NJW, DCC), (NJW, OQJ), (OQJ, SGL), (OQJ, ULU), (OQJ, YHV)]","{YHV: [SGL, RBU, DCC, ULU, IPY],
SGL: [IPY],
RBU: [ULU],
DCC: [],
ULU: [],
IPY: [RBU],
NJW: [ULU, DCC, OQJ],
OQJ: [SGL, ULU, YHV]}","Node YHV is connected to nodes SGL, RBU, DCC, ULU, IPY.
Node SGL is connected to node IPY.
Node RBU is connected to node ULU.
Node IPY is connected to node RBU.
Node NJW is connected to nodes ULU, DCC, OQJ.
Node OQJ is connected to nodes SGL, ULU, YHV.","[NJW, DCC, OQJ, YHV, SGL, IPY, RBU, ULU]",8,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[NJW, OQJ, YHV, SGL, DCC, IPY, RBU, ULU]","Let's solve it step by step.
Nodes with 0 in-degree: [NJW].
Visit node NJW and remove it from the graph.
Nodes with 0 in-degree: [OQJ].
Visit node OQJ and remove it from the graph.
Nodes with 0 in-degree: [YHV].
Visit node YHV and remove it from the graph.
Nodes with 0 in-degree: [SGL, DCC].
Visit node SGL and remove it from the graph.
Nodes with 0 in-degree: [DCC, IPY].
Visit node DCC and remove it from the graph.
Nodes with 0 in-degree: [IPY].
Visit node IPY and remove it from the graph.
Nodes with 0 in-degree: [RBU].
Visit node RBU and remove it from the graph.
Nodes with 0 in-degree: [ULU].
Visit node ULU and remove it from the graph.
So the result of topological sorting is ","('[[NJW, OQJ, RBU, ULU, YHV, SGL, DCC, IPY], [NJW, OQJ, YHV, SGL, ULU, RBU, IPY, DCC], [NJW, YHV, IPY, DCC, OQJ, SGL, ULU, RBU], [NJW, OQJ, YHV, SGL, DCC, IPY, RBU, ULU]]',)",3,70
topological_sort,"[(YUJ, POB), (YUJ, FVO), (FVO, PWH), (BSP, FVO), (BSP, SYR), (BSP, SEC), (SYR, SEC), (SYR, FVO), (SYR, RES), (JTN, PWH), (JTN, FVO), (JTN, POB), (RES, SEC), (RES, JTN), (MZS, SEC), (MZS, SYR), (MZS, FVO), (MZS, YUJ)]","{YUJ: [POB, FVO],
POB: [],
FVO: [PWH],
BSP: [FVO, SYR, SEC],
SYR: [SEC, FVO, RES],
SEC: [],
PWH: [],
JTN: [PWH, FVO, POB],
RES: [SEC, JTN],
MZS: [SEC, SYR, FVO, YUJ]}","Node YUJ is connected to nodes POB, FVO.
Node FVO is connected to node PWH.
Node BSP is connected to nodes FVO, SYR, SEC.
Node SYR is connected to nodes SEC, FVO, RES.
Node JTN is connected to nodes PWH, FVO, POB.
Node RES is connected to nodes SEC, JTN.
Node MZS is connected to nodes SEC, SYR, FVO, YUJ.","[BSP, FVO, MZS, JTN, POB, RES, SYR, SEC, PWH, YUJ]",10,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BSP, MZS, SYR, YUJ, RES, SEC, JTN, FVO, POB, PWH]","Let's solve it step by step.
Nodes with 0 in-degree: [BSP, MZS].
Visit node BSP and remove it from the graph.
Nodes with 0 in-degree: [MZS].
Visit node MZS and remove it from the graph.
Nodes with 0 in-degree: [SYR, YUJ].
Visit node SYR and remove it from the graph.
Nodes with 0 in-degree: [YUJ, RES].
Visit node YUJ and remove it from the graph.
Nodes with 0 in-degree: [RES].
Visit node RES and remove it from the graph.
Nodes with 0 in-degree: [SEC, JTN].
Visit node SEC and remove it from the graph.
Nodes with 0 in-degree: [JTN].
Visit node JTN and remove it from the graph.
Nodes with 0 in-degree: [FVO, POB].
Visit node FVO and remove it from the graph.
Nodes with 0 in-degree: [POB, PWH].
Visit node POB and remove it from the graph.
Nodes with 0 in-degree: [PWH].
Visit node PWH and remove it from the graph.
So the result of topological sorting is ","('[[BSP, MZS, SYR, FVO, POB, PWH, YUJ, RES, SEC, JTN], [BSP, MZS, SYR, YUJ, RES, SEC, JTN, FVO, POB, PWH], [BSP, MZS, SYR, YUJ, RES, SEC, PWH, FVO, JTN, POB], [BSP, POB, SYR, RES, YUJ, PWH, JTN, FVO, MZS, SEC]]',)",1,71
topological_sort,"[(WQR, EYS), (EYS, KIV), (CVG, VLE), (CVG, WQR), (VLE, YMV), (IFU, EYS), (IFU, CVG), (ENY, KIV), (ENY, IFU), (YBG, VLE), (YBG, YMV), (YBG, ENY), (LXN, CVG)]","{WQR: [EYS],
EYS: [KIV],
KIV: [],
CVG: [VLE, WQR],
VLE: [YMV],
YMV: [],
IFU: [EYS, CVG],
ENY: [KIV, IFU],
YBG: [VLE, YMV, ENY],
LXN: [CVG]}","Node WQR is connected to node EYS.
Node EYS is connected to node KIV.
Node CVG is connected to nodes VLE, WQR.
Node VLE is connected to node YMV.
Node IFU is connected to nodes EYS, CVG.
Node ENY is connected to nodes KIV, IFU.
Node YBG is connected to nodes VLE, YMV, ENY.
Node LXN is connected to node CVG.","[LXN, WQR, IFU, ENY, VLE, EYS, KIV, CVG, YMV, YBG]",10,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YBG, LXN, ENY, IFU, CVG, VLE, WQR, YMV, EYS, KIV]","Let's solve it step by step.
Nodes with 0 in-degree: [YBG, LXN].
Visit node YBG and remove it from the graph.
Nodes with 0 in-degree: [LXN, ENY].
Visit node LXN and remove it from the graph.
Nodes with 0 in-degree: [ENY].
Visit node ENY and remove it from the graph.
Nodes with 0 in-degree: [IFU].
Visit node IFU and remove it from the graph.
Nodes with 0 in-degree: [CVG].
Visit node CVG and remove it from the graph.
Nodes with 0 in-degree: [VLE, WQR].
Visit node VLE and remove it from the graph.
Nodes with 0 in-degree: [WQR, YMV].
Visit node WQR and remove it from the graph.
Nodes with 0 in-degree: [YMV, EYS].
Visit node YMV and remove it from the graph.
Nodes with 0 in-degree: [EYS].
Visit node EYS and remove it from the graph.
Nodes with 0 in-degree: [KIV].
Visit node KIV and remove it from the graph.
So the result of topological sorting is ","('[[YBG, LXN, ENY, IFU, CVG, EYS, KIV, WQR, VLE, YMV], [YBG, LXN, ENY, IFU, CVG, VLE, WQR, YMV, EYS, KIV], [YBG, LXN, ENY, YMV, EYS, KIV, IFU, CVG, VLE, WQR], [YBG, EYS, VLE, WQR, LXN, KIV, IFU, ENY, YMV, CVG]]',)",1,72
topological_sort,"[(KEF, OWB), (KEF, VPG), (KEF, TEL), (KEF, QWE), (KEF, HPA), (OWB, QWE), (OWB, GSB), (OWB, TEL), (VPG, QWE), (TEL, VPG), (HPA, OWB), (HPA, VPG), (HPA, GSB), (GSB, TEL), (GSB, VPG), (OVU, OWB), (OVU, TEL), (OVU, HPA)]","{KEF: [OWB, VPG, TEL, QWE, HPA],
OWB: [QWE, GSB, TEL],
VPG: [QWE],
TEL: [VPG],
QWE: [],
HPA: [OWB, VPG, GSB],
GSB: [TEL, VPG],
OVU: [OWB, TEL, HPA]}","Node KEF is connected to nodes OWB, VPG, TEL, QWE, HPA.
Node OWB is connected to nodes QWE, GSB, TEL.
Node VPG is connected to node QWE.
Node TEL is connected to node VPG.
Node HPA is connected to nodes OWB, VPG, GSB.
Node GSB is connected to nodes TEL, VPG.
Node OVU is connected to nodes OWB, TEL, HPA.","[VPG, TEL, QWE, GSB, HPA, OWB, KEF, OVU]",8,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KEF, OVU, HPA, OWB, GSB, TEL, VPG, QWE]","Let's solve it step by step.
Nodes with 0 in-degree: [KEF, OVU].
Visit node KEF and remove it from the graph.
Nodes with 0 in-degree: [OVU].
Visit node OVU and remove it from the graph.
Nodes with 0 in-degree: [HPA].
Visit node HPA and remove it from the graph.
Nodes with 0 in-degree: [OWB].
Visit node OWB and remove it from the graph.
Nodes with 0 in-degree: [GSB].
Visit node GSB and remove it from the graph.
Nodes with 0 in-degree: [TEL].
Visit node TEL and remove it from the graph.
Nodes with 0 in-degree: [VPG].
Visit node VPG and remove it from the graph.
Nodes with 0 in-degree: [QWE].
Visit node QWE and remove it from the graph.
So the result of topological sorting is ","('[[KEF, OVU, HPA, OWB, GSB, TEL, VPG, QWE], [KEF, OVU, HPA, OWB, VPG, GSB, TEL, QWE], [KEF, VPG, HPA, QWE, GSB, OVU, TEL, OWB], [KEF, OVU, VPG, QWE, HPA, OWB, GSB, TEL]]',)",0,73
topological_sort,"[(ESE, ADH), (ADH, QXZ), (ADH, ETE), (QXZ, ETE), (WJZ, RFY), (WJZ, TCM), (WJZ, SLI), (RFY, TCM), (RFY, JRL), (RFY, ADH), (SLI, ESE), (JRL, ETE), (JRL, ESE), (JRL, IZA), (JRL, KTI), (IZA, TCM), (IZA, CCC), (KTI, IZA), (KTI, TCM), (KTI, ETE), (KTI, ESE), (KTI, CCC), (IMB, SLI), (IMB, IZA), (IMB, RFY), (IMB, OIC), (IMB, ESE), (OIC, ETE), (OIC, ADH), (OIC, KTI), (OIC, RFY), (OIC, JRL), (CCC, ETE), (CCC, TCM), (CCC, SLI)]","{ESE: [ADH],
ADH: [QXZ, ETE],
QXZ: [ETE],
ETE: [],
WJZ: [RFY, TCM, SLI],
RFY: [TCM, JRL, ADH],
TCM: [],
SLI: [ESE],
JRL: [ETE, ESE, IZA, KTI],
IZA: [TCM, CCC],
KTI: [IZA, TCM, ETE, ESE, CCC],
IMB: [SLI, IZA, RFY, OIC, ESE],
OIC: [ETE, ADH, KTI, RFY, JRL],
CCC: [ETE, TCM, SLI]}","Node ESE is connected to node ADH.
Node ADH is connected to nodes QXZ, ETE.
Node QXZ is connected to node ETE.
Node WJZ is connected to nodes RFY, TCM, SLI.
Node RFY is connected to nodes TCM, JRL, ADH.
Node SLI is connected to node ESE.
Node JRL is connected to nodes ETE, ESE, IZA, KTI.
Node IZA is connected to nodes TCM, CCC.
Node KTI is connected to nodes IZA, TCM, ETE, ESE, CCC.
Node IMB is connected to nodes SLI, IZA, RFY, OIC, ESE.
Node OIC is connected to nodes ETE, ADH, KTI, RFY, JRL.
Node CCC is connected to nodes ETE, TCM, SLI.","[SLI, RFY, JRL, OIC, ETE, QXZ, IZA, CCC, KTI, WJZ, TCM, IMB, ADH, ESE]",14,35,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WJZ, IMB, OIC, RFY, JRL, KTI, IZA, CCC, TCM, SLI, ESE, ADH, QXZ, ETE]","Let's solve it step by step.
Nodes with 0 in-degree: [WJZ, IMB].
Visit node WJZ and remove it from the graph.
Nodes with 0 in-degree: [IMB].
Visit node IMB and remove it from the graph.
Nodes with 0 in-degree: [OIC].
Visit node OIC and remove it from the graph.
Nodes with 0 in-degree: [RFY].
Visit node RFY and remove it from the graph.
Nodes with 0 in-degree: [JRL].
Visit node JRL and remove it from the graph.
Nodes with 0 in-degree: [KTI].
Visit node KTI and remove it from the graph.
Nodes with 0 in-degree: [IZA].
Visit node IZA and remove it from the graph.
Nodes with 0 in-degree: [CCC].
Visit node CCC and remove it from the graph.
Nodes with 0 in-degree: [TCM, SLI].
Visit node TCM and remove it from the graph.
Nodes with 0 in-degree: [SLI].
Visit node SLI and remove it from the graph.
Nodes with 0 in-degree: [ESE].
Visit node ESE and remove it from the graph.
Nodes with 0 in-degree: [ADH].
Visit node ADH and remove it from the graph.
Nodes with 0 in-degree: [QXZ].
Visit node QXZ and remove it from the graph.
Nodes with 0 in-degree: [ETE].
Visit node ETE and remove it from the graph.
So the result of topological sorting is ","('[[WJZ, IMB, OIC, RFY, JRL, KTI, IZA, ADH, CCC, QXZ, ETE, ESE, SLI, TCM], [WJZ, IMB, OIC, RFY, ESE, ADH, QXZ, ETE, JRL, KTI, IZA, CCC, TCM, SLI], [WJZ, IMB, OIC, RFY, JRL, KTI, IZA, CCC, TCM, SLI, ESE, ADH, QXZ, ETE], [WJZ, JRL, IZA, KTI, ESE, RFY, QXZ, CCC, TCM, SLI, IMB, ADH, ETE, OIC]]',)",2,74
topological_sort,"[(DSG, BHW), (DSG, ARC), (DSG, WRY), (BHW, TLA), (ARC, NPE), (WRY, TLA), (WRY, MEK), (WRY, NPE), (TNA, DSG), (TNA, XES), (TNA, LSJ), (XES, YSO), (LSJ, MEK), (MEK, ARC), (MEK, BHW), (NPE, BHW), (QSG, NPQ), (QSG, XES), (QSG, MEK), (QSG, YSO), (NPQ, LSJ), (NPQ, DSG), (NPQ, TLA), (NPQ, MEK), (YSO, NPE), (YSO, DSG), (QZD, DSG), (QZD, ARC), (QZD, QSG), (QZD, XES), (QZD, BHW), (QZD, TNA), (QZD, TLA)]","{DSG: [BHW, ARC, WRY],
BHW: [TLA],
ARC: [NPE],
WRY: [TLA, MEK, NPE],
TLA: [],
TNA: [DSG, XES, LSJ],
XES: [YSO],
LSJ: [MEK],
MEK: [ARC, BHW],
NPE: [BHW],
QSG: [NPQ, XES, MEK, YSO],
NPQ: [LSJ, DSG, TLA, MEK],
YSO: [NPE, DSG],
QZD: [DSG, ARC, QSG, XES, BHW, TNA, TLA]}","Node DSG is connected to nodes BHW, ARC, WRY.
Node BHW is connected to node TLA.
Node ARC is connected to node NPE.
Node WRY is connected to nodes TLA, MEK, NPE.
Node TNA is connected to nodes DSG, XES, LSJ.
Node XES is connected to node YSO.
Node LSJ is connected to node MEK.
Node MEK is connected to nodes ARC, BHW.
Node NPE is connected to node BHW.
Node QSG is connected to nodes NPQ, XES, MEK, YSO.
Node NPQ is connected to nodes LSJ, DSG, TLA, MEK.
Node YSO is connected to nodes NPE, DSG.
Node QZD is connected to nodes DSG, ARC, QSG, XES, BHW, TNA, TLA.","[QZD, LSJ, TLA, YSO, DSG, NPQ, NPE, BHW, XES, MEK, QSG, ARC, TNA, WRY]",14,33,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QZD, QSG, TNA, NPQ, XES, LSJ, YSO, DSG, WRY, MEK, ARC, NPE, BHW, TLA]","Let's solve it step by step.
Nodes with 0 in-degree: [QZD].
Visit node QZD and remove it from the graph.
Nodes with 0 in-degree: [QSG, TNA].
Visit node QSG and remove it from the graph.
Nodes with 0 in-degree: [TNA, NPQ].
Visit node TNA and remove it from the graph.
Nodes with 0 in-degree: [NPQ, XES].
Visit node NPQ and remove it from the graph.
Nodes with 0 in-degree: [XES, LSJ].
Visit node XES and remove it from the graph.
Nodes with 0 in-degree: [LSJ, YSO].
Visit node LSJ and remove it from the graph.
Nodes with 0 in-degree: [YSO].
Visit node YSO and remove it from the graph.
Nodes with 0 in-degree: [DSG].
Visit node DSG and remove it from the graph.
Nodes with 0 in-degree: [WRY].
Visit node WRY and remove it from the graph.
Nodes with 0 in-degree: [MEK].
Visit node MEK and remove it from the graph.
Nodes with 0 in-degree: [ARC].
Visit node ARC and remove it from the graph.
Nodes with 0 in-degree: [NPE].
Visit node NPE and remove it from the graph.
Nodes with 0 in-degree: [BHW].
Visit node BHW and remove it from the graph.
Nodes with 0 in-degree: [TLA].
Visit node TLA and remove it from the graph.
So the result of topological sorting is ","('[[QZD, QSG, TNA, NPQ, XES, LSJ, YSO, WRY, NPE, ARC, MEK, TLA, DSG, BHW], [QZD, QSG, TNA, NPQ, XES, LSJ, YSO, DSG, WRY, MEK, ARC, NPE, BHW, TLA], [QZD, QSG, TNA, NPQ, ARC, NPE, BHW, TLA, XES, LSJ, YSO, DSG, WRY, MEK], [QZD, BHW, DSG, NPE, NPQ, TLA, YSO, WRY, MEK, ARC, QSG, XES, TNA, LSJ]]',)",1,75
topological_sort,"[(SOQ, LJR), (SOQ, KRN), (LJR, ZBA), (KRN, ZBA), (YMH, RRU), (YMH, SOQ), (YMH, ZBA), (YMH, LJR), (YMH, XCM), (RRU, XCM), (RRU, SOQ), (XCM, LJR), (XCM, KRN), (CDB, SOQ), (CDB, XCM), (CDB, LJR), (CDB, YMH), (CDB, RRU), (EVA, CDB), (EVA, XCM)]","{SOQ: [LJR, KRN],
LJR: [ZBA],
KRN: [ZBA],
ZBA: [],
YMH: [RRU, SOQ, ZBA, LJR, XCM],
RRU: [XCM, SOQ],
XCM: [LJR, KRN],
CDB: [SOQ, XCM, LJR, YMH, RRU],
EVA: [CDB, XCM]}","Node SOQ is connected to nodes LJR, KRN.
Node LJR is connected to node ZBA.
Node KRN is connected to node ZBA.
Node YMH is connected to nodes RRU, SOQ, ZBA, LJR, XCM.
Node RRU is connected to nodes XCM, SOQ.
Node XCM is connected to nodes LJR, KRN.
Node CDB is connected to nodes SOQ, XCM, LJR, YMH, RRU.
Node EVA is connected to nodes CDB, XCM.","[XCM, LJR, RRU, ZBA, EVA, SOQ, KRN, YMH, CDB]",9,20,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EVA, CDB, YMH, RRU, XCM, SOQ, LJR, KRN, ZBA]","Let's solve it step by step.
Nodes with 0 in-degree: [EVA].
Visit node EVA and remove it from the graph.
Nodes with 0 in-degree: [CDB].
Visit node CDB and remove it from the graph.
Nodes with 0 in-degree: [YMH].
Visit node YMH and remove it from the graph.
Nodes with 0 in-degree: [RRU].
Visit node RRU and remove it from the graph.
Nodes with 0 in-degree: [XCM, SOQ].
Visit node XCM and remove it from the graph.
Nodes with 0 in-degree: [SOQ].
Visit node SOQ and remove it from the graph.
Nodes with 0 in-degree: [LJR, KRN].
Visit node LJR and remove it from the graph.
Nodes with 0 in-degree: [KRN].
Visit node KRN and remove it from the graph.
Nodes with 0 in-degree: [ZBA].
Visit node ZBA and remove it from the graph.
So the result of topological sorting is ","('[[EVA, CDB, YMH, RRU, SOQ, ZBA, XCM, KRN, LJR], [EVA, CDB, YMH, RRU, XCM, SOQ, LJR, KRN, ZBA], [EVA, CDB, YMH, LJR, KRN, ZBA, RRU, XCM, SOQ], [EVA, RRU, KRN, SOQ, XCM, LJR, YMH, CDB, ZBA]]',)",1,76
topological_sort,"[(QPW, RBE), (QPW, PQS), (QPW, AQN), (RBE, AQN), (RBE, PQS), (PQS, ACG), (AQN, ACG), (ZXL, DBC), (ZXL, AQN), (DBC, RBE), (DBC, QPW), (OZM, AQN)]","{QPW: [RBE, PQS, AQN],
RBE: [AQN, PQS],
PQS: [ACG],
AQN: [ACG],
ACG: [],
ZXL: [DBC, AQN],
DBC: [RBE, QPW],
OZM: [AQN]}","Node QPW is connected to nodes RBE, PQS, AQN.
Node RBE is connected to nodes AQN, PQS.
Node PQS is connected to node ACG.
Node AQN is connected to node ACG.
Node ZXL is connected to nodes DBC, AQN.
Node DBC is connected to nodes RBE, QPW.
Node OZM is connected to node AQN.","[DBC, PQS, ZXL, RBE, AQN, QPW, OZM, ACG]",8,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZXL, OZM, DBC, QPW, RBE, AQN, PQS, ACG]","Let's solve it step by step.
Nodes with 0 in-degree: [ZXL, OZM].
Visit node ZXL and remove it from the graph.
Nodes with 0 in-degree: [OZM, DBC].
Visit node OZM and remove it from the graph.
Nodes with 0 in-degree: [DBC].
Visit node DBC and remove it from the graph.
Nodes with 0 in-degree: [QPW].
Visit node QPW and remove it from the graph.
Nodes with 0 in-degree: [RBE].
Visit node RBE and remove it from the graph.
Nodes with 0 in-degree: [AQN, PQS].
Visit node AQN and remove it from the graph.
Nodes with 0 in-degree: [PQS].
Visit node PQS and remove it from the graph.
Nodes with 0 in-degree: [ACG].
Visit node ACG and remove it from the graph.
So the result of topological sorting is ","('[[ZXL, OZM, DBC, QPW, RBE, AQN, PQS, ACG], [ZXL, OZM, DBC, QPW, AQN, PQS, RBE, ACG], [ZXL, QPW, PQS, DBC, OZM, ACG, AQN, RBE], [ZXL, OZM, PQS, ACG, DBC, QPW, RBE, AQN]]',)",0,77
topological_sort,"[(QEC, YKC), (QEC, DGQ), (QEC, PMS), (QEC, UDQ), (YKC, IEC), (YKC, UDQ), (YKC, BKR), (DGQ, BKR), (PMS, WCM), (PMS, BKR), (PMS, YKC), (PMS, IEC), (UDQ, DGQ), (IEC, UDQ), (WOM, BKR), (WOM, UDQ), (WOM, UUT), (WOM, DGQ), (UUT, IEC), (UUT, XDT), (UUT, YKC), (UUT, BND), (UUT, BEP), (UUT, TMQ), (WCM, IEC), (XDT, QEC), (XDT, IEC), (XDT, PMS), (XDT, YKC), (XDT, MPB), (XDT, DGQ), (XDT, BND), (MPB, DGQ), (MPB, QEC), (MPB, UDQ), (BND, UDQ), (BND, PMS), (TMQ, WCM), (TMQ, PMS), (TMQ, IEC), (TMQ, MPB), (TMQ, XDT), (BEP, DGQ), (BEP, QEC), (BEP, BND), (BEP, XDT)]","{QEC: [YKC, DGQ, PMS, UDQ],
YKC: [IEC, UDQ, BKR],
DGQ: [BKR],
PMS: [WCM, BKR, YKC, IEC],
UDQ: [DGQ],
IEC: [UDQ],
BKR: [],
WOM: [BKR, UDQ, UUT, DGQ],
UUT: [IEC, XDT, YKC, BND, BEP, TMQ],
WCM: [IEC],
XDT: [QEC, IEC, PMS, YKC, MPB, DGQ, BND],
MPB: [DGQ, QEC, UDQ],
BND: [UDQ, PMS],
TMQ: [WCM, PMS, IEC, MPB, XDT],
BEP: [DGQ, QEC, BND, XDT]}","Node QEC is connected to nodes YKC, DGQ, PMS, UDQ.
Node YKC is connected to nodes IEC, UDQ, BKR.
Node DGQ is connected to node BKR.
Node PMS is connected to nodes WCM, BKR, YKC, IEC.
Node UDQ is connected to node DGQ.
Node IEC is connected to node UDQ.
Node WOM is connected to nodes BKR, UDQ, UUT, DGQ.
Node UUT is connected to nodes IEC, XDT, YKC, BND, BEP, TMQ.
Node WCM is connected to node IEC.
Node XDT is connected to nodes QEC, IEC, PMS, YKC, MPB, DGQ, BND.
Node MPB is connected to nodes DGQ, QEC, UDQ.
Node BND is connected to nodes UDQ, PMS.
Node TMQ is connected to nodes WCM, PMS, IEC, MPB, XDT.
Node BEP is connected to nodes DGQ, QEC, BND, XDT.","[WCM, MPB, YKC, XDT, DGQ, BEP, QEC, PMS, WOM, BKR, UDQ, UUT, BND, IEC, TMQ]",15,46,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WOM, UUT, BEP, TMQ, XDT, MPB, BND, QEC, PMS, WCM, YKC, IEC, UDQ, DGQ, BKR]","Let's solve it step by step.
Nodes with 0 in-degree: [WOM].
Visit node WOM and remove it from the graph.
Nodes with 0 in-degree: [UUT].
Visit node UUT and remove it from the graph.
Nodes with 0 in-degree: [BEP, TMQ].
Visit node BEP and remove it from the graph.
Nodes with 0 in-degree: [TMQ].
Visit node TMQ and remove it from the graph.
Nodes with 0 in-degree: [XDT].
Visit node XDT and remove it from the graph.
Nodes with 0 in-degree: [MPB, BND].
Visit node MPB and remove it from the graph.
Nodes with 0 in-degree: [BND, QEC].
Visit node BND and remove it from the graph.
Nodes with 0 in-degree: [QEC].
Visit node QEC and remove it from the graph.
Nodes with 0 in-degree: [PMS].
Visit node PMS and remove it from the graph.
Nodes with 0 in-degree: [WCM, YKC].
Visit node WCM and remove it from the graph.
Nodes with 0 in-degree: [YKC].
Visit node YKC and remove it from the graph.
Nodes with 0 in-degree: [IEC].
Visit node IEC and remove it from the graph.
Nodes with 0 in-degree: [UDQ].
Visit node UDQ and remove it from the graph.
Nodes with 0 in-degree: [DGQ].
Visit node DGQ and remove it from the graph.
Nodes with 0 in-degree: [BKR].
Visit node BKR and remove it from the graph.
So the result of topological sorting is ","('[[WOM, UUT, BEP, TMQ, XDT, MPB, BND, QEC, PMS, WCM, YKC, IEC, UDQ, DGQ, BKR], [WOM, BKR, BEP, TMQ, MPB, BND, PMS, DGQ, WCM, UDQ, IEC, XDT, YKC, QEC, UUT], [WOM, UUT, BEP, TMQ, XDT, YKC, IEC, UDQ, DGQ, BKR, MPB, BND, QEC, PMS, WCM], [WOM, UUT, BEP, TMQ, XDT, MPB, BND, PMS, BKR, IEC, UDQ, QEC, YKC, WCM, DGQ]]',)",0,78
topological_sort,"[(GAN, JOD), (GAN, WWP), (GAN, WGQ), (GAN, NCW), (GAN, OGO), (JOD, NCW), (JOD, WGQ), (WWP, MHW), (WWP, RFZ), (WWP, NCW), (NCW, WGQ), (OGO, JOD), (OGO, WGQ), (OGO, MHW), (MHW, RFZ), (MHW, WGQ), (RFZ, WGQ), (ECD, RFZ), (ECD, WGQ), (ECD, EIS), (EIS, WGQ), (EIS, JOD), (EIS, NCW), (EIS, WWP)]","{GAN: [JOD, WWP, WGQ, NCW, OGO],
JOD: [NCW, WGQ],
WWP: [MHW, RFZ, NCW],
WGQ: [],
NCW: [WGQ],
OGO: [JOD, WGQ, MHW],
MHW: [RFZ, WGQ],
RFZ: [WGQ],
ECD: [RFZ, WGQ, EIS],
EIS: [WGQ, JOD, NCW, WWP]}","Node GAN is connected to nodes JOD, WWP, WGQ, NCW, OGO.
Node JOD is connected to nodes NCW, WGQ.
Node WWP is connected to nodes MHW, RFZ, NCW.
Node NCW is connected to node WGQ.
Node OGO is connected to nodes JOD, WGQ, MHW.
Node MHW is connected to nodes RFZ, WGQ.
Node RFZ is connected to node WGQ.
Node ECD is connected to nodes RFZ, WGQ, EIS.
Node EIS is connected to nodes WGQ, JOD, NCW, WWP.","[GAN, ECD, EIS, RFZ, MHW, OGO, WGQ, NCW, JOD, WWP]",10,24,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GAN, ECD, OGO, EIS, JOD, WWP, MHW, NCW, RFZ, WGQ]","Let's solve it step by step.
Nodes with 0 in-degree: [GAN, ECD].
Visit node GAN and remove it from the graph.
Nodes with 0 in-degree: [ECD, OGO].
Visit node ECD and remove it from the graph.
Nodes with 0 in-degree: [OGO, EIS].
Visit node OGO and remove it from the graph.
Nodes with 0 in-degree: [EIS].
Visit node EIS and remove it from the graph.
Nodes with 0 in-degree: [JOD, WWP].
Visit node JOD and remove it from the graph.
Nodes with 0 in-degree: [WWP].
Visit node WWP and remove it from the graph.
Nodes with 0 in-degree: [MHW, NCW].
Visit node MHW and remove it from the graph.
Nodes with 0 in-degree: [NCW, RFZ].
Visit node NCW and remove it from the graph.
Nodes with 0 in-degree: [RFZ].
Visit node RFZ and remove it from the graph.
Nodes with 0 in-degree: [WGQ].
Visit node WGQ and remove it from the graph.
So the result of topological sorting is ","('[[GAN, ECD, OGO, NCW, RFZ, WGQ, EIS, JOD, WWP, MHW], [GAN, ECD, OGO, EIS, JOD, NCW, WWP, WGQ, RFZ, MHW], [GAN, NCW, WWP, EIS, ECD, JOD, WGQ, MHW, RFZ, OGO], [GAN, ECD, OGO, EIS, JOD, WWP, MHW, NCW, RFZ, WGQ]]',)",3,79
topological_sort,"[(MOV, TVB), (TVB, VCA), (TVB, QPD), (OSZ, BWB), (OSZ, LGX), (BWB, VCA), (BWB, SRB), (BWB, IBK), (LGX, BWB), (LGX, QPD), (SRB, QPD), (SRB, TVB), (KDR, TWL), (KDR, OSZ), (KDR, QPD), (KDR, TVB), (TWL, BWB), (TWL, GCX), (TWL, MOV), (GCX, LGX), (GCX, IBK)]","{MOV: [TVB],
TVB: [VCA, QPD],
VCA: [],
QPD: [],
OSZ: [BWB, LGX],
BWB: [VCA, SRB, IBK],
LGX: [BWB, QPD],
SRB: [QPD, TVB],
IBK: [],
KDR: [TWL, OSZ, QPD, TVB],
TWL: [BWB, GCX, MOV],
GCX: [LGX, IBK]}","Node MOV is connected to node TVB.
Node TVB is connected to nodes VCA, QPD.
Node OSZ is connected to nodes BWB, LGX.
Node BWB is connected to nodes VCA, SRB, IBK.
Node LGX is connected to nodes BWB, QPD.
Node SRB is connected to nodes QPD, TVB.
Node KDR is connected to nodes TWL, OSZ, QPD, TVB.
Node TWL is connected to nodes BWB, GCX, MOV.
Node GCX is connected to nodes LGX, IBK.","[SRB, VCA, OSZ, KDR, TWL, TVB, MOV, LGX, BWB, QPD, GCX, IBK]",12,21,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KDR, TWL, OSZ, GCX, MOV, LGX, BWB, SRB, IBK, TVB, VCA, QPD]","Let's solve it step by step.
Nodes with 0 in-degree: [KDR].
Visit node KDR and remove it from the graph.
Nodes with 0 in-degree: [TWL, OSZ].
Visit node TWL and remove it from the graph.
Nodes with 0 in-degree: [OSZ, GCX, MOV].
Visit node OSZ and remove it from the graph.
Nodes with 0 in-degree: [GCX, MOV].
Visit node GCX and remove it from the graph.
Nodes with 0 in-degree: [MOV, LGX].
Visit node MOV and remove it from the graph.
Nodes with 0 in-degree: [LGX].
Visit node LGX and remove it from the graph.
Nodes with 0 in-degree: [BWB].
Visit node BWB and remove it from the graph.
Nodes with 0 in-degree: [SRB, IBK].
Visit node SRB and remove it from the graph.
Nodes with 0 in-degree: [IBK, TVB].
Visit node IBK and remove it from the graph.
Nodes with 0 in-degree: [TVB].
Visit node TVB and remove it from the graph.
Nodes with 0 in-degree: [VCA, QPD].
Visit node VCA and remove it from the graph.
Nodes with 0 in-degree: [QPD].
Visit node QPD and remove it from the graph.
So the result of topological sorting is ","('[[KDR, TWL, OSZ, GCX, MOV, LGX, BWB, SRB, IBK, TVB, VCA, QPD], [KDR, TWL, OSZ, GCX, IBK, TVB, VCA, QPD, MOV, LGX, BWB, SRB], [KDR, SRB, TVB, LGX, BWB, GCX, QPD, TWL, VCA, MOV, OSZ, IBK], [KDR, TWL, OSZ, GCX, MOV, LGX, QPD, VCA, IBK, BWB, TVB, SRB]]',)",0,80
topological_sort,"[(GZN, DUK), (GZN, ZSC), (GZN, ZMJ), (DUK, WKH), (WKH, HAM), (MAR, WKH), (MAR, JMA), (JMA, ZSC), (JMA, ZMJ), (HAM, ZSC), (HAM, JMA), (GAQ, WKH), (GAQ, HAM), (GAQ, WTG), (WTG, KOY), (KOY, ZSC), (KOY, WKH), (NPC, TOT), (NPC, GZN), (TOT, HAM), (TOT, GZN), (TOT, JMA), (CDA, WKH), (CDA, WTG), (CDA, KOY), (CDA, HAM), (ZQM, GZN), (ZQM, TOT), (ZQM, NPC)]","{GZN: [DUK, ZSC, ZMJ],
DUK: [WKH],
ZSC: [],
ZMJ: [],
WKH: [HAM],
MAR: [WKH, JMA],
JMA: [ZSC, ZMJ],
HAM: [ZSC, JMA],
GAQ: [WKH, HAM, WTG],
WTG: [KOY],
KOY: [ZSC, WKH],
NPC: [TOT, GZN],
TOT: [HAM, GZN, JMA],
CDA: [WKH, WTG, KOY, HAM],
ZQM: [GZN, TOT, NPC]}","Node GZN is connected to nodes DUK, ZSC, ZMJ.
Node DUK is connected to node WKH.
Node WKH is connected to node HAM.
Node MAR is connected to nodes WKH, JMA.
Node JMA is connected to nodes ZSC, ZMJ.
Node HAM is connected to nodes ZSC, JMA.
Node GAQ is connected to nodes WKH, HAM, WTG.
Node WTG is connected to node KOY.
Node KOY is connected to nodes ZSC, WKH.
Node NPC is connected to nodes TOT, GZN.
Node TOT is connected to nodes HAM, GZN, JMA.
Node CDA is connected to nodes WKH, WTG, KOY, HAM.
Node ZQM is connected to nodes GZN, TOT, NPC.","[CDA, ZSC, ZQM, MAR, WTG, JMA, GZN, KOY, NPC, ZMJ, GAQ, TOT, WKH, HAM, DUK]",15,29,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MAR, GAQ, CDA, ZQM, WTG, NPC, KOY, TOT, GZN, DUK, WKH, HAM, JMA, ZSC, ZMJ]","Let's solve it step by step.
Nodes with 0 in-degree: [MAR, GAQ, CDA, ZQM].
Visit node MAR and remove it from the graph.
Nodes with 0 in-degree: [GAQ, CDA, ZQM].
Visit node GAQ and remove it from the graph.
Nodes with 0 in-degree: [CDA, ZQM].
Visit node CDA and remove it from the graph.
Nodes with 0 in-degree: [ZQM, WTG].
Visit node ZQM and remove it from the graph.
Nodes with 0 in-degree: [WTG, NPC].
Visit node WTG and remove it from the graph.
Nodes with 0 in-degree: [NPC, KOY].
Visit node NPC and remove it from the graph.
Nodes with 0 in-degree: [KOY, TOT].
Visit node KOY and remove it from the graph.
Nodes with 0 in-degree: [TOT].
Visit node TOT and remove it from the graph.
Nodes with 0 in-degree: [GZN].
Visit node GZN and remove it from the graph.
Nodes with 0 in-degree: [DUK].
Visit node DUK and remove it from the graph.
Nodes with 0 in-degree: [WKH].
Visit node WKH and remove it from the graph.
Nodes with 0 in-degree: [HAM].
Visit node HAM and remove it from the graph.
Nodes with 0 in-degree: [JMA].
Visit node JMA and remove it from the graph.
Nodes with 0 in-degree: [ZSC, ZMJ].
Visit node ZSC and remove it from the graph.
Nodes with 0 in-degree: [ZMJ].
Visit node ZMJ and remove it from the graph.
So the result of topological sorting is ","('[[MAR, GAQ, CDA, ZQM, WTG, NPC, KOY, TOT, GZN, DUK, WKH, HAM, JMA, ZSC, ZMJ], [MAR, GAQ, CDA, ZQM, WTG, WKH, HAM, JMA, ZSC, ZMJ, NPC, KOY, TOT, GZN, DUK], [MAR, GAQ, CDA, ZQM, WTG, NPC, KOY, WKH, JMA, ZSC, DUK, HAM, GZN, ZMJ, TOT], [MAR, JMA, ZQM, GZN, HAM, WTG, KOY, WKH, NPC, DUK, TOT, CDA, GAQ, ZSC, ZMJ]]',)",0,81
topological_sort,"[(YYR, KXT), (YYR, BIJ), (YYR, AWM), (YYR, ZJF), (KXT, XJO), (KXT, WUW), (BIJ, PSG), (BIJ, XJO), (BIJ, QED), (BIJ, GMJ), (AWM, EVQ), (AWM, PSG), (AWM, WUW), (ZJF, BIJ), (ZJF, QED), (XJO, PSG), (WUW, ORA), (WUW, XJO), (EVQ, QED), (EVQ, ORA), (EVQ, WUW), (EVQ, XJO), (EVQ, ZJF), (QED, PSG), (ORA, ZJF), (ORA, GMJ)]","{YYR: [KXT, BIJ, AWM, ZJF],
KXT: [XJO, WUW],
BIJ: [PSG, XJO, QED, GMJ],
AWM: [EVQ, PSG, WUW],
ZJF: [BIJ, QED],
XJO: [PSG],
WUW: [ORA, XJO],
EVQ: [QED, ORA, WUW, XJO, ZJF],
QED: [PSG],
ORA: [ZJF, GMJ],
PSG: [],
GMJ: []}","Node YYR is connected to nodes KXT, BIJ, AWM, ZJF.
Node KXT is connected to nodes XJO, WUW.
Node BIJ is connected to nodes PSG, XJO, QED, GMJ.
Node AWM is connected to nodes EVQ, PSG, WUW.
Node ZJF is connected to nodes BIJ, QED.
Node XJO is connected to node PSG.
Node WUW is connected to nodes ORA, XJO.
Node EVQ is connected to nodes QED, ORA, WUW, XJO, ZJF.
Node QED is connected to node PSG.
Node ORA is connected to nodes ZJF, GMJ.","[ORA, KXT, XJO, YYR, BIJ, EVQ, WUW, PSG, QED, ZJF, AWM, GMJ]",12,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YYR, KXT, AWM, EVQ, WUW, ORA, ZJF, BIJ, XJO, QED, GMJ, PSG]","Let's solve it step by step.
Nodes with 0 in-degree: [YYR].
Visit node YYR and remove it from the graph.
Nodes with 0 in-degree: [KXT, AWM].
Visit node KXT and remove it from the graph.
Nodes with 0 in-degree: [AWM].
Visit node AWM and remove it from the graph.
Nodes with 0 in-degree: [EVQ].
Visit node EVQ and remove it from the graph.
Nodes with 0 in-degree: [WUW].
Visit node WUW and remove it from the graph.
Nodes with 0 in-degree: [ORA].
Visit node ORA and remove it from the graph.
Nodes with 0 in-degree: [ZJF].
Visit node ZJF and remove it from the graph.
Nodes with 0 in-degree: [BIJ].
Visit node BIJ and remove it from the graph.
Nodes with 0 in-degree: [XJO, QED, GMJ].
Visit node XJO and remove it from the graph.
Nodes with 0 in-degree: [QED, GMJ].
Visit node QED and remove it from the graph.
Nodes with 0 in-degree: [GMJ, PSG].
Visit node GMJ and remove it from the graph.
Nodes with 0 in-degree: [PSG].
Visit node PSG and remove it from the graph.
So the result of topological sorting is ","('[[YYR, KXT, AWM, EVQ, XJO, QED, GMJ, PSG, WUW, ORA, ZJF, BIJ], [YYR, KXT, AWM, EVQ, WUW, ORA, ZJF, BIJ, XJO, QED, GMJ, PSG], [YYR, GMJ, XJO, AWM, ORA, QED, ZJF, EVQ, WUW, BIJ, KXT, PSG], [YYR, KXT, AWM, EVQ, WUW, ORA, QED, PSG, BIJ, ZJF, XJO, GMJ]]',)",1,82
topological_sort,"[(CQJ, VPV), (CQJ, WQS), (CQJ, VQC), (CQJ, ILR), (CQJ, QGJ), (CQJ, OOM), (CQJ, MPH), (VPV, TNF), (VPV, OOM), (VPV, ILR), (WQS, TNF), (WQS, ILR), (VQC, AOL), (VQC, VPV), (ILR, QGJ), (OOM, ILR), (OOM, ZEB), (OOM, TNF), (MPH, ILR), (MPH, VQC), (MPH, ZEB), (MPH, QGJ), (MPH, TNF), (MPH, VPV), (TNF, ZEB), (TNF, QGJ), (TNF, ILR), (ZEB, QGJ), (BCO, WQS), (BCO, VPV), (BCO, ZEB), (BCO, ILR), (BCO, VQC), (AOL, VPV), (AOL, TNF), (AOL, ZEB), (AOL, OOM), (KEZ, BCO), (KEZ, AOL), (KEZ, CQJ), (KEZ, VQC), (KEZ, TNF)]","{CQJ: [VPV, WQS, VQC, ILR, QGJ, OOM, MPH],
VPV: [TNF, OOM, ILR],
WQS: [TNF, ILR],
VQC: [AOL, VPV],
ILR: [QGJ],
QGJ: [],
OOM: [ILR, ZEB, TNF],
MPH: [ILR, VQC, ZEB, QGJ, TNF, VPV],
TNF: [ZEB, QGJ, ILR],
ZEB: [QGJ],
BCO: [WQS, VPV, ZEB, ILR, VQC],
AOL: [VPV, TNF, ZEB, OOM],
KEZ: [BCO, AOL, CQJ, VQC, TNF]}","Node CQJ is connected to nodes VPV, WQS, VQC, ILR, QGJ, OOM, MPH.
Node VPV is connected to nodes TNF, OOM, ILR.
Node WQS is connected to nodes TNF, ILR.
Node VQC is connected to nodes AOL, VPV.
Node ILR is connected to node QGJ.
Node OOM is connected to nodes ILR, ZEB, TNF.
Node MPH is connected to nodes ILR, VQC, ZEB, QGJ, TNF, VPV.
Node TNF is connected to nodes ZEB, QGJ, ILR.
Node ZEB is connected to node QGJ.
Node BCO is connected to nodes WQS, VPV, ZEB, ILR, VQC.
Node AOL is connected to nodes VPV, TNF, ZEB, OOM.
Node KEZ is connected to nodes BCO, AOL, CQJ, VQC, TNF.","[ZEB, OOM, KEZ, CQJ, AOL, VPV, WQS, ILR, VQC, MPH, QGJ, BCO, TNF]",13,42,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KEZ, BCO, CQJ, WQS, MPH, VQC, AOL, VPV, OOM, TNF, ZEB, ILR, QGJ]","Let's solve it step by step.
Nodes with 0 in-degree: [KEZ].
Visit node KEZ and remove it from the graph.
Nodes with 0 in-degree: [BCO, CQJ].
Visit node BCO and remove it from the graph.
Nodes with 0 in-degree: [CQJ].
Visit node CQJ and remove it from the graph.
Nodes with 0 in-degree: [WQS, MPH].
Visit node WQS and remove it from the graph.
Nodes with 0 in-degree: [MPH].
Visit node MPH and remove it from the graph.
Nodes with 0 in-degree: [VQC].
Visit node VQC and remove it from the graph.
Nodes with 0 in-degree: [AOL].
Visit node AOL and remove it from the graph.
Nodes with 0 in-degree: [VPV].
Visit node VPV and remove it from the graph.
Nodes with 0 in-degree: [OOM].
Visit node OOM and remove it from the graph.
Nodes with 0 in-degree: [TNF].
Visit node TNF and remove it from the graph.
Nodes with 0 in-degree: [ZEB, ILR].
Visit node ZEB and remove it from the graph.
Nodes with 0 in-degree: [ILR].
Visit node ILR and remove it from the graph.
Nodes with 0 in-degree: [QGJ].
Visit node QGJ and remove it from the graph.
So the result of topological sorting is ","('[[KEZ, BCO, CQJ, WQS, TNF, ZEB, ILR, QGJ, MPH, VQC, AOL, VPV, OOM], [KEZ, BCO, CQJ, WQS, MPH, VQC, VPV, OOM, ILR, ZEB, QGJ, AOL, TNF], [KEZ, BCO, CQJ, WQS, MPH, VQC, AOL, VPV, OOM, TNF, ZEB, ILR, QGJ], [KEZ, VPV, AOL, ZEB, OOM, WQS, BCO, VQC, CQJ, ILR, TNF, MPH, QGJ]]',)",2,83
topological_sort,"[(TZN, NLF), (TZN, IXJ), (TZN, QSA), (TZN, PES), (NLF, CHI), (NLF, NHQ), (IXJ, PSG), (IXJ, NHQ), (PES, NLF), (PES, CHI), (CHI, NHQ), (CHI, ESG), (CTK, QSA), (CTK, NLF), (CTK, GLO), (GLO, NHQ), (GLO, NLF), (QGX, PSG), (QGX, GLO), (PSG, CTK), (ESG, NHQ), (FTQ, ESG), (FTQ, CTK), (FTQ, PSG), (FTQ, NHQ), (FTQ, PES), (FTQ, TZN)]","{TZN: [NLF, IXJ, QSA, PES],
NLF: [CHI, NHQ],
IXJ: [PSG, NHQ],
QSA: [],
PES: [NLF, CHI],
CHI: [NHQ, ESG],
NHQ: [],
CTK: [QSA, NLF, GLO],
GLO: [NHQ, NLF],
QGX: [PSG, GLO],
PSG: [CTK],
ESG: [NHQ],
FTQ: [ESG, CTK, PSG, NHQ, PES, TZN]}","Node TZN is connected to nodes NLF, IXJ, QSA, PES.
Node NLF is connected to nodes CHI, NHQ.
Node IXJ is connected to nodes PSG, NHQ.
Node PES is connected to nodes NLF, CHI.
Node CHI is connected to nodes NHQ, ESG.
Node CTK is connected to nodes QSA, NLF, GLO.
Node GLO is connected to nodes NHQ, NLF.
Node QGX is connected to nodes PSG, GLO.
Node PSG is connected to node CTK.
Node ESG is connected to node NHQ.
Node FTQ is connected to nodes ESG, CTK, PSG, NHQ, PES, TZN.","[ESG, QSA, NLF, FTQ, PES, TZN, QGX, GLO, PSG, CTK, CHI, IXJ, NHQ]",13,27,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QGX, FTQ, TZN, IXJ, PES, PSG, CTK, QSA, GLO, NLF, CHI, ESG, NHQ]","Let's solve it step by step.
Nodes with 0 in-degree: [QGX, FTQ].
Visit node QGX and remove it from the graph.
Nodes with 0 in-degree: [FTQ].
Visit node FTQ and remove it from the graph.
Nodes with 0 in-degree: [TZN].
Visit node TZN and remove it from the graph.
Nodes with 0 in-degree: [IXJ, PES].
Visit node IXJ and remove it from the graph.
Nodes with 0 in-degree: [PES, PSG].
Visit node PES and remove it from the graph.
Nodes with 0 in-degree: [PSG].
Visit node PSG and remove it from the graph.
Nodes with 0 in-degree: [CTK].
Visit node CTK and remove it from the graph.
Nodes with 0 in-degree: [QSA, GLO].
Visit node QSA and remove it from the graph.
Nodes with 0 in-degree: [GLO].
Visit node GLO and remove it from the graph.
Nodes with 0 in-degree: [NLF].
Visit node NLF and remove it from the graph.
Nodes with 0 in-degree: [CHI].
Visit node CHI and remove it from the graph.
Nodes with 0 in-degree: [ESG].
Visit node ESG and remove it from the graph.
Nodes with 0 in-degree: [NHQ].
Visit node NHQ and remove it from the graph.
So the result of topological sorting is ","('[[QGX, FTQ, TZN, IXJ, NLF, CHI, ESG, NHQ, PES, PSG, CTK, QSA, GLO], [QGX, FTQ, NLF, CTK, GLO, QSA, PES, NHQ, ESG, TZN, CHI, IXJ, PSG], [QGX, FTQ, TZN, IXJ, PES, PSG, NLF, NHQ, GLO, ESG, QSA, CHI, CTK], [QGX, FTQ, TZN, IXJ, PES, PSG, CTK, QSA, GLO, NLF, CHI, ESG, NHQ]]',)",3,84
topological_sort,"[(ADF, PFJ), (PFJ, DVC), (DVC, YWQ), (DVC, YGK), (RPZ, RZR), (RZR, DVC), (RZR, XCV), (RZR, ADF), (XCV, UHV), (XCV, DVC), (TVM, RPZ), (TVM, RQF), (TVM, QQT), (TVM, YGK), (TVM, WAS), (RQF, PFJ), (RQF, UHV), (QQT, SEZ), (QQT, ADF), (WAS, SEZ), (WAS, XCV), (WAS, RZR), (WAS, CDT), (SEZ, ADF), (SEZ, YWQ), (SEZ, RZR), (UHV, ADF), (CDT, SEZ), (CDT, UHV)]","{ADF: [PFJ],
PFJ: [DVC],
DVC: [YWQ, YGK],
RPZ: [RZR],
RZR: [DVC, XCV, ADF],
XCV: [UHV, DVC],
TVM: [RPZ, RQF, QQT, YGK, WAS],
RQF: [PFJ, UHV],
QQT: [SEZ, ADF],
YGK: [],
WAS: [SEZ, XCV, RZR, CDT],
SEZ: [ADF, YWQ, RZR],
YWQ: [],
UHV: [ADF],
CDT: [SEZ, UHV]}","Node ADF is connected to node PFJ.
Node PFJ is connected to node DVC.
Node DVC is connected to nodes YWQ, YGK.
Node RPZ is connected to node RZR.
Node RZR is connected to nodes DVC, XCV, ADF.
Node XCV is connected to nodes UHV, DVC.
Node TVM is connected to nodes RPZ, RQF, QQT, YGK, WAS.
Node RQF is connected to nodes PFJ, UHV.
Node QQT is connected to nodes SEZ, ADF.
Node WAS is connected to nodes SEZ, XCV, RZR, CDT.
Node SEZ is connected to nodes ADF, YWQ, RZR.
Node UHV is connected to node ADF.
Node CDT is connected to nodes SEZ, UHV.","[UHV, PFJ, QQT, ADF, RPZ, DVC, TVM, SEZ, YGK, CDT, XCV, RQF, WAS, RZR, YWQ]",15,29,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TVM, RPZ, RQF, QQT, WAS, CDT, SEZ, RZR, XCV, UHV, ADF, PFJ, DVC, YWQ, YGK]","Let's solve it step by step.
Nodes with 0 in-degree: [TVM].
Visit node TVM and remove it from the graph.
Nodes with 0 in-degree: [RPZ, RQF, QQT, WAS].
Visit node RPZ and remove it from the graph.
Nodes with 0 in-degree: [RQF, QQT, WAS].
Visit node RQF and remove it from the graph.
Nodes with 0 in-degree: [QQT, WAS].
Visit node QQT and remove it from the graph.
Nodes with 0 in-degree: [WAS].
Visit node WAS and remove it from the graph.
Nodes with 0 in-degree: [CDT].
Visit node CDT and remove it from the graph.
Nodes with 0 in-degree: [SEZ].
Visit node SEZ and remove it from the graph.
Nodes with 0 in-degree: [RZR].
Visit node RZR and remove it from the graph.
Nodes with 0 in-degree: [XCV].
Visit node XCV and remove it from the graph.
Nodes with 0 in-degree: [UHV].
Visit node UHV and remove it from the graph.
Nodes with 0 in-degree: [ADF].
Visit node ADF and remove it from the graph.
Nodes with 0 in-degree: [PFJ].
Visit node PFJ and remove it from the graph.
Nodes with 0 in-degree: [DVC].
Visit node DVC and remove it from the graph.
Nodes with 0 in-degree: [YWQ, YGK].
Visit node YWQ and remove it from the graph.
Nodes with 0 in-degree: [YGK].
Visit node YGK and remove it from the graph.
So the result of topological sorting is ","('[[TVM, RPZ, RQF, QQT, WAS, CDT, SEZ, RZR, XCV, UHV, ADF, PFJ, DVC, YWQ, YGK], [TVM, RPZ, RQF, QQT, WAS, CDT, SEZ, DVC, XCV, PFJ, RZR, YGK, ADF, UHV, YWQ], [TVM, RPZ, RQF, QQT, WAS, ADF, PFJ, DVC, YWQ, YGK, CDT, SEZ, RZR, XCV, UHV], [TVM, DVC, RPZ, ADF, SEZ, WAS, PFJ, CDT, YWQ, QQT, YGK, XCV, RQF, UHV, RZR]]',)",0,85
topological_sort,"[(KMB, SYO), (SYO, PLH), (SYO, DMZ), (PLH, RME), (DMZ, PLH), (TAE, SYO), (TAE, DMZ), (EHQ, SYO), (AYI, KMB)]","{KMB: [SYO],
SYO: [PLH, DMZ],
PLH: [RME],
DMZ: [PLH],
TAE: [SYO, DMZ],
RME: [],
EHQ: [SYO],
AYI: [KMB]}","Node KMB is connected to node SYO.
Node SYO is connected to nodes PLH, DMZ.
Node PLH is connected to node RME.
Node DMZ is connected to node PLH.
Node TAE is connected to nodes SYO, DMZ.
Node EHQ is connected to node SYO.
Node AYI is connected to node KMB.","[SYO, EHQ, TAE, DMZ, KMB, AYI, PLH, RME]",8,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TAE, EHQ, AYI, KMB, SYO, DMZ, PLH, RME]","Let's solve it step by step.
Nodes with 0 in-degree: [TAE, EHQ, AYI].
Visit node TAE and remove it from the graph.
Nodes with 0 in-degree: [EHQ, AYI].
Visit node EHQ and remove it from the graph.
Nodes with 0 in-degree: [AYI].
Visit node AYI and remove it from the graph.
Nodes with 0 in-degree: [KMB].
Visit node KMB and remove it from the graph.
Nodes with 0 in-degree: [SYO].
Visit node SYO and remove it from the graph.
Nodes with 0 in-degree: [DMZ].
Visit node DMZ and remove it from the graph.
Nodes with 0 in-degree: [PLH].
Visit node PLH and remove it from the graph.
Nodes with 0 in-degree: [RME].
Visit node RME and remove it from the graph.
So the result of topological sorting is ","('[[TAE, EHQ, AYI, KMB, SYO, DMZ, PLH, RME], [TAE, PLH, SYO, EHQ, AYI, DMZ, RME, KMB], [TAE, EHQ, PLH, RME, AYI, KMB, SYO, DMZ], [TAE, EHQ, AYI, KMB, DMZ, SYO, PLH, RME]]',)",0,86
topological_sort,"[(XAA, HDP), (XAA, CZJ), (XAA, GLF), (XAA, QVO), (HDP, GLF), (CZJ, QAW), (CZJ, LUT), (CZJ, HDP), (QVO, QAW), (QVO, LUT), (QVO, CZJ), (LUT, HDP), (LUT, GLF), (LUT, QAW), (QAW, HDP), (QAW, GLF), (ITF, XAA), (ITF, CZJ), (ITF, QAW), (ITF, GLF), (ITF, EGU), (ITF, BPN), (ITF, LUT), (ITF, HDP), (EGU, BPN), (EGU, QAW), (EGU, MMB), (EGU, CZJ), (EGU, XAA), (BPN, QAW), (BPN, CZJ), (BPN, XAA), (BPN, QVO), (MMB, QAW), (MMB, QVO), (MMB, HDP), (USB, HDP), (USB, QVO), (USB, ITF), (USB, EGU), (RPT, LUT), (RPT, YWA), (RPT, QVO), (RPT, CZJ), (RPT, ITF), (YWA, BPN), (YWA, QAW), (YWA, CZJ), (AMO, QVO), (AMO, XAA), (AMO, ITF)]","{XAA: [HDP, CZJ, GLF, QVO],
HDP: [GLF],
CZJ: [QAW, LUT, HDP],
GLF: [],
QVO: [QAW, LUT, CZJ],
LUT: [HDP, GLF, QAW],
QAW: [HDP, GLF],
ITF: [XAA, CZJ, QAW, GLF, EGU, BPN, LUT, HDP],
EGU: [BPN, QAW, MMB, CZJ, XAA],
BPN: [QAW, CZJ, XAA, QVO],
MMB: [QAW, QVO, HDP],
USB: [HDP, QVO, ITF, EGU],
RPT: [LUT, YWA, QVO, CZJ, ITF],
YWA: [BPN, QAW, CZJ],
AMO: [QVO, XAA, ITF]}","Node XAA is connected to nodes HDP, CZJ, GLF, QVO.
Node HDP is connected to node GLF.
Node CZJ is connected to nodes QAW, LUT, HDP.
Node QVO is connected to nodes QAW, LUT, CZJ.
Node LUT is connected to nodes HDP, GLF, QAW.
Node QAW is connected to nodes HDP, GLF.
Node ITF is connected to nodes XAA, CZJ, QAW, GLF, EGU, BPN, LUT, HDP.
Node EGU is connected to nodes BPN, QAW, MMB, CZJ, XAA.
Node BPN is connected to nodes QAW, CZJ, XAA, QVO.
Node MMB is connected to nodes QAW, QVO, HDP.
Node USB is connected to nodes HDP, QVO, ITF, EGU.
Node RPT is connected to nodes LUT, YWA, QVO, CZJ, ITF.
Node YWA is connected to nodes BPN, QAW, CZJ.
Node AMO is connected to nodes QVO, XAA, ITF.","[MMB, USB, RPT, EGU, YWA, XAA, AMO, HDP, QAW, BPN, QVO, ITF, CZJ, LUT, GLF]",15,51,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[USB, RPT, AMO, YWA, ITF, EGU, BPN, MMB, XAA, QVO, CZJ, LUT, QAW, HDP, GLF]","Let's solve it step by step.
Nodes with 0 in-degree: [USB, RPT, AMO].
Visit node USB and remove it from the graph.
Nodes with 0 in-degree: [RPT, AMO].
Visit node RPT and remove it from the graph.
Nodes with 0 in-degree: [AMO, YWA].
Visit node AMO and remove it from the graph.
Nodes with 0 in-degree: [YWA, ITF].
Visit node YWA and remove it from the graph.
Nodes with 0 in-degree: [ITF].
Visit node ITF and remove it from the graph.
Nodes with 0 in-degree: [EGU].
Visit node EGU and remove it from the graph.
Nodes with 0 in-degree: [BPN, MMB].
Visit node BPN and remove it from the graph.
Nodes with 0 in-degree: [MMB, XAA].
Visit node MMB and remove it from the graph.
Nodes with 0 in-degree: [XAA].
Visit node XAA and remove it from the graph.
Nodes with 0 in-degree: [QVO].
Visit node QVO and remove it from the graph.
Nodes with 0 in-degree: [CZJ].
Visit node CZJ and remove it from the graph.
Nodes with 0 in-degree: [LUT].
Visit node LUT and remove it from the graph.
Nodes with 0 in-degree: [QAW].
Visit node QAW and remove it from the graph.
Nodes with 0 in-degree: [HDP].
Visit node HDP and remove it from the graph.
Nodes with 0 in-degree: [GLF].
Visit node GLF and remove it from the graph.
So the result of topological sorting is ","('[[USB, RPT, AMO, YWA, ITF, CZJ, LUT, QAW, HDP, GLF, EGU, BPN, MMB, XAA, QVO], [USB, RPT, AMO, YWA, ITF, EGU, BPN, QVO, MMB, HDP, LUT, XAA, GLF, CZJ, QAW], [USB, RPT, QAW, EGU, YWA, CZJ, AMO, LUT, HDP, GLF, BPN, MMB, QVO, XAA, ITF], [USB, RPT, AMO, YWA, ITF, EGU, BPN, MMB, XAA, QVO, CZJ, LUT, QAW, HDP, GLF]]',)",3,87
topological_sort,"[(DVK, ILO), (DVK, WUP), (ILO, VEF), (ILO, UHB), (WUP, VEF), (VEF, YRU), (VEF, TUY), (UHB, TUY), (UHB, YRU), (CTV, IXJ), (CTV, DVK), (CTV, WUP), (CTV, ILO), (IXJ, MGN), (IXJ, FQO), (IXJ, PKF), (IXJ, UHB), (IXJ, YRU), (IXJ, ILO), (IXJ, DVK), (MGN, PKF), (MGN, VEF), (MGN, WUP), (MGN, TUY), (FQO, DVK), (FQO, UHB), (PKF, VEF), (PKF, DVK), (PKF, YRU), (PKF, UHB), (YRU, TUY), (TDI, PKF), (TDI, YRU), (TDI, UHB), (TDI, TUY), (TDI, FQO)]","{DVK: [ILO, WUP],
ILO: [VEF, UHB],
WUP: [VEF],
VEF: [YRU, TUY],
UHB: [TUY, YRU],
CTV: [IXJ, DVK, WUP, ILO],
IXJ: [MGN, FQO, PKF, UHB, YRU, ILO, DVK],
MGN: [PKF, VEF, WUP, TUY],
FQO: [DVK, UHB],
PKF: [VEF, DVK, YRU, UHB],
YRU: [TUY],
TUY: [],
TDI: [PKF, YRU, UHB, TUY, FQO]}","Node DVK is connected to nodes ILO, WUP.
Node ILO is connected to nodes VEF, UHB.
Node WUP is connected to node VEF.
Node VEF is connected to nodes YRU, TUY.
Node UHB is connected to nodes TUY, YRU.
Node CTV is connected to nodes IXJ, DVK, WUP, ILO.
Node IXJ is connected to nodes MGN, FQO, PKF, UHB, YRU, ILO, DVK.
Node MGN is connected to nodes PKF, VEF, WUP, TUY.
Node FQO is connected to nodes DVK, UHB.
Node PKF is connected to nodes VEF, DVK, YRU, UHB.
Node YRU is connected to node TUY.
Node TDI is connected to nodes PKF, YRU, UHB, TUY, FQO.","[FQO, UHB, VEF, WUP, TUY, MGN, ILO, PKF, DVK, CTV, IXJ, YRU, TDI]",13,36,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CTV, TDI, IXJ, MGN, FQO, PKF, DVK, ILO, WUP, UHB, VEF, YRU, TUY]","Let's solve it step by step.
Nodes with 0 in-degree: [CTV, TDI].
Visit node CTV and remove it from the graph.
Nodes with 0 in-degree: [TDI, IXJ].
Visit node TDI and remove it from the graph.
Nodes with 0 in-degree: [IXJ].
Visit node IXJ and remove it from the graph.
Nodes with 0 in-degree: [MGN, FQO].
Visit node MGN and remove it from the graph.
Nodes with 0 in-degree: [FQO, PKF].
Visit node FQO and remove it from the graph.
Nodes with 0 in-degree: [PKF].
Visit node PKF and remove it from the graph.
Nodes with 0 in-degree: [DVK].
Visit node DVK and remove it from the graph.
Nodes with 0 in-degree: [ILO, WUP].
Visit node ILO and remove it from the graph.
Nodes with 0 in-degree: [WUP, UHB].
Visit node WUP and remove it from the graph.
Nodes with 0 in-degree: [UHB, VEF].
Visit node UHB and remove it from the graph.
Nodes with 0 in-degree: [VEF].
Visit node VEF and remove it from the graph.
Nodes with 0 in-degree: [YRU].
Visit node YRU and remove it from the graph.
Nodes with 0 in-degree: [TUY].
Visit node TUY and remove it from the graph.
So the result of topological sorting is ","('[[CTV, TDI, IXJ, MGN, FQO, PKF, YRU, ILO, UHB, DVK, WUP, VEF, TUY], [CTV, TDI, IXJ, MGN, FQO, PKF, DVK, ILO, WUP, UHB, VEF, YRU, TUY], [CTV, TDI, IXJ, MGN, UHB, VEF, YRU, TUY, FQO, PKF, DVK, ILO, WUP], [CTV, TDI, UHB, ILO, PKF, FQO, MGN, YRU, TUY, WUP, VEF, DVK, IXJ]]',)",1,88
topological_sort,"[(CWO, JNU), (CWO, IBB), (VQM, TKK), (VQM, CNP), (VQM, CWO), (TKK, ZZV), (TKK, PPB), (TKK, IBB), (CNP, ZZV), (CNP, IBB), (CNP, JNU), (CNP, PPB), (ZZV, CWO), (PPB, CWO), (PPB, ZZV)]","{CWO: [JNU, IBB],
JNU: [],
IBB: [],
VQM: [TKK, CNP, CWO],
TKK: [ZZV, PPB, IBB],
CNP: [ZZV, IBB, JNU, PPB],
ZZV: [CWO],
PPB: [CWO, ZZV]}","Node CWO is connected to nodes JNU, IBB.
Node VQM is connected to nodes TKK, CNP, CWO.
Node TKK is connected to nodes ZZV, PPB, IBB.
Node CNP is connected to nodes ZZV, IBB, JNU, PPB.
Node ZZV is connected to node CWO.
Node PPB is connected to nodes CWO, ZZV.","[CNP, VQM, TKK, IBB, ZZV, PPB, CWO, JNU]",8,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VQM, TKK, CNP, PPB, ZZV, CWO, JNU, IBB]","Let's solve it step by step.
Nodes with 0 in-degree: [VQM].
Visit node VQM and remove it from the graph.
Nodes with 0 in-degree: [TKK, CNP].
Visit node TKK and remove it from the graph.
Nodes with 0 in-degree: [CNP].
Visit node CNP and remove it from the graph.
Nodes with 0 in-degree: [PPB].
Visit node PPB and remove it from the graph.
Nodes with 0 in-degree: [ZZV].
Visit node ZZV and remove it from the graph.
Nodes with 0 in-degree: [CWO].
Visit node CWO and remove it from the graph.
Nodes with 0 in-degree: [JNU, IBB].
Visit node JNU and remove it from the graph.
Nodes with 0 in-degree: [IBB].
Visit node IBB and remove it from the graph.
So the result of topological sorting is ","('[[VQM, TKK, CNP, PPB, ZZV, CWO, JNU, IBB], [VQM, PPB, CNP, JNU, IBB, ZZV, TKK, CWO], [VQM, TKK, JNU, IBB, CNP, PPB, ZZV, CWO], [VQM, TKK, CNP, PPB, JNU, IBB, CWO, ZZV]]',)",0,89
topological_sort,"[(ONN, ZJL), (ONN, UYI), (ONN, IJB), (ONN, TQI), (ONN, FIZ), (ONN, DUN), (ONN, HJR), (ZJL, FIZ), (ZJL, DUN), (ZJL, ATQ), (ZJL, HXI), (ZJL, UYI), (UYI, ATQ), (UYI, FIZ), (UYI, CBP), (UYI, ICC), (UYI, HXI), (FIZ, DUN), (FIZ, HXI), (DUN, IJB), (DUN, TQI), (HJR, IJB), (HJR, CBP), (HJR, FIZ), (HJR, UYI), (HJR, ZJL), (ATQ, HXI), (ATQ, CBP), (HXI, TQI), (WXG, TQI), (WXG, HXI), (WXG, DUN), (WXG, ZJL), (WXG, UYI), (WXG, HJR), (WXG, ONN), (CBP, FIZ), (CBP, IJB), (CBP, WNQ), (CBP, ICC), (ICC, TQI), (ICC, HXI), (ICC, WNQ), (WNQ, DUN)]","{ONN: [ZJL, UYI, IJB, TQI, FIZ, DUN, HJR],
ZJL: [FIZ, DUN, ATQ, HXI, UYI],
UYI: [ATQ, FIZ, CBP, ICC, HXI],
IJB: [],
TQI: [],
FIZ: [DUN, HXI],
DUN: [IJB, TQI],
HJR: [IJB, CBP, FIZ, UYI, ZJL],
ATQ: [HXI, CBP],
HXI: [TQI],
WXG: [TQI, HXI, DUN, ZJL, UYI, HJR, ONN],
CBP: [FIZ, IJB, WNQ, ICC],
ICC: [TQI, HXI, WNQ],
WNQ: [DUN]}","Node ONN is connected to nodes ZJL, UYI, IJB, TQI, FIZ, DUN, HJR.
Node ZJL is connected to nodes FIZ, DUN, ATQ, HXI, UYI.
Node UYI is connected to nodes ATQ, FIZ, CBP, ICC, HXI.
Node FIZ is connected to nodes DUN, HXI.
Node DUN is connected to nodes IJB, TQI.
Node HJR is connected to nodes IJB, CBP, FIZ, UYI, ZJL.
Node ATQ is connected to nodes HXI, CBP.
Node HXI is connected to node TQI.
Node WXG is connected to nodes TQI, HXI, DUN, ZJL, UYI, HJR, ONN.
Node CBP is connected to nodes FIZ, IJB, WNQ, ICC.
Node ICC is connected to nodes TQI, HXI, WNQ.
Node WNQ is connected to node DUN.","[WXG, ONN, UYI, FIZ, ATQ, IJB, HJR, DUN, WNQ, TQI, CBP, ICC, HXI, ZJL]",14,44,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WXG, ONN, HJR, ZJL, UYI, ATQ, CBP, FIZ, ICC, HXI, WNQ, DUN, IJB, TQI]","Let's solve it step by step.
Nodes with 0 in-degree: [WXG].
Visit node WXG and remove it from the graph.
Nodes with 0 in-degree: [ONN].
Visit node ONN and remove it from the graph.
Nodes with 0 in-degree: [HJR].
Visit node HJR and remove it from the graph.
Nodes with 0 in-degree: [ZJL].
Visit node ZJL and remove it from the graph.
Nodes with 0 in-degree: [UYI].
Visit node UYI and remove it from the graph.
Nodes with 0 in-degree: [ATQ].
Visit node ATQ and remove it from the graph.
Nodes with 0 in-degree: [CBP].
Visit node CBP and remove it from the graph.
Nodes with 0 in-degree: [FIZ, ICC].
Visit node FIZ and remove it from the graph.
Nodes with 0 in-degree: [ICC].
Visit node ICC and remove it from the graph.
Nodes with 0 in-degree: [HXI, WNQ].
Visit node HXI and remove it from the graph.
Nodes with 0 in-degree: [WNQ].
Visit node WNQ and remove it from the graph.
Nodes with 0 in-degree: [DUN].
Visit node DUN and remove it from the graph.
Nodes with 0 in-degree: [IJB, TQI].
Visit node IJB and remove it from the graph.
Nodes with 0 in-degree: [TQI].
Visit node TQI and remove it from the graph.
So the result of topological sorting is ","('[[WXG, ONN, HJR, ZJL, WNQ, DUN, IJB, TQI, UYI, ATQ, CBP, FIZ, ICC, HXI], [WXG, FIZ, IJB, ICC, UYI, ONN, WNQ, TQI, HJR, CBP, ZJL, HXI, DUN, ATQ], [WXG, ONN, HJR, ZJL, UYI, ATQ, CBP, FIZ, ICC, HXI, WNQ, DUN, IJB, TQI], [WXG, ONN, HJR, ZJL, UYI, ATQ, CBP, DUN, FIZ, TQI, ICC, IJB, WNQ, HXI]]',)",2,90
topological_sort,"[(GMU, WUP), (GMU, KDM), (GMU, BFX), (GMU, XUL), (WUP, JRU), (WUP, ATH), (KDM, MHA), (KDM, ATH), (BFX, ATH), (BFX, MHA), (BFX, PUQ), (XUL, JRU), (JRU, ATH), (JRU, BFX), (ZRL, ATH), (ZRL, FTD), (ZRL, XUL), (ZRL, BBB), (FTD, GMU), (BBB, WUP), (BBB, MHA), (PUQ, KDM), (GKK, BBB), (GKK, ZRL), (GKK, WUP), (RAZ, GKK), (ZAD, XUL), (ZAD, BBB)]","{GMU: [WUP, KDM, BFX, XUL],
WUP: [JRU, ATH],
KDM: [MHA, ATH],
BFX: [ATH, MHA, PUQ],
XUL: [JRU],
JRU: [ATH, BFX],
ATH: [],
ZRL: [ATH, FTD, XUL, BBB],
FTD: [GMU],
BBB: [WUP, MHA],
MHA: [],
PUQ: [KDM],
GKK: [BBB, ZRL, WUP],
RAZ: [GKK],
ZAD: [XUL, BBB]}","Node GMU is connected to nodes WUP, KDM, BFX, XUL.
Node WUP is connected to nodes JRU, ATH.
Node KDM is connected to nodes MHA, ATH.
Node BFX is connected to nodes ATH, MHA, PUQ.
Node XUL is connected to node JRU.
Node JRU is connected to nodes ATH, BFX.
Node ZRL is connected to nodes ATH, FTD, XUL, BBB.
Node FTD is connected to node GMU.
Node BBB is connected to nodes WUP, MHA.
Node PUQ is connected to node KDM.
Node GKK is connected to nodes BBB, ZRL, WUP.
Node RAZ is connected to node GKK.
Node ZAD is connected to nodes XUL, BBB.","[ZAD, GKK, ZRL, PUQ, BBB, RAZ, FTD, JRU, BFX, XUL, WUP, KDM, MHA, GMU, ATH]",15,28,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RAZ, ZAD, GKK, ZRL, FTD, BBB, GMU, WUP, XUL, JRU, BFX, PUQ, KDM, MHA, ATH]","Let's solve it step by step.
Nodes with 0 in-degree: [RAZ, ZAD].
Visit node RAZ and remove it from the graph.
Nodes with 0 in-degree: [ZAD, GKK].
Visit node ZAD and remove it from the graph.
Nodes with 0 in-degree: [GKK].
Visit node GKK and remove it from the graph.
Nodes with 0 in-degree: [ZRL].
Visit node ZRL and remove it from the graph.
Nodes with 0 in-degree: [FTD, BBB].
Visit node FTD and remove it from the graph.
Nodes with 0 in-degree: [BBB, GMU].
Visit node BBB and remove it from the graph.
Nodes with 0 in-degree: [GMU].
Visit node GMU and remove it from the graph.
Nodes with 0 in-degree: [WUP, XUL].
Visit node WUP and remove it from the graph.
Nodes with 0 in-degree: [XUL].
Visit node XUL and remove it from the graph.
Nodes with 0 in-degree: [JRU].
Visit node JRU and remove it from the graph.
Nodes with 0 in-degree: [BFX].
Visit node BFX and remove it from the graph.
Nodes with 0 in-degree: [PUQ].
Visit node PUQ and remove it from the graph.
Nodes with 0 in-degree: [KDM].
Visit node KDM and remove it from the graph.
Nodes with 0 in-degree: [MHA, ATH].
Visit node MHA and remove it from the graph.
Nodes with 0 in-degree: [ATH].
Visit node ATH and remove it from the graph.
So the result of topological sorting is ","('[[RAZ, ZAD, GKK, ZRL, FTD, BFX, PUQ, KDM, MHA, ATH, BBB, GMU, WUP, XUL, JRU], [RAZ, ZAD, GKK, ZRL, FTD, BBB, GMU, JRU, KDM, PUQ, XUL, ATH, BFX, MHA, WUP], [RAZ, ZAD, GKK, ZRL, FTD, BBB, GMU, WUP, XUL, JRU, BFX, PUQ, KDM, MHA, ATH], [RAZ, PUQ, MHA, JRU, ATH, KDM, GKK, FTD, ZAD, XUL, ZRL, BFX, GMU, WUP, BBB]]',)",2,91
topological_sort,"[(ZVN, LHB), (ZVN, QXG), (ZVN, MMA), (ZVN, XPP), (LHB, ZNE), (LHB, EEO), (QXG, FQE), (QXG, XPP), (QXG, MMA), (MMA, LWL), (MMA, FUU), (XPP, FUU), (XPP, MMA), (XPP, FQE), (ZNE, FUU), (LWL, FQE), (LWL, EEO), (FQE, LHB), (FUU, EEO), (BSH, QXG), (BSH, LHB), (BSH, LWL), (BSH, ZVN), (NPK, ZNE), (NPK, BSH), (NPK, FQE)]","{ZVN: [LHB, QXG, MMA, XPP],
LHB: [ZNE, EEO],
QXG: [FQE, XPP, MMA],
MMA: [LWL, FUU],
XPP: [FUU, MMA, FQE],
ZNE: [FUU],
EEO: [],
LWL: [FQE, EEO],
FQE: [LHB],
FUU: [EEO],
BSH: [QXG, LHB, LWL, ZVN],
NPK: [ZNE, BSH, FQE]}","Node ZVN is connected to nodes LHB, QXG, MMA, XPP.
Node LHB is connected to nodes ZNE, EEO.
Node QXG is connected to nodes FQE, XPP, MMA.
Node MMA is connected to nodes LWL, FUU.
Node XPP is connected to nodes FUU, MMA, FQE.
Node ZNE is connected to node FUU.
Node LWL is connected to nodes FQE, EEO.
Node FQE is connected to node LHB.
Node FUU is connected to node EEO.
Node BSH is connected to nodes QXG, LHB, LWL, ZVN.
Node NPK is connected to nodes ZNE, BSH, FQE.","[QXG, XPP, MMA, EEO, ZVN, FQE, NPK, LHB, ZNE, FUU, BSH, LWL]",12,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[NPK, BSH, ZVN, QXG, XPP, MMA, LWL, FQE, LHB, ZNE, FUU, EEO]","Let's solve it step by step.
Nodes with 0 in-degree: [NPK].
Visit node NPK and remove it from the graph.
Nodes with 0 in-degree: [BSH].
Visit node BSH and remove it from the graph.
Nodes with 0 in-degree: [ZVN].
Visit node ZVN and remove it from the graph.
Nodes with 0 in-degree: [QXG].
Visit node QXG and remove it from the graph.
Nodes with 0 in-degree: [XPP].
Visit node XPP and remove it from the graph.
Nodes with 0 in-degree: [MMA].
Visit node MMA and remove it from the graph.
Nodes with 0 in-degree: [LWL].
Visit node LWL and remove it from the graph.
Nodes with 0 in-degree: [FQE].
Visit node FQE and remove it from the graph.
Nodes with 0 in-degree: [LHB].
Visit node LHB and remove it from the graph.
Nodes with 0 in-degree: [ZNE].
Visit node ZNE and remove it from the graph.
Nodes with 0 in-degree: [FUU].
Visit node FUU and remove it from the graph.
Nodes with 0 in-degree: [EEO].
Visit node EEO and remove it from the graph.
So the result of topological sorting is ","('[[NPK, BSH, ZVN, QXG, XPP, MMA, FQE, LHB, EEO, FUU, ZNE, LWL], [NPK, BSH, ZVN, QXG, XPP, MMA, LWL, FQE, LHB, ZNE, FUU, EEO], [NPK, QXG, MMA, BSH, LWL, FUU, XPP, ZNE, EEO, LHB, FQE, ZVN], [NPK, BSH, ZVN, QXG, LHB, ZNE, FUU, EEO, XPP, MMA, LWL, FQE]]',)",1,92
topological_sort,"[(UZL, COX), (UZL, KCG), (UZL, CHP), (COX, TLB), (KCG, IJK), (CHP, KCG), (OHS, UZL), (OHS, TLB), (KGU, COX), (KGU, FAZ), (KGU, UZL), (FAZ, OHS), (FAZ, IJK), (FAZ, OMP), (FAZ, COX), (FAZ, KCG), (IJK, COX), (OMP, OHS), (OMP, KCG)]","{UZL: [COX, KCG, CHP],
COX: [TLB],
KCG: [IJK],
CHP: [KCG],
TLB: [],
OHS: [UZL, TLB],
KGU: [COX, FAZ, UZL],
FAZ: [OHS, IJK, OMP, COX, KCG],
IJK: [COX],
OMP: [OHS, KCG]}","Node UZL is connected to nodes COX, KCG, CHP.
Node COX is connected to node TLB.
Node KCG is connected to node IJK.
Node CHP is connected to node KCG.
Node OHS is connected to nodes UZL, TLB.
Node KGU is connected to nodes COX, FAZ, UZL.
Node FAZ is connected to nodes OHS, IJK, OMP, COX, KCG.
Node IJK is connected to node COX.
Node OMP is connected to nodes OHS, KCG.","[TLB, CHP, OMP, FAZ, KCG, OHS, KGU, IJK, UZL, COX]",10,19,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KGU, FAZ, OMP, OHS, UZL, CHP, KCG, IJK, COX, TLB]","Let's solve it step by step.
Nodes with 0 in-degree: [KGU].
Visit node KGU and remove it from the graph.
Nodes with 0 in-degree: [FAZ].
Visit node FAZ and remove it from the graph.
Nodes with 0 in-degree: [OMP].
Visit node OMP and remove it from the graph.
Nodes with 0 in-degree: [OHS].
Visit node OHS and remove it from the graph.
Nodes with 0 in-degree: [UZL].
Visit node UZL and remove it from the graph.
Nodes with 0 in-degree: [CHP].
Visit node CHP and remove it from the graph.
Nodes with 0 in-degree: [KCG].
Visit node KCG and remove it from the graph.
Nodes with 0 in-degree: [IJK].
Visit node IJK and remove it from the graph.
Nodes with 0 in-degree: [COX].
Visit node COX and remove it from the graph.
Nodes with 0 in-degree: [TLB].
Visit node TLB and remove it from the graph.
So the result of topological sorting is ","('[[KGU, FAZ, CHP, OMP, KCG, IJK, UZL, COX, OHS, TLB], [KGU, FAZ, OMP, IJK, COX, TLB, OHS, UZL, CHP, KCG], [KGU, FAZ, OMP, OHS, UZL, KCG, CHP, IJK, TLB, COX], [KGU, FAZ, OMP, OHS, UZL, CHP, KCG, IJK, COX, TLB]]',)",3,93
topological_sort,"[(DEM, LRD), (DEM, SIH), (DEM, EKM), (DEM, JEK), (LRD, HTZ), (SIH, HTZ), (SIH, LRD), (EKM, VIS), (JEK, RFS), (JEK, HTZ), (JEK, EKM), (HTZ, VIS), (HTZ, QQR), (ZVU, RFS), (ZVU, LRD), (ZVU, IVD), (ZVU, HTZ), (IVD, JEK), (IVD, LRD), (VIS, QQR), (LKW, RFS), (LKW, IVD), (LKW, ZVU), (RNB, LKW), (RNB, GMV), (RNB, FJY), (RNB, HTZ), (RNB, IVD), (GMV, RFS), (GMV, FJY), (FJY, HTZ), (FJY, LRD)]","{DEM: [LRD, SIH, EKM, JEK],
LRD: [HTZ],
SIH: [HTZ, LRD],
EKM: [VIS],
JEK: [RFS, HTZ, EKM],
HTZ: [VIS, QQR],
ZVU: [RFS, LRD, IVD, HTZ],
RFS: [],
IVD: [JEK, LRD],
VIS: [QQR],
QQR: [],
LKW: [RFS, IVD, ZVU],
RNB: [LKW, GMV, FJY, HTZ, IVD],
GMV: [RFS, FJY],
FJY: [HTZ, LRD]}","Node DEM is connected to nodes LRD, SIH, EKM, JEK.
Node LRD is connected to node HTZ.
Node SIH is connected to nodes HTZ, LRD.
Node EKM is connected to node VIS.
Node JEK is connected to nodes RFS, HTZ, EKM.
Node HTZ is connected to nodes VIS, QQR.
Node ZVU is connected to nodes RFS, LRD, IVD, HTZ.
Node IVD is connected to nodes JEK, LRD.
Node VIS is connected to node QQR.
Node LKW is connected to nodes RFS, IVD, ZVU.
Node RNB is connected to nodes LKW, GMV, FJY, HTZ, IVD.
Node GMV is connected to nodes RFS, FJY.
Node FJY is connected to nodes HTZ, LRD.","[HTZ, EKM, GMV, VIS, IVD, SIH, FJY, LKW, RFS, JEK, LRD, QQR, DEM, RNB, ZVU]",15,32,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DEM, RNB, SIH, LKW, GMV, ZVU, FJY, IVD, JEK, LRD, RFS, EKM, HTZ, VIS, QQR]","Let's solve it step by step.
Nodes with 0 in-degree: [DEM, RNB].
Visit node DEM and remove it from the graph.
Nodes with 0 in-degree: [RNB, SIH].
Visit node RNB and remove it from the graph.
Nodes with 0 in-degree: [SIH, LKW, GMV].
Visit node SIH and remove it from the graph.
Nodes with 0 in-degree: [LKW, GMV].
Visit node LKW and remove it from the graph.
Nodes with 0 in-degree: [GMV, ZVU].
Visit node GMV and remove it from the graph.
Nodes with 0 in-degree: [ZVU, FJY].
Visit node ZVU and remove it from the graph.
Nodes with 0 in-degree: [FJY, IVD].
Visit node FJY and remove it from the graph.
Nodes with 0 in-degree: [IVD].
Visit node IVD and remove it from the graph.
Nodes with 0 in-degree: [JEK, LRD].
Visit node JEK and remove it from the graph.
Nodes with 0 in-degree: [LRD, RFS, EKM].
Visit node LRD and remove it from the graph.
Nodes with 0 in-degree: [RFS, EKM, HTZ].
Visit node RFS and remove it from the graph.
Nodes with 0 in-degree: [EKM, HTZ].
Visit node EKM and remove it from the graph.
Nodes with 0 in-degree: [HTZ].
Visit node HTZ and remove it from the graph.
Nodes with 0 in-degree: [VIS].
Visit node VIS and remove it from the graph.
Nodes with 0 in-degree: [QQR].
Visit node QQR and remove it from the graph.
So the result of topological sorting is ","('[[DEM, RNB, SIH, LKW, GMV, RFS, EKM, HTZ, VIS, QQR, ZVU, FJY, IVD, JEK, LRD], [DEM, SIH, LKW, FJY, ZVU, EKM, LRD, HTZ, IVD, JEK, RFS, VIS, GMV, QQR, RNB], [DEM, RNB, SIH, LKW, GMV, ZVU, FJY, HTZ, JEK, LRD, EKM, QQR, RFS, VIS, IVD], [DEM, RNB, SIH, LKW, GMV, ZVU, FJY, IVD, JEK, LRD, RFS, EKM, HTZ, VIS, QQR]]',)",3,94
topological_sort,"[(PCI, CQY), (PCI, TTB), (PCI, PJV), (CQY, WHW), (CQY, TKT), (CQY, RKR), (TTB, GRI), (TTB, CQY), (TTB, THF), (PJV, THF), (PJV, CQY), (PJV, JJF), (PJV, GRI), (PJV, RKR), (PJV, SXQ), (WHW, RKR), (TKT, WHW), (TKT, GRI), (TKT, RKR), (ANR, WHW), (ANR, JJF), (ANR, TTB), (ANR, PCI), (ANR, OQW), (JJF, TTB), (JJF, GRI), (JJF, THF), (JJF, CQY), (OQW, TTB), (OQW, PCI), (THF, CQY), (THF, WHW), (SXQ, JJF), (NAY, GRI), (NAY, TTB), (NAY, CQY), (NAY, PCI), (NAY, TKT), (NAY, THF)]","{PCI: [CQY, TTB, PJV],
CQY: [WHW, TKT, RKR],
TTB: [GRI, CQY, THF],
PJV: [THF, CQY, JJF, GRI, RKR, SXQ],
WHW: [RKR],
TKT: [WHW, GRI, RKR],
RKR: [],
ANR: [WHW, JJF, TTB, PCI, OQW],
JJF: [TTB, GRI, THF, CQY],
OQW: [TTB, PCI],
THF: [CQY, WHW],
GRI: [],
SXQ: [JJF],
NAY: [GRI, TTB, CQY, PCI, TKT, THF]}","Node PCI is connected to nodes CQY, TTB, PJV.
Node CQY is connected to nodes WHW, TKT, RKR.
Node TTB is connected to nodes GRI, CQY, THF.
Node PJV is connected to nodes THF, CQY, JJF, GRI, RKR, SXQ.
Node WHW is connected to node RKR.
Node TKT is connected to nodes WHW, GRI, RKR.
Node ANR is connected to nodes WHW, JJF, TTB, PCI, OQW.
Node JJF is connected to nodes TTB, GRI, THF, CQY.
Node OQW is connected to nodes TTB, PCI.
Node THF is connected to nodes CQY, WHW.
Node SXQ is connected to node JJF.
Node NAY is connected to nodes GRI, TTB, CQY, PCI, TKT, THF.","[THF, TTB, JJF, CQY, WHW, NAY, PJV, TKT, ANR, PCI, SXQ, RKR, GRI, OQW]",14,39,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ANR, NAY, OQW, PCI, PJV, SXQ, JJF, TTB, THF, CQY, TKT, WHW, GRI, RKR]","Let's solve it step by step.
Nodes with 0 in-degree: [ANR, NAY].
Visit node ANR and remove it from the graph.
Nodes with 0 in-degree: [NAY, OQW].
Visit node NAY and remove it from the graph.
Nodes with 0 in-degree: [OQW].
Visit node OQW and remove it from the graph.
Nodes with 0 in-degree: [PCI].
Visit node PCI and remove it from the graph.
Nodes with 0 in-degree: [PJV].
Visit node PJV and remove it from the graph.
Nodes with 0 in-degree: [SXQ].
Visit node SXQ and remove it from the graph.
Nodes with 0 in-degree: [JJF].
Visit node JJF and remove it from the graph.
Nodes with 0 in-degree: [TTB].
Visit node TTB and remove it from the graph.
Nodes with 0 in-degree: [THF].
Visit node THF and remove it from the graph.
Nodes with 0 in-degree: [CQY].
Visit node CQY and remove it from the graph.
Nodes with 0 in-degree: [TKT].
Visit node TKT and remove it from the graph.
Nodes with 0 in-degree: [WHW, GRI].
Visit node WHW and remove it from the graph.
Nodes with 0 in-degree: [GRI, RKR].
Visit node GRI and remove it from the graph.
Nodes with 0 in-degree: [RKR].
Visit node RKR and remove it from the graph.
So the result of topological sorting is ","('[[ANR, NAY, OQW, PCI, PJV, SXQ, JJF, GRI, RKR, TTB, CQY, THF, TKT, WHW], [ANR, JJF, THF, NAY, CQY, WHW, SXQ, OQW, RKR, TTB, PCI, TKT, GRI, PJV], [ANR, NAY, OQW, PCI, TKT, WHW, GRI, RKR, PJV, SXQ, JJF, TTB, THF, CQY], [ANR, NAY, OQW, PCI, PJV, SXQ, JJF, TTB, THF, CQY, TKT, WHW, GRI, RKR]]',)",3,95
topological_sort,"[(XWM, GZX), (XWM, GYW), (XWM, GMT), (XWM, ZXW), (GZX, GIR), (GYW, ZXW), (GYW, GZX), (GYW, YQL), (GMT, GYW), (GMT, ZXW), (GMT, UFK), (GMT, GZX), (ZXW, UFK), (ZXW, GIR), (EGN, UFK), (EGN, GZX), (EGN, GIR), (EGN, XWM), (EGN, ZXW), (EGN, YQL), (UFK, GIR), (YQL, ZXW), (YQL, GIR), (GTX, XWM), (GTX, GYW), (GTX, GMT), (GTX, EGN), (GTX, GIR)]","{XWM: [GZX, GYW, GMT, ZXW],
GZX: [GIR],
GYW: [ZXW, GZX, YQL],
GMT: [GYW, ZXW, UFK, GZX],
ZXW: [UFK, GIR],
GIR: [],
EGN: [UFK, GZX, GIR, XWM, ZXW, YQL],
UFK: [GIR],
YQL: [ZXW, GIR],
GTX: [XWM, GYW, GMT, EGN, GIR]}","Node XWM is connected to nodes GZX, GYW, GMT, ZXW.
Node GZX is connected to node GIR.
Node GYW is connected to nodes ZXW, GZX, YQL.
Node GMT is connected to nodes GYW, ZXW, UFK, GZX.
Node ZXW is connected to nodes UFK, GIR.
Node EGN is connected to nodes UFK, GZX, GIR, XWM, ZXW, YQL.
Node UFK is connected to node GIR.
Node YQL is connected to nodes ZXW, GIR.
Node GTX is connected to nodes XWM, GYW, GMT, EGN, GIR.","[GYW, XWM, GMT, ZXW, GZX, GTX, EGN, YQL, GIR, UFK]",10,28,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GTX, EGN, XWM, GMT, GYW, GZX, YQL, ZXW, UFK, GIR]","Let's solve it step by step.
Nodes with 0 in-degree: [GTX].
Visit node GTX and remove it from the graph.
Nodes with 0 in-degree: [EGN].
Visit node EGN and remove it from the graph.
Nodes with 0 in-degree: [XWM].
Visit node XWM and remove it from the graph.
Nodes with 0 in-degree: [GMT].
Visit node GMT and remove it from the graph.
Nodes with 0 in-degree: [GYW].
Visit node GYW and remove it from the graph.
Nodes with 0 in-degree: [GZX, YQL].
Visit node GZX and remove it from the graph.
Nodes with 0 in-degree: [YQL].
Visit node YQL and remove it from the graph.
Nodes with 0 in-degree: [ZXW].
Visit node ZXW and remove it from the graph.
Nodes with 0 in-degree: [UFK].
Visit node UFK and remove it from the graph.
Nodes with 0 in-degree: [GIR].
Visit node GIR and remove it from the graph.
So the result of topological sorting is ","('[[GTX, EGN, XWM, ZXW, UFK, GIR, GMT, GYW, GZX, YQL], [GTX, YQL, EGN, UFK, XWM, GIR, GMT, GYW, ZXW, GZX], [GTX, EGN, XWM, GMT, GYW, GZX, YQL, ZXW, UFK, GIR], [GTX, EGN, XWM, GMT, GYW, ZXW, GZX, GIR, YQL, UFK]]',)",2,96
topological_sort,"[(LLG, WSW), (LLG, JRO), (LLG, DBO), (LLG, SHO), (LLG, XOC), (WSW, DBO), (WSW, JRO), (JRO, SHO), (DBO, SHO), (XOC, WSW), (XOC, SHO), (OGI, VMQ), (OGI, WSW), (OGI, SGX), (OGI, DBO), (VMQ, LLG)]","{LLG: [WSW, JRO, DBO, SHO, XOC],
WSW: [DBO, JRO],
JRO: [SHO],
DBO: [SHO],
SHO: [],
XOC: [WSW, SHO],
OGI: [VMQ, WSW, SGX, DBO],
VMQ: [LLG],
SGX: []}","Node LLG is connected to nodes WSW, JRO, DBO, SHO, XOC.
Node WSW is connected to nodes DBO, JRO.
Node JRO is connected to node SHO.
Node DBO is connected to node SHO.
Node XOC is connected to nodes WSW, SHO.
Node OGI is connected to nodes VMQ, WSW, SGX, DBO.
Node VMQ is connected to node LLG.","[VMQ, SGX, DBO, JRO, SHO, OGI, XOC, LLG, WSW]",9,16,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OGI, VMQ, SGX, LLG, XOC, WSW, DBO, JRO, SHO]","Let's solve it step by step.
Nodes with 0 in-degree: [OGI].
Visit node OGI and remove it from the graph.
Nodes with 0 in-degree: [VMQ, SGX].
Visit node VMQ and remove it from the graph.
Nodes with 0 in-degree: [SGX, LLG].
Visit node SGX and remove it from the graph.
Nodes with 0 in-degree: [LLG].
Visit node LLG and remove it from the graph.
Nodes with 0 in-degree: [XOC].
Visit node XOC and remove it from the graph.
Nodes with 0 in-degree: [WSW].
Visit node WSW and remove it from the graph.
Nodes with 0 in-degree: [DBO, JRO].
Visit node DBO and remove it from the graph.
Nodes with 0 in-degree: [JRO].
Visit node JRO and remove it from the graph.
Nodes with 0 in-degree: [SHO].
Visit node SHO and remove it from the graph.
So the result of topological sorting is ","('[[OGI, VMQ, SGX, LLG, WSW, JRO, XOC, DBO, SHO], [OGI, VMQ, DBO, WSW, LLG, XOC, SGX, SHO, JRO], [OGI, VMQ, SGX, LLG, XOC, WSW, DBO, JRO, SHO], [OGI, VMQ, SGX, DBO, JRO, SHO, LLG, XOC, WSW]]',)",2,97
topological_sort,"[(CFN, CXH), (CFN, PEP), (PEP, CXH), (XJH, WTM), (XJH, VIK), (WTM, CXH), (WTM, PEP), (VIK, XYZ), (ATJ, CXH), (ATJ, TMG), (ATJ, VIK), (TMG, XYZ), (TMG, PEP), (XYZ, PEP), (KQY, ATJ), (BRH, VIK)]","{CFN: [CXH, PEP],
CXH: [],
PEP: [CXH],
XJH: [WTM, VIK],
WTM: [CXH, PEP],
VIK: [XYZ],
ATJ: [CXH, TMG, VIK],
TMG: [XYZ, PEP],
XYZ: [PEP],
KQY: [ATJ],
BRH: [VIK]}","Node CFN is connected to nodes CXH, PEP.
Node PEP is connected to node CXH.
Node XJH is connected to nodes WTM, VIK.
Node WTM is connected to nodes CXH, PEP.
Node VIK is connected to node XYZ.
Node ATJ is connected to nodes CXH, TMG, VIK.
Node TMG is connected to nodes XYZ, PEP.
Node XYZ is connected to node PEP.
Node KQY is connected to node ATJ.
Node BRH is connected to node VIK.","[XYZ, PEP, ATJ, BRH, KQY, XJH, CFN, WTM, CXH, TMG, VIK]",11,16,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CFN, XJH, KQY, BRH, WTM, ATJ, TMG, VIK, XYZ, PEP, CXH]","Let's solve it step by step.
Nodes with 0 in-degree: [CFN, XJH, KQY, BRH].
Visit node CFN and remove it from the graph.
Nodes with 0 in-degree: [XJH, KQY, BRH].
Visit node XJH and remove it from the graph.
Nodes with 0 in-degree: [KQY, BRH, WTM].
Visit node KQY and remove it from the graph.
Nodes with 0 in-degree: [BRH, WTM, ATJ].
Visit node BRH and remove it from the graph.
Nodes with 0 in-degree: [WTM, ATJ].
Visit node WTM and remove it from the graph.
Nodes with 0 in-degree: [ATJ].
Visit node ATJ and remove it from the graph.
Nodes with 0 in-degree: [TMG, VIK].
Visit node TMG and remove it from the graph.
Nodes with 0 in-degree: [VIK].
Visit node VIK and remove it from the graph.
Nodes with 0 in-degree: [XYZ].
Visit node XYZ and remove it from the graph.
Nodes with 0 in-degree: [PEP].
Visit node PEP and remove it from the graph.
Nodes with 0 in-degree: [CXH].
Visit node CXH and remove it from the graph.
So the result of topological sorting is ","('[[CFN, XJH, KQY, BRH, WTM, ATJ, TMG, VIK, XYZ, PEP, CXH], [CFN, KQY, ATJ, PEP, WTM, CXH, TMG, XYZ, BRH, VIK, XJH], [CFN, XJH, KQY, BRH, WTM, ATJ, CXH, XYZ, VIK, TMG, PEP], [CFN, XJH, KQY, XYZ, PEP, CXH, BRH, WTM, ATJ, TMG, VIK]]',)",0,98
topological_sort,"[(DMO, LTM), (DMO, ZWA), (LTM, CPM), (ZWA, ZGT), (ZWA, GNB), (ZWA, LTM), (ZWA, EBW), (ZWA, CPM), (ZGT, CPM), (GNB, HOJ), (GNB, NOY), (GNB, ZGT), (EBW, SYG), (EBW, LTM), (EBW, HOJ), (EBW, CPM), (SYG, LTM), (HOJ, ZGT), (HOJ, LTM), (NOY, LTM), (NOY, EBW), (NOY, CPM)]","{DMO: [LTM, ZWA],
LTM: [CPM],
ZWA: [ZGT, GNB, LTM, EBW, CPM],
CPM: [],
ZGT: [CPM],
GNB: [HOJ, NOY, ZGT],
EBW: [SYG, LTM, HOJ, CPM],
SYG: [LTM],
HOJ: [ZGT, LTM],
NOY: [LTM, EBW, CPM]}","Node DMO is connected to nodes LTM, ZWA.
Node LTM is connected to node CPM.
Node ZWA is connected to nodes ZGT, GNB, LTM, EBW, CPM.
Node ZGT is connected to node CPM.
Node GNB is connected to nodes HOJ, NOY, ZGT.
Node EBW is connected to nodes SYG, LTM, HOJ, CPM.
Node SYG is connected to node LTM.
Node HOJ is connected to nodes ZGT, LTM.
Node NOY is connected to nodes LTM, EBW, CPM.","[LTM, ZGT, EBW, DMO, HOJ, SYG, NOY, GNB, CPM, ZWA]",10,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DMO, ZWA, GNB, NOY, EBW, SYG, HOJ, ZGT, LTM, CPM]","Let's solve it step by step.
Nodes with 0 in-degree: [DMO].
Visit node DMO and remove it from the graph.
Nodes with 0 in-degree: [ZWA].
Visit node ZWA and remove it from the graph.
Nodes with 0 in-degree: [GNB].
Visit node GNB and remove it from the graph.
Nodes with 0 in-degree: [NOY].
Visit node NOY and remove it from the graph.
Nodes with 0 in-degree: [EBW].
Visit node EBW and remove it from the graph.
Nodes with 0 in-degree: [SYG, HOJ].
Visit node SYG and remove it from the graph.
Nodes with 0 in-degree: [HOJ].
Visit node HOJ and remove it from the graph.
Nodes with 0 in-degree: [ZGT, LTM].
Visit node ZGT and remove it from the graph.
Nodes with 0 in-degree: [LTM].
Visit node LTM and remove it from the graph.
Nodes with 0 in-degree: [CPM].
Visit node CPM and remove it from the graph.
So the result of topological sorting is ","('[[DMO, HOJ, NOY, SYG, ZWA, LTM, CPM, ZGT, EBW, GNB], [DMO, ZWA, GNB, NOY, EBW, CPM, ZGT, HOJ, LTM, SYG], [DMO, ZWA, GNB, ZGT, LTM, CPM, NOY, EBW, SYG, HOJ], [DMO, ZWA, GNB, NOY, EBW, SYG, HOJ, ZGT, LTM, CPM]]',)",3,99
topological_sort,"[(ZLP, UIB), (ZLP, VHJ), (ZLP, GGR), (UIB, TTU), (GGR, UIB), (OQF, TKD), (OQF, TTU), (OQF, BIG), (OQF, DXV), (OQF, AOY), (TKD, ZLP), (TKD, TMN), (TKD, BIG), (BIG, TTU), (DXV, NIO), (DXV, UIB), (DXV, VHJ), (AOY, BIG), (AOY, ZLP), (TMN, AOY), (TMN, GGR), (TMN, TTU), (NIO, VHJ), (NIO, UIB), (NIO, AOY), (JPS, TTU)]","{ZLP: [UIB, VHJ, GGR],
UIB: [TTU],
VHJ: [],
GGR: [UIB],
TTU: [],
OQF: [TKD, TTU, BIG, DXV, AOY],
TKD: [ZLP, TMN, BIG],
BIG: [TTU],
DXV: [NIO, UIB, VHJ],
AOY: [BIG, ZLP],
TMN: [AOY, GGR, TTU],
NIO: [VHJ, UIB, AOY],
JPS: [TTU]}","Node ZLP is connected to nodes UIB, VHJ, GGR.
Node UIB is connected to node TTU.
Node GGR is connected to node UIB.
Node OQF is connected to nodes TKD, TTU, BIG, DXV, AOY.
Node TKD is connected to nodes ZLP, TMN, BIG.
Node BIG is connected to node TTU.
Node DXV is connected to nodes NIO, UIB, VHJ.
Node AOY is connected to nodes BIG, ZLP.
Node TMN is connected to nodes AOY, GGR, TTU.
Node NIO is connected to nodes VHJ, UIB, AOY.
Node JPS is connected to node TTU.","[DXV, TTU, TMN, ZLP, JPS, AOY, NIO, VHJ, OQF, BIG, TKD, GGR, UIB]",13,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OQF, JPS, TKD, DXV, TMN, NIO, AOY, BIG, ZLP, VHJ, GGR, UIB, TTU]","Let's solve it step by step.
Nodes with 0 in-degree: [OQF, JPS].
Visit node OQF and remove it from the graph.
Nodes with 0 in-degree: [JPS, TKD, DXV].
Visit node JPS and remove it from the graph.
Nodes with 0 in-degree: [TKD, DXV].
Visit node TKD and remove it from the graph.
Nodes with 0 in-degree: [DXV, TMN].
Visit node DXV and remove it from the graph.
Nodes with 0 in-degree: [TMN, NIO].
Visit node TMN and remove it from the graph.
Nodes with 0 in-degree: [NIO].
Visit node NIO and remove it from the graph.
Nodes with 0 in-degree: [AOY].
Visit node AOY and remove it from the graph.
Nodes with 0 in-degree: [BIG, ZLP].
Visit node BIG and remove it from the graph.
Nodes with 0 in-degree: [ZLP].
Visit node ZLP and remove it from the graph.
Nodes with 0 in-degree: [VHJ, GGR].
Visit node VHJ and remove it from the graph.
Nodes with 0 in-degree: [GGR].
Visit node GGR and remove it from the graph.
Nodes with 0 in-degree: [UIB].
Visit node UIB and remove it from the graph.
Nodes with 0 in-degree: [TTU].
Visit node TTU and remove it from the graph.
So the result of topological sorting is ","('[[OQF, JPS, TKD, DXV, VHJ, GGR, UIB, TTU, TMN, NIO, AOY, BIG, ZLP], [OQF, NIO, GGR, DXV, BIG, ZLP, JPS, TMN, VHJ, TKD, UIB, AOY, TTU], [OQF, JPS, TKD, DXV, TMN, NIO, UIB, VHJ, BIG, GGR, ZLP, AOY, TTU], [OQF, JPS, TKD, DXV, TMN, NIO, AOY, BIG, ZLP, VHJ, GGR, UIB, TTU]]',)",3,100
topological_sort,"[(LNC, LOM), (LNC, KKQ), (LNC, VNU), (LNC, BCU), (LNC, AYF), (LNC, PDI), (LOM, BCU), (KKQ, GJA), (KKQ, LOM), (KKQ, VPU), (KKQ, CZV), (KKQ, PDI), (KKQ, VNU), (VNU, BCU), (BCU, CZV), (AYF, KKQ), (PDI, VPU), (PDI, BCU), (PDI, GJA), (GJA, LOM), (GJA, CZV), (VPU, GJA), (VPU, CZV)]","{LNC: [LOM, KKQ, VNU, BCU, AYF, PDI],
LOM: [BCU],
KKQ: [GJA, LOM, VPU, CZV, PDI, VNU],
VNU: [BCU],
BCU: [CZV],
AYF: [KKQ],
PDI: [VPU, BCU, GJA],
CZV: [],
GJA: [LOM, CZV],
VPU: [GJA, CZV]}","Node LNC is connected to nodes LOM, KKQ, VNU, BCU, AYF, PDI.
Node LOM is connected to node BCU.
Node KKQ is connected to nodes GJA, LOM, VPU, CZV, PDI, VNU.
Node VNU is connected to node BCU.
Node BCU is connected to node CZV.
Node AYF is connected to node KKQ.
Node PDI is connected to nodes VPU, BCU, GJA.
Node GJA is connected to nodes LOM, CZV.
Node VPU is connected to nodes GJA, CZV.","[PDI, LOM, LNC, AYF, CZV, KKQ, GJA, VPU, BCU, VNU]",10,23,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LNC, AYF, KKQ, PDI, VNU, VPU, GJA, LOM, BCU, CZV]","Let's solve it step by step.
Nodes with 0 in-degree: [LNC].
Visit node LNC and remove it from the graph.
Nodes with 0 in-degree: [AYF].
Visit node AYF and remove it from the graph.
Nodes with 0 in-degree: [KKQ].
Visit node KKQ and remove it from the graph.
Nodes with 0 in-degree: [PDI, VNU].
Visit node PDI and remove it from the graph.
Nodes with 0 in-degree: [VNU, VPU].
Visit node VNU and remove it from the graph.
Nodes with 0 in-degree: [VPU].
Visit node VPU and remove it from the graph.
Nodes with 0 in-degree: [GJA].
Visit node GJA and remove it from the graph.
Nodes with 0 in-degree: [LOM].
Visit node LOM and remove it from the graph.
Nodes with 0 in-degree: [BCU].
Visit node BCU and remove it from the graph.
Nodes with 0 in-degree: [CZV].
Visit node CZV and remove it from the graph.
So the result of topological sorting is ","('[[LNC, AYF, KKQ, LOM, BCU, CZV, PDI, VNU, VPU, GJA], [LNC, AYF, KKQ, PDI, VNU, VPU, GJA, LOM, BCU, CZV], [LNC, AYF, KKQ, PDI, VNU, GJA, VPU, BCU, CZV, LOM], [LNC, LOM, CZV, AYF, VNU, PDI, GJA, KKQ, BCU, VPU]]',)",1,101
topological_sort,"[(SID, IEN), (SID, EUQ), (IEN, QFC), (EUQ, IEN), (EUQ, PCI), (OVM, PBQ), (OVM, QFC), (PBQ, HAY), (HAY, QFC), (HAY, SID), (HAY, PCI), (PCI, MCB), (CFA, MAS), (CFA, SID), (MAS, EUQ), (MAS, HAY), (MAS, SID), (YYE, MCB), (YYE, IEN), (MCB, QFC), (STT, CFA), (STT, SID), (STT, MAS)]","{SID: [IEN, EUQ],
IEN: [QFC],
EUQ: [IEN, PCI],
QFC: [],
OVM: [PBQ, QFC],
PBQ: [HAY],
HAY: [QFC, SID, PCI],
PCI: [MCB],
CFA: [MAS, SID],
MAS: [EUQ, HAY, SID],
YYE: [MCB, IEN],
MCB: [QFC],
STT: [CFA, SID, MAS]}","Node SID is connected to nodes IEN, EUQ.
Node IEN is connected to node QFC.
Node EUQ is connected to nodes IEN, PCI.
Node OVM is connected to nodes PBQ, QFC.
Node PBQ is connected to node HAY.
Node HAY is connected to nodes QFC, SID, PCI.
Node PCI is connected to node MCB.
Node CFA is connected to nodes MAS, SID.
Node MAS is connected to nodes EUQ, HAY, SID.
Node YYE is connected to nodes MCB, IEN.
Node MCB is connected to node QFC.
Node STT is connected to nodes CFA, SID, MAS.","[STT, YYE, PBQ, IEN, MAS, SID, QFC, MCB, PCI, EUQ, CFA, OVM, HAY]",13,23,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OVM, YYE, STT, PBQ, CFA, MAS, HAY, SID, EUQ, IEN, PCI, MCB, QFC]","Let's solve it step by step.
Nodes with 0 in-degree: [OVM, YYE, STT].
Visit node OVM and remove it from the graph.
Nodes with 0 in-degree: [YYE, STT, PBQ].
Visit node YYE and remove it from the graph.
Nodes with 0 in-degree: [STT, PBQ].
Visit node STT and remove it from the graph.
Nodes with 0 in-degree: [PBQ, CFA].
Visit node PBQ and remove it from the graph.
Nodes with 0 in-degree: [CFA].
Visit node CFA and remove it from the graph.
Nodes with 0 in-degree: [MAS].
Visit node MAS and remove it from the graph.
Nodes with 0 in-degree: [HAY].
Visit node HAY and remove it from the graph.
Nodes with 0 in-degree: [SID].
Visit node SID and remove it from the graph.
Nodes with 0 in-degree: [EUQ].
Visit node EUQ and remove it from the graph.
Nodes with 0 in-degree: [IEN, PCI].
Visit node IEN and remove it from the graph.
Nodes with 0 in-degree: [PCI].
Visit node PCI and remove it from the graph.
Nodes with 0 in-degree: [MCB].
Visit node MCB and remove it from the graph.
Nodes with 0 in-degree: [QFC].
Visit node QFC and remove it from the graph.
So the result of topological sorting is ","('[[OVM, YYE, STT, PBQ, CFA, MAS, HAY, SID, EUQ, IEN, PCI, MCB, QFC], [OVM, YYE, STT, PBQ, CFA, MAS, IEN, SID, MCB, EUQ, PCI, HAY, QFC], [OVM, YYE, STT, PBQ, IEN, PCI, MCB, QFC, CFA, MAS, HAY, SID, EUQ], [OVM, QFC, CFA, SID, MAS, PBQ, STT, EUQ, YYE, MCB, HAY, IEN, PCI]]',)",0,102
topological_sort,"[(RNY, YDM), (RNY, VPN), (RNY, QGL), (RNY, MZJ), (YDM, UZY), (VPN, YDM), (VPN, IEM), (QGL, XBA), (MZJ, YDM), (MZJ, TYH), (MZJ, UZY), (MZJ, VPN), (BZS, IEM), (BZS, VPN), (BZS, TBV), (BZS, XDD), (IEM, YDM), (IEM, XBA), (IEM, QGL), (TBV, DQE), (TBV, IEM), (TBV, TYH), (TBV, UZY), (TBV, QGL), (TBV, XDD), (XDD, MZJ), (XDD, UZY), (XDD, TYH), (XDD, VPN), (XDD, DBV), (XDD, RNY), (XDD, YDM), (XDD, IEM), (XBA, UZY), (XBA, YDM), (TYH, XBA), (TYH, DQE), (DQE, VPN), (DQE, IEM), (DBV, VPN), (DBV, DQE), (DBV, IEM), (LSV, BZS), (LSV, XBA), (LSV, YDM), (LSV, XDD), (LSV, QGL), (LSV, TBV)]","{RNY: [YDM, VPN, QGL, MZJ],
YDM: [UZY],
VPN: [YDM, IEM],
QGL: [XBA],
MZJ: [YDM, TYH, UZY, VPN],
UZY: [],
BZS: [IEM, VPN, TBV, XDD],
IEM: [YDM, XBA, QGL],
TBV: [DQE, IEM, TYH, UZY, QGL, XDD],
XDD: [MZJ, UZY, TYH, VPN, DBV, RNY, YDM, IEM],
XBA: [UZY, YDM],
TYH: [XBA, DQE],
DQE: [VPN, IEM],
DBV: [VPN, DQE, IEM],
LSV: [BZS, XBA, YDM, XDD, QGL, TBV]}","Node RNY is connected to nodes YDM, VPN, QGL, MZJ.
Node YDM is connected to node UZY.
Node VPN is connected to nodes YDM, IEM.
Node QGL is connected to node XBA.
Node MZJ is connected to nodes YDM, TYH, UZY, VPN.
Node BZS is connected to nodes IEM, VPN, TBV, XDD.
Node IEM is connected to nodes YDM, XBA, QGL.
Node TBV is connected to nodes DQE, IEM, TYH, UZY, QGL, XDD.
Node XDD is connected to nodes MZJ, UZY, TYH, VPN, DBV, RNY, YDM, IEM.
Node XBA is connected to nodes UZY, YDM.
Node TYH is connected to nodes XBA, DQE.
Node DQE is connected to nodes VPN, IEM.
Node DBV is connected to nodes VPN, DQE, IEM.
Node LSV is connected to nodes BZS, XBA, YDM, XDD, QGL, TBV.","[QGL, UZY, MZJ, DQE, TBV, RNY, XBA, LSV, BZS, YDM, DBV, XDD, TYH, VPN, IEM]",15,48,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LSV, BZS, TBV, XDD, DBV, RNY, MZJ, TYH, DQE, VPN, IEM, QGL, XBA, YDM, UZY]","Let's solve it step by step.
Nodes with 0 in-degree: [LSV].
Visit node LSV and remove it from the graph.
Nodes with 0 in-degree: [BZS].
Visit node BZS and remove it from the graph.
Nodes with 0 in-degree: [TBV].
Visit node TBV and remove it from the graph.
Nodes with 0 in-degree: [XDD].
Visit node XDD and remove it from the graph.
Nodes with 0 in-degree: [DBV, RNY].
Visit node DBV and remove it from the graph.
Nodes with 0 in-degree: [RNY].
Visit node RNY and remove it from the graph.
Nodes with 0 in-degree: [MZJ].
Visit node MZJ and remove it from the graph.
Nodes with 0 in-degree: [TYH].
Visit node TYH and remove it from the graph.
Nodes with 0 in-degree: [DQE].
Visit node DQE and remove it from the graph.
Nodes with 0 in-degree: [VPN].
Visit node VPN and remove it from the graph.
Nodes with 0 in-degree: [IEM].
Visit node IEM and remove it from the graph.
Nodes with 0 in-degree: [QGL].
Visit node QGL and remove it from the graph.
Nodes with 0 in-degree: [XBA].
Visit node XBA and remove it from the graph.
Nodes with 0 in-degree: [YDM].
Visit node YDM and remove it from the graph.
Nodes with 0 in-degree: [UZY].
Visit node UZY and remove it from the graph.
So the result of topological sorting is ","('[[LSV, BZS, TBV, XDD, DBV, RNY, MZJ, VPN, DQE, TYH, YDM, QGL, UZY, IEM, XBA], [LSV, UZY, DBV, TBV, TYH, RNY, DQE, XBA, VPN, MZJ, XDD, IEM, BZS, YDM, QGL], [LSV, BZS, TBV, XDD, DBV, RNY, MZJ, TYH, DQE, VPN, IEM, QGL, XBA, YDM, UZY], [LSV, BZS, TBV, XDD, DBV, IEM, QGL, XBA, YDM, UZY, RNY, MZJ, TYH, DQE, VPN]]',)",2,103
topological_sort,"[(PWC, HET), (PWC, VOK), (PWC, DJU), (PWC, AVZ), (PWC, BMI), (PWC, OEZ), (PWC, KHW), (PWC, EXZ), (PWC, TOK), (HET, TOK), (HET, DJU), (HET, AVZ), (HET, EXZ), (VOK, AVZ), (DJU, AVZ), (DJU, BMI), (DJU, KHW), (AVZ, ZTT), (BMI, KHW), (BMI, VOK), (OEZ, HET), (OEZ, VOK), (OEZ, KRQ), (EXZ, DJU), (TOK, BMI), (TOK, EXZ), (SSW, EXZ), (SSW, HET), (SSW, ZTT), (SSW, KRQ), (SSW, RML), (SSW, BMI), (ZTT, KHW), (KRQ, TOK), (KRQ, VOK), (RML, PWC), (RML, TOK)]","{PWC: [HET, VOK, DJU, AVZ, BMI, OEZ, KHW, EXZ, TOK],
HET: [TOK, DJU, AVZ, EXZ],
VOK: [AVZ],
DJU: [AVZ, BMI, KHW],
AVZ: [ZTT],
BMI: [KHW, VOK],
OEZ: [HET, VOK, KRQ],
KHW: [],
EXZ: [DJU],
TOK: [BMI, EXZ],
SSW: [EXZ, HET, ZTT, KRQ, RML, BMI],
ZTT: [KHW],
KRQ: [TOK, VOK],
RML: [PWC, TOK]}","Node PWC is connected to nodes HET, VOK, DJU, AVZ, BMI, OEZ, KHW, EXZ, TOK.
Node HET is connected to nodes TOK, DJU, AVZ, EXZ.
Node VOK is connected to node AVZ.
Node DJU is connected to nodes AVZ, BMI, KHW.
Node AVZ is connected to node ZTT.
Node BMI is connected to nodes KHW, VOK.
Node OEZ is connected to nodes HET, VOK, KRQ.
Node EXZ is connected to node DJU.
Node TOK is connected to nodes BMI, EXZ.
Node SSW is connected to nodes EXZ, HET, ZTT, KRQ, RML, BMI.
Node ZTT is connected to node KHW.
Node KRQ is connected to nodes TOK, VOK.
Node RML is connected to nodes PWC, TOK.","[KRQ, PWC, AVZ, DJU, SSW, TOK, ZTT, BMI, VOK, EXZ, RML, HET, KHW, OEZ]",14,37,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SSW, RML, PWC, OEZ, HET, KRQ, TOK, EXZ, DJU, BMI, VOK, AVZ, ZTT, KHW]","Let's solve it step by step.
Nodes with 0 in-degree: [SSW].
Visit node SSW and remove it from the graph.
Nodes with 0 in-degree: [RML].
Visit node RML and remove it from the graph.
Nodes with 0 in-degree: [PWC].
Visit node PWC and remove it from the graph.
Nodes with 0 in-degree: [OEZ].
Visit node OEZ and remove it from the graph.
Nodes with 0 in-degree: [HET, KRQ].
Visit node HET and remove it from the graph.
Nodes with 0 in-degree: [KRQ].
Visit node KRQ and remove it from the graph.
Nodes with 0 in-degree: [TOK].
Visit node TOK and remove it from the graph.
Nodes with 0 in-degree: [EXZ].
Visit node EXZ and remove it from the graph.
Nodes with 0 in-degree: [DJU].
Visit node DJU and remove it from the graph.
Nodes with 0 in-degree: [BMI].
Visit node BMI and remove it from the graph.
Nodes with 0 in-degree: [VOK].
Visit node VOK and remove it from the graph.
Nodes with 0 in-degree: [AVZ].
Visit node AVZ and remove it from the graph.
Nodes with 0 in-degree: [ZTT].
Visit node ZTT and remove it from the graph.
Nodes with 0 in-degree: [KHW].
Visit node KHW and remove it from the graph.
So the result of topological sorting is ","('[[SSW, RML, PWC, OEZ, HET, KRQ, TOK, ZTT, KHW, DJU, EXZ, VOK, AVZ, BMI], [SSW, RML, PWC, OEZ, VOK, AVZ, ZTT, KHW, HET, KRQ, TOK, EXZ, DJU, BMI], [SSW, RML, PWC, OEZ, HET, KRQ, TOK, EXZ, DJU, BMI, VOK, AVZ, ZTT, KHW], [SSW, VOK, PWC, DJU, EXZ, HET, KRQ, ZTT, KHW, BMI, AVZ, RML, OEZ, TOK]]',)",2,104
topological_sort,"[(WLC, AKI), (WLC, UZE), (WLC, ZVW), (AKI, QZQ), (UZE, QZQ), (YBP, UZE), (YBP, WLC), (YBP, ZVW), (ORJ, WLC), (ORJ, UZE), (ORJ, URV), (ORJ, GSO), (URV, YBP), (URV, WZZ), (URV, AKI), (BTO, MCJ), (BTO, ZVW), (BTO, YBP), (MCJ, ZVW), (QPF, MCJ), (QPF, QZQ), (QPF, YBP), (FUA, WZZ), (FUA, BTO), (FUA, URV), (FUA, ORJ), (WZZ, BTO), (WZZ, QZQ), (FUU, MCJ)]","{WLC: [AKI, UZE, ZVW],
AKI: [QZQ],
UZE: [QZQ],
ZVW: [],
QZQ: [],
YBP: [UZE, WLC, ZVW],
ORJ: [WLC, UZE, URV, GSO],
URV: [YBP, WZZ, AKI],
GSO: [],
BTO: [MCJ, ZVW, YBP],
MCJ: [ZVW],
QPF: [MCJ, QZQ, YBP],
FUA: [WZZ, BTO, URV, ORJ],
WZZ: [BTO, QZQ],
FUU: [MCJ]}","Node WLC is connected to nodes AKI, UZE, ZVW.
Node AKI is connected to node QZQ.
Node UZE is connected to node QZQ.
Node YBP is connected to nodes UZE, WLC, ZVW.
Node ORJ is connected to nodes WLC, UZE, URV, GSO.
Node URV is connected to nodes YBP, WZZ, AKI.
Node BTO is connected to nodes MCJ, ZVW, YBP.
Node MCJ is connected to node ZVW.
Node QPF is connected to nodes MCJ, QZQ, YBP.
Node FUA is connected to nodes WZZ, BTO, URV, ORJ.
Node WZZ is connected to nodes BTO, QZQ.
Node FUU is connected to node MCJ.","[FUA, YBP, ORJ, QPF, FUU, GSO, MCJ, WZZ, BTO, UZE, WLC, AKI, QZQ, URV, ZVW]",15,29,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QPF, FUA, FUU, ORJ, URV, GSO, WZZ, BTO, MCJ, YBP, WLC, AKI, UZE, ZVW, QZQ]","Let's solve it step by step.
Nodes with 0 in-degree: [QPF, FUA, FUU].
Visit node QPF and remove it from the graph.
Nodes with 0 in-degree: [FUA, FUU].
Visit node FUA and remove it from the graph.
Nodes with 0 in-degree: [FUU, ORJ].
Visit node FUU and remove it from the graph.
Nodes with 0 in-degree: [ORJ].
Visit node ORJ and remove it from the graph.
Nodes with 0 in-degree: [URV, GSO].
Visit node URV and remove it from the graph.
Nodes with 0 in-degree: [GSO, WZZ].
Visit node GSO and remove it from the graph.
Nodes with 0 in-degree: [WZZ].
Visit node WZZ and remove it from the graph.
Nodes with 0 in-degree: [BTO].
Visit node BTO and remove it from the graph.
Nodes with 0 in-degree: [MCJ, YBP].
Visit node MCJ and remove it from the graph.
Nodes with 0 in-degree: [YBP].
Visit node YBP and remove it from the graph.
Nodes with 0 in-degree: [WLC].
Visit node WLC and remove it from the graph.
Nodes with 0 in-degree: [AKI, UZE, ZVW].
Visit node AKI and remove it from the graph.
Nodes with 0 in-degree: [UZE, ZVW].
Visit node UZE and remove it from the graph.
Nodes with 0 in-degree: [ZVW, QZQ].
Visit node ZVW and remove it from the graph.
Nodes with 0 in-degree: [QZQ].
Visit node QZQ and remove it from the graph.
So the result of topological sorting is ","('[[QPF, FUA, FUU, ORJ, URV, WLC, AKI, UZE, ZVW, QZQ, GSO, WZZ, BTO, MCJ, YBP], [QPF, FUA, FUU, ORJ, URV, GSO, WZZ, QZQ, WLC, MCJ, ZVW, UZE, YBP, BTO, AKI], [QPF, QZQ, GSO, AKI, ORJ, WZZ, MCJ, FUU, UZE, YBP, BTO, FUA, WLC, URV, ZVW], [QPF, FUA, FUU, ORJ, URV, GSO, WZZ, BTO, MCJ, YBP, WLC, AKI, UZE, ZVW, QZQ]]',)",3,105
topological_sort,"[(KXO, MYT), (KXO, KXN), (KXO, TZK), (KXO, VSR), (KXO, FYB), (MYT, WYY), (MYT, KXN), (MYT, FYB), (MYT, TZK), (KXN, BDK), (KXN, UNO), (KXN, HBZ), (TZK, TOT), (TZK, PPM), (TZK, HBZ), (TZK, WYY), (VSR, KOQ), (VSR, TZK), (FYB, VSR), (FYB, TZK), (FYB, WYY), (FYB, TOT), (WYY, GJM), (WYY, PPM), (DDU, BDK), (DDU, TZK), (DDU, TOT), (DDU, WYY), (BDK, PPM), (BDK, TOT), (BDK, WYY), (TOT, WYY), (PPM, KOQ), (PPM, GJM), (KOQ, HBZ), (HBZ, GJM), (UNO, KOQ)]","{KXO: [MYT, KXN, TZK, VSR, FYB],
MYT: [WYY, KXN, FYB, TZK],
KXN: [BDK, UNO, HBZ],
TZK: [TOT, PPM, HBZ, WYY],
VSR: [KOQ, TZK],
FYB: [VSR, TZK, WYY, TOT],
WYY: [GJM, PPM],
DDU: [BDK, TZK, TOT, WYY],
BDK: [PPM, TOT, WYY],
TOT: [WYY],
PPM: [KOQ, GJM],
KOQ: [HBZ],
GJM: [],
HBZ: [GJM],
UNO: [KOQ]}","Node KXO is connected to nodes MYT, KXN, TZK, VSR, FYB.
Node MYT is connected to nodes WYY, KXN, FYB, TZK.
Node KXN is connected to nodes BDK, UNO, HBZ.
Node TZK is connected to nodes TOT, PPM, HBZ, WYY.
Node VSR is connected to nodes KOQ, TZK.
Node FYB is connected to nodes VSR, TZK, WYY, TOT.
Node WYY is connected to nodes GJM, PPM.
Node DDU is connected to nodes BDK, TZK, TOT, WYY.
Node BDK is connected to nodes PPM, TOT, WYY.
Node TOT is connected to node WYY.
Node PPM is connected to nodes KOQ, GJM.
Node KOQ is connected to node HBZ.
Node HBZ is connected to node GJM.
Node UNO is connected to node KOQ.","[DDU, BDK, UNO, TZK, GJM, PPM, KXO, HBZ, MYT, VSR, KOQ, WYY, KXN, TOT, FYB]",15,37,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KXO, DDU, MYT, KXN, FYB, BDK, UNO, VSR, TZK, TOT, WYY, PPM, KOQ, HBZ, GJM]","Let's solve it step by step.
Nodes with 0 in-degree: [KXO, DDU].
Visit node KXO and remove it from the graph.
Nodes with 0 in-degree: [DDU, MYT].
Visit node DDU and remove it from the graph.
Nodes with 0 in-degree: [MYT].
Visit node MYT and remove it from the graph.
Nodes with 0 in-degree: [KXN, FYB].
Visit node KXN and remove it from the graph.
Nodes with 0 in-degree: [FYB, BDK, UNO].
Visit node FYB and remove it from the graph.
Nodes with 0 in-degree: [BDK, UNO, VSR].
Visit node BDK and remove it from the graph.
Nodes with 0 in-degree: [UNO, VSR].
Visit node UNO and remove it from the graph.
Nodes with 0 in-degree: [VSR].
Visit node VSR and remove it from the graph.
Nodes with 0 in-degree: [TZK].
Visit node TZK and remove it from the graph.
Nodes with 0 in-degree: [TOT].
Visit node TOT and remove it from the graph.
Nodes with 0 in-degree: [WYY].
Visit node WYY and remove it from the graph.
Nodes with 0 in-degree: [PPM].
Visit node PPM and remove it from the graph.
Nodes with 0 in-degree: [KOQ].
Visit node KOQ and remove it from the graph.
Nodes with 0 in-degree: [HBZ].
Visit node HBZ and remove it from the graph.
Nodes with 0 in-degree: [GJM].
Visit node GJM and remove it from the graph.
So the result of topological sorting is ","('[[KXO, DDU, MYT, KXN, FYB, BDK, UNO, TZK, GJM, VSR, HBZ, TOT, PPM, WYY, KOQ], [KXO, DDU, MYT, KXN, FYB, WYY, PPM, KOQ, HBZ, GJM, BDK, UNO, VSR, TZK, TOT], [KXO, DDU, MYT, KXN, FYB, BDK, UNO, VSR, TZK, TOT, WYY, PPM, KOQ, HBZ, GJM], [KXO, PPM, MYT, TOT, BDK, VSR, DDU, GJM, KOQ, TZK, KXN, HBZ, WYY, UNO, FYB]]',)",2,106
topological_sort,"[(TIZ, XBI), (TIZ, CEB), (TIZ, IHB), (CEB, HZP), (IHB, QDV), (IHB, XBI), (IHB, CEB), (YBH, IUY), (YBH, HZP), (IUY, XBI), (IUY, HZP), (IUY, CEB), (DTZ, CEB), (DTZ, IHB), (DTZ, XBI), (DTZ, YBH), (DTZ, TLN), (TLN, HZP), (TLN, IUY), (TLN, XBI), (TLN, QDV), (TLN, TIZ), (TLN, IHB), (QDV, YBH), (QDV, XBI)]","{TIZ: [XBI, CEB, IHB],
XBI: [],
CEB: [HZP],
IHB: [QDV, XBI, CEB],
YBH: [IUY, HZP],
IUY: [XBI, HZP, CEB],
HZP: [],
DTZ: [CEB, IHB, XBI, YBH, TLN],
TLN: [HZP, IUY, XBI, QDV, TIZ, IHB],
QDV: [YBH, XBI]}","Node TIZ is connected to nodes XBI, CEB, IHB.
Node CEB is connected to node HZP.
Node IHB is connected to nodes QDV, XBI, CEB.
Node YBH is connected to nodes IUY, HZP.
Node IUY is connected to nodes XBI, HZP, CEB.
Node DTZ is connected to nodes CEB, IHB, XBI, YBH, TLN.
Node TLN is connected to nodes HZP, IUY, XBI, QDV, TIZ, IHB.
Node QDV is connected to nodes YBH, XBI.","[XBI, QDV, YBH, CEB, IUY, TLN, TIZ, IHB, HZP, DTZ]",10,25,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DTZ, TLN, TIZ, IHB, QDV, YBH, IUY, XBI, CEB, HZP]","Let's solve it step by step.
Nodes with 0 in-degree: [DTZ].
Visit node DTZ and remove it from the graph.
Nodes with 0 in-degree: [TLN].
Visit node TLN and remove it from the graph.
Nodes with 0 in-degree: [TIZ].
Visit node TIZ and remove it from the graph.
Nodes with 0 in-degree: [IHB].
Visit node IHB and remove it from the graph.
Nodes with 0 in-degree: [QDV].
Visit node QDV and remove it from the graph.
Nodes with 0 in-degree: [YBH].
Visit node YBH and remove it from the graph.
Nodes with 0 in-degree: [IUY].
Visit node IUY and remove it from the graph.
Nodes with 0 in-degree: [XBI, CEB].
Visit node XBI and remove it from the graph.
Nodes with 0 in-degree: [CEB].
Visit node CEB and remove it from the graph.
Nodes with 0 in-degree: [HZP].
Visit node HZP and remove it from the graph.
So the result of topological sorting is ","('[[DTZ, TLN, TIZ, IHB, QDV, HZP, IUY, XBI, CEB, YBH], [DTZ, TLN, TIZ, XBI, CEB, HZP, IHB, QDV, YBH, IUY], [DTZ, XBI, CEB, YBH, TLN, QDV, TIZ, HZP, IUY, IHB], [DTZ, TLN, TIZ, IHB, QDV, YBH, IUY, XBI, CEB, HZP]]',)",3,107
topological_sort,"[(ZJN, ZSV), (ZJN, HCL), (ZSV, NKW), (HCL, NKW), (HZD, HCL), (HZD, ZSV), (HZD, HRA), (HRA, ZSV), (HRA, ZJN), (MNV, OIE), (MNV, ZJN), (MNV, ZSV), (OIE, HZD), (OIE, ZSV), (OIE, HCL)]","{ZJN: [ZSV, HCL],
ZSV: [NKW],
HCL: [NKW],
NKW: [],
HZD: [HCL, ZSV, HRA],
HRA: [ZSV, ZJN],
MNV: [OIE, ZJN, ZSV],
OIE: [HZD, ZSV, HCL]}","Node ZJN is connected to nodes ZSV, HCL.
Node ZSV is connected to node NKW.
Node HCL is connected to node NKW.
Node HZD is connected to nodes HCL, ZSV, HRA.
Node HRA is connected to nodes ZSV, ZJN.
Node MNV is connected to nodes OIE, ZJN, ZSV.
Node OIE is connected to nodes HZD, ZSV, HCL.","[HCL, NKW, OIE, ZJN, ZSV, MNV, HZD, HRA]",8,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MNV, OIE, HZD, HRA, ZJN, ZSV, HCL, NKW]","Let's solve it step by step.
Nodes with 0 in-degree: [MNV].
Visit node MNV and remove it from the graph.
Nodes with 0 in-degree: [OIE].
Visit node OIE and remove it from the graph.
Nodes with 0 in-degree: [HZD].
Visit node HZD and remove it from the graph.
Nodes with 0 in-degree: [HRA].
Visit node HRA and remove it from the graph.
Nodes with 0 in-degree: [ZJN].
Visit node ZJN and remove it from the graph.
Nodes with 0 in-degree: [ZSV, HCL].
Visit node ZSV and remove it from the graph.
Nodes with 0 in-degree: [HCL].
Visit node HCL and remove it from the graph.
Nodes with 0 in-degree: [NKW].
Visit node NKW and remove it from the graph.
So the result of topological sorting is ","('[[MNV, OIE, HZD, HRA, ZJN, ZSV, HCL, NKW], [MNV, OIE, HCL, NKW, HRA, HZD, ZSV, ZJN], [MNV, OIE, HCL, NKW, HZD, HRA, ZJN, ZSV], [MNV, OIE, HZD, HRA, ZSV, NKW, HCL, ZJN]]',)",0,108
topological_sort,"[(EBM, MMB), (EBM, ALU), (EBM, QEP), (EBM, IOH), (EBM, DUF), (MMB, NQW), (MMB, SNW), (MMB, ALU), (ALU, DUF), (ALU, SFV), (QEP, AYR), (QEP, NQW), (QEP, DUF), (QEP, ALU), (IOH, DUF), (IOH, NQW), (IOH, SFV), (DUF, SFV), (NQW, SFV), (SNW, SFV), (SNW, IOH), (SNW, AYR), (SNW, QKB), (AYR, DUF), (AYR, QKB), (AYR, ALU), (SFV, QKB)]","{EBM: [MMB, ALU, QEP, IOH, DUF],
MMB: [NQW, SNW, ALU],
ALU: [DUF, SFV],
QEP: [AYR, NQW, DUF, ALU],
IOH: [DUF, NQW, SFV],
DUF: [SFV],
NQW: [SFV],
SNW: [SFV, IOH, AYR, QKB],
AYR: [DUF, QKB, ALU],
QKB: [],
SFV: [QKB]}","Node EBM is connected to nodes MMB, ALU, QEP, IOH, DUF.
Node MMB is connected to nodes NQW, SNW, ALU.
Node ALU is connected to nodes DUF, SFV.
Node QEP is connected to nodes AYR, NQW, DUF, ALU.
Node IOH is connected to nodes DUF, NQW, SFV.
Node DUF is connected to node SFV.
Node NQW is connected to node SFV.
Node SNW is connected to nodes SFV, IOH, AYR, QKB.
Node AYR is connected to nodes DUF, QKB, ALU.
Node SFV is connected to node QKB.","[NQW, MMB, ALU, IOH, SNW, QEP, AYR, QKB, SFV, DUF, EBM]",11,27,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EBM, MMB, QEP, SNW, IOH, AYR, NQW, ALU, DUF, SFV, QKB]","Let's solve it step by step.
Nodes with 0 in-degree: [EBM].
Visit node EBM and remove it from the graph.
Nodes with 0 in-degree: [MMB, QEP].
Visit node MMB and remove it from the graph.
Nodes with 0 in-degree: [QEP, SNW].
Visit node QEP and remove it from the graph.
Nodes with 0 in-degree: [SNW].
Visit node SNW and remove it from the graph.
Nodes with 0 in-degree: [IOH, AYR].
Visit node IOH and remove it from the graph.
Nodes with 0 in-degree: [AYR, NQW].
Visit node AYR and remove it from the graph.
Nodes with 0 in-degree: [NQW, ALU].
Visit node NQW and remove it from the graph.
Nodes with 0 in-degree: [ALU].
Visit node ALU and remove it from the graph.
Nodes with 0 in-degree: [DUF].
Visit node DUF and remove it from the graph.
Nodes with 0 in-degree: [SFV].
Visit node SFV and remove it from the graph.
Nodes with 0 in-degree: [QKB].
Visit node QKB and remove it from the graph.
So the result of topological sorting is ","('[[EBM, MMB, QEP, SNW, IOH, QKB, DUF, NQW, AYR, SFV, ALU], [EBM, MMB, QEP, SNW, IOH, AYR, NQW, ALU, DUF, SFV, QKB], [EBM, ALU, SNW, IOH, MMB, AYR, QEP, SFV, NQW, QKB, DUF], [EBM, MMB, QEP, DUF, SFV, QKB, SNW, IOH, AYR, NQW, ALU]]',)",1,109
topological_sort,"[(HEM, SXF), (HEM, WRI), (HEM, YDV), (HEM, RLJ), (HEM, FSG), (HEM, PTR), (WRI, SXF), (WRI, XJT), (WRI, DVJ), (YDV, YGQ), (YDV, DVJ), (YDV, SUZ), (YDV, RLJ), (FSG, SUZ), (FSG, YGQ), (FSG, PTR), (FSG, TUH), (XJT, MVF), (XJT, DVJ), (XJT, RLJ), (DVJ, SXF), (DVJ, PTR), (DVJ, YGQ), (YGQ, PTR), (YGQ, SUZ), (VNZ, YGQ), (VNZ, YDV), (VNZ, RLJ), (VNZ, WRI), (VNZ, SUZ), (MVF, YGQ), (MVF, PTR), (WEB, SXF), (WEB, VNZ), (WEB, FSG), (WEB, MVF), (TUH, WRI), (TUH, SXF), (TUH, XJT)]","{HEM: [SXF, WRI, YDV, RLJ, FSG, PTR],
SXF: [],
WRI: [SXF, XJT, DVJ],
YDV: [YGQ, DVJ, SUZ, RLJ],
RLJ: [],
FSG: [SUZ, YGQ, PTR, TUH],
PTR: [],
XJT: [MVF, DVJ, RLJ],
DVJ: [SXF, PTR, YGQ],
YGQ: [PTR, SUZ],
SUZ: [],
VNZ: [YGQ, YDV, RLJ, WRI, SUZ],
MVF: [YGQ, PTR],
WEB: [SXF, VNZ, FSG, MVF],
TUH: [WRI, SXF, XJT]}","Node HEM is connected to nodes SXF, WRI, YDV, RLJ, FSG, PTR.
Node WRI is connected to nodes SXF, XJT, DVJ.
Node YDV is connected to nodes YGQ, DVJ, SUZ, RLJ.
Node FSG is connected to nodes SUZ, YGQ, PTR, TUH.
Node XJT is connected to nodes MVF, DVJ, RLJ.
Node DVJ is connected to nodes SXF, PTR, YGQ.
Node YGQ is connected to nodes PTR, SUZ.
Node VNZ is connected to nodes YGQ, YDV, RLJ, WRI, SUZ.
Node MVF is connected to nodes YGQ, PTR.
Node WEB is connected to nodes SXF, VNZ, FSG, MVF.
Node TUH is connected to nodes WRI, SXF, XJT.","[SUZ, WRI, HEM, SXF, YGQ, DVJ, VNZ, WEB, MVF, RLJ, YDV, FSG, XJT, TUH, PTR]",15,39,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HEM, WEB, VNZ, FSG, YDV, TUH, WRI, XJT, MVF, DVJ, RLJ, SXF, YGQ, PTR, SUZ]","Let's solve it step by step.
Nodes with 0 in-degree: [HEM, WEB].
Visit node HEM and remove it from the graph.
Nodes with 0 in-degree: [WEB].
Visit node WEB and remove it from the graph.
Nodes with 0 in-degree: [VNZ, FSG].
Visit node VNZ and remove it from the graph.
Nodes with 0 in-degree: [FSG, YDV].
Visit node FSG and remove it from the graph.
Nodes with 0 in-degree: [YDV, TUH].
Visit node YDV and remove it from the graph.
Nodes with 0 in-degree: [TUH].
Visit node TUH and remove it from the graph.
Nodes with 0 in-degree: [WRI].
Visit node WRI and remove it from the graph.
Nodes with 0 in-degree: [XJT].
Visit node XJT and remove it from the graph.
Nodes with 0 in-degree: [MVF, DVJ, RLJ].
Visit node MVF and remove it from the graph.
Nodes with 0 in-degree: [DVJ, RLJ].
Visit node DVJ and remove it from the graph.
Nodes with 0 in-degree: [RLJ, SXF, YGQ].
Visit node RLJ and remove it from the graph.
Nodes with 0 in-degree: [SXF, YGQ].
Visit node SXF and remove it from the graph.
Nodes with 0 in-degree: [YGQ].
Visit node YGQ and remove it from the graph.
Nodes with 0 in-degree: [PTR, SUZ].
Visit node PTR and remove it from the graph.
Nodes with 0 in-degree: [SUZ].
Visit node SUZ and remove it from the graph.
So the result of topological sorting is ","('[[HEM, DVJ, WEB, YDV, MVF, WRI, PTR, YGQ, XJT, RLJ, SXF, SUZ, FSG, VNZ, TUH], [HEM, WEB, VNZ, FSG, YDV, RLJ, SXF, YGQ, PTR, SUZ, TUH, WRI, XJT, MVF, DVJ], [HEM, WEB, VNZ, FSG, YDV, TUH, WRI, RLJ, SXF, XJT, YGQ, SUZ, MVF, PTR, DVJ], [HEM, WEB, VNZ, FSG, YDV, TUH, WRI, XJT, MVF, DVJ, RLJ, SXF, YGQ, PTR, SUZ]]',)",3,110
topological_sort,"[(MLD, MBN), (MLD, PSD), (MLD, HUK), (MBN, YHP), (MBN, HUK), (MBN, PSD), (PSD, HUK), (YHP, SET), (GZA, MBN), (GZA, SMQ), (GZA, PSD), (GZA, MLD), (GZA, FXI), (GZA, NQC), (SMQ, HUK), (SMQ, MLD), (SMQ, SET), (SMQ, YHP), (FXI, SMQ), (FXI, DQZ), (FXI, NQX), (NQC, HUK), (NQC, SMQ), (QZB, GZA), (QZB, HUK), (QZB, DQZ), (QZB, FXI), (QZB, NQX), (QZB, SET), (DQZ, YHP), (DQZ, NQC), (DQZ, HUK), (NQX, MBN), (NQX, YHP), (NQX, PSD), (AFR, YHP), (AFR, GZA), (AFR, SET), (AFR, NQC), (AFR, MBN), (AFR, NQX), (AFR, PSD)]","{MLD: [MBN, PSD, HUK],
MBN: [YHP, HUK, PSD],
PSD: [HUK],
HUK: [],
YHP: [SET],
GZA: [MBN, SMQ, PSD, MLD, FXI, NQC],
SMQ: [HUK, MLD, SET, YHP],
FXI: [SMQ, DQZ, NQX],
NQC: [HUK, SMQ],
QZB: [GZA, HUK, DQZ, FXI, NQX, SET],
DQZ: [YHP, NQC, HUK],
NQX: [MBN, YHP, PSD],
SET: [],
AFR: [YHP, GZA, SET, NQC, MBN, NQX, PSD]}","Node MLD is connected to nodes MBN, PSD, HUK.
Node MBN is connected to nodes YHP, HUK, PSD.
Node PSD is connected to node HUK.
Node YHP is connected to node SET.
Node GZA is connected to nodes MBN, SMQ, PSD, MLD, FXI, NQC.
Node SMQ is connected to nodes HUK, MLD, SET, YHP.
Node FXI is connected to nodes SMQ, DQZ, NQX.
Node NQC is connected to nodes HUK, SMQ.
Node QZB is connected to nodes GZA, HUK, DQZ, FXI, NQX, SET.
Node DQZ is connected to nodes YHP, NQC, HUK.
Node NQX is connected to nodes MBN, YHP, PSD.
Node AFR is connected to nodes YHP, GZA, SET, NQC, MBN, NQX, PSD.","[MBN, NQC, FXI, HUK, AFR, NQX, YHP, QZB, GZA, SMQ, DQZ, SET, MLD, PSD]",14,42,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QZB, AFR, GZA, FXI, DQZ, NQX, NQC, SMQ, MLD, MBN, YHP, PSD, SET, HUK]","Let's solve it step by step.
Nodes with 0 in-degree: [QZB, AFR].
Visit node QZB and remove it from the graph.
Nodes with 0 in-degree: [AFR].
Visit node AFR and remove it from the graph.
Nodes with 0 in-degree: [GZA].
Visit node GZA and remove it from the graph.
Nodes with 0 in-degree: [FXI].
Visit node FXI and remove it from the graph.
Nodes with 0 in-degree: [DQZ, NQX].
Visit node DQZ and remove it from the graph.
Nodes with 0 in-degree: [NQX, NQC].
Visit node NQX and remove it from the graph.
Nodes with 0 in-degree: [NQC].
Visit node NQC and remove it from the graph.
Nodes with 0 in-degree: [SMQ].
Visit node SMQ and remove it from the graph.
Nodes with 0 in-degree: [MLD].
Visit node MLD and remove it from the graph.
Nodes with 0 in-degree: [MBN].
Visit node MBN and remove it from the graph.
Nodes with 0 in-degree: [YHP, PSD].
Visit node YHP and remove it from the graph.
Nodes with 0 in-degree: [PSD, SET].
Visit node PSD and remove it from the graph.
Nodes with 0 in-degree: [SET, HUK].
Visit node SET and remove it from the graph.
Nodes with 0 in-degree: [HUK].
Visit node HUK and remove it from the graph.
So the result of topological sorting is ","('[[QZB, AFR, GZA, FXI, DQZ, NQX, NQC, PSD, SET, YHP, SMQ, MLD, HUK, MBN], [QZB, AFR, GZA, FXI, YHP, PSD, SET, HUK, DQZ, NQX, NQC, SMQ, MLD, MBN], [QZB, NQX, DQZ, NQC, AFR, FXI, SET, YHP, GZA, PSD, MBN, SMQ, MLD, HUK], [QZB, AFR, GZA, FXI, DQZ, NQX, NQC, SMQ, MLD, MBN, YHP, PSD, SET, HUK]]',)",3,111
topological_sort,"[(KNI, NRW), (KNI, GUM), (NRW, BLJ), (NRW, SSI), (NRW, GUM), (GUM, SSI), (GUM, QTH), (BLJ, SSI), (BLJ, QTH), (SSI, NSJ), (GUL, GUM), (GUL, NRW), (GUL, NSJ), (NSJ, QTH), (GGD, YKX), (GGD, GUL), (GGD, BLJ), (GGD, PYM), (GGD, GUM), (YKX, NRW), (YKX, PYM), (PYM, GUL), (PYM, KNI), (PYM, GUM), (PYM, QTH)]","{KNI: [NRW, GUM],
NRW: [BLJ, SSI, GUM],
GUM: [SSI, QTH],
BLJ: [SSI, QTH],
SSI: [NSJ],
QTH: [],
GUL: [GUM, NRW, NSJ],
NSJ: [QTH],
GGD: [YKX, GUL, BLJ, PYM, GUM],
YKX: [NRW, PYM],
PYM: [GUL, KNI, GUM, QTH]}","Node KNI is connected to nodes NRW, GUM.
Node NRW is connected to nodes BLJ, SSI, GUM.
Node GUM is connected to nodes SSI, QTH.
Node BLJ is connected to nodes SSI, QTH.
Node SSI is connected to node NSJ.
Node GUL is connected to nodes GUM, NRW, NSJ.
Node NSJ is connected to node QTH.
Node GGD is connected to nodes YKX, GUL, BLJ, PYM, GUM.
Node YKX is connected to nodes NRW, PYM.
Node PYM is connected to nodes GUL, KNI, GUM, QTH.","[SSI, BLJ, NRW, KNI, GUM, QTH, GGD, YKX, GUL, PYM, NSJ]",11,25,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GGD, YKX, PYM, GUL, KNI, NRW, BLJ, GUM, SSI, NSJ, QTH]","Let's solve it step by step.
Nodes with 0 in-degree: [GGD].
Visit node GGD and remove it from the graph.
Nodes with 0 in-degree: [YKX].
Visit node YKX and remove it from the graph.
Nodes with 0 in-degree: [PYM].
Visit node PYM and remove it from the graph.
Nodes with 0 in-degree: [GUL, KNI].
Visit node GUL and remove it from the graph.
Nodes with 0 in-degree: [KNI].
Visit node KNI and remove it from the graph.
Nodes with 0 in-degree: [NRW].
Visit node NRW and remove it from the graph.
Nodes with 0 in-degree: [BLJ, GUM].
Visit node BLJ and remove it from the graph.
Nodes with 0 in-degree: [GUM].
Visit node GUM and remove it from the graph.
Nodes with 0 in-degree: [SSI].
Visit node SSI and remove it from the graph.
Nodes with 0 in-degree: [NSJ].
Visit node NSJ and remove it from the graph.
Nodes with 0 in-degree: [QTH].
Visit node QTH and remove it from the graph.
So the result of topological sorting is ","('[[GGD, YKX, PYM, GUL, KNI, NSJ, GUM, NRW, BLJ, QTH, SSI], [GGD, KNI, GUL, SSI, NSJ, NRW, QTH, PYM, BLJ, YKX, GUM], [GGD, YKX, PYM, GUL, KNI, NRW, BLJ, GUM, SSI, NSJ, QTH], [GGD, YKX, PYM, SSI, NSJ, QTH, GUL, KNI, NRW, BLJ, GUM]]',)",2,112
topological_sort,"[(BMA, NIQ), (BMA, LGT), (BMA, MFX), (NIQ, SCQ), (NIQ, LGT), (LGT, MFX), (LGT, XRY), (MFX, SCQ), (MFX, NGY), (MZK, BMA), (MZK, POV), (MZK, MFX), (POV, MFX), (POV, XRY), (POV, LGT), (XRY, SCQ), (NGY, XRY), (LZY, NIQ), (LZY, LGT), (LZY, NGY), (LZY, POV), (LZY, MZK)]","{BMA: [NIQ, LGT, MFX],
NIQ: [SCQ, LGT],
LGT: [MFX, XRY],
MFX: [SCQ, NGY],
SCQ: [],
MZK: [BMA, POV, MFX],
POV: [MFX, XRY, LGT],
XRY: [SCQ],
NGY: [XRY],
LZY: [NIQ, LGT, NGY, POV, MZK]}","Node BMA is connected to nodes NIQ, LGT, MFX.
Node NIQ is connected to nodes SCQ, LGT.
Node LGT is connected to nodes MFX, XRY.
Node MFX is connected to nodes SCQ, NGY.
Node MZK is connected to nodes BMA, POV, MFX.
Node POV is connected to nodes MFX, XRY, LGT.
Node XRY is connected to node SCQ.
Node NGY is connected to node XRY.
Node LZY is connected to nodes NIQ, LGT, NGY, POV, MZK.","[SCQ, LZY, LGT, MZK, MFX, NGY, BMA, POV, XRY, NIQ]",10,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LZY, MZK, BMA, POV, NIQ, LGT, MFX, NGY, XRY, SCQ]","Let's solve it step by step.
Nodes with 0 in-degree: [LZY].
Visit node LZY and remove it from the graph.
Nodes with 0 in-degree: [MZK].
Visit node MZK and remove it from the graph.
Nodes with 0 in-degree: [BMA, POV].
Visit node BMA and remove it from the graph.
Nodes with 0 in-degree: [POV, NIQ].
Visit node POV and remove it from the graph.
Nodes with 0 in-degree: [NIQ].
Visit node NIQ and remove it from the graph.
Nodes with 0 in-degree: [LGT].
Visit node LGT and remove it from the graph.
Nodes with 0 in-degree: [MFX].
Visit node MFX and remove it from the graph.
Nodes with 0 in-degree: [NGY].
Visit node NGY and remove it from the graph.
Nodes with 0 in-degree: [XRY].
Visit node XRY and remove it from the graph.
Nodes with 0 in-degree: [SCQ].
Visit node SCQ and remove it from the graph.
So the result of topological sorting is ","('[[LZY, MZK, BMA, POV, NIQ, LGT, MFX, NGY, XRY, SCQ], [LZY, MZK, BMA, NGY, XRY, SCQ, POV, NIQ, LGT, MFX], [LZY, MZK, BMA, POV, NIQ, NGY, MFX, XRY, SCQ, LGT], [LZY, XRY, MFX, MZK, POV, NIQ, SCQ, BMA, LGT, NGY]]',)",0,113
topological_sort,"[(OFX, RVR), (OFX, VRH), (OFX, QOY), (OFX, ZTQ), (RVR, HNR), (QOY, JPZ), (ZTQ, HNR), (ZTQ, QOY), (ZTQ, CHT), (HNR, VRH), (HNR, ESB), (HNR, LBE), (ESB, QOY), (LBE, JPZ), (LBE, ESB), (LBE, VRH), (LBE, QOY), (GGQ, OFX), (CHT, HNR), (CHT, VRH), (CHT, JPZ), (WMK, OFX)]","{OFX: [RVR, VRH, QOY, ZTQ],
RVR: [HNR],
VRH: [],
QOY: [JPZ],
ZTQ: [HNR, QOY, CHT],
HNR: [VRH, ESB, LBE],
ESB: [QOY],
LBE: [JPZ, ESB, VRH, QOY],
JPZ: [],
GGQ: [OFX],
CHT: [HNR, VRH, JPZ],
WMK: [OFX]}","Node OFX is connected to nodes RVR, VRH, QOY, ZTQ.
Node RVR is connected to node HNR.
Node QOY is connected to node JPZ.
Node ZTQ is connected to nodes HNR, QOY, CHT.
Node HNR is connected to nodes VRH, ESB, LBE.
Node ESB is connected to node QOY.
Node LBE is connected to nodes JPZ, ESB, VRH, QOY.
Node GGQ is connected to node OFX.
Node CHT is connected to nodes HNR, VRH, JPZ.
Node WMK is connected to node OFX.","[VRH, WMK, ESB, HNR, ZTQ, LBE, GGQ, QOY, OFX, RVR, JPZ, CHT]",12,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GGQ, WMK, OFX, RVR, ZTQ, CHT, HNR, LBE, ESB, VRH, QOY, JPZ]","Let's solve it step by step.
Nodes with 0 in-degree: [GGQ, WMK].
Visit node GGQ and remove it from the graph.
Nodes with 0 in-degree: [WMK].
Visit node WMK and remove it from the graph.
Nodes with 0 in-degree: [OFX].
Visit node OFX and remove it from the graph.
Nodes with 0 in-degree: [RVR, ZTQ].
Visit node RVR and remove it from the graph.
Nodes with 0 in-degree: [ZTQ].
Visit node ZTQ and remove it from the graph.
Nodes with 0 in-degree: [CHT].
Visit node CHT and remove it from the graph.
Nodes with 0 in-degree: [HNR].
Visit node HNR and remove it from the graph.
Nodes with 0 in-degree: [LBE].
Visit node LBE and remove it from the graph.
Nodes with 0 in-degree: [ESB, VRH].
Visit node ESB and remove it from the graph.
Nodes with 0 in-degree: [VRH, QOY].
Visit node VRH and remove it from the graph.
Nodes with 0 in-degree: [QOY].
Visit node QOY and remove it from the graph.
Nodes with 0 in-degree: [JPZ].
Visit node JPZ and remove it from the graph.
So the result of topological sorting is ","('[[GGQ, WMK, OFX, RVR, ZTQ, CHT, VRH, JPZ, HNR, ESB, QOY, LBE], [GGQ, JPZ, HNR, ESB, VRH, WMK, CHT, OFX, LBE, ZTQ, RVR, QOY], [GGQ, WMK, OFX, RVR, ESB, VRH, QOY, JPZ, ZTQ, CHT, HNR, LBE], [GGQ, WMK, OFX, RVR, ZTQ, CHT, HNR, LBE, ESB, VRH, QOY, JPZ]]',)",3,114
topological_sort,"[(RJC, GLB), (RJC, UXO), (UXO, JLL), (SZA, EVU), (SZA, JLL), (SZA, RJC), (SZA, ZAE), (EVU, ZAE), (EVU, JLL), (EVU, UXO), (EVU, GLB), (EVU, RJC), (EVU, IIN), (JLL, VGY), (ZAE, OCW), (ZAE, VGY), (ZAE, IIN), (ZAE, JLL), (IIN, UXO), (IIN, JLL), (IIN, VGY), (IIN, GLB), (OCW, IIN), (OCW, GLB), (OCW, UXO)]","{RJC: [GLB, UXO],
GLB: [],
UXO: [JLL],
SZA: [EVU, JLL, RJC, ZAE],
EVU: [ZAE, JLL, UXO, GLB, RJC, IIN],
JLL: [VGY],
ZAE: [OCW, VGY, IIN, JLL],
IIN: [UXO, JLL, VGY, GLB],
OCW: [IIN, GLB, UXO],
VGY: []}","Node RJC is connected to nodes GLB, UXO.
Node UXO is connected to node JLL.
Node SZA is connected to nodes EVU, JLL, RJC, ZAE.
Node EVU is connected to nodes ZAE, JLL, UXO, GLB, RJC, IIN.
Node JLL is connected to node VGY.
Node ZAE is connected to nodes OCW, VGY, IIN, JLL.
Node IIN is connected to nodes UXO, JLL, VGY, GLB.
Node OCW is connected to nodes IIN, GLB, UXO.","[EVU, IIN, VGY, UXO, SZA, GLB, JLL, OCW, ZAE, RJC]",10,25,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SZA, EVU, ZAE, RJC, OCW, IIN, UXO, GLB, JLL, VGY]","Let's solve it step by step.
Nodes with 0 in-degree: [SZA].
Visit node SZA and remove it from the graph.
Nodes with 0 in-degree: [EVU].
Visit node EVU and remove it from the graph.
Nodes with 0 in-degree: [ZAE, RJC].
Visit node ZAE and remove it from the graph.
Nodes with 0 in-degree: [RJC, OCW].
Visit node RJC and remove it from the graph.
Nodes with 0 in-degree: [OCW].
Visit node OCW and remove it from the graph.
Nodes with 0 in-degree: [IIN].
Visit node IIN and remove it from the graph.
Nodes with 0 in-degree: [UXO, GLB].
Visit node UXO and remove it from the graph.
Nodes with 0 in-degree: [GLB, JLL].
Visit node GLB and remove it from the graph.
Nodes with 0 in-degree: [JLL].
Visit node JLL and remove it from the graph.
Nodes with 0 in-degree: [VGY].
Visit node VGY and remove it from the graph.
So the result of topological sorting is ","('[[SZA, EVU, OCW, VGY, GLB, UXO, IIN, RJC, ZAE, JLL], [SZA, EVU, ZAE, GLB, JLL, VGY, RJC, OCW, IIN, UXO], [SZA, EVU, ZAE, RJC, OCW, IIN, UXO, GLB, JLL, VGY], [SZA, EVU, ZAE, RJC, OCW, JLL, GLB, UXO, VGY, IIN]]',)",2,115
topological_sort,"[(GSY, MOI), (GSY, ORP), (GSY, UQZ), (ORP, UQZ), (UQZ, QGV), (FIU, UQZ), (FIU, GSY), (FIU, FSP), (FSP, QGV), (FSP, CAM), (FSP, BSY), (JMW, MYS), (MYS, ORP), (BSY, BJZ), (BSY, HWP), (HWP, CAM), (CAM, MOI), (KMZ, UQZ)]","{GSY: [MOI, ORP, UQZ],
MOI: [],
ORP: [UQZ],
UQZ: [QGV],
FIU: [UQZ, GSY, FSP],
FSP: [QGV, CAM, BSY],
QGV: [],
JMW: [MYS],
MYS: [ORP],
BSY: [BJZ, HWP],
BJZ: [],
HWP: [CAM],
CAM: [MOI],
KMZ: [UQZ]}","Node GSY is connected to nodes MOI, ORP, UQZ.
Node ORP is connected to node UQZ.
Node UQZ is connected to node QGV.
Node FIU is connected to nodes UQZ, GSY, FSP.
Node FSP is connected to nodes QGV, CAM, BSY.
Node JMW is connected to node MYS.
Node MYS is connected to node ORP.
Node BSY is connected to nodes BJZ, HWP.
Node HWP is connected to node CAM.
Node CAM is connected to node MOI.
Node KMZ is connected to node UQZ.","[KMZ, CAM, QGV, MYS, BSY, JMW, GSY, FSP, BJZ, ORP, HWP, UQZ, FIU, MOI]",14,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FIU, JMW, KMZ, GSY, FSP, MYS, BSY, ORP, BJZ, HWP, UQZ, CAM, QGV, MOI]","Let's solve it step by step.
Nodes with 0 in-degree: [FIU, JMW, KMZ].
Visit node FIU and remove it from the graph.
Nodes with 0 in-degree: [JMW, KMZ, GSY, FSP].
Visit node JMW and remove it from the graph.
Nodes with 0 in-degree: [KMZ, GSY, FSP, MYS].
Visit node KMZ and remove it from the graph.
Nodes with 0 in-degree: [GSY, FSP, MYS].
Visit node GSY and remove it from the graph.
Nodes with 0 in-degree: [FSP, MYS].
Visit node FSP and remove it from the graph.
Nodes with 0 in-degree: [MYS, BSY].
Visit node MYS and remove it from the graph.
Nodes with 0 in-degree: [BSY, ORP].
Visit node BSY and remove it from the graph.
Nodes with 0 in-degree: [ORP, BJZ, HWP].
Visit node ORP and remove it from the graph.
Nodes with 0 in-degree: [BJZ, HWP, UQZ].
Visit node BJZ and remove it from the graph.
Nodes with 0 in-degree: [HWP, UQZ].
Visit node HWP and remove it from the graph.
Nodes with 0 in-degree: [UQZ, CAM].
Visit node UQZ and remove it from the graph.
Nodes with 0 in-degree: [CAM, QGV].
Visit node CAM and remove it from the graph.
Nodes with 0 in-degree: [QGV, MOI].
Visit node QGV and remove it from the graph.
Nodes with 0 in-degree: [MOI].
Visit node MOI and remove it from the graph.
So the result of topological sorting is ","('[[FIU, ORP, UQZ, CAM, KMZ, BJZ, MOI, QGV, HWP, MYS, BSY, GSY, FSP, JMW], [FIU, JMW, KMZ, GSY, FSP, MYS, BSY, ORP, BJZ, HWP, UQZ, CAM, QGV, MOI], [FIU, JMW, KMZ, GSY, UQZ, CAM, QGV, MOI, FSP, MYS, BSY, ORP, BJZ, HWP], [FIU, JMW, KMZ, GSY, FSP, MYS, BSY, QGV, BJZ, MOI, CAM, ORP, HWP, UQZ]]',)",1,116
topological_sort,"[(XFX, LEA), (XFX, WEH), (XFX, HEG), (LEA, ZAU), (WEH, DTL), (WEH, DKH), (HEG, WEH), (HEG, LEA), (HEG, ZAU), (HEG, ILA), (HEG, DTL), (HEG, JYR), (IOK, ZAU), (IOK, LEA), (ILA, IOK), (ILA, RFT), (DTL, ZAU), (DTL, RFT), (JYR, CVU), (JYR, SOH), (JYR, RFT), (DKH, LEA), (KXD, SOH), (KXD, CVU), (KXD, JYR), (SOH, LEA), (SOH, RFT), (CVU, ILA), (CVU, ZAU), (CVU, SOH), (CVU, DTL), (YMN, SOH), (YMN, HEG), (YMN, WEH), (YMN, ILA)]","{XFX: [LEA, WEH, HEG],
LEA: [ZAU],
WEH: [DTL, DKH],
HEG: [WEH, LEA, ZAU, ILA, DTL, JYR],
ZAU: [],
IOK: [ZAU, LEA],
ILA: [IOK, RFT],
DTL: [ZAU, RFT],
JYR: [CVU, SOH, RFT],
DKH: [LEA],
KXD: [SOH, CVU, JYR],
SOH: [LEA, RFT],
CVU: [ILA, ZAU, SOH, DTL],
RFT: [],
YMN: [SOH, HEG, WEH, ILA]}","Node XFX is connected to nodes LEA, WEH, HEG.
Node LEA is connected to node ZAU.
Node WEH is connected to nodes DTL, DKH.
Node HEG is connected to nodes WEH, LEA, ZAU, ILA, DTL, JYR.
Node IOK is connected to nodes ZAU, LEA.
Node ILA is connected to nodes IOK, RFT.
Node DTL is connected to nodes ZAU, RFT.
Node JYR is connected to nodes CVU, SOH, RFT.
Node DKH is connected to node LEA.
Node KXD is connected to nodes SOH, CVU, JYR.
Node SOH is connected to nodes LEA, RFT.
Node CVU is connected to nodes ILA, ZAU, SOH, DTL.
Node YMN is connected to nodes SOH, HEG, WEH, ILA.","[JYR, ZAU, XFX, CVU, LEA, KXD, IOK, RFT, ILA, YMN, SOH, DTL, HEG, WEH, DKH]",15,35,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XFX, KXD, YMN, HEG, WEH, JYR, DKH, CVU, ILA, SOH, DTL, IOK, RFT, LEA, ZAU]","Let's solve it step by step.
Nodes with 0 in-degree: [XFX, KXD, YMN].
Visit node XFX and remove it from the graph.
Nodes with 0 in-degree: [KXD, YMN].
Visit node KXD and remove it from the graph.
Nodes with 0 in-degree: [YMN].
Visit node YMN and remove it from the graph.
Nodes with 0 in-degree: [HEG].
Visit node HEG and remove it from the graph.
Nodes with 0 in-degree: [WEH, JYR].
Visit node WEH and remove it from the graph.
Nodes with 0 in-degree: [JYR, DKH].
Visit node JYR and remove it from the graph.
Nodes with 0 in-degree: [DKH, CVU].
Visit node DKH and remove it from the graph.
Nodes with 0 in-degree: [CVU].
Visit node CVU and remove it from the graph.
Nodes with 0 in-degree: [ILA, SOH, DTL].
Visit node ILA and remove it from the graph.
Nodes with 0 in-degree: [SOH, DTL, IOK].
Visit node SOH and remove it from the graph.
Nodes with 0 in-degree: [DTL, IOK].
Visit node DTL and remove it from the graph.
Nodes with 0 in-degree: [IOK, RFT].
Visit node IOK and remove it from the graph.
Nodes with 0 in-degree: [RFT, LEA].
Visit node RFT and remove it from the graph.
Nodes with 0 in-degree: [LEA].
Visit node LEA and remove it from the graph.
Nodes with 0 in-degree: [ZAU].
Visit node ZAU and remove it from the graph.
So the result of topological sorting is ","('[[XFX, ZAU, YMN, IOK, WEH, DTL, RFT, JYR, ILA, LEA, KXD, SOH, DKH, CVU, HEG], [XFX, KXD, YMN, HEG, WEH, JYR, DKH, CVU, ILA, SOH, DTL, IOK, RFT, LEA, ZAU], [XFX, KXD, YMN, HEG, WEH, JYR, DKH, RFT, DTL, ILA, IOK, CVU, SOH, ZAU, LEA], [XFX, KXD, YMN, HEG, WEH, DTL, IOK, RFT, LEA, ZAU, JYR, DKH, CVU, ILA, SOH]]',)",1,117
topological_sort,"[(NWZ, RKC), (RKC, KTV), (KTV, NIC), (UGF, RKC), (UGF, ZFY), (UGF, NWZ), (UGF, GOX), (GOX, NIC), (NYW, NWZ), (NYW, GOX)]","{NWZ: [RKC],
RKC: [KTV],
KTV: [NIC],
UGF: [RKC, ZFY, NWZ, GOX],
ZFY: [],
GOX: [NIC],
NYW: [NWZ, GOX],
NIC: []}","Node NWZ is connected to node RKC.
Node RKC is connected to node KTV.
Node KTV is connected to node NIC.
Node UGF is connected to nodes RKC, ZFY, NWZ, GOX.
Node GOX is connected to node NIC.
Node NYW is connected to nodes NWZ, GOX.","[UGF, GOX, KTV, RKC, NIC, NYW, ZFY, NWZ]",8,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UGF, NYW, ZFY, NWZ, GOX, RKC, KTV, NIC]","Let's solve it step by step.
Nodes with 0 in-degree: [UGF, NYW].
Visit node UGF and remove it from the graph.
Nodes with 0 in-degree: [NYW, ZFY].
Visit node NYW and remove it from the graph.
Nodes with 0 in-degree: [ZFY, NWZ, GOX].
Visit node ZFY and remove it from the graph.
Nodes with 0 in-degree: [NWZ, GOX].
Visit node NWZ and remove it from the graph.
Nodes with 0 in-degree: [GOX, RKC].
Visit node GOX and remove it from the graph.
Nodes with 0 in-degree: [RKC].
Visit node RKC and remove it from the graph.
Nodes with 0 in-degree: [KTV].
Visit node KTV and remove it from the graph.
Nodes with 0 in-degree: [NIC].
Visit node NIC and remove it from the graph.
So the result of topological sorting is ","('[[UGF, NWZ, RKC, NIC, NYW, ZFY, GOX, KTV], [UGF, NYW, ZFY, NWZ, GOX, RKC, KTV, NIC], [UGF, NYW, ZFY, NWZ, GOX, RKC, NIC, KTV], [UGF, NYW, KTV, NIC, ZFY, NWZ, GOX, RKC]]',)",1,118
topological_sort,"[(NUN, ZMC), (NUN, WMS), (NUN, DSY), (NUN, DEO), (ZMC, GFZ), (ZMC, DEO), (ZMC, WZW), (ZMC, DSY), (WMS, DSY), (WMS, ZMC), (DEO, GFZ), (GFZ, DSY), (WZW, GFZ), (YPD, GFZ), (YPD, NUN)]","{NUN: [ZMC, WMS, DSY, DEO],
ZMC: [GFZ, DEO, WZW, DSY],
WMS: [DSY, ZMC],
DSY: [],
DEO: [GFZ],
GFZ: [DSY],
WZW: [GFZ],
YPD: [GFZ, NUN]}","Node NUN is connected to nodes ZMC, WMS, DSY, DEO.
Node ZMC is connected to nodes GFZ, DEO, WZW, DSY.
Node WMS is connected to nodes DSY, ZMC.
Node DEO is connected to node GFZ.
Node GFZ is connected to node DSY.
Node WZW is connected to node GFZ.
Node YPD is connected to nodes GFZ, NUN.","[DSY, NUN, WZW, YPD, DEO, ZMC, WMS, GFZ]",8,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YPD, NUN, WMS, ZMC, DEO, WZW, GFZ, DSY]","Let's solve it step by step.
Nodes with 0 in-degree: [YPD].
Visit node YPD and remove it from the graph.
Nodes with 0 in-degree: [NUN].
Visit node NUN and remove it from the graph.
Nodes with 0 in-degree: [WMS].
Visit node WMS and remove it from the graph.
Nodes with 0 in-degree: [ZMC].
Visit node ZMC and remove it from the graph.
Nodes with 0 in-degree: [DEO, WZW].
Visit node DEO and remove it from the graph.
Nodes with 0 in-degree: [WZW].
Visit node WZW and remove it from the graph.
Nodes with 0 in-degree: [GFZ].
Visit node GFZ and remove it from the graph.
Nodes with 0 in-degree: [DSY].
Visit node DSY and remove it from the graph.
So the result of topological sorting is ","('[[YPD, GFZ, DEO, WMS, WZW, NUN, DSY, ZMC], [YPD, NUN, WMS, ZMC, DSY, WZW, GFZ, DEO], [YPD, NUN, WMS, ZMC, DEO, WZW, GFZ, DSY], [YPD, NUN, GFZ, DSY, WMS, ZMC, DEO, WZW]]',)",2,119
topological_sort,"[(SGY, CRI), (CRI, HGC), (HGC, ANS), (QWJ, ZBV), (QWJ, SGY), (QWJ, ENE), (QWJ, ANS), (QWJ, KVB), (ENE, ZBV), (ANS, EFR), (KVB, GTP), (KVB, ZBV), (GJS, ENE), (GJS, KVB), (WRQ, ZBV), (GTP, MOX), (EFR, ZBV), (EFR, WRQ)]","{SGY: [CRI],
CRI: [HGC],
HGC: [ANS],
QWJ: [ZBV, SGY, ENE, ANS, KVB],
ZBV: [],
ENE: [ZBV],
ANS: [EFR],
KVB: [GTP, ZBV],
GJS: [ENE, KVB],
WRQ: [ZBV],
GTP: [MOX],
MOX: [],
EFR: [ZBV, WRQ]}","Node SGY is connected to node CRI.
Node CRI is connected to node HGC.
Node HGC is connected to node ANS.
Node QWJ is connected to nodes ZBV, SGY, ENE, ANS, KVB.
Node ENE is connected to node ZBV.
Node ANS is connected to node EFR.
Node KVB is connected to nodes GTP, ZBV.
Node GJS is connected to nodes ENE, KVB.
Node WRQ is connected to node ZBV.
Node GTP is connected to node MOX.
Node EFR is connected to nodes ZBV, WRQ.","[WRQ, CRI, ENE, QWJ, HGC, KVB, GTP, MOX, EFR, SGY, ANS, GJS, ZBV]",13,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QWJ, GJS, SGY, ENE, KVB, CRI, GTP, HGC, MOX, ANS, EFR, WRQ, ZBV]","Let's solve it step by step.
Nodes with 0 in-degree: [QWJ, GJS].
Visit node QWJ and remove it from the graph.
Nodes with 0 in-degree: [GJS, SGY].
Visit node GJS and remove it from the graph.
Nodes with 0 in-degree: [SGY, ENE, KVB].
Visit node SGY and remove it from the graph.
Nodes with 0 in-degree: [ENE, KVB, CRI].
Visit node ENE and remove it from the graph.
Nodes with 0 in-degree: [KVB, CRI].
Visit node KVB and remove it from the graph.
Nodes with 0 in-degree: [CRI, GTP].
Visit node CRI and remove it from the graph.
Nodes with 0 in-degree: [GTP, HGC].
Visit node GTP and remove it from the graph.
Nodes with 0 in-degree: [HGC, MOX].
Visit node HGC and remove it from the graph.
Nodes with 0 in-degree: [MOX, ANS].
Visit node MOX and remove it from the graph.
Nodes with 0 in-degree: [ANS].
Visit node ANS and remove it from the graph.
Nodes with 0 in-degree: [EFR].
Visit node EFR and remove it from the graph.
Nodes with 0 in-degree: [WRQ].
Visit node WRQ and remove it from the graph.
Nodes with 0 in-degree: [ZBV].
Visit node ZBV and remove it from the graph.
So the result of topological sorting is ","('[[QWJ, WRQ, SGY, ENE, ANS, EFR, GTP, ZBV, GJS, MOX, HGC, CRI, KVB], [QWJ, GJS, SGY, ENE, KVB, CRI, GTP, HGC, MOX, ANS, EFR, WRQ, ZBV], [QWJ, GJS, SGY, ENE, KVB, CRI, EFR, GTP, ZBV, MOX, ANS, HGC, WRQ], [QWJ, GJS, SGY, ENE, ANS, EFR, WRQ, ZBV, KVB, CRI, GTP, HGC, MOX]]',)",1,120
topological_sort,"[(HJH, WFW), (HJH, ESH), (WFW, RXP), (ESH, IHZ), (ESH, KUS), (ESH, WFW), (ESH, ZEZ), (FZW, LVU), (FZW, VJG), (FZW, ZEZ), (FZW, WFW), (FZW, RXP), (FZW, ZTG), (FZW, IHZ), (FZW, HJH), (LVU, HJH), (LVU, KUS), (LVU, ABA), (LVU, IHZ), (VJG, WFW), (VJG, RXP), (VJG, IHZ), (ZEZ, IHZ), (ZEZ, VJG), (ZEZ, RXP), (ZTG, LVU), (ZTG, NSH), (ZTG, ESH), (ZTG, HJH), (ZTG, KUS), (IHZ, RXP), (KUS, IHZ), (KUS, VJG), (ABA, RXP), (ABA, ESH), (ABA, HJH), (ABA, KUS), (NSH, ESH), (NSH, IHZ), (NSH, HJH), (NSH, ZEZ), (NSH, ABA), (NSH, DNF), (NSH, VJG), (DNF, VJG), (DNF, KUS), (DNF, ZEZ)]","{HJH: [WFW, ESH],
WFW: [RXP],
ESH: [IHZ, KUS, WFW, ZEZ],
RXP: [],
FZW: [LVU, VJG, ZEZ, WFW, RXP, ZTG, IHZ, HJH],
LVU: [HJH, KUS, ABA, IHZ],
VJG: [WFW, RXP, IHZ],
ZEZ: [IHZ, VJG, RXP],
ZTG: [LVU, NSH, ESH, HJH, KUS],
IHZ: [RXP],
KUS: [IHZ, VJG],
ABA: [RXP, ESH, HJH, KUS],
NSH: [ESH, IHZ, HJH, ZEZ, ABA, DNF, VJG],
DNF: [VJG, KUS, ZEZ]}","Node HJH is connected to nodes WFW, ESH.
Node WFW is connected to node RXP.
Node ESH is connected to nodes IHZ, KUS, WFW, ZEZ.
Node FZW is connected to nodes LVU, VJG, ZEZ, WFW, RXP, ZTG, IHZ, HJH.
Node LVU is connected to nodes HJH, KUS, ABA, IHZ.
Node VJG is connected to nodes WFW, RXP, IHZ.
Node ZEZ is connected to nodes IHZ, VJG, RXP.
Node ZTG is connected to nodes LVU, NSH, ESH, HJH, KUS.
Node IHZ is connected to node RXP.
Node KUS is connected to nodes IHZ, VJG.
Node ABA is connected to nodes RXP, ESH, HJH, KUS.
Node NSH is connected to nodes ESH, IHZ, HJH, ZEZ, ABA, DNF, VJG.
Node DNF is connected to nodes VJG, KUS, ZEZ.","[RXP, ZEZ, WFW, ZTG, KUS, DNF, VJG, HJH, FZW, IHZ, NSH, ABA, ESH, LVU]",14,47,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FZW, ZTG, LVU, NSH, ABA, DNF, HJH, ESH, KUS, ZEZ, VJG, WFW, IHZ, RXP]","Let's solve it step by step.
Nodes with 0 in-degree: [FZW].
Visit node FZW and remove it from the graph.
Nodes with 0 in-degree: [ZTG].
Visit node ZTG and remove it from the graph.
Nodes with 0 in-degree: [LVU, NSH].
Visit node LVU and remove it from the graph.
Nodes with 0 in-degree: [NSH].
Visit node NSH and remove it from the graph.
Nodes with 0 in-degree: [ABA, DNF].
Visit node ABA and remove it from the graph.
Nodes with 0 in-degree: [DNF, HJH].
Visit node DNF and remove it from the graph.
Nodes with 0 in-degree: [HJH].
Visit node HJH and remove it from the graph.
Nodes with 0 in-degree: [ESH].
Visit node ESH and remove it from the graph.
Nodes with 0 in-degree: [KUS, ZEZ].
Visit node KUS and remove it from the graph.
Nodes with 0 in-degree: [ZEZ].
Visit node ZEZ and remove it from the graph.
Nodes with 0 in-degree: [VJG].
Visit node VJG and remove it from the graph.
Nodes with 0 in-degree: [WFW, IHZ].
Visit node WFW and remove it from the graph.
Nodes with 0 in-degree: [IHZ].
Visit node IHZ and remove it from the graph.
Nodes with 0 in-degree: [RXP].
Visit node RXP and remove it from the graph.
So the result of topological sorting is ","('[[FZW, ZTG, LVU, NSH, ABA, DNF, HJH, ESH, KUS, ZEZ, VJG, WFW, IHZ, RXP], [FZW, HJH, ESH, LVU, ZEZ, WFW, ZTG, VJG, NSH, IHZ, KUS, ABA, RXP, DNF], [FZW, ZTG, LVU, NSH, ABA, DNF, HJH, RXP, ZEZ, KUS, WFW, ESH, IHZ, VJG], [FZW, ZTG, LVU, NSH, VJG, WFW, IHZ, RXP, ABA, DNF, HJH, ESH, KUS, ZEZ]]',)",0,121
topological_sort,"[(EYK, DEQ), (EYK, EBX), (DEQ, PUV), (JIA, EBX), (JIA, PUV), (JIA, ZRD), (JIA, HWD), (ZRD, EBX), (ZRD, DEQ), (HWD, DEQ), (HWD, EBX), (LHJ, WCL), (LHJ, JIA), (WCL, EYK), (WCL, JIA)]","{EYK: [DEQ, EBX],
DEQ: [PUV],
EBX: [],
PUV: [],
JIA: [EBX, PUV, ZRD, HWD],
ZRD: [EBX, DEQ],
HWD: [DEQ, EBX],
LHJ: [WCL, JIA],
WCL: [EYK, JIA]}","Node EYK is connected to nodes DEQ, EBX.
Node DEQ is connected to node PUV.
Node JIA is connected to nodes EBX, PUV, ZRD, HWD.
Node ZRD is connected to nodes EBX, DEQ.
Node HWD is connected to nodes DEQ, EBX.
Node LHJ is connected to nodes WCL, JIA.
Node WCL is connected to nodes EYK, JIA.","[EYK, PUV, JIA, DEQ, ZRD, LHJ, EBX, WCL, HWD]",9,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LHJ, WCL, EYK, JIA, ZRD, HWD, DEQ, EBX, PUV]","Let's solve it step by step.
Nodes with 0 in-degree: [LHJ].
Visit node LHJ and remove it from the graph.
Nodes with 0 in-degree: [WCL].
Visit node WCL and remove it from the graph.
Nodes with 0 in-degree: [EYK, JIA].
Visit node EYK and remove it from the graph.
Nodes with 0 in-degree: [JIA].
Visit node JIA and remove it from the graph.
Nodes with 0 in-degree: [ZRD, HWD].
Visit node ZRD and remove it from the graph.
Nodes with 0 in-degree: [HWD].
Visit node HWD and remove it from the graph.
Nodes with 0 in-degree: [DEQ, EBX].
Visit node DEQ and remove it from the graph.
Nodes with 0 in-degree: [EBX, PUV].
Visit node EBX and remove it from the graph.
Nodes with 0 in-degree: [PUV].
Visit node PUV and remove it from the graph.
So the result of topological sorting is ","('[[LHJ, WCL, EYK, JIA, EBX, PUV, DEQ, ZRD, HWD], [LHJ, WCL, EYK, DEQ, EBX, PUV, JIA, ZRD, HWD], [LHJ, EBX, HWD, EYK, DEQ, ZRD, WCL, JIA, PUV], [LHJ, WCL, EYK, JIA, ZRD, HWD, DEQ, EBX, PUV]]',)",3,122
topological_sort,"[(VNH, DYW), (VNH, ZFY), (VNH, DME), (DYW, UQG), (ZFY, MYX), (ZFY, PJG), (ZFY, UQG), (DME, UQG), (DME, DYW), (DME, FRO), (DME, MYX), (GNF, GKU), (GNF, UQG), (GNF, HYE), (GNF, FRO), (GKU, HYE), (GKU, MYX), (GKU, ZFY), (GKU, VNH), (HYE, NLP), (HYE, UUP), (FRO, DYW), (FRO, MYX), (FRO, PJG), (PJG, DYW), (STI, DME), (STI, ZFY), (STI, VNH), (STI, FRO), (STI, UUP), (STI, DYW), (STI, PJG), (UUP, UQG), (UUP, VNH), (UUP, FRO), (NLP, VNH), (NLP, STI), (NLP, UUP)]","{VNH: [DYW, ZFY, DME],
DYW: [UQG],
ZFY: [MYX, PJG, UQG],
DME: [UQG, DYW, FRO, MYX],
UQG: [],
GNF: [GKU, UQG, HYE, FRO],
GKU: [HYE, MYX, ZFY, VNH],
HYE: [NLP, UUP],
FRO: [DYW, MYX, PJG],
MYX: [],
PJG: [DYW],
STI: [DME, ZFY, VNH, FRO, UUP, DYW, PJG],
UUP: [UQG, VNH, FRO],
NLP: [VNH, STI, UUP]}","Node VNH is connected to nodes DYW, ZFY, DME.
Node DYW is connected to node UQG.
Node ZFY is connected to nodes MYX, PJG, UQG.
Node DME is connected to nodes UQG, DYW, FRO, MYX.
Node GNF is connected to nodes GKU, UQG, HYE, FRO.
Node GKU is connected to nodes HYE, MYX, ZFY, VNH.
Node HYE is connected to nodes NLP, UUP.
Node FRO is connected to nodes DYW, MYX, PJG.
Node PJG is connected to node DYW.
Node STI is connected to nodes DME, ZFY, VNH, FRO, UUP, DYW, PJG.
Node UUP is connected to nodes UQG, VNH, FRO.
Node NLP is connected to nodes VNH, STI, UUP.","[DME, HYE, GKU, UUP, MYX, UQG, NLP, PJG, ZFY, STI, DYW, VNH, GNF, FRO]",14,38,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GNF, GKU, HYE, NLP, STI, UUP, VNH, ZFY, DME, FRO, MYX, PJG, DYW, UQG]","Let's solve it step by step.
Nodes with 0 in-degree: [GNF].
Visit node GNF and remove it from the graph.
Nodes with 0 in-degree: [GKU].
Visit node GKU and remove it from the graph.
Nodes with 0 in-degree: [HYE].
Visit node HYE and remove it from the graph.
Nodes with 0 in-degree: [NLP].
Visit node NLP and remove it from the graph.
Nodes with 0 in-degree: [STI].
Visit node STI and remove it from the graph.
Nodes with 0 in-degree: [UUP].
Visit node UUP and remove it from the graph.
Nodes with 0 in-degree: [VNH].
Visit node VNH and remove it from the graph.
Nodes with 0 in-degree: [ZFY, DME].
Visit node ZFY and remove it from the graph.
Nodes with 0 in-degree: [DME].
Visit node DME and remove it from the graph.
Nodes with 0 in-degree: [FRO].
Visit node FRO and remove it from the graph.
Nodes with 0 in-degree: [MYX, PJG].
Visit node MYX and remove it from the graph.
Nodes with 0 in-degree: [PJG].
Visit node PJG and remove it from the graph.
Nodes with 0 in-degree: [DYW].
Visit node DYW and remove it from the graph.
Nodes with 0 in-degree: [UQG].
Visit node UQG and remove it from the graph.
So the result of topological sorting is ","('[[GNF, GKU, HYE, NLP, STI, UUP, VNH, ZFY, DME, FRO, MYX, PJG, DYW, UQG], [GNF, DME, UQG, ZFY, NLP, PJG, UUP, GKU, DYW, MYX, HYE, FRO, STI, VNH], [GNF, GKU, HYE, NLP, MYX, PJG, DYW, UQG, STI, UUP, VNH, ZFY, DME, FRO], [GNF, GKU, HYE, NLP, STI, UUP, VNH, ZFY, DME, FRO, MYX, PJG, DYW, UQG]]',)",0,123
topological_sort,"[(KZV, FMK), (KZV, CLC), (KZV, TSI), (KZV, KPV), (KZV, MRB), (KZV, WPL), (FMK, TSI), (FMK, CLC), (FMK, RUA), (CLC, WPL), (TSI, ALA), (KPV, TTG), (KPV, TSI), (KPV, ALA), (KPV, BAV), (KPV, RUA), (MRB, BAV), (MRB, ALA), (WPL, TSI), (TTG, FMK), (TTG, TSI), (TTG, RUA), (BAV, FMK), (BAV, CLC)]","{KZV: [FMK, CLC, TSI, KPV, MRB, WPL],
FMK: [TSI, CLC, RUA],
CLC: [WPL],
TSI: [ALA],
KPV: [TTG, TSI, ALA, BAV, RUA],
MRB: [BAV, ALA],
WPL: [TSI],
RUA: [],
TTG: [FMK, TSI, RUA],
ALA: [],
BAV: [FMK, CLC]}","Node KZV is connected to nodes FMK, CLC, TSI, KPV, MRB, WPL.
Node FMK is connected to nodes TSI, CLC, RUA.
Node CLC is connected to node WPL.
Node TSI is connected to node ALA.
Node KPV is connected to nodes TTG, TSI, ALA, BAV, RUA.
Node MRB is connected to nodes BAV, ALA.
Node WPL is connected to node TSI.
Node TTG is connected to nodes FMK, TSI, RUA.
Node BAV is connected to nodes FMK, CLC.","[BAV, WPL, KPV, ALA, TTG, TSI, MRB, KZV, CLC, FMK, RUA]",11,24,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KZV, KPV, MRB, TTG, BAV, FMK, CLC, RUA, WPL, TSI, ALA]","Let's solve it step by step.
Nodes with 0 in-degree: [KZV].
Visit node KZV and remove it from the graph.
Nodes with 0 in-degree: [KPV, MRB].
Visit node KPV and remove it from the graph.
Nodes with 0 in-degree: [MRB, TTG].
Visit node MRB and remove it from the graph.
Nodes with 0 in-degree: [TTG, BAV].
Visit node TTG and remove it from the graph.
Nodes with 0 in-degree: [BAV].
Visit node BAV and remove it from the graph.
Nodes with 0 in-degree: [FMK].
Visit node FMK and remove it from the graph.
Nodes with 0 in-degree: [CLC, RUA].
Visit node CLC and remove it from the graph.
Nodes with 0 in-degree: [RUA, WPL].
Visit node RUA and remove it from the graph.
Nodes with 0 in-degree: [WPL].
Visit node WPL and remove it from the graph.
Nodes with 0 in-degree: [TSI].
Visit node TSI and remove it from the graph.
Nodes with 0 in-degree: [ALA].
Visit node ALA and remove it from the graph.
So the result of topological sorting is ","('[[KZV, KPV, MRB, TTG, BAV, FMK, CLC, RUA, WPL, TSI, ALA], [KZV, KPV, MRB, WPL, TSI, ALA, TTG, BAV, FMK, CLC, RUA], [KZV, FMK, CLC, TSI, BAV, KPV, TTG, WPL, RUA, ALA, MRB], [KZV, KPV, MRB, TTG, BAV, CLC, TSI, RUA, FMK, WPL, ALA]]',)",0,124
topological_sort,"[(MKH, FWC), (MKH, XKN), (FWC, UCT), (FWC, XBU), (XKN, FWC), (DEX, UCT), (DEX, FWC), (DEX, MKH), (TMU, UCT), (TMU, FWC), (KDY, XKN), (KDY, XBU)]","{MKH: [FWC, XKN],
FWC: [UCT, XBU],
XKN: [FWC],
UCT: [],
XBU: [],
DEX: [UCT, FWC, MKH],
TMU: [UCT, FWC],
KDY: [XKN, XBU]}","Node MKH is connected to nodes FWC, XKN.
Node FWC is connected to nodes UCT, XBU.
Node XKN is connected to node FWC.
Node DEX is connected to nodes UCT, FWC, MKH.
Node TMU is connected to nodes UCT, FWC.
Node KDY is connected to nodes XKN, XBU.","[FWC, UCT, TMU, DEX, XBU, KDY, XKN, MKH]",8,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DEX, TMU, KDY, MKH, XKN, FWC, UCT, XBU]","Let's solve it step by step.
Nodes with 0 in-degree: [DEX, TMU, KDY].
Visit node DEX and remove it from the graph.
Nodes with 0 in-degree: [TMU, KDY, MKH].
Visit node TMU and remove it from the graph.
Nodes with 0 in-degree: [KDY, MKH].
Visit node KDY and remove it from the graph.
Nodes with 0 in-degree: [MKH].
Visit node MKH and remove it from the graph.
Nodes with 0 in-degree: [XKN].
Visit node XKN and remove it from the graph.
Nodes with 0 in-degree: [FWC].
Visit node FWC and remove it from the graph.
Nodes with 0 in-degree: [UCT, XBU].
Visit node UCT and remove it from the graph.
Nodes with 0 in-degree: [XBU].
Visit node XBU and remove it from the graph.
So the result of topological sorting is ","('[[DEX, TMU, UCT, XBU, KDY, MKH, XKN, FWC], [DEX, TMU, KDY, MKH, XKN, FWC, UCT, XBU], [DEX, KDY, TMU, MKH, FWC, XBU, UCT, XKN], [DEX, TMU, KDY, MKH, UCT, XKN, XBU, FWC]]',)",1,125
topological_sort,"[(ABP, MMS), (ABP, BCN), (ABP, GVG), (MMS, IXW), (MMS, GVG), (MMS, ZSL), (MMS, XHU), (BCN, GVG), (GVG, ZSL), (IXW, ZSL), (IXW, XHU), (XHU, BCN), (XHU, UWF), (XHU, GVG), (UWF, GVG)]","{ABP: [MMS, BCN, GVG],
MMS: [IXW, GVG, ZSL, XHU],
BCN: [GVG],
GVG: [ZSL],
IXW: [ZSL, XHU],
ZSL: [],
XHU: [BCN, UWF, GVG],
UWF: [GVG]}","Node ABP is connected to nodes MMS, BCN, GVG.
Node MMS is connected to nodes IXW, GVG, ZSL, XHU.
Node BCN is connected to node GVG.
Node GVG is connected to node ZSL.
Node IXW is connected to nodes ZSL, XHU.
Node XHU is connected to nodes BCN, UWF, GVG.
Node UWF is connected to node GVG.","[GVG, ABP, ZSL, XHU, BCN, UWF, IXW, MMS]",8,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ABP, MMS, IXW, XHU, BCN, UWF, GVG, ZSL]","Let's solve it step by step.
Nodes with 0 in-degree: [ABP].
Visit node ABP and remove it from the graph.
Nodes with 0 in-degree: [MMS].
Visit node MMS and remove it from the graph.
Nodes with 0 in-degree: [IXW].
Visit node IXW and remove it from the graph.
Nodes with 0 in-degree: [XHU].
Visit node XHU and remove it from the graph.
Nodes with 0 in-degree: [BCN, UWF].
Visit node BCN and remove it from the graph.
Nodes with 0 in-degree: [UWF].
Visit node UWF and remove it from the graph.
Nodes with 0 in-degree: [GVG].
Visit node GVG and remove it from the graph.
Nodes with 0 in-degree: [ZSL].
Visit node ZSL and remove it from the graph.
So the result of topological sorting is ","('[[ABP, MMS, GVG, ZSL, IXW, XHU, BCN, UWF], [ABP, MMS, IXW, XHU, BCN, UWF, GVG, ZSL], [ABP, BCN, MMS, UWF, XHU, GVG, IXW, ZSL], [ABP, MMS, IXW, XHU, GVG, ZSL, BCN, UWF]]',)",1,126
topological_sort,"[(OEA, SRU), (OEA, CVE), (SRU, CVE), (SRU, WXR), (CVE, WXR), (CVE, YFW), (CVE, YKW), (HKM, GXX), (HKM, OEA), (HKM, YFW), (GXX, YKW), (GXX, OEA), (GXX, SRU), (YFW, YKW), (VII, HKM), (VII, CVE), (VII, GXX), (JJU, EPR), (EPR, CVE), (EPR, GXX)]","{OEA: [SRU, CVE],
SRU: [CVE, WXR],
CVE: [WXR, YFW, YKW],
WXR: [],
HKM: [GXX, OEA, YFW],
GXX: [YKW, OEA, SRU],
YFW: [YKW],
YKW: [],
VII: [HKM, CVE, GXX],
JJU: [EPR],
EPR: [CVE, GXX]}","Node OEA is connected to nodes SRU, CVE.
Node SRU is connected to nodes CVE, WXR.
Node CVE is connected to nodes WXR, YFW, YKW.
Node HKM is connected to nodes GXX, OEA, YFW.
Node GXX is connected to nodes YKW, OEA, SRU.
Node YFW is connected to node YKW.
Node VII is connected to nodes HKM, CVE, GXX.
Node JJU is connected to node EPR.
Node EPR is connected to nodes CVE, GXX.","[WXR, YFW, JJU, YKW, OEA, EPR, CVE, SRU, GXX, HKM, VII]",11,20,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VII, JJU, HKM, EPR, GXX, OEA, SRU, CVE, WXR, YFW, YKW]","Let's solve it step by step.
Nodes with 0 in-degree: [VII, JJU].
Visit node VII and remove it from the graph.
Nodes with 0 in-degree: [JJU, HKM].
Visit node JJU and remove it from the graph.
Nodes with 0 in-degree: [HKM, EPR].
Visit node HKM and remove it from the graph.
Nodes with 0 in-degree: [EPR].
Visit node EPR and remove it from the graph.
Nodes with 0 in-degree: [GXX].
Visit node GXX and remove it from the graph.
Nodes with 0 in-degree: [OEA].
Visit node OEA and remove it from the graph.
Nodes with 0 in-degree: [SRU].
Visit node SRU and remove it from the graph.
Nodes with 0 in-degree: [CVE].
Visit node CVE and remove it from the graph.
Nodes with 0 in-degree: [WXR, YFW].
Visit node WXR and remove it from the graph.
Nodes with 0 in-degree: [YFW].
Visit node YFW and remove it from the graph.
Nodes with 0 in-degree: [YKW].
Visit node YKW and remove it from the graph.
So the result of topological sorting is ","('[[VII, JJU, HKM, EPR, GXX, OEA, WXR, YKW, YFW, SRU, CVE], [VII, WXR, OEA, YKW, CVE, EPR, GXX, HKM, SRU, YFW, JJU], [VII, JJU, HKM, WXR, YFW, YKW, EPR, GXX, OEA, SRU, CVE], [VII, JJU, HKM, EPR, GXX, OEA, SRU, CVE, WXR, YFW, YKW]]',)",3,127
topological_sort,"[(PEI, PPW), (PPW, CTW), (PPW, CHW), (CHW, QUB), (MEC, CTW), (MEC, DHN), (MEC, HYC), (DHN, QUB), (HYC, DHN), (HYC, CHW), (HYC, PEI), (HYC, JYA), (QUB, RDU), (WJO, PEI), (KGT, MEC), (CMT, MEC), (CMT, VBU), (VBU, MEC), (JYA, PPW), (ZZZ, PEI)]","{PEI: [PPW],
PPW: [CTW, CHW],
CTW: [],
CHW: [QUB],
MEC: [CTW, DHN, HYC],
DHN: [QUB],
HYC: [DHN, CHW, PEI, JYA],
QUB: [RDU],
RDU: [],
WJO: [PEI],
KGT: [MEC],
CMT: [MEC, VBU],
VBU: [MEC],
JYA: [PPW],
ZZZ: [PEI]}","Node PEI is connected to node PPW.
Node PPW is connected to nodes CTW, CHW.
Node CHW is connected to node QUB.
Node MEC is connected to nodes CTW, DHN, HYC.
Node DHN is connected to node QUB.
Node HYC is connected to nodes DHN, CHW, PEI, JYA.
Node QUB is connected to node RDU.
Node WJO is connected to node PEI.
Node KGT is connected to node MEC.
Node CMT is connected to nodes MEC, VBU.
Node VBU is connected to node MEC.
Node JYA is connected to node PPW.
Node ZZZ is connected to node PEI.","[CTW, KGT, VBU, WJO, PPW, MEC, RDU, DHN, HYC, QUB, CHW, ZZZ, PEI, JYA, CMT]",15,20,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WJO, KGT, CMT, ZZZ, VBU, MEC, HYC, DHN, PEI, JYA, PPW, CTW, CHW, QUB, RDU]","Let's solve it step by step.
Nodes with 0 in-degree: [WJO, KGT, CMT, ZZZ].
Visit node WJO and remove it from the graph.
Nodes with 0 in-degree: [KGT, CMT, ZZZ].
Visit node KGT and remove it from the graph.
Nodes with 0 in-degree: [CMT, ZZZ].
Visit node CMT and remove it from the graph.
Nodes with 0 in-degree: [ZZZ, VBU].
Visit node ZZZ and remove it from the graph.
Nodes with 0 in-degree: [VBU].
Visit node VBU and remove it from the graph.
Nodes with 0 in-degree: [MEC].
Visit node MEC and remove it from the graph.
Nodes with 0 in-degree: [HYC].
Visit node HYC and remove it from the graph.
Nodes with 0 in-degree: [DHN, PEI, JYA].
Visit node DHN and remove it from the graph.
Nodes with 0 in-degree: [PEI, JYA].
Visit node PEI and remove it from the graph.
Nodes with 0 in-degree: [JYA].
Visit node JYA and remove it from the graph.
Nodes with 0 in-degree: [PPW].
Visit node PPW and remove it from the graph.
Nodes with 0 in-degree: [CTW, CHW].
Visit node CTW and remove it from the graph.
Nodes with 0 in-degree: [CHW].
Visit node CHW and remove it from the graph.
Nodes with 0 in-degree: [QUB].
Visit node QUB and remove it from the graph.
Nodes with 0 in-degree: [RDU].
Visit node RDU and remove it from the graph.
So the result of topological sorting is ","('[[WJO, KGT, CMT, ZZZ, VBU, MEC, HYC, DHN, PEI, PPW, JYA, CHW, CTW, RDU, QUB], [WJO, KGT, CMT, ZZZ, VBU, MEC, HYC, DHN, PEI, JYA, PPW, CTW, CHW, QUB, RDU], [WJO, KGT, CMT, ZZZ, VBU, PPW, CTW, CHW, QUB, RDU, MEC, HYC, DHN, PEI, JYA], [WJO, PEI, CMT, DHN, QUB, CTW, KGT, VBU, RDU, ZZZ, CHW, MEC, JYA, HYC, PPW]]',)",1,128
topological_sort,"[(HBC, SMW), (HBC, NQZ), (HBC, JZI), (SMW, NQZ), (SMW, BFM), (NQZ, BFM), (NQZ, ROX), (JZI, ROX), (JZI, SMW), (BFM, FJJ), (ROX, BFM), (ROX, FJJ), (CFJ, HBC)]","{HBC: [SMW, NQZ, JZI],
SMW: [NQZ, BFM],
NQZ: [BFM, ROX],
JZI: [ROX, SMW],
BFM: [FJJ],
ROX: [BFM, FJJ],
FJJ: [],
CFJ: [HBC]}","Node HBC is connected to nodes SMW, NQZ, JZI.
Node SMW is connected to nodes NQZ, BFM.
Node NQZ is connected to nodes BFM, ROX.
Node JZI is connected to nodes ROX, SMW.
Node BFM is connected to node FJJ.
Node ROX is connected to nodes BFM, FJJ.
Node CFJ is connected to node HBC.","[HBC, NQZ, ROX, BFM, JZI, FJJ, CFJ, SMW]",8,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CFJ, HBC, JZI, SMW, NQZ, ROX, BFM, FJJ]","Let's solve it step by step.
Nodes with 0 in-degree: [CFJ].
Visit node CFJ and remove it from the graph.
Nodes with 0 in-degree: [HBC].
Visit node HBC and remove it from the graph.
Nodes with 0 in-degree: [JZI].
Visit node JZI and remove it from the graph.
Nodes with 0 in-degree: [SMW].
Visit node SMW and remove it from the graph.
Nodes with 0 in-degree: [NQZ].
Visit node NQZ and remove it from the graph.
Nodes with 0 in-degree: [ROX].
Visit node ROX and remove it from the graph.
Nodes with 0 in-degree: [BFM].
Visit node BFM and remove it from the graph.
Nodes with 0 in-degree: [FJJ].
Visit node FJJ and remove it from the graph.
So the result of topological sorting is ","('[[CFJ, BFM, JZI, FJJ, NQZ, SMW, ROX, HBC], [CFJ, HBC, JZI, SMW, NQZ, ROX, BFM, FJJ], [CFJ, HBC, JZI, SMW, FJJ, NQZ, ROX, BFM], [CFJ, HBC, BFM, FJJ, JZI, SMW, NQZ, ROX]]',)",1,129
topological_sort,"[(AOJ, BAN), (AOJ, BEO), (AOJ, ZEA), (AOJ, YPK), (BAN, YPK), (BAN, WIP), (BEO, WIP), (BEO, IYM), (BEO, UHK), (ZEA, YPK), (ZEA, WIP), (ZEA, UOQ), (YPK, MFU), (YPK, BEO), (WIP, UHK), (MFU, IYM), (UHK, QIY), (UOQ, BEO), (BWS, YPK), (BWS, ZEA), (PPQ, ZEA)]","{AOJ: [BAN, BEO, ZEA, YPK],
BAN: [YPK, WIP],
BEO: [WIP, IYM, UHK],
ZEA: [YPK, WIP, UOQ],
YPK: [MFU, BEO],
WIP: [UHK],
MFU: [IYM],
IYM: [],
UHK: [QIY],
QIY: [],
UOQ: [BEO],
BWS: [YPK, ZEA],
PPQ: [ZEA]}","Node AOJ is connected to nodes BAN, BEO, ZEA, YPK.
Node BAN is connected to nodes YPK, WIP.
Node BEO is connected to nodes WIP, IYM, UHK.
Node ZEA is connected to nodes YPK, WIP, UOQ.
Node YPK is connected to nodes MFU, BEO.
Node WIP is connected to node UHK.
Node MFU is connected to node IYM.
Node UHK is connected to node QIY.
Node UOQ is connected to node BEO.
Node BWS is connected to nodes YPK, ZEA.
Node PPQ is connected to node ZEA.","[AOJ, UOQ, UHK, QIY, PPQ, BAN, BEO, WIP, MFU, YPK, BWS, ZEA, IYM]",13,21,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[AOJ, BWS, PPQ, BAN, ZEA, YPK, UOQ, MFU, BEO, WIP, IYM, UHK, QIY]","Let's solve it step by step.
Nodes with 0 in-degree: [AOJ, BWS, PPQ].
Visit node AOJ and remove it from the graph.
Nodes with 0 in-degree: [BWS, PPQ, BAN].
Visit node BWS and remove it from the graph.
Nodes with 0 in-degree: [PPQ, BAN].
Visit node PPQ and remove it from the graph.
Nodes with 0 in-degree: [BAN, ZEA].
Visit node BAN and remove it from the graph.
Nodes with 0 in-degree: [ZEA].
Visit node ZEA and remove it from the graph.
Nodes with 0 in-degree: [YPK, UOQ].
Visit node YPK and remove it from the graph.
Nodes with 0 in-degree: [UOQ, MFU].
Visit node UOQ and remove it from the graph.
Nodes with 0 in-degree: [MFU, BEO].
Visit node MFU and remove it from the graph.
Nodes with 0 in-degree: [BEO].
Visit node BEO and remove it from the graph.
Nodes with 0 in-degree: [WIP, IYM].
Visit node WIP and remove it from the graph.
Nodes with 0 in-degree: [IYM, UHK].
Visit node IYM and remove it from the graph.
Nodes with 0 in-degree: [UHK].
Visit node UHK and remove it from the graph.
Nodes with 0 in-degree: [QIY].
Visit node QIY and remove it from the graph.
So the result of topological sorting is ","('[[AOJ, YPK, UOQ, BWS, MFU, BAN, IYM, PPQ, WIP, UHK, BEO, QIY, ZEA], [AOJ, BWS, PPQ, BAN, WIP, IYM, UHK, QIY, ZEA, YPK, UOQ, MFU, BEO], [AOJ, BWS, PPQ, BAN, ZEA, YPK, UHK, QIY, IYM, UOQ, WIP, BEO, MFU], [AOJ, BWS, PPQ, BAN, ZEA, YPK, UOQ, MFU, BEO, WIP, IYM, UHK, QIY]]',)",3,130
topological_sort,"[(REU, OQV), (REU, SCM), (REU, OGA), (OQV, JTO), (SCM, OQV), (OGA, JTO), (OGA, KUT), (OGA, SCM), (MUG, OQV), (JGK, WPY), (JGK, REU), (WPY, OGA), (KUT, OQV), (KUT, MUG), (LRF, JTO), (CXB, LRF), (CXB, KVA), (CXB, JGK), (KVA, MUG)]","{REU: [OQV, SCM, OGA],
OQV: [JTO],
SCM: [OQV],
OGA: [JTO, KUT, SCM],
JTO: [],
MUG: [OQV],
JGK: [WPY, REU],
WPY: [OGA],
KUT: [OQV, MUG],
LRF: [JTO],
CXB: [LRF, KVA, JGK],
KVA: [MUG]}","Node REU is connected to nodes OQV, SCM, OGA.
Node OQV is connected to node JTO.
Node SCM is connected to node OQV.
Node OGA is connected to nodes JTO, KUT, SCM.
Node MUG is connected to node OQV.
Node JGK is connected to nodes WPY, REU.
Node WPY is connected to node OGA.
Node KUT is connected to nodes OQV, MUG.
Node LRF is connected to node JTO.
Node CXB is connected to nodes LRF, KVA, JGK.
Node KVA is connected to node MUG.","[OQV, MUG, JTO, OGA, CXB, REU, WPY, JGK, LRF, SCM, KVA, KUT]",12,19,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CXB, LRF, KVA, JGK, WPY, REU, OGA, KUT, SCM, MUG, OQV, JTO]","Let's solve it step by step.
Nodes with 0 in-degree: [CXB].
Visit node CXB and remove it from the graph.
Nodes with 0 in-degree: [LRF, KVA, JGK].
Visit node LRF and remove it from the graph.
Nodes with 0 in-degree: [KVA, JGK].
Visit node KVA and remove it from the graph.
Nodes with 0 in-degree: [JGK].
Visit node JGK and remove it from the graph.
Nodes with 0 in-degree: [WPY, REU].
Visit node WPY and remove it from the graph.
Nodes with 0 in-degree: [REU].
Visit node REU and remove it from the graph.
Nodes with 0 in-degree: [OGA].
Visit node OGA and remove it from the graph.
Nodes with 0 in-degree: [KUT, SCM].
Visit node KUT and remove it from the graph.
Nodes with 0 in-degree: [SCM, MUG].
Visit node SCM and remove it from the graph.
Nodes with 0 in-degree: [MUG].
Visit node MUG and remove it from the graph.
Nodes with 0 in-degree: [OQV].
Visit node OQV and remove it from the graph.
Nodes with 0 in-degree: [JTO].
Visit node JTO and remove it from the graph.
So the result of topological sorting is ","('[[CXB, LRF, KVA, JGK, WPY, REU, OGA, KUT, SCM, MUG, OQV, JTO], [CXB, LRF, KVA, JGK, SCM, MUG, OQV, JTO, WPY, REU, OGA, KUT], [CXB, LRF, KVA, JGK, WPY, REU, OGA, KUT, SCM, MUG, OQV, JTO], [CXB, LRF, SCM, MUG, JGK, REU, KVA, OQV, WPY, OGA, JTO, KUT]]',)",2,131
topological_sort,"[(OIE, QCL), (OIE, CCM), (OIE, AYZ), (OIE, UZR), (OIE, ORV), (OIE, PEE), (QCL, HIR), (QCL, AYZ), (QCL, UZR), (QCL, IZO), (QCL, TMQ), (CCM, RJZ), (AYZ, IZO), (AYZ, ORV), (UZR, NWA), (UZR, HIR), (PEE, UZR), (PEE, CCM), (IZO, ORV), (TMQ, ORV), (TMQ, PEE), (TMQ, HIR), (NWA, AYZ), (RJZ, NWA)]","{OIE: [QCL, CCM, AYZ, UZR, ORV, PEE],
QCL: [HIR, AYZ, UZR, IZO, TMQ],
CCM: [RJZ],
AYZ: [IZO, ORV],
UZR: [NWA, HIR],
ORV: [],
PEE: [UZR, CCM],
HIR: [],
IZO: [ORV],
TMQ: [ORV, PEE, HIR],
NWA: [AYZ],
RJZ: [NWA]}","Node OIE is connected to nodes QCL, CCM, AYZ, UZR, ORV, PEE.
Node QCL is connected to nodes HIR, AYZ, UZR, IZO, TMQ.
Node CCM is connected to node RJZ.
Node AYZ is connected to nodes IZO, ORV.
Node UZR is connected to nodes NWA, HIR.
Node PEE is connected to nodes UZR, CCM.
Node IZO is connected to node ORV.
Node TMQ is connected to nodes ORV, PEE, HIR.
Node NWA is connected to node AYZ.
Node RJZ is connected to node NWA.","[NWA, AYZ, IZO, UZR, HIR, OIE, CCM, PEE, RJZ, ORV, QCL, TMQ]",12,24,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OIE, QCL, TMQ, PEE, UZR, CCM, HIR, RJZ, NWA, AYZ, IZO, ORV]","Let's solve it step by step.
Nodes with 0 in-degree: [OIE].
Visit node OIE and remove it from the graph.
Nodes with 0 in-degree: [QCL].
Visit node QCL and remove it from the graph.
Nodes with 0 in-degree: [TMQ].
Visit node TMQ and remove it from the graph.
Nodes with 0 in-degree: [PEE].
Visit node PEE and remove it from the graph.
Nodes with 0 in-degree: [UZR, CCM].
Visit node UZR and remove it from the graph.
Nodes with 0 in-degree: [CCM, HIR].
Visit node CCM and remove it from the graph.
Nodes with 0 in-degree: [HIR, RJZ].
Visit node HIR and remove it from the graph.
Nodes with 0 in-degree: [RJZ].
Visit node RJZ and remove it from the graph.
Nodes with 0 in-degree: [NWA].
Visit node NWA and remove it from the graph.
Nodes with 0 in-degree: [AYZ].
Visit node AYZ and remove it from the graph.
Nodes with 0 in-degree: [IZO].
Visit node IZO and remove it from the graph.
Nodes with 0 in-degree: [ORV].
Visit node ORV and remove it from the graph.
So the result of topological sorting is ","('[[OIE, QCL, TMQ, PEE, UZR, CCM, HIR, RJZ, NWA, AYZ, IZO, ORV], [OIE, QCL, TMQ, PEE, NWA, AYZ, IZO, ORV, UZR, CCM, HIR, RJZ], [OIE, QCL, TMQ, PEE, UZR, CCM, IZO, NWA, ORV, HIR, RJZ, AYZ], [OIE, QCL, RJZ, TMQ, PEE, AYZ, UZR, ORV, HIR, IZO, CCM, NWA]]',)",0,132
topological_sort,"[(HKZ, SGB), (HKZ, QBX), (SGB, NHE), (SGB, CIX), (QBX, NOL), (QBX, UZF), (QBX, SGB), (CIX, NHE), (LDO, NOL), (LDO, NHE), (NOL, NHE), (NOL, UZF), (NOL, SGB), (NOL, CIX), (UZF, NHE), (RLH, NHE), (RLH, SGB), (RLH, HKZ)]","{HKZ: [SGB, QBX],
SGB: [NHE, CIX],
QBX: [NOL, UZF, SGB],
NHE: [],
CIX: [NHE],
LDO: [NOL, NHE],
NOL: [NHE, UZF, SGB, CIX],
UZF: [NHE],
RLH: [NHE, SGB, HKZ]}","Node HKZ is connected to nodes SGB, QBX.
Node SGB is connected to nodes NHE, CIX.
Node QBX is connected to nodes NOL, UZF, SGB.
Node CIX is connected to node NHE.
Node LDO is connected to nodes NOL, NHE.
Node NOL is connected to nodes NHE, UZF, SGB, CIX.
Node UZF is connected to node NHE.
Node RLH is connected to nodes NHE, SGB, HKZ.","[CIX, HKZ, SGB, RLH, UZF, QBX, NOL, NHE, LDO]",9,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LDO, RLH, HKZ, QBX, NOL, UZF, SGB, CIX, NHE]","Let's solve it step by step.
Nodes with 0 in-degree: [LDO, RLH].
Visit node LDO and remove it from the graph.
Nodes with 0 in-degree: [RLH].
Visit node RLH and remove it from the graph.
Nodes with 0 in-degree: [HKZ].
Visit node HKZ and remove it from the graph.
Nodes with 0 in-degree: [QBX].
Visit node QBX and remove it from the graph.
Nodes with 0 in-degree: [NOL].
Visit node NOL and remove it from the graph.
Nodes with 0 in-degree: [UZF, SGB].
Visit node UZF and remove it from the graph.
Nodes with 0 in-degree: [SGB].
Visit node SGB and remove it from the graph.
Nodes with 0 in-degree: [CIX].
Visit node CIX and remove it from the graph.
Nodes with 0 in-degree: [NHE].
Visit node NHE and remove it from the graph.
So the result of topological sorting is ","('[[LDO, RLH, HKZ, SGB, CIX, NHE, QBX, NOL, UZF], [LDO, RLH, HKZ, QBX, NHE, UZF, NOL, CIX, SGB], [LDO, HKZ, RLH, UZF, SGB, QBX, NOL, NHE, CIX], [LDO, RLH, HKZ, QBX, NOL, UZF, SGB, CIX, NHE]]',)",3,133
topological_sort,"[(ZQE, JHA), (ZQE, LXI), (ZQE, GYY), (ZQE, BYE), (ZQE, NYS), (JHA, VJW), (JHA, NYS), (LXI, JHA), (GYY, VJW), (BYE, GYY), (BYE, LXI), (VTU, NYS), (VTU, LXI), (VTU, ZQE), (VTU, JHA)]","{ZQE: [JHA, LXI, GYY, BYE, NYS],
JHA: [VJW, NYS],
LXI: [JHA],
GYY: [VJW],
BYE: [GYY, LXI],
NYS: [],
VJW: [],
VTU: [NYS, LXI, ZQE, JHA]}","Node ZQE is connected to nodes JHA, LXI, GYY, BYE, NYS.
Node JHA is connected to nodes VJW, NYS.
Node LXI is connected to node JHA.
Node GYY is connected to node VJW.
Node BYE is connected to nodes GYY, LXI.
Node VTU is connected to nodes NYS, LXI, ZQE, JHA.","[VTU, VJW, LXI, BYE, GYY, NYS, JHA, ZQE]",8,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VTU, ZQE, BYE, GYY, LXI, JHA, VJW, NYS]","Let's solve it step by step.
Nodes with 0 in-degree: [VTU].
Visit node VTU and remove it from the graph.
Nodes with 0 in-degree: [ZQE].
Visit node ZQE and remove it from the graph.
Nodes with 0 in-degree: [BYE].
Visit node BYE and remove it from the graph.
Nodes with 0 in-degree: [GYY, LXI].
Visit node GYY and remove it from the graph.
Nodes with 0 in-degree: [LXI].
Visit node LXI and remove it from the graph.
Nodes with 0 in-degree: [JHA].
Visit node JHA and remove it from the graph.
Nodes with 0 in-degree: [VJW, NYS].
Visit node VJW and remove it from the graph.
Nodes with 0 in-degree: [NYS].
Visit node NYS and remove it from the graph.
So the result of topological sorting is ","('[[VTU, ZQE, GYY, VJW, BYE, JHA, NYS, LXI], [VTU, ZQE, BYE, GYY, LXI, JHA, VJW, NYS], [VTU, ZQE, BYE, GYY, LXI, VJW, NYS, JHA], [VTU, ZQE, VJW, NYS, BYE, GYY, LXI, JHA]]',)",1,134
topological_sort,"[(AKU, YDZ), (AKU, LUE), (AKU, GRQ), (YDZ, LUE), (GRQ, LUE), (GRQ, FKC), (RMC, GRQ), (RMC, LUE), (RMC, QCF), (QCF, GRQ), (WDU, LUE), (WDU, GRQ), (NGY, AKU), (NGY, RMC), (ZCI, RMC)]","{AKU: [YDZ, LUE, GRQ],
YDZ: [LUE],
LUE: [],
GRQ: [LUE, FKC],
RMC: [GRQ, LUE, QCF],
QCF: [GRQ],
FKC: [],
WDU: [LUE, GRQ],
NGY: [AKU, RMC],
ZCI: [RMC]}","Node AKU is connected to nodes YDZ, LUE, GRQ.
Node YDZ is connected to node LUE.
Node GRQ is connected to nodes LUE, FKC.
Node RMC is connected to nodes GRQ, LUE, QCF.
Node QCF is connected to node GRQ.
Node WDU is connected to nodes LUE, GRQ.
Node NGY is connected to nodes AKU, RMC.
Node ZCI is connected to node RMC.","[WDU, FKC, AKU, QCF, NGY, YDZ, RMC, GRQ, ZCI, LUE]",10,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WDU, NGY, ZCI, AKU, RMC, YDZ, QCF, GRQ, LUE, FKC]","Let's solve it step by step.
Nodes with 0 in-degree: [WDU, NGY, ZCI].
Visit node WDU and remove it from the graph.
Nodes with 0 in-degree: [NGY, ZCI].
Visit node NGY and remove it from the graph.
Nodes with 0 in-degree: [ZCI, AKU].
Visit node ZCI and remove it from the graph.
Nodes with 0 in-degree: [AKU, RMC].
Visit node AKU and remove it from the graph.
Nodes with 0 in-degree: [RMC, YDZ].
Visit node RMC and remove it from the graph.
Nodes with 0 in-degree: [YDZ, QCF].
Visit node YDZ and remove it from the graph.
Nodes with 0 in-degree: [QCF].
Visit node QCF and remove it from the graph.
Nodes with 0 in-degree: [GRQ].
Visit node GRQ and remove it from the graph.
Nodes with 0 in-degree: [LUE, FKC].
Visit node LUE and remove it from the graph.
Nodes with 0 in-degree: [FKC].
Visit node FKC and remove it from the graph.
So the result of topological sorting is ","('[[WDU, NGY, ZCI, AKU, RMC, YDZ, QCF, GRQ, LUE, FKC], [WDU, NGY, ZCI, AKU, RMC, YDZ, QCF, FKC, LUE, GRQ], [WDU, QCF, YDZ, LUE, ZCI, GRQ, AKU, NGY, RMC, FKC], [WDU, NGY, ZCI, GRQ, LUE, FKC, AKU, RMC, YDZ, QCF]]',)",0,135
topological_sort,"[(ARO, TSI), (ARO, TEA), (ARO, XIX), (XIX, TSI), (KUO, UAI), (KUO, JAE), (KUO, TEA), (KUO, HEX), (KUO, YLX), (UAI, TEA), (UAI, TSI), (JAE, TSI), (JAE, UAI), (HEX, ARO), (HEX, TEA), (HEX, UAI), (YLX, JAE), (YLX, UAI), (YLX, TSI), (DKL, MBO), (DKL, YEZ), (DKL, ARO), (DKL, HEX), (DKL, UAI), (DKL, YLX), (MBO, TSI), (MBO, XIX), (MBO, KUO), (MBO, YLX), (YEZ, ZDY), (YEZ, XIX), (YEZ, YLX), (YEZ, HGC), (YEZ, JAE), (YEZ, TSI), (ZDY, UAI), (ZDY, TEA), (ZDY, CBP), (ZDY, YLX), (ZDY, TSI), (ZDY, XIX), (HGC, UAI), (HGC, ARO), (HGC, ZDY), (HGC, CBP), (CBP, MBO), (CBP, UAI), (CBP, XIX)]","{ARO: [TSI, TEA, XIX],
TSI: [],
TEA: [],
XIX: [TSI],
KUO: [UAI, JAE, TEA, HEX, YLX],
UAI: [TEA, TSI],
JAE: [TSI, UAI],
HEX: [ARO, TEA, UAI],
YLX: [JAE, UAI, TSI],
DKL: [MBO, YEZ, ARO, HEX, UAI, YLX],
MBO: [TSI, XIX, KUO, YLX],
YEZ: [ZDY, XIX, YLX, HGC, JAE, TSI],
ZDY: [UAI, TEA, CBP, YLX, TSI, XIX],
HGC: [UAI, ARO, ZDY, CBP],
CBP: [MBO, UAI, XIX]}","Node ARO is connected to nodes TSI, TEA, XIX.
Node XIX is connected to node TSI.
Node KUO is connected to nodes UAI, JAE, TEA, HEX, YLX.
Node UAI is connected to nodes TEA, TSI.
Node JAE is connected to nodes TSI, UAI.
Node HEX is connected to nodes ARO, TEA, UAI.
Node YLX is connected to nodes JAE, UAI, TSI.
Node DKL is connected to nodes MBO, YEZ, ARO, HEX, UAI, YLX.
Node MBO is connected to nodes TSI, XIX, KUO, YLX.
Node YEZ is connected to nodes ZDY, XIX, YLX, HGC, JAE, TSI.
Node ZDY is connected to nodes UAI, TEA, CBP, YLX, TSI, XIX.
Node HGC is connected to nodes UAI, ARO, ZDY, CBP.
Node CBP is connected to nodes MBO, UAI, XIX.","[UAI, JAE, KUO, DKL, XIX, ZDY, HGC, ARO, YLX, TEA, TSI, CBP, YEZ, HEX, MBO]",15,48,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DKL, YEZ, HGC, ZDY, CBP, MBO, KUO, HEX, YLX, ARO, JAE, XIX, UAI, TEA, TSI]","Let's solve it step by step.
Nodes with 0 in-degree: [DKL].
Visit node DKL and remove it from the graph.
Nodes with 0 in-degree: [YEZ].
Visit node YEZ and remove it from the graph.
Nodes with 0 in-degree: [HGC].
Visit node HGC and remove it from the graph.
Nodes with 0 in-degree: [ZDY].
Visit node ZDY and remove it from the graph.
Nodes with 0 in-degree: [CBP].
Visit node CBP and remove it from the graph.
Nodes with 0 in-degree: [MBO].
Visit node MBO and remove it from the graph.
Nodes with 0 in-degree: [KUO].
Visit node KUO and remove it from the graph.
Nodes with 0 in-degree: [HEX, YLX].
Visit node HEX and remove it from the graph.
Nodes with 0 in-degree: [YLX, ARO].
Visit node YLX and remove it from the graph.
Nodes with 0 in-degree: [ARO, JAE].
Visit node ARO and remove it from the graph.
Nodes with 0 in-degree: [JAE, XIX].
Visit node JAE and remove it from the graph.
Nodes with 0 in-degree: [XIX, UAI].
Visit node XIX and remove it from the graph.
Nodes with 0 in-degree: [UAI].
Visit node UAI and remove it from the graph.
Nodes with 0 in-degree: [TEA, TSI].
Visit node TEA and remove it from the graph.
Nodes with 0 in-degree: [TSI].
Visit node TSI and remove it from the graph.
So the result of topological sorting is ","('[[DKL, TSI, YLX, KUO, ARO, HGC, XIX, TEA, JAE, CBP, UAI, MBO, ZDY, YEZ, HEX], [DKL, YEZ, HGC, ZDY, CBP, MBO, KUO, HEX, YLX, ARO, JAE, XIX, UAI, TEA, TSI], [DKL, YEZ, HGC, ZDY, CBP, MBO, KUO, TEA, XIX, JAE, YLX, TSI, HEX, ARO, UAI], [DKL, YEZ, HGC, ZDY, CBP, JAE, XIX, UAI, TEA, TSI, MBO, KUO, HEX, YLX, ARO]]',)",1,136
topological_sort,"[(EXC, DFH), (EXC, TEF), (EXC, VFK), (EXC, OPJ), (DFH, HOM), (DFH, FUD), (DFH, UCY), (TEF, DFH), (VFK, UCY), (VFK, FUD), (OPJ, XZH), (OPJ, FUD), (FUD, HOM), (GQK, VSX), (GQK, EXC), (GQK, HOM), (GQK, DFH), (VSX, EXC), (VSX, FUD), (VSX, UCY), (XZH, DFH), (XZH, RHX), (XZH, UCY), (RHX, FUD), (XYL, UCY), (XYL, XZH)]","{EXC: [DFH, TEF, VFK, OPJ],
DFH: [HOM, FUD, UCY],
TEF: [DFH],
VFK: [UCY, FUD],
OPJ: [XZH, FUD],
HOM: [],
FUD: [HOM],
UCY: [],
GQK: [VSX, EXC, HOM, DFH],
VSX: [EXC, FUD, UCY],
XZH: [DFH, RHX, UCY],
RHX: [FUD],
XYL: [UCY, XZH]}","Node EXC is connected to nodes DFH, TEF, VFK, OPJ.
Node DFH is connected to nodes HOM, FUD, UCY.
Node TEF is connected to node DFH.
Node VFK is connected to nodes UCY, FUD.
Node OPJ is connected to nodes XZH, FUD.
Node FUD is connected to node HOM.
Node GQK is connected to nodes VSX, EXC, HOM, DFH.
Node VSX is connected to nodes EXC, FUD, UCY.
Node XZH is connected to nodes DFH, RHX, UCY.
Node RHX is connected to node FUD.
Node XYL is connected to nodes UCY, XZH.","[OPJ, VSX, VFK, XYL, DFH, GQK, HOM, FUD, UCY, XZH, EXC, TEF, RHX]",13,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GQK, XYL, VSX, EXC, TEF, VFK, OPJ, XZH, DFH, RHX, UCY, FUD, HOM]","Let's solve it step by step.
Nodes with 0 in-degree: [GQK, XYL].
Visit node GQK and remove it from the graph.
Nodes with 0 in-degree: [XYL, VSX].
Visit node XYL and remove it from the graph.
Nodes with 0 in-degree: [VSX].
Visit node VSX and remove it from the graph.
Nodes with 0 in-degree: [EXC].
Visit node EXC and remove it from the graph.
Nodes with 0 in-degree: [TEF, VFK, OPJ].
Visit node TEF and remove it from the graph.
Nodes with 0 in-degree: [VFK, OPJ].
Visit node VFK and remove it from the graph.
Nodes with 0 in-degree: [OPJ].
Visit node OPJ and remove it from the graph.
Nodes with 0 in-degree: [XZH].
Visit node XZH and remove it from the graph.
Nodes with 0 in-degree: [DFH, RHX].
Visit node DFH and remove it from the graph.
Nodes with 0 in-degree: [RHX, UCY].
Visit node RHX and remove it from the graph.
Nodes with 0 in-degree: [UCY, FUD].
Visit node UCY and remove it from the graph.
Nodes with 0 in-degree: [FUD].
Visit node FUD and remove it from the graph.
Nodes with 0 in-degree: [HOM].
Visit node HOM and remove it from the graph.
So the result of topological sorting is ","('[[GQK, XYL, VSX, EXC, TEF, VFK, OPJ, XZH, DFH, RHX, UCY, FUD, HOM], [GQK, XYL, VSX, EXC, RHX, UCY, FUD, HOM, TEF, VFK, OPJ, XZH, DFH], [GQK, VFK, VSX, OPJ, RHX, XZH, FUD, DFH, XYL, HOM, UCY, EXC, TEF], [GQK, XYL, VSX, EXC, TEF, VFK, FUD, UCY, HOM, DFH, XZH, OPJ, RHX]]',)",0,137
topological_sort,"[(XTJ, KIS), (XTJ, LIR), (XTJ, BLI), (KIS, XWP), (KIS, QLI), (BLI, LIR), (BLI, TEX), (QLI, XWP), (WSP, RSN), (WSP, KIS), (WSP, TEX), (WSP, JEZ), (WSP, QLI), (RSN, BLI), (TEX, KIS), (JEZ, RSN), (JEZ, PPS), (PPS, RSN), (PPS, LIR), (PPS, BLI), (PPS, UIU), (UIU, QLI), (UIU, TEX), (UIU, LIR), (UIU, XTJ), (UIU, RSN)]","{XTJ: [KIS, LIR, BLI],
KIS: [XWP, QLI],
LIR: [],
BLI: [LIR, TEX],
XWP: [],
QLI: [XWP],
WSP: [RSN, KIS, TEX, JEZ, QLI],
RSN: [BLI],
TEX: [KIS],
JEZ: [RSN, PPS],
PPS: [RSN, LIR, BLI, UIU],
UIU: [QLI, TEX, LIR, XTJ, RSN]}","Node XTJ is connected to nodes KIS, LIR, BLI.
Node KIS is connected to nodes XWP, QLI.
Node BLI is connected to nodes LIR, TEX.
Node QLI is connected to node XWP.
Node WSP is connected to nodes RSN, KIS, TEX, JEZ, QLI.
Node RSN is connected to node BLI.
Node TEX is connected to node KIS.
Node JEZ is connected to nodes RSN, PPS.
Node PPS is connected to nodes RSN, LIR, BLI, UIU.
Node UIU is connected to nodes QLI, TEX, LIR, XTJ, RSN.","[XWP, RSN, UIU, XTJ, BLI, PPS, JEZ, TEX, QLI, WSP, KIS, LIR]",12,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WSP, JEZ, PPS, UIU, XTJ, RSN, BLI, LIR, TEX, KIS, QLI, XWP]","Let's solve it step by step.
Nodes with 0 in-degree: [WSP].
Visit node WSP and remove it from the graph.
Nodes with 0 in-degree: [JEZ].
Visit node JEZ and remove it from the graph.
Nodes with 0 in-degree: [PPS].
Visit node PPS and remove it from the graph.
Nodes with 0 in-degree: [UIU].
Visit node UIU and remove it from the graph.
Nodes with 0 in-degree: [XTJ, RSN].
Visit node XTJ and remove it from the graph.
Nodes with 0 in-degree: [RSN].
Visit node RSN and remove it from the graph.
Nodes with 0 in-degree: [BLI].
Visit node BLI and remove it from the graph.
Nodes with 0 in-degree: [LIR, TEX].
Visit node LIR and remove it from the graph.
Nodes with 0 in-degree: [TEX].
Visit node TEX and remove it from the graph.
Nodes with 0 in-degree: [KIS].
Visit node KIS and remove it from the graph.
Nodes with 0 in-degree: [QLI].
Visit node QLI and remove it from the graph.
Nodes with 0 in-degree: [XWP].
Visit node XWP and remove it from the graph.
So the result of topological sorting is ","('[[WSP, JEZ, PPS, UIU, XTJ, RSN, BLI, LIR, TEX, KIS, QLI, XWP], [WSP, JEZ, PPS, UIU, TEX, KIS, QLI, XWP, XTJ, RSN, BLI, LIR], [WSP, BLI, UIU, RSN, PPS, XTJ, TEX, LIR, JEZ, XWP, KIS, QLI], [WSP, JEZ, PPS, UIU, XTJ, RSN, QLI, KIS, XWP, BLI, TEX, LIR]]',)",0,138
topological_sort,"[(WUO, LHX), (WUO, LNW), (WUO, DGW), (LHX, DMJ), (LHX, IOI), (LNW, DFK), (DGW, LHX), (DMJ, MYP), (DMJ, GEF), (IOI, DFK), (KPH, MYM), (MYM, MYP), (MYM, GEF), (MYP, LNW), (GEF, DFK), (GEF, IOI), (WWB, IOI), (WWB, LNW), (WWB, DMJ)]","{WUO: [LHX, LNW, DGW],
LHX: [DMJ, IOI],
LNW: [DFK],
DGW: [LHX],
DMJ: [MYP, GEF],
IOI: [DFK],
KPH: [MYM],
MYM: [MYP, GEF],
MYP: [LNW],
GEF: [DFK, IOI],
DFK: [],
WWB: [IOI, LNW, DMJ]}","Node WUO is connected to nodes LHX, LNW, DGW.
Node LHX is connected to nodes DMJ, IOI.
Node LNW is connected to node DFK.
Node DGW is connected to node LHX.
Node DMJ is connected to nodes MYP, GEF.
Node IOI is connected to node DFK.
Node KPH is connected to node MYM.
Node MYM is connected to nodes MYP, GEF.
Node MYP is connected to node LNW.
Node GEF is connected to nodes DFK, IOI.
Node WWB is connected to nodes IOI, LNW, DMJ.","[DGW, DFK, KPH, WWB, GEF, MYP, LHX, DMJ, IOI, LNW, MYM, WUO]",12,19,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WUO, KPH, WWB, DGW, MYM, LHX, DMJ, MYP, GEF, LNW, IOI, DFK]","Let's solve it step by step.
Nodes with 0 in-degree: [WUO, KPH, WWB].
Visit node WUO and remove it from the graph.
Nodes with 0 in-degree: [KPH, WWB, DGW].
Visit node KPH and remove it from the graph.
Nodes with 0 in-degree: [WWB, DGW, MYM].
Visit node WWB and remove it from the graph.
Nodes with 0 in-degree: [DGW, MYM].
Visit node DGW and remove it from the graph.
Nodes with 0 in-degree: [MYM, LHX].
Visit node MYM and remove it from the graph.
Nodes with 0 in-degree: [LHX].
Visit node LHX and remove it from the graph.
Nodes with 0 in-degree: [DMJ].
Visit node DMJ and remove it from the graph.
Nodes with 0 in-degree: [MYP, GEF].
Visit node MYP and remove it from the graph.
Nodes with 0 in-degree: [GEF, LNW].
Visit node GEF and remove it from the graph.
Nodes with 0 in-degree: [LNW, IOI].
Visit node LNW and remove it from the graph.
Nodes with 0 in-degree: [IOI].
Visit node IOI and remove it from the graph.
Nodes with 0 in-degree: [DFK].
Visit node DFK and remove it from the graph.
So the result of topological sorting is ","('[[WUO, KPH, WWB, DGW, MYM, LHX, LNW, DFK, IOI, DMJ, MYP, GEF], [WUO, DMJ, MYP, IOI, LHX, GEF, DGW, LNW, MYM, DFK, KPH, WWB], [WUO, KPH, WWB, DGW, GEF, LNW, IOI, DFK, MYM, LHX, DMJ, MYP], [WUO, KPH, WWB, DGW, MYM, LHX, DMJ, MYP, GEF, LNW, IOI, DFK]]',)",3,139
topological_sort,"[(QAA, RDG), (QAA, UUY), (QAA, RGP), (QAA, ZHW), (RDG, RGP), (RDG, UUY), (RGP, QFJ), (ZHW, UUY), (FSA, QAA), (FSA, RGP), (FSA, PXB)]","{QAA: [RDG, UUY, RGP, ZHW],
RDG: [RGP, UUY],
UUY: [],
RGP: [QFJ],
ZHW: [UUY],
QFJ: [],
FSA: [QAA, RGP, PXB],
PXB: []}","Node QAA is connected to nodes RDG, UUY, RGP, ZHW.
Node RDG is connected to nodes RGP, UUY.
Node RGP is connected to node QFJ.
Node ZHW is connected to node UUY.
Node FSA is connected to nodes QAA, RGP, PXB.","[RGP, QFJ, UUY, FSA, RDG, QAA, ZHW, PXB]",8,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FSA, QAA, PXB, RDG, ZHW, RGP, UUY, QFJ]","Let's solve it step by step.
Nodes with 0 in-degree: [FSA].
Visit node FSA and remove it from the graph.
Nodes with 0 in-degree: [QAA, PXB].
Visit node QAA and remove it from the graph.
Nodes with 0 in-degree: [PXB, RDG, ZHW].
Visit node PXB and remove it from the graph.
Nodes with 0 in-degree: [RDG, ZHW].
Visit node RDG and remove it from the graph.
Nodes with 0 in-degree: [ZHW, RGP].
Visit node ZHW and remove it from the graph.
Nodes with 0 in-degree: [RGP, UUY].
Visit node RGP and remove it from the graph.
Nodes with 0 in-degree: [UUY, QFJ].
Visit node UUY and remove it from the graph.
Nodes with 0 in-degree: [QFJ].
Visit node QFJ and remove it from the graph.
So the result of topological sorting is ","('[[FSA, QAA, PXB, RDG, ZHW, QFJ, UUY, RGP], [FSA, QAA, PXB, RDG, ZHW, RGP, UUY, QFJ], [FSA, QAA, UUY, QFJ, PXB, RDG, ZHW, RGP], [FSA, ZHW, QFJ, QAA, PXB, RGP, RDG, UUY]]',)",1,140
topological_sort,"[(ZHC, SPR), (ZHC, VPR), (ZHC, RYA), (SPR, CGL), (RYA, BID), (CGL, VPR), (BID, CGL), (BID, SPR), (BID, VPR), (NEI, CGL), (NEI, BID), (NEI, SPR), (NEI, TSZ), (NEI, RYA), (NEI, VPR), (TSZ, BID), (KYF, SPR), (KYF, BID), (KYF, TSZ), (KYF, RYA), (KYF, ZHC), (KYF, VPR)]","{ZHC: [SPR, VPR, RYA],
SPR: [CGL],
VPR: [],
RYA: [BID],
CGL: [VPR],
BID: [CGL, SPR, VPR],
NEI: [CGL, BID, SPR, TSZ, RYA, VPR],
TSZ: [BID],
KYF: [SPR, BID, TSZ, RYA, ZHC, VPR]}","Node ZHC is connected to nodes SPR, VPR, RYA.
Node SPR is connected to node CGL.
Node RYA is connected to node BID.
Node CGL is connected to node VPR.
Node BID is connected to nodes CGL, SPR, VPR.
Node NEI is connected to nodes CGL, BID, SPR, TSZ, RYA, VPR.
Node TSZ is connected to node BID.
Node KYF is connected to nodes SPR, BID, TSZ, RYA, ZHC, VPR.","[TSZ, VPR, ZHC, NEI, BID, KYF, CGL, SPR, RYA]",9,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[NEI, KYF, TSZ, ZHC, RYA, BID, SPR, CGL, VPR]","Let's solve it step by step.
Nodes with 0 in-degree: [NEI, KYF].
Visit node NEI and remove it from the graph.
Nodes with 0 in-degree: [KYF].
Visit node KYF and remove it from the graph.
Nodes with 0 in-degree: [TSZ, ZHC].
Visit node TSZ and remove it from the graph.
Nodes with 0 in-degree: [ZHC].
Visit node ZHC and remove it from the graph.
Nodes with 0 in-degree: [RYA].
Visit node RYA and remove it from the graph.
Nodes with 0 in-degree: [BID].
Visit node BID and remove it from the graph.
Nodes with 0 in-degree: [SPR].
Visit node SPR and remove it from the graph.
Nodes with 0 in-degree: [CGL].
Visit node CGL and remove it from the graph.
Nodes with 0 in-degree: [VPR].
Visit node VPR and remove it from the graph.
So the result of topological sorting is ","('[[NEI, KYF, TSZ, ZHC, SPR, VPR, RYA, BID, CGL], [NEI, ZHC, SPR, RYA, BID, VPR, KYF, TSZ, CGL], [NEI, KYF, TSZ, ZHC, RYA, BID, SPR, CGL, VPR], [NEI, KYF, TSZ, SPR, CGL, VPR, ZHC, RYA, BID]]',)",2,141
topological_sort,"[(OMB, UCM), (OMB, URH), (UCM, QPB), (UCM, LCR), (URH, PGQ), (LCR, LLN), (LCR, JIU), (LCR, WNF), (TSS, LLN), (TSS, GJX), (LLN, JIU), (GJX, URH), (GJX, QPB), (JIU, QPB), (QDQ, JIU), (QDQ, UCM), (QDQ, TSS), (QDQ, PGQ), (QDQ, WPU), (PGQ, WNF), (PGQ, QPB), (WPU, OMB), (WPU, LCR), (WPU, UCM), (WPU, URH), (VDL, XKG), (XKG, OMB), (XKG, PGQ)]","{OMB: [UCM, URH],
UCM: [QPB, LCR],
URH: [PGQ],
QPB: [],
LCR: [LLN, JIU, WNF],
TSS: [LLN, GJX],
LLN: [JIU],
GJX: [URH, QPB],
JIU: [QPB],
QDQ: [JIU, UCM, TSS, PGQ, WPU],
PGQ: [WNF, QPB],
WPU: [OMB, LCR, UCM, URH],
VDL: [XKG],
XKG: [OMB, PGQ],
WNF: []}","Node OMB is connected to nodes UCM, URH.
Node UCM is connected to nodes QPB, LCR.
Node URH is connected to node PGQ.
Node LCR is connected to nodes LLN, JIU, WNF.
Node TSS is connected to nodes LLN, GJX.
Node LLN is connected to node JIU.
Node GJX is connected to nodes URH, QPB.
Node JIU is connected to node QPB.
Node QDQ is connected to nodes JIU, UCM, TSS, PGQ, WPU.
Node PGQ is connected to nodes WNF, QPB.
Node WPU is connected to nodes OMB, LCR, UCM, URH.
Node VDL is connected to node XKG.
Node XKG is connected to nodes OMB, PGQ.","[PGQ, UCM, VDL, QDQ, TSS, LLN, OMB, URH, QPB, LCR, XKG, WNF, GJX, JIU, WPU]",15,28,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QDQ, VDL, TSS, WPU, XKG, GJX, OMB, UCM, URH, LCR, PGQ, LLN, WNF, JIU, QPB]","Let's solve it step by step.
Nodes with 0 in-degree: [QDQ, VDL].
Visit node QDQ and remove it from the graph.
Nodes with 0 in-degree: [VDL, TSS, WPU].
Visit node VDL and remove it from the graph.
Nodes with 0 in-degree: [TSS, WPU, XKG].
Visit node TSS and remove it from the graph.
Nodes with 0 in-degree: [WPU, XKG, GJX].
Visit node WPU and remove it from the graph.
Nodes with 0 in-degree: [XKG, GJX].
Visit node XKG and remove it from the graph.
Nodes with 0 in-degree: [GJX, OMB].
Visit node GJX and remove it from the graph.
Nodes with 0 in-degree: [OMB].
Visit node OMB and remove it from the graph.
Nodes with 0 in-degree: [UCM, URH].
Visit node UCM and remove it from the graph.
Nodes with 0 in-degree: [URH, LCR].
Visit node URH and remove it from the graph.
Nodes with 0 in-degree: [LCR, PGQ].
Visit node LCR and remove it from the graph.
Nodes with 0 in-degree: [PGQ, LLN].
Visit node PGQ and remove it from the graph.
Nodes with 0 in-degree: [LLN, WNF].
Visit node LLN and remove it from the graph.
Nodes with 0 in-degree: [WNF, JIU].
Visit node WNF and remove it from the graph.
Nodes with 0 in-degree: [JIU].
Visit node JIU and remove it from the graph.
Nodes with 0 in-degree: [QPB].
Visit node QPB and remove it from the graph.
So the result of topological sorting is ","('[[QDQ, VDL, TSS, WPU, XKG, GJX, OMB, UCM, URH, LCR, PGQ, LLN, WNF, JIU, QPB], [QDQ, OMB, UCM, LCR, GJX, XKG, WPU, LLN, URH, QPB, TSS, VDL, JIU, WNF, PGQ], [QDQ, VDL, TSS, WPU, XKG, GJX, OMB, UCM, JIU, QPB, PGQ, URH, WNF, LCR, LLN], [QDQ, VDL, TSS, WPU, XKG, PGQ, LLN, WNF, JIU, QPB, GJX, OMB, UCM, URH, LCR]]',)",0,142
topological_sort,"[(AJH, ODS), (AJH, VPB), (AJH, JKD), (AJH, ZFP), (ODS, VPB), (JKD, PGR), (JKD, VAB), (JKD, ODS), (ZFP, PGR), (ZFP, ODS), (ZFP, VPB), (PGR, VPB), (ZCF, VAB), (ZCF, ZFP), (ZCF, CWU), (ZCF, JKD), (VAB, FDP), (VAB, ZFP), (CWU, OWA), (CWU, VPB), (CWU, VAB), (FDP, PGR), (FDP, ZFP), (OWA, PGR), (OWA, VAB), (OWA, AJH), (OWA, ODS), (OWA, JKD)]","{AJH: [ODS, VPB, JKD, ZFP],
ODS: [VPB],
VPB: [],
JKD: [PGR, VAB, ODS],
ZFP: [PGR, ODS, VPB],
PGR: [VPB],
ZCF: [VAB, ZFP, CWU, JKD],
VAB: [FDP, ZFP],
CWU: [OWA, VPB, VAB],
FDP: [PGR, ZFP],
OWA: [PGR, VAB, AJH, ODS, JKD]}","Node AJH is connected to nodes ODS, VPB, JKD, ZFP.
Node ODS is connected to node VPB.
Node JKD is connected to nodes PGR, VAB, ODS.
Node ZFP is connected to nodes PGR, ODS, VPB.
Node PGR is connected to node VPB.
Node ZCF is connected to nodes VAB, ZFP, CWU, JKD.
Node VAB is connected to nodes FDP, ZFP.
Node CWU is connected to nodes OWA, VPB, VAB.
Node FDP is connected to nodes PGR, ZFP.
Node OWA is connected to nodes PGR, VAB, AJH, ODS, JKD.","[FDP, ZCF, VPB, OWA, VAB, PGR, JKD, ZFP, CWU, AJH, ODS]",11,28,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZCF, CWU, OWA, AJH, JKD, VAB, FDP, ZFP, PGR, ODS, VPB]","Let's solve it step by step.
Nodes with 0 in-degree: [ZCF].
Visit node ZCF and remove it from the graph.
Nodes with 0 in-degree: [CWU].
Visit node CWU and remove it from the graph.
Nodes with 0 in-degree: [OWA].
Visit node OWA and remove it from the graph.
Nodes with 0 in-degree: [AJH].
Visit node AJH and remove it from the graph.
Nodes with 0 in-degree: [JKD].
Visit node JKD and remove it from the graph.
Nodes with 0 in-degree: [VAB].
Visit node VAB and remove it from the graph.
Nodes with 0 in-degree: [FDP].
Visit node FDP and remove it from the graph.
Nodes with 0 in-degree: [ZFP].
Visit node ZFP and remove it from the graph.
Nodes with 0 in-degree: [PGR, ODS].
Visit node PGR and remove it from the graph.
Nodes with 0 in-degree: [ODS].
Visit node ODS and remove it from the graph.
Nodes with 0 in-degree: [VPB].
Visit node VPB and remove it from the graph.
So the result of topological sorting is ","('[[ZCF, CWU, OWA, AJH, JKD, PGR, VAB, VPB, ZFP, ODS, FDP], [ZCF, CWU, OWA, PGR, ODS, VPB, AJH, JKD, VAB, FDP, ZFP], [ZCF, ZFP, VAB, OWA, VPB, FDP, ODS, JKD, PGR, AJH, CWU], [ZCF, CWU, OWA, AJH, JKD, VAB, FDP, ZFP, PGR, ODS, VPB]]',)",3,143
topological_sort,"[(HNT, CCF), (HNT, MPZ), (CCF, QIJ), (CCF, NPW), (MPZ, NPW), (MPZ, CCF), (NPW, QIJ), (YIO, NAA), (YIO, CCF), (YIO, HNT), (NAA, TQW), (TQW, MPZ), (TQW, IMT), (IMT, HNT), (IMT, QIJ), (IMT, MPZ), (YUO, TVL), (YUO, CCF), (YUO, MQV), (YUO, YIO), (YUO, TQW), (YUO, IMT), (TVL, XKH), (TVL, HNT), (TVL, TQW), (TVL, WFZ), (TVL, QIJ), (TVL, IMT), (TVL, NAA), (TVL, NPW), (MQV, NAA), (MQV, CCF), (MQV, HNT), (MQV, QIJ), (XKH, QIJ), (XKH, BEF), (WFZ, TQW), (WFZ, NAA), (WFZ, CCF), (WFZ, YIO), (BEF, MQV), (BEF, IMT), (BEF, WFZ)]","{HNT: [CCF, MPZ],
CCF: [QIJ, NPW],
MPZ: [NPW, CCF],
QIJ: [],
NPW: [QIJ],
YIO: [NAA, CCF, HNT],
NAA: [TQW],
TQW: [MPZ, IMT],
IMT: [HNT, QIJ, MPZ],
YUO: [TVL, CCF, MQV, YIO, TQW, IMT],
TVL: [XKH, HNT, TQW, WFZ, QIJ, IMT, NAA, NPW],
MQV: [NAA, CCF, HNT, QIJ],
XKH: [QIJ, BEF],
WFZ: [TQW, NAA, CCF, YIO],
BEF: [MQV, IMT, WFZ]}","Node HNT is connected to nodes CCF, MPZ.
Node CCF is connected to nodes QIJ, NPW.
Node MPZ is connected to nodes NPW, CCF.
Node NPW is connected to node QIJ.
Node YIO is connected to nodes NAA, CCF, HNT.
Node NAA is connected to node TQW.
Node TQW is connected to nodes MPZ, IMT.
Node IMT is connected to nodes HNT, QIJ, MPZ.
Node YUO is connected to nodes TVL, CCF, MQV, YIO, TQW, IMT.
Node TVL is connected to nodes XKH, HNT, TQW, WFZ, QIJ, IMT, NAA, NPW.
Node MQV is connected to nodes NAA, CCF, HNT, QIJ.
Node XKH is connected to nodes QIJ, BEF.
Node WFZ is connected to nodes TQW, NAA, CCF, YIO.
Node BEF is connected to nodes MQV, IMT, WFZ.","[WFZ, YIO, NPW, CCF, BEF, TVL, MQV, MPZ, QIJ, XKH, HNT, NAA, TQW, YUO, IMT]",15,43,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YUO, TVL, XKH, BEF, MQV, WFZ, YIO, NAA, TQW, IMT, HNT, MPZ, CCF, NPW, QIJ]","Let's solve it step by step.
Nodes with 0 in-degree: [YUO].
Visit node YUO and remove it from the graph.
Nodes with 0 in-degree: [TVL].
Visit node TVL and remove it from the graph.
Nodes with 0 in-degree: [XKH].
Visit node XKH and remove it from the graph.
Nodes with 0 in-degree: [BEF].
Visit node BEF and remove it from the graph.
Nodes with 0 in-degree: [MQV, WFZ].
Visit node MQV and remove it from the graph.
Nodes with 0 in-degree: [WFZ].
Visit node WFZ and remove it from the graph.
Nodes with 0 in-degree: [YIO].
Visit node YIO and remove it from the graph.
Nodes with 0 in-degree: [NAA].
Visit node NAA and remove it from the graph.
Nodes with 0 in-degree: [TQW].
Visit node TQW and remove it from the graph.
Nodes with 0 in-degree: [IMT].
Visit node IMT and remove it from the graph.
Nodes with 0 in-degree: [HNT].
Visit node HNT and remove it from the graph.
Nodes with 0 in-degree: [MPZ].
Visit node MPZ and remove it from the graph.
Nodes with 0 in-degree: [CCF].
Visit node CCF and remove it from the graph.
Nodes with 0 in-degree: [NPW].
Visit node NPW and remove it from the graph.
Nodes with 0 in-degree: [QIJ].
Visit node QIJ and remove it from the graph.
So the result of topological sorting is ","('[[YUO, TVL, XKH, BEF, MQV, HNT, MPZ, CCF, NPW, QIJ, WFZ, YIO, NAA, TQW, IMT], [YUO, TVL, XKH, BEF, MQV, WFZ, YIO, NAA, TQW, IMT, HNT, MPZ, CCF, NPW, QIJ], [YUO, MPZ, XKH, NPW, NAA, MQV, TQW, YIO, CCF, BEF, TVL, HNT, IMT, WFZ, QIJ], [YUO, TVL, XKH, BEF, MQV, WFZ, YIO, HNT, MPZ, TQW, NPW, QIJ, CCF, IMT, NAA]]',)",1,144
topological_sort,"[(QDT, JTM), (QDT, XUG), (QDT, PUI), (QDT, NCU), (QDT, DID), (XUG, PNQ), (XUG, INP), (XUG, PUI), (PUI, AFK), (NCU, XUG), (NCU, PUI), (NCU, INP), (NCU, JJB), (DID, JTM), (DID, PNQ), (XJT, PNQ), (XJT, YQJ), (XJT, QDT), (PNQ, JTM), (YQJ, XUG), (YQJ, INP), (YQJ, QDT), (YQJ, AFK), (YQJ, DID), (IAU, QDT), (IAU, XUG), (IAU, NCU), (IAU, INP), (IAU, JJB), (IAU, DID), (IAU, KQK), (INP, JTM), (JJB, JTM), (JJB, XUG), (KQK, XJT), (AFK, JTM), (AFK, INP)]","{QDT: [JTM, XUG, PUI, NCU, DID],
JTM: [],
XUG: [PNQ, INP, PUI],
PUI: [AFK],
NCU: [XUG, PUI, INP, JJB],
DID: [JTM, PNQ],
XJT: [PNQ, YQJ, QDT],
PNQ: [JTM],
YQJ: [XUG, INP, QDT, AFK, DID],
IAU: [QDT, XUG, NCU, INP, JJB, DID, KQK],
INP: [JTM],
JJB: [JTM, XUG],
KQK: [XJT],
AFK: [JTM, INP]}","Node QDT is connected to nodes JTM, XUG, PUI, NCU, DID.
Node XUG is connected to nodes PNQ, INP, PUI.
Node PUI is connected to node AFK.
Node NCU is connected to nodes XUG, PUI, INP, JJB.
Node DID is connected to nodes JTM, PNQ.
Node XJT is connected to nodes PNQ, YQJ, QDT.
Node PNQ is connected to node JTM.
Node YQJ is connected to nodes XUG, INP, QDT, AFK, DID.
Node IAU is connected to nodes QDT, XUG, NCU, INP, JJB, DID, KQK.
Node INP is connected to node JTM.
Node JJB is connected to nodes JTM, XUG.
Node KQK is connected to node XJT.
Node AFK is connected to nodes JTM, INP.","[INP, IAU, DID, QDT, KQK, JTM, XUG, JJB, AFK, NCU, XJT, PUI, PNQ, YQJ]",14,37,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IAU, KQK, XJT, YQJ, QDT, NCU, DID, JJB, XUG, PNQ, PUI, AFK, INP, JTM]","Let's solve it step by step.
Nodes with 0 in-degree: [IAU].
Visit node IAU and remove it from the graph.
Nodes with 0 in-degree: [KQK].
Visit node KQK and remove it from the graph.
Nodes with 0 in-degree: [XJT].
Visit node XJT and remove it from the graph.
Nodes with 0 in-degree: [YQJ].
Visit node YQJ and remove it from the graph.
Nodes with 0 in-degree: [QDT].
Visit node QDT and remove it from the graph.
Nodes with 0 in-degree: [NCU, DID].
Visit node NCU and remove it from the graph.
Nodes with 0 in-degree: [DID, JJB].
Visit node DID and remove it from the graph.
Nodes with 0 in-degree: [JJB].
Visit node JJB and remove it from the graph.
Nodes with 0 in-degree: [XUG].
Visit node XUG and remove it from the graph.
Nodes with 0 in-degree: [PNQ, PUI].
Visit node PNQ and remove it from the graph.
Nodes with 0 in-degree: [PUI].
Visit node PUI and remove it from the graph.
Nodes with 0 in-degree: [AFK].
Visit node AFK and remove it from the graph.
Nodes with 0 in-degree: [INP].
Visit node INP and remove it from the graph.
Nodes with 0 in-degree: [JTM].
Visit node JTM and remove it from the graph.
So the result of topological sorting is ","('[[IAU, XJT, PNQ, JJB, DID, QDT, AFK, PUI, NCU, INP, YQJ, XUG, KQK, JTM], [IAU, KQK, XJT, YQJ, QDT, NCU, DID, JJB, XUG, PNQ, PUI, AFK, INP, JTM], [IAU, KQK, XJT, YQJ, PUI, AFK, INP, JTM, QDT, NCU, DID, JJB, XUG, PNQ], [IAU, KQK, XJT, YQJ, QDT, NCU, DID, JJB, XUG, AFK, JTM, INP, PNQ, PUI]]',)",1,145
topological_sort,"[(IMG, FGN), (IMG, PYH), (FGN, FCZ), (PYH, FCZ), (PYH, FGN), (ORM, PYH), (ORM, FGN), (ORM, FOU), (FOU, FCZ), (FOU, PYH), (GIL, ORM), (GIL, PYH), (GIL, MAO), (GIL, FGN), (GIL, FOU), (GIL, ZZD), (MAO, FOU), (MAO, FCZ), (MAO, FGN), (MAO, PYH), (ZZD, MAO), (ZZD, IMG), (JTE, GIL), (JTE, DYV), (JTE, FOU), (DYV, GIL), (DYV, PYH), (DYV, ZZD), (DYV, MAO), (DYV, FCZ), (DYV, FOU), (VWR, FOU), (VWR, FCZ), (VWR, JTE), (VWR, PYH)]","{IMG: [FGN, PYH],
FGN: [FCZ],
PYH: [FCZ, FGN],
FCZ: [],
ORM: [PYH, FGN, FOU],
FOU: [FCZ, PYH],
GIL: [ORM, PYH, MAO, FGN, FOU, ZZD],
MAO: [FOU, FCZ, FGN, PYH],
ZZD: [MAO, IMG],
JTE: [GIL, DYV, FOU],
DYV: [GIL, PYH, ZZD, MAO, FCZ, FOU],
VWR: [FOU, FCZ, JTE, PYH]}","Node IMG is connected to nodes FGN, PYH.
Node FGN is connected to node FCZ.
Node PYH is connected to nodes FCZ, FGN.
Node ORM is connected to nodes PYH, FGN, FOU.
Node FOU is connected to nodes FCZ, PYH.
Node GIL is connected to nodes ORM, PYH, MAO, FGN, FOU, ZZD.
Node MAO is connected to nodes FOU, FCZ, FGN, PYH.
Node ZZD is connected to nodes MAO, IMG.
Node JTE is connected to nodes GIL, DYV, FOU.
Node DYV is connected to nodes GIL, PYH, ZZD, MAO, FCZ, FOU.
Node VWR is connected to nodes FOU, FCZ, JTE, PYH.","[GIL, IMG, VWR, JTE, ZZD, FCZ, ORM, FGN, MAO, FOU, PYH, DYV]",12,35,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VWR, JTE, DYV, GIL, ORM, ZZD, MAO, IMG, FOU, PYH, FGN, FCZ]","Let's solve it step by step.
Nodes with 0 in-degree: [VWR].
Visit node VWR and remove it from the graph.
Nodes with 0 in-degree: [JTE].
Visit node JTE and remove it from the graph.
Nodes with 0 in-degree: [DYV].
Visit node DYV and remove it from the graph.
Nodes with 0 in-degree: [GIL].
Visit node GIL and remove it from the graph.
Nodes with 0 in-degree: [ORM, ZZD].
Visit node ORM and remove it from the graph.
Nodes with 0 in-degree: [ZZD].
Visit node ZZD and remove it from the graph.
Nodes with 0 in-degree: [MAO, IMG].
Visit node MAO and remove it from the graph.
Nodes with 0 in-degree: [IMG, FOU].
Visit node IMG and remove it from the graph.
Nodes with 0 in-degree: [FOU].
Visit node FOU and remove it from the graph.
Nodes with 0 in-degree: [PYH].
Visit node PYH and remove it from the graph.
Nodes with 0 in-degree: [FGN].
Visit node FGN and remove it from the graph.
Nodes with 0 in-degree: [FCZ].
Visit node FCZ and remove it from the graph.
So the result of topological sorting is ","('[[VWR, JTE, DYV, GIL, FOU, PYH, FGN, FCZ, ORM, ZZD, MAO, IMG], [VWR, JTE, DYV, GIL, ORM, ZZD, MAO, FOU, PYH, FGN, IMG, FCZ], [VWR, FGN, ZZD, GIL, MAO, IMG, ORM, PYH, FCZ, JTE, DYV, FOU], [VWR, JTE, DYV, GIL, ORM, ZZD, MAO, IMG, FOU, PYH, FGN, FCZ]]',)",3,146
topological_sort,"[(YCI, YPH), (YCI, RLL), (YPH, ODL), (YPH, NJD), (YPH, AGR), (RLL, YPH), (RLL, ODL), (RLL, OXC), (NJD, ODL), (NJD, OXC), (NJD, KGC), (NJD, TVK), (NJD, WYO), (AGR, WYO), (AGR, OXC), (WQX, TVK), (WQX, WYO), (WQX, NFS), (WQX, YCI), (TVK, KGC), (TVK, WYO), (WYO, ODL), (NFS, AGR), (NFS, WYO), (KGC, ODL), (KGC, WYO)]","{YCI: [YPH, RLL],
YPH: [ODL, NJD, AGR],
RLL: [YPH, ODL, OXC],
ODL: [],
NJD: [ODL, OXC, KGC, TVK, WYO],
AGR: [WYO, OXC],
WQX: [TVK, WYO, NFS, YCI],
TVK: [KGC, WYO],
WYO: [ODL],
NFS: [AGR, WYO],
KGC: [ODL, WYO],
OXC: []}","Node YCI is connected to nodes YPH, RLL.
Node YPH is connected to nodes ODL, NJD, AGR.
Node RLL is connected to nodes YPH, ODL, OXC.
Node NJD is connected to nodes ODL, OXC, KGC, TVK, WYO.
Node AGR is connected to nodes WYO, OXC.
Node WQX is connected to nodes TVK, WYO, NFS, YCI.
Node TVK is connected to nodes KGC, WYO.
Node WYO is connected to node ODL.
Node NFS is connected to nodes AGR, WYO.
Node KGC is connected to nodes ODL, WYO.","[WYO, WQX, ODL, YCI, OXC, NJD, TVK, NFS, YPH, RLL, KGC, AGR]",12,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WQX, NFS, YCI, RLL, YPH, NJD, AGR, TVK, OXC, KGC, WYO, ODL]","Let's solve it step by step.
Nodes with 0 in-degree: [WQX].
Visit node WQX and remove it from the graph.
Nodes with 0 in-degree: [NFS, YCI].
Visit node NFS and remove it from the graph.
Nodes with 0 in-degree: [YCI].
Visit node YCI and remove it from the graph.
Nodes with 0 in-degree: [RLL].
Visit node RLL and remove it from the graph.
Nodes with 0 in-degree: [YPH].
Visit node YPH and remove it from the graph.
Nodes with 0 in-degree: [NJD, AGR].
Visit node NJD and remove it from the graph.
Nodes with 0 in-degree: [AGR, TVK].
Visit node AGR and remove it from the graph.
Nodes with 0 in-degree: [TVK, OXC].
Visit node TVK and remove it from the graph.
Nodes with 0 in-degree: [OXC, KGC].
Visit node OXC and remove it from the graph.
Nodes with 0 in-degree: [KGC].
Visit node KGC and remove it from the graph.
Nodes with 0 in-degree: [WYO].
Visit node WYO and remove it from the graph.
Nodes with 0 in-degree: [ODL].
Visit node ODL and remove it from the graph.
So the result of topological sorting is ","('[[WQX, NFS, YCI, RLL, YPH, NJD, ODL, TVK, OXC, AGR, KGC, WYO], [WQX, NFS, YCI, RLL, YPH, NJD, AGR, TVK, OXC, KGC, WYO, ODL], [WQX, OXC, TVK, YPH, NFS, RLL, YCI, WYO, NJD, AGR, ODL, KGC], [WQX, NFS, YCI, RLL, OXC, KGC, WYO, ODL, YPH, NJD, AGR, TVK]]',)",1,147
topological_sort,"[(YUC, CBJ), (YUC, GET), (YUC, PFV), (YUC, ZDB), (CBJ, GET), (CBJ, CAN), (GET, YKC), (PFV, ZDB), (PFV, CBJ), (PFV, YKC), (ZDB, YKC), (CAN, ZDB), (TRH, GET), (TRH, BDX), (TRH, YUC), (BDX, CBJ), (BDX, YKC), (BDX, YUC), (BDX, PFV), (JSQ, YUC)]","{YUC: [CBJ, GET, PFV, ZDB],
CBJ: [GET, CAN],
GET: [YKC],
PFV: [ZDB, CBJ, YKC],
ZDB: [YKC],
CAN: [ZDB],
YKC: [],
TRH: [GET, BDX, YUC],
BDX: [CBJ, YKC, YUC, PFV],
JSQ: [YUC]}","Node YUC is connected to nodes CBJ, GET, PFV, ZDB.
Node CBJ is connected to nodes GET, CAN.
Node GET is connected to node YKC.
Node PFV is connected to nodes ZDB, CBJ, YKC.
Node ZDB is connected to node YKC.
Node CAN is connected to node ZDB.
Node TRH is connected to nodes GET, BDX, YUC.
Node BDX is connected to nodes CBJ, YKC, YUC, PFV.
Node JSQ is connected to node YUC.","[JSQ, CAN, YUC, YKC, BDX, ZDB, CBJ, PFV, GET, TRH]",10,20,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TRH, JSQ, BDX, YUC, PFV, CBJ, GET, CAN, ZDB, YKC]","Let's solve it step by step.
Nodes with 0 in-degree: [TRH, JSQ].
Visit node TRH and remove it from the graph.
Nodes with 0 in-degree: [JSQ, BDX].
Visit node JSQ and remove it from the graph.
Nodes with 0 in-degree: [BDX].
Visit node BDX and remove it from the graph.
Nodes with 0 in-degree: [YUC].
Visit node YUC and remove it from the graph.
Nodes with 0 in-degree: [PFV].
Visit node PFV and remove it from the graph.
Nodes with 0 in-degree: [CBJ].
Visit node CBJ and remove it from the graph.
Nodes with 0 in-degree: [GET, CAN].
Visit node GET and remove it from the graph.
Nodes with 0 in-degree: [CAN].
Visit node CAN and remove it from the graph.
Nodes with 0 in-degree: [ZDB].
Visit node ZDB and remove it from the graph.
Nodes with 0 in-degree: [YKC].
Visit node YKC and remove it from the graph.
So the result of topological sorting is ","('[[TRH, JSQ, GET, YKC, PFV, CAN, ZDB, BDX, YUC, CBJ], [TRH, JSQ, BDX, CAN, ZDB, YKC, YUC, PFV, CBJ, GET], [TRH, JSQ, BDX, YUC, PFV, CBJ, GET, CAN, ZDB, YKC], [TRH, JSQ, BDX, YUC, PFV, ZDB, GET, YKC, CBJ, CAN]]',)",2,148
topological_sort,"[(QYE, GXV), (QYE, LCS), (QYE, VUQ), (QYE, TSR), (QYE, MWW), (GXV, TSR), (LCS, QGR), (VUQ, LCS), (VUQ, QGR), (TSR, LCS), (TSR, MWW), (TSR, VUQ), (MWW, LCS), (RAN, QYE), (RAN, TSR), (RAN, QGR), (MKM, JEO), (MKM, QGR), (MKM, LCS), (MKM, MWW), (MKM, GXV), (MKM, RAN), (MKM, TSR), (JEO, QGR), (JEO, QYE), (JEO, MWW), (GAW, GXV), (GAW, DYS), (GAW, RAN), (GAW, LCS), (GAW, QYE), (DYS, MKM), (DYS, QYE), (DYS, MWW), (DYS, TSR), (RHC, DYS), (RHC, LCS), (RHC, JEO), (RHC, QGR), (RHC, TSR)]","{QYE: [GXV, LCS, VUQ, TSR, MWW],
GXV: [TSR],
LCS: [QGR],
VUQ: [LCS, QGR],
TSR: [LCS, MWW, VUQ],
MWW: [LCS],
RAN: [QYE, TSR, QGR],
QGR: [],
MKM: [JEO, QGR, LCS, MWW, GXV, RAN, TSR],
JEO: [QGR, QYE, MWW],
GAW: [GXV, DYS, RAN, LCS, QYE],
DYS: [MKM, QYE, MWW, TSR],
RHC: [DYS, LCS, JEO, QGR, TSR]}","Node QYE is connected to nodes GXV, LCS, VUQ, TSR, MWW.
Node GXV is connected to node TSR.
Node LCS is connected to node QGR.
Node VUQ is connected to nodes LCS, QGR.
Node TSR is connected to nodes LCS, MWW, VUQ.
Node MWW is connected to node LCS.
Node RAN is connected to nodes QYE, TSR, QGR.
Node MKM is connected to nodes JEO, QGR, LCS, MWW, GXV, RAN, TSR.
Node JEO is connected to nodes QGR, QYE, MWW.
Node GAW is connected to nodes GXV, DYS, RAN, LCS, QYE.
Node DYS is connected to nodes MKM, QYE, MWW, TSR.
Node RHC is connected to nodes DYS, LCS, JEO, QGR, TSR.","[JEO, MKM, QYE, GAW, GXV, RAN, RHC, DYS, MWW, VUQ, QGR, TSR, LCS]",13,40,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GAW, RHC, DYS, MKM, JEO, RAN, QYE, GXV, TSR, MWW, VUQ, LCS, QGR]","Let's solve it step by step.
Nodes with 0 in-degree: [GAW, RHC].
Visit node GAW and remove it from the graph.
Nodes with 0 in-degree: [RHC].
Visit node RHC and remove it from the graph.
Nodes with 0 in-degree: [DYS].
Visit node DYS and remove it from the graph.
Nodes with 0 in-degree: [MKM].
Visit node MKM and remove it from the graph.
Nodes with 0 in-degree: [JEO, RAN].
Visit node JEO and remove it from the graph.
Nodes with 0 in-degree: [RAN].
Visit node RAN and remove it from the graph.
Nodes with 0 in-degree: [QYE].
Visit node QYE and remove it from the graph.
Nodes with 0 in-degree: [GXV].
Visit node GXV and remove it from the graph.
Nodes with 0 in-degree: [TSR].
Visit node TSR and remove it from the graph.
Nodes with 0 in-degree: [MWW, VUQ].
Visit node MWW and remove it from the graph.
Nodes with 0 in-degree: [VUQ].
Visit node VUQ and remove it from the graph.
Nodes with 0 in-degree: [LCS].
Visit node LCS and remove it from the graph.
Nodes with 0 in-degree: [QGR].
Visit node QGR and remove it from the graph.
So the result of topological sorting is ","('[[GAW, RHC, DYS, MKM, MWW, VUQ, LCS, QGR, JEO, RAN, QYE, GXV, TSR], [GAW, RHC, DYS, MKM, JEO, RAN, QYE, GXV, TSR, MWW, VUQ, LCS, QGR], [GAW, MKM, TSR, MWW, RAN, QGR, RHC, GXV, JEO, QYE, VUQ, DYS, LCS], [GAW, RHC, DYS, MKM, JEO, RAN, MWW, TSR, VUQ, GXV, QGR, QYE, LCS]]',)",1,149
topological_sort,"[(XVZ, TVG), (XVZ, WTM), (XVZ, DIT), (TVG, DVE), (TVG, AEV), (WTM, DVE), (WTM, AEV), (WTM, CII), (DIT, WTM), (AEV, DVE), (CII, DVE), (CII, TVG), (CII, NIK), (TJU, AEV), (TJU, NIK), (TJU, WTM), (NIK, DVE), (NIK, TVG), (UCL, TJU), (UCL, HOQ), (UCL, LPK), (UCL, DVE), (UCL, WTM), (UCL, NIK), (HOQ, XVZ), (HOQ, DVE), (HOQ, DIT), (HOQ, NIK), (LPK, DVE), (LPK, NIK)]","{XVZ: [TVG, WTM, DIT],
TVG: [DVE, AEV],
WTM: [DVE, AEV, CII],
DIT: [WTM],
DVE: [],
AEV: [DVE],
CII: [DVE, TVG, NIK],
TJU: [AEV, NIK, WTM],
NIK: [DVE, TVG],
UCL: [TJU, HOQ, LPK, DVE, WTM, NIK],
HOQ: [XVZ, DVE, DIT, NIK],
LPK: [DVE, NIK]}","Node XVZ is connected to nodes TVG, WTM, DIT.
Node TVG is connected to nodes DVE, AEV.
Node WTM is connected to nodes DVE, AEV, CII.
Node DIT is connected to node WTM.
Node AEV is connected to node DVE.
Node CII is connected to nodes DVE, TVG, NIK.
Node TJU is connected to nodes AEV, NIK, WTM.
Node NIK is connected to nodes DVE, TVG.
Node UCL is connected to nodes TJU, HOQ, LPK, DVE, WTM, NIK.
Node HOQ is connected to nodes XVZ, DVE, DIT, NIK.
Node LPK is connected to nodes DVE, NIK.","[TJU, LPK, DVE, TVG, HOQ, CII, DIT, NIK, XVZ, WTM, AEV, UCL]",12,30,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UCL, TJU, HOQ, LPK, XVZ, DIT, WTM, CII, NIK, TVG, AEV, DVE]","Let's solve it step by step.
Nodes with 0 in-degree: [UCL].
Visit node UCL and remove it from the graph.
Nodes with 0 in-degree: [TJU, HOQ, LPK].
Visit node TJU and remove it from the graph.
Nodes with 0 in-degree: [HOQ, LPK].
Visit node HOQ and remove it from the graph.
Nodes with 0 in-degree: [LPK, XVZ].
Visit node LPK and remove it from the graph.
Nodes with 0 in-degree: [XVZ].
Visit node XVZ and remove it from the graph.
Nodes with 0 in-degree: [DIT].
Visit node DIT and remove it from the graph.
Nodes with 0 in-degree: [WTM].
Visit node WTM and remove it from the graph.
Nodes with 0 in-degree: [CII].
Visit node CII and remove it from the graph.
Nodes with 0 in-degree: [NIK].
Visit node NIK and remove it from the graph.
Nodes with 0 in-degree: [TVG].
Visit node TVG and remove it from the graph.
Nodes with 0 in-degree: [AEV].
Visit node AEV and remove it from the graph.
Nodes with 0 in-degree: [DVE].
Visit node DVE and remove it from the graph.
So the result of topological sorting is ","('[[UCL, TJU, HOQ, LPK, NIK, TVG, AEV, DVE, XVZ, DIT, WTM, CII], [UCL, TJU, HOQ, LPK, XVZ, DIT, WTM, CII, NIK, TVG, AEV, DVE], [UCL, DIT, TJU, LPK, DVE, HOQ, XVZ, TVG, NIK, WTM, CII, AEV], [UCL, TJU, HOQ, LPK, XVZ, DIT, DVE, AEV, WTM, NIK, CII, TVG]]',)",1,150
topological_sort,"[(YKD, UGT), (UGT, RNT), (UGT, FLV), (FLV, FSQ), (ZQE, IYY), (IYY, RNT), (FSQ, OFF), (KWH, FLV), (KWH, UTM), (KWH, IYY), (KWH, ZQE), (UTM, ERR), (UTM, FSQ), (UTM, UGT), (ERR, UGT), (ERR, ZQE), (PFT, UTM)]","{YKD: [UGT],
UGT: [RNT, FLV],
RNT: [],
FLV: [FSQ],
ZQE: [IYY],
IYY: [RNT],
FSQ: [OFF],
OFF: [],
KWH: [FLV, UTM, IYY, ZQE],
UTM: [ERR, FSQ, UGT],
ERR: [UGT, ZQE],
PFT: [UTM]}","Node YKD is connected to node UGT.
Node UGT is connected to nodes RNT, FLV.
Node FLV is connected to node FSQ.
Node ZQE is connected to node IYY.
Node IYY is connected to node RNT.
Node FSQ is connected to node OFF.
Node KWH is connected to nodes FLV, UTM, IYY, ZQE.
Node UTM is connected to nodes ERR, FSQ, UGT.
Node ERR is connected to nodes UGT, ZQE.
Node PFT is connected to node UTM.","[PFT, UGT, ERR, FSQ, KWH, OFF, FLV, RNT, YKD, ZQE, IYY, UTM]",12,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YKD, KWH, PFT, UTM, ERR, UGT, ZQE, FLV, IYY, FSQ, RNT, OFF]","Let's solve it step by step.
Nodes with 0 in-degree: [YKD, KWH, PFT].
Visit node YKD and remove it from the graph.
Nodes with 0 in-degree: [KWH, PFT].
Visit node KWH and remove it from the graph.
Nodes with 0 in-degree: [PFT].
Visit node PFT and remove it from the graph.
Nodes with 0 in-degree: [UTM].
Visit node UTM and remove it from the graph.
Nodes with 0 in-degree: [ERR].
Visit node ERR and remove it from the graph.
Nodes with 0 in-degree: [UGT, ZQE].
Visit node UGT and remove it from the graph.
Nodes with 0 in-degree: [ZQE, FLV].
Visit node ZQE and remove it from the graph.
Nodes with 0 in-degree: [FLV, IYY].
Visit node FLV and remove it from the graph.
Nodes with 0 in-degree: [IYY, FSQ].
Visit node IYY and remove it from the graph.
Nodes with 0 in-degree: [FSQ, RNT].
Visit node FSQ and remove it from the graph.
Nodes with 0 in-degree: [RNT, OFF].
Visit node RNT and remove it from the graph.
Nodes with 0 in-degree: [OFF].
Visit node OFF and remove it from the graph.
So the result of topological sorting is ","('[[YKD, KWH, PFT, UTM, IYY, FSQ, RNT, OFF, ERR, UGT, ZQE, FLV], [YKD, KWH, PFT, UTM, ERR, UGT, ZQE, FLV, IYY, FSQ, RNT, OFF], [YKD, KWH, RNT, IYY, OFF, ERR, FLV, UGT, PFT, ZQE, UTM, FSQ], [YKD, KWH, PFT, UTM, ERR, UGT, IYY, FSQ, RNT, FLV, ZQE, OFF]]',)",1,151
topological_sort,"[(PGC, CFJ), (PGC, MZU), (PGC, JGF), (PGC, SVL), (CFJ, GCO), (MZU, WBF), (JGF, MZU), (JGF, WYH), (JGF, CFJ), (SVL, JGF), (SVL, WBF), (SVL, MZU), (GCO, MZU), (WYH, MZU), (WVC, WYH), (WVC, WBF), (WVC, SVL), (WVC, JGF), (CKM, JGF), (CKM, WBF), (CKM, WYH), (XQZ, WVC), (XQZ, PGC), (XQZ, WYH), (XQZ, CKM), (XQZ, CFJ)]","{PGC: [CFJ, MZU, JGF, SVL],
CFJ: [GCO],
MZU: [WBF],
JGF: [MZU, WYH, CFJ],
SVL: [JGF, WBF, MZU],
GCO: [MZU],
WYH: [MZU],
WBF: [],
WVC: [WYH, WBF, SVL, JGF],
CKM: [JGF, WBF, WYH],
XQZ: [WVC, PGC, WYH, CKM, CFJ]}","Node PGC is connected to nodes CFJ, MZU, JGF, SVL.
Node CFJ is connected to node GCO.
Node MZU is connected to node WBF.
Node JGF is connected to nodes MZU, WYH, CFJ.
Node SVL is connected to nodes JGF, WBF, MZU.
Node GCO is connected to node MZU.
Node WYH is connected to node MZU.
Node WVC is connected to nodes WYH, WBF, SVL, JGF.
Node CKM is connected to nodes JGF, WBF, WYH.
Node XQZ is connected to nodes WVC, PGC, WYH, CKM, CFJ.","[CKM, MZU, JGF, XQZ, PGC, GCO, SVL, WBF, WVC, CFJ, WYH]",11,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XQZ, WVC, PGC, CKM, SVL, JGF, WYH, CFJ, GCO, MZU, WBF]","Let's solve it step by step.
Nodes with 0 in-degree: [XQZ].
Visit node XQZ and remove it from the graph.
Nodes with 0 in-degree: [WVC, PGC, CKM].
Visit node WVC and remove it from the graph.
Nodes with 0 in-degree: [PGC, CKM].
Visit node PGC and remove it from the graph.
Nodes with 0 in-degree: [CKM, SVL].
Visit node CKM and remove it from the graph.
Nodes with 0 in-degree: [SVL].
Visit node SVL and remove it from the graph.
Nodes with 0 in-degree: [JGF].
Visit node JGF and remove it from the graph.
Nodes with 0 in-degree: [WYH, CFJ].
Visit node WYH and remove it from the graph.
Nodes with 0 in-degree: [CFJ].
Visit node CFJ and remove it from the graph.
Nodes with 0 in-degree: [GCO].
Visit node GCO and remove it from the graph.
Nodes with 0 in-degree: [MZU].
Visit node MZU and remove it from the graph.
Nodes with 0 in-degree: [WBF].
Visit node WBF and remove it from the graph.
So the result of topological sorting is ","('[[XQZ, WVC, PGC, CKM, SVL, CFJ, WYH, WBF, JGF, MZU, GCO], [XQZ, WVC, PGC, CKM, SVL, JGF, WYH, CFJ, GCO, MZU, WBF], [XQZ, CKM, PGC, CFJ, JGF, SVL, MZU, GCO, WYH, WVC, WBF], [XQZ, WVC, PGC, GCO, MZU, WBF, CKM, SVL, JGF, WYH, CFJ]]',)",1,152
topological_sort,"[(PEX, KMY), (PEX, PDU), (PEX, YOQ), (PEX, SBX), (KMY, MPR), (PDU, YOQ), (PDU, KMY), (PDU, TCQ), (PDU, MPR), (YOQ, KMY), (SBX, PDU), (SBX, KMY), (SBX, YOQ), (MPR, TCQ), (GLU, PEX), (GLU, SBX), (GLU, PDU), (GLU, TCQ)]","{PEX: [KMY, PDU, YOQ, SBX],
KMY: [MPR],
PDU: [YOQ, KMY, TCQ, MPR],
YOQ: [KMY],
SBX: [PDU, KMY, YOQ],
MPR: [TCQ],
GLU: [PEX, SBX, PDU, TCQ],
TCQ: []}","Node PEX is connected to nodes KMY, PDU, YOQ, SBX.
Node KMY is connected to node MPR.
Node PDU is connected to nodes YOQ, KMY, TCQ, MPR.
Node YOQ is connected to node KMY.
Node SBX is connected to nodes PDU, KMY, YOQ.
Node MPR is connected to node TCQ.
Node GLU is connected to nodes PEX, SBX, PDU, TCQ.","[PEX, TCQ, GLU, MPR, SBX, YOQ, PDU, KMY]",8,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GLU, PEX, SBX, PDU, YOQ, KMY, MPR, TCQ]","Let's solve it step by step.
Nodes with 0 in-degree: [GLU].
Visit node GLU and remove it from the graph.
Nodes with 0 in-degree: [PEX].
Visit node PEX and remove it from the graph.
Nodes with 0 in-degree: [SBX].
Visit node SBX and remove it from the graph.
Nodes with 0 in-degree: [PDU].
Visit node PDU and remove it from the graph.
Nodes with 0 in-degree: [YOQ].
Visit node YOQ and remove it from the graph.
Nodes with 0 in-degree: [KMY].
Visit node KMY and remove it from the graph.
Nodes with 0 in-degree: [MPR].
Visit node MPR and remove it from the graph.
Nodes with 0 in-degree: [TCQ].
Visit node TCQ and remove it from the graph.
So the result of topological sorting is ","('[[GLU, PEX, SBX, PDU, YOQ, TCQ, KMY, MPR], [GLU, YOQ, PEX, KMY, PDU, MPR, TCQ, SBX], [GLU, PEX, SBX, PDU, YOQ, KMY, MPR, TCQ], [GLU, PEX, MPR, TCQ, SBX, PDU, YOQ, KMY]]',)",2,153
topological_sort,"[(UTK, HXG), (UTK, DWM), (HXG, RHL), (DWM, HXG), (UMX, DWM), (UMX, HXG), (UMX, RHL), (XII, UMX), (XII, RHL), (XII, HXG), (MKP, DWM), (MKP, XII), (HUB, DWM), (HUB, RHL)]","{UTK: [HXG, DWM],
HXG: [RHL],
DWM: [HXG],
RHL: [],
UMX: [DWM, HXG, RHL],
XII: [UMX, RHL, HXG],
MKP: [DWM, XII],
HUB: [DWM, RHL]}","Node UTK is connected to nodes HXG, DWM.
Node HXG is connected to node RHL.
Node DWM is connected to node HXG.
Node UMX is connected to nodes DWM, HXG, RHL.
Node XII is connected to nodes UMX, RHL, HXG.
Node MKP is connected to nodes DWM, XII.
Node HUB is connected to nodes DWM, RHL.","[HXG, UMX, RHL, UTK, DWM, XII, HUB, MKP]",8,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UTK, MKP, HUB, XII, UMX, DWM, HXG, RHL]","Let's solve it step by step.
Nodes with 0 in-degree: [UTK, MKP, HUB].
Visit node UTK and remove it from the graph.
Nodes with 0 in-degree: [MKP, HUB].
Visit node MKP and remove it from the graph.
Nodes with 0 in-degree: [HUB, XII].
Visit node HUB and remove it from the graph.
Nodes with 0 in-degree: [XII].
Visit node XII and remove it from the graph.
Nodes with 0 in-degree: [UMX].
Visit node UMX and remove it from the graph.
Nodes with 0 in-degree: [DWM].
Visit node DWM and remove it from the graph.
Nodes with 0 in-degree: [HXG].
Visit node HXG and remove it from the graph.
Nodes with 0 in-degree: [RHL].
Visit node RHL and remove it from the graph.
So the result of topological sorting is ","('[[UTK, MKP, HXG, RHL, HUB, XII, UMX, DWM], [UTK, MKP, HUB, XII, DWM, UMX, RHL, HXG], [UTK, UMX, DWM, RHL, HXG, HUB, XII, MKP], [UTK, MKP, HUB, XII, UMX, DWM, HXG, RHL]]',)",3,154
topological_sort,"[(OID, DCH), (OID, ARD), (DCH, GRT), (ARD, TDD), (GRT, ARD), (GRT, TDD), (EAR, GRT), (EAR, TDD), (EAR, JVR), (EAR, ARD), (JVR, TDD), (JVR, OID), (VLP, DCH), (VLP, OID), (VLP, ARD), (VLP, JVR), (LTD, TDD), (LTD, VLP), (LTD, EAR), (LTD, ARD), (LTD, OID)]","{OID: [DCH, ARD],
DCH: [GRT],
ARD: [TDD],
GRT: [ARD, TDD],
TDD: [],
EAR: [GRT, TDD, JVR, ARD],
JVR: [TDD, OID],
VLP: [DCH, OID, ARD, JVR],
LTD: [TDD, VLP, EAR, ARD, OID]}","Node OID is connected to nodes DCH, ARD.
Node DCH is connected to node GRT.
Node ARD is connected to node TDD.
Node GRT is connected to nodes ARD, TDD.
Node EAR is connected to nodes GRT, TDD, JVR, ARD.
Node JVR is connected to nodes TDD, OID.
Node VLP is connected to nodes DCH, OID, ARD, JVR.
Node LTD is connected to nodes TDD, VLP, EAR, ARD, OID.","[EAR, ARD, JVR, TDD, LTD, GRT, OID, VLP, DCH]",9,21,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LTD, VLP, EAR, JVR, OID, DCH, GRT, ARD, TDD]","Let's solve it step by step.
Nodes with 0 in-degree: [LTD].
Visit node LTD and remove it from the graph.
Nodes with 0 in-degree: [VLP, EAR].
Visit node VLP and remove it from the graph.
Nodes with 0 in-degree: [EAR].
Visit node EAR and remove it from the graph.
Nodes with 0 in-degree: [JVR].
Visit node JVR and remove it from the graph.
Nodes with 0 in-degree: [OID].
Visit node OID and remove it from the graph.
Nodes with 0 in-degree: [DCH].
Visit node DCH and remove it from the graph.
Nodes with 0 in-degree: [GRT].
Visit node GRT and remove it from the graph.
Nodes with 0 in-degree: [ARD].
Visit node ARD and remove it from the graph.
Nodes with 0 in-degree: [TDD].
Visit node TDD and remove it from the graph.
So the result of topological sorting is ","('[[LTD, JVR, GRT, EAR, OID, DCH, TDD, ARD, VLP], [LTD, VLP, EAR, JVR, OID, DCH, GRT, ARD, TDD], [LTD, VLP, EAR, GRT, ARD, TDD, JVR, OID, DCH], [LTD, VLP, EAR, JVR, GRT, ARD, TDD, DCH, OID]]',)",1,155
topological_sort,"[(MAP, AZQ), (MAP, HJN), (AZQ, MVT), (MVT, HJN), (MVT, PPQ), (UMO, MAP), (UMO, FZK), (UMO, PLN), (UMO, ORC), (UMO, AZQ), (FZK, AZQ), (FZK, DPO), (FZK, LKD), (FZK, ORC), (PLN, AZQ), (PLN, MAP), (PLN, ORC), (PLN, FZK), (ORC, DPO), (DPO, PPQ), (DPO, LKD), (ASX, WPF), (ASX, AZQ), (WPF, ORC), (WPF, PPQ), (WPF, PLN)]","{MAP: [AZQ, HJN],
AZQ: [MVT],
HJN: [],
MVT: [HJN, PPQ],
UMO: [MAP, FZK, PLN, ORC, AZQ],
FZK: [AZQ, DPO, LKD, ORC],
PLN: [AZQ, MAP, ORC, FZK],
ORC: [DPO],
DPO: [PPQ, LKD],
LKD: [],
PPQ: [],
ASX: [WPF, AZQ],
WPF: [ORC, PPQ, PLN]}","Node MAP is connected to nodes AZQ, HJN.
Node AZQ is connected to node MVT.
Node MVT is connected to nodes HJN, PPQ.
Node UMO is connected to nodes MAP, FZK, PLN, ORC, AZQ.
Node FZK is connected to nodes AZQ, DPO, LKD, ORC.
Node PLN is connected to nodes AZQ, MAP, ORC, FZK.
Node ORC is connected to node DPO.
Node DPO is connected to nodes PPQ, LKD.
Node ASX is connected to nodes WPF, AZQ.
Node WPF is connected to nodes ORC, PPQ, PLN.","[MVT, ASX, MAP, PPQ, PLN, WPF, UMO, FZK, LKD, AZQ, ORC, HJN, DPO]",13,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UMO, ASX, WPF, PLN, MAP, FZK, AZQ, ORC, MVT, DPO, HJN, PPQ, LKD]","Let's solve it step by step.
Nodes with 0 in-degree: [UMO, ASX].
Visit node UMO and remove it from the graph.
Nodes with 0 in-degree: [ASX].
Visit node ASX and remove it from the graph.
Nodes with 0 in-degree: [WPF].
Visit node WPF and remove it from the graph.
Nodes with 0 in-degree: [PLN].
Visit node PLN and remove it from the graph.
Nodes with 0 in-degree: [MAP, FZK].
Visit node MAP and remove it from the graph.
Nodes with 0 in-degree: [FZK].
Visit node FZK and remove it from the graph.
Nodes with 0 in-degree: [AZQ, ORC].
Visit node AZQ and remove it from the graph.
Nodes with 0 in-degree: [ORC, MVT].
Visit node ORC and remove it from the graph.
Nodes with 0 in-degree: [MVT, DPO].
Visit node MVT and remove it from the graph.
Nodes with 0 in-degree: [DPO, HJN].
Visit node DPO and remove it from the graph.
Nodes with 0 in-degree: [HJN, PPQ, LKD].
Visit node HJN and remove it from the graph.
Nodes with 0 in-degree: [PPQ, LKD].
Visit node PPQ and remove it from the graph.
Nodes with 0 in-degree: [LKD].
Visit node LKD and remove it from the graph.
So the result of topological sorting is ","('[[UMO, ASX, WPF, PLN, MAP, FZK, LKD, HJN, ORC, MVT, AZQ, DPO, PPQ], [UMO, ASX, WPF, PLN, MAP, FZK, AZQ, ORC, MVT, DPO, HJN, PPQ, LKD], [UMO, ASX, WPF, PLN, DPO, HJN, PPQ, LKD, MAP, FZK, AZQ, ORC, MVT], [UMO, PPQ, DPO, MAP, PLN, FZK, HJN, MVT, ORC, WPF, AZQ, ASX, LKD]]',)",1,156
topological_sort,"[(ONW, LUV), (ONW, RWF), (ONW, GAM), (XLU, XUB), (XLU, ONW), (XUB, GAM), (CPH, HWW), (CPH, XLU), (CPH, LQK), (HWW, XUB), (HWW, LQK), (LQK, DAX), (LQK, ONW), (LQK, LUV), (LQK, GAM), (DAX, BKZ), (DAX, XUB), (BKZ, GAM), (BKZ, ONW), (BKZ, LUV), (LAJ, ONW), (LAJ, BKZ), (GFE, LQK), (GFE, XLU), (CWC, HWW), (CWC, GFE)]","{ONW: [LUV, RWF, GAM],
LUV: [],
RWF: [],
GAM: [],
XLU: [XUB, ONW],
XUB: [GAM],
CPH: [HWW, XLU, LQK],
HWW: [XUB, LQK],
LQK: [DAX, ONW, LUV, GAM],
DAX: [BKZ, XUB],
BKZ: [GAM, ONW, LUV],
LAJ: [ONW, BKZ],
GFE: [LQK, XLU],
CWC: [HWW, GFE]}","Node ONW is connected to nodes LUV, RWF, GAM.
Node XLU is connected to nodes XUB, ONW.
Node XUB is connected to node GAM.
Node CPH is connected to nodes HWW, XLU, LQK.
Node HWW is connected to nodes XUB, LQK.
Node LQK is connected to nodes DAX, ONW, LUV, GAM.
Node DAX is connected to nodes BKZ, XUB.
Node BKZ is connected to nodes GAM, ONW, LUV.
Node LAJ is connected to nodes ONW, BKZ.
Node GFE is connected to nodes LQK, XLU.
Node CWC is connected to nodes HWW, GFE.","[DAX, BKZ, HWW, LUV, RWF, CWC, GFE, ONW, GAM, LQK, CPH, XLU, LAJ, XUB]",14,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CPH, LAJ, CWC, HWW, GFE, LQK, XLU, DAX, BKZ, XUB, ONW, LUV, RWF, GAM]","Let's solve it step by step.
Nodes with 0 in-degree: [CPH, LAJ, CWC].
Visit node CPH and remove it from the graph.
Nodes with 0 in-degree: [LAJ, CWC].
Visit node LAJ and remove it from the graph.
Nodes with 0 in-degree: [CWC].
Visit node CWC and remove it from the graph.
Nodes with 0 in-degree: [HWW, GFE].
Visit node HWW and remove it from the graph.
Nodes with 0 in-degree: [GFE].
Visit node GFE and remove it from the graph.
Nodes with 0 in-degree: [LQK, XLU].
Visit node LQK and remove it from the graph.
Nodes with 0 in-degree: [XLU, DAX].
Visit node XLU and remove it from the graph.
Nodes with 0 in-degree: [DAX].
Visit node DAX and remove it from the graph.
Nodes with 0 in-degree: [BKZ, XUB].
Visit node BKZ and remove it from the graph.
Nodes with 0 in-degree: [XUB, ONW].
Visit node XUB and remove it from the graph.
Nodes with 0 in-degree: [ONW].
Visit node ONW and remove it from the graph.
Nodes with 0 in-degree: [LUV, RWF, GAM].
Visit node LUV and remove it from the graph.
Nodes with 0 in-degree: [RWF, GAM].
Visit node RWF and remove it from the graph.
Nodes with 0 in-degree: [GAM].
Visit node GAM and remove it from the graph.
So the result of topological sorting is ","('[[CPH, LAJ, CWC, HWW, ONW, LUV, RWF, GAM, GFE, LQK, XLU, DAX, BKZ, XUB], [CPH, LAJ, CWC, HWW, GFE, LQK, XLU, DAX, BKZ, XUB, ONW, LUV, RWF, GAM], [CPH, LAJ, CWC, HWW, GFE, LQK, XLU, ONW, GAM, LUV, DAX, RWF, BKZ, XUB], [CPH, LQK, ONW, HWW, GFE, GAM, DAX, XLU, RWF, LAJ, XUB, LUV, BKZ, CWC]]',)",1,157
topological_sort,"[(CTY, UVB), (CTY, XRX), (CTY, JEP), (UVB, GFH), (UVB, YSI), (GFH, JEP), (GFH, RCJ), (GFH, IHA), (GFH, XRX), (GFH, EXS), (YSI, GFH), (YSI, EBC), (YSI, RCJ), (RCJ, XRX), (RCJ, IHA), (IHA, JEP), (EXS, GKW), (EXS, IHA), (EXS, RCJ), (DKU, EBC), (DKU, UVB), (DKU, XRX), (EBC, JEP), (EBC, GKW), (GKW, RCJ), (CUT, RCJ), (CUT, GFH), (CUT, JEP), (CUT, XRX), (CUT, DKU), (ZAA, EBC), (ZAA, CTY)]","{CTY: [UVB, XRX, JEP],
UVB: [GFH, YSI],
XRX: [],
JEP: [],
GFH: [JEP, RCJ, IHA, XRX, EXS],
YSI: [GFH, EBC, RCJ],
RCJ: [XRX, IHA],
IHA: [JEP],
EXS: [GKW, IHA, RCJ],
DKU: [EBC, UVB, XRX],
EBC: [JEP, GKW],
GKW: [RCJ],
CUT: [RCJ, GFH, JEP, XRX, DKU],
ZAA: [EBC, CTY]}","Node CTY is connected to nodes UVB, XRX, JEP.
Node UVB is connected to nodes GFH, YSI.
Node GFH is connected to nodes JEP, RCJ, IHA, XRX, EXS.
Node YSI is connected to nodes GFH, EBC, RCJ.
Node RCJ is connected to nodes XRX, IHA.
Node IHA is connected to node JEP.
Node EXS is connected to nodes GKW, IHA, RCJ.
Node DKU is connected to nodes EBC, UVB, XRX.
Node EBC is connected to nodes JEP, GKW.
Node GKW is connected to node RCJ.
Node CUT is connected to nodes RCJ, GFH, JEP, XRX, DKU.
Node ZAA is connected to nodes EBC, CTY.","[RCJ, ZAA, YSI, EXS, IHA, CTY, DKU, JEP, UVB, GFH, XRX, EBC, CUT, GKW]",14,32,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CUT, ZAA, DKU, CTY, UVB, YSI, GFH, EBC, EXS, GKW, RCJ, XRX, IHA, JEP]","Let's solve it step by step.
Nodes with 0 in-degree: [CUT, ZAA].
Visit node CUT and remove it from the graph.
Nodes with 0 in-degree: [ZAA, DKU].
Visit node ZAA and remove it from the graph.
Nodes with 0 in-degree: [DKU, CTY].
Visit node DKU and remove it from the graph.
Nodes with 0 in-degree: [CTY].
Visit node CTY and remove it from the graph.
Nodes with 0 in-degree: [UVB].
Visit node UVB and remove it from the graph.
Nodes with 0 in-degree: [YSI].
Visit node YSI and remove it from the graph.
Nodes with 0 in-degree: [GFH, EBC].
Visit node GFH and remove it from the graph.
Nodes with 0 in-degree: [EBC, EXS].
Visit node EBC and remove it from the graph.
Nodes with 0 in-degree: [EXS].
Visit node EXS and remove it from the graph.
Nodes with 0 in-degree: [GKW].
Visit node GKW and remove it from the graph.
Nodes with 0 in-degree: [RCJ].
Visit node RCJ and remove it from the graph.
Nodes with 0 in-degree: [XRX, IHA].
Visit node XRX and remove it from the graph.
Nodes with 0 in-degree: [IHA].
Visit node IHA and remove it from the graph.
Nodes with 0 in-degree: [JEP].
Visit node JEP and remove it from the graph.
So the result of topological sorting is ","('[[CUT, IHA, CTY, EXS, XRX, JEP, UVB, EBC, RCJ, YSI, ZAA, GKW, DKU, GFH], [CUT, ZAA, DKU, CTY, UVB, YSI, GFH, EBC, GKW, IHA, EXS, XRX, JEP, RCJ], [CUT, ZAA, DKU, CTY, UVB, YSI, GFH, EBC, EXS, GKW, RCJ, XRX, IHA, JEP], [CUT, ZAA, DKU, CTY, RCJ, XRX, IHA, JEP, UVB, YSI, GFH, EBC, EXS, GKW]]',)",2,158
topological_sort,"[(ZIK, CRX), (AJN, ZIK), (AJN, ATR), (ATR, ZIK), (ATR, CRX), (EPK, MHR), (EPK, RZJ), (EPK, CRX), (MHR, ZIK), (MHR, EBA), (MHR, AJN), (MHR, CRX), (RZJ, ATR), (EBA, KNO), (EBA, CRX), (EBA, ATR), (EBA, ZIK), (GIF, AJN), (GIF, MHR), (GIF, RZJ), (KNO, AJN), (KNO, RZJ)]","{ZIK: [CRX],
CRX: [],
AJN: [ZIK, ATR],
ATR: [ZIK, CRX],
EPK: [MHR, RZJ, CRX],
MHR: [ZIK, EBA, AJN, CRX],
RZJ: [ATR],
EBA: [KNO, CRX, ATR, ZIK],
GIF: [AJN, MHR, RZJ],
KNO: [AJN, RZJ]}","Node ZIK is connected to node CRX.
Node AJN is connected to nodes ZIK, ATR.
Node ATR is connected to nodes ZIK, CRX.
Node EPK is connected to nodes MHR, RZJ, CRX.
Node MHR is connected to nodes ZIK, EBA, AJN, CRX.
Node RZJ is connected to node ATR.
Node EBA is connected to nodes KNO, CRX, ATR, ZIK.
Node GIF is connected to nodes AJN, MHR, RZJ.
Node KNO is connected to nodes AJN, RZJ.","[KNO, CRX, GIF, ATR, MHR, RZJ, EBA, ZIK, EPK, AJN]",10,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EPK, GIF, MHR, EBA, KNO, AJN, RZJ, ATR, ZIK, CRX]","Let's solve it step by step.
Nodes with 0 in-degree: [EPK, GIF].
Visit node EPK and remove it from the graph.
Nodes with 0 in-degree: [GIF].
Visit node GIF and remove it from the graph.
Nodes with 0 in-degree: [MHR].
Visit node MHR and remove it from the graph.
Nodes with 0 in-degree: [EBA].
Visit node EBA and remove it from the graph.
Nodes with 0 in-degree: [KNO].
Visit node KNO and remove it from the graph.
Nodes with 0 in-degree: [AJN, RZJ].
Visit node AJN and remove it from the graph.
Nodes with 0 in-degree: [RZJ].
Visit node RZJ and remove it from the graph.
Nodes with 0 in-degree: [ATR].
Visit node ATR and remove it from the graph.
Nodes with 0 in-degree: [ZIK].
Visit node ZIK and remove it from the graph.
Nodes with 0 in-degree: [CRX].
Visit node CRX and remove it from the graph.
So the result of topological sorting is ","('[[EPK, GIF, MHR, EBA, KNO, AJN, RZJ, ATR, ZIK, CRX], [EPK, EBA, AJN, CRX, MHR, ATR, RZJ, ZIK, KNO, GIF], [EPK, GIF, MHR, ATR, ZIK, CRX, EBA, KNO, AJN, RZJ], [EPK, GIF, MHR, EBA, KNO, ZIK, AJN, RZJ, ATR, CRX]]',)",0,159
topological_sort,"[(AZV, SZB), (JNK, THE), (JNK, BFW), (THE, BFW), (THE, CAD), (THE, LEO), (CAD, LEO), (CAD, SZB), (LEO, AZV), (BBK, LEO), (BBK, THE), (BBK, SZB)]","{AZV: [SZB],
SZB: [],
JNK: [THE, BFW],
THE: [BFW, CAD, LEO],
BFW: [],
CAD: [LEO, SZB],
LEO: [AZV],
BBK: [LEO, THE, SZB]}","Node AZV is connected to node SZB.
Node JNK is connected to nodes THE, BFW.
Node THE is connected to nodes BFW, CAD, LEO.
Node CAD is connected to nodes LEO, SZB.
Node LEO is connected to node AZV.
Node BBK is connected to nodes LEO, THE, SZB.","[SZB, CAD, JNK, BBK, AZV, BFW, LEO, THE]",8,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JNK, BBK, THE, BFW, CAD, LEO, AZV, SZB]","Let's solve it step by step.
Nodes with 0 in-degree: [JNK, BBK].
Visit node JNK and remove it from the graph.
Nodes with 0 in-degree: [BBK].
Visit node BBK and remove it from the graph.
Nodes with 0 in-degree: [THE].
Visit node THE and remove it from the graph.
Nodes with 0 in-degree: [BFW, CAD].
Visit node BFW and remove it from the graph.
Nodes with 0 in-degree: [CAD].
Visit node CAD and remove it from the graph.
Nodes with 0 in-degree: [LEO].
Visit node LEO and remove it from the graph.
Nodes with 0 in-degree: [AZV].
Visit node AZV and remove it from the graph.
Nodes with 0 in-degree: [SZB].
Visit node SZB and remove it from the graph.
So the result of topological sorting is ","('[[JNK, CAD, LEO, AZV, BFW, BBK, THE, SZB], [JNK, BBK, THE, BFW, CAD, LEO, AZV, SZB], [JNK, BBK, AZV, SZB, THE, BFW, CAD, LEO], [JNK, BBK, THE, BFW, LEO, SZB, CAD, AZV]]',)",1,160
topological_sort,"[(OFR, TBW), (OFR, DPY), (OFR, VWX), (OFR, YYR), (OFR, QVU), (OFR, BJH), (TBW, JUM), (DPY, JUM), (DPY, TBW), (VWX, JUM), (VWX, EIV), (YYR, JUM), (YYR, EIV), (QVU, DPY), (QVU, YYR), (QVU, VWX), (QVU, EIV), (BJH, YYR), (BJH, TNT), (BJH, VWX), (BJH, DPY), (BJH, TBW), (JUM, EIV), (JUM, TNT), (TNT, EIV), (GOH, VWX), (GOH, ESZ), (GOH, OFR), (GOH, DPY), (ESZ, TBW), (ESZ, YYR), (ESZ, BJH), (ESZ, EIV), (ESZ, OFR), (ESZ, JUM), (ESZ, QVU), (KUX, JUM), (KUX, TBW), (KUX, QVU), (KUX, GOH)]","{OFR: [TBW, DPY, VWX, YYR, QVU, BJH],
TBW: [JUM],
DPY: [JUM, TBW],
VWX: [JUM, EIV],
YYR: [JUM, EIV],
QVU: [DPY, YYR, VWX, EIV],
BJH: [YYR, TNT, VWX, DPY, TBW],
JUM: [EIV, TNT],
TNT: [EIV],
EIV: [],
GOH: [VWX, ESZ, OFR, DPY],
ESZ: [TBW, YYR, BJH, EIV, OFR, JUM, QVU],
KUX: [JUM, TBW, QVU, GOH]}","Node OFR is connected to nodes TBW, DPY, VWX, YYR, QVU, BJH.
Node TBW is connected to node JUM.
Node DPY is connected to nodes JUM, TBW.
Node VWX is connected to nodes JUM, EIV.
Node YYR is connected to nodes JUM, EIV.
Node QVU is connected to nodes DPY, YYR, VWX, EIV.
Node BJH is connected to nodes YYR, TNT, VWX, DPY, TBW.
Node JUM is connected to nodes EIV, TNT.
Node TNT is connected to node EIV.
Node GOH is connected to nodes VWX, ESZ, OFR, DPY.
Node ESZ is connected to nodes TBW, YYR, BJH, EIV, OFR, JUM, QVU.
Node KUX is connected to nodes JUM, TBW, QVU, GOH.","[TNT, JUM, TBW, DPY, ESZ, KUX, BJH, QVU, OFR, VWX, GOH, YYR, EIV]",13,40,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KUX, GOH, ESZ, OFR, QVU, BJH, YYR, VWX, DPY, TBW, JUM, TNT, EIV]","Let's solve it step by step.
Nodes with 0 in-degree: [KUX].
Visit node KUX and remove it from the graph.
Nodes with 0 in-degree: [GOH].
Visit node GOH and remove it from the graph.
Nodes with 0 in-degree: [ESZ].
Visit node ESZ and remove it from the graph.
Nodes with 0 in-degree: [OFR].
Visit node OFR and remove it from the graph.
Nodes with 0 in-degree: [QVU, BJH].
Visit node QVU and remove it from the graph.
Nodes with 0 in-degree: [BJH].
Visit node BJH and remove it from the graph.
Nodes with 0 in-degree: [YYR, VWX, DPY].
Visit node YYR and remove it from the graph.
Nodes with 0 in-degree: [VWX, DPY].
Visit node VWX and remove it from the graph.
Nodes with 0 in-degree: [DPY].
Visit node DPY and remove it from the graph.
Nodes with 0 in-degree: [TBW].
Visit node TBW and remove it from the graph.
Nodes with 0 in-degree: [JUM].
Visit node JUM and remove it from the graph.
Nodes with 0 in-degree: [TNT].
Visit node TNT and remove it from the graph.
Nodes with 0 in-degree: [EIV].
Visit node EIV and remove it from the graph.
So the result of topological sorting is ","('[[KUX, GOH, ESZ, OFR, QVU, BJH, TBW, VWX, JUM, EIV, YYR, TNT, DPY], [KUX, DPY, TNT, TBW, QVU, YYR, BJH, GOH, JUM, VWX, ESZ, OFR, EIV], [KUX, GOH, ESZ, OFR, TBW, JUM, TNT, EIV, QVU, BJH, YYR, VWX, DPY], [KUX, GOH, ESZ, OFR, QVU, BJH, YYR, VWX, DPY, TBW, JUM, TNT, EIV]]',)",3,161
topological_sort,"[(VBU, OAS), (VBU, QHT), (VBU, KCF), (VBU, BGJ), (VBU, RMD), (VBU, JKB), (VBU, WBZ), (OAS, IWK), (OAS, BGJ), (OAS, ZBM), (OAS, KCF), (OAS, CQD), (OAS, JKB), (OAS, KWU), (QHT, KWU), (KCF, QHT), (KCF, KWU), (KCF, JKB), (BGJ, ZBM), (BGJ, IWK), (BGJ, KCF), (BGJ, CQD), (BGJ, WBZ), (BGJ, KWU), (RMD, KCF), (RMD, JKB), (RMD, QHT), (RMD, OAS), (JKB, KWU), (WBZ, JKB), (WBZ, KCF), (WBZ, CQD), (WBZ, KWU), (IWK, KCF), (IWK, JKB), (ZBM, YIR), (ZBM, WBZ), (ZBM, KWU), (CQD, KCF), (YIR, WBZ), (PCR, YIR), (PCR, JKB), (PCR, KWU), (PCR, IWK), (PCR, VBU), (PCR, OAS)]","{VBU: [OAS, QHT, KCF, BGJ, RMD, JKB, WBZ],
OAS: [IWK, BGJ, ZBM, KCF, CQD, JKB, KWU],
QHT: [KWU],
KCF: [QHT, KWU, JKB],
BGJ: [ZBM, IWK, KCF, CQD, WBZ, KWU],
RMD: [KCF, JKB, QHT, OAS],
JKB: [KWU],
WBZ: [JKB, KCF, CQD, KWU],
IWK: [KCF, JKB],
ZBM: [YIR, WBZ, KWU],
CQD: [KCF],
KWU: [],
YIR: [WBZ],
PCR: [YIR, JKB, KWU, IWK, VBU, OAS]}","Node VBU is connected to nodes OAS, QHT, KCF, BGJ, RMD, JKB, WBZ.
Node OAS is connected to nodes IWK, BGJ, ZBM, KCF, CQD, JKB, KWU.
Node QHT is connected to node KWU.
Node KCF is connected to nodes QHT, KWU, JKB.
Node BGJ is connected to nodes ZBM, IWK, KCF, CQD, WBZ, KWU.
Node RMD is connected to nodes KCF, JKB, QHT, OAS.
Node JKB is connected to node KWU.
Node WBZ is connected to nodes JKB, KCF, CQD, KWU.
Node IWK is connected to nodes KCF, JKB.
Node ZBM is connected to nodes YIR, WBZ, KWU.
Node CQD is connected to node KCF.
Node YIR is connected to node WBZ.
Node PCR is connected to nodes YIR, JKB, KWU, IWK, VBU, OAS.","[BGJ, IWK, WBZ, KWU, KCF, VBU, ZBM, YIR, OAS, QHT, RMD, JKB, CQD, PCR]",14,46,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PCR, VBU, RMD, OAS, BGJ, ZBM, IWK, YIR, WBZ, CQD, KCF, QHT, JKB, KWU]","Let's solve it step by step.
Nodes with 0 in-degree: [PCR].
Visit node PCR and remove it from the graph.
Nodes with 0 in-degree: [VBU].
Visit node VBU and remove it from the graph.
Nodes with 0 in-degree: [RMD].
Visit node RMD and remove it from the graph.
Nodes with 0 in-degree: [OAS].
Visit node OAS and remove it from the graph.
Nodes with 0 in-degree: [BGJ].
Visit node BGJ and remove it from the graph.
Nodes with 0 in-degree: [ZBM, IWK].
Visit node ZBM and remove it from the graph.
Nodes with 0 in-degree: [IWK, YIR].
Visit node IWK and remove it from the graph.
Nodes with 0 in-degree: [YIR].
Visit node YIR and remove it from the graph.
Nodes with 0 in-degree: [WBZ].
Visit node WBZ and remove it from the graph.
Nodes with 0 in-degree: [CQD].
Visit node CQD and remove it from the graph.
Nodes with 0 in-degree: [KCF].
Visit node KCF and remove it from the graph.
Nodes with 0 in-degree: [QHT, JKB].
Visit node QHT and remove it from the graph.
Nodes with 0 in-degree: [JKB].
Visit node JKB and remove it from the graph.
Nodes with 0 in-degree: [KWU].
Visit node KWU and remove it from the graph.
So the result of topological sorting is ","('[[PCR, KWU, QHT, YIR, JKB, KCF, ZBM, VBU, IWK, WBZ, BGJ, OAS, CQD, RMD], [PCR, VBU, RMD, OAS, BGJ, ZBM, IWK, YIR, WBZ, CQD, KCF, QHT, JKB, KWU], [PCR, VBU, RMD, OAS, BGJ, ZBM, IWK, WBZ, YIR, QHT, CQD, JKB, KCF, KWU], [PCR, VBU, RMD, OAS, KCF, QHT, JKB, KWU, BGJ, ZBM, IWK, YIR, WBZ, CQD]]',)",1,162
topological_sort,"[(PXU, ICS), (ICS, UOZ), (UOZ, OTG), (UOZ, QRN), (OTG, VQP), (DFD, UOZ), (DFD, QRN), (TJC, PXU), (TJC, ICS), (TJC, UOZ)]","{PXU: [ICS],
ICS: [UOZ],
UOZ: [OTG, QRN],
OTG: [VQP],
VQP: [],
QRN: [],
DFD: [UOZ, QRN],
TJC: [PXU, ICS, UOZ]}","Node PXU is connected to node ICS.
Node ICS is connected to node UOZ.
Node UOZ is connected to nodes OTG, QRN.
Node OTG is connected to node VQP.
Node DFD is connected to nodes UOZ, QRN.
Node TJC is connected to nodes PXU, ICS, UOZ.","[PXU, UOZ, TJC, DFD, OTG, VQP, QRN, ICS]",8,10,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DFD, TJC, PXU, ICS, UOZ, OTG, QRN, VQP]","Let's solve it step by step.
Nodes with 0 in-degree: [DFD, TJC].
Visit node DFD and remove it from the graph.
Nodes with 0 in-degree: [TJC].
Visit node TJC and remove it from the graph.
Nodes with 0 in-degree: [PXU].
Visit node PXU and remove it from the graph.
Nodes with 0 in-degree: [ICS].
Visit node ICS and remove it from the graph.
Nodes with 0 in-degree: [UOZ].
Visit node UOZ and remove it from the graph.
Nodes with 0 in-degree: [OTG, QRN].
Visit node OTG and remove it from the graph.
Nodes with 0 in-degree: [QRN, VQP].
Visit node QRN and remove it from the graph.
Nodes with 0 in-degree: [VQP].
Visit node VQP and remove it from the graph.
So the result of topological sorting is ","('[[DFD, TJC, PXU, ICS, OTG, VQP, UOZ, QRN], [DFD, TJC, QRN, VQP, PXU, ICS, UOZ, OTG], [DFD, TJC, PXU, QRN, ICS, VQP, OTG, UOZ], [DFD, TJC, PXU, ICS, UOZ, OTG, QRN, VQP]]',)",3,163
topological_sort,"[(ZKC, HPH), (ZKC, HDK), (HPH, HDK), (DIH, ZKC), (TBD, YGB), (TBD, HDK), (TBD, YPV), (TBD, ZPG), (TBD, SGZ), (TBD, ZKC), (YGB, ZKC), (YGB, VJX), (YGB, HPH), (YGB, HDK), (YPV, ZKC), (YPV, HPH), (YPV, ZPG), (YPV, DIH), (ZPG, YGB), (ZPG, HDK), (ZPG, VJX), (SGZ, HDK), (SGZ, HPH), (SGZ, ZKC), (SGZ, ZPG), (SGZ, YPV), (SGZ, DIH), (VJX, DIH), (VJX, HDK), (VJX, ZKC)]","{ZKC: [HPH, HDK],
HPH: [HDK],
HDK: [],
DIH: [ZKC],
TBD: [YGB, HDK, YPV, ZPG, SGZ, ZKC],
YGB: [ZKC, VJX, HPH, HDK],
YPV: [ZKC, HPH, ZPG, DIH],
ZPG: [YGB, HDK, VJX],
SGZ: [HDK, HPH, ZKC, ZPG, YPV, DIH],
VJX: [DIH, HDK, ZKC]}","Node ZKC is connected to nodes HPH, HDK.
Node HPH is connected to node HDK.
Node DIH is connected to node ZKC.
Node TBD is connected to nodes YGB, HDK, YPV, ZPG, SGZ, ZKC.
Node YGB is connected to nodes ZKC, VJX, HPH, HDK.
Node YPV is connected to nodes ZKC, HPH, ZPG, DIH.
Node ZPG is connected to nodes YGB, HDK, VJX.
Node SGZ is connected to nodes HDK, HPH, ZKC, ZPG, YPV, DIH.
Node VJX is connected to nodes DIH, HDK, ZKC.","[HPH, TBD, DIH, ZKC, VJX, YPV, ZPG, YGB, SGZ, HDK]",10,30,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TBD, SGZ, YPV, ZPG, YGB, VJX, DIH, ZKC, HPH, HDK]","Let's solve it step by step.
Nodes with 0 in-degree: [TBD].
Visit node TBD and remove it from the graph.
Nodes with 0 in-degree: [SGZ].
Visit node SGZ and remove it from the graph.
Nodes with 0 in-degree: [YPV].
Visit node YPV and remove it from the graph.
Nodes with 0 in-degree: [ZPG].
Visit node ZPG and remove it from the graph.
Nodes with 0 in-degree: [YGB].
Visit node YGB and remove it from the graph.
Nodes with 0 in-degree: [VJX].
Visit node VJX and remove it from the graph.
Nodes with 0 in-degree: [DIH].
Visit node DIH and remove it from the graph.
Nodes with 0 in-degree: [ZKC].
Visit node ZKC and remove it from the graph.
Nodes with 0 in-degree: [HPH].
Visit node HPH and remove it from the graph.
Nodes with 0 in-degree: [HDK].
Visit node HDK and remove it from the graph.
So the result of topological sorting is ","('[[TBD, SGZ, YPV, ZKC, HPH, HDK, ZPG, YGB, VJX, DIH], [TBD, SGZ, YPV, ZPG, YGB, HDK, ZKC, HPH, VJX, DIH], [TBD, ZPG, SGZ, DIH, ZKC, YGB, YPV, VJX, HDK, HPH], [TBD, SGZ, YPV, ZPG, YGB, VJX, DIH, ZKC, HPH, HDK]]',)",3,164
topological_sort,"[(HUG, GHI), (HUG, BTX), (HUG, YUA), (HUG, EKF), (HUG, KRK), (GHI, BTX), (GHI, DDV), (GHI, EKF), (GHI, KRK), (YUA, GHI), (YUA, KRK), (EKF, KRK), (DDV, BTX), (DDV, EKF), (WLQ, HUG), (WLQ, GHI), (WLQ, YUA), (YCT, GHI), (YCT, WLQ), (YCT, BTX), (YCT, HUG), (MIJ, YUA), (MIJ, EKF)]","{HUG: [GHI, BTX, YUA, EKF, KRK],
GHI: [BTX, DDV, EKF, KRK],
BTX: [],
YUA: [GHI, KRK],
EKF: [KRK],
KRK: [],
DDV: [BTX, EKF],
WLQ: [HUG, GHI, YUA],
YCT: [GHI, WLQ, BTX, HUG],
MIJ: [YUA, EKF]}","Node HUG is connected to nodes GHI, BTX, YUA, EKF, KRK.
Node GHI is connected to nodes BTX, DDV, EKF, KRK.
Node YUA is connected to nodes GHI, KRK.
Node EKF is connected to node KRK.
Node DDV is connected to nodes BTX, EKF.
Node WLQ is connected to nodes HUG, GHI, YUA.
Node YCT is connected to nodes GHI, WLQ, BTX, HUG.
Node MIJ is connected to nodes YUA, EKF.","[WLQ, MIJ, EKF, GHI, HUG, BTX, YUA, YCT, KRK, DDV]",10,23,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YCT, MIJ, WLQ, HUG, YUA, GHI, DDV, BTX, EKF, KRK]","Let's solve it step by step.
Nodes with 0 in-degree: [YCT, MIJ].
Visit node YCT and remove it from the graph.
Nodes with 0 in-degree: [MIJ, WLQ].
Visit node MIJ and remove it from the graph.
Nodes with 0 in-degree: [WLQ].
Visit node WLQ and remove it from the graph.
Nodes with 0 in-degree: [HUG].
Visit node HUG and remove it from the graph.
Nodes with 0 in-degree: [YUA].
Visit node YUA and remove it from the graph.
Nodes with 0 in-degree: [GHI].
Visit node GHI and remove it from the graph.
Nodes with 0 in-degree: [DDV].
Visit node DDV and remove it from the graph.
Nodes with 0 in-degree: [BTX, EKF].
Visit node BTX and remove it from the graph.
Nodes with 0 in-degree: [EKF].
Visit node EKF and remove it from the graph.
Nodes with 0 in-degree: [KRK].
Visit node KRK and remove it from the graph.
So the result of topological sorting is ","('[[YCT, DDV, BTX, KRK, YUA, GHI, HUG, MIJ, EKF, WLQ], [YCT, MIJ, WLQ, HUG, YUA, KRK, DDV, BTX, EKF, GHI], [YCT, MIJ, WLQ, HUG, YUA, GHI, DDV, BTX, EKF, KRK], [YCT, MIJ, WLQ, BTX, EKF, KRK, HUG, YUA, GHI, DDV]]',)",2,165
topological_sort,"[(HDC, PQH), (HDC, ODD), (PQH, YEE), (PQH, ODD), (LIL, PRT), (PRT, PQH), (PRT, YEE), (PRT, MDA), (PRT, ODD), (MDA, ODD), (KOY, MDA), (KOY, ILS), (KOY, OKP), (ILS, LIL), (ILS, OXM), (ILS, ODD), (OKP, LIL), (GRH, OKP), (GRH, PQH), (GRH, ODD), (OXM, GRH), (OXM, LIL)]","{HDC: [PQH, ODD],
PQH: [YEE, ODD],
ODD: [],
YEE: [],
LIL: [PRT],
PRT: [PQH, YEE, MDA, ODD],
MDA: [ODD],
KOY: [MDA, ILS, OKP],
ILS: [LIL, OXM, ODD],
OKP: [LIL],
GRH: [OKP, PQH, ODD],
OXM: [GRH, LIL]}","Node HDC is connected to nodes PQH, ODD.
Node PQH is connected to nodes YEE, ODD.
Node LIL is connected to node PRT.
Node PRT is connected to nodes PQH, YEE, MDA, ODD.
Node MDA is connected to node ODD.
Node KOY is connected to nodes MDA, ILS, OKP.
Node ILS is connected to nodes LIL, OXM, ODD.
Node OKP is connected to node LIL.
Node GRH is connected to nodes OKP, PQH, ODD.
Node OXM is connected to nodes GRH, LIL.","[OXM, ODD, LIL, MDA, PRT, KOY, YEE, PQH, GRH, HDC, ILS, OKP]",12,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HDC, KOY, ILS, OXM, GRH, OKP, LIL, PRT, PQH, MDA, YEE, ODD]","Let's solve it step by step.
Nodes with 0 in-degree: [HDC, KOY].
Visit node HDC and remove it from the graph.
Nodes with 0 in-degree: [KOY].
Visit node KOY and remove it from the graph.
Nodes with 0 in-degree: [ILS].
Visit node ILS and remove it from the graph.
Nodes with 0 in-degree: [OXM].
Visit node OXM and remove it from the graph.
Nodes with 0 in-degree: [GRH].
Visit node GRH and remove it from the graph.
Nodes with 0 in-degree: [OKP].
Visit node OKP and remove it from the graph.
Nodes with 0 in-degree: [LIL].
Visit node LIL and remove it from the graph.
Nodes with 0 in-degree: [PRT].
Visit node PRT and remove it from the graph.
Nodes with 0 in-degree: [PQH, MDA].
Visit node PQH and remove it from the graph.
Nodes with 0 in-degree: [MDA, YEE].
Visit node MDA and remove it from the graph.
Nodes with 0 in-degree: [YEE, ODD].
Visit node YEE and remove it from the graph.
Nodes with 0 in-degree: [ODD].
Visit node ODD and remove it from the graph.
So the result of topological sorting is ","('[[HDC, KOY, ILS, OXM, PQH, MDA, YEE, ODD, GRH, OKP, LIL, PRT], [HDC, OKP, KOY, GRH, PQH, ODD, OXM, YEE, ILS, PRT, MDA, LIL], [HDC, KOY, ILS, OXM, GRH, OKP, LIL, PRT, PQH, MDA, YEE, ODD], [HDC, KOY, ILS, OXM, GRH, OKP, MDA, ODD, LIL, PRT, YEE, PQH]]',)",2,166
topological_sort,"[(QUB, UAG), (QUB, KAI), (QUB, FVS), (QUB, DHC), (QUB, KBG), (UAG, XJO), (KAI, XJO), (KAI, KBG), (KAI, DHC), (FVS, UAG), (DHC, UAG), (KBG, XJO), (KBG, FVS), (KBG, DHC), (SUM, KBG), (SUM, FVS), (SUM, XJO), (SUM, QUB), (SUM, UWI), (SUM, DHC), (SUM, UAG), (UWI, KBG), (UWI, XJO), (DAU, UWI), (DAU, FVS), (DAU, QUB), (DAU, DHC), (DAU, UAG), (DAU, XJO)]","{QUB: [UAG, KAI, FVS, DHC, KBG],
UAG: [XJO],
KAI: [XJO, KBG, DHC],
FVS: [UAG],
DHC: [UAG],
KBG: [XJO, FVS, DHC],
XJO: [],
SUM: [KBG, FVS, XJO, QUB, UWI, DHC, UAG],
UWI: [KBG, XJO],
DAU: [UWI, FVS, QUB, DHC, UAG, XJO]}","Node QUB is connected to nodes UAG, KAI, FVS, DHC, KBG.
Node UAG is connected to node XJO.
Node KAI is connected to nodes XJO, KBG, DHC.
Node FVS is connected to node UAG.
Node DHC is connected to node UAG.
Node KBG is connected to nodes XJO, FVS, DHC.
Node SUM is connected to nodes KBG, FVS, XJO, QUB, UWI, DHC, UAG.
Node UWI is connected to nodes KBG, XJO.
Node DAU is connected to nodes UWI, FVS, QUB, DHC, UAG, XJO.","[FVS, KAI, XJO, UWI, DAU, KBG, QUB, UAG, SUM, DHC]",10,29,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SUM, DAU, UWI, QUB, KAI, KBG, FVS, DHC, UAG, XJO]","Let's solve it step by step.
Nodes with 0 in-degree: [SUM, DAU].
Visit node SUM and remove it from the graph.
Nodes with 0 in-degree: [DAU].
Visit node DAU and remove it from the graph.
Nodes with 0 in-degree: [UWI, QUB].
Visit node UWI and remove it from the graph.
Nodes with 0 in-degree: [QUB].
Visit node QUB and remove it from the graph.
Nodes with 0 in-degree: [KAI].
Visit node KAI and remove it from the graph.
Nodes with 0 in-degree: [KBG].
Visit node KBG and remove it from the graph.
Nodes with 0 in-degree: [FVS, DHC].
Visit node FVS and remove it from the graph.
Nodes with 0 in-degree: [DHC].
Visit node DHC and remove it from the graph.
Nodes with 0 in-degree: [UAG].
Visit node UAG and remove it from the graph.
Nodes with 0 in-degree: [XJO].
Visit node XJO and remove it from the graph.
So the result of topological sorting is ","('[[SUM, DAU, UWI, DHC, UAG, XJO, QUB, KAI, KBG, FVS], [SUM, UAG, DAU, QUB, KAI, XJO, FVS, DHC, UWI, KBG], [SUM, DAU, UWI, QUB, KAI, KBG, FVS, DHC, UAG, XJO], [SUM, DAU, UWI, QUB, KAI, XJO, KBG, DHC, FVS, UAG]]',)",2,167
topological_sort,"[(UDE, AGJ), (UDE, ZNC), (UDE, ENW), (ZNC, ENW), (YUV, HWW), (YUV, TRG), (YUV, ONZ), (YUV, UDE), (HWW, ONZ), (TRG, HWW), (ONZ, ZNC), (ONZ, ENW), (SSM, ONZ), (SSM, UDE), (SSM, HWW), (SSM, ENW), (ICW, YUV), (ICW, GFX)]","{UDE: [AGJ, ZNC, ENW],
AGJ: [],
ZNC: [ENW],
ENW: [],
YUV: [HWW, TRG, ONZ, UDE],
HWW: [ONZ],
TRG: [HWW],
ONZ: [ZNC, ENW],
SSM: [ONZ, UDE, HWW, ENW],
ICW: [YUV, GFX],
GFX: []}","Node UDE is connected to nodes AGJ, ZNC, ENW.
Node ZNC is connected to node ENW.
Node YUV is connected to nodes HWW, TRG, ONZ, UDE.
Node HWW is connected to node ONZ.
Node TRG is connected to node HWW.
Node ONZ is connected to nodes ZNC, ENW.
Node SSM is connected to nodes ONZ, UDE, HWW, ENW.
Node ICW is connected to nodes YUV, GFX.","[ICW, ZNC, GFX, HWW, SSM, ONZ, AGJ, YUV, TRG, ENW, UDE]",11,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SSM, ICW, YUV, GFX, TRG, UDE, HWW, AGJ, ONZ, ZNC, ENW]","Let's solve it step by step.
Nodes with 0 in-degree: [SSM, ICW].
Visit node SSM and remove it from the graph.
Nodes with 0 in-degree: [ICW].
Visit node ICW and remove it from the graph.
Nodes with 0 in-degree: [YUV, GFX].
Visit node YUV and remove it from the graph.
Nodes with 0 in-degree: [GFX, TRG, UDE].
Visit node GFX and remove it from the graph.
Nodes with 0 in-degree: [TRG, UDE].
Visit node TRG and remove it from the graph.
Nodes with 0 in-degree: [UDE, HWW].
Visit node UDE and remove it from the graph.
Nodes with 0 in-degree: [HWW, AGJ].
Visit node HWW and remove it from the graph.
Nodes with 0 in-degree: [AGJ, ONZ].
Visit node AGJ and remove it from the graph.
Nodes with 0 in-degree: [ONZ].
Visit node ONZ and remove it from the graph.
Nodes with 0 in-degree: [ZNC].
Visit node ZNC and remove it from the graph.
Nodes with 0 in-degree: [ENW].
Visit node ENW and remove it from the graph.
So the result of topological sorting is ","('[[SSM, ICW, YUV, ONZ, ZNC, ENW, GFX, TRG, UDE, HWW, AGJ], [SSM, ICW, YUV, GFX, TRG, UDE, HWW, AGJ, ONZ, ZNC, ENW], [SSM, HWW, ICW, AGJ, TRG, ENW, GFX, UDE, ZNC, YUV, ONZ], [SSM, ICW, YUV, GFX, TRG, HWW, AGJ, ONZ, ZNC, UDE, ENW]]',)",1,168
topological_sort,"[(UDB, WPT), (UDB, YSA), (UDB, NZJ), (WPT, DHY), (WPT, NAF), (WPT, ARA), (WPT, SAY), (YSA, DHY), (YSA, SAY), (NZJ, DAA), (NZJ, NAF), (NZJ, DHY), (NAF, DHY), (NAF, DYY), (ARA, YSA), (ARA, NAF), (ARA, DAA), (ARA, DHY), (SAY, DAA), (SAY, NZJ), (SAY, NAF), (EKY, UDB), (EKY, DAA), (EKY, NZJ), (EKY, DYY), (EKY, WPT), (DAA, DHY), (DAA, DYY), (CQS, DAA), (CQS, UKS), (CQS, ARA), (CQS, WPT), (UKS, ARA), (NJX, SAY), (NJX, WPT), (NJX, UKS)]","{UDB: [WPT, YSA, NZJ],
WPT: [DHY, NAF, ARA, SAY],
YSA: [DHY, SAY],
NZJ: [DAA, NAF, DHY],
DHY: [],
NAF: [DHY, DYY],
ARA: [YSA, NAF, DAA, DHY],
SAY: [DAA, NZJ, NAF],
EKY: [UDB, DAA, NZJ, DYY, WPT],
DAA: [DHY, DYY],
DYY: [],
CQS: [DAA, UKS, ARA, WPT],
UKS: [ARA],
NJX: [SAY, WPT, UKS]}","Node UDB is connected to nodes WPT, YSA, NZJ.
Node WPT is connected to nodes DHY, NAF, ARA, SAY.
Node YSA is connected to nodes DHY, SAY.
Node NZJ is connected to nodes DAA, NAF, DHY.
Node NAF is connected to nodes DHY, DYY.
Node ARA is connected to nodes YSA, NAF, DAA, DHY.
Node SAY is connected to nodes DAA, NZJ, NAF.
Node EKY is connected to nodes UDB, DAA, NZJ, DYY, WPT.
Node DAA is connected to nodes DHY, DYY.
Node CQS is connected to nodes DAA, UKS, ARA, WPT.
Node UKS is connected to node ARA.
Node NJX is connected to nodes SAY, WPT, UKS.","[ARA, YSA, DYY, NJX, SAY, UKS, DHY, WPT, NZJ, DAA, CQS, EKY, NAF, UDB]",14,36,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EKY, CQS, NJX, UDB, UKS, WPT, ARA, YSA, SAY, NZJ, DAA, NAF, DHY, DYY]","Let's solve it step by step.
Nodes with 0 in-degree: [EKY, CQS, NJX].
Visit node EKY and remove it from the graph.
Nodes with 0 in-degree: [CQS, NJX, UDB].
Visit node CQS and remove it from the graph.
Nodes with 0 in-degree: [NJX, UDB].
Visit node NJX and remove it from the graph.
Nodes with 0 in-degree: [UDB, UKS].
Visit node UDB and remove it from the graph.
Nodes with 0 in-degree: [UKS, WPT].
Visit node UKS and remove it from the graph.
Nodes with 0 in-degree: [WPT].
Visit node WPT and remove it from the graph.
Nodes with 0 in-degree: [ARA].
Visit node ARA and remove it from the graph.
Nodes with 0 in-degree: [YSA].
Visit node YSA and remove it from the graph.
Nodes with 0 in-degree: [SAY].
Visit node SAY and remove it from the graph.
Nodes with 0 in-degree: [NZJ].
Visit node NZJ and remove it from the graph.
Nodes with 0 in-degree: [DAA, NAF].
Visit node DAA and remove it from the graph.
Nodes with 0 in-degree: [NAF].
Visit node NAF and remove it from the graph.
Nodes with 0 in-degree: [DHY, DYY].
Visit node DHY and remove it from the graph.
Nodes with 0 in-degree: [DYY].
Visit node DYY and remove it from the graph.
So the result of topological sorting is ","('[[EKY, CQS, NJX, UDB, DAA, NAF, DHY, DYY, UKS, WPT, ARA, YSA, SAY, NZJ], [EKY, CQS, NJX, UDB, UKS, WPT, ARA, YSA, SAY, NZJ, DAA, NAF, DHY, DYY], [EKY, CQS, NJX, UDB, UKS, WPT, ARA, YSA, DYY, NZJ, SAY, NAF, DAA, DHY], [EKY, YSA, UKS, SAY, WPT, NZJ, UDB, ARA, DHY, DAA, NAF, NJX, DYY, CQS]]',)",1,169
topological_sort,"[(YEQ, XUY), (YEQ, FSF), (XUY, FSF), (FSF, DWH), (FSF, FCN), (DWH, FCN), (QRV, LXR), (LXR, YZL), (YZL, XUY)]","{YEQ: [XUY, FSF],
XUY: [FSF],
FSF: [DWH, FCN],
DWH: [FCN],
FCN: [],
QRV: [LXR],
LXR: [YZL],
YZL: [XUY]}","Node YEQ is connected to nodes XUY, FSF.
Node XUY is connected to node FSF.
Node FSF is connected to nodes DWH, FCN.
Node DWH is connected to node FCN.
Node QRV is connected to node LXR.
Node LXR is connected to node YZL.
Node YZL is connected to node XUY.","[FCN, YZL, QRV, XUY, DWH, FSF, LXR, YEQ]",8,9,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YEQ, QRV, LXR, YZL, XUY, FSF, DWH, FCN]","Let's solve it step by step.
Nodes with 0 in-degree: [YEQ, QRV].
Visit node YEQ and remove it from the graph.
Nodes with 0 in-degree: [QRV].
Visit node QRV and remove it from the graph.
Nodes with 0 in-degree: [LXR].
Visit node LXR and remove it from the graph.
Nodes with 0 in-degree: [YZL].
Visit node YZL and remove it from the graph.
Nodes with 0 in-degree: [XUY].
Visit node XUY and remove it from the graph.
Nodes with 0 in-degree: [FSF].
Visit node FSF and remove it from the graph.
Nodes with 0 in-degree: [DWH].
Visit node DWH and remove it from the graph.
Nodes with 0 in-degree: [FCN].
Visit node FCN and remove it from the graph.
So the result of topological sorting is ","('[[YEQ, QRV, LXR, YZL, XUY, FSF, DWH, FCN], [YEQ, QRV, DWH, FCN, LXR, YZL, XUY, FSF], [YEQ, XUY, DWH, FCN, LXR, FSF, QRV, YZL], [YEQ, QRV, LXR, YZL, XUY, DWH, FSF, FCN]]',)",0,170
topological_sort,"[(OTV, NWJ), (OTV, JZT), (OTV, ALI), (OTV, UQP), (JZT, WGN), (JZT, MEM), (JZT, CMZ), (ALI, MEM), (ALI, UQP), (ALI, UJL), (ALI, CMZ), (ALI, ATT), (UQP, UJL), (UQP, ATT), (UQP, JZT), (MEM, CMZ), (MEM, WGN), (MEM, NWJ), (CMZ, UJL), (CMZ, NWJ), (ATT, CMZ), (WGN, CMZ), (WGN, ATT), (WGN, NWJ), (ZAV, MEM), (ZAV, WGN), (ZAV, ALI), (ZAV, CMZ), (ZAV, NWJ), (ZAV, UQP), (ZAV, JZT)]","{OTV: [NWJ, JZT, ALI, UQP],
NWJ: [],
JZT: [WGN, MEM, CMZ],
ALI: [MEM, UQP, UJL, CMZ, ATT],
UQP: [UJL, ATT, JZT],
MEM: [CMZ, WGN, NWJ],
UJL: [],
CMZ: [UJL, NWJ],
ATT: [CMZ],
WGN: [CMZ, ATT, NWJ],
ZAV: [MEM, WGN, ALI, CMZ, NWJ, UQP, JZT]}","Node OTV is connected to nodes NWJ, JZT, ALI, UQP.
Node JZT is connected to nodes WGN, MEM, CMZ.
Node ALI is connected to nodes MEM, UQP, UJL, CMZ, ATT.
Node UQP is connected to nodes UJL, ATT, JZT.
Node MEM is connected to nodes CMZ, WGN, NWJ.
Node CMZ is connected to nodes UJL, NWJ.
Node ATT is connected to node CMZ.
Node WGN is connected to nodes CMZ, ATT, NWJ.
Node ZAV is connected to nodes MEM, WGN, ALI, CMZ, NWJ, UQP, JZT.","[MEM, ATT, NWJ, UJL, JZT, UQP, OTV, WGN, ALI, ZAV, CMZ]",11,31,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OTV, ZAV, ALI, UQP, JZT, MEM, WGN, ATT, CMZ, UJL, NWJ]","Let's solve it step by step.
Nodes with 0 in-degree: [OTV, ZAV].
Visit node OTV and remove it from the graph.
Nodes with 0 in-degree: [ZAV].
Visit node ZAV and remove it from the graph.
Nodes with 0 in-degree: [ALI].
Visit node ALI and remove it from the graph.
Nodes with 0 in-degree: [UQP].
Visit node UQP and remove it from the graph.
Nodes with 0 in-degree: [JZT].
Visit node JZT and remove it from the graph.
Nodes with 0 in-degree: [MEM].
Visit node MEM and remove it from the graph.
Nodes with 0 in-degree: [WGN].
Visit node WGN and remove it from the graph.
Nodes with 0 in-degree: [ATT].
Visit node ATT and remove it from the graph.
Nodes with 0 in-degree: [CMZ].
Visit node CMZ and remove it from the graph.
Nodes with 0 in-degree: [UJL, NWJ].
Visit node UJL and remove it from the graph.
Nodes with 0 in-degree: [NWJ].
Visit node NWJ and remove it from the graph.
So the result of topological sorting is ","('[[OTV, ZAV, ALI, UQP, JZT, MEM, WGN, ATT, CMZ, UJL, NWJ], [OTV, WGN, MEM, ZAV, NWJ, ALI, CMZ, UQP, JZT, ATT, UJL], [OTV, ZAV, ALI, UQP, JZT, UJL, CMZ, ATT, MEM, NWJ, WGN], [OTV, ZAV, ALI, CMZ, UJL, NWJ, UQP, JZT, MEM, WGN, ATT]]',)",0,171
topological_sort,"[(HVV, IEU), (HVV, TFA), (HVV, RIX), (HVV, SPG), (HVV, UOB), (IEU, UOB), (IEU, SPG), (IEU, UDP), (IEU, RBV), (SPG, LLW), (SPG, UDP), (SPG, UOB), (UOB, TFA), (UOB, RBV), (UDP, RIX), (UDP, IMK), (LLW, UOB), (LLW, RBV), (LLW, UDP), (IMK, UOB), (IMK, RBV), (XSZ, UOB), (XSZ, HVV), (XSZ, SPG), (XSZ, RIX), (YGW, IMK), (YGW, LLW), (YGW, SPG)]","{HVV: [IEU, TFA, RIX, SPG, UOB],
IEU: [UOB, SPG, UDP, RBV],
TFA: [],
RIX: [],
SPG: [LLW, UDP, UOB],
UOB: [TFA, RBV],
UDP: [RIX, IMK],
RBV: [],
LLW: [UOB, RBV, UDP],
IMK: [UOB, RBV],
XSZ: [UOB, HVV, SPG, RIX],
YGW: [IMK, LLW, SPG]}","Node HVV is connected to nodes IEU, TFA, RIX, SPG, UOB.
Node IEU is connected to nodes UOB, SPG, UDP, RBV.
Node SPG is connected to nodes LLW, UDP, UOB.
Node UOB is connected to nodes TFA, RBV.
Node UDP is connected to nodes RIX, IMK.
Node LLW is connected to nodes UOB, RBV, UDP.
Node IMK is connected to nodes UOB, RBV.
Node XSZ is connected to nodes UOB, HVV, SPG, RIX.
Node YGW is connected to nodes IMK, LLW, SPG.","[TFA, UDP, XSZ, YGW, LLW, HVV, SPG, IEU, UOB, IMK, RIX, RBV]",12,28,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XSZ, YGW, HVV, IEU, SPG, LLW, UDP, RIX, IMK, UOB, TFA, RBV]","Let's solve it step by step.
Nodes with 0 in-degree: [XSZ, YGW].
Visit node XSZ and remove it from the graph.
Nodes with 0 in-degree: [YGW, HVV].
Visit node YGW and remove it from the graph.
Nodes with 0 in-degree: [HVV].
Visit node HVV and remove it from the graph.
Nodes with 0 in-degree: [IEU].
Visit node IEU and remove it from the graph.
Nodes with 0 in-degree: [SPG].
Visit node SPG and remove it from the graph.
Nodes with 0 in-degree: [LLW].
Visit node LLW and remove it from the graph.
Nodes with 0 in-degree: [UDP].
Visit node UDP and remove it from the graph.
Nodes with 0 in-degree: [RIX, IMK].
Visit node RIX and remove it from the graph.
Nodes with 0 in-degree: [IMK].
Visit node IMK and remove it from the graph.
Nodes with 0 in-degree: [UOB].
Visit node UOB and remove it from the graph.
Nodes with 0 in-degree: [TFA, RBV].
Visit node TFA and remove it from the graph.
Nodes with 0 in-degree: [RBV].
Visit node RBV and remove it from the graph.
So the result of topological sorting is ","('[[XSZ, YGW, HVV, IEU, IMK, UOB, TFA, RBV, SPG, LLW, UDP, RIX], [XSZ, YGW, HVV, IEU, SPG, LLW, UDP, RIX, IMK, UOB, TFA, RBV], [XSZ, HVV, UOB, TFA, RBV, UDP, LLW, RIX, YGW, IMK, SPG, IEU], [XSZ, YGW, HVV, IEU, SPG, LLW, RIX, TFA, RBV, IMK, UDP, UOB]]',)",1,172
topological_sort,"[(BET, QNF), (BET, QWQ), (BET, FUC), (BET, DGY), (BET, SXX), (QNF, SXX), (QNF, DGY), (QNF, PNN), (QWQ, QNF), (QWQ, YKP), (FUC, SXX), (DGY, FPW), (DGY, SXX), (TFN, UYO), (TFN, QNF), (LJH, QNF), (LJH, FUC), (YKP, UYO), (EOK, FUC), (TUG, QWQ), (APM, DGY)]","{BET: [QNF, QWQ, FUC, DGY, SXX],
QNF: [SXX, DGY, PNN],
QWQ: [QNF, YKP],
FUC: [SXX],
DGY: [FPW, SXX],
SXX: [],
PNN: [],
TFN: [UYO, QNF],
UYO: [],
LJH: [QNF, FUC],
YKP: [UYO],
FPW: [],
EOK: [FUC],
TUG: [QWQ],
APM: [DGY]}","Node BET is connected to nodes QNF, QWQ, FUC, DGY, SXX.
Node QNF is connected to nodes SXX, DGY, PNN.
Node QWQ is connected to nodes QNF, YKP.
Node FUC is connected to node SXX.
Node DGY is connected to nodes FPW, SXX.
Node TFN is connected to nodes UYO, QNF.
Node LJH is connected to nodes QNF, FUC.
Node YKP is connected to node UYO.
Node EOK is connected to node FUC.
Node TUG is connected to node QWQ.
Node APM is connected to node DGY.","[QWQ, DGY, UYO, FUC, YKP, SXX, QNF, EOK, TUG, LJH, FPW, PNN, APM, BET, TFN]",15,21,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BET, TFN, LJH, EOK, TUG, APM, FUC, QWQ, QNF, YKP, DGY, PNN, UYO, FPW, SXX]","Let's solve it step by step.
Nodes with 0 in-degree: [BET, TFN, LJH, EOK, TUG, APM].
Visit node BET and remove it from the graph.
Nodes with 0 in-degree: [TFN, LJH, EOK, TUG, APM].
Visit node TFN and remove it from the graph.
Nodes with 0 in-degree: [LJH, EOK, TUG, APM].
Visit node LJH and remove it from the graph.
Nodes with 0 in-degree: [EOK, TUG, APM].
Visit node EOK and remove it from the graph.
Nodes with 0 in-degree: [TUG, APM, FUC].
Visit node TUG and remove it from the graph.
Nodes with 0 in-degree: [APM, FUC, QWQ].
Visit node APM and remove it from the graph.
Nodes with 0 in-degree: [FUC, QWQ].
Visit node FUC and remove it from the graph.
Nodes with 0 in-degree: [QWQ].
Visit node QWQ and remove it from the graph.
Nodes with 0 in-degree: [QNF, YKP].
Visit node QNF and remove it from the graph.
Nodes with 0 in-degree: [YKP, DGY, PNN].
Visit node YKP and remove it from the graph.
Nodes with 0 in-degree: [DGY, PNN, UYO].
Visit node DGY and remove it from the graph.
Nodes with 0 in-degree: [PNN, UYO, FPW, SXX].
Visit node PNN and remove it from the graph.
Nodes with 0 in-degree: [UYO, FPW, SXX].
Visit node UYO and remove it from the graph.
Nodes with 0 in-degree: [FPW, SXX].
Visit node FPW and remove it from the graph.
Nodes with 0 in-degree: [SXX].
Visit node SXX and remove it from the graph.
So the result of topological sorting is ","('[[BET, TFN, LJH, EOK, TUG, APM, FUC, QNF, SXX, YKP, PNN, QWQ, UYO, FPW, DGY], [BET, APM, DGY, SXX, TUG, UYO, LJH, FPW, EOK, TFN, FUC, PNN, QNF, QWQ, YKP], [BET, TFN, LJH, EOK, TUG, APM, FUC, QWQ, QNF, YKP, DGY, PNN, UYO, FPW, SXX], [BET, TFN, LJH, EOK, TUG, DGY, PNN, UYO, FPW, SXX, APM, FUC, QWQ, QNF, YKP]]',)",2,173
topological_sort,"[(RKX, XYC), (FFF, GEC), (FFF, OZR), (GEC, OOV), (GEC, HUX), (GEC, BUX), (OZR, XYC), (OZR, RKX), (OOV, YTM), (OOV, BUX), (OOV, XYC), (HUX, RKX), (BUX, HUX), (BUX, YTM), (YTM, SRV), (YTM, OZR), (YTM, XYC), (SRV, HUX), (SRV, OZR), (MFC, HUX), (MFC, FFF), (MFC, GEC), (MFC, RKX)]","{RKX: [XYC],
XYC: [],
FFF: [GEC, OZR],
GEC: [OOV, HUX, BUX],
OZR: [XYC, RKX],
OOV: [YTM, BUX, XYC],
HUX: [RKX],
BUX: [HUX, YTM],
YTM: [SRV, OZR, XYC],
SRV: [HUX, OZR],
MFC: [HUX, FFF, GEC, RKX]}","Node RKX is connected to node XYC.
Node FFF is connected to nodes GEC, OZR.
Node GEC is connected to nodes OOV, HUX, BUX.
Node OZR is connected to nodes XYC, RKX.
Node OOV is connected to nodes YTM, BUX, XYC.
Node HUX is connected to node RKX.
Node BUX is connected to nodes HUX, YTM.
Node YTM is connected to nodes SRV, OZR, XYC.
Node SRV is connected to nodes HUX, OZR.
Node MFC is connected to nodes HUX, FFF, GEC, RKX.","[GEC, BUX, YTM, OOV, MFC, RKX, SRV, FFF, HUX, XYC, OZR]",11,23,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MFC, FFF, GEC, OOV, BUX, YTM, SRV, HUX, OZR, RKX, XYC]","Let's solve it step by step.
Nodes with 0 in-degree: [MFC].
Visit node MFC and remove it from the graph.
Nodes with 0 in-degree: [FFF].
Visit node FFF and remove it from the graph.
Nodes with 0 in-degree: [GEC].
Visit node GEC and remove it from the graph.
Nodes with 0 in-degree: [OOV].
Visit node OOV and remove it from the graph.
Nodes with 0 in-degree: [BUX].
Visit node BUX and remove it from the graph.
Nodes with 0 in-degree: [YTM].
Visit node YTM and remove it from the graph.
Nodes with 0 in-degree: [SRV].
Visit node SRV and remove it from the graph.
Nodes with 0 in-degree: [HUX, OZR].
Visit node HUX and remove it from the graph.
Nodes with 0 in-degree: [OZR].
Visit node OZR and remove it from the graph.
Nodes with 0 in-degree: [RKX].
Visit node RKX and remove it from the graph.
Nodes with 0 in-degree: [XYC].
Visit node XYC and remove it from the graph.
So the result of topological sorting is ","('[[MFC, FFF, GEC, OZR, RKX, XYC, OOV, BUX, YTM, SRV, HUX], [MFC, HUX, GEC, OZR, FFF, OOV, XYC, BUX, RKX, YTM, SRV], [MFC, FFF, GEC, OOV, BUX, OZR, XYC, HUX, SRV, YTM, RKX], [MFC, FFF, GEC, OOV, BUX, YTM, SRV, HUX, OZR, RKX, XYC]]',)",3,174
topological_sort,"[(MRD, IDX), (MRD, CAV), (MRD, AJV), (MRD, VLQ), (IDX, FNB), (CAV, IDX), (CAV, AJV), (AJV, VLQ), (AJV, IDX), (FNB, VLQ), (SAN, MRD), (SAN, MPN), (SAN, CAV), (SAN, VLQ), (MPN, CAV)]","{MRD: [IDX, CAV, AJV, VLQ],
IDX: [FNB],
CAV: [IDX, AJV],
AJV: [VLQ, IDX],
VLQ: [],
FNB: [VLQ],
SAN: [MRD, MPN, CAV, VLQ],
MPN: [CAV]}","Node MRD is connected to nodes IDX, CAV, AJV, VLQ.
Node IDX is connected to node FNB.
Node CAV is connected to nodes IDX, AJV.
Node AJV is connected to nodes VLQ, IDX.
Node FNB is connected to node VLQ.
Node SAN is connected to nodes MRD, MPN, CAV, VLQ.
Node MPN is connected to node CAV.","[VLQ, MPN, AJV, SAN, IDX, FNB, MRD, CAV]",8,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SAN, MRD, MPN, CAV, AJV, IDX, FNB, VLQ]","Let's solve it step by step.
Nodes with 0 in-degree: [SAN].
Visit node SAN and remove it from the graph.
Nodes with 0 in-degree: [MRD, MPN].
Visit node MRD and remove it from the graph.
Nodes with 0 in-degree: [MPN].
Visit node MPN and remove it from the graph.
Nodes with 0 in-degree: [CAV].
Visit node CAV and remove it from the graph.
Nodes with 0 in-degree: [AJV].
Visit node AJV and remove it from the graph.
Nodes with 0 in-degree: [IDX].
Visit node IDX and remove it from the graph.
Nodes with 0 in-degree: [FNB].
Visit node FNB and remove it from the graph.
Nodes with 0 in-degree: [VLQ].
Visit node VLQ and remove it from the graph.
So the result of topological sorting is ","('[[SAN, MRD, FNB, VLQ, MPN, CAV, AJV, IDX], [SAN, MRD, MPN, CAV, FNB, VLQ, IDX, AJV], [SAN, VLQ, AJV, MPN, IDX, MRD, FNB, CAV], [SAN, MRD, MPN, CAV, AJV, IDX, FNB, VLQ]]',)",3,175
topological_sort,"[(XEM, GVH), (XEM, HLJ), (HLJ, GVH), (EHW, XEM), (EHW, FAD), (EHW, HLJ), (FAD, CHW), (BIY, EHW), (BIY, GVH), (CHW, HLJ), (CHW, GVH), (HGZ, HLJ), (HGZ, EHW)]","{XEM: [GVH, HLJ],
GVH: [],
HLJ: [GVH],
EHW: [XEM, FAD, HLJ],
FAD: [CHW],
BIY: [EHW, GVH],
CHW: [HLJ, GVH],
HGZ: [HLJ, EHW]}","Node XEM is connected to nodes GVH, HLJ.
Node HLJ is connected to node GVH.
Node EHW is connected to nodes XEM, FAD, HLJ.
Node FAD is connected to node CHW.
Node BIY is connected to nodes EHW, GVH.
Node CHW is connected to nodes HLJ, GVH.
Node HGZ is connected to nodes HLJ, EHW.","[HLJ, EHW, XEM, HGZ, GVH, CHW, BIY, FAD]",8,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BIY, HGZ, EHW, XEM, FAD, CHW, HLJ, GVH]","Let's solve it step by step.
Nodes with 0 in-degree: [BIY, HGZ].
Visit node BIY and remove it from the graph.
Nodes with 0 in-degree: [HGZ].
Visit node HGZ and remove it from the graph.
Nodes with 0 in-degree: [EHW].
Visit node EHW and remove it from the graph.
Nodes with 0 in-degree: [XEM, FAD].
Visit node XEM and remove it from the graph.
Nodes with 0 in-degree: [FAD].
Visit node FAD and remove it from the graph.
Nodes with 0 in-degree: [CHW].
Visit node CHW and remove it from the graph.
Nodes with 0 in-degree: [HLJ].
Visit node HLJ and remove it from the graph.
Nodes with 0 in-degree: [GVH].
Visit node GVH and remove it from the graph.
So the result of topological sorting is ","('[[BIY, HGZ, EHW, XEM, FAD, CHW, HLJ, GVH], [BIY, HGZ, EHW, XEM, FAD, HLJ, CHW, GVH], [BIY, HLJ, EHW, HGZ, XEM, GVH, CHW, FAD], [BIY, HGZ, HLJ, GVH, EHW, XEM, FAD, CHW]]',)",0,176
topological_sort,"[(ZGS, WTV), (WTV, KRJ), (WTV, GAH), (KRJ, DNG), (KRJ, KWJ), (GAH, KRJ), (VDV, WTV), (XGU, VDV), (XGU, KRJ), (XGU, SVS), (CMV, GAH), (DNG, SZV), (YTH, WTV), (YTH, SVS), (YTH, GAH), (YTH, KWJ), (YTH, ZGS), (IJK, GAH), (IJK, KWJ)]","{ZGS: [WTV],
WTV: [KRJ, GAH],
KRJ: [DNG, KWJ],
GAH: [KRJ],
VDV: [WTV],
XGU: [VDV, KRJ, SVS],
SVS: [],
CMV: [GAH],
DNG: [SZV],
KWJ: [],
YTH: [WTV, SVS, GAH, KWJ, ZGS],
SZV: [],
IJK: [GAH, KWJ]}","Node ZGS is connected to node WTV.
Node WTV is connected to nodes KRJ, GAH.
Node KRJ is connected to nodes DNG, KWJ.
Node GAH is connected to node KRJ.
Node VDV is connected to node WTV.
Node XGU is connected to nodes VDV, KRJ, SVS.
Node CMV is connected to node GAH.
Node DNG is connected to node SZV.
Node YTH is connected to nodes WTV, SVS, GAH, KWJ, ZGS.
Node IJK is connected to nodes GAH, KWJ.","[XGU, ZGS, VDV, KWJ, DNG, WTV, YTH, SZV, KRJ, IJK, CMV, GAH, SVS]",13,19,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XGU, CMV, YTH, IJK, VDV, SVS, ZGS, WTV, GAH, KRJ, DNG, KWJ, SZV]","Let's solve it step by step.
Nodes with 0 in-degree: [XGU, CMV, YTH, IJK].
Visit node XGU and remove it from the graph.
Nodes with 0 in-degree: [CMV, YTH, IJK, VDV].
Visit node CMV and remove it from the graph.
Nodes with 0 in-degree: [YTH, IJK, VDV].
Visit node YTH and remove it from the graph.
Nodes with 0 in-degree: [IJK, VDV, SVS, ZGS].
Visit node IJK and remove it from the graph.
Nodes with 0 in-degree: [VDV, SVS, ZGS].
Visit node VDV and remove it from the graph.
Nodes with 0 in-degree: [SVS, ZGS].
Visit node SVS and remove it from the graph.
Nodes with 0 in-degree: [ZGS].
Visit node ZGS and remove it from the graph.
Nodes with 0 in-degree: [WTV].
Visit node WTV and remove it from the graph.
Nodes with 0 in-degree: [GAH].
Visit node GAH and remove it from the graph.
Nodes with 0 in-degree: [KRJ].
Visit node KRJ and remove it from the graph.
Nodes with 0 in-degree: [DNG, KWJ].
Visit node DNG and remove it from the graph.
Nodes with 0 in-degree: [KWJ, SZV].
Visit node KWJ and remove it from the graph.
Nodes with 0 in-degree: [SZV].
Visit node SZV and remove it from the graph.
So the result of topological sorting is ","('[[XGU, CMV, YTH, IJK, KRJ, DNG, KWJ, SZV, VDV, SVS, ZGS, WTV, GAH], [XGU, VDV, KRJ, KWJ, SVS, CMV, SZV, IJK, GAH, ZGS, DNG, WTV, YTH], [XGU, CMV, YTH, IJK, VDV, SVS, GAH, WTV, KRJ, KWJ, DNG, SZV, ZGS], [XGU, CMV, YTH, IJK, VDV, SVS, ZGS, WTV, GAH, KRJ, DNG, KWJ, SZV]]',)",3,177
topological_sort,"[(BKO, NIX), (BKO, CAJ), (BKO, TBZ), (BKO, HQN), (BKO, XBC), (BKO, SQY), (BKO, BIQ), (NIX, CAJ), (NIX, TBZ), (NIX, XBC), (CAJ, BIQ), (TBZ, CAJ), (TBZ, HQN), (TBZ, SQY), (TBZ, XBC), (HQN, CAJ), (HQN, BIQ), (XBC, CAJ), (XBC, HQN), (SQY, HQN), (SQY, XBC)]","{BKO: [NIX, CAJ, TBZ, HQN, XBC, SQY, BIQ],
NIX: [CAJ, TBZ, XBC],
CAJ: [BIQ],
TBZ: [CAJ, HQN, SQY, XBC],
HQN: [CAJ, BIQ],
XBC: [CAJ, HQN],
SQY: [HQN, XBC],
BIQ: []}","Node BKO is connected to nodes NIX, CAJ, TBZ, HQN, XBC, SQY, BIQ.
Node NIX is connected to nodes CAJ, TBZ, XBC.
Node CAJ is connected to node BIQ.
Node TBZ is connected to nodes CAJ, HQN, SQY, XBC.
Node HQN is connected to nodes CAJ, BIQ.
Node XBC is connected to nodes CAJ, HQN.
Node SQY is connected to nodes HQN, XBC.","[BIQ, NIX, XBC, TBZ, HQN, CAJ, SQY, BKO]",8,21,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BKO, NIX, TBZ, SQY, XBC, HQN, CAJ, BIQ]","Let's solve it step by step.
Nodes with 0 in-degree: [BKO].
Visit node BKO and remove it from the graph.
Nodes with 0 in-degree: [NIX].
Visit node NIX and remove it from the graph.
Nodes with 0 in-degree: [TBZ].
Visit node TBZ and remove it from the graph.
Nodes with 0 in-degree: [SQY].
Visit node SQY and remove it from the graph.
Nodes with 0 in-degree: [XBC].
Visit node XBC and remove it from the graph.
Nodes with 0 in-degree: [HQN].
Visit node HQN and remove it from the graph.
Nodes with 0 in-degree: [CAJ].
Visit node CAJ and remove it from the graph.
Nodes with 0 in-degree: [BIQ].
Visit node BIQ and remove it from the graph.
So the result of topological sorting is ","('[[BKO, NIX, TBZ, SQY, XBC, HQN, CAJ, BIQ], [BKO, NIX, CAJ, BIQ, TBZ, SQY, XBC, HQN], [BKO, SQY, NIX, HQN, BIQ, XBC, TBZ, CAJ], [BKO, NIX, TBZ, SQY, BIQ, HQN, XBC, CAJ]]',)",0,178
topological_sort,"[(ECE, KCC), (ECE, JOL), (ECE, BEP), (ECE, NIS), (KCC, VYT), (KCC, BEP), (KCC, CXI), (BEP, NIS), (BEP, VUN), (BEP, CXI), (BEP, WGC), (NIS, WGC), (NIS, JOL), (VYT, VUN), (CXI, JOL), (RDZ, VYT), (RDZ, ECE), (RDZ, WGC), (RDZ, VUN), (RDZ, BEP), (RDZ, CXI), (RDZ, JOL), (RDZ, NIS), (RDZ, UDX), (WGC, JOL), (WGC, CXI), (VUN, WGC), (VUN, NIS), (UDX, NIS), (UDX, WGC), (UDX, ECE), (UDX, BEP), (UDX, JOL), (UDX, VYT)]","{ECE: [KCC, JOL, BEP, NIS],
KCC: [VYT, BEP, CXI],
JOL: [],
BEP: [NIS, VUN, CXI, WGC],
NIS: [WGC, JOL],
VYT: [VUN],
CXI: [JOL],
RDZ: [VYT, ECE, WGC, VUN, BEP, CXI, JOL, NIS, UDX],
WGC: [JOL, CXI],
VUN: [WGC, NIS],
UDX: [NIS, WGC, ECE, BEP, JOL, VYT]}","Node ECE is connected to nodes KCC, JOL, BEP, NIS.
Node KCC is connected to nodes VYT, BEP, CXI.
Node BEP is connected to nodes NIS, VUN, CXI, WGC.
Node NIS is connected to nodes WGC, JOL.
Node VYT is connected to node VUN.
Node CXI is connected to node JOL.
Node RDZ is connected to nodes VYT, ECE, WGC, VUN, BEP, CXI, JOL, NIS, UDX.
Node WGC is connected to nodes JOL, CXI.
Node VUN is connected to nodes WGC, NIS.
Node UDX is connected to nodes NIS, WGC, ECE, BEP, JOL, VYT.","[VUN, UDX, JOL, ECE, BEP, NIS, WGC, CXI, RDZ, KCC, VYT]",11,34,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RDZ, UDX, ECE, KCC, VYT, BEP, VUN, NIS, WGC, CXI, JOL]","Let's solve it step by step.
Nodes with 0 in-degree: [RDZ].
Visit node RDZ and remove it from the graph.
Nodes with 0 in-degree: [UDX].
Visit node UDX and remove it from the graph.
Nodes with 0 in-degree: [ECE].
Visit node ECE and remove it from the graph.
Nodes with 0 in-degree: [KCC].
Visit node KCC and remove it from the graph.
Nodes with 0 in-degree: [VYT, BEP].
Visit node VYT and remove it from the graph.
Nodes with 0 in-degree: [BEP].
Visit node BEP and remove it from the graph.
Nodes with 0 in-degree: [VUN].
Visit node VUN and remove it from the graph.
Nodes with 0 in-degree: [NIS].
Visit node NIS and remove it from the graph.
Nodes with 0 in-degree: [WGC].
Visit node WGC and remove it from the graph.
Nodes with 0 in-degree: [CXI].
Visit node CXI and remove it from the graph.
Nodes with 0 in-degree: [JOL].
Visit node JOL and remove it from the graph.
So the result of topological sorting is ","('[[RDZ, UDX, ECE, KCC, VYT, BEP, VUN, NIS, WGC, CXI, JOL], [RDZ, UDX, ECE, KCC, VYT, JOL, BEP, NIS, VUN, CXI, WGC], [RDZ, CXI, JOL, WGC, VUN, NIS, UDX, ECE, VYT, BEP, KCC], [RDZ, UDX, ECE, WGC, CXI, JOL, KCC, VYT, BEP, VUN, NIS]]',)",0,179
topological_sort,"[(IJD, XUP), (IJD, DQK), (IJD, IAY), (XUP, MBH), (XUP, DQK), (XUP, IAY), (DQK, MBH), (IAY, DQK), (MBH, VVK), (SBX, JAL), (SBX, CCK), (JAL, JOZ), (CCK, JAL), (CCK, JOZ), (WIO, DQK), (WIO, RLL), (WIO, CCK), (RLL, IJD), (RLL, CCK), (STZ, XUP), (VVK, SBX), (VVK, JAL), (VVK, JOZ)]","{IJD: [XUP, DQK, IAY],
XUP: [MBH, DQK, IAY],
DQK: [MBH],
IAY: [DQK],
MBH: [VVK],
SBX: [JAL, CCK],
JAL: [JOZ],
CCK: [JAL, JOZ],
JOZ: [],
WIO: [DQK, RLL, CCK],
RLL: [IJD, CCK],
STZ: [XUP],
VVK: [SBX, JAL, JOZ]}","Node IJD is connected to nodes XUP, DQK, IAY.
Node XUP is connected to nodes MBH, DQK, IAY.
Node DQK is connected to node MBH.
Node IAY is connected to node DQK.
Node MBH is connected to node VVK.
Node SBX is connected to nodes JAL, CCK.
Node JAL is connected to node JOZ.
Node CCK is connected to nodes JAL, JOZ.
Node WIO is connected to nodes DQK, RLL, CCK.
Node RLL is connected to nodes IJD, CCK.
Node STZ is connected to node XUP.
Node VVK is connected to nodes SBX, JAL, JOZ.","[DQK, STZ, IJD, XUP, JAL, VVK, SBX, MBH, JOZ, IAY, CCK, WIO, RLL]",13,23,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WIO, STZ, RLL, IJD, XUP, IAY, DQK, MBH, VVK, SBX, CCK, JAL, JOZ]","Let's solve it step by step.
Nodes with 0 in-degree: [WIO, STZ].
Visit node WIO and remove it from the graph.
Nodes with 0 in-degree: [STZ, RLL].
Visit node STZ and remove it from the graph.
Nodes with 0 in-degree: [RLL].
Visit node RLL and remove it from the graph.
Nodes with 0 in-degree: [IJD].
Visit node IJD and remove it from the graph.
Nodes with 0 in-degree: [XUP].
Visit node XUP and remove it from the graph.
Nodes with 0 in-degree: [IAY].
Visit node IAY and remove it from the graph.
Nodes with 0 in-degree: [DQK].
Visit node DQK and remove it from the graph.
Nodes with 0 in-degree: [MBH].
Visit node MBH and remove it from the graph.
Nodes with 0 in-degree: [VVK].
Visit node VVK and remove it from the graph.
Nodes with 0 in-degree: [SBX].
Visit node SBX and remove it from the graph.
Nodes with 0 in-degree: [CCK].
Visit node CCK and remove it from the graph.
Nodes with 0 in-degree: [JAL].
Visit node JAL and remove it from the graph.
Nodes with 0 in-degree: [JOZ].
Visit node JOZ and remove it from the graph.
So the result of topological sorting is ","('[[WIO, CCK, JOZ, DQK, IJD, JAL, SBX, XUP, IAY, VVK, MBH, STZ, RLL], [WIO, STZ, RLL, IJD, XUP, IAY, DQK, MBH, VVK, SBX, CCK, JAL, JOZ], [WIO, STZ, RLL, IJD, SBX, CCK, JAL, JOZ, XUP, IAY, DQK, MBH, VVK], [WIO, STZ, RLL, IJD, XUP, IAY, VVK, JAL, CCK, JOZ, DQK, SBX, MBH]]',)",1,180
topological_sort,"[(YUA, FGB), (FGB, RLO), (FGB, OBD), (RLO, SXI), (MJT, YUA), (MJT, RSG), (RSG, YUA), (KWN, FGB)]","{YUA: [FGB],
FGB: [RLO, OBD],
RLO: [SXI],
OBD: [],
SXI: [],
MJT: [YUA, RSG],
RSG: [YUA],
KWN: [FGB]}","Node YUA is connected to node FGB.
Node FGB is connected to nodes RLO, OBD.
Node RLO is connected to node SXI.
Node MJT is connected to nodes YUA, RSG.
Node RSG is connected to node YUA.
Node KWN is connected to node FGB.","[MJT, OBD, RSG, SXI, YUA, FGB, RLO, KWN]",8,8,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MJT, KWN, RSG, YUA, FGB, RLO, OBD, SXI]","Let's solve it step by step.
Nodes with 0 in-degree: [MJT, KWN].
Visit node MJT and remove it from the graph.
Nodes with 0 in-degree: [KWN, RSG].
Visit node KWN and remove it from the graph.
Nodes with 0 in-degree: [RSG].
Visit node RSG and remove it from the graph.
Nodes with 0 in-degree: [YUA].
Visit node YUA and remove it from the graph.
Nodes with 0 in-degree: [FGB].
Visit node FGB and remove it from the graph.
Nodes with 0 in-degree: [RLO, OBD].
Visit node RLO and remove it from the graph.
Nodes with 0 in-degree: [OBD, SXI].
Visit node OBD and remove it from the graph.
Nodes with 0 in-degree: [SXI].
Visit node SXI and remove it from the graph.
So the result of topological sorting is ","('[[MJT, KWN, OBD, SXI, RSG, YUA, FGB, RLO], [MJT, KWN, RSG, YUA, RLO, SXI, OBD, FGB], [MJT, KWN, RSG, YUA, FGB, RLO, OBD, SXI], [MJT, RLO, KWN, OBD, FGB, YUA, RSG, SXI]]',)",2,181
topological_sort,"[(FVO, LPO), (LPO, PSU), (PSU, BTN), (PSU, QHR), (WPV, WAB), (WPV, NQH), (WPV, PSU), (WPV, BTN), (WAB, VZN), (WAB, MDM), (NQH, BLL), (VZN, BLL), (MDM, BTN), (MDM, FLY), (MDM, FVO), (MDM, LPO), (FLY, FVO), (FLY, PSU), (FLY, FXE), (FLY, BLL), (BLL, FVO), (BLL, LPO)]","{FVO: [LPO],
LPO: [PSU],
PSU: [BTN, QHR],
BTN: [],
QHR: [],
WPV: [WAB, NQH, PSU, BTN],
WAB: [VZN, MDM],
NQH: [BLL],
VZN: [BLL],
MDM: [BTN, FLY, FVO, LPO],
FLY: [FVO, PSU, FXE, BLL],
FXE: [],
BLL: [FVO, LPO]}","Node FVO is connected to node LPO.
Node LPO is connected to node PSU.
Node PSU is connected to nodes BTN, QHR.
Node WPV is connected to nodes WAB, NQH, PSU, BTN.
Node WAB is connected to nodes VZN, MDM.
Node NQH is connected to node BLL.
Node VZN is connected to node BLL.
Node MDM is connected to nodes BTN, FLY, FVO, LPO.
Node FLY is connected to nodes FVO, PSU, FXE, BLL.
Node BLL is connected to nodes FVO, LPO.","[FLY, LPO, VZN, BLL, NQH, BTN, MDM, WPV, QHR, FVO, WAB, PSU, FXE]",13,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WPV, WAB, NQH, VZN, MDM, FLY, FXE, BLL, FVO, LPO, PSU, BTN, QHR]","Let's solve it step by step.
Nodes with 0 in-degree: [WPV].
Visit node WPV and remove it from the graph.
Nodes with 0 in-degree: [WAB, NQH].
Visit node WAB and remove it from the graph.
Nodes with 0 in-degree: [NQH, VZN, MDM].
Visit node NQH and remove it from the graph.
Nodes with 0 in-degree: [VZN, MDM].
Visit node VZN and remove it from the graph.
Nodes with 0 in-degree: [MDM].
Visit node MDM and remove it from the graph.
Nodes with 0 in-degree: [FLY].
Visit node FLY and remove it from the graph.
Nodes with 0 in-degree: [FXE, BLL].
Visit node FXE and remove it from the graph.
Nodes with 0 in-degree: [BLL].
Visit node BLL and remove it from the graph.
Nodes with 0 in-degree: [FVO].
Visit node FVO and remove it from the graph.
Nodes with 0 in-degree: [LPO].
Visit node LPO and remove it from the graph.
Nodes with 0 in-degree: [PSU].
Visit node PSU and remove it from the graph.
Nodes with 0 in-degree: [BTN, QHR].
Visit node BTN and remove it from the graph.
Nodes with 0 in-degree: [QHR].
Visit node QHR and remove it from the graph.
So the result of topological sorting is ","('[[WPV, FLY, FVO, MDM, NQH, VZN, FXE, QHR, LPO, PSU, BTN, BLL, WAB], [WPV, WAB, NQH, VZN, MDM, FLY, BLL, LPO, BTN, QHR, FVO, PSU, FXE], [WPV, WAB, NQH, VZN, MDM, FLY, FXE, BLL, FVO, LPO, PSU, BTN, QHR], [WPV, WAB, NQH, VZN, LPO, PSU, BTN, QHR, MDM, FLY, FXE, BLL, FVO]]',)",2,182
topological_sort,"[(NMP, VWK), (NMP, IBP), (NMP, FZE), (FZE, KGN), (KGN, IBP), (KGN, VWK), (FWP, KGN), (FWP, NMP), (RPO, KGN), (SJL, VWK), (DXN, SJL), (DXN, FZE), (DXN, VWK)]","{NMP: [VWK, IBP, FZE],
VWK: [],
IBP: [],
FZE: [KGN],
KGN: [IBP, VWK],
FWP: [KGN, NMP],
RPO: [KGN],
SJL: [VWK],
DXN: [SJL, FZE, VWK]}","Node NMP is connected to nodes VWK, IBP, FZE.
Node FZE is connected to node KGN.
Node KGN is connected to nodes IBP, VWK.
Node FWP is connected to nodes KGN, NMP.
Node RPO is connected to node KGN.
Node SJL is connected to node VWK.
Node DXN is connected to nodes SJL, FZE, VWK.","[RPO, IBP, SJL, DXN, NMP, FZE, FWP, KGN, VWK]",9,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FWP, RPO, DXN, NMP, SJL, FZE, KGN, IBP, VWK]","Let's solve it step by step.
Nodes with 0 in-degree: [FWP, RPO, DXN].
Visit node FWP and remove it from the graph.
Nodes with 0 in-degree: [RPO, DXN, NMP].
Visit node RPO and remove it from the graph.
Nodes with 0 in-degree: [DXN, NMP].
Visit node DXN and remove it from the graph.
Nodes with 0 in-degree: [NMP, SJL].
Visit node NMP and remove it from the graph.
Nodes with 0 in-degree: [SJL, FZE].
Visit node SJL and remove it from the graph.
Nodes with 0 in-degree: [FZE].
Visit node FZE and remove it from the graph.
Nodes with 0 in-degree: [KGN].
Visit node KGN and remove it from the graph.
Nodes with 0 in-degree: [IBP, VWK].
Visit node IBP and remove it from the graph.
Nodes with 0 in-degree: [VWK].
Visit node VWK and remove it from the graph.
So the result of topological sorting is ","('[[FWP, FZE, KGN, VWK, IBP, NMP, SJL, DXN, RPO], [FWP, RPO, DXN, NMP, SJL, FZE, KGN, IBP, VWK], [FWP, RPO, DXN, KGN, IBP, VWK, NMP, SJL, FZE], [FWP, RPO, DXN, NMP, IBP, SJL, KGN, FZE, VWK]]',)",1,183
topological_sort,"[(ZAN, GDI), (ZAN, RQN), (ZAN, YWF), (GDI, QIT), (GDI, OVZ), (RQN, OVZ), (RQN, YWF), (RQN, GDI), (YWF, QIT), (OVZ, KQC), (OVZ, QIT), (THA, GDI), (THA, ERM), (THA, YWF), (THA, YMR), (THA, OVZ), (ERM, GDI), (ERM, YWF), (ERM, QIT), (YMR, KQC), (YMR, CIL), (KQC, QIT), (KQC, YWF), (CIL, RQN), (SNM, OVZ), (SNM, CIL), (SNM, YMR), (SNM, QIT), (SNM, ZAN), (SNM, THA), (SNM, KQC)]","{ZAN: [GDI, RQN, YWF],
GDI: [QIT, OVZ],
RQN: [OVZ, YWF, GDI],
YWF: [QIT],
QIT: [],
OVZ: [KQC, QIT],
THA: [GDI, ERM, YWF, YMR, OVZ],
ERM: [GDI, YWF, QIT],
YMR: [KQC, CIL],
KQC: [QIT, YWF],
CIL: [RQN],
SNM: [OVZ, CIL, YMR, QIT, ZAN, THA, KQC]}","Node ZAN is connected to nodes GDI, RQN, YWF.
Node GDI is connected to nodes QIT, OVZ.
Node RQN is connected to nodes OVZ, YWF, GDI.
Node YWF is connected to node QIT.
Node OVZ is connected to nodes KQC, QIT.
Node THA is connected to nodes GDI, ERM, YWF, YMR, OVZ.
Node ERM is connected to nodes GDI, YWF, QIT.
Node YMR is connected to nodes KQC, CIL.
Node KQC is connected to nodes QIT, YWF.
Node CIL is connected to node RQN.
Node SNM is connected to nodes OVZ, CIL, YMR, QIT, ZAN, THA, KQC.","[THA, SNM, CIL, RQN, OVZ, YMR, ERM, YWF, QIT, ZAN, KQC, GDI]",12,31,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SNM, ZAN, THA, ERM, YMR, CIL, RQN, GDI, OVZ, KQC, YWF, QIT]","Let's solve it step by step.
Nodes with 0 in-degree: [SNM].
Visit node SNM and remove it from the graph.
Nodes with 0 in-degree: [ZAN, THA].
Visit node ZAN and remove it from the graph.
Nodes with 0 in-degree: [THA].
Visit node THA and remove it from the graph.
Nodes with 0 in-degree: [ERM, YMR].
Visit node ERM and remove it from the graph.
Nodes with 0 in-degree: [YMR].
Visit node YMR and remove it from the graph.
Nodes with 0 in-degree: [CIL].
Visit node CIL and remove it from the graph.
Nodes with 0 in-degree: [RQN].
Visit node RQN and remove it from the graph.
Nodes with 0 in-degree: [GDI].
Visit node GDI and remove it from the graph.
Nodes with 0 in-degree: [OVZ].
Visit node OVZ and remove it from the graph.
Nodes with 0 in-degree: [KQC].
Visit node KQC and remove it from the graph.
Nodes with 0 in-degree: [YWF].
Visit node YWF and remove it from the graph.
Nodes with 0 in-degree: [QIT].
Visit node QIT and remove it from the graph.
So the result of topological sorting is ","('[[SNM, ZAN, THA, ERM, OVZ, KQC, YWF, QIT, YMR, CIL, RQN, GDI], [SNM, KQC, YMR, QIT, GDI, ZAN, CIL, YWF, RQN, ERM, THA, OVZ], [SNM, ZAN, THA, ERM, YMR, CIL, OVZ, KQC, QIT, GDI, RQN, YWF], [SNM, ZAN, THA, ERM, YMR, CIL, RQN, GDI, OVZ, KQC, YWF, QIT]]',)",3,184
topological_sort,"[(LDQ, RMU), (LDQ, DUT), (LDQ, MCI), (LDQ, SFU), (LDQ, UZY), (LDQ, AYX), (LDQ, WTF), (LDQ, PMU), (LDQ, YLB), (MCI, RMU), (SFU, YLB), (SFU, MCI), (SFU, UAX), (SFU, DUT), (UZY, RWT), (UZY, WTF), (UZY, PMU), (UZY, PFY), (UZY, DUT), (UZY, AYX), (AYX, ESM), (AYX, WBO), (AYX, DUT), (WTF, PFY), (WTF, RWT), (WTF, WBO), (PMU, DUT), (PMU, RMU), (PMU, MCI), (PMU, WBO), (YLB, AYX), (YLB, PFY), (YLB, WTF), (YLB, DUT), (YLB, RMU), (PFY, WBO), (PFY, MCI), (RWT, WBO), (RWT, PMU), (WBO, RMU), (WBO, MCI), (ESM, RWT), (UAX, ESM), (UAX, UZY), (UAX, DUT)]","{LDQ: [RMU, DUT, MCI, SFU, UZY, AYX, WTF, PMU, YLB],
RMU: [],
DUT: [],
MCI: [RMU],
SFU: [YLB, MCI, UAX, DUT],
UZY: [RWT, WTF, PMU, PFY, DUT, AYX],
AYX: [ESM, WBO, DUT],
WTF: [PFY, RWT, WBO],
PMU: [DUT, RMU, MCI, WBO],
YLB: [AYX, PFY, WTF, DUT, RMU],
PFY: [WBO, MCI],
RWT: [WBO, PMU],
WBO: [RMU, MCI],
ESM: [RWT],
UAX: [ESM, UZY, DUT]}","Node LDQ is connected to nodes RMU, DUT, MCI, SFU, UZY, AYX, WTF, PMU, YLB.
Node MCI is connected to node RMU.
Node SFU is connected to nodes YLB, MCI, UAX, DUT.
Node UZY is connected to nodes RWT, WTF, PMU, PFY, DUT, AYX.
Node AYX is connected to nodes ESM, WBO, DUT.
Node WTF is connected to nodes PFY, RWT, WBO.
Node PMU is connected to nodes DUT, RMU, MCI, WBO.
Node YLB is connected to nodes AYX, PFY, WTF, DUT, RMU.
Node PFY is connected to nodes WBO, MCI.
Node RWT is connected to nodes WBO, PMU.
Node WBO is connected to nodes RMU, MCI.
Node ESM is connected to node RWT.
Node UAX is connected to nodes ESM, UZY, DUT.","[UZY, DUT, YLB, ESM, RMU, AYX, WTF, RWT, PMU, MCI, SFU, WBO, UAX, PFY, LDQ]",15,45,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LDQ, SFU, YLB, UAX, UZY, WTF, AYX, PFY, ESM, RWT, PMU, DUT, WBO, MCI, RMU]","Let's solve it step by step.
Nodes with 0 in-degree: [LDQ].
Visit node LDQ and remove it from the graph.
Nodes with 0 in-degree: [SFU].
Visit node SFU and remove it from the graph.
Nodes with 0 in-degree: [YLB, UAX].
Visit node YLB and remove it from the graph.
Nodes with 0 in-degree: [UAX].
Visit node UAX and remove it from the graph.
Nodes with 0 in-degree: [UZY].
Visit node UZY and remove it from the graph.
Nodes with 0 in-degree: [WTF, AYX].
Visit node WTF and remove it from the graph.
Nodes with 0 in-degree: [AYX, PFY].
Visit node AYX and remove it from the graph.
Nodes with 0 in-degree: [PFY, ESM].
Visit node PFY and remove it from the graph.
Nodes with 0 in-degree: [ESM].
Visit node ESM and remove it from the graph.
Nodes with 0 in-degree: [RWT].
Visit node RWT and remove it from the graph.
Nodes with 0 in-degree: [PMU].
Visit node PMU and remove it from the graph.
Nodes with 0 in-degree: [DUT, WBO].
Visit node DUT and remove it from the graph.
Nodes with 0 in-degree: [WBO].
Visit node WBO and remove it from the graph.
Nodes with 0 in-degree: [MCI].
Visit node MCI and remove it from the graph.
Nodes with 0 in-degree: [RMU].
Visit node RMU and remove it from the graph.
So the result of topological sorting is ","('[[LDQ, SFU, YLB, UAX, UZY, PMU, DUT, WBO, MCI, RMU, WTF, AYX, PFY, ESM, RWT], [LDQ, SFU, YLB, UAX, UZY, WTF, AYX, PFY, ESM, RWT, PMU, DUT, WBO, MCI, RMU], [LDQ, SFU, YLB, UAX, UZY, WTF, AYX, MCI, DUT, WBO, PFY, ESM, RWT, PMU, RMU], [LDQ, WTF, MCI, PMU, UZY, AYX, YLB, PFY, ESM, SFU, DUT, UAX, RMU, WBO, RWT]]',)",1,185
topological_sort,"[(ZES, ECV), (ZES, JTM), (ZES, IVR), (ZES, GWR), (ECV, QKC), (ECV, LXZ), (JTM, GLD), (IVR, LXZ), (GWR, QNW), (GWR, DXK), (GWR, QKC), (QKC, IVR), (LXZ, QNW), (DXK, IVR), (DXK, GSX), (GLD, QKC), (KQZ, ECV), (KQZ, LXZ), (KQZ, WPK), (WPK, WRU), (WPK, ECV), (CAN, LXZ), (CAN, GSX), (CAN, QKC), (CAN, WRU), (WRU, GSX), (WRU, GWR), (WRU, QKC)]","{ZES: [ECV, JTM, IVR, GWR],
ECV: [QKC, LXZ],
JTM: [GLD],
IVR: [LXZ],
GWR: [QNW, DXK, QKC],
QKC: [IVR],
LXZ: [QNW],
DXK: [IVR, GSX],
GSX: [],
GLD: [QKC],
KQZ: [ECV, LXZ, WPK],
WPK: [WRU, ECV],
QNW: [],
CAN: [LXZ, GSX, QKC, WRU],
WRU: [GSX, GWR, QKC]}","Node ZES is connected to nodes ECV, JTM, IVR, GWR.
Node ECV is connected to nodes QKC, LXZ.
Node JTM is connected to node GLD.
Node IVR is connected to node LXZ.
Node GWR is connected to nodes QNW, DXK, QKC.
Node QKC is connected to node IVR.
Node LXZ is connected to node QNW.
Node DXK is connected to nodes IVR, GSX.
Node GLD is connected to node QKC.
Node KQZ is connected to nodes ECV, LXZ, WPK.
Node WPK is connected to nodes WRU, ECV.
Node CAN is connected to nodes LXZ, GSX, QKC, WRU.
Node WRU is connected to nodes GSX, GWR, QKC.","[DXK, CAN, GSX, ECV, GWR, QNW, LXZ, ZES, KQZ, JTM, GLD, QKC, IVR, WRU, WPK]",15,28,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZES, KQZ, CAN, JTM, WPK, GLD, WRU, ECV, GWR, DXK, QKC, GSX, IVR, LXZ, QNW]","Let's solve it step by step.
Nodes with 0 in-degree: [ZES, KQZ, CAN].
Visit node ZES and remove it from the graph.
Nodes with 0 in-degree: [KQZ, CAN, JTM].
Visit node KQZ and remove it from the graph.
Nodes with 0 in-degree: [CAN, JTM, WPK].
Visit node CAN and remove it from the graph.
Nodes with 0 in-degree: [JTM, WPK].
Visit node JTM and remove it from the graph.
Nodes with 0 in-degree: [WPK, GLD].
Visit node WPK and remove it from the graph.
Nodes with 0 in-degree: [GLD, WRU, ECV].
Visit node GLD and remove it from the graph.
Nodes with 0 in-degree: [WRU, ECV].
Visit node WRU and remove it from the graph.
Nodes with 0 in-degree: [ECV, GWR].
Visit node ECV and remove it from the graph.
Nodes with 0 in-degree: [GWR].
Visit node GWR and remove it from the graph.
Nodes with 0 in-degree: [DXK, QKC].
Visit node DXK and remove it from the graph.
Nodes with 0 in-degree: [QKC, GSX].
Visit node QKC and remove it from the graph.
Nodes with 0 in-degree: [GSX, IVR].
Visit node GSX and remove it from the graph.
Nodes with 0 in-degree: [IVR].
Visit node IVR and remove it from the graph.
Nodes with 0 in-degree: [LXZ].
Visit node LXZ and remove it from the graph.
Nodes with 0 in-degree: [QNW].
Visit node QNW and remove it from the graph.
So the result of topological sorting is ","('[[ZES, JTM, QNW, GLD, ECV, QKC, GSX, GWR, CAN, DXK, WRU, KQZ, WPK, IVR, LXZ], [ZES, KQZ, CAN, JTM, WPK, GLD, WRU, ECV, GWR, DXK, QKC, GSX, IVR, LXZ, QNW], [ZES, KQZ, CAN, JTM, WPK, QKC, GSX, IVR, LXZ, QNW, GLD, WRU, ECV, GWR, DXK], [ZES, KQZ, CAN, JTM, WPK, GLD, WRU, QNW, IVR, GSX, ECV, LXZ, GWR, DXK, QKC]]',)",1,186
topological_sort,"[(CEU, SVC), (CEU, JYP), (SVC, MSH), (MSH, JYP), (KQT, SVC), (KQT, MSH), (UOV, CMB), (UOV, GUS), (CMB, SVC), (GUS, LOO), (GUS, KSQ), (LOO, MSH), (QEO, KSQ), (QEO, FNO), (QEO, UOV), (QEO, OVH), (FNO, KQT), (FNO, CEU), (OVH, CMB), (OVH, SVC), (OVH, UOV), (OVH, PCZ), (PCZ, GUS)]","{CEU: [SVC, JYP],
SVC: [MSH],
JYP: [],
MSH: [JYP],
KQT: [SVC, MSH],
UOV: [CMB, GUS],
CMB: [SVC],
GUS: [LOO, KSQ],
LOO: [MSH],
KSQ: [],
QEO: [KSQ, FNO, UOV, OVH],
FNO: [KQT, CEU],
OVH: [CMB, SVC, UOV, PCZ],
PCZ: [GUS]}","Node CEU is connected to nodes SVC, JYP.
Node SVC is connected to node MSH.
Node MSH is connected to node JYP.
Node KQT is connected to nodes SVC, MSH.
Node UOV is connected to nodes CMB, GUS.
Node CMB is connected to node SVC.
Node GUS is connected to nodes LOO, KSQ.
Node LOO is connected to node MSH.
Node QEO is connected to nodes KSQ, FNO, UOV, OVH.
Node FNO is connected to nodes KQT, CEU.
Node OVH is connected to nodes CMB, SVC, UOV, PCZ.
Node PCZ is connected to node GUS.","[UOV, KSQ, MSH, FNO, LOO, JYP, SVC, OVH, CMB, CEU, QEO, GUS, KQT, PCZ]",14,23,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QEO, FNO, OVH, KQT, CEU, UOV, PCZ, CMB, GUS, SVC, LOO, KSQ, MSH, JYP]","Let's solve it step by step.
Nodes with 0 in-degree: [QEO].
Visit node QEO and remove it from the graph.
Nodes with 0 in-degree: [FNO, OVH].
Visit node FNO and remove it from the graph.
Nodes with 0 in-degree: [OVH, KQT, CEU].
Visit node OVH and remove it from the graph.
Nodes with 0 in-degree: [KQT, CEU, UOV, PCZ].
Visit node KQT and remove it from the graph.
Nodes with 0 in-degree: [CEU, UOV, PCZ].
Visit node CEU and remove it from the graph.
Nodes with 0 in-degree: [UOV, PCZ].
Visit node UOV and remove it from the graph.
Nodes with 0 in-degree: [PCZ, CMB].
Visit node PCZ and remove it from the graph.
Nodes with 0 in-degree: [CMB, GUS].
Visit node CMB and remove it from the graph.
Nodes with 0 in-degree: [GUS, SVC].
Visit node GUS and remove it from the graph.
Nodes with 0 in-degree: [SVC, LOO, KSQ].
Visit node SVC and remove it from the graph.
Nodes with 0 in-degree: [LOO, KSQ].
Visit node LOO and remove it from the graph.
Nodes with 0 in-degree: [KSQ, MSH].
Visit node KSQ and remove it from the graph.
Nodes with 0 in-degree: [MSH].
Visit node MSH and remove it from the graph.
Nodes with 0 in-degree: [JYP].
Visit node JYP and remove it from the graph.
So the result of topological sorting is ","('[[QEO, FNO, OVH, KQT, CEU, UOV, PCZ, CMB, GUS, MSH, SVC, KSQ, JYP, LOO], [QEO, CMB, LOO, MSH, GUS, JYP, KSQ, SVC, CEU, OVH, KQT, PCZ, UOV, FNO], [QEO, FNO, OVH, KQT, LOO, KSQ, MSH, JYP, CEU, UOV, PCZ, CMB, GUS, SVC], [QEO, FNO, OVH, KQT, CEU, UOV, PCZ, CMB, GUS, SVC, LOO, KSQ, MSH, JYP]]',)",3,187
topological_sort,"[(YBL, TVK), (YBL, TUX), (YBL, WQQ), (YBL, PSP), (TVK, BYQ), (TVK, TUX), (WQQ, TVK), (WQQ, EFO), (BYQ, TUX), (BYQ, EFO), (LUJ, WBZ), (LUJ, ZCG), (LUJ, BYQ), (LUJ, YBL), (LUJ, WQQ), (WBZ, PSP), (WBZ, YBL), (WBZ, OZO), (WBZ, TUX), (ZCG, YBL), (ZCG, BYQ), (ZCG, WQQ), (OZO, TVK), (OZO, PSP), (OZO, YBL), (EFO, PSP), (EFO, TUX), (AMR, BYQ), (AMR, ENN), (AMR, OZO), (ENN, YBL), (ENN, WQQ), (ENN, TVK), (ENN, PSP), (ENN, OZO)]","{YBL: [TVK, TUX, WQQ, PSP],
TVK: [BYQ, TUX],
TUX: [],
WQQ: [TVK, EFO],
PSP: [],
BYQ: [TUX, EFO],
LUJ: [WBZ, ZCG, BYQ, YBL, WQQ],
WBZ: [PSP, YBL, OZO, TUX],
ZCG: [YBL, BYQ, WQQ],
OZO: [TVK, PSP, YBL],
EFO: [PSP, TUX],
AMR: [BYQ, ENN, OZO],
ENN: [YBL, WQQ, TVK, PSP, OZO]}","Node YBL is connected to nodes TVK, TUX, WQQ, PSP.
Node TVK is connected to nodes BYQ, TUX.
Node WQQ is connected to nodes TVK, EFO.
Node BYQ is connected to nodes TUX, EFO.
Node LUJ is connected to nodes WBZ, ZCG, BYQ, YBL, WQQ.
Node WBZ is connected to nodes PSP, YBL, OZO, TUX.
Node ZCG is connected to nodes YBL, BYQ, WQQ.
Node OZO is connected to nodes TVK, PSP, YBL.
Node EFO is connected to nodes PSP, TUX.
Node AMR is connected to nodes BYQ, ENN, OZO.
Node ENN is connected to nodes YBL, WQQ, TVK, PSP, OZO.","[ZCG, BYQ, WBZ, LUJ, OZO, AMR, YBL, TUX, EFO, ENN, WQQ, TVK, PSP]",13,35,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LUJ, AMR, WBZ, ZCG, ENN, OZO, YBL, WQQ, TVK, BYQ, EFO, PSP, TUX]","Let's solve it step by step.
Nodes with 0 in-degree: [LUJ, AMR].
Visit node LUJ and remove it from the graph.
Nodes with 0 in-degree: [AMR, WBZ, ZCG].
Visit node AMR and remove it from the graph.
Nodes with 0 in-degree: [WBZ, ZCG, ENN].
Visit node WBZ and remove it from the graph.
Nodes with 0 in-degree: [ZCG, ENN].
Visit node ZCG and remove it from the graph.
Nodes with 0 in-degree: [ENN].
Visit node ENN and remove it from the graph.
Nodes with 0 in-degree: [OZO].
Visit node OZO and remove it from the graph.
Nodes with 0 in-degree: [YBL].
Visit node YBL and remove it from the graph.
Nodes with 0 in-degree: [WQQ].
Visit node WQQ and remove it from the graph.
Nodes with 0 in-degree: [TVK].
Visit node TVK and remove it from the graph.
Nodes with 0 in-degree: [BYQ].
Visit node BYQ and remove it from the graph.
Nodes with 0 in-degree: [EFO].
Visit node EFO and remove it from the graph.
Nodes with 0 in-degree: [PSP, TUX].
Visit node PSP and remove it from the graph.
Nodes with 0 in-degree: [TUX].
Visit node TUX and remove it from the graph.
So the result of topological sorting is ","('[[LUJ, AMR, WBZ, ZCG, BYQ, EFO, PSP, TUX, ENN, OZO, YBL, WQQ, TVK], [LUJ, AMR, WBZ, ZCG, ENN, OZO, YBL, WQQ, TVK, BYQ, EFO, PSP, TUX], [LUJ, AMR, WBZ, ZCG, ENN, OZO, TUX, EFO, YBL, TVK, BYQ, WQQ, PSP], [LUJ, BYQ, ZCG, EFO, YBL, TUX, AMR, OZO, PSP, WQQ, ENN, WBZ, TVK]]',)",1,188
topological_sort,"[(KTL, NLH), (KTL, ZKT), (KTL, XTK), (KTL, LDL), (NLH, UYY), (XTK, LDL), (LDL, ZKT), (UYY, NXS), (HVV, NLH), (HVV, LDL), (EDG, NXS), (EDG, LDL), (EDG, KTL), (EDG, XTK)]","{KTL: [NLH, ZKT, XTK, LDL],
NLH: [UYY],
ZKT: [],
XTK: [LDL],
LDL: [ZKT],
UYY: [NXS],
NXS: [],
HVV: [NLH, LDL],
EDG: [NXS, LDL, KTL, XTK]}","Node KTL is connected to nodes NLH, ZKT, XTK, LDL.
Node NLH is connected to node UYY.
Node XTK is connected to node LDL.
Node LDL is connected to node ZKT.
Node UYY is connected to node NXS.
Node HVV is connected to nodes NLH, LDL.
Node EDG is connected to nodes NXS, LDL, KTL, XTK.","[UYY, ZKT, HVV, NXS, LDL, NLH, EDG, XTK, KTL]",9,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HVV, EDG, KTL, NLH, XTK, UYY, LDL, NXS, ZKT]","Let's solve it step by step.
Nodes with 0 in-degree: [HVV, EDG].
Visit node HVV and remove it from the graph.
Nodes with 0 in-degree: [EDG].
Visit node EDG and remove it from the graph.
Nodes with 0 in-degree: [KTL].
Visit node KTL and remove it from the graph.
Nodes with 0 in-degree: [NLH, XTK].
Visit node NLH and remove it from the graph.
Nodes with 0 in-degree: [XTK, UYY].
Visit node XTK and remove it from the graph.
Nodes with 0 in-degree: [UYY, LDL].
Visit node UYY and remove it from the graph.
Nodes with 0 in-degree: [LDL, NXS].
Visit node LDL and remove it from the graph.
Nodes with 0 in-degree: [NXS, ZKT].
Visit node NXS and remove it from the graph.
Nodes with 0 in-degree: [ZKT].
Visit node ZKT and remove it from the graph.
So the result of topological sorting is ","('[[HVV, EDG, KTL, LDL, NXS, ZKT, NLH, XTK, UYY], [HVV, EDG, KTL, NLH, UYY, LDL, ZKT, XTK, NXS], [HVV, ZKT, KTL, NLH, UYY, XTK, EDG, NXS, LDL], [HVV, EDG, KTL, NLH, XTK, UYY, LDL, NXS, ZKT]]',)",3,189
topological_sort,"[(EDD, AWB), (EDD, QIV), (EDD, WJN), (AWB, RQD), (AWB, WJN), (QIV, WKM), (QIV, INU), (QIV, AWB), (QIV, QTN), (QIV, HFH), (QIV, RQD), (WJN, INU), (HFH, RQD), (HFH, INU), (HFH, QTN), (HFH, AWB), (QTN, RQD), (FXU, QTN), (FXU, WKM), (FXU, EDD), (WKM, INU), (BYA, QIV), (BYA, SQZ), (BYA, WKM), (BYA, AWB), (SQZ, WKM), (SQZ, QIV), (SQZ, FXU), (SQZ, AWB), (SQZ, HFH), (YZJ, BYA), (YZJ, AWB), (YZJ, QTN), (YZJ, FXU), (YZJ, QIV), (UHF, BYA)]","{EDD: [AWB, QIV, WJN],
AWB: [RQD, WJN],
QIV: [WKM, INU, AWB, QTN, HFH, RQD],
WJN: [INU],
RQD: [],
HFH: [RQD, INU, QTN, AWB],
INU: [],
QTN: [RQD],
FXU: [QTN, WKM, EDD],
WKM: [INU],
BYA: [QIV, SQZ, WKM, AWB],
SQZ: [WKM, QIV, FXU, AWB, HFH],
YZJ: [BYA, AWB, QTN, FXU, QIV],
UHF: [BYA]}","Node EDD is connected to nodes AWB, QIV, WJN.
Node AWB is connected to nodes RQD, WJN.
Node QIV is connected to nodes WKM, INU, AWB, QTN, HFH, RQD.
Node WJN is connected to node INU.
Node HFH is connected to nodes RQD, INU, QTN, AWB.
Node QTN is connected to node RQD.
Node FXU is connected to nodes QTN, WKM, EDD.
Node WKM is connected to node INU.
Node BYA is connected to nodes QIV, SQZ, WKM, AWB.
Node SQZ is connected to nodes WKM, QIV, FXU, AWB, HFH.
Node YZJ is connected to nodes BYA, AWB, QTN, FXU, QIV.
Node UHF is connected to node BYA.","[QTN, AWB, INU, SQZ, EDD, BYA, WKM, HFH, UHF, RQD, QIV, WJN, YZJ, FXU]",14,36,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YZJ, UHF, BYA, SQZ, FXU, EDD, QIV, WKM, HFH, QTN, AWB, RQD, WJN, INU]","Let's solve it step by step.
Nodes with 0 in-degree: [YZJ, UHF].
Visit node YZJ and remove it from the graph.
Nodes with 0 in-degree: [UHF].
Visit node UHF and remove it from the graph.
Nodes with 0 in-degree: [BYA].
Visit node BYA and remove it from the graph.
Nodes with 0 in-degree: [SQZ].
Visit node SQZ and remove it from the graph.
Nodes with 0 in-degree: [FXU].
Visit node FXU and remove it from the graph.
Nodes with 0 in-degree: [EDD].
Visit node EDD and remove it from the graph.
Nodes with 0 in-degree: [QIV].
Visit node QIV and remove it from the graph.
Nodes with 0 in-degree: [WKM, HFH].
Visit node WKM and remove it from the graph.
Nodes with 0 in-degree: [HFH].
Visit node HFH and remove it from the graph.
Nodes with 0 in-degree: [QTN, AWB].
Visit node QTN and remove it from the graph.
Nodes with 0 in-degree: [AWB].
Visit node AWB and remove it from the graph.
Nodes with 0 in-degree: [RQD, WJN].
Visit node RQD and remove it from the graph.
Nodes with 0 in-degree: [WJN].
Visit node WJN and remove it from the graph.
Nodes with 0 in-degree: [INU].
Visit node INU and remove it from the graph.
So the result of topological sorting is ","('[[YZJ, WKM, HFH, WJN, BYA, QIV, SQZ, FXU, RQD, INU, EDD, UHF, QTN, AWB], [YZJ, UHF, BYA, SQZ, FXU, EDD, QIV, WKM, HFH, QTN, AWB, RQD, WJN, INU], [YZJ, UHF, BYA, SQZ, AWB, RQD, WJN, INU, FXU, EDD, QIV, WKM, HFH, QTN], [YZJ, UHF, BYA, SQZ, FXU, EDD, QIV, WKM, WJN, HFH, RQD, AWB, INU, QTN]]',)",1,190
topological_sort,"[(YQB, SPI), (YQB, XGD), (YQB, NAK), (SPI, PRK), (SPI, ZVZ), (SPI, NLS), (XGD, CXB), (XGD, NLS), (XGD, PRK), (NAK, SPI), (NAK, CXB), (NLS, CXB), (NLS, ZVZ), (CXB, ZVZ), (CXB, PRK)]","{YQB: [SPI, XGD, NAK],
SPI: [PRK, ZVZ, NLS],
XGD: [CXB, NLS, PRK],
NAK: [SPI, CXB],
PRK: [],
ZVZ: [],
NLS: [CXB, ZVZ],
CXB: [ZVZ, PRK]}","Node YQB is connected to nodes SPI, XGD, NAK.
Node SPI is connected to nodes PRK, ZVZ, NLS.
Node XGD is connected to nodes CXB, NLS, PRK.
Node NAK is connected to nodes SPI, CXB.
Node NLS is connected to nodes CXB, ZVZ.
Node CXB is connected to nodes ZVZ, PRK.","[NLS, PRK, XGD, SPI, YQB, ZVZ, NAK, CXB]",8,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YQB, XGD, NAK, SPI, NLS, CXB, ZVZ, PRK]","Let's solve it step by step.
Nodes with 0 in-degree: [YQB].
Visit node YQB and remove it from the graph.
Nodes with 0 in-degree: [XGD, NAK].
Visit node XGD and remove it from the graph.
Nodes with 0 in-degree: [NAK].
Visit node NAK and remove it from the graph.
Nodes with 0 in-degree: [SPI].
Visit node SPI and remove it from the graph.
Nodes with 0 in-degree: [NLS].
Visit node NLS and remove it from the graph.
Nodes with 0 in-degree: [CXB].
Visit node CXB and remove it from the graph.
Nodes with 0 in-degree: [ZVZ, PRK].
Visit node ZVZ and remove it from the graph.
Nodes with 0 in-degree: [PRK].
Visit node PRK and remove it from the graph.
So the result of topological sorting is ","('[[YQB, XGD, NAK, SPI, NLS, ZVZ, CXB, PRK], [YQB, XGD, NAK, SPI, NLS, CXB, ZVZ, PRK], [YQB, NLS, CXB, PRK, XGD, SPI, ZVZ, NAK], [YQB, XGD, ZVZ, PRK, NAK, SPI, NLS, CXB]]',)",1,191
topological_sort,"[(RTH, JNU), (RTH, YED), (YED, JNU), (TEE, JKF), (TEE, GJY), (TEE, NRT), (JKF, YED), (JKF, RTH), (GJY, RTH), (GJY, NRT), (NRT, MUL), (JMK, YED), (MUL, JKF), (MUL, JNU), (MUL, RTH), (MUL, JMK), (MUL, YED)]","{RTH: [JNU, YED],
JNU: [],
YED: [JNU],
TEE: [JKF, GJY, NRT],
JKF: [YED, RTH],
GJY: [RTH, NRT],
NRT: [MUL],
JMK: [YED],
MUL: [JKF, JNU, RTH, JMK, YED]}","Node RTH is connected to nodes JNU, YED.
Node YED is connected to node JNU.
Node TEE is connected to nodes JKF, GJY, NRT.
Node JKF is connected to nodes YED, RTH.
Node GJY is connected to nodes RTH, NRT.
Node NRT is connected to node MUL.
Node JMK is connected to node YED.
Node MUL is connected to nodes JKF, JNU, RTH, JMK, YED.","[JMK, YED, JKF, MUL, GJY, TEE, NRT, RTH, JNU]",9,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TEE, GJY, NRT, MUL, JKF, JMK, RTH, YED, JNU]","Let's solve it step by step.
Nodes with 0 in-degree: [TEE].
Visit node TEE and remove it from the graph.
Nodes with 0 in-degree: [GJY].
Visit node GJY and remove it from the graph.
Nodes with 0 in-degree: [NRT].
Visit node NRT and remove it from the graph.
Nodes with 0 in-degree: [MUL].
Visit node MUL and remove it from the graph.
Nodes with 0 in-degree: [JKF, JMK].
Visit node JKF and remove it from the graph.
Nodes with 0 in-degree: [JMK, RTH].
Visit node JMK and remove it from the graph.
Nodes with 0 in-degree: [RTH].
Visit node RTH and remove it from the graph.
Nodes with 0 in-degree: [YED].
Visit node YED and remove it from the graph.
Nodes with 0 in-degree: [JNU].
Visit node JNU and remove it from the graph.
So the result of topological sorting is ","('[[TEE, JMK, GJY, YED, NRT, RTH, JNU, MUL, JKF], [TEE, GJY, NRT, MUL, YED, JKF, JMK, JNU, RTH], [TEE, GJY, NRT, RTH, YED, JNU, MUL, JKF, JMK], [TEE, GJY, NRT, MUL, JKF, JMK, RTH, YED, JNU]]',)",3,192
topological_sort,"[(SMH, MFM), (SMH, OJJ), (OJJ, MFM), (JHB, ZBN), (JHB, MFM), (JHB, WOC), (ZBN, AHZ), (ZBN, LEU), (WOC, QHY), (WOC, RND), (WOC, ZBN), (AHZ, SMH), (AHZ, NOC), (AHZ, RND), (AHZ, OJJ), (RND, NOC), (BLD, NOC), (QHY, ZBN), (XYU, QHY)]","{SMH: [MFM, OJJ],
MFM: [],
OJJ: [MFM],
JHB: [ZBN, MFM, WOC],
ZBN: [AHZ, LEU],
WOC: [QHY, RND, ZBN],
AHZ: [SMH, NOC, RND, OJJ],
LEU: [],
RND: [NOC],
NOC: [],
BLD: [NOC],
QHY: [ZBN],
XYU: [QHY]}","Node SMH is connected to nodes MFM, OJJ.
Node OJJ is connected to node MFM.
Node JHB is connected to nodes ZBN, MFM, WOC.
Node ZBN is connected to nodes AHZ, LEU.
Node WOC is connected to nodes QHY, RND, ZBN.
Node AHZ is connected to nodes SMH, NOC, RND, OJJ.
Node RND is connected to node NOC.
Node BLD is connected to node NOC.
Node QHY is connected to node ZBN.
Node XYU is connected to node QHY.","[QHY, ZBN, NOC, OJJ, WOC, BLD, MFM, SMH, AHZ, LEU, RND, JHB, XYU]",13,19,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JHB, BLD, XYU, WOC, QHY, ZBN, AHZ, LEU, SMH, RND, OJJ, NOC, MFM]","Let's solve it step by step.
Nodes with 0 in-degree: [JHB, BLD, XYU].
Visit node JHB and remove it from the graph.
Nodes with 0 in-degree: [BLD, XYU, WOC].
Visit node BLD and remove it from the graph.
Nodes with 0 in-degree: [XYU, WOC].
Visit node XYU and remove it from the graph.
Nodes with 0 in-degree: [WOC].
Visit node WOC and remove it from the graph.
Nodes with 0 in-degree: [QHY].
Visit node QHY and remove it from the graph.
Nodes with 0 in-degree: [ZBN].
Visit node ZBN and remove it from the graph.
Nodes with 0 in-degree: [AHZ, LEU].
Visit node AHZ and remove it from the graph.
Nodes with 0 in-degree: [LEU, SMH, RND].
Visit node LEU and remove it from the graph.
Nodes with 0 in-degree: [SMH, RND].
Visit node SMH and remove it from the graph.
Nodes with 0 in-degree: [RND, OJJ].
Visit node RND and remove it from the graph.
Nodes with 0 in-degree: [OJJ, NOC].
Visit node OJJ and remove it from the graph.
Nodes with 0 in-degree: [NOC, MFM].
Visit node NOC and remove it from the graph.
Nodes with 0 in-degree: [MFM].
Visit node MFM and remove it from the graph.
So the result of topological sorting is ","('[[JHB, BLD, XYU, WOC, QHY, ZBN, SMH, LEU, OJJ, AHZ, RND, MFM, NOC], [JHB, BLD, XYU, WOC, QHY, ZBN, AHZ, LEU, SMH, RND, OJJ, NOC, MFM], [JHB, BLD, XYU, WOC, RND, OJJ, NOC, MFM, QHY, ZBN, AHZ, LEU, SMH], [JHB, MFM, LEU, RND, XYU, BLD, AHZ, NOC, WOC, SMH, ZBN, QHY, OJJ]]',)",1,193
topological_sort,"[(POK, WFY), (WFY, IMT), (WFY, FIN), (FIN, YQO), (PRW, IVY), (IVY, ZHJ), (IVY, ELA), (ZHJ, WSG), (ZHJ, IMT), (ELA, WSG), (ELA, IMT), (CXR, IVY), (CXR, PRW), (CXR, FIN), (CXR, POK), (YQO, ZHJ), (YQO, IVY), (YQO, ELA)]","{POK: [WFY],
WFY: [IMT, FIN],
IMT: [],
FIN: [YQO],
PRW: [IVY],
IVY: [ZHJ, ELA],
ZHJ: [WSG, IMT],
ELA: [WSG, IMT],
CXR: [IVY, PRW, FIN, POK],
WSG: [],
YQO: [ZHJ, IVY, ELA]}","Node POK is connected to node WFY.
Node WFY is connected to nodes IMT, FIN.
Node FIN is connected to node YQO.
Node PRW is connected to node IVY.
Node IVY is connected to nodes ZHJ, ELA.
Node ZHJ is connected to nodes WSG, IMT.
Node ELA is connected to nodes WSG, IMT.
Node CXR is connected to nodes IVY, PRW, FIN, POK.
Node YQO is connected to nodes ZHJ, IVY, ELA.","[CXR, ELA, IVY, ZHJ, YQO, PRW, WFY, FIN, POK, WSG, IMT]",11,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CXR, PRW, POK, WFY, FIN, YQO, IVY, ZHJ, ELA, WSG, IMT]","Let's solve it step by step.
Nodes with 0 in-degree: [CXR].
Visit node CXR and remove it from the graph.
Nodes with 0 in-degree: [PRW, POK].
Visit node PRW and remove it from the graph.
Nodes with 0 in-degree: [POK].
Visit node POK and remove it from the graph.
Nodes with 0 in-degree: [WFY].
Visit node WFY and remove it from the graph.
Nodes with 0 in-degree: [FIN].
Visit node FIN and remove it from the graph.
Nodes with 0 in-degree: [YQO].
Visit node YQO and remove it from the graph.
Nodes with 0 in-degree: [IVY].
Visit node IVY and remove it from the graph.
Nodes with 0 in-degree: [ZHJ, ELA].
Visit node ZHJ and remove it from the graph.
Nodes with 0 in-degree: [ELA].
Visit node ELA and remove it from the graph.
Nodes with 0 in-degree: [WSG, IMT].
Visit node WSG and remove it from the graph.
Nodes with 0 in-degree: [IMT].
Visit node IMT and remove it from the graph.
So the result of topological sorting is ","('[[CXR, PRW, POK, WFY, FIN, YQO, IVY, ZHJ, ELA, WSG, IMT], [CXR, ZHJ, YQO, FIN, IVY, IMT, WSG, PRW, POK, ELA, WFY], [CXR, PRW, POK, WFY, FIN, ELA, WSG, ZHJ, YQO, IVY, IMT], [CXR, PRW, POK, ELA, WSG, IMT, WFY, FIN, YQO, IVY, ZHJ]]',)",0,194
topological_sort,"[(PSV, GBB), (PSV, PJS), (PSV, JXL), (PSV, LAM), (PSV, TBV), (GBB, ZAZ), (GBB, MJE), (GBB, TBV), (PJS, ZJI), (PJS, GBB), (PJS, TBV), (PJS, LAM), (JXL, MJE), (JXL, ZJI), (JXL, LAM), (TBV, LAM), (ZAZ, TBV), (ZAZ, LAM), (KYU, ZJI), (KYU, PSV), (KYU, JXL), (KYU, LAM), (KYU, TBV), (ZJI, TBV), (ZJI, ZAZ), (ZJI, MJE)]","{PSV: [GBB, PJS, JXL, LAM, TBV],
GBB: [ZAZ, MJE, TBV],
PJS: [ZJI, GBB, TBV, LAM],
JXL: [MJE, ZJI, LAM],
LAM: [],
TBV: [LAM],
ZAZ: [TBV, LAM],
MJE: [],
KYU: [ZJI, PSV, JXL, LAM, TBV],
ZJI: [TBV, ZAZ, MJE]}","Node PSV is connected to nodes GBB, PJS, JXL, LAM, TBV.
Node GBB is connected to nodes ZAZ, MJE, TBV.
Node PJS is connected to nodes ZJI, GBB, TBV, LAM.
Node JXL is connected to nodes MJE, ZJI, LAM.
Node TBV is connected to node LAM.
Node ZAZ is connected to nodes TBV, LAM.
Node KYU is connected to nodes ZJI, PSV, JXL, LAM, TBV.
Node ZJI is connected to nodes TBV, ZAZ, MJE.","[PSV, TBV, KYU, PJS, GBB, MJE, ZAZ, JXL, LAM, ZJI]",10,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KYU, PSV, PJS, JXL, GBB, ZJI, ZAZ, MJE, TBV, LAM]","Let's solve it step by step.
Nodes with 0 in-degree: [KYU].
Visit node KYU and remove it from the graph.
Nodes with 0 in-degree: [PSV].
Visit node PSV and remove it from the graph.
Nodes with 0 in-degree: [PJS, JXL].
Visit node PJS and remove it from the graph.
Nodes with 0 in-degree: [JXL, GBB].
Visit node JXL and remove it from the graph.
Nodes with 0 in-degree: [GBB, ZJI].
Visit node GBB and remove it from the graph.
Nodes with 0 in-degree: [ZJI].
Visit node ZJI and remove it from the graph.
Nodes with 0 in-degree: [ZAZ, MJE].
Visit node ZAZ and remove it from the graph.
Nodes with 0 in-degree: [MJE, TBV].
Visit node MJE and remove it from the graph.
Nodes with 0 in-degree: [TBV].
Visit node TBV and remove it from the graph.
Nodes with 0 in-degree: [LAM].
Visit node LAM and remove it from the graph.
So the result of topological sorting is ","('[[KYU, PSV, PJS, MJE, TBV, LAM, JXL, GBB, ZJI, ZAZ], [KYU, GBB, LAM, TBV, MJE, ZJI, PSV, ZAZ, JXL, PJS], [KYU, PSV, PJS, JXL, GBB, ZJI, ZAZ, MJE, TBV, LAM], [KYU, PSV, PJS, JXL, GBB, ZJI, MJE, ZAZ, TBV, LAM]]',)",2,195
topological_sort,"[(QLF, SHS), (QLF, ICJ), (ICJ, SHS), (PAQ, BYI), (PAQ, LTT), (PAQ, YMP), (PAQ, SHS), (BYI, SHS), (BYI, LTT), (LTT, QLF), (LTT, SHS), (YMP, BYI), (QHL, BBP), (QHL, QLF), (QHL, OYP), (BBP, EIB), (BBP, PAQ), (BBP, KSA), (BBP, YMP), (BBP, QLF), (OYP, YMP), (OYP, QLF), (OYP, BYI), (EIB, BYI), (EIB, SHS), (EIB, PAQ), (EIB, QLF), (KSA, BYI), (KSA, OYP), (KSA, EIB), (KSA, ICJ), (KSA, LTT), (LSR, BBP), (LSR, LTT), (LSR, QLF), (LSR, PAQ), (LSR, YMP), (LSR, KSA), (LSR, SHS)]","{QLF: [SHS, ICJ],
SHS: [],
ICJ: [SHS],
PAQ: [BYI, LTT, YMP, SHS],
BYI: [SHS, LTT],
LTT: [QLF, SHS],
YMP: [BYI],
QHL: [BBP, QLF, OYP],
BBP: [EIB, PAQ, KSA, YMP, QLF],
OYP: [YMP, QLF, BYI],
EIB: [BYI, SHS, PAQ, QLF],
KSA: [BYI, OYP, EIB, ICJ, LTT],
LSR: [BBP, LTT, QLF, PAQ, YMP, KSA, SHS]}","Node QLF is connected to nodes SHS, ICJ.
Node ICJ is connected to node SHS.
Node PAQ is connected to nodes BYI, LTT, YMP, SHS.
Node BYI is connected to nodes SHS, LTT.
Node LTT is connected to nodes QLF, SHS.
Node YMP is connected to node BYI.
Node QHL is connected to nodes BBP, QLF, OYP.
Node BBP is connected to nodes EIB, PAQ, KSA, YMP, QLF.
Node OYP is connected to nodes YMP, QLF, BYI.
Node EIB is connected to nodes BYI, SHS, PAQ, QLF.
Node KSA is connected to nodes BYI, OYP, EIB, ICJ, LTT.
Node LSR is connected to nodes BBP, LTT, QLF, PAQ, YMP, KSA, SHS.","[PAQ, YMP, QHL, OYP, SHS, ICJ, EIB, LSR, LTT, BBP, KSA, QLF, BYI]",13,39,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QHL, LSR, BBP, KSA, OYP, EIB, PAQ, YMP, BYI, LTT, QLF, ICJ, SHS]","Let's solve it step by step.
Nodes with 0 in-degree: [QHL, LSR].
Visit node QHL and remove it from the graph.
Nodes with 0 in-degree: [LSR].
Visit node LSR and remove it from the graph.
Nodes with 0 in-degree: [BBP].
Visit node BBP and remove it from the graph.
Nodes with 0 in-degree: [KSA].
Visit node KSA and remove it from the graph.
Nodes with 0 in-degree: [OYP, EIB].
Visit node OYP and remove it from the graph.
Nodes with 0 in-degree: [EIB].
Visit node EIB and remove it from the graph.
Nodes with 0 in-degree: [PAQ].
Visit node PAQ and remove it from the graph.
Nodes with 0 in-degree: [YMP].
Visit node YMP and remove it from the graph.
Nodes with 0 in-degree: [BYI].
Visit node BYI and remove it from the graph.
Nodes with 0 in-degree: [LTT].
Visit node LTT and remove it from the graph.
Nodes with 0 in-degree: [QLF].
Visit node QLF and remove it from the graph.
Nodes with 0 in-degree: [ICJ].
Visit node ICJ and remove it from the graph.
Nodes with 0 in-degree: [SHS].
Visit node SHS and remove it from the graph.
So the result of topological sorting is ","('[[QHL, LSR, BBP, KSA, LTT, QLF, ICJ, SHS, OYP, EIB, PAQ, YMP, BYI], [QHL, LSR, BBP, KSA, OYP, EIB, PAQ, YMP, BYI, LTT, QLF, ICJ, SHS], [QHL, YMP, LTT, BBP, KSA, PAQ, BYI, ICJ, QLF, SHS, LSR, OYP, EIB], [QHL, LSR, BBP, KSA, OYP, EIB, YMP, BYI, ICJ, QLF, LTT, SHS, PAQ]]',)",1,196
topological_sort,"[(CIG, VAK), (VAK, YZN), (DMA, OHM), (DMA, LDH), (DMA, PYQ), (OHM, CIG), (OHM, XJD), (LDH, BQZ), (LDH, OHM), (PYQ, OHM), (PYQ, BQZ), (XJD, YZN), (HJM, VAK), (HJM, SAK), (HJM, BQZ), (SAK, VAK), (SAK, XJD), (BQZ, YZN), (BQZ, CIG), (BQZ, XJD), (BQZ, VAK), (MVM, CIG), (MVM, ADK), (MVM, YZN), (MVM, SAK), (MVM, JIK), (MVM, OHM), (ADK, PYQ), (ADK, SAK), (ADK, HJM), (ADK, JIK), (JIK, YZN), (JIK, LDH), (JIK, DMA)]","{CIG: [VAK],
VAK: [YZN],
YZN: [],
DMA: [OHM, LDH, PYQ],
OHM: [CIG, XJD],
LDH: [BQZ, OHM],
PYQ: [OHM, BQZ],
XJD: [YZN],
HJM: [VAK, SAK, BQZ],
SAK: [VAK, XJD],
BQZ: [YZN, CIG, XJD, VAK],
MVM: [CIG, ADK, YZN, SAK, JIK, OHM],
ADK: [PYQ, SAK, HJM, JIK],
JIK: [YZN, LDH, DMA]}","Node CIG is connected to node VAK.
Node VAK is connected to node YZN.
Node DMA is connected to nodes OHM, LDH, PYQ.
Node OHM is connected to nodes CIG, XJD.
Node LDH is connected to nodes BQZ, OHM.
Node PYQ is connected to nodes OHM, BQZ.
Node XJD is connected to node YZN.
Node HJM is connected to nodes VAK, SAK, BQZ.
Node SAK is connected to nodes VAK, XJD.
Node BQZ is connected to nodes YZN, CIG, XJD, VAK.
Node MVM is connected to nodes CIG, ADK, YZN, SAK, JIK, OHM.
Node ADK is connected to nodes PYQ, SAK, HJM, JIK.
Node JIK is connected to nodes YZN, LDH, DMA.","[XJD, VAK, ADK, JIK, LDH, SAK, HJM, BQZ, DMA, OHM, CIG, YZN, PYQ, MVM]",14,34,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MVM, ADK, HJM, JIK, SAK, DMA, LDH, PYQ, OHM, BQZ, CIG, XJD, VAK, YZN]","Let's solve it step by step.
Nodes with 0 in-degree: [MVM].
Visit node MVM and remove it from the graph.
Nodes with 0 in-degree: [ADK].
Visit node ADK and remove it from the graph.
Nodes with 0 in-degree: [HJM, JIK].
Visit node HJM and remove it from the graph.
Nodes with 0 in-degree: [JIK, SAK].
Visit node JIK and remove it from the graph.
Nodes with 0 in-degree: [SAK, DMA].
Visit node SAK and remove it from the graph.
Nodes with 0 in-degree: [DMA].
Visit node DMA and remove it from the graph.
Nodes with 0 in-degree: [LDH, PYQ].
Visit node LDH and remove it from the graph.
Nodes with 0 in-degree: [PYQ].
Visit node PYQ and remove it from the graph.
Nodes with 0 in-degree: [OHM, BQZ].
Visit node OHM and remove it from the graph.
Nodes with 0 in-degree: [BQZ].
Visit node BQZ and remove it from the graph.
Nodes with 0 in-degree: [CIG, XJD].
Visit node CIG and remove it from the graph.
Nodes with 0 in-degree: [XJD, VAK].
Visit node XJD and remove it from the graph.
Nodes with 0 in-degree: [VAK].
Visit node VAK and remove it from the graph.
Nodes with 0 in-degree: [YZN].
Visit node YZN and remove it from the graph.
So the result of topological sorting is ","('[[MVM, ADK, HJM, JIK, CIG, XJD, VAK, YZN, SAK, DMA, LDH, PYQ, OHM, BQZ], [MVM, VAK, BQZ, HJM, JIK, YZN, SAK, OHM, XJD, DMA, CIG, LDH, PYQ, ADK], [MVM, ADK, HJM, JIK, SAK, DMA, LDH, PYQ, OHM, BQZ, CIG, XJD, VAK, YZN], [MVM, ADK, HJM, JIK, SAK, DMA, LDH, CIG, BQZ, YZN, PYQ, OHM, XJD, VAK]]',)",2,197
topological_sort,"[(ZZH, RLF), (ZZH, KVE), (RLF, FQG), (RLF, IJJ), (RLF, ADV), (FQG, AWY), (IJJ, AWY), (ADV, KVE), (ADV, FQG), (AWY, KVE), (PPD, ADV), (PPD, IJJ)]","{ZZH: [RLF, KVE],
RLF: [FQG, IJJ, ADV],
KVE: [],
FQG: [AWY],
IJJ: [AWY],
ADV: [KVE, FQG],
AWY: [KVE],
PPD: [ADV, IJJ]}","Node ZZH is connected to nodes RLF, KVE.
Node RLF is connected to nodes FQG, IJJ, ADV.
Node FQG is connected to node AWY.
Node IJJ is connected to node AWY.
Node ADV is connected to nodes KVE, FQG.
Node AWY is connected to node KVE.
Node PPD is connected to nodes ADV, IJJ.","[IJJ, FQG, ZZH, RLF, PPD, ADV, KVE, AWY]",8,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZZH, PPD, RLF, IJJ, ADV, FQG, AWY, KVE]","Let's solve it step by step.
Nodes with 0 in-degree: [ZZH, PPD].
Visit node ZZH and remove it from the graph.
Nodes with 0 in-degree: [PPD, RLF].
Visit node PPD and remove it from the graph.
Nodes with 0 in-degree: [RLF].
Visit node RLF and remove it from the graph.
Nodes with 0 in-degree: [IJJ, ADV].
Visit node IJJ and remove it from the graph.
Nodes with 0 in-degree: [ADV].
Visit node ADV and remove it from the graph.
Nodes with 0 in-degree: [FQG].
Visit node FQG and remove it from the graph.
Nodes with 0 in-degree: [AWY].
Visit node AWY and remove it from the graph.
Nodes with 0 in-degree: [KVE].
Visit node KVE and remove it from the graph.
So the result of topological sorting is ","('[[ZZH, PPD, RLF, IJJ, FQG, AWY, ADV, KVE], [ZZH, RLF, AWY, ADV, IJJ, KVE, FQG, PPD], [ZZH, PPD, AWY, KVE, RLF, IJJ, ADV, FQG], [ZZH, PPD, RLF, IJJ, ADV, FQG, AWY, KVE]]',)",3,198
topological_sort,"[(LDI, AVB), (LDI, QCC), (QCC, AVB), (KXR, IWL), (KXR, JUR), (IWL, JUR), (IWL, CYT), (IWL, MGV), (JUR, CYT), (JUR, QCC), (CYT, QCC), (CYT, AVB), (MGV, CYT), (MGV, LDI), (PCV, AVB), (PCV, CYT), (PCV, IWL), (PCV, MGV), (FYE, KXR), (FYE, QCC)]","{LDI: [AVB, QCC],
AVB: [],
QCC: [AVB],
KXR: [IWL, JUR],
IWL: [JUR, CYT, MGV],
JUR: [CYT, QCC],
CYT: [QCC, AVB],
MGV: [CYT, LDI],
PCV: [AVB, CYT, IWL, MGV],
FYE: [KXR, QCC]}","Node LDI is connected to nodes AVB, QCC.
Node QCC is connected to node AVB.
Node KXR is connected to nodes IWL, JUR.
Node IWL is connected to nodes JUR, CYT, MGV.
Node JUR is connected to nodes CYT, QCC.
Node CYT is connected to nodes QCC, AVB.
Node MGV is connected to nodes CYT, LDI.
Node PCV is connected to nodes AVB, CYT, IWL, MGV.
Node FYE is connected to nodes KXR, QCC.","[JUR, QCC, AVB, MGV, KXR, FYE, PCV, CYT, IWL, LDI]",10,20,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PCV, FYE, KXR, IWL, JUR, MGV, CYT, LDI, QCC, AVB]","Let's solve it step by step.
Nodes with 0 in-degree: [PCV, FYE].
Visit node PCV and remove it from the graph.
Nodes with 0 in-degree: [FYE].
Visit node FYE and remove it from the graph.
Nodes with 0 in-degree: [KXR].
Visit node KXR and remove it from the graph.
Nodes with 0 in-degree: [IWL].
Visit node IWL and remove it from the graph.
Nodes with 0 in-degree: [JUR, MGV].
Visit node JUR and remove it from the graph.
Nodes with 0 in-degree: [MGV].
Visit node MGV and remove it from the graph.
Nodes with 0 in-degree: [CYT, LDI].
Visit node CYT and remove it from the graph.
Nodes with 0 in-degree: [LDI].
Visit node LDI and remove it from the graph.
Nodes with 0 in-degree: [QCC].
Visit node QCC and remove it from the graph.
Nodes with 0 in-degree: [AVB].
Visit node AVB and remove it from the graph.
So the result of topological sorting is ","('[[PCV, FYE, KXR, IWL, JUR, AVB, LDI, MGV, CYT, QCC], [PCV, FYE, KXR, IWL, JUR, MGV, CYT, LDI, QCC, AVB], [PCV, KXR, MGV, AVB, CYT, IWL, LDI, JUR, FYE, QCC], [PCV, FYE, KXR, LDI, QCC, AVB, IWL, JUR, MGV, CYT]]',)",1,199
topological_sort,"[(CHD, KJP), (CHD, BXN), (KJP, XLD), (BXN, KJP), (BXN, OPG), (OAR, KJP), (OAR, ZKR), (OAR, XLD), (OAR, GCZ), (OAR, BXN), (ZKR, CHD), (ZKR, XLD)]","{CHD: [KJP, BXN],
KJP: [XLD],
BXN: [KJP, OPG],
XLD: [],
OAR: [KJP, ZKR, XLD, GCZ, BXN],
ZKR: [CHD, XLD],
GCZ: [],
OPG: []}","Node CHD is connected to nodes KJP, BXN.
Node KJP is connected to node XLD.
Node BXN is connected to nodes KJP, OPG.
Node OAR is connected to nodes KJP, ZKR, XLD, GCZ, BXN.
Node ZKR is connected to nodes CHD, XLD.","[OAR, CHD, GCZ, XLD, ZKR, OPG, BXN, KJP]",8,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OAR, ZKR, GCZ, CHD, BXN, KJP, OPG, XLD]","Let's solve it step by step.
Nodes with 0 in-degree: [OAR].
Visit node OAR and remove it from the graph.
Nodes with 0 in-degree: [ZKR, GCZ].
Visit node ZKR and remove it from the graph.
Nodes with 0 in-degree: [GCZ, CHD].
Visit node GCZ and remove it from the graph.
Nodes with 0 in-degree: [CHD].
Visit node CHD and remove it from the graph.
Nodes with 0 in-degree: [BXN].
Visit node BXN and remove it from the graph.
Nodes with 0 in-degree: [KJP, OPG].
Visit node KJP and remove it from the graph.
Nodes with 0 in-degree: [OPG, XLD].
Visit node OPG and remove it from the graph.
Nodes with 0 in-degree: [XLD].
Visit node XLD and remove it from the graph.
So the result of topological sorting is ","('[[OAR, ZKR, GCZ, CHD, BXN, KJP, OPG, XLD], [OAR, ZKR, OPG, XLD, GCZ, CHD, BXN, KJP], [OAR, GCZ, XLD, BXN, CHD, ZKR, OPG, KJP], [OAR, ZKR, GCZ, CHD, XLD, KJP, OPG, BXN]]',)",0,200
topological_sort,"[(IAJ, SOH), (SOH, GWI), (QAE, BAC), (QAE, PNZ), (QAE, GWI), (BAC, GWI), (BAC, SOH), (BAC, IAJ), (PNZ, SOH), (EZW, QAE), (EZW, PNZ), (EZW, IAJ), (EZW, BAC), (WUJ, MUT), (WUJ, IAJ), (WUJ, SOH), (WUJ, PNZ), (WUJ, BAC), (WUJ, GWI), (MUT, SOH), (MUT, EZW), (MUT, GWI), (MUT, IAJ), (HIU, IAJ), (HIU, MUT), (HIU, WUJ)]","{IAJ: [SOH],
SOH: [GWI],
GWI: [],
QAE: [BAC, PNZ, GWI],
BAC: [GWI, SOH, IAJ],
PNZ: [SOH],
EZW: [QAE, PNZ, IAJ, BAC],
WUJ: [MUT, IAJ, SOH, PNZ, BAC, GWI],
MUT: [SOH, EZW, GWI, IAJ],
HIU: [IAJ, MUT, WUJ]}","Node IAJ is connected to node SOH.
Node SOH is connected to node GWI.
Node QAE is connected to nodes BAC, PNZ, GWI.
Node BAC is connected to nodes GWI, SOH, IAJ.
Node PNZ is connected to node SOH.
Node EZW is connected to nodes QAE, PNZ, IAJ, BAC.
Node WUJ is connected to nodes MUT, IAJ, SOH, PNZ, BAC, GWI.
Node MUT is connected to nodes SOH, EZW, GWI, IAJ.
Node HIU is connected to nodes IAJ, MUT, WUJ.","[MUT, GWI, HIU, BAC, WUJ, PNZ, SOH, QAE, EZW, IAJ]",10,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HIU, WUJ, MUT, EZW, QAE, BAC, PNZ, IAJ, SOH, GWI]","Let's solve it step by step.
Nodes with 0 in-degree: [HIU].
Visit node HIU and remove it from the graph.
Nodes with 0 in-degree: [WUJ].
Visit node WUJ and remove it from the graph.
Nodes with 0 in-degree: [MUT].
Visit node MUT and remove it from the graph.
Nodes with 0 in-degree: [EZW].
Visit node EZW and remove it from the graph.
Nodes with 0 in-degree: [QAE].
Visit node QAE and remove it from the graph.
Nodes with 0 in-degree: [BAC, PNZ].
Visit node BAC and remove it from the graph.
Nodes with 0 in-degree: [PNZ, IAJ].
Visit node PNZ and remove it from the graph.
Nodes with 0 in-degree: [IAJ].
Visit node IAJ and remove it from the graph.
Nodes with 0 in-degree: [SOH].
Visit node SOH and remove it from the graph.
Nodes with 0 in-degree: [GWI].
Visit node GWI and remove it from the graph.
So the result of topological sorting is ","('[[HIU, WUJ, MUT, EZW, QAE, PNZ, BAC, GWI, IAJ, SOH], [HIU, SOH, GWI, BAC, IAJ, MUT, PNZ, QAE, WUJ, EZW], [HIU, WUJ, MUT, EZW, QAE, BAC, PNZ, IAJ, SOH, GWI], [HIU, WUJ, MUT, IAJ, SOH, GWI, EZW, QAE, BAC, PNZ]]',)",2,201
topological_sort,"[(YVX, JAD), (JAD, BZZ), (BZZ, MSV), (MSV, ZZP), (ZZP, UBB), (ZZP, LYH), (ZZP, BNX), (LYH, UBB), (LYH, LOJ), (LYH, KLE), (BNX, LYH), (PIR, ZZP), (PIR, LYH)]","{YVX: [JAD],
JAD: [BZZ],
BZZ: [MSV],
MSV: [ZZP],
ZZP: [UBB, LYH, BNX],
UBB: [],
LYH: [UBB, LOJ, KLE],
BNX: [LYH],
LOJ: [],
KLE: [],
PIR: [ZZP, LYH]}","Node YVX is connected to node JAD.
Node JAD is connected to node BZZ.
Node BZZ is connected to node MSV.
Node MSV is connected to node ZZP.
Node ZZP is connected to nodes UBB, LYH, BNX.
Node LYH is connected to nodes UBB, LOJ, KLE.
Node BNX is connected to node LYH.
Node PIR is connected to nodes ZZP, LYH.","[ZZP, KLE, BNX, PIR, UBB, JAD, MSV, BZZ, LOJ, LYH, YVX]",11,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YVX, PIR, JAD, BZZ, MSV, ZZP, BNX, LYH, UBB, LOJ, KLE]","Let's solve it step by step.
Nodes with 0 in-degree: [YVX, PIR].
Visit node YVX and remove it from the graph.
Nodes with 0 in-degree: [PIR, JAD].
Visit node PIR and remove it from the graph.
Nodes with 0 in-degree: [JAD].
Visit node JAD and remove it from the graph.
Nodes with 0 in-degree: [BZZ].
Visit node BZZ and remove it from the graph.
Nodes with 0 in-degree: [MSV].
Visit node MSV and remove it from the graph.
Nodes with 0 in-degree: [ZZP].
Visit node ZZP and remove it from the graph.
Nodes with 0 in-degree: [BNX].
Visit node BNX and remove it from the graph.
Nodes with 0 in-degree: [LYH].
Visit node LYH and remove it from the graph.
Nodes with 0 in-degree: [UBB, LOJ, KLE].
Visit node UBB and remove it from the graph.
Nodes with 0 in-degree: [LOJ, KLE].
Visit node LOJ and remove it from the graph.
Nodes with 0 in-degree: [KLE].
Visit node KLE and remove it from the graph.
So the result of topological sorting is ","('[[YVX, BZZ, KLE, ZZP, JAD, LOJ, BNX, MSV, LYH, PIR, UBB], [YVX, PIR, JAD, BZZ, MSV, ZZP, BNX, LYH, UBB, LOJ, KLE], [YVX, PIR, JAD, BZZ, MSV, ZZP, BNX, LOJ, LYH, KLE, UBB], [YVX, PIR, JAD, UBB, LOJ, KLE, BZZ, MSV, ZZP, BNX, LYH]]',)",1,202
topological_sort,"[(RCY, DMX), (DMX, WBS), (WBS, GEN), (ZCD, GEN), (ZCD, DMX), (GEN, XOA), (XOA, ZII), (UFQ, WBS), (UFQ, RCY), (RBS, UFQ), (EPG, UFQ), (EPG, ZCD), (QLE, REQ), (REQ, ZCD), (REQ, RBS), (MTX, WBS), (MTX, DMX), (ECV, ZSW)]","{RCY: [DMX],
DMX: [WBS],
WBS: [GEN],
ZCD: [GEN, DMX],
GEN: [XOA],
XOA: [ZII],
UFQ: [WBS, RCY],
ZII: [],
RBS: [UFQ],
EPG: [UFQ, ZCD],
QLE: [REQ],
REQ: [ZCD, RBS],
MTX: [WBS, DMX],
ECV: [ZSW],
ZSW: []}","Node RCY is connected to node DMX.
Node DMX is connected to node WBS.
Node WBS is connected to node GEN.
Node ZCD is connected to nodes GEN, DMX.
Node GEN is connected to node XOA.
Node XOA is connected to node ZII.
Node UFQ is connected to nodes WBS, RCY.
Node RBS is connected to node UFQ.
Node EPG is connected to nodes UFQ, ZCD.
Node QLE is connected to node REQ.
Node REQ is connected to nodes ZCD, RBS.
Node MTX is connected to nodes WBS, DMX.
Node ECV is connected to node ZSW.","[XOA, ZSW, ECV, EPG, GEN, DMX, RBS, RCY, REQ, ZII, MTX, QLE, WBS, UFQ, ZCD]",15,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EPG, QLE, MTX, ECV, REQ, ZSW, ZCD, RBS, UFQ, RCY, DMX, WBS, GEN, XOA, ZII]","Let's solve it step by step.
Nodes with 0 in-degree: [EPG, QLE, MTX, ECV].
Visit node EPG and remove it from the graph.
Nodes with 0 in-degree: [QLE, MTX, ECV].
Visit node QLE and remove it from the graph.
Nodes with 0 in-degree: [MTX, ECV, REQ].
Visit node MTX and remove it from the graph.
Nodes with 0 in-degree: [ECV, REQ].
Visit node ECV and remove it from the graph.
Nodes with 0 in-degree: [REQ, ZSW].
Visit node REQ and remove it from the graph.
Nodes with 0 in-degree: [ZSW, ZCD, RBS].
Visit node ZSW and remove it from the graph.
Nodes with 0 in-degree: [ZCD, RBS].
Visit node ZCD and remove it from the graph.
Nodes with 0 in-degree: [RBS].
Visit node RBS and remove it from the graph.
Nodes with 0 in-degree: [UFQ].
Visit node UFQ and remove it from the graph.
Nodes with 0 in-degree: [RCY].
Visit node RCY and remove it from the graph.
Nodes with 0 in-degree: [DMX].
Visit node DMX and remove it from the graph.
Nodes with 0 in-degree: [WBS].
Visit node WBS and remove it from the graph.
Nodes with 0 in-degree: [GEN].
Visit node GEN and remove it from the graph.
Nodes with 0 in-degree: [XOA].
Visit node XOA and remove it from the graph.
Nodes with 0 in-degree: [ZII].
Visit node ZII and remove it from the graph.
So the result of topological sorting is ","('[[EPG, QLE, MTX, ECV, REQ, DMX, WBS, GEN, XOA, ZII, ZSW, ZCD, RBS, UFQ, RCY], [EPG, QLE, MTX, ECV, REQ, ZSW, ZCD, RBS, UFQ, RCY, DMX, WBS, GEN, XOA, ZII], [EPG, QLE, MTX, ECV, REQ, ZSW, ZCD, ZII, GEN, UFQ, WBS, XOA, RCY, RBS, DMX], [EPG, UFQ, MTX, ZSW, GEN, ECV, ZII, XOA, RBS, RCY, WBS, DMX, QLE, ZCD, REQ]]',)",1,203
topological_sort,"[(HYB, ALO), (HYB, RNF), (HYB, WJP), (HYB, JNX), (ALO, DFQ), (ALO, DZN), (RNF, DZN), (RNF, ALO), (WJP, ALO), (JNX, RSB), (JNX, ALO), (DFQ, RSB), (DFQ, SUK), (DZN, DFQ), (UGR, WJP), (UGR, JNX), (UGR, DFQ), (UGR, RNF)]","{HYB: [ALO, RNF, WJP, JNX],
ALO: [DFQ, DZN],
RNF: [DZN, ALO],
WJP: [ALO],
JNX: [RSB, ALO],
DFQ: [RSB, SUK],
DZN: [DFQ],
RSB: [],
SUK: [],
UGR: [WJP, JNX, DFQ, RNF]}","Node HYB is connected to nodes ALO, RNF, WJP, JNX.
Node ALO is connected to nodes DFQ, DZN.
Node RNF is connected to nodes DZN, ALO.
Node WJP is connected to node ALO.
Node JNX is connected to nodes RSB, ALO.
Node DFQ is connected to nodes RSB, SUK.
Node DZN is connected to node DFQ.
Node UGR is connected to nodes WJP, JNX, DFQ, RNF.","[JNX, DZN, HYB, DFQ, ALO, UGR, WJP, RSB, RNF, SUK]",10,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HYB, UGR, WJP, JNX, RNF, ALO, DZN, DFQ, RSB, SUK]","Let's solve it step by step.
Nodes with 0 in-degree: [HYB, UGR].
Visit node HYB and remove it from the graph.
Nodes with 0 in-degree: [UGR].
Visit node UGR and remove it from the graph.
Nodes with 0 in-degree: [WJP, JNX, RNF].
Visit node WJP and remove it from the graph.
Nodes with 0 in-degree: [JNX, RNF].
Visit node JNX and remove it from the graph.
Nodes with 0 in-degree: [RNF].
Visit node RNF and remove it from the graph.
Nodes with 0 in-degree: [ALO].
Visit node ALO and remove it from the graph.
Nodes with 0 in-degree: [DZN].
Visit node DZN and remove it from the graph.
Nodes with 0 in-degree: [DFQ].
Visit node DFQ and remove it from the graph.
Nodes with 0 in-degree: [RSB, SUK].
Visit node RSB and remove it from the graph.
Nodes with 0 in-degree: [SUK].
Visit node SUK and remove it from the graph.
So the result of topological sorting is ","('[[HYB, UGR, WJP, JNX, RNF, ALO, DZN, DFQ, RSB, SUK], [HYB, UGR, WJP, DFQ, RSB, SUK, JNX, RNF, ALO, DZN], [HYB, UGR, WJP, JNX, RNF, RSB, DZN, SUK, ALO, DFQ], [HYB, RNF, ALO, UGR, DFQ, JNX, WJP, DZN, SUK, RSB]]',)",0,204
topological_sort,"[(JGC, RAV), (JGC, KTI), (JGC, KWW), (JGC, TFK), (JGC, YBP), (TFK, KWW), (TFK, RAV), (TFK, KTI), (TFK, CJQ), (YBP, RAV), (YBP, KWW), (YBP, KTI), (YBP, NOY), (NOY, KTI), (CJQ, KWW), (CJQ, NOY), (TEV, JGC), (TEV, CJQ), (TEV, TFK)]","{JGC: [RAV, KTI, KWW, TFK, YBP],
RAV: [],
KTI: [],
KWW: [],
TFK: [KWW, RAV, KTI, CJQ],
YBP: [RAV, KWW, KTI, NOY],
NOY: [KTI],
CJQ: [KWW, NOY],
TEV: [JGC, CJQ, TFK]}","Node JGC is connected to nodes RAV, KTI, KWW, TFK, YBP.
Node TFK is connected to nodes KWW, RAV, KTI, CJQ.
Node YBP is connected to nodes RAV, KWW, KTI, NOY.
Node NOY is connected to node KTI.
Node CJQ is connected to nodes KWW, NOY.
Node TEV is connected to nodes JGC, CJQ, TFK.","[JGC, KWW, TEV, YBP, KTI, RAV, CJQ, TFK, NOY]",9,19,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TEV, JGC, TFK, YBP, CJQ, RAV, KWW, NOY, KTI]","Let's solve it step by step.
Nodes with 0 in-degree: [TEV].
Visit node TEV and remove it from the graph.
Nodes with 0 in-degree: [JGC].
Visit node JGC and remove it from the graph.
Nodes with 0 in-degree: [TFK, YBP].
Visit node TFK and remove it from the graph.
Nodes with 0 in-degree: [YBP, CJQ].
Visit node YBP and remove it from the graph.
Nodes with 0 in-degree: [CJQ, RAV].
Visit node CJQ and remove it from the graph.
Nodes with 0 in-degree: [RAV, KWW, NOY].
Visit node RAV and remove it from the graph.
Nodes with 0 in-degree: [KWW, NOY].
Visit node KWW and remove it from the graph.
Nodes with 0 in-degree: [NOY].
Visit node NOY and remove it from the graph.
Nodes with 0 in-degree: [KTI].
Visit node KTI and remove it from the graph.
So the result of topological sorting is ","('[[TEV, JGC, TFK, YBP, CJQ, RAV, KWW, NOY, KTI], [TEV, JGC, TFK, YBP, KWW, NOY, KTI, RAV, CJQ], [TEV, NOY, JGC, RAV, KTI, YBP, TFK, KWW, CJQ], [TEV, JGC, TFK, KWW, NOY, KTI, YBP, CJQ, RAV]]',)",0,205
topological_sort,"[(NHE, WWL), (NAZ, IHB), (NAZ, WWL), (NAZ, WRM), (IHB, GIN), (IHB, ITR), (GIN, WWL), (GIN, WRM), (GAO, NHE), (GAO, IHB), (QAS, ITR), (QAS, GAO), (QAS, WRM), (NMY, QAS), (NMY, NAZ), (LHT, WWL)]","{NHE: [WWL],
WWL: [],
NAZ: [IHB, WWL, WRM],
IHB: [GIN, ITR],
WRM: [],
GIN: [WWL, WRM],
ITR: [],
GAO: [NHE, IHB],
QAS: [ITR, GAO, WRM],
NMY: [QAS, NAZ],
LHT: [WWL]}","Node NHE is connected to node WWL.
Node NAZ is connected to nodes IHB, WWL, WRM.
Node IHB is connected to nodes GIN, ITR.
Node GIN is connected to nodes WWL, WRM.
Node GAO is connected to nodes NHE, IHB.
Node QAS is connected to nodes ITR, GAO, WRM.
Node NMY is connected to nodes QAS, NAZ.
Node LHT is connected to node WWL.","[LHT, GAO, QAS, GIN, WWL, IHB, NAZ, ITR, NHE, NMY, WRM]",11,16,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[NMY, LHT, QAS, NAZ, GAO, NHE, IHB, GIN, ITR, WWL, WRM]","Let's solve it step by step.
Nodes with 0 in-degree: [NMY, LHT].
Visit node NMY and remove it from the graph.
Nodes with 0 in-degree: [LHT, QAS, NAZ].
Visit node LHT and remove it from the graph.
Nodes with 0 in-degree: [QAS, NAZ].
Visit node QAS and remove it from the graph.
Nodes with 0 in-degree: [NAZ, GAO].
Visit node NAZ and remove it from the graph.
Nodes with 0 in-degree: [GAO].
Visit node GAO and remove it from the graph.
Nodes with 0 in-degree: [NHE, IHB].
Visit node NHE and remove it from the graph.
Nodes with 0 in-degree: [IHB].
Visit node IHB and remove it from the graph.
Nodes with 0 in-degree: [GIN, ITR].
Visit node GIN and remove it from the graph.
Nodes with 0 in-degree: [ITR, WWL, WRM].
Visit node ITR and remove it from the graph.
Nodes with 0 in-degree: [WWL, WRM].
Visit node WWL and remove it from the graph.
Nodes with 0 in-degree: [WRM].
Visit node WRM and remove it from the graph.
So the result of topological sorting is ","('[[NMY, LHT, WWL, QAS, IHB, ITR, GAO, NHE, WRM, GIN, NAZ], [NMY, LHT, QAS, NAZ, GAO, IHB, ITR, NHE, WRM, WWL, GIN], [NMY, LHT, QAS, ITR, WWL, WRM, NAZ, GAO, NHE, IHB, GIN], [NMY, LHT, QAS, NAZ, GAO, NHE, IHB, GIN, ITR, WWL, WRM]]',)",3,206
topological_sort,"[(MQS, ACD), (MQS, KRG), (MQS, HIE), (ACD, FPW), (ACD, CMJ), (KRG, HIE), (KRG, ACD), (HIE, FPW), (CMJ, FPW), (CMJ, HIE), (TMA, MQS), (TMA, QVO), (QVO, KRG), (QVO, FPW), (QVO, ACD), (QVO, CMJ), (CYR, TMA), (CYR, HIE), (CYR, FPW), (CYR, KRG), (CYR, ACD)]","{MQS: [ACD, KRG, HIE],
ACD: [FPW, CMJ],
KRG: [HIE, ACD],
HIE: [FPW],
FPW: [],
CMJ: [FPW, HIE],
TMA: [MQS, QVO],
QVO: [KRG, FPW, ACD, CMJ],
CYR: [TMA, HIE, FPW, KRG, ACD]}","Node MQS is connected to nodes ACD, KRG, HIE.
Node ACD is connected to nodes FPW, CMJ.
Node KRG is connected to nodes HIE, ACD.
Node HIE is connected to node FPW.
Node CMJ is connected to nodes FPW, HIE.
Node TMA is connected to nodes MQS, QVO.
Node QVO is connected to nodes KRG, FPW, ACD, CMJ.
Node CYR is connected to nodes TMA, HIE, FPW, KRG, ACD.","[TMA, MQS, FPW, CMJ, QVO, HIE, CYR, ACD, KRG]",9,21,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CYR, TMA, MQS, QVO, KRG, ACD, CMJ, HIE, FPW]","Let's solve it step by step.
Nodes with 0 in-degree: [CYR].
Visit node CYR and remove it from the graph.
Nodes with 0 in-degree: [TMA].
Visit node TMA and remove it from the graph.
Nodes with 0 in-degree: [MQS, QVO].
Visit node MQS and remove it from the graph.
Nodes with 0 in-degree: [QVO].
Visit node QVO and remove it from the graph.
Nodes with 0 in-degree: [KRG].
Visit node KRG and remove it from the graph.
Nodes with 0 in-degree: [ACD].
Visit node ACD and remove it from the graph.
Nodes with 0 in-degree: [CMJ].
Visit node CMJ and remove it from the graph.
Nodes with 0 in-degree: [HIE].
Visit node HIE and remove it from the graph.
Nodes with 0 in-degree: [FPW].
Visit node FPW and remove it from the graph.
So the result of topological sorting is ","('[[CYR, TMA, MQS, QVO, KRG, ACD, CMJ, HIE, FPW], [CYR, TMA, MQS, QVO, HIE, ACD, KRG, CMJ, FPW], [CYR, TMA, MQS, CMJ, HIE, FPW, QVO, KRG, ACD], [CYR, MQS, TMA, CMJ, FPW, HIE, QVO, ACD, KRG]]',)",0,207
topological_sort,"[(GOW, PZJ), (GOW, SIR), (GOW, REQ), (GOW, KJZ), (PZJ, KJZ), (PZJ, SIR), (PZJ, HPL), (SIR, KJZ), (SIR, JLF), (SIR, FPV), (REQ, FEO), (REQ, FPV), (KJZ, JLF), (HPL, KJZ), (HPL, FPV), (HPL, JLF), (HPL, SIR), (KLQ, HPL), (KLQ, FEO), (KLQ, GOW), (KLQ, TVA), (KLQ, KJZ), (FEO, TVA), (FEO, JLF), (FEO, KJZ), (FEO, FPV), (FEO, PZJ), (JLF, TVA), (JLF, FPV), (KYU, KLQ), (KYU, XQW), (KYU, BCP), (KYU, KJZ), (KYU, VOS), (KYU, GOW), (XQW, KJZ), (XQW, GOW), (XQW, PZJ), (XQW, KLQ), (BCP, KLQ), (BCP, TVA), (VOS, HPL), (VOS, TVA), (VOS, KJZ), (VOS, FEO), (VOS, SIR), (VOS, GOW), (VOS, PZJ)]","{GOW: [PZJ, SIR, REQ, KJZ],
PZJ: [KJZ, SIR, HPL],
SIR: [KJZ, JLF, FPV],
REQ: [FEO, FPV],
KJZ: [JLF],
HPL: [KJZ, FPV, JLF, SIR],
KLQ: [HPL, FEO, GOW, TVA, KJZ],
FEO: [TVA, JLF, KJZ, FPV, PZJ],
TVA: [],
FPV: [],
JLF: [TVA, FPV],
KYU: [KLQ, XQW, BCP, KJZ, VOS, GOW],
XQW: [KJZ, GOW, PZJ, KLQ],
BCP: [KLQ, TVA],
VOS: [HPL, TVA, KJZ, FEO, SIR, GOW, PZJ]}","Node GOW is connected to nodes PZJ, SIR, REQ, KJZ.
Node PZJ is connected to nodes KJZ, SIR, HPL.
Node SIR is connected to nodes KJZ, JLF, FPV.
Node REQ is connected to nodes FEO, FPV.
Node KJZ is connected to node JLF.
Node HPL is connected to nodes KJZ, FPV, JLF, SIR.
Node KLQ is connected to nodes HPL, FEO, GOW, TVA, KJZ.
Node FEO is connected to nodes TVA, JLF, KJZ, FPV, PZJ.
Node JLF is connected to nodes TVA, FPV.
Node KYU is connected to nodes KLQ, XQW, BCP, KJZ, VOS, GOW.
Node XQW is connected to nodes KJZ, GOW, PZJ, KLQ.
Node BCP is connected to nodes KLQ, TVA.
Node VOS is connected to nodes HPL, TVA, KJZ, FEO, SIR, GOW, PZJ.","[BCP, PZJ, FEO, KJZ, KLQ, KYU, HPL, GOW, REQ, XQW, VOS, FPV, SIR, TVA, JLF]",15,48,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KYU, XQW, BCP, VOS, KLQ, GOW, REQ, FEO, PZJ, HPL, SIR, KJZ, JLF, TVA, FPV]","Let's solve it step by step.
Nodes with 0 in-degree: [KYU].
Visit node KYU and remove it from the graph.
Nodes with 0 in-degree: [XQW, BCP, VOS].
Visit node XQW and remove it from the graph.
Nodes with 0 in-degree: [BCP, VOS].
Visit node BCP and remove it from the graph.
Nodes with 0 in-degree: [VOS, KLQ].
Visit node VOS and remove it from the graph.
Nodes with 0 in-degree: [KLQ].
Visit node KLQ and remove it from the graph.
Nodes with 0 in-degree: [GOW].
Visit node GOW and remove it from the graph.
Nodes with 0 in-degree: [REQ].
Visit node REQ and remove it from the graph.
Nodes with 0 in-degree: [FEO].
Visit node FEO and remove it from the graph.
Nodes with 0 in-degree: [PZJ].
Visit node PZJ and remove it from the graph.
Nodes with 0 in-degree: [HPL].
Visit node HPL and remove it from the graph.
Nodes with 0 in-degree: [SIR].
Visit node SIR and remove it from the graph.
Nodes with 0 in-degree: [KJZ].
Visit node KJZ and remove it from the graph.
Nodes with 0 in-degree: [JLF].
Visit node JLF and remove it from the graph.
Nodes with 0 in-degree: [TVA, FPV].
Visit node TVA and remove it from the graph.
Nodes with 0 in-degree: [FPV].
Visit node FPV and remove it from the graph.
So the result of topological sorting is ","('[[KYU, XQW, BCP, VOS, KLQ, SIR, KJZ, JLF, TVA, FPV, GOW, REQ, FEO, PZJ, HPL], [KYU, XQW, BCP, VOS, KLQ, GOW, REQ, FEO, PZJ, HPL, SIR, KJZ, JLF, TVA, FPV], [KYU, XQW, BCP, VOS, KLQ, GOW, REQ, HPL, FPV, KJZ, SIR, FEO, JLF, PZJ, TVA], [KYU, REQ, KLQ, HPL, PZJ, FEO, GOW, TVA, VOS, KJZ, JLF, XQW, BCP, SIR, FPV]]',)",1,208
topological_sort,"[(WQF, HZU), (WQF, CUU), (WQF, RNV), (CUU, GVE), (CUU, JKC), (GVE, JKC), (JKC, RNV), (XZU, WQF), (XZU, GVE), (XZU, RNV), (XZU, HZU), (XZU, FKD), (XZU, CUU), (FKD, WQF), (FKD, RNV), (FKD, GVE)]","{WQF: [HZU, CUU, RNV],
HZU: [],
CUU: [GVE, JKC],
RNV: [],
GVE: [JKC],
JKC: [RNV],
XZU: [WQF, GVE, RNV, HZU, FKD, CUU],
FKD: [WQF, RNV, GVE]}","Node WQF is connected to nodes HZU, CUU, RNV.
Node CUU is connected to nodes GVE, JKC.
Node GVE is connected to node JKC.
Node JKC is connected to node RNV.
Node XZU is connected to nodes WQF, GVE, RNV, HZU, FKD, CUU.
Node FKD is connected to nodes WQF, RNV, GVE.","[RNV, HZU, XZU, CUU, FKD, GVE, WQF, JKC]",8,16,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XZU, FKD, WQF, HZU, CUU, GVE, JKC, RNV]","Let's solve it step by step.
Nodes with 0 in-degree: [XZU].
Visit node XZU and remove it from the graph.
Nodes with 0 in-degree: [FKD].
Visit node FKD and remove it from the graph.
Nodes with 0 in-degree: [WQF].
Visit node WQF and remove it from the graph.
Nodes with 0 in-degree: [HZU, CUU].
Visit node HZU and remove it from the graph.
Nodes with 0 in-degree: [CUU].
Visit node CUU and remove it from the graph.
Nodes with 0 in-degree: [GVE].
Visit node GVE and remove it from the graph.
Nodes with 0 in-degree: [JKC].
Visit node JKC and remove it from the graph.
Nodes with 0 in-degree: [RNV].
Visit node RNV and remove it from the graph.
So the result of topological sorting is ","('[[XZU, RNV, HZU, CUU, GVE, FKD, WQF, JKC], [XZU, FKD, WQF, HZU, CUU, GVE, JKC, RNV], [XZU, FKD, JKC, RNV, WQF, HZU, CUU, GVE], [XZU, FKD, WQF, HZU, JKC, GVE, CUU, RNV]]',)",1,209
topological_sort,"[(HWB, FZB), (HWB, MFQ), (MFQ, RQW), (OGR, BWK), (BWK, PTD), (BWK, FZB), (BWK, HWB), (BWK, HHL), (BWK, MFQ), (BWK, LVK), (PTD, LVK), (HHL, HWB), (HHL, PTD), (LVK, HWB), (LVK, UKE), (LVK, FZB), (ZFP, FZB), (ZFP, PTD), (ZFP, HWB), (ZFP, BWK), (ZFP, MFQ), (ZFP, UES), (UES, HWB), (UES, UKE), (KMA, RQW), (KMA, OGR), (KMA, UKE), (UKE, FZB)]","{HWB: [FZB, MFQ],
FZB: [],
MFQ: [RQW],
OGR: [BWK],
BWK: [PTD, FZB, HWB, HHL, MFQ, LVK],
PTD: [LVK],
HHL: [HWB, PTD],
LVK: [HWB, UKE, FZB],
ZFP: [FZB, PTD, HWB, BWK, MFQ, UES],
UES: [HWB, UKE],
KMA: [RQW, OGR, UKE],
RQW: [],
UKE: [FZB]}","Node HWB is connected to nodes FZB, MFQ.
Node MFQ is connected to node RQW.
Node OGR is connected to node BWK.
Node BWK is connected to nodes PTD, FZB, HWB, HHL, MFQ, LVK.
Node PTD is connected to node LVK.
Node HHL is connected to nodes HWB, PTD.
Node LVK is connected to nodes HWB, UKE, FZB.
Node ZFP is connected to nodes FZB, PTD, HWB, BWK, MFQ, UES.
Node UES is connected to nodes HWB, UKE.
Node KMA is connected to nodes RQW, OGR, UKE.
Node UKE is connected to node FZB.","[HHL, UKE, RQW, HWB, OGR, FZB, BWK, KMA, UES, LVK, PTD, MFQ, ZFP]",13,28,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZFP, KMA, UES, OGR, BWK, HHL, PTD, LVK, HWB, UKE, MFQ, FZB, RQW]","Let's solve it step by step.
Nodes with 0 in-degree: [ZFP, KMA].
Visit node ZFP and remove it from the graph.
Nodes with 0 in-degree: [KMA, UES].
Visit node KMA and remove it from the graph.
Nodes with 0 in-degree: [UES, OGR].
Visit node UES and remove it from the graph.
Nodes with 0 in-degree: [OGR].
Visit node OGR and remove it from the graph.
Nodes with 0 in-degree: [BWK].
Visit node BWK and remove it from the graph.
Nodes with 0 in-degree: [HHL].
Visit node HHL and remove it from the graph.
Nodes with 0 in-degree: [PTD].
Visit node PTD and remove it from the graph.
Nodes with 0 in-degree: [LVK].
Visit node LVK and remove it from the graph.
Nodes with 0 in-degree: [HWB, UKE].
Visit node HWB and remove it from the graph.
Nodes with 0 in-degree: [UKE, MFQ].
Visit node UKE and remove it from the graph.
Nodes with 0 in-degree: [MFQ, FZB].
Visit node MFQ and remove it from the graph.
Nodes with 0 in-degree: [FZB, RQW].
Visit node FZB and remove it from the graph.
Nodes with 0 in-degree: [RQW].
Visit node RQW and remove it from the graph.
So the result of topological sorting is ","('[[ZFP, KMA, UES, OGR, UKE, MFQ, FZB, RQW, BWK, HHL, PTD, LVK, HWB], [ZFP, KMA, UES, OGR, BWK, HHL, FZB, UKE, LVK, PTD, HWB, MFQ, RQW], [ZFP, KMA, UES, OGR, BWK, HHL, PTD, LVK, HWB, UKE, MFQ, FZB, RQW], [ZFP, UES, RQW, HHL, LVK, UKE, FZB, PTD, BWK, HWB, OGR, MFQ, KMA]]',)",2,210
topological_sort,"[(TKA, IMF), (TKA, QJR), (TKA, VJR), (IMF, TRS), (QJR, PKE), (VJR, LUK), (VJR, TRS), (VJR, IMF), (VJR, PKE), (VJR, KIG), (LUK, VHA), (LUK, KIG), (PKE, KIG), (PKE, VHA), (PKE, LUK), (VHA, RYO), (VHA, IMP), (IMP, IMF), (MZY, VJC), (MZY, TRS), (MZY, TKA), (MZY, VHA), (VJC, HEA), (VJC, TKA), (VJC, QJR), (HEA, LUK), (HEA, QJR), (HEA, TRS), (ZXZ, VJR), (ZXZ, VJC), (ZXZ, HEA), (ZXZ, TKA), (ZXZ, VHA)]","{TKA: [IMF, QJR, VJR],
IMF: [TRS],
QJR: [PKE],
VJR: [LUK, TRS, IMF, PKE, KIG],
TRS: [],
LUK: [VHA, KIG],
PKE: [KIG, VHA, LUK],
KIG: [],
VHA: [RYO, IMP],
RYO: [],
IMP: [IMF],
MZY: [VJC, TRS, TKA, VHA],
VJC: [HEA, TKA, QJR],
HEA: [LUK, QJR, TRS],
ZXZ: [VJR, VJC, HEA, TKA, VHA]}","Node TKA is connected to nodes IMF, QJR, VJR.
Node IMF is connected to node TRS.
Node QJR is connected to node PKE.
Node VJR is connected to nodes LUK, TRS, IMF, PKE, KIG.
Node LUK is connected to nodes VHA, KIG.
Node PKE is connected to nodes KIG, VHA, LUK.
Node VHA is connected to nodes RYO, IMP.
Node IMP is connected to node IMF.
Node MZY is connected to nodes VJC, TRS, TKA, VHA.
Node VJC is connected to nodes HEA, TKA, QJR.
Node HEA is connected to nodes LUK, QJR, TRS.
Node ZXZ is connected to nodes VJR, VJC, HEA, TKA, VHA.","[VJC, VHA, PKE, LUK, MZY, KIG, TKA, HEA, QJR, VJR, IMF, RYO, TRS, IMP, ZXZ]",15,33,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MZY, ZXZ, VJC, HEA, TKA, QJR, VJR, PKE, LUK, VHA, KIG, RYO, IMP, IMF, TRS]","Let's solve it step by step.
Nodes with 0 in-degree: [MZY, ZXZ].
Visit node MZY and remove it from the graph.
Nodes with 0 in-degree: [ZXZ].
Visit node ZXZ and remove it from the graph.
Nodes with 0 in-degree: [VJC].
Visit node VJC and remove it from the graph.
Nodes with 0 in-degree: [HEA, TKA].
Visit node HEA and remove it from the graph.
Nodes with 0 in-degree: [TKA].
Visit node TKA and remove it from the graph.
Nodes with 0 in-degree: [QJR, VJR].
Visit node QJR and remove it from the graph.
Nodes with 0 in-degree: [VJR].
Visit node VJR and remove it from the graph.
Nodes with 0 in-degree: [PKE].
Visit node PKE and remove it from the graph.
Nodes with 0 in-degree: [LUK].
Visit node LUK and remove it from the graph.
Nodes with 0 in-degree: [VHA, KIG].
Visit node VHA and remove it from the graph.
Nodes with 0 in-degree: [KIG, RYO, IMP].
Visit node KIG and remove it from the graph.
Nodes with 0 in-degree: [RYO, IMP].
Visit node RYO and remove it from the graph.
Nodes with 0 in-degree: [IMP].
Visit node IMP and remove it from the graph.
Nodes with 0 in-degree: [IMF].
Visit node IMF and remove it from the graph.
Nodes with 0 in-degree: [TRS].
Visit node TRS and remove it from the graph.
So the result of topological sorting is ","('[[MZY, ZXZ, VJC, HEA, TKA, KIG, RYO, IMP, IMF, TRS, QJR, VJR, PKE, LUK, VHA], [MZY, ZXZ, VJC, HEA, TKA, QJR, VJR, TRS, LUK, IMF, PKE, KIG, VHA, RYO, IMP], [MZY, TKA, RYO, TRS, ZXZ, IMF, VJC, KIG, VHA, VJR, PKE, HEA, IMP, QJR, LUK], [MZY, ZXZ, VJC, HEA, TKA, QJR, VJR, PKE, LUK, VHA, KIG, RYO, IMP, IMF, TRS]]',)",3,211
topological_sort,"[(ENJ, PFY), (ENJ, WJR), (ENJ, XYO), (ENJ, LUN), (PFY, XYO), (PFY, LUN), (PFY, GQR), (PFY, QEY), (PFY, FAH), (PFY, FIU), (PFY, BZL), (WJR, FLB), (XYO, QQB), (LUN, FAH), (GQR, FAH), (GQR, QEY), (GQR, WJR), (GQR, LUN), (QEY, XYO), (QEY, QQB), (FIU, WJR), (FIU, QEY), (FIU, LUN), (BZL, FAH), (QQB, LUN), (QQB, BZL), (FLB, XYO), (FLB, BZL), (FLB, LUN)]","{ENJ: [PFY, WJR, XYO, LUN],
PFY: [XYO, LUN, GQR, QEY, FAH, FIU, BZL],
WJR: [FLB],
XYO: [QQB],
LUN: [FAH],
GQR: [FAH, QEY, WJR, LUN],
QEY: [XYO, QQB],
FAH: [],
FIU: [WJR, QEY, LUN],
BZL: [FAH],
QQB: [LUN, BZL],
FLB: [XYO, BZL, LUN]}","Node ENJ is connected to nodes PFY, WJR, XYO, LUN.
Node PFY is connected to nodes XYO, LUN, GQR, QEY, FAH, FIU, BZL.
Node WJR is connected to node FLB.
Node XYO is connected to node QQB.
Node LUN is connected to node FAH.
Node GQR is connected to nodes FAH, QEY, WJR, LUN.
Node QEY is connected to nodes XYO, QQB.
Node FIU is connected to nodes WJR, QEY, LUN.
Node BZL is connected to node FAH.
Node QQB is connected to nodes LUN, BZL.
Node FLB is connected to nodes XYO, BZL, LUN.","[GQR, WJR, QQB, LUN, ENJ, FLB, QEY, BZL, FIU, XYO, PFY, FAH]",12,29,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ENJ, PFY, GQR, FIU, WJR, QEY, FLB, XYO, QQB, LUN, BZL, FAH]","Let's solve it step by step.
Nodes with 0 in-degree: [ENJ].
Visit node ENJ and remove it from the graph.
Nodes with 0 in-degree: [PFY].
Visit node PFY and remove it from the graph.
Nodes with 0 in-degree: [GQR, FIU].
Visit node GQR and remove it from the graph.
Nodes with 0 in-degree: [FIU].
Visit node FIU and remove it from the graph.
Nodes with 0 in-degree: [WJR, QEY].
Visit node WJR and remove it from the graph.
Nodes with 0 in-degree: [QEY, FLB].
Visit node QEY and remove it from the graph.
Nodes with 0 in-degree: [FLB].
Visit node FLB and remove it from the graph.
Nodes with 0 in-degree: [XYO].
Visit node XYO and remove it from the graph.
Nodes with 0 in-degree: [QQB].
Visit node QQB and remove it from the graph.
Nodes with 0 in-degree: [LUN, BZL].
Visit node LUN and remove it from the graph.
Nodes with 0 in-degree: [BZL].
Visit node BZL and remove it from the graph.
Nodes with 0 in-degree: [FAH].
Visit node FAH and remove it from the graph.
So the result of topological sorting is ","('[[ENJ, PFY, BZL, QEY, FLB, QQB, FIU, XYO, FAH, LUN, GQR, WJR], [ENJ, PFY, GQR, FIU, WJR, QEY, FLB, FAH, XYO, QQB, LUN, BZL], [ENJ, PFY, GQR, FIU, QQB, LUN, BZL, FAH, WJR, QEY, FLB, XYO], [ENJ, PFY, GQR, FIU, WJR, QEY, FLB, XYO, QQB, LUN, BZL, FAH]]',)",3,212
topological_sort,"[(MKT, ZII), (MKT, LOD), (MKT, KPP), (ZII, KPP), (LOD, MHR), (LOD, KPP), (LOD, RCB), (LOD, ZII), (KPP, RCB), (IFN, ZII), (IFN, RCB), (IFN, LOD), (IFN, MKT), (IFN, MHR), (MHR, ZII), (MHR, CUN), (CUN, RCB), (CUN, ZII)]","{MKT: [ZII, LOD, KPP],
ZII: [KPP],
LOD: [MHR, KPP, RCB, ZII],
KPP: [RCB],
IFN: [ZII, RCB, LOD, MKT, MHR],
RCB: [],
MHR: [ZII, CUN],
CUN: [RCB, ZII]}","Node MKT is connected to nodes ZII, LOD, KPP.
Node ZII is connected to node KPP.
Node LOD is connected to nodes MHR, KPP, RCB, ZII.
Node KPP is connected to node RCB.
Node IFN is connected to nodes ZII, RCB, LOD, MKT, MHR.
Node MHR is connected to nodes ZII, CUN.
Node CUN is connected to nodes RCB, ZII.","[IFN, CUN, MKT, LOD, MHR, RCB, ZII, KPP]",8,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IFN, MKT, LOD, MHR, CUN, ZII, KPP, RCB]","Let's solve it step by step.
Nodes with 0 in-degree: [IFN].
Visit node IFN and remove it from the graph.
Nodes with 0 in-degree: [MKT].
Visit node MKT and remove it from the graph.
Nodes with 0 in-degree: [LOD].
Visit node LOD and remove it from the graph.
Nodes with 0 in-degree: [MHR].
Visit node MHR and remove it from the graph.
Nodes with 0 in-degree: [CUN].
Visit node CUN and remove it from the graph.
Nodes with 0 in-degree: [ZII].
Visit node ZII and remove it from the graph.
Nodes with 0 in-degree: [KPP].
Visit node KPP and remove it from the graph.
Nodes with 0 in-degree: [RCB].
Visit node RCB and remove it from the graph.
So the result of topological sorting is ","('[[IFN, MKT, LOD, MHR, CUN, ZII, KPP, RCB], [IFN, MKT, LOD, MHR, ZII, RCB, CUN, KPP], [IFN, ZII, RCB, MKT, CUN, MHR, LOD, KPP], [IFN, MKT, KPP, RCB, LOD, MHR, CUN, ZII]]',)",0,213
topological_sort,"[(FUE, NLC), (FUE, SXG), (FUE, VFN), (FUE, EDW), (SXG, NLC), (SXG, EDW), (SXG, EZX), (VFN, LHF), (VFN, EZX), (VFN, WGW), (EDW, NCW), (WGW, NCW), (NCW, NLC), (EZX, EDW), (LHF, NCW), (LHF, SXG), (KEB, GMG), (GMG, FUE)]","{FUE: [NLC, SXG, VFN, EDW],
NLC: [],
SXG: [NLC, EDW, EZX],
VFN: [LHF, EZX, WGW],
EDW: [NCW],
WGW: [NCW],
NCW: [NLC],
EZX: [EDW],
LHF: [NCW, SXG],
KEB: [GMG],
GMG: [FUE]}","Node FUE is connected to nodes NLC, SXG, VFN, EDW.
Node SXG is connected to nodes NLC, EDW, EZX.
Node VFN is connected to nodes LHF, EZX, WGW.
Node EDW is connected to node NCW.
Node WGW is connected to node NCW.
Node NCW is connected to node NLC.
Node EZX is connected to node EDW.
Node LHF is connected to nodes NCW, SXG.
Node KEB is connected to node GMG.
Node GMG is connected to node FUE.","[EZX, FUE, NCW, GMG, WGW, NLC, EDW, SXG, VFN, KEB, LHF]",11,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KEB, GMG, FUE, VFN, LHF, WGW, SXG, EZX, EDW, NCW, NLC]","Let's solve it step by step.
Nodes with 0 in-degree: [KEB].
Visit node KEB and remove it from the graph.
Nodes with 0 in-degree: [GMG].
Visit node GMG and remove it from the graph.
Nodes with 0 in-degree: [FUE].
Visit node FUE and remove it from the graph.
Nodes with 0 in-degree: [VFN].
Visit node VFN and remove it from the graph.
Nodes with 0 in-degree: [LHF, WGW].
Visit node LHF and remove it from the graph.
Nodes with 0 in-degree: [WGW, SXG].
Visit node WGW and remove it from the graph.
Nodes with 0 in-degree: [SXG].
Visit node SXG and remove it from the graph.
Nodes with 0 in-degree: [EZX].
Visit node EZX and remove it from the graph.
Nodes with 0 in-degree: [EDW].
Visit node EDW and remove it from the graph.
Nodes with 0 in-degree: [NCW].
Visit node NCW and remove it from the graph.
Nodes with 0 in-degree: [NLC].
Visit node NLC and remove it from the graph.
So the result of topological sorting is ","('[[KEB, GMG, FUE, VFN, LHF, WGW, SXG, EZX, EDW, NCW, NLC], [KEB, GMG, FUE, EDW, NCW, NLC, VFN, LHF, WGW, SXG, EZX], [KEB, NLC, EDW, WGW, EZX, VFN, LHF, GMG, NCW, FUE, SXG], [KEB, GMG, FUE, VFN, LHF, NCW, EZX, SXG, EDW, NLC, WGW]]',)",0,214
topological_sort,"[(PEA, CPM), (PEA, OSE), (PEA, JNZ), (PEA, BSW), (PEA, QBX), (OSE, VJK), (OSE, JNZ), (JNZ, MFY), (JNZ, XOW), (BSW, XOW), (BSW, DNA), (BSW, OSE), (QBX, XOW), (XOW, CPM), (DNA, VJK), (DMD, XOW), (DMD, PEA), (DMD, CPM), (MFY, DNA)]","{PEA: [CPM, OSE, JNZ, BSW, QBX],
CPM: [],
OSE: [VJK, JNZ],
JNZ: [MFY, XOW],
BSW: [XOW, DNA, OSE],
QBX: [XOW],
XOW: [CPM],
DNA: [VJK],
VJK: [],
DMD: [XOW, PEA, CPM],
MFY: [DNA]}","Node PEA is connected to nodes CPM, OSE, JNZ, BSW, QBX.
Node OSE is connected to nodes VJK, JNZ.
Node JNZ is connected to nodes MFY, XOW.
Node BSW is connected to nodes XOW, DNA, OSE.
Node QBX is connected to node XOW.
Node XOW is connected to node CPM.
Node DNA is connected to node VJK.
Node DMD is connected to nodes XOW, PEA, CPM.
Node MFY is connected to node DNA.","[DMD, MFY, DNA, VJK, QBX, XOW, BSW, JNZ, PEA, CPM, OSE]",11,19,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DMD, PEA, BSW, QBX, OSE, JNZ, MFY, XOW, DNA, CPM, VJK]","Let's solve it step by step.
Nodes with 0 in-degree: [DMD].
Visit node DMD and remove it from the graph.
Nodes with 0 in-degree: [PEA].
Visit node PEA and remove it from the graph.
Nodes with 0 in-degree: [BSW, QBX].
Visit node BSW and remove it from the graph.
Nodes with 0 in-degree: [QBX, OSE].
Visit node QBX and remove it from the graph.
Nodes with 0 in-degree: [OSE].
Visit node OSE and remove it from the graph.
Nodes with 0 in-degree: [JNZ].
Visit node JNZ and remove it from the graph.
Nodes with 0 in-degree: [MFY, XOW].
Visit node MFY and remove it from the graph.
Nodes with 0 in-degree: [XOW, DNA].
Visit node XOW and remove it from the graph.
Nodes with 0 in-degree: [DNA, CPM].
Visit node DNA and remove it from the graph.
Nodes with 0 in-degree: [CPM, VJK].
Visit node CPM and remove it from the graph.
Nodes with 0 in-degree: [VJK].
Visit node VJK and remove it from the graph.
So the result of topological sorting is ","('[[DMD, DNA, CPM, BSW, JNZ, XOW, MFY, PEA, VJK, QBX, OSE], [DMD, PEA, BSW, DNA, CPM, VJK, QBX, OSE, JNZ, MFY, XOW], [DMD, PEA, BSW, QBX, OSE, JNZ, MFY, XOW, DNA, CPM, VJK], [DMD, PEA, BSW, QBX, OSE, CPM, XOW, VJK, DNA, JNZ, MFY]]',)",2,215
topological_sort,"[(EZG, YLW), (EZG, WZA), (EZG, IYQ), (EZG, VDF), (YLW, JEE), (IYQ, SOP), (IYQ, ZZO), (IYQ, YLW), (VDF, GHE), (JEE, WZA), (ZZO, GHE), (ZZO, JEE), (GHE, JEE), (GHE, WZA), (GHE, YLW), (SOP, YLW), (SOP, VDF), (SOP, GHE)]","{EZG: [YLW, WZA, IYQ, VDF],
YLW: [JEE],
WZA: [],
IYQ: [SOP, ZZO, YLW],
VDF: [GHE],
JEE: [WZA],
ZZO: [GHE, JEE],
GHE: [JEE, WZA, YLW],
SOP: [YLW, VDF, GHE]}","Node EZG is connected to nodes YLW, WZA, IYQ, VDF.
Node YLW is connected to node JEE.
Node IYQ is connected to nodes SOP, ZZO, YLW.
Node VDF is connected to node GHE.
Node JEE is connected to node WZA.
Node ZZO is connected to nodes GHE, JEE.
Node GHE is connected to nodes JEE, WZA, YLW.
Node SOP is connected to nodes YLW, VDF, GHE.","[JEE, WZA, IYQ, SOP, VDF, ZZO, YLW, EZG, GHE]",9,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EZG, IYQ, SOP, ZZO, VDF, GHE, YLW, JEE, WZA]","Let's solve it step by step.
Nodes with 0 in-degree: [EZG].
Visit node EZG and remove it from the graph.
Nodes with 0 in-degree: [IYQ].
Visit node IYQ and remove it from the graph.
Nodes with 0 in-degree: [SOP, ZZO].
Visit node SOP and remove it from the graph.
Nodes with 0 in-degree: [ZZO, VDF].
Visit node ZZO and remove it from the graph.
Nodes with 0 in-degree: [VDF].
Visit node VDF and remove it from the graph.
Nodes with 0 in-degree: [GHE].
Visit node GHE and remove it from the graph.
Nodes with 0 in-degree: [YLW].
Visit node YLW and remove it from the graph.
Nodes with 0 in-degree: [JEE].
Visit node JEE and remove it from the graph.
Nodes with 0 in-degree: [WZA].
Visit node WZA and remove it from the graph.
So the result of topological sorting is ","('[[EZG, VDF, YLW, IYQ, SOP, ZZO, JEE, GHE, WZA], [EZG, IYQ, SOP, ZZO, VDF, GHE, YLW, JEE, WZA], [EZG, IYQ, SOP, YLW, JEE, WZA, ZZO, VDF, GHE], [EZG, IYQ, SOP, ZZO, YLW, GHE, JEE, VDF, WZA]]',)",1,216
topological_sort,"[(VWL, LWT), (VWL, PWQ), (VWL, CLZ), (LWT, PWQ), (LWT, XQQ), (PWQ, XQQ), (PWQ, RPO), (PWQ, NMI), (PWQ, CLZ), (CLZ, RPO), (CLZ, XQQ), (XQQ, RPO), (LYJ, PWQ), (LYJ, NMI), (NMI, CLZ), (MGD, VWL), (MGD, XQQ)]","{VWL: [LWT, PWQ, CLZ],
LWT: [PWQ, XQQ],
PWQ: [XQQ, RPO, NMI, CLZ],
CLZ: [RPO, XQQ],
XQQ: [RPO],
RPO: [],
LYJ: [PWQ, NMI],
NMI: [CLZ],
MGD: [VWL, XQQ]}","Node VWL is connected to nodes LWT, PWQ, CLZ.
Node LWT is connected to nodes PWQ, XQQ.
Node PWQ is connected to nodes XQQ, RPO, NMI, CLZ.
Node CLZ is connected to nodes RPO, XQQ.
Node XQQ is connected to node RPO.
Node LYJ is connected to nodes PWQ, NMI.
Node NMI is connected to node CLZ.
Node MGD is connected to nodes VWL, XQQ.","[RPO, LWT, PWQ, XQQ, VWL, MGD, NMI, LYJ, CLZ]",9,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LYJ, MGD, VWL, LWT, PWQ, NMI, CLZ, XQQ, RPO]","Let's solve it step by step.
Nodes with 0 in-degree: [LYJ, MGD].
Visit node LYJ and remove it from the graph.
Nodes with 0 in-degree: [MGD].
Visit node MGD and remove it from the graph.
Nodes with 0 in-degree: [VWL].
Visit node VWL and remove it from the graph.
Nodes with 0 in-degree: [LWT].
Visit node LWT and remove it from the graph.
Nodes with 0 in-degree: [PWQ].
Visit node PWQ and remove it from the graph.
Nodes with 0 in-degree: [NMI].
Visit node NMI and remove it from the graph.
Nodes with 0 in-degree: [CLZ].
Visit node CLZ and remove it from the graph.
Nodes with 0 in-degree: [XQQ].
Visit node XQQ and remove it from the graph.
Nodes with 0 in-degree: [RPO].
Visit node RPO and remove it from the graph.
So the result of topological sorting is ","('[[LYJ, MGD, VWL, LWT, PWQ, NMI, CLZ, XQQ, RPO], [LYJ, CLZ, NMI, LWT, XQQ, MGD, VWL, RPO, PWQ], [LYJ, MGD, VWL, LWT, XQQ, CLZ, PWQ, RPO, NMI], [LYJ, MGD, VWL, CLZ, XQQ, RPO, LWT, PWQ, NMI]]',)",0,217
topological_sort,"[(BDG, CPJ), (BDG, YGN), (BDG, JCH), (BDG, OUP), (CPJ, JCH), (CPJ, SNK), (YGN, VHP), (JCH, OUP), (JCH, VHP), (JCH, SNK), (OUP, YGN), (OUP, VHP), (SNK, VHP), (SNK, YGN), (NHK, CPJ), (NHK, BDG)]","{BDG: [CPJ, YGN, JCH, OUP],
CPJ: [JCH, SNK],
YGN: [VHP],
JCH: [OUP, VHP, SNK],
OUP: [YGN, VHP],
SNK: [VHP, YGN],
VHP: [],
NHK: [CPJ, BDG]}","Node BDG is connected to nodes CPJ, YGN, JCH, OUP.
Node CPJ is connected to nodes JCH, SNK.
Node YGN is connected to node VHP.
Node JCH is connected to nodes OUP, VHP, SNK.
Node OUP is connected to nodes YGN, VHP.
Node SNK is connected to nodes VHP, YGN.
Node NHK is connected to nodes CPJ, BDG.","[VHP, JCH, BDG, CPJ, YGN, NHK, OUP, SNK]",8,16,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[NHK, BDG, CPJ, JCH, OUP, SNK, YGN, VHP]","Let's solve it step by step.
Nodes with 0 in-degree: [NHK].
Visit node NHK and remove it from the graph.
Nodes with 0 in-degree: [BDG].
Visit node BDG and remove it from the graph.
Nodes with 0 in-degree: [CPJ].
Visit node CPJ and remove it from the graph.
Nodes with 0 in-degree: [JCH].
Visit node JCH and remove it from the graph.
Nodes with 0 in-degree: [OUP, SNK].
Visit node OUP and remove it from the graph.
Nodes with 0 in-degree: [SNK].
Visit node SNK and remove it from the graph.
Nodes with 0 in-degree: [YGN].
Visit node YGN and remove it from the graph.
Nodes with 0 in-degree: [VHP].
Visit node VHP and remove it from the graph.
So the result of topological sorting is ","('[[NHK, BDG, CPJ, JCH, OUP, VHP, SNK, YGN], [NHK, CPJ, BDG, SNK, OUP, JCH, VHP, YGN], [NHK, BDG, YGN, VHP, CPJ, JCH, OUP, SNK], [NHK, BDG, CPJ, JCH, OUP, SNK, YGN, VHP]]',)",3,218
topological_sort,"[(JGN, KLN), (JGN, WTM), (JGN, TPA), (KLN, XHP), (WTM, GKL), (WTM, ZCD), (WTM, IGJ), (TPA, KLN), (TPA, GKL), (XHP, ZCD), (QVC, LNE), (QVC, TPA), (JDN, KLN), (JDN, TPA), (JDN, XHP), (JDN, ZCD), (GKL, KLN), (IGJ, LNE), (IGJ, XHP), (ZSN, IGJ), (ZSN, IHU), (ZSN, KLN), (ZSN, XHP), (ZSN, QVC), (IHU, ZCD), (IHU, JDN), (IHU, GKL), (ODU, JGN)]","{JGN: [KLN, WTM, TPA],
KLN: [XHP],
WTM: [GKL, ZCD, IGJ],
TPA: [KLN, GKL],
XHP: [ZCD],
QVC: [LNE, TPA],
LNE: [],
ZCD: [],
JDN: [KLN, TPA, XHP, ZCD],
GKL: [KLN],
IGJ: [LNE, XHP],
ZSN: [IGJ, IHU, KLN, XHP, QVC],
IHU: [ZCD, JDN, GKL],
ODU: [JGN]}","Node JGN is connected to nodes KLN, WTM, TPA.
Node KLN is connected to node XHP.
Node WTM is connected to nodes GKL, ZCD, IGJ.
Node TPA is connected to nodes KLN, GKL.
Node XHP is connected to node ZCD.
Node QVC is connected to nodes LNE, TPA.
Node JDN is connected to nodes KLN, TPA, XHP, ZCD.
Node GKL is connected to node KLN.
Node IGJ is connected to nodes LNE, XHP.
Node ZSN is connected to nodes IGJ, IHU, KLN, XHP, QVC.
Node IHU is connected to nodes ZCD, JDN, GKL.
Node ODU is connected to node JGN.","[GKL, JGN, IHU, ZSN, XHP, ODU, QVC, KLN, JDN, IGJ, TPA, LNE, WTM, ZCD]",14,28,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZSN, ODU, IHU, QVC, JGN, JDN, WTM, TPA, IGJ, GKL, LNE, KLN, XHP, ZCD]","Let's solve it step by step.
Nodes with 0 in-degree: [ZSN, ODU].
Visit node ZSN and remove it from the graph.
Nodes with 0 in-degree: [ODU, IHU, QVC].
Visit node ODU and remove it from the graph.
Nodes with 0 in-degree: [IHU, QVC, JGN].
Visit node IHU and remove it from the graph.
Nodes with 0 in-degree: [QVC, JGN, JDN].
Visit node QVC and remove it from the graph.
Nodes with 0 in-degree: [JGN, JDN].
Visit node JGN and remove it from the graph.
Nodes with 0 in-degree: [JDN, WTM].
Visit node JDN and remove it from the graph.
Nodes with 0 in-degree: [WTM, TPA].
Visit node WTM and remove it from the graph.
Nodes with 0 in-degree: [TPA, IGJ].
Visit node TPA and remove it from the graph.
Nodes with 0 in-degree: [IGJ, GKL].
Visit node IGJ and remove it from the graph.
Nodes with 0 in-degree: [GKL, LNE].
Visit node GKL and remove it from the graph.
Nodes with 0 in-degree: [LNE, KLN].
Visit node LNE and remove it from the graph.
Nodes with 0 in-degree: [KLN].
Visit node KLN and remove it from the graph.
Nodes with 0 in-degree: [XHP].
Visit node XHP and remove it from the graph.
Nodes with 0 in-degree: [ZCD].
Visit node ZCD and remove it from the graph.
So the result of topological sorting is ","('[[ZSN, ODU, IHU, QVC, JGN, JDN, WTM, IGJ, LNE, XHP, GKL, KLN, ZCD, TPA], [ZSN, ODU, IHU, QVC, JGN, JDN, WTM, TPA, IGJ, GKL, LNE, KLN, XHP, ZCD], [ZSN, ODU, IHU, IGJ, JDN, WTM, LNE, TPA, JGN, XHP, ZCD, GKL, KLN, QVC], [ZSN, ODU, IHU, QVC, LNE, KLN, XHP, ZCD, JGN, JDN, WTM, TPA, IGJ, GKL]]',)",1,219
topological_sort,"[(AFL, WQH), (WQH, CZA), (WQH, PZW), (CZA, MPA), (PZW, CZA), (PZW, KHL), (EKP, RBU), (EKP, ZBR), (EKP, WUV), (EKP, WQH), (RBU, KHL), (RBU, MPA), (RBU, PZW), (RBU, QBR), (ZBR, AFL), (ZBR, RBU), (ZBR, WQH), (ZBR, KHL), (WUV, AFL), (WUV, WQH), (WUV, PZW), (WUV, KHL), (WUV, ZBR), (KHL, MPA), (KHL, CZA), (QBR, PZW), (QBR, MPA), (QBR, KHL), (ABM, GCJ), (ABM, AFL), (ABM, CZA), (ABM, MPA), (ABM, RBU), (ABM, KHL), (ABM, EKP), (GCJ, WQH), (GCJ, ZBR), (GCJ, WUV), (GCJ, AFL), (GCJ, CZA), (GCJ, KHL), (GCJ, PZW), (GCJ, QBR), (IDV, MPA), (IDV, CZA), (IDV, ABM), (IDV, RBU), (IDV, WUV), (IDV, EKP)]","{AFL: [WQH],
WQH: [CZA, PZW],
CZA: [MPA],
PZW: [CZA, KHL],
EKP: [RBU, ZBR, WUV, WQH],
RBU: [KHL, MPA, PZW, QBR],
ZBR: [AFL, RBU, WQH, KHL],
WUV: [AFL, WQH, PZW, KHL, ZBR],
KHL: [MPA, CZA],
MPA: [],
QBR: [PZW, MPA, KHL],
ABM: [GCJ, AFL, CZA, MPA, RBU, KHL, EKP],
GCJ: [WQH, ZBR, WUV, AFL, CZA, KHL, PZW, QBR],
IDV: [MPA, CZA, ABM, RBU, WUV, EKP]}","Node AFL is connected to node WQH.
Node WQH is connected to nodes CZA, PZW.
Node CZA is connected to node MPA.
Node PZW is connected to nodes CZA, KHL.
Node EKP is connected to nodes RBU, ZBR, WUV, WQH.
Node RBU is connected to nodes KHL, MPA, PZW, QBR.
Node ZBR is connected to nodes AFL, RBU, WQH, KHL.
Node WUV is connected to nodes AFL, WQH, PZW, KHL, ZBR.
Node KHL is connected to nodes MPA, CZA.
Node QBR is connected to nodes PZW, MPA, KHL.
Node ABM is connected to nodes GCJ, AFL, CZA, MPA, RBU, KHL, EKP.
Node GCJ is connected to nodes WQH, ZBR, WUV, AFL, CZA, KHL, PZW, QBR.
Node IDV is connected to nodes MPA, CZA, ABM, RBU, WUV, EKP.","[ABM, IDV, WUV, WQH, AFL, RBU, PZW, CZA, QBR, EKP, MPA, GCJ, ZBR, KHL]",14,49,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IDV, ABM, GCJ, EKP, WUV, ZBR, AFL, RBU, WQH, QBR, PZW, KHL, CZA, MPA]","Let's solve it step by step.
Nodes with 0 in-degree: [IDV].
Visit node IDV and remove it from the graph.
Nodes with 0 in-degree: [ABM].
Visit node ABM and remove it from the graph.
Nodes with 0 in-degree: [GCJ, EKP].
Visit node GCJ and remove it from the graph.
Nodes with 0 in-degree: [EKP].
Visit node EKP and remove it from the graph.
Nodes with 0 in-degree: [WUV].
Visit node WUV and remove it from the graph.
Nodes with 0 in-degree: [ZBR].
Visit node ZBR and remove it from the graph.
Nodes with 0 in-degree: [AFL, RBU].
Visit node AFL and remove it from the graph.
Nodes with 0 in-degree: [RBU, WQH].
Visit node RBU and remove it from the graph.
Nodes with 0 in-degree: [WQH, QBR].
Visit node WQH and remove it from the graph.
Nodes with 0 in-degree: [QBR].
Visit node QBR and remove it from the graph.
Nodes with 0 in-degree: [PZW].
Visit node PZW and remove it from the graph.
Nodes with 0 in-degree: [KHL].
Visit node KHL and remove it from the graph.
Nodes with 0 in-degree: [CZA].
Visit node CZA and remove it from the graph.
Nodes with 0 in-degree: [MPA].
Visit node MPA and remove it from the graph.
So the result of topological sorting is ","('[[IDV, ZBR, RBU, MPA, KHL, GCJ, ABM, AFL, WUV, PZW, WQH, EKP, CZA, QBR], [IDV, ABM, GCJ, EKP, WUV, ZBR, AFL, PZW, KHL, CZA, QBR, RBU, MPA, WQH], [IDV, ABM, GCJ, EKP, WUV, ZBR, AFL, RBU, WQH, QBR, PZW, KHL, CZA, MPA], [IDV, ABM, GCJ, EKP, PZW, KHL, CZA, MPA, WUV, ZBR, AFL, RBU, WQH, QBR]]',)",2,220
topological_sort,"[(HES, MZG), (HES, REB), (HES, JUA), (MZG, KGR), (MZG, REB), (REB, JUA), (REB, KGR), (LCY, VFU), (LCY, MZG), (LCY, HES), (VFU, HES), (VFU, XRK), (VFU, MZG), (VFU, JUA), (XRK, REB), (AZA, LCY)]","{HES: [MZG, REB, JUA],
MZG: [KGR, REB],
REB: [JUA, KGR],
JUA: [],
KGR: [],
LCY: [VFU, MZG, HES],
VFU: [HES, XRK, MZG, JUA],
XRK: [REB],
AZA: [LCY]}","Node HES is connected to nodes MZG, REB, JUA.
Node MZG is connected to nodes KGR, REB.
Node REB is connected to nodes JUA, KGR.
Node LCY is connected to nodes VFU, MZG, HES.
Node VFU is connected to nodes HES, XRK, MZG, JUA.
Node XRK is connected to node REB.
Node AZA is connected to node LCY.","[XRK, KGR, JUA, HES, AZA, REB, LCY, VFU, MZG]",9,16,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[AZA, LCY, VFU, HES, XRK, MZG, REB, JUA, KGR]","Let's solve it step by step.
Nodes with 0 in-degree: [AZA].
Visit node AZA and remove it from the graph.
Nodes with 0 in-degree: [LCY].
Visit node LCY and remove it from the graph.
Nodes with 0 in-degree: [VFU].
Visit node VFU and remove it from the graph.
Nodes with 0 in-degree: [HES, XRK].
Visit node HES and remove it from the graph.
Nodes with 0 in-degree: [XRK, MZG].
Visit node XRK and remove it from the graph.
Nodes with 0 in-degree: [MZG].
Visit node MZG and remove it from the graph.
Nodes with 0 in-degree: [REB].
Visit node REB and remove it from the graph.
Nodes with 0 in-degree: [JUA, KGR].
Visit node JUA and remove it from the graph.
Nodes with 0 in-degree: [KGR].
Visit node KGR and remove it from the graph.
So the result of topological sorting is ","('[[AZA, JUA, LCY, MZG, VFU, HES, XRK, KGR, REB], [AZA, LCY, VFU, HES, XRK, KGR, JUA, REB, MZG], [AZA, LCY, VFU, REB, JUA, KGR, HES, XRK, MZG], [AZA, LCY, VFU, HES, XRK, MZG, REB, JUA, KGR]]',)",3,221
topological_sort,"[(BVJ, CPS), (BVJ, AJK), (BVJ, UIV), (BVJ, EUU), (BVJ, SJG), (CPS, SJG), (CPS, EGH), (CPS, TBR), (AJK, DCU), (UIV, NCZ), (UIV, TBR), (UIV, EUU), (UIV, DCU), (EUU, NCZ), (SJG, EGH), (SJG, EUU), (SJG, NCZ), (EGH, NCZ), (DCU, EGH), (DCU, TBR), (DCU, SJG), (DCU, NZE), (NZE, EUU), (NZE, NCZ), (NZE, CPS)]","{BVJ: [CPS, AJK, UIV, EUU, SJG],
CPS: [SJG, EGH, TBR],
AJK: [DCU],
UIV: [NCZ, TBR, EUU, DCU],
EUU: [NCZ],
SJG: [EGH, EUU, NCZ],
EGH: [NCZ],
TBR: [],
NCZ: [],
DCU: [EGH, TBR, SJG, NZE],
NZE: [EUU, NCZ, CPS]}","Node BVJ is connected to nodes CPS, AJK, UIV, EUU, SJG.
Node CPS is connected to nodes SJG, EGH, TBR.
Node AJK is connected to node DCU.
Node UIV is connected to nodes NCZ, TBR, EUU, DCU.
Node EUU is connected to node NCZ.
Node SJG is connected to nodes EGH, EUU, NCZ.
Node EGH is connected to node NCZ.
Node DCU is connected to nodes EGH, TBR, SJG, NZE.
Node NZE is connected to nodes EUU, NCZ, CPS.","[AJK, NZE, CPS, EUU, TBR, BVJ, EGH, UIV, SJG, NCZ, DCU]",11,25,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BVJ, AJK, UIV, DCU, NZE, CPS, SJG, TBR, EGH, EUU, NCZ]","Let's solve it step by step.
Nodes with 0 in-degree: [BVJ].
Visit node BVJ and remove it from the graph.
Nodes with 0 in-degree: [AJK, UIV].
Visit node AJK and remove it from the graph.
Nodes with 0 in-degree: [UIV].
Visit node UIV and remove it from the graph.
Nodes with 0 in-degree: [DCU].
Visit node DCU and remove it from the graph.
Nodes with 0 in-degree: [NZE].
Visit node NZE and remove it from the graph.
Nodes with 0 in-degree: [CPS].
Visit node CPS and remove it from the graph.
Nodes with 0 in-degree: [SJG, TBR].
Visit node SJG and remove it from the graph.
Nodes with 0 in-degree: [TBR, EGH, EUU].
Visit node TBR and remove it from the graph.
Nodes with 0 in-degree: [EGH, EUU].
Visit node EGH and remove it from the graph.
Nodes with 0 in-degree: [EUU].
Visit node EUU and remove it from the graph.
Nodes with 0 in-degree: [NCZ].
Visit node NCZ and remove it from the graph.
So the result of topological sorting is ","('[[BVJ, AJK, UIV, DCU, NZE, SJG, CPS, EGH, TBR, EUU, NCZ], [BVJ, AJK, UIV, DCU, NZE, CPS, SJG, TBR, EGH, EUU, NCZ], [BVJ, AJK, UIV, EGH, EUU, NCZ, DCU, NZE, CPS, SJG, TBR], [BVJ, UIV, NCZ, TBR, EUU, AJK, NZE, EGH, DCU, CPS, SJG]]',)",1,222
topological_sort,"[(PWN, YEQ), (PWN, CIF), (YEQ, IFG), (CIF, YEQ), (YBA, YEQ), (YBA, ATO), (YBA, IFG), (YBA, PWN), (ATO, YEQ), (ATO, IFG), (ZZH, XFQ), (ZZH, ATO), (ZZH, IFG), (ZZH, PWN), (ZZH, CIF), (ZZH, YEQ), (ZZH, YBA), (XFQ, ATO), (XFQ, PWN), (XFQ, YEQ), (XFQ, YSC), (YSC, CIF), (YSC, YBA), (PCN, YSC), (PCN, ZZH)]","{PWN: [YEQ, CIF],
YEQ: [IFG],
CIF: [YEQ],
IFG: [],
YBA: [YEQ, ATO, IFG, PWN],
ATO: [YEQ, IFG],
ZZH: [XFQ, ATO, IFG, PWN, CIF, YEQ, YBA],
XFQ: [ATO, PWN, YEQ, YSC],
YSC: [CIF, YBA],
PCN: [YSC, ZZH]}","Node PWN is connected to nodes YEQ, CIF.
Node YEQ is connected to node IFG.
Node CIF is connected to node YEQ.
Node YBA is connected to nodes YEQ, ATO, IFG, PWN.
Node ATO is connected to nodes YEQ, IFG.
Node ZZH is connected to nodes XFQ, ATO, IFG, PWN, CIF, YEQ, YBA.
Node XFQ is connected to nodes ATO, PWN, YEQ, YSC.
Node YSC is connected to nodes CIF, YBA.
Node PCN is connected to nodes YSC, ZZH.","[IFG, YEQ, XFQ, ATO, ZZH, YSC, PCN, CIF, YBA, PWN]",10,25,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PCN, ZZH, XFQ, YSC, YBA, ATO, PWN, CIF, YEQ, IFG]","Let's solve it step by step.
Nodes with 0 in-degree: [PCN].
Visit node PCN and remove it from the graph.
Nodes with 0 in-degree: [ZZH].
Visit node ZZH and remove it from the graph.
Nodes with 0 in-degree: [XFQ].
Visit node XFQ and remove it from the graph.
Nodes with 0 in-degree: [YSC].
Visit node YSC and remove it from the graph.
Nodes with 0 in-degree: [YBA].
Visit node YBA and remove it from the graph.
Nodes with 0 in-degree: [ATO, PWN].
Visit node ATO and remove it from the graph.
Nodes with 0 in-degree: [PWN].
Visit node PWN and remove it from the graph.
Nodes with 0 in-degree: [CIF].
Visit node CIF and remove it from the graph.
Nodes with 0 in-degree: [YEQ].
Visit node YEQ and remove it from the graph.
Nodes with 0 in-degree: [IFG].
Visit node IFG and remove it from the graph.
So the result of topological sorting is ","('[[PCN, ZZH, XFQ, YSC, YBA, CIF, ATO, PWN, YEQ, IFG], [PCN, ZZH, XFQ, CIF, YEQ, IFG, YSC, YBA, ATO, PWN], [PCN, ZZH, XFQ, YSC, YBA, ATO, PWN, CIF, YEQ, IFG], [PCN, PWN, IFG, CIF, XFQ, YEQ, YSC, YBA, ATO, ZZH]]',)",2,223
topological_sort,"[(VLA, QBE), (VLA, WQT), (QBE, XQH), (WQT, QBE), (WQT, JGM), (XQH, JGM), (XGP, QBE), (XGP, VLA), (JGM, YLW), (HZB, YLW), (HZB, JIS), (JIS, JGM), (JIS, XQH), (JIS, XGP), (WQE, JIS), (WQE, HZB)]","{VLA: [QBE, WQT],
QBE: [XQH],
WQT: [QBE, JGM],
XQH: [JGM],
XGP: [QBE, VLA],
JGM: [YLW],
YLW: [],
HZB: [YLW, JIS],
JIS: [JGM, XQH, XGP],
WQE: [JIS, HZB]}","Node VLA is connected to nodes QBE, WQT.
Node QBE is connected to node XQH.
Node WQT is connected to nodes QBE, JGM.
Node XQH is connected to node JGM.
Node XGP is connected to nodes QBE, VLA.
Node JGM is connected to node YLW.
Node HZB is connected to nodes YLW, JIS.
Node JIS is connected to nodes JGM, XQH, XGP.
Node WQE is connected to nodes JIS, HZB.","[XQH, VLA, WQT, HZB, YLW, QBE, JIS, WQE, XGP, JGM]",10,16,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WQE, HZB, JIS, XGP, VLA, WQT, QBE, XQH, JGM, YLW]","Let's solve it step by step.
Nodes with 0 in-degree: [WQE].
Visit node WQE and remove it from the graph.
Nodes with 0 in-degree: [HZB].
Visit node HZB and remove it from the graph.
Nodes with 0 in-degree: [JIS].
Visit node JIS and remove it from the graph.
Nodes with 0 in-degree: [XGP].
Visit node XGP and remove it from the graph.
Nodes with 0 in-degree: [VLA].
Visit node VLA and remove it from the graph.
Nodes with 0 in-degree: [WQT].
Visit node WQT and remove it from the graph.
Nodes with 0 in-degree: [QBE].
Visit node QBE and remove it from the graph.
Nodes with 0 in-degree: [XQH].
Visit node XQH and remove it from the graph.
Nodes with 0 in-degree: [JGM].
Visit node JGM and remove it from the graph.
Nodes with 0 in-degree: [YLW].
Visit node YLW and remove it from the graph.
So the result of topological sorting is ","('[[WQE, HZB, JIS, XGP, VLA, WQT, QBE, XQH, JGM, YLW], [WQE, HZB, JIS, XQH, JGM, YLW, XGP, VLA, WQT, QBE], [WQE, WQT, QBE, XQH, HZB, YLW, XGP, JGM, VLA, JIS], [WQE, HZB, JIS, XGP, VLA, QBE, XQH, YLW, WQT, JGM]]',)",0,224
topological_sort,"[(QPZ, SUD), (QPZ, PQT), (SUD, QRO), (SUD, VVV), (SUD, PQT), (PQT, CZZ), (PQT, LTZ), (QRO, CZZ), (OYJ, QPZ), (OYJ, VVV), (VQA, PQT), (VQA, CZZ), (VQA, SUD), (CZZ, LTZ), (CZZ, VVV), (LTZ, VVV), (GWD, OYJ), (IQN, GWD), (LXQ, OYJ)]","{QPZ: [SUD, PQT],
SUD: [QRO, VVV, PQT],
PQT: [CZZ, LTZ],
QRO: [CZZ],
VVV: [],
OYJ: [QPZ, VVV],
VQA: [PQT, CZZ, SUD],
CZZ: [LTZ, VVV],
LTZ: [VVV],
GWD: [OYJ],
IQN: [GWD],
LXQ: [OYJ]}","Node QPZ is connected to nodes SUD, PQT.
Node SUD is connected to nodes QRO, VVV, PQT.
Node PQT is connected to nodes CZZ, LTZ.
Node QRO is connected to node CZZ.
Node OYJ is connected to nodes QPZ, VVV.
Node VQA is connected to nodes PQT, CZZ, SUD.
Node CZZ is connected to nodes LTZ, VVV.
Node LTZ is connected to node VVV.
Node GWD is connected to node OYJ.
Node IQN is connected to node GWD.
Node LXQ is connected to node OYJ.","[OYJ, VQA, QRO, GWD, CZZ, PQT, VVV, SUD, LTZ, LXQ, QPZ, IQN]",12,19,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VQA, IQN, LXQ, GWD, OYJ, QPZ, SUD, QRO, PQT, CZZ, LTZ, VVV]","Let's solve it step by step.
Nodes with 0 in-degree: [VQA, IQN, LXQ].
Visit node VQA and remove it from the graph.
Nodes with 0 in-degree: [IQN, LXQ].
Visit node IQN and remove it from the graph.
Nodes with 0 in-degree: [LXQ, GWD].
Visit node LXQ and remove it from the graph.
Nodes with 0 in-degree: [GWD].
Visit node GWD and remove it from the graph.
Nodes with 0 in-degree: [OYJ].
Visit node OYJ and remove it from the graph.
Nodes with 0 in-degree: [QPZ].
Visit node QPZ and remove it from the graph.
Nodes with 0 in-degree: [SUD].
Visit node SUD and remove it from the graph.
Nodes with 0 in-degree: [QRO, PQT].
Visit node QRO and remove it from the graph.
Nodes with 0 in-degree: [PQT].
Visit node PQT and remove it from the graph.
Nodes with 0 in-degree: [CZZ].
Visit node CZZ and remove it from the graph.
Nodes with 0 in-degree: [LTZ].
Visit node LTZ and remove it from the graph.
Nodes with 0 in-degree: [VVV].
Visit node VVV and remove it from the graph.
So the result of topological sorting is ","('[[VQA, IQN, LXQ, GWD, OYJ, QPZ, SUD, VVV, CZZ, LTZ, QRO, PQT], [VQA, IQN, LXQ, GWD, PQT, CZZ, LTZ, VVV, OYJ, QPZ, SUD, QRO], [VQA, LTZ, PQT, LXQ, IQN, CZZ, OYJ, SUD, VVV, QRO, QPZ, GWD], [VQA, IQN, LXQ, GWD, OYJ, QPZ, SUD, QRO, PQT, CZZ, LTZ, VVV]]',)",3,225
topological_sort,"[(RMF, YJX), (RMF, FDA), (YJX, INT), (YJX, EZX), (YJX, RAQ), (FDA, UKK), (FDA, GSG), (EZX, GSG), (EZX, RAQ), (EZX, UKK), (UYP, FDA), (UYP, UKK), (UYP, YJX), (UKK, RAQ), (GSG, RAQ), (LTE, RMF), (LTE, FDA), (LTE, UKK)]","{RMF: [YJX, FDA],
YJX: [INT, EZX, RAQ],
FDA: [UKK, GSG],
INT: [],
EZX: [GSG, RAQ, UKK],
RAQ: [],
UYP: [FDA, UKK, YJX],
UKK: [RAQ],
GSG: [RAQ],
LTE: [RMF, FDA, UKK]}","Node RMF is connected to nodes YJX, FDA.
Node YJX is connected to nodes INT, EZX, RAQ.
Node FDA is connected to nodes UKK, GSG.
Node EZX is connected to nodes GSG, RAQ, UKK.
Node UYP is connected to nodes FDA, UKK, YJX.
Node UKK is connected to node RAQ.
Node GSG is connected to node RAQ.
Node LTE is connected to nodes RMF, FDA, UKK.","[EZX, UYP, UKK, RMF, YJX, INT, FDA, LTE, GSG, RAQ]",10,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UYP, LTE, RMF, YJX, FDA, INT, EZX, GSG, UKK, RAQ]","Let's solve it step by step.
Nodes with 0 in-degree: [UYP, LTE].
Visit node UYP and remove it from the graph.
Nodes with 0 in-degree: [LTE].
Visit node LTE and remove it from the graph.
Nodes with 0 in-degree: [RMF].
Visit node RMF and remove it from the graph.
Nodes with 0 in-degree: [YJX, FDA].
Visit node YJX and remove it from the graph.
Nodes with 0 in-degree: [FDA, INT, EZX].
Visit node FDA and remove it from the graph.
Nodes with 0 in-degree: [INT, EZX].
Visit node INT and remove it from the graph.
Nodes with 0 in-degree: [EZX].
Visit node EZX and remove it from the graph.
Nodes with 0 in-degree: [GSG, UKK].
Visit node GSG and remove it from the graph.
Nodes with 0 in-degree: [UKK].
Visit node UKK and remove it from the graph.
Nodes with 0 in-degree: [RAQ].
Visit node RAQ and remove it from the graph.
So the result of topological sorting is ","('[[UYP, LTE, RMF, YJX, FDA, UKK, INT, RAQ, EZX, GSG], [UYP, LTE, RMF, GSG, UKK, RAQ, YJX, FDA, INT, EZX], [UYP, LTE, RMF, YJX, FDA, INT, EZX, GSG, UKK, RAQ], [UYP, GSG, YJX, UKK, EZX, INT, FDA, LTE, RAQ, RMF]]',)",2,226
topological_sort,"[(LIK, RMY), (LIK, APS), (LIK, OZR), (RMY, MWL), (RMY, JKI), (APS, JKI), (APS, DTU), (OZR, APS), (OZR, DTU), (OZR, RMY), (MWL, APS), (MWL, JKI), (JKI, DTU), (VNJ, MWL), (VNJ, NMK), (NMK, PIG), (NMK, OZR), (NMK, APS), (MSK, OZR), (MSK, LIK), (MSK, VNJ), (MSK, PIG), (MSK, NMK), (MSK, RMY), (PIG, JKI), (PIG, OZR)]","{LIK: [RMY, APS, OZR],
RMY: [MWL, JKI],
APS: [JKI, DTU],
OZR: [APS, DTU, RMY],
MWL: [APS, JKI],
JKI: [DTU],
DTU: [],
VNJ: [MWL, NMK],
NMK: [PIG, OZR, APS],
MSK: [OZR, LIK, VNJ, PIG, NMK, RMY],
PIG: [JKI, OZR]}","Node LIK is connected to nodes RMY, APS, OZR.
Node RMY is connected to nodes MWL, JKI.
Node APS is connected to nodes JKI, DTU.
Node OZR is connected to nodes APS, DTU, RMY.
Node MWL is connected to nodes APS, JKI.
Node JKI is connected to node DTU.
Node VNJ is connected to nodes MWL, NMK.
Node NMK is connected to nodes PIG, OZR, APS.
Node MSK is connected to nodes OZR, LIK, VNJ, PIG, NMK, RMY.
Node PIG is connected to nodes JKI, OZR.","[MSK, RMY, MWL, APS, NMK, VNJ, PIG, JKI, LIK, DTU, OZR]",11,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MSK, LIK, VNJ, NMK, PIG, OZR, RMY, MWL, APS, JKI, DTU]","Let's solve it step by step.
Nodes with 0 in-degree: [MSK].
Visit node MSK and remove it from the graph.
Nodes with 0 in-degree: [LIK, VNJ].
Visit node LIK and remove it from the graph.
Nodes with 0 in-degree: [VNJ].
Visit node VNJ and remove it from the graph.
Nodes with 0 in-degree: [NMK].
Visit node NMK and remove it from the graph.
Nodes with 0 in-degree: [PIG].
Visit node PIG and remove it from the graph.
Nodes with 0 in-degree: [OZR].
Visit node OZR and remove it from the graph.
Nodes with 0 in-degree: [RMY].
Visit node RMY and remove it from the graph.
Nodes with 0 in-degree: [MWL].
Visit node MWL and remove it from the graph.
Nodes with 0 in-degree: [APS].
Visit node APS and remove it from the graph.
Nodes with 0 in-degree: [JKI].
Visit node JKI and remove it from the graph.
Nodes with 0 in-degree: [DTU].
Visit node DTU and remove it from the graph.
So the result of topological sorting is ","('[[MSK, LIK, VNJ, NMK, PIG, OZR, RMY, MWL, APS, JKI, DTU], [MSK, LIK, VNJ, APS, JKI, DTU, NMK, PIG, OZR, RMY, MWL], [MSK, LIK, VNJ, NMK, PIG, RMY, APS, DTU, MWL, OZR, JKI], [MSK, DTU, APS, RMY, OZR, PIG, MWL, NMK, VNJ, JKI, LIK]]',)",0,227
topological_sort,"[(JFS, WMV), (JFS, HYQ), (JFS, WHF), (JFS, KDX), (JFS, YFT), (JFS, TVP), (WMV, WFZ), (WMV, SXF), (WMV, WHF), (WMV, YFT), (WMV, TVP), (WMV, HYQ), (HYQ, IGM), (HYQ, EYH), (HYQ, YFT), (HYQ, SXF), (HYQ, WHF), (HYQ, WFZ), (HYQ, TVP), (WHF, WFZ), (WHF, JOI), (WHF, SXF), (WHF, YFT), (WHF, TVP), (WHF, EYH), (YFT, EYH), (YFT, SXF), (YFT, GCO), (YFT, WFZ), (TVP, EYH), (TVP, GCO), (TVP, YFT), (TVP, KDX), (TVP, IGM), (WFZ, KDX), (SXF, WFZ), (EYH, GCO), (EYH, WFZ), (GCO, KDX), (GCO, IGM), (WUM, KDX), (WUM, JOI), (WUM, IGM), (WUM, JFS), (JOI, YFT), (JOI, EYH), (JOI, WFZ), (JOI, KDX)]","{JFS: [WMV, HYQ, WHF, KDX, YFT, TVP],
WMV: [WFZ, SXF, WHF, YFT, TVP, HYQ],
HYQ: [IGM, EYH, YFT, SXF, WHF, WFZ, TVP],
WHF: [WFZ, JOI, SXF, YFT, TVP, EYH],
KDX: [],
YFT: [EYH, SXF, GCO, WFZ],
TVP: [EYH, GCO, YFT, KDX, IGM],
WFZ: [KDX],
SXF: [WFZ],
EYH: [GCO, WFZ],
GCO: [KDX, IGM],
IGM: [],
WUM: [KDX, JOI, IGM, JFS],
JOI: [YFT, EYH, WFZ, KDX]}","Node JFS is connected to nodes WMV, HYQ, WHF, KDX, YFT, TVP.
Node WMV is connected to nodes WFZ, SXF, WHF, YFT, TVP, HYQ.
Node HYQ is connected to nodes IGM, EYH, YFT, SXF, WHF, WFZ, TVP.
Node WHF is connected to nodes WFZ, JOI, SXF, YFT, TVP, EYH.
Node YFT is connected to nodes EYH, SXF, GCO, WFZ.
Node TVP is connected to nodes EYH, GCO, YFT, KDX, IGM.
Node WFZ is connected to node KDX.
Node SXF is connected to node WFZ.
Node EYH is connected to nodes GCO, WFZ.
Node GCO is connected to nodes KDX, IGM.
Node WUM is connected to nodes KDX, JOI, IGM, JFS.
Node JOI is connected to nodes YFT, EYH, WFZ, KDX.","[WFZ, IGM, SXF, JOI, TVP, JFS, GCO, WUM, EYH, WMV, YFT, WHF, HYQ, KDX]",14,48,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WUM, JFS, WMV, HYQ, WHF, JOI, TVP, YFT, EYH, SXF, GCO, WFZ, IGM, KDX]","Let's solve it step by step.
Nodes with 0 in-degree: [WUM].
Visit node WUM and remove it from the graph.
Nodes with 0 in-degree: [JFS].
Visit node JFS and remove it from the graph.
Nodes with 0 in-degree: [WMV].
Visit node WMV and remove it from the graph.
Nodes with 0 in-degree: [HYQ].
Visit node HYQ and remove it from the graph.
Nodes with 0 in-degree: [WHF].
Visit node WHF and remove it from the graph.
Nodes with 0 in-degree: [JOI, TVP].
Visit node JOI and remove it from the graph.
Nodes with 0 in-degree: [TVP].
Visit node TVP and remove it from the graph.
Nodes with 0 in-degree: [YFT].
Visit node YFT and remove it from the graph.
Nodes with 0 in-degree: [EYH, SXF].
Visit node EYH and remove it from the graph.
Nodes with 0 in-degree: [SXF, GCO].
Visit node SXF and remove it from the graph.
Nodes with 0 in-degree: [GCO, WFZ].
Visit node GCO and remove it from the graph.
Nodes with 0 in-degree: [WFZ, IGM].
Visit node WFZ and remove it from the graph.
Nodes with 0 in-degree: [IGM, KDX].
Visit node IGM and remove it from the graph.
Nodes with 0 in-degree: [KDX].
Visit node KDX and remove it from the graph.
So the result of topological sorting is ","('[[WUM, JFS, WMV, HYQ, WHF, JOI, TVP, YFT, EYH, SXF, GCO, WFZ, IGM, KDX], [WUM, JFS, WMV, HYQ, WHF, JOI, TVP, GCO, IGM, WFZ, EYH, SXF, KDX, YFT], [WUM, JFS, WMV, HYQ, GCO, WFZ, IGM, KDX, WHF, JOI, TVP, YFT, EYH, SXF], [WUM, SXF, JOI, EYH, HYQ, WHF, KDX, IGM, YFT, GCO, JFS, WMV, WFZ, TVP]]',)",0,228
topological_sort,"[(IUM, XKB), (IUM, QHY), (IUM, ESV), (IUM, KQE), (IUM, DUZ), (ESV, KIZ), (KQE, KIZ), (KIZ, XKB), (OLT, OGQ), (OLT, XKB), (OLT, ZPN), (ZPN, XKB), (ZPN, KQE), (KIH, KQE), (KIH, ESV), (KIH, XKB)]","{IUM: [XKB, QHY, ESV, KQE, DUZ],
XKB: [],
QHY: [],
ESV: [KIZ],
KQE: [KIZ],
DUZ: [],
KIZ: [XKB],
OLT: [OGQ, XKB, ZPN],
OGQ: [],
ZPN: [XKB, KQE],
KIH: [KQE, ESV, XKB]}","Node IUM is connected to nodes XKB, QHY, ESV, KQE, DUZ.
Node ESV is connected to node KIZ.
Node KQE is connected to node KIZ.
Node KIZ is connected to node XKB.
Node OLT is connected to nodes OGQ, XKB, ZPN.
Node ZPN is connected to nodes XKB, KQE.
Node KIH is connected to nodes KQE, ESV, XKB.","[QHY, OGQ, XKB, ZPN, KIZ, KQE, OLT, DUZ, IUM, ESV, KIH]",11,16,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IUM, OLT, KIH, QHY, DUZ, OGQ, ZPN, ESV, KQE, KIZ, XKB]","Let's solve it step by step.
Nodes with 0 in-degree: [IUM, OLT, KIH].
Visit node IUM and remove it from the graph.
Nodes with 0 in-degree: [OLT, KIH, QHY, DUZ].
Visit node OLT and remove it from the graph.
Nodes with 0 in-degree: [KIH, QHY, DUZ, OGQ, ZPN].
Visit node KIH and remove it from the graph.
Nodes with 0 in-degree: [QHY, DUZ, OGQ, ZPN, ESV].
Visit node QHY and remove it from the graph.
Nodes with 0 in-degree: [DUZ, OGQ, ZPN, ESV].
Visit node DUZ and remove it from the graph.
Nodes with 0 in-degree: [OGQ, ZPN, ESV].
Visit node OGQ and remove it from the graph.
Nodes with 0 in-degree: [ZPN, ESV].
Visit node ZPN and remove it from the graph.
Nodes with 0 in-degree: [ESV, KQE].
Visit node ESV and remove it from the graph.
Nodes with 0 in-degree: [KQE].
Visit node KQE and remove it from the graph.
Nodes with 0 in-degree: [KIZ].
Visit node KIZ and remove it from the graph.
Nodes with 0 in-degree: [XKB].
Visit node XKB and remove it from the graph.
So the result of topological sorting is ","('[[IUM, OLT, KIH, KQE, KIZ, XKB, QHY, DUZ, OGQ, ZPN, ESV], [IUM, OLT, KIH, QHY, DUZ, OGQ, ZPN, ESV, KQE, KIZ, XKB], [IUM, OLT, KIH, QHY, DUZ, KQE, OGQ, KIZ, ZPN, XKB, ESV], [IUM, OLT, XKB, KIH, QHY, OGQ, ESV, DUZ, KIZ, KQE, ZPN]]',)",1,229
topological_sort,"[(IZK, OHU), (IZK, KIG), (IZK, WBI), (IZK, KEF), (IZK, LSJ), (KIG, LSJ), (KIG, LBY), (WBI, OHU), (KEF, OHU), (KEF, URO), (KEF, FTT), (LSJ, FTT), (LBY, WBI), (URO, AYP), (AYP, KIG), (AYP, OHU)]","{IZK: [OHU, KIG, WBI, KEF, LSJ],
OHU: [],
KIG: [LSJ, LBY],
WBI: [OHU],
KEF: [OHU, URO, FTT],
LSJ: [FTT],
LBY: [WBI],
URO: [AYP],
AYP: [KIG, OHU],
FTT: []}","Node IZK is connected to nodes OHU, KIG, WBI, KEF, LSJ.
Node KIG is connected to nodes LSJ, LBY.
Node WBI is connected to node OHU.
Node KEF is connected to nodes OHU, URO, FTT.
Node LSJ is connected to node FTT.
Node LBY is connected to node WBI.
Node URO is connected to node AYP.
Node AYP is connected to nodes KIG, OHU.","[WBI, OHU, LSJ, IZK, LBY, KIG, AYP, URO, FTT, KEF]",10,16,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IZK, KEF, URO, AYP, KIG, LSJ, LBY, FTT, WBI, OHU]","Let's solve it step by step.
Nodes with 0 in-degree: [IZK].
Visit node IZK and remove it from the graph.
Nodes with 0 in-degree: [KEF].
Visit node KEF and remove it from the graph.
Nodes with 0 in-degree: [URO].
Visit node URO and remove it from the graph.
Nodes with 0 in-degree: [AYP].
Visit node AYP and remove it from the graph.
Nodes with 0 in-degree: [KIG].
Visit node KIG and remove it from the graph.
Nodes with 0 in-degree: [LSJ, LBY].
Visit node LSJ and remove it from the graph.
Nodes with 0 in-degree: [LBY, FTT].
Visit node LBY and remove it from the graph.
Nodes with 0 in-degree: [FTT, WBI].
Visit node FTT and remove it from the graph.
Nodes with 0 in-degree: [WBI].
Visit node WBI and remove it from the graph.
Nodes with 0 in-degree: [OHU].
Visit node OHU and remove it from the graph.
So the result of topological sorting is ","('[[IZK, KEF, URO, AYP, KIG, LBY, FTT, WBI, LSJ, OHU], [IZK, KEF, URO, AYP, KIG, LSJ, LBY, FTT, WBI, OHU], [IZK, KEF, URO, FTT, WBI, OHU, AYP, KIG, LSJ, LBY], [IZK, LBY, FTT, KEF, URO, KIG, AYP, OHU, LSJ, WBI]]',)",1,230
topological_sort,"[(NFF, KAR), (NFF, ABE), (NFF, MGI), (NFF, YJC), (KAR, RIZ), (KAR, MGI), (ABE, RIZ), (CID, ABE), (CID, KAR), (PHJ, AHR), (PHJ, MGI), (AHR, RIZ)]","{NFF: [KAR, ABE, MGI, YJC],
KAR: [RIZ, MGI],
ABE: [RIZ],
MGI: [],
YJC: [],
RIZ: [],
CID: [ABE, KAR],
PHJ: [AHR, MGI],
AHR: [RIZ]}","Node NFF is connected to nodes KAR, ABE, MGI, YJC.
Node KAR is connected to nodes RIZ, MGI.
Node ABE is connected to node RIZ.
Node CID is connected to nodes ABE, KAR.
Node PHJ is connected to nodes AHR, MGI.
Node AHR is connected to node RIZ.","[RIZ, PHJ, YJC, ABE, AHR, MGI, CID, KAR, NFF]",9,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[NFF, CID, PHJ, YJC, ABE, KAR, AHR, MGI, RIZ]","Let's solve it step by step.
Nodes with 0 in-degree: [NFF, CID, PHJ].
Visit node NFF and remove it from the graph.
Nodes with 0 in-degree: [CID, PHJ, YJC].
Visit node CID and remove it from the graph.
Nodes with 0 in-degree: [PHJ, YJC, ABE, KAR].
Visit node PHJ and remove it from the graph.
Nodes with 0 in-degree: [YJC, ABE, KAR, AHR].
Visit node YJC and remove it from the graph.
Nodes with 0 in-degree: [ABE, KAR, AHR].
Visit node ABE and remove it from the graph.
Nodes with 0 in-degree: [KAR, AHR].
Visit node KAR and remove it from the graph.
Nodes with 0 in-degree: [AHR, MGI].
Visit node AHR and remove it from the graph.
Nodes with 0 in-degree: [MGI, RIZ].
Visit node MGI and remove it from the graph.
Nodes with 0 in-degree: [RIZ].
Visit node RIZ and remove it from the graph.
So the result of topological sorting is ","('[[NFF, CID, PHJ, YJC, RIZ, ABE, AHR, MGI, KAR], [NFF, CID, PHJ, YJC, ABE, KAR, AHR, MGI, RIZ], [NFF, CID, PHJ, AHR, MGI, RIZ, YJC, ABE, KAR], [NFF, ABE, AHR, CID, KAR, MGI, YJC, RIZ, PHJ]]',)",1,231
topological_sort,"[(JRC, BFB), (JRC, NWU), (BFB, AYA), (BFB, HUK), (BFB, ZXZ), (NWU, AYA), (NWU, HUK), (ZXZ, HYU), (VAL, AIK), (VAL, HUK), (VAL, ZXZ), (AIK, ZXZ), (AIK, AYA), (AIK, BFB), (XOV, JRC), (XOV, BFB), (XOV, NWU)]","{JRC: [BFB, NWU],
BFB: [AYA, HUK, ZXZ],
NWU: [AYA, HUK],
AYA: [],
HUK: [],
ZXZ: [HYU],
VAL: [AIK, HUK, ZXZ],
AIK: [ZXZ, AYA, BFB],
HYU: [],
XOV: [JRC, BFB, NWU]}","Node JRC is connected to nodes BFB, NWU.
Node BFB is connected to nodes AYA, HUK, ZXZ.
Node NWU is connected to nodes AYA, HUK.
Node ZXZ is connected to node HYU.
Node VAL is connected to nodes AIK, HUK, ZXZ.
Node AIK is connected to nodes ZXZ, AYA, BFB.
Node XOV is connected to nodes JRC, BFB, NWU.","[NWU, HUK, HYU, VAL, XOV, AYA, JRC, AIK, BFB, ZXZ]",10,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VAL, XOV, AIK, JRC, BFB, NWU, ZXZ, AYA, HUK, HYU]","Let's solve it step by step.
Nodes with 0 in-degree: [VAL, XOV].
Visit node VAL and remove it from the graph.
Nodes with 0 in-degree: [XOV, AIK].
Visit node XOV and remove it from the graph.
Nodes with 0 in-degree: [AIK, JRC].
Visit node AIK and remove it from the graph.
Nodes with 0 in-degree: [JRC].
Visit node JRC and remove it from the graph.
Nodes with 0 in-degree: [BFB, NWU].
Visit node BFB and remove it from the graph.
Nodes with 0 in-degree: [NWU, ZXZ].
Visit node NWU and remove it from the graph.
Nodes with 0 in-degree: [ZXZ, AYA, HUK].
Visit node ZXZ and remove it from the graph.
Nodes with 0 in-degree: [AYA, HUK, HYU].
Visit node AYA and remove it from the graph.
Nodes with 0 in-degree: [HUK, HYU].
Visit node HUK and remove it from the graph.
Nodes with 0 in-degree: [HYU].
Visit node HYU and remove it from the graph.
So the result of topological sorting is ","('[[VAL, XOV, AIK, JRC, BFB, NWU, AYA, HUK, HYU, ZXZ], [VAL, NWU, HYU, ZXZ, AYA, BFB, HUK, JRC, AIK, XOV], [VAL, XOV, AIK, AYA, HUK, HYU, JRC, BFB, NWU, ZXZ], [VAL, XOV, AIK, JRC, BFB, NWU, ZXZ, AYA, HUK, HYU]]',)",3,232
topological_sort,"[(ZAA, VXY), (ZAA, RYN), (ZAA, AQP), (ZAA, GAS), (RYN, VXY), (AQP, VXY), (AQP, RYN), (GAS, JRJ), (JRJ, WOO), (JRJ, AQP), (JRJ, RYN), (WOO, VXY), (ARP, DWV), (ARP, LJQ), (ARP, AQP), (ARP, WOO), (DWV, ZAA), (DWV, GAS), (LJQ, ZAA), (LJQ, DWV)]","{ZAA: [VXY, RYN, AQP, GAS],
VXY: [],
RYN: [VXY],
AQP: [VXY, RYN],
GAS: [JRJ],
JRJ: [WOO, AQP, RYN],
WOO: [VXY],
ARP: [DWV, LJQ, AQP, WOO],
DWV: [ZAA, GAS],
LJQ: [ZAA, DWV]}","Node ZAA is connected to nodes VXY, RYN, AQP, GAS.
Node RYN is connected to node VXY.
Node AQP is connected to nodes VXY, RYN.
Node GAS is connected to node JRJ.
Node JRJ is connected to nodes WOO, AQP, RYN.
Node WOO is connected to node VXY.
Node ARP is connected to nodes DWV, LJQ, AQP, WOO.
Node DWV is connected to nodes ZAA, GAS.
Node LJQ is connected to nodes ZAA, DWV.","[VXY, GAS, ZAA, DWV, LJQ, WOO, ARP, JRJ, RYN, AQP]",10,20,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ARP, LJQ, DWV, ZAA, GAS, JRJ, WOO, AQP, RYN, VXY]","Let's solve it step by step.
Nodes with 0 in-degree: [ARP].
Visit node ARP and remove it from the graph.
Nodes with 0 in-degree: [LJQ].
Visit node LJQ and remove it from the graph.
Nodes with 0 in-degree: [DWV].
Visit node DWV and remove it from the graph.
Nodes with 0 in-degree: [ZAA].
Visit node ZAA and remove it from the graph.
Nodes with 0 in-degree: [GAS].
Visit node GAS and remove it from the graph.
Nodes with 0 in-degree: [JRJ].
Visit node JRJ and remove it from the graph.
Nodes with 0 in-degree: [WOO, AQP].
Visit node WOO and remove it from the graph.
Nodes with 0 in-degree: [AQP].
Visit node AQP and remove it from the graph.
Nodes with 0 in-degree: [RYN].
Visit node RYN and remove it from the graph.
Nodes with 0 in-degree: [VXY].
Visit node VXY and remove it from the graph.
So the result of topological sorting is ","('[[ARP, LJQ, DWV, AQP, RYN, VXY, ZAA, GAS, JRJ, WOO], [ARP, RYN, JRJ, WOO, DWV, VXY, ZAA, AQP, LJQ, GAS], [ARP, LJQ, DWV, ZAA, GAS, WOO, VXY, RYN, JRJ, AQP], [ARP, LJQ, DWV, ZAA, GAS, JRJ, WOO, AQP, RYN, VXY]]',)",3,233
topological_sort,"[(CTQ, UXS), (UXS, CKX), (UXS, UOZ), (CKX, LUL), (CKX, IZV), (CKX, UOZ), (UOZ, OGC), (SPT, VVY), (SPT, UOZ), (VVY, ZMZ), (LUL, VVY), (LUL, UOZ), (TEM, CTQ), (TEM, JFQ), (TEM, CKX), (JFQ, ZMZ), (JFQ, CTQ), (JFQ, UOZ), (JFQ, IZV)]","{CTQ: [UXS],
UXS: [CKX, UOZ],
CKX: [LUL, IZV, UOZ],
UOZ: [OGC],
SPT: [VVY, UOZ],
VVY: [ZMZ],
ZMZ: [],
LUL: [VVY, UOZ],
IZV: [],
TEM: [CTQ, JFQ, CKX],
JFQ: [ZMZ, CTQ, UOZ, IZV],
OGC: []}","Node CTQ is connected to node UXS.
Node UXS is connected to nodes CKX, UOZ.
Node CKX is connected to nodes LUL, IZV, UOZ.
Node UOZ is connected to node OGC.
Node SPT is connected to nodes VVY, UOZ.
Node VVY is connected to node ZMZ.
Node LUL is connected to nodes VVY, UOZ.
Node TEM is connected to nodes CTQ, JFQ, CKX.
Node JFQ is connected to nodes ZMZ, CTQ, UOZ, IZV.","[UOZ, JFQ, UXS, IZV, CKX, ZMZ, LUL, TEM, OGC, SPT, VVY, CTQ]",12,19,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SPT, TEM, JFQ, CTQ, UXS, CKX, LUL, IZV, VVY, UOZ, ZMZ, OGC]","Let's solve it step by step.
Nodes with 0 in-degree: [SPT, TEM].
Visit node SPT and remove it from the graph.
Nodes with 0 in-degree: [TEM].
Visit node TEM and remove it from the graph.
Nodes with 0 in-degree: [JFQ].
Visit node JFQ and remove it from the graph.
Nodes with 0 in-degree: [CTQ].
Visit node CTQ and remove it from the graph.
Nodes with 0 in-degree: [UXS].
Visit node UXS and remove it from the graph.
Nodes with 0 in-degree: [CKX].
Visit node CKX and remove it from the graph.
Nodes with 0 in-degree: [LUL, IZV].
Visit node LUL and remove it from the graph.
Nodes with 0 in-degree: [IZV, VVY, UOZ].
Visit node IZV and remove it from the graph.
Nodes with 0 in-degree: [VVY, UOZ].
Visit node VVY and remove it from the graph.
Nodes with 0 in-degree: [UOZ, ZMZ].
Visit node UOZ and remove it from the graph.
Nodes with 0 in-degree: [ZMZ, OGC].
Visit node ZMZ and remove it from the graph.
Nodes with 0 in-degree: [OGC].
Visit node OGC and remove it from the graph.
So the result of topological sorting is ","('[[SPT, TEM, JFQ, CTQ, UXS, CKX, LUL, IZV, VVY, UOZ, ZMZ, OGC], [SPT, TEM, JFQ, CTQ, UXS, CKX, UOZ, OGC, ZMZ, VVY, IZV, LUL], [SPT, OGC, CKX, TEM, CTQ, UXS, VVY, UOZ, JFQ, ZMZ, IZV, LUL], [SPT, TEM, JFQ, CTQ, VVY, UOZ, ZMZ, OGC, UXS, CKX, LUL, IZV]]',)",0,234
topological_sort,"[(XJQ, GJF), (XJQ, GRM), (XJQ, XGF), (XJQ, HNH), (XJQ, KHK), (GJF, HSK), (GRM, GRW), (GRM, XGF), (GRM, FXU), (HNH, SFZ), (HNH, KHK), (KHK, HSK), (KHK, GRM), (KHK, HSQ), (KHK, XGF), (KHK, GJF), (HSK, GRW), (HSK, GRM), (HSQ, GRW), (HSQ, GJF), (HSQ, FXU), (HSQ, HSK), (GRW, FXU), (GRW, XGF), (GEE, GRM), (GEE, SFZ), (GEE, GJF), (GEE, HSK), (GEE, XGF), (SFZ, XGF), (SFZ, HSQ), (SFZ, GJF), (RFH, HSK), (RFH, GEE), (RFH, FXU), (RFH, GRW), (RFH, XJQ)]","{XJQ: [GJF, GRM, XGF, HNH, KHK],
GJF: [HSK],
GRM: [GRW, XGF, FXU],
XGF: [],
HNH: [SFZ, KHK],
KHK: [HSK, GRM, HSQ, XGF, GJF],
HSK: [GRW, GRM],
HSQ: [GRW, GJF, FXU, HSK],
GRW: [FXU, XGF],
FXU: [],
GEE: [GRM, SFZ, GJF, HSK, XGF],
SFZ: [XGF, HSQ, GJF],
RFH: [HSK, GEE, FXU, GRW, XJQ]}","Node XJQ is connected to nodes GJF, GRM, XGF, HNH, KHK.
Node GJF is connected to node HSK.
Node GRM is connected to nodes GRW, XGF, FXU.
Node HNH is connected to nodes SFZ, KHK.
Node KHK is connected to nodes HSK, GRM, HSQ, XGF, GJF.
Node HSK is connected to nodes GRW, GRM.
Node HSQ is connected to nodes GRW, GJF, FXU, HSK.
Node GRW is connected to nodes FXU, XGF.
Node GEE is connected to nodes GRM, SFZ, GJF, HSK, XGF.
Node SFZ is connected to nodes XGF, HSQ, GJF.
Node RFH is connected to nodes HSK, GEE, FXU, GRW, XJQ.","[SFZ, HSK, XGF, GRW, GRM, HNH, KHK, GJF, GEE, FXU, HSQ, RFH, XJQ]",13,37,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RFH, GEE, XJQ, HNH, SFZ, KHK, HSQ, GJF, HSK, GRM, GRW, FXU, XGF]","Let's solve it step by step.
Nodes with 0 in-degree: [RFH].
Visit node RFH and remove it from the graph.
Nodes with 0 in-degree: [GEE, XJQ].
Visit node GEE and remove it from the graph.
Nodes with 0 in-degree: [XJQ].
Visit node XJQ and remove it from the graph.
Nodes with 0 in-degree: [HNH].
Visit node HNH and remove it from the graph.
Nodes with 0 in-degree: [SFZ, KHK].
Visit node SFZ and remove it from the graph.
Nodes with 0 in-degree: [KHK].
Visit node KHK and remove it from the graph.
Nodes with 0 in-degree: [HSQ].
Visit node HSQ and remove it from the graph.
Nodes with 0 in-degree: [GJF].
Visit node GJF and remove it from the graph.
Nodes with 0 in-degree: [HSK].
Visit node HSK and remove it from the graph.
Nodes with 0 in-degree: [GRM].
Visit node GRM and remove it from the graph.
Nodes with 0 in-degree: [GRW].
Visit node GRW and remove it from the graph.
Nodes with 0 in-degree: [FXU, XGF].
Visit node FXU and remove it from the graph.
Nodes with 0 in-degree: [XGF].
Visit node XGF and remove it from the graph.
So the result of topological sorting is ","('[[RFH, GEE, XJQ, HNH, SFZ, KHK, HSK, GJF, HSQ, GRW, XGF, FXU, GRM], [RFH, GEE, XJQ, HNH, SFZ, KHK, HSQ, GJF, HSK, GRM, GRW, FXU, XGF], [RFH, GEE, XJQ, HNH, GRM, GRW, FXU, XGF, SFZ, KHK, HSQ, GJF, HSK], [RFH, HNH, SFZ, GRW, GRM, XGF, FXU, HSQ, XJQ, HSK, KHK, GEE, GJF]]',)",1,235
topological_sort,"[(BIN, HCY), (BIN, JPJ), (BIN, JAH), (BIN, NTJ), (JPJ, GXD), (JPJ, EKI), (JPJ, KBJ), (JPJ, GII), (JAH, HCY), (NTJ, NEU), (NTJ, JPJ), (NTJ, REJ), (NTJ, DDA), (KAW, GXD), (KAW, KBJ), (KAW, JPJ), (KAW, EKI), (GXD, EKI), (GXD, GII), (KBJ, OWT), (KBJ, REJ), (EKI, KBJ), (EKI, OWT), (EKI, JAH), (GII, EKI), (GII, HCY), (GII, OWT), (GII, REJ), (NEU, JAH), (NEU, REJ), (REJ, OWT), (REJ, HCY), (DDA, GXD), (DDA, ABR), (DDA, OWT), (DDA, KBJ), (ABR, REJ), (ABR, GII), (ABR, KAW), (ABR, OWT), (ABR, HCY)]","{BIN: [HCY, JPJ, JAH, NTJ],
HCY: [],
JPJ: [GXD, EKI, KBJ, GII],
JAH: [HCY],
NTJ: [NEU, JPJ, REJ, DDA],
KAW: [GXD, KBJ, JPJ, EKI],
GXD: [EKI, GII],
KBJ: [OWT, REJ],
EKI: [KBJ, OWT, JAH],
GII: [EKI, HCY, OWT, REJ],
NEU: [JAH, REJ],
REJ: [OWT, HCY],
DDA: [GXD, ABR, OWT, KBJ],
OWT: [],
ABR: [REJ, GII, KAW, OWT, HCY]}","Node BIN is connected to nodes HCY, JPJ, JAH, NTJ.
Node JPJ is connected to nodes GXD, EKI, KBJ, GII.
Node JAH is connected to node HCY.
Node NTJ is connected to nodes NEU, JPJ, REJ, DDA.
Node KAW is connected to nodes GXD, KBJ, JPJ, EKI.
Node GXD is connected to nodes EKI, GII.
Node KBJ is connected to nodes OWT, REJ.
Node EKI is connected to nodes KBJ, OWT, JAH.
Node GII is connected to nodes EKI, HCY, OWT, REJ.
Node NEU is connected to nodes JAH, REJ.
Node REJ is connected to nodes OWT, HCY.
Node DDA is connected to nodes GXD, ABR, OWT, KBJ.
Node ABR is connected to nodes REJ, GII, KAW, OWT, HCY.","[HCY, DDA, JPJ, NTJ, NEU, ABR, JAH, REJ, OWT, BIN, EKI, GII, KAW, GXD, KBJ]",15,41,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BIN, NTJ, NEU, DDA, ABR, KAW, JPJ, GXD, GII, EKI, KBJ, JAH, REJ, OWT, HCY]","Let's solve it step by step.
Nodes with 0 in-degree: [BIN].
Visit node BIN and remove it from the graph.
Nodes with 0 in-degree: [NTJ].
Visit node NTJ and remove it from the graph.
Nodes with 0 in-degree: [NEU, DDA].
Visit node NEU and remove it from the graph.
Nodes with 0 in-degree: [DDA].
Visit node DDA and remove it from the graph.
Nodes with 0 in-degree: [ABR].
Visit node ABR and remove it from the graph.
Nodes with 0 in-degree: [KAW].
Visit node KAW and remove it from the graph.
Nodes with 0 in-degree: [JPJ].
Visit node JPJ and remove it from the graph.
Nodes with 0 in-degree: [GXD].
Visit node GXD and remove it from the graph.
Nodes with 0 in-degree: [GII].
Visit node GII and remove it from the graph.
Nodes with 0 in-degree: [EKI].
Visit node EKI and remove it from the graph.
Nodes with 0 in-degree: [KBJ, JAH].
Visit node KBJ and remove it from the graph.
Nodes with 0 in-degree: [JAH, REJ].
Visit node JAH and remove it from the graph.
Nodes with 0 in-degree: [REJ].
Visit node REJ and remove it from the graph.
Nodes with 0 in-degree: [OWT, HCY].
Visit node OWT and remove it from the graph.
Nodes with 0 in-degree: [HCY].
Visit node HCY and remove it from the graph.
So the result of topological sorting is ","('[[BIN, DDA, REJ, HCY, NTJ, NEU, KAW, GXD, ABR, OWT, GII, JAH, EKI, KBJ, JPJ], [BIN, NTJ, NEU, DDA, ABR, KAW, JPJ, GXD, GII, EKI, KBJ, JAH, REJ, OWT, HCY], [BIN, NTJ, NEU, DDA, ABR, KBJ, JAH, REJ, OWT, HCY, KAW, JPJ, GXD, GII, EKI], [BIN, NTJ, NEU, DDA, ABR, KAW, JPJ, REJ, JAH, HCY, KBJ, EKI, OWT, GXD, GII]]',)",1,236
topological_sort,"[(CEN, NGN), (CEN, NZX), (CEN, IZS), (CEN, USD), (NGN, IZS), (NGN, DNY), (NZX, BAB), (IZS, EAE), (USD, CGV), (DNY, IZS), (CGV, NZX), (CGV, DNY), (CGV, DQR), (DQR, BAB), (BAB, DLP), (QEQ, USD), (QEQ, CGV), (QEQ, VDM), (QEQ, DLP), (QEQ, BAB), (QEQ, IZS), (VDM, CEN), (VDM, DQR), (VDM, NGN), (VDM, DNY), (VFF, CGV), (VFF, DNY)]","{CEN: [NGN, NZX, IZS, USD],
NGN: [IZS, DNY],
NZX: [BAB],
IZS: [EAE],
USD: [CGV],
DNY: [IZS],
EAE: [],
CGV: [NZX, DNY, DQR],
DQR: [BAB],
BAB: [DLP],
QEQ: [USD, CGV, VDM, DLP, BAB, IZS],
VDM: [CEN, DQR, NGN, DNY],
DLP: [],
VFF: [CGV, DNY]}","Node CEN is connected to nodes NGN, NZX, IZS, USD.
Node NGN is connected to nodes IZS, DNY.
Node NZX is connected to node BAB.
Node IZS is connected to node EAE.
Node USD is connected to node CGV.
Node DNY is connected to node IZS.
Node CGV is connected to nodes NZX, DNY, DQR.
Node DQR is connected to node BAB.
Node BAB is connected to node DLP.
Node QEQ is connected to nodes USD, CGV, VDM, DLP, BAB, IZS.
Node VDM is connected to nodes CEN, DQR, NGN, DNY.
Node VFF is connected to nodes CGV, DNY.","[NGN, CEN, DQR, IZS, DNY, NZX, VFF, CGV, EAE, BAB, QEQ, VDM, USD, DLP]",14,27,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QEQ, VFF, VDM, CEN, NGN, USD, CGV, NZX, DNY, DQR, IZS, BAB, EAE, DLP]","Let's solve it step by step.
Nodes with 0 in-degree: [QEQ, VFF].
Visit node QEQ and remove it from the graph.
Nodes with 0 in-degree: [VFF, VDM].
Visit node VFF and remove it from the graph.
Nodes with 0 in-degree: [VDM].
Visit node VDM and remove it from the graph.
Nodes with 0 in-degree: [CEN].
Visit node CEN and remove it from the graph.
Nodes with 0 in-degree: [NGN, USD].
Visit node NGN and remove it from the graph.
Nodes with 0 in-degree: [USD].
Visit node USD and remove it from the graph.
Nodes with 0 in-degree: [CGV].
Visit node CGV and remove it from the graph.
Nodes with 0 in-degree: [NZX, DNY, DQR].
Visit node NZX and remove it from the graph.
Nodes with 0 in-degree: [DNY, DQR].
Visit node DNY and remove it from the graph.
Nodes with 0 in-degree: [DQR, IZS].
Visit node DQR and remove it from the graph.
Nodes with 0 in-degree: [IZS, BAB].
Visit node IZS and remove it from the graph.
Nodes with 0 in-degree: [BAB, EAE].
Visit node BAB and remove it from the graph.
Nodes with 0 in-degree: [EAE, DLP].
Visit node EAE and remove it from the graph.
Nodes with 0 in-degree: [DLP].
Visit node DLP and remove it from the graph.
So the result of topological sorting is ","('[[QEQ, NGN, DLP, USD, EAE, DNY, NZX, VFF, CGV, BAB, DQR, VDM, IZS, CEN], [QEQ, VFF, VDM, CEN, IZS, BAB, EAE, DLP, NGN, USD, CGV, NZX, DNY, DQR], [QEQ, VFF, VDM, CEN, NGN, USD, CGV, NZX, DNY, DQR, IZS, BAB, EAE, DLP], [QEQ, VFF, VDM, CEN, NGN, USD, CGV, DNY, NZX, DQR, IZS, EAE, BAB, DLP]]',)",2,237
topological_sort,"[(EEX, TCM), (EEX, QKL), (EEX, YDG), (TCM, TMR), (YDG, JRO), (YDG, TCM), (SKP, YDG), (SKP, CCD), (SKP, EEX), (CCD, QKL), (JRO, CCD), (JRO, QKL), (NXB, TCM), (NXB, YDG), (NXB, EEX), (NXB, YPF), (YPF, TCM), (YPF, CCD), (YPF, SKP), (CFO, TMR), (CFO, SKP), (CFO, NXB)]","{EEX: [TCM, QKL, YDG],
TCM: [TMR],
QKL: [],
YDG: [JRO, TCM],
TMR: [],
SKP: [YDG, CCD, EEX],
CCD: [QKL],
JRO: [CCD, QKL],
NXB: [TCM, YDG, EEX, YPF],
YPF: [TCM, CCD, SKP],
CFO: [TMR, SKP, NXB]}","Node EEX is connected to nodes TCM, QKL, YDG.
Node TCM is connected to node TMR.
Node YDG is connected to nodes JRO, TCM.
Node SKP is connected to nodes YDG, CCD, EEX.
Node CCD is connected to node QKL.
Node JRO is connected to nodes CCD, QKL.
Node NXB is connected to nodes TCM, YDG, EEX, YPF.
Node YPF is connected to nodes TCM, CCD, SKP.
Node CFO is connected to nodes TMR, SKP, NXB.","[TMR, YPF, EEX, YDG, JRO, CFO, SKP, TCM, QKL, CCD, NXB]",11,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CFO, NXB, YPF, SKP, EEX, YDG, JRO, TCM, CCD, TMR, QKL]","Let's solve it step by step.
Nodes with 0 in-degree: [CFO].
Visit node CFO and remove it from the graph.
Nodes with 0 in-degree: [NXB].
Visit node NXB and remove it from the graph.
Nodes with 0 in-degree: [YPF].
Visit node YPF and remove it from the graph.
Nodes with 0 in-degree: [SKP].
Visit node SKP and remove it from the graph.
Nodes with 0 in-degree: [EEX].
Visit node EEX and remove it from the graph.
Nodes with 0 in-degree: [YDG].
Visit node YDG and remove it from the graph.
Nodes with 0 in-degree: [JRO, TCM].
Visit node JRO and remove it from the graph.
Nodes with 0 in-degree: [TCM, CCD].
Visit node TCM and remove it from the graph.
Nodes with 0 in-degree: [CCD, TMR].
Visit node CCD and remove it from the graph.
Nodes with 0 in-degree: [TMR, QKL].
Visit node TMR and remove it from the graph.
Nodes with 0 in-degree: [QKL].
Visit node QKL and remove it from the graph.
So the result of topological sorting is ","('[[CFO, JRO, TCM, CCD, YPF, NXB, TMR, EEX, YDG, SKP, QKL], [CFO, NXB, YPF, SKP, EEX, QKL, JRO, TCM, TMR, CCD, YDG], [CFO, NXB, YPF, SKP, EEX, YDG, JRO, TCM, CCD, TMR, QKL], [CFO, NXB, YPF, CCD, TMR, QKL, SKP, EEX, YDG, JRO, TCM]]',)",2,238
topological_sort,"[(MJL, KVL), (MJL, TAS), (TAS, TPP), (ZTH, JFP), (ZTH, MJL), (ZTH, EFH), (JFP, MJL), (JFP, SHN), (EFH, KVL), (EFH, WRZ), (SHN, KVL), (SHN, WRZ), (HQM, TYB), (HQM, TPP), (HQM, WRZ), (TYB, EFH), (TYB, SHN), (TYB, ZTH), (TPP, KVL), (TPP, EFH), (TPP, SHN)]","{MJL: [KVL, TAS],
KVL: [],
TAS: [TPP],
ZTH: [JFP, MJL, EFH],
JFP: [MJL, SHN],
EFH: [KVL, WRZ],
SHN: [KVL, WRZ],
HQM: [TYB, TPP, WRZ],
TYB: [EFH, SHN, ZTH],
TPP: [KVL, EFH, SHN],
WRZ: []}","Node MJL is connected to nodes KVL, TAS.
Node TAS is connected to node TPP.
Node ZTH is connected to nodes JFP, MJL, EFH.
Node JFP is connected to nodes MJL, SHN.
Node EFH is connected to nodes KVL, WRZ.
Node SHN is connected to nodes KVL, WRZ.
Node HQM is connected to nodes TYB, TPP, WRZ.
Node TYB is connected to nodes EFH, SHN, ZTH.
Node TPP is connected to nodes KVL, EFH, SHN.","[KVL, EFH, TPP, ZTH, MJL, WRZ, JFP, SHN, TYB, TAS, HQM]",11,21,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HQM, TYB, ZTH, JFP, MJL, TAS, TPP, EFH, SHN, KVL, WRZ]","Let's solve it step by step.
Nodes with 0 in-degree: [HQM].
Visit node HQM and remove it from the graph.
Nodes with 0 in-degree: [TYB].
Visit node TYB and remove it from the graph.
Nodes with 0 in-degree: [ZTH].
Visit node ZTH and remove it from the graph.
Nodes with 0 in-degree: [JFP].
Visit node JFP and remove it from the graph.
Nodes with 0 in-degree: [MJL].
Visit node MJL and remove it from the graph.
Nodes with 0 in-degree: [TAS].
Visit node TAS and remove it from the graph.
Nodes with 0 in-degree: [TPP].
Visit node TPP and remove it from the graph.
Nodes with 0 in-degree: [EFH, SHN].
Visit node EFH and remove it from the graph.
Nodes with 0 in-degree: [SHN].
Visit node SHN and remove it from the graph.
Nodes with 0 in-degree: [KVL, WRZ].
Visit node KVL and remove it from the graph.
Nodes with 0 in-degree: [WRZ].
Visit node WRZ and remove it from the graph.
So the result of topological sorting is ","('[[HQM, TYB, ZTH, JFP, MJL, TAS, TPP, EFH, SHN, KVL, WRZ], [HQM, TYB, ZTH, SHN, KVL, WRZ, JFP, MJL, TAS, TPP, EFH], [HQM, EFH, JFP, KVL, TYB, ZTH, TPP, WRZ, TAS, MJL, SHN], [HQM, TYB, ZTH, JFP, MJL, SHN, EFH, WRZ, TPP, TAS, KVL]]',)",0,239
topological_sort,"[(PPF, LKW), (PPF, LAF), (PPF, MUJ), (MUJ, TPV), (VDM, LAF), (VDM, JCJ), (VDM, PPF), (JCJ, TPV), (JVJ, MUJ), (JVJ, TPV), (EJQ, VDM), (TBB, EJQ), (TBB, LKW)]","{PPF: [LKW, LAF, MUJ],
LKW: [],
LAF: [],
MUJ: [TPV],
VDM: [LAF, JCJ, PPF],
JCJ: [TPV],
TPV: [],
JVJ: [MUJ, TPV],
EJQ: [VDM],
TBB: [EJQ, LKW]}","Node PPF is connected to nodes LKW, LAF, MUJ.
Node MUJ is connected to node TPV.
Node VDM is connected to nodes LAF, JCJ, PPF.
Node JCJ is connected to node TPV.
Node JVJ is connected to nodes MUJ, TPV.
Node EJQ is connected to node VDM.
Node TBB is connected to nodes EJQ, LKW.","[TPV, EJQ, PPF, JCJ, TBB, MUJ, LAF, LKW, JVJ, VDM]",10,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JVJ, TBB, EJQ, VDM, JCJ, PPF, LKW, LAF, MUJ, TPV]","Let's solve it step by step.
Nodes with 0 in-degree: [JVJ, TBB].
Visit node JVJ and remove it from the graph.
Nodes with 0 in-degree: [TBB].
Visit node TBB and remove it from the graph.
Nodes with 0 in-degree: [EJQ].
Visit node EJQ and remove it from the graph.
Nodes with 0 in-degree: [VDM].
Visit node VDM and remove it from the graph.
Nodes with 0 in-degree: [JCJ, PPF].
Visit node JCJ and remove it from the graph.
Nodes with 0 in-degree: [PPF].
Visit node PPF and remove it from the graph.
Nodes with 0 in-degree: [LKW, LAF, MUJ].
Visit node LKW and remove it from the graph.
Nodes with 0 in-degree: [LAF, MUJ].
Visit node LAF and remove it from the graph.
Nodes with 0 in-degree: [MUJ].
Visit node MUJ and remove it from the graph.
Nodes with 0 in-degree: [TPV].
Visit node TPV and remove it from the graph.
So the result of topological sorting is ","('[[JVJ, TBB, EJQ, VDM, JCJ, PPF, LKW, LAF, MUJ, TPV], [JVJ, LKW, TPV, PPF, LAF, JCJ, MUJ, TBB, VDM, EJQ], [JVJ, TBB, EJQ, VDM, JCJ, MUJ, TPV, LAF, LKW, PPF], [JVJ, TBB, EJQ, LAF, MUJ, TPV, VDM, JCJ, PPF, LKW]]',)",0,240
topological_sort,"[(HMR, OYX), (HMR, AUE), (OYX, DUN), (OYX, GFG), (AUE, DUN), (AUE, MGD), (AUE, OYX), (DUN, GFG), (GFG, MGD), (MGD, ZFU), (SQF, VWN), (SQF, HMR), (SQF, ZFU), (SQF, NGV), (SQF, DUN), (VWN, HMR), (NGV, HMR), (NGV, ZFU), (PFP, MGD), (PFP, AUE)]","{HMR: [OYX, AUE],
OYX: [DUN, GFG],
AUE: [DUN, MGD, OYX],
DUN: [GFG],
GFG: [MGD],
MGD: [ZFU],
SQF: [VWN, HMR, ZFU, NGV, DUN],
VWN: [HMR],
ZFU: [],
NGV: [HMR, ZFU],
PFP: [MGD, AUE]}","Node HMR is connected to nodes OYX, AUE.
Node OYX is connected to nodes DUN, GFG.
Node AUE is connected to nodes DUN, MGD, OYX.
Node DUN is connected to node GFG.
Node GFG is connected to node MGD.
Node MGD is connected to node ZFU.
Node SQF is connected to nodes VWN, HMR, ZFU, NGV, DUN.
Node VWN is connected to node HMR.
Node NGV is connected to nodes HMR, ZFU.
Node PFP is connected to nodes MGD, AUE.","[ZFU, HMR, PFP, OYX, AUE, SQF, VWN, DUN, GFG, NGV, MGD]",11,20,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SQF, PFP, VWN, NGV, HMR, AUE, OYX, DUN, GFG, MGD, ZFU]","Let's solve it step by step.
Nodes with 0 in-degree: [SQF, PFP].
Visit node SQF and remove it from the graph.
Nodes with 0 in-degree: [PFP, VWN, NGV].
Visit node PFP and remove it from the graph.
Nodes with 0 in-degree: [VWN, NGV].
Visit node VWN and remove it from the graph.
Nodes with 0 in-degree: [NGV].
Visit node NGV and remove it from the graph.
Nodes with 0 in-degree: [HMR].
Visit node HMR and remove it from the graph.
Nodes with 0 in-degree: [AUE].
Visit node AUE and remove it from the graph.
Nodes with 0 in-degree: [OYX].
Visit node OYX and remove it from the graph.
Nodes with 0 in-degree: [DUN].
Visit node DUN and remove it from the graph.
Nodes with 0 in-degree: [GFG].
Visit node GFG and remove it from the graph.
Nodes with 0 in-degree: [MGD].
Visit node MGD and remove it from the graph.
Nodes with 0 in-degree: [ZFU].
Visit node ZFU and remove it from the graph.
So the result of topological sorting is ","('[[SQF, PFP, VWN, NGV, HMR, ZFU, DUN, OYX, MGD, GFG, AUE], [SQF, VWN, GFG, NGV, MGD, HMR, AUE, PFP, ZFU, OYX, DUN], [SQF, PFP, VWN, NGV, HMR, AUE, OYX, DUN, GFG, MGD, ZFU], [SQF, PFP, VWN, GFG, MGD, ZFU, NGV, HMR, AUE, OYX, DUN]]',)",2,241
topological_sort,"[(DHE, QEM), (DHE, NMT), (DHE, XMK), (QEM, AYF), (QEM, MLN), (NMT, QEM), (NMT, JHC), (NMT, TDV), (NMT, XMK), (NMT, OJV), (AYF, OJV), (MLN, OJV), (MLN, NQR), (MLN, AYF), (MLN, TDV), (OJV, XMK), (NQR, AYF), (NQR, OJV), (TDV, AYF), (JHC, VRA), (JHC, QEM), (VRA, TDV), (VRA, AYF), (VRA, QEM), (RKQ, MLN), (RKQ, AYF), (RKQ, QEM), (RKQ, DHE)]","{DHE: [QEM, NMT, XMK],
QEM: [AYF, MLN],
NMT: [QEM, JHC, TDV, XMK, OJV],
XMK: [],
AYF: [OJV],
MLN: [OJV, NQR, AYF, TDV],
OJV: [XMK],
NQR: [AYF, OJV],
TDV: [AYF],
JHC: [VRA, QEM],
VRA: [TDV, AYF, QEM],
RKQ: [MLN, AYF, QEM, DHE]}","Node DHE is connected to nodes QEM, NMT, XMK.
Node QEM is connected to nodes AYF, MLN.
Node NMT is connected to nodes QEM, JHC, TDV, XMK, OJV.
Node AYF is connected to node OJV.
Node MLN is connected to nodes OJV, NQR, AYF, TDV.
Node OJV is connected to node XMK.
Node NQR is connected to nodes AYF, OJV.
Node TDV is connected to node AYF.
Node JHC is connected to nodes VRA, QEM.
Node VRA is connected to nodes TDV, AYF, QEM.
Node RKQ is connected to nodes MLN, AYF, QEM, DHE.","[NMT, AYF, VRA, MLN, JHC, TDV, OJV, DHE, NQR, XMK, QEM, RKQ]",12,28,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RKQ, DHE, NMT, JHC, VRA, QEM, MLN, NQR, TDV, AYF, OJV, XMK]","Let's solve it step by step.
Nodes with 0 in-degree: [RKQ].
Visit node RKQ and remove it from the graph.
Nodes with 0 in-degree: [DHE].
Visit node DHE and remove it from the graph.
Nodes with 0 in-degree: [NMT].
Visit node NMT and remove it from the graph.
Nodes with 0 in-degree: [JHC].
Visit node JHC and remove it from the graph.
Nodes with 0 in-degree: [VRA].
Visit node VRA and remove it from the graph.
Nodes with 0 in-degree: [QEM].
Visit node QEM and remove it from the graph.
Nodes with 0 in-degree: [MLN].
Visit node MLN and remove it from the graph.
Nodes with 0 in-degree: [NQR, TDV].
Visit node NQR and remove it from the graph.
Nodes with 0 in-degree: [TDV].
Visit node TDV and remove it from the graph.
Nodes with 0 in-degree: [AYF].
Visit node AYF and remove it from the graph.
Nodes with 0 in-degree: [OJV].
Visit node OJV and remove it from the graph.
Nodes with 0 in-degree: [XMK].
Visit node XMK and remove it from the graph.
So the result of topological sorting is ","('[[RKQ, OJV, AYF, TDV, JHC, QEM, NMT, MLN, VRA, NQR, DHE, XMK], [RKQ, DHE, NMT, JHC, VRA, QEM, MLN, NQR, TDV, AYF, OJV, XMK], [RKQ, DHE, NMT, JHC, TDV, AYF, OJV, XMK, VRA, QEM, MLN, NQR], [RKQ, DHE, NMT, JHC, VRA, QEM, AYF, TDV, XMK, MLN, NQR, OJV]]',)",1,242
topological_sort,"[(DWC, DAW), (DWC, AFY), (DWC, JUH), (DWC, EKM), (DAW, WXS), (AFY, WXS), (AFY, ACN), (AFY, JUH), (JUH, DAW), (JUH, NXS), (JUH, ACN), (EKM, ACN), (EKM, DAW), (EKM, NXS), (EID, DAW), (EID, EKM), (EID, IVA), (IVA, DAW), (ACN, WXS), (NVF, YBO), (NVF, EKM), (NVF, DAW), (NVF, UNM), (YBO, IVA), (YBO, AFY), (UNM, EKM), (UNM, AFY), (UNM, NXS), (UNM, YBO), (NXS, DAW)]","{DWC: [DAW, AFY, JUH, EKM],
DAW: [WXS],
AFY: [WXS, ACN, JUH],
JUH: [DAW, NXS, ACN],
EKM: [ACN, DAW, NXS],
WXS: [],
EID: [DAW, EKM, IVA],
IVA: [DAW],
ACN: [WXS],
NVF: [YBO, EKM, DAW, UNM],
YBO: [IVA, AFY],
UNM: [EKM, AFY, NXS, YBO],
NXS: [DAW]}","Node DWC is connected to nodes DAW, AFY, JUH, EKM.
Node DAW is connected to node WXS.
Node AFY is connected to nodes WXS, ACN, JUH.
Node JUH is connected to nodes DAW, NXS, ACN.
Node EKM is connected to nodes ACN, DAW, NXS.
Node EID is connected to nodes DAW, EKM, IVA.
Node IVA is connected to node DAW.
Node ACN is connected to node WXS.
Node NVF is connected to nodes YBO, EKM, DAW, UNM.
Node YBO is connected to nodes IVA, AFY.
Node UNM is connected to nodes EKM, AFY, NXS, YBO.
Node NXS is connected to node DAW.","[YBO, EKM, UNM, JUH, IVA, DAW, EID, NXS, DWC, ACN, NVF, AFY, WXS]",13,30,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DWC, EID, NVF, UNM, EKM, YBO, IVA, AFY, JUH, NXS, ACN, DAW, WXS]","Let's solve it step by step.
Nodes with 0 in-degree: [DWC, EID, NVF].
Visit node DWC and remove it from the graph.
Nodes with 0 in-degree: [EID, NVF].
Visit node EID and remove it from the graph.
Nodes with 0 in-degree: [NVF].
Visit node NVF and remove it from the graph.
Nodes with 0 in-degree: [UNM].
Visit node UNM and remove it from the graph.
Nodes with 0 in-degree: [EKM, YBO].
Visit node EKM and remove it from the graph.
Nodes with 0 in-degree: [YBO].
Visit node YBO and remove it from the graph.
Nodes with 0 in-degree: [IVA, AFY].
Visit node IVA and remove it from the graph.
Nodes with 0 in-degree: [AFY].
Visit node AFY and remove it from the graph.
Nodes with 0 in-degree: [JUH].
Visit node JUH and remove it from the graph.
Nodes with 0 in-degree: [NXS, ACN].
Visit node NXS and remove it from the graph.
Nodes with 0 in-degree: [ACN, DAW].
Visit node ACN and remove it from the graph.
Nodes with 0 in-degree: [DAW].
Visit node DAW and remove it from the graph.
Nodes with 0 in-degree: [WXS].
Visit node WXS and remove it from the graph.
So the result of topological sorting is ","('[[DWC, EID, NVF, UNM, EKM, YBO, IVA, AFY, JUH, NXS, ACN, DAW, WXS], [DWC, EID, NVF, UNM, NXS, ACN, DAW, WXS, EKM, YBO, IVA, AFY, JUH], [DWC, EKM, NXS, DAW, ACN, NVF, AFY, JUH, EID, UNM, YBO, IVA, WXS], [DWC, EID, NVF, UNM, EKM, YBO, ACN, WXS, AFY, NXS, JUH, DAW, IVA]]',)",0,243
topological_sort,"[(BZV, MTR), (BZV, HIU), (BZV, UGX), (BZV, CEW), (BZV, RQH), (BZV, AGC), (MTR, HIU), (MTR, RQH), (MTR, QCG), (UGX, PBF), (UGX, HIU), (CEW, PBF), (CEW, RQH), (CEW, HIU), (CEW, AGC), (CEW, MTR), (RQH, HIU), (AGC, PBF), (AGC, UGX), (QCG, HIU), (XHC, PBF), (XHC, BZV), (XHC, AGC), (XHC, CEW), (PBF, MTR), (PBF, HIU), (APQ, RQH), (APQ, CEW), (APQ, AGC), (APQ, MTR), (APQ, QCG), (APQ, XHC), (XKG, BZV), (XKG, XHC), (XKG, QCG)]","{BZV: [MTR, HIU, UGX, CEW, RQH, AGC],
MTR: [HIU, RQH, QCG],
HIU: [],
UGX: [PBF, HIU],
CEW: [PBF, RQH, HIU, AGC, MTR],
RQH: [HIU],
AGC: [PBF, UGX],
QCG: [HIU],
XHC: [PBF, BZV, AGC, CEW],
PBF: [MTR, HIU],
APQ: [RQH, CEW, AGC, MTR, QCG, XHC],
XKG: [BZV, XHC, QCG]}","Node BZV is connected to nodes MTR, HIU, UGX, CEW, RQH, AGC.
Node MTR is connected to nodes HIU, RQH, QCG.
Node UGX is connected to nodes PBF, HIU.
Node CEW is connected to nodes PBF, RQH, HIU, AGC, MTR.
Node RQH is connected to node HIU.
Node AGC is connected to nodes PBF, UGX.
Node QCG is connected to node HIU.
Node XHC is connected to nodes PBF, BZV, AGC, CEW.
Node PBF is connected to nodes MTR, HIU.
Node APQ is connected to nodes RQH, CEW, AGC, MTR, QCG, XHC.
Node XKG is connected to nodes BZV, XHC, QCG.","[MTR, BZV, CEW, APQ, HIU, PBF, XHC, RQH, UGX, AGC, XKG, QCG]",12,35,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[APQ, XKG, XHC, BZV, CEW, AGC, UGX, PBF, MTR, RQH, QCG, HIU]","Let's solve it step by step.
Nodes with 0 in-degree: [APQ, XKG].
Visit node APQ and remove it from the graph.
Nodes with 0 in-degree: [XKG].
Visit node XKG and remove it from the graph.
Nodes with 0 in-degree: [XHC].
Visit node XHC and remove it from the graph.
Nodes with 0 in-degree: [BZV].
Visit node BZV and remove it from the graph.
Nodes with 0 in-degree: [CEW].
Visit node CEW and remove it from the graph.
Nodes with 0 in-degree: [AGC].
Visit node AGC and remove it from the graph.
Nodes with 0 in-degree: [UGX].
Visit node UGX and remove it from the graph.
Nodes with 0 in-degree: [PBF].
Visit node PBF and remove it from the graph.
Nodes with 0 in-degree: [MTR].
Visit node MTR and remove it from the graph.
Nodes with 0 in-degree: [RQH, QCG].
Visit node RQH and remove it from the graph.
Nodes with 0 in-degree: [QCG].
Visit node QCG and remove it from the graph.
Nodes with 0 in-degree: [HIU].
Visit node HIU and remove it from the graph.
So the result of topological sorting is ","('[[APQ, XKG, XHC, BZV, CEW, AGC, UGX, PBF, MTR, RQH, QCG, HIU], [APQ, XHC, XKG, MTR, BZV, QCG, HIU, AGC, RQH, UGX, PBF, CEW], [APQ, XKG, XHC, BZV, CEW, AGC, MTR, UGX, RQH, HIU, QCG, PBF], [APQ, XKG, XHC, BZV, MTR, RQH, QCG, HIU, CEW, AGC, UGX, PBF]]',)",0,244
topological_sort,"[(MOC, DBF), (MOC, CAN), (DBF, CAN), (CAN, BUR), (NKE, LZH), (NKE, XCP), (NKE, MOC), (LZH, DBF), (LZH, DGH), (XCP, QYH), (XCP, MOC), (DGH, QYH), (DGH, XCP), (QYH, BUR), (QYH, DBF), (QYH, MOC), (QYH, CAN)]","{MOC: [DBF, CAN],
DBF: [CAN],
CAN: [BUR],
NKE: [LZH, XCP, MOC],
LZH: [DBF, DGH],
XCP: [QYH, MOC],
DGH: [QYH, XCP],
QYH: [BUR, DBF, MOC, CAN],
BUR: []}","Node MOC is connected to nodes DBF, CAN.
Node DBF is connected to node CAN.
Node CAN is connected to node BUR.
Node NKE is connected to nodes LZH, XCP, MOC.
Node LZH is connected to nodes DBF, DGH.
Node XCP is connected to nodes QYH, MOC.
Node DGH is connected to nodes QYH, XCP.
Node QYH is connected to nodes BUR, DBF, MOC, CAN.","[DGH, CAN, DBF, NKE, MOC, QYH, BUR, LZH, XCP]",9,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[NKE, LZH, DGH, XCP, QYH, MOC, DBF, CAN, BUR]","Let's solve it step by step.
Nodes with 0 in-degree: [NKE].
Visit node NKE and remove it from the graph.
Nodes with 0 in-degree: [LZH].
Visit node LZH and remove it from the graph.
Nodes with 0 in-degree: [DGH].
Visit node DGH and remove it from the graph.
Nodes with 0 in-degree: [XCP].
Visit node XCP and remove it from the graph.
Nodes with 0 in-degree: [QYH].
Visit node QYH and remove it from the graph.
Nodes with 0 in-degree: [MOC].
Visit node MOC and remove it from the graph.
Nodes with 0 in-degree: [DBF].
Visit node DBF and remove it from the graph.
Nodes with 0 in-degree: [CAN].
Visit node CAN and remove it from the graph.
Nodes with 0 in-degree: [BUR].
Visit node BUR and remove it from the graph.
So the result of topological sorting is ","('[[NKE, LZH, DGH, QYH, XCP, BUR, CAN, DBF, MOC], [NKE, LZH, DGH, XCP, QYH, MOC, DBF, CAN, BUR], [NKE, LZH, DGH, XCP, CAN, MOC, DBF, QYH, BUR], [NKE, LZH, DGH, DBF, CAN, BUR, XCP, QYH, MOC]]',)",1,245
topological_sort,"[(UWC, UDZ), (UWC, RWU), (UDZ, SOG), (RWU, UDZ), (RWU, YYR), (SOG, GMG), (TWK, GMG), (YYR, TWK), (YYR, BAX), (YYR, GMG), (ILG, GMG), (ILG, SXC), (ILG, TWK), (SXC, UWC), (SXC, BAX), (TSA, BVM), (TSA, BAX), (TSA, UDZ), (BVM, TWK), (BAX, UDZ), (BNB, UWC), (BNB, YYR), (EHI, UWC), (EHI, SOG), (EHI, UDZ)]","{UWC: [UDZ, RWU],
UDZ: [SOG],
RWU: [UDZ, YYR],
SOG: [GMG],
TWK: [GMG],
GMG: [],
YYR: [TWK, BAX, GMG],
ILG: [GMG, SXC, TWK],
SXC: [UWC, BAX],
TSA: [BVM, BAX, UDZ],
BVM: [TWK],
BAX: [UDZ],
BNB: [UWC, YYR],
EHI: [UWC, SOG, UDZ]}","Node UWC is connected to nodes UDZ, RWU.
Node UDZ is connected to node SOG.
Node RWU is connected to nodes UDZ, YYR.
Node SOG is connected to node GMG.
Node TWK is connected to node GMG.
Node YYR is connected to nodes TWK, BAX, GMG.
Node ILG is connected to nodes GMG, SXC, TWK.
Node SXC is connected to nodes UWC, BAX.
Node TSA is connected to nodes BVM, BAX, UDZ.
Node BVM is connected to node TWK.
Node BAX is connected to node UDZ.
Node BNB is connected to nodes UWC, YYR.
Node EHI is connected to nodes UWC, SOG, UDZ.","[ILG, BVM, GMG, EHI, TWK, UWC, SXC, YYR, UDZ, BAX, RWU, TSA, BNB, SOG]",14,25,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ILG, TSA, BNB, EHI, SXC, BVM, UWC, RWU, YYR, TWK, BAX, UDZ, SOG, GMG]","Let's solve it step by step.
Nodes with 0 in-degree: [ILG, TSA, BNB, EHI].
Visit node ILG and remove it from the graph.
Nodes with 0 in-degree: [TSA, BNB, EHI, SXC].
Visit node TSA and remove it from the graph.
Nodes with 0 in-degree: [BNB, EHI, SXC, BVM].
Visit node BNB and remove it from the graph.
Nodes with 0 in-degree: [EHI, SXC, BVM].
Visit node EHI and remove it from the graph.
Nodes with 0 in-degree: [SXC, BVM].
Visit node SXC and remove it from the graph.
Nodes with 0 in-degree: [BVM, UWC].
Visit node BVM and remove it from the graph.
Nodes with 0 in-degree: [UWC].
Visit node UWC and remove it from the graph.
Nodes with 0 in-degree: [RWU].
Visit node RWU and remove it from the graph.
Nodes with 0 in-degree: [YYR].
Visit node YYR and remove it from the graph.
Nodes with 0 in-degree: [TWK, BAX].
Visit node TWK and remove it from the graph.
Nodes with 0 in-degree: [BAX].
Visit node BAX and remove it from the graph.
Nodes with 0 in-degree: [UDZ].
Visit node UDZ and remove it from the graph.
Nodes with 0 in-degree: [SOG].
Visit node SOG and remove it from the graph.
Nodes with 0 in-degree: [GMG].
Visit node GMG and remove it from the graph.
So the result of topological sorting is ","('[[ILG, TSA, BNB, EHI, BAX, UDZ, SOG, GMG, SXC, BVM, UWC, RWU, YYR, TWK], [ILG, SOG, TSA, BVM, GMG, EHI, UWC, RWU, SXC, YYR, TWK, UDZ, BAX, BNB], [ILG, TSA, BNB, EHI, SXC, BVM, UWC, RWU, YYR, TWK, BAX, UDZ, SOG, GMG], [ILG, TSA, BNB, EHI, SXC, BVM, UWC, TWK, SOG, YYR, RWU, BAX, UDZ, GMG]]',)",2,246
topological_sort,"[(UVO, YJK), (UVO, EIP), (YJK, EIP), (YJK, QFP), (QFP, EIP), (QZC, UYH), (QZC, SIV), (QZC, LMW), (UYH, SIV), (UYH, HIH), (SIV, QFP), (LMW, YJK), (LMW, HIH), (HIH, EIP), (HIH, UVO)]","{UVO: [YJK, EIP],
YJK: [EIP, QFP],
EIP: [],
QFP: [EIP],
QZC: [UYH, SIV, LMW],
UYH: [SIV, HIH],
SIV: [QFP],
LMW: [YJK, HIH],
HIH: [EIP, UVO]}","Node UVO is connected to nodes YJK, EIP.
Node YJK is connected to nodes EIP, QFP.
Node QFP is connected to node EIP.
Node QZC is connected to nodes UYH, SIV, LMW.
Node UYH is connected to nodes SIV, HIH.
Node SIV is connected to node QFP.
Node LMW is connected to nodes YJK, HIH.
Node HIH is connected to nodes EIP, UVO.","[QFP, QZC, HIH, UYH, EIP, UVO, LMW, SIV, YJK]",9,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QZC, UYH, LMW, SIV, HIH, UVO, YJK, QFP, EIP]","Let's solve it step by step.
Nodes with 0 in-degree: [QZC].
Visit node QZC and remove it from the graph.
Nodes with 0 in-degree: [UYH, LMW].
Visit node UYH and remove it from the graph.
Nodes with 0 in-degree: [LMW, SIV].
Visit node LMW and remove it from the graph.
Nodes with 0 in-degree: [SIV, HIH].
Visit node SIV and remove it from the graph.
Nodes with 0 in-degree: [HIH].
Visit node HIH and remove it from the graph.
Nodes with 0 in-degree: [UVO].
Visit node UVO and remove it from the graph.
Nodes with 0 in-degree: [YJK].
Visit node YJK and remove it from the graph.
Nodes with 0 in-degree: [QFP].
Visit node QFP and remove it from the graph.
Nodes with 0 in-degree: [EIP].
Visit node EIP and remove it from the graph.
So the result of topological sorting is ","('[[QZC, UYH, LMW, SIV, UVO, QFP, EIP, HIH, YJK], [QZC, UYH, LMW, YJK, QFP, EIP, SIV, HIH, UVO], [QZC, QFP, YJK, EIP, HIH, SIV, UYH, UVO, LMW], [QZC, UYH, LMW, SIV, HIH, UVO, YJK, QFP, EIP]]',)",3,247
topological_sort,"[(VUQ, UTT), (VUQ, VGI), (UTT, XQO), (UTT, VGI), (VGI, TYF), (XQO, HMS), (XQO, UZT), (HMS, QRM), (HMS, EVF), (HMS, ATJ), (UZT, QRM), (QRM, WEV), (EVF, ATJ), (DVQ, IXK), (DVQ, QRM), (IXK, VUQ), (TYF, XQO), (TYF, ATJ), (WEV, EVF), (JJX, XQO), (JJX, ATJ)]","{VUQ: [UTT, VGI],
UTT: [XQO, VGI],
VGI: [TYF],
XQO: [HMS, UZT],
HMS: [QRM, EVF, ATJ],
UZT: [QRM],
QRM: [WEV],
EVF: [ATJ],
ATJ: [],
DVQ: [IXK, QRM],
IXK: [VUQ],
TYF: [XQO, ATJ],
WEV: [EVF],
JJX: [XQO, ATJ]}","Node VUQ is connected to nodes UTT, VGI.
Node UTT is connected to nodes XQO, VGI.
Node VGI is connected to node TYF.
Node XQO is connected to nodes HMS, UZT.
Node HMS is connected to nodes QRM, EVF, ATJ.
Node UZT is connected to node QRM.
Node QRM is connected to node WEV.
Node EVF is connected to node ATJ.
Node DVQ is connected to nodes IXK, QRM.
Node IXK is connected to node VUQ.
Node TYF is connected to nodes XQO, ATJ.
Node WEV is connected to node EVF.
Node JJX is connected to nodes XQO, ATJ.","[EVF, WEV, UZT, ATJ, QRM, HMS, JJX, VGI, DVQ, UTT, TYF, VUQ, XQO, IXK]",14,21,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DVQ, JJX, IXK, VUQ, UTT, VGI, TYF, XQO, HMS, UZT, QRM, WEV, EVF, ATJ]","Let's solve it step by step.
Nodes with 0 in-degree: [DVQ, JJX].
Visit node DVQ and remove it from the graph.
Nodes with 0 in-degree: [JJX, IXK].
Visit node JJX and remove it from the graph.
Nodes with 0 in-degree: [IXK].
Visit node IXK and remove it from the graph.
Nodes with 0 in-degree: [VUQ].
Visit node VUQ and remove it from the graph.
Nodes with 0 in-degree: [UTT].
Visit node UTT and remove it from the graph.
Nodes with 0 in-degree: [VGI].
Visit node VGI and remove it from the graph.
Nodes with 0 in-degree: [TYF].
Visit node TYF and remove it from the graph.
Nodes with 0 in-degree: [XQO].
Visit node XQO and remove it from the graph.
Nodes with 0 in-degree: [HMS, UZT].
Visit node HMS and remove it from the graph.
Nodes with 0 in-degree: [UZT].
Visit node UZT and remove it from the graph.
Nodes with 0 in-degree: [QRM].
Visit node QRM and remove it from the graph.
Nodes with 0 in-degree: [WEV].
Visit node WEV and remove it from the graph.
Nodes with 0 in-degree: [EVF].
Visit node EVF and remove it from the graph.
Nodes with 0 in-degree: [ATJ].
Visit node ATJ and remove it from the graph.
So the result of topological sorting is ","('[[DVQ, JJX, IXK, VUQ, QRM, WEV, EVF, ATJ, UTT, VGI, TYF, XQO, HMS, UZT], [DVQ, JJX, IXK, VUQ, UTT, VGI, TYF, QRM, ATJ, WEV, HMS, EVF, UZT, XQO], [DVQ, TYF, HMS, VGI, VUQ, QRM, ATJ, UTT, EVF, XQO, IXK, WEV, UZT, JJX], [DVQ, JJX, IXK, VUQ, UTT, VGI, TYF, XQO, HMS, UZT, QRM, WEV, EVF, ATJ]]',)",3,248
topological_sort,"[(TTW, SRG), (TTW, VYN), (TTW, GLH), (TTW, JKI), (TTW, WIN), (TTW, QOR), (SRG, ZXZ), (SRG, JKI), (VYN, REY), (JKI, WIN), (JKI, ZXZ), (JKI, VTY), (QOR, WIN), (QOR, ZXZ), (ZXZ, GLH), (ZXZ, WIN), (ZXZ, REY), (VTY, GLH), (VTY, VYN), (VTY, ZXZ), (IRS, VTY)]","{TTW: [SRG, VYN, GLH, JKI, WIN, QOR],
SRG: [ZXZ, JKI],
VYN: [REY],
GLH: [],
JKI: [WIN, ZXZ, VTY],
WIN: [],
QOR: [WIN, ZXZ],
ZXZ: [GLH, WIN, REY],
REY: [],
VTY: [GLH, VYN, ZXZ],
IRS: [VTY]}","Node TTW is connected to nodes SRG, VYN, GLH, JKI, WIN, QOR.
Node SRG is connected to nodes ZXZ, JKI.
Node VYN is connected to node REY.
Node JKI is connected to nodes WIN, ZXZ, VTY.
Node QOR is connected to nodes WIN, ZXZ.
Node ZXZ is connected to nodes GLH, WIN, REY.
Node VTY is connected to nodes GLH, VYN, ZXZ.
Node IRS is connected to node VTY.","[VTY, IRS, VYN, QOR, GLH, SRG, WIN, JKI, TTW, ZXZ, REY]",11,21,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TTW, IRS, SRG, QOR, JKI, VTY, VYN, ZXZ, GLH, WIN, REY]","Let's solve it step by step.
Nodes with 0 in-degree: [TTW, IRS].
Visit node TTW and remove it from the graph.
Nodes with 0 in-degree: [IRS, SRG, QOR].
Visit node IRS and remove it from the graph.
Nodes with 0 in-degree: [SRG, QOR].
Visit node SRG and remove it from the graph.
Nodes with 0 in-degree: [QOR, JKI].
Visit node QOR and remove it from the graph.
Nodes with 0 in-degree: [JKI].
Visit node JKI and remove it from the graph.
Nodes with 0 in-degree: [VTY].
Visit node VTY and remove it from the graph.
Nodes with 0 in-degree: [VYN, ZXZ].
Visit node VYN and remove it from the graph.
Nodes with 0 in-degree: [ZXZ].
Visit node ZXZ and remove it from the graph.
Nodes with 0 in-degree: [GLH, WIN, REY].
Visit node GLH and remove it from the graph.
Nodes with 0 in-degree: [WIN, REY].
Visit node WIN and remove it from the graph.
Nodes with 0 in-degree: [REY].
Visit node REY and remove it from the graph.
So the result of topological sorting is ","('[[TTW, IRS, SRG, QOR, JKI, VTY, VYN, ZXZ, GLH, WIN, REY], [TTW, REY, ZXZ, SRG, VTY, VYN, WIN, QOR, JKI, IRS, GLH], [TTW, IRS, SRG, QOR, JKI, ZXZ, VTY, REY, GLH, VYN, WIN], [TTW, IRS, SRG, GLH, WIN, REY, QOR, JKI, VTY, VYN, ZXZ]]',)",0,249
topological_sort,"[(PAR, WVU), (PAR, ZHY), (PAR, NXN), (PAR, UXS), (WVU, NXN), (ZHY, NXN), (NXN, ZWK), (UXS, HKX), (UXS, ZHY), (UXS, WVU), (HKX, ZHY), (HKX, QTH), (QTH, VWZ), (QTH, WVU), (RZZ, WVU), (AVI, ZHY), (AVI, NXN), (VWZ, ZHY), (VWZ, AVI)]","{PAR: [WVU, ZHY, NXN, UXS],
WVU: [NXN],
ZHY: [NXN],
NXN: [ZWK],
UXS: [HKX, ZHY, WVU],
HKX: [ZHY, QTH],
QTH: [VWZ, WVU],
RZZ: [WVU],
ZWK: [],
AVI: [ZHY, NXN],
VWZ: [ZHY, AVI]}","Node PAR is connected to nodes WVU, ZHY, NXN, UXS.
Node WVU is connected to node NXN.
Node ZHY is connected to node NXN.
Node NXN is connected to node ZWK.
Node UXS is connected to nodes HKX, ZHY, WVU.
Node HKX is connected to nodes ZHY, QTH.
Node QTH is connected to nodes VWZ, WVU.
Node RZZ is connected to node WVU.
Node AVI is connected to nodes ZHY, NXN.
Node VWZ is connected to nodes ZHY, AVI.","[VWZ, ZWK, WVU, UXS, ZHY, AVI, PAR, QTH, HKX, NXN, RZZ]",11,19,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[PAR, RZZ, UXS, HKX, QTH, VWZ, WVU, AVI, ZHY, NXN, ZWK]","Let's solve it step by step.
Nodes with 0 in-degree: [PAR, RZZ].
Visit node PAR and remove it from the graph.
Nodes with 0 in-degree: [RZZ, UXS].
Visit node RZZ and remove it from the graph.
Nodes with 0 in-degree: [UXS].
Visit node UXS and remove it from the graph.
Nodes with 0 in-degree: [HKX].
Visit node HKX and remove it from the graph.
Nodes with 0 in-degree: [QTH].
Visit node QTH and remove it from the graph.
Nodes with 0 in-degree: [VWZ, WVU].
Visit node VWZ and remove it from the graph.
Nodes with 0 in-degree: [WVU, AVI].
Visit node WVU and remove it from the graph.
Nodes with 0 in-degree: [AVI].
Visit node AVI and remove it from the graph.
Nodes with 0 in-degree: [ZHY].
Visit node ZHY and remove it from the graph.
Nodes with 0 in-degree: [NXN].
Visit node NXN and remove it from the graph.
Nodes with 0 in-degree: [ZWK].
Visit node ZWK and remove it from the graph.
So the result of topological sorting is ","('[[PAR, WVU, VWZ, RZZ, ZWK, ZHY, NXN, QTH, UXS, AVI, HKX], [PAR, RZZ, UXS, ZHY, NXN, ZWK, HKX, QTH, VWZ, WVU, AVI], [PAR, RZZ, UXS, HKX, QTH, AVI, VWZ, WVU, ZHY, ZWK, NXN], [PAR, RZZ, UXS, HKX, QTH, VWZ, WVU, AVI, ZHY, NXN, ZWK]]',)",3,250
topological_sort,"[(LCI, HMG), (LCI, QTQ), (LCI, BDB), (LCI, KYG), (HMG, QTQ), (HMG, KYG), (QTQ, QIV), (QTQ, RVV), (BDB, QHU), (BDB, KYG), (BDB, HMG), (BDB, RVV), (BDB, QTQ), (KYG, QIV), (BWE, CVJ), (BWE, BDB), (BWE, OQC), (BWE, RVV), (CVJ, QIV), (CVJ, OQC), (CVJ, HMG), (CVJ, LCI), (CVJ, QHU), (CVJ, RVV), (OQC, QHU), (OQC, KYG), (OQC, QTQ), (OQC, BDB), (RVV, KYG), (QHU, QIV), (QHU, HMG), (DLM, XGQ), (DLM, CVJ), (DLM, LCI), (DLM, QHU), (DLM, RVV), (DLM, QIV), (XGQ, CVJ), (XGQ, KYG), (XGQ, OQC)]","{LCI: [HMG, QTQ, BDB, KYG],
HMG: [QTQ, KYG],
QTQ: [QIV, RVV],
BDB: [QHU, KYG, HMG, RVV, QTQ],
KYG: [QIV],
BWE: [CVJ, BDB, OQC, RVV],
CVJ: [QIV, OQC, HMG, LCI, QHU, RVV],
OQC: [QHU, KYG, QTQ, BDB],
RVV: [KYG],
QIV: [],
QHU: [QIV, HMG],
DLM: [XGQ, CVJ, LCI, QHU, RVV, QIV],
XGQ: [CVJ, KYG, OQC]}","Node LCI is connected to nodes HMG, QTQ, BDB, KYG.
Node HMG is connected to nodes QTQ, KYG.
Node QTQ is connected to nodes QIV, RVV.
Node BDB is connected to nodes QHU, KYG, HMG, RVV, QTQ.
Node KYG is connected to node QIV.
Node BWE is connected to nodes CVJ, BDB, OQC, RVV.
Node CVJ is connected to nodes QIV, OQC, HMG, LCI, QHU, RVV.
Node OQC is connected to nodes QHU, KYG, QTQ, BDB.
Node RVV is connected to node KYG.
Node QHU is connected to nodes QIV, HMG.
Node DLM is connected to nodes XGQ, CVJ, LCI, QHU, RVV, QIV.
Node XGQ is connected to nodes CVJ, KYG, OQC.","[XGQ, CVJ, LCI, KYG, QIV, BDB, RVV, QTQ, OQC, HMG, QHU, BWE, DLM]",13,40,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BWE, DLM, XGQ, CVJ, OQC, LCI, BDB, QHU, HMG, QTQ, RVV, KYG, QIV]","Let's solve it step by step.
Nodes with 0 in-degree: [BWE, DLM].
Visit node BWE and remove it from the graph.
Nodes with 0 in-degree: [DLM].
Visit node DLM and remove it from the graph.
Nodes with 0 in-degree: [XGQ].
Visit node XGQ and remove it from the graph.
Nodes with 0 in-degree: [CVJ].
Visit node CVJ and remove it from the graph.
Nodes with 0 in-degree: [OQC, LCI].
Visit node OQC and remove it from the graph.
Nodes with 0 in-degree: [LCI].
Visit node LCI and remove it from the graph.
Nodes with 0 in-degree: [BDB].
Visit node BDB and remove it from the graph.
Nodes with 0 in-degree: [QHU].
Visit node QHU and remove it from the graph.
Nodes with 0 in-degree: [HMG].
Visit node HMG and remove it from the graph.
Nodes with 0 in-degree: [QTQ].
Visit node QTQ and remove it from the graph.
Nodes with 0 in-degree: [RVV].
Visit node RVV and remove it from the graph.
Nodes with 0 in-degree: [KYG].
Visit node KYG and remove it from the graph.
Nodes with 0 in-degree: [QIV].
Visit node QIV and remove it from the graph.
So the result of topological sorting is ","('[[BWE, DLM, XGQ, CVJ, QTQ, RVV, KYG, QIV, OQC, LCI, BDB, QHU, HMG], [BWE, BDB, CVJ, KYG, QIV, LCI, DLM, OQC, QHU, RVV, HMG, XGQ, QTQ], [BWE, DLM, XGQ, CVJ, OQC, LCI, BDB, QIV, QHU, HMG, RVV, KYG, QTQ], [BWE, DLM, XGQ, CVJ, OQC, LCI, BDB, QHU, HMG, QTQ, RVV, KYG, QIV]]',)",3,251
topological_sort,"[(QIY, DAD), (QIY, HAG), (QIY, CWH), (HAG, YVS), (HAG, SYR), (HAG, DAD), (HAG, CWH), (CWH, UNM), (AQP, CWH), (AQP, LZL), (AQP, UNM), (LZL, MWY), (UNM, UOZ), (UNM, DAD), (YVS, CWH), (YVS, MWY), (SYR, YVS), (LZC, SYR), (LZC, MWY), (LZC, UOZ), (LZC, DAD), (TBH, SYR), (TBH, HAG)]","{QIY: [DAD, HAG, CWH],
DAD: [],
HAG: [YVS, SYR, DAD, CWH],
CWH: [UNM],
AQP: [CWH, LZL, UNM],
LZL: [MWY],
UNM: [UOZ, DAD],
MWY: [],
YVS: [CWH, MWY],
SYR: [YVS],
UOZ: [],
LZC: [SYR, MWY, UOZ, DAD],
TBH: [SYR, HAG]}","Node QIY is connected to nodes DAD, HAG, CWH.
Node HAG is connected to nodes YVS, SYR, DAD, CWH.
Node CWH is connected to node UNM.
Node AQP is connected to nodes CWH, LZL, UNM.
Node LZL is connected to node MWY.
Node UNM is connected to nodes UOZ, DAD.
Node YVS is connected to nodes CWH, MWY.
Node SYR is connected to node YVS.
Node LZC is connected to nodes SYR, MWY, UOZ, DAD.
Node TBH is connected to nodes SYR, HAG.","[TBH, DAD, UNM, LZC, UOZ, LZL, QIY, YVS, MWY, SYR, HAG, AQP, CWH]",13,23,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QIY, AQP, LZC, TBH, LZL, HAG, SYR, YVS, CWH, MWY, UNM, UOZ, DAD]","Let's solve it step by step.
Nodes with 0 in-degree: [QIY, AQP, LZC, TBH].
Visit node QIY and remove it from the graph.
Nodes with 0 in-degree: [AQP, LZC, TBH].
Visit node AQP and remove it from the graph.
Nodes with 0 in-degree: [LZC, TBH, LZL].
Visit node LZC and remove it from the graph.
Nodes with 0 in-degree: [TBH, LZL].
Visit node TBH and remove it from the graph.
Nodes with 0 in-degree: [LZL, HAG].
Visit node LZL and remove it from the graph.
Nodes with 0 in-degree: [HAG].
Visit node HAG and remove it from the graph.
Nodes with 0 in-degree: [SYR].
Visit node SYR and remove it from the graph.
Nodes with 0 in-degree: [YVS].
Visit node YVS and remove it from the graph.
Nodes with 0 in-degree: [CWH, MWY].
Visit node CWH and remove it from the graph.
Nodes with 0 in-degree: [MWY, UNM].
Visit node MWY and remove it from the graph.
Nodes with 0 in-degree: [UNM].
Visit node UNM and remove it from the graph.
Nodes with 0 in-degree: [UOZ, DAD].
Visit node UOZ and remove it from the graph.
Nodes with 0 in-degree: [DAD].
Visit node DAD and remove it from the graph.
So the result of topological sorting is ","('[[QIY, SYR, TBH, AQP, UNM, HAG, CWH, MWY, YVS, UOZ, LZC, LZL, DAD], [QIY, AQP, LZC, TBH, LZL, HAG, SYR, YVS, CWH, MWY, UNM, UOZ, DAD], [QIY, AQP, LZC, TBH, MWY, UNM, UOZ, DAD, LZL, HAG, SYR, YVS, CWH], [QIY, AQP, LZC, TBH, LZL, HAG, MWY, SYR, UOZ, CWH, UNM, YVS, DAD]]',)",1,252
topological_sort,"[(WJG, YDE), (WJG, GAW), (WJG, OQC), (WJG, OQF), (WJG, FEE), (YDE, UAR), (YDE, VVH), (YDE, NYN), (YDE, NKP), (YDE, ACC), (GAW, PLB), (GAW, NKP), (GAW, ACC), (GAW, OQC), (OQC, ACC), (OQC, NKP), (OQC, PLB), (OQF, GAW), (OQF, FEE), (OQF, PLB), (OQF, OQC), (FEE, NYN), (FEE, PLB), (UAR, OQC), (UAR, OQF), (VVH, GAW), (VVH, UAR), (VVH, NKP), (VVH, FEE), (NYN, GAW), (NYN, NKP), (ACC, NKP)]","{WJG: [YDE, GAW, OQC, OQF, FEE],
YDE: [UAR, VVH, NYN, NKP, ACC],
GAW: [PLB, NKP, ACC, OQC],
OQC: [ACC, NKP, PLB],
OQF: [GAW, FEE, PLB, OQC],
FEE: [NYN, PLB],
UAR: [OQC, OQF],
VVH: [GAW, UAR, NKP, FEE],
NYN: [GAW, NKP],
NKP: [],
ACC: [NKP],
PLB: []}","Node WJG is connected to nodes YDE, GAW, OQC, OQF, FEE.
Node YDE is connected to nodes UAR, VVH, NYN, NKP, ACC.
Node GAW is connected to nodes PLB, NKP, ACC, OQC.
Node OQC is connected to nodes ACC, NKP, PLB.
Node OQF is connected to nodes GAW, FEE, PLB, OQC.
Node FEE is connected to nodes NYN, PLB.
Node UAR is connected to nodes OQC, OQF.
Node VVH is connected to nodes GAW, UAR, NKP, FEE.
Node NYN is connected to nodes GAW, NKP.
Node ACC is connected to node NKP.","[NKP, WJG, PLB, FEE, GAW, UAR, NYN, ACC, OQF, OQC, YDE, VVH]",12,32,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WJG, YDE, VVH, UAR, OQF, FEE, NYN, GAW, OQC, ACC, PLB, NKP]","Let's solve it step by step.
Nodes with 0 in-degree: [WJG].
Visit node WJG and remove it from the graph.
Nodes with 0 in-degree: [YDE].
Visit node YDE and remove it from the graph.
Nodes with 0 in-degree: [VVH].
Visit node VVH and remove it from the graph.
Nodes with 0 in-degree: [UAR].
Visit node UAR and remove it from the graph.
Nodes with 0 in-degree: [OQF].
Visit node OQF and remove it from the graph.
Nodes with 0 in-degree: [FEE].
Visit node FEE and remove it from the graph.
Nodes with 0 in-degree: [NYN].
Visit node NYN and remove it from the graph.
Nodes with 0 in-degree: [GAW].
Visit node GAW and remove it from the graph.
Nodes with 0 in-degree: [OQC].
Visit node OQC and remove it from the graph.
Nodes with 0 in-degree: [ACC, PLB].
Visit node ACC and remove it from the graph.
Nodes with 0 in-degree: [PLB, NKP].
Visit node PLB and remove it from the graph.
Nodes with 0 in-degree: [NKP].
Visit node NKP and remove it from the graph.
So the result of topological sorting is ","('[[WJG, YDE, VVH, UAR, OQF, FEE, NYN, GAW, OQC, ACC, PLB, NKP], [WJG, YDE, VVH, UAR, OQC, ACC, PLB, NKP, OQF, FEE, NYN, GAW], [WJG, FEE, GAW, YDE, NKP, NYN, PLB, UAR, ACC, OQF, OQC, VVH], [WJG, YDE, VVH, UAR, OQF, FEE, PLB, OQC, NYN, NKP, ACC, GAW]]',)",0,253
topological_sort,"[(KWP, LCU), (KWP, EEV), (KWP, TYM), (LCU, UTI), (TYM, FDB), (TYM, UZU), (TYM, ENB), (UTI, EEV), (UTI, FDB), (UZU, EEV), (QGH, UTI), (QGH, BDN), (QGH, TYM), (QGH, UZU), (QGH, LCU), (BDN, LCU), (BDN, ENB), (FDB, UZU)]","{KWP: [LCU, EEV, TYM],
LCU: [UTI],
EEV: [],
TYM: [FDB, UZU, ENB],
UTI: [EEV, FDB],
UZU: [EEV],
QGH: [UTI, BDN, TYM, UZU, LCU],
BDN: [LCU, ENB],
FDB: [UZU],
ENB: []}","Node KWP is connected to nodes LCU, EEV, TYM.
Node LCU is connected to node UTI.
Node TYM is connected to nodes FDB, UZU, ENB.
Node UTI is connected to nodes EEV, FDB.
Node UZU is connected to node EEV.
Node QGH is connected to nodes UTI, BDN, TYM, UZU, LCU.
Node BDN is connected to nodes LCU, ENB.
Node FDB is connected to node UZU.","[TYM, UTI, KWP, BDN, FDB, LCU, EEV, QGH, UZU, ENB]",10,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[KWP, QGH, BDN, TYM, LCU, ENB, UTI, FDB, UZU, EEV]","Let's solve it step by step.
Nodes with 0 in-degree: [KWP, QGH].
Visit node KWP and remove it from the graph.
Nodes with 0 in-degree: [QGH].
Visit node QGH and remove it from the graph.
Nodes with 0 in-degree: [BDN, TYM].
Visit node BDN and remove it from the graph.
Nodes with 0 in-degree: [TYM, LCU].
Visit node TYM and remove it from the graph.
Nodes with 0 in-degree: [LCU, ENB].
Visit node LCU and remove it from the graph.
Nodes with 0 in-degree: [ENB, UTI].
Visit node ENB and remove it from the graph.
Nodes with 0 in-degree: [UTI].
Visit node UTI and remove it from the graph.
Nodes with 0 in-degree: [FDB].
Visit node FDB and remove it from the graph.
Nodes with 0 in-degree: [UZU].
Visit node UZU and remove it from the graph.
Nodes with 0 in-degree: [EEV].
Visit node EEV and remove it from the graph.
So the result of topological sorting is ","('[[KWP, QGH, BDN, TYM, LCU, UZU, EEV, FDB, UTI, ENB], [KWP, QGH, BDN, TYM, LCU, ENB, UTI, FDB, UZU, EEV], [KWP, QGH, BDN, FDB, UZU, EEV, TYM, LCU, ENB, UTI], [KWP, UZU, QGH, ENB, LCU, TYM, FDB, BDN, UTI, EEV]]',)",1,254
topological_sort,"[(HUB, LTV), (HUB, HNS), (LTV, YRO), (LTV, VJA), (HNS, MNU), (HNS, LTV), (VJA, MNU), (ORV, CPQ), (ORV, MNU), (ORV, LTV), (ORV, SGF), (CPQ, WSA), (CPQ, SGF), (CPQ, VJA), (MNU, LZD), (SGF, HUB), (SGF, HNS), (WSA, HUB), (WSA, LZD), (JBC, VJA), (JBC, WSA), (JBC, MNU), (JBC, ORV), (BIT, HUB), (BIT, CPQ), (BIT, WSA), (TYL, ORV), (TYL, YRO), (TYL, SGF), (TYL, VJA), (CEV, CPQ)]","{HUB: [LTV, HNS],
LTV: [YRO, VJA],
HNS: [MNU, LTV],
YRO: [],
VJA: [MNU],
ORV: [CPQ, MNU, LTV, SGF],
CPQ: [WSA, SGF, VJA],
MNU: [LZD],
SGF: [HUB, HNS],
WSA: [HUB, LZD],
LZD: [],
JBC: [VJA, WSA, MNU, ORV],
BIT: [HUB, CPQ, WSA],
TYL: [ORV, YRO, SGF, VJA],
CEV: [CPQ]}","Node HUB is connected to nodes LTV, HNS.
Node LTV is connected to nodes YRO, VJA.
Node HNS is connected to nodes MNU, LTV.
Node VJA is connected to node MNU.
Node ORV is connected to nodes CPQ, MNU, LTV, SGF.
Node CPQ is connected to nodes WSA, SGF, VJA.
Node MNU is connected to node LZD.
Node SGF is connected to nodes HUB, HNS.
Node WSA is connected to nodes HUB, LZD.
Node JBC is connected to nodes VJA, WSA, MNU, ORV.
Node BIT is connected to nodes HUB, CPQ, WSA.
Node TYL is connected to nodes ORV, YRO, SGF, VJA.
Node CEV is connected to node CPQ.","[SGF, CEV, YRO, LZD, BIT, HNS, WSA, HUB, LTV, TYL, JBC, MNU, ORV, VJA, CPQ]",15,31,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JBC, BIT, TYL, CEV, ORV, CPQ, WSA, SGF, HUB, HNS, LTV, YRO, VJA, MNU, LZD]","Let's solve it step by step.
Nodes with 0 in-degree: [JBC, BIT, TYL, CEV].
Visit node JBC and remove it from the graph.
Nodes with 0 in-degree: [BIT, TYL, CEV].
Visit node BIT and remove it from the graph.
Nodes with 0 in-degree: [TYL, CEV].
Visit node TYL and remove it from the graph.
Nodes with 0 in-degree: [CEV, ORV].
Visit node CEV and remove it from the graph.
Nodes with 0 in-degree: [ORV].
Visit node ORV and remove it from the graph.
Nodes with 0 in-degree: [CPQ].
Visit node CPQ and remove it from the graph.
Nodes with 0 in-degree: [WSA, SGF].
Visit node WSA and remove it from the graph.
Nodes with 0 in-degree: [SGF].
Visit node SGF and remove it from the graph.
Nodes with 0 in-degree: [HUB].
Visit node HUB and remove it from the graph.
Nodes with 0 in-degree: [HNS].
Visit node HNS and remove it from the graph.
Nodes with 0 in-degree: [LTV].
Visit node LTV and remove it from the graph.
Nodes with 0 in-degree: [YRO, VJA].
Visit node YRO and remove it from the graph.
Nodes with 0 in-degree: [VJA].
Visit node VJA and remove it from the graph.
Nodes with 0 in-degree: [MNU].
Visit node MNU and remove it from the graph.
Nodes with 0 in-degree: [LZD].
Visit node LZD and remove it from the graph.
So the result of topological sorting is ","('[[JBC, BIT, TYL, CEV, ORV, CPQ, WSA, SGF, HUB, HNS, LTV, YRO, VJA, MNU, LZD], [JBC, WSA, VJA, LZD, CEV, ORV, BIT, HUB, LTV, SGF, YRO, TYL, HNS, CPQ, MNU], [JBC, BIT, TYL, CEV, ORV, CPQ, WSA, SGF, HUB, LZD, LTV, VJA, YRO, MNU, HNS], [JBC, BIT, TYL, CEV, ORV, LTV, YRO, VJA, MNU, LZD, CPQ, WSA, SGF, HUB, HNS]]',)",0,255
topological_sort,"[(RNY, VDT), (RNY, DLL), (VDT, JMX), (VDT, DLL), (DLL, JMX), (DZJ, JMX), (DZJ, RNY), (DZJ, BTZ), (BTZ, VDT), (BTZ, JMX), (VFA, GHB), (VFA, PYH), (VFA, XHC), (VFA, GLW), (VFA, RNY), (VFA, DLL), (GHB, XHC), (GHB, BTZ), (GHB, XTG), (GHB, RNY), (PYH, JMX), (PYH, VDT), (PYH, RNY), (PYH, DLL), (PYH, DZJ), (XHC, DLL), (XHC, BTZ), (XHC, DZJ), (XHC, VDT), (GLW, PYH), (GLW, DZJ), (XTG, BTZ), (XTG, DZJ)]","{RNY: [VDT, DLL],
VDT: [JMX, DLL],
DLL: [JMX],
JMX: [],
DZJ: [JMX, RNY, BTZ],
BTZ: [VDT, JMX],
VFA: [GHB, PYH, XHC, GLW, RNY, DLL],
GHB: [XHC, BTZ, XTG, RNY],
PYH: [JMX, VDT, RNY, DLL, DZJ],
XHC: [DLL, BTZ, DZJ, VDT],
GLW: [PYH, DZJ],
XTG: [BTZ, DZJ]}","Node RNY is connected to nodes VDT, DLL.
Node VDT is connected to nodes JMX, DLL.
Node DLL is connected to node JMX.
Node DZJ is connected to nodes JMX, RNY, BTZ.
Node BTZ is connected to nodes VDT, JMX.
Node VFA is connected to nodes GHB, PYH, XHC, GLW, RNY, DLL.
Node GHB is connected to nodes XHC, BTZ, XTG, RNY.
Node PYH is connected to nodes JMX, VDT, RNY, DLL, DZJ.
Node XHC is connected to nodes DLL, BTZ, DZJ, VDT.
Node GLW is connected to nodes PYH, DZJ.
Node XTG is connected to nodes BTZ, DZJ.","[GLW, RNY, XHC, JMX, BTZ, VFA, GHB, VDT, XTG, DLL, PYH, DZJ]",12,33,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VFA, GHB, GLW, XHC, XTG, PYH, DZJ, RNY, BTZ, VDT, DLL, JMX]","Let's solve it step by step.
Nodes with 0 in-degree: [VFA].
Visit node VFA and remove it from the graph.
Nodes with 0 in-degree: [GHB, GLW].
Visit node GHB and remove it from the graph.
Nodes with 0 in-degree: [GLW, XHC, XTG].
Visit node GLW and remove it from the graph.
Nodes with 0 in-degree: [XHC, XTG, PYH].
Visit node XHC and remove it from the graph.
Nodes with 0 in-degree: [XTG, PYH].
Visit node XTG and remove it from the graph.
Nodes with 0 in-degree: [PYH].
Visit node PYH and remove it from the graph.
Nodes with 0 in-degree: [DZJ].
Visit node DZJ and remove it from the graph.
Nodes with 0 in-degree: [RNY, BTZ].
Visit node RNY and remove it from the graph.
Nodes with 0 in-degree: [BTZ].
Visit node BTZ and remove it from the graph.
Nodes with 0 in-degree: [VDT].
Visit node VDT and remove it from the graph.
Nodes with 0 in-degree: [DLL].
Visit node DLL and remove it from the graph.
Nodes with 0 in-degree: [JMX].
Visit node JMX and remove it from the graph.
So the result of topological sorting is ","('[[VFA, DLL, JMX, GLW, XTG, DZJ, PYH, BTZ, RNY, VDT, XHC, GHB], [VFA, GHB, GLW, XHC, XTG, PYH, DZJ, RNY, BTZ, VDT, DLL, JMX], [VFA, GHB, GLW, XHC, BTZ, VDT, DLL, JMX, XTG, PYH, DZJ, RNY], [VFA, GHB, GLW, XHC, XTG, PYH, RNY, BTZ, JMX, VDT, DLL, DZJ]]',)",1,256
topological_sort,"[(MUF, BZO), (BZO, NIY), (OLV, MUF), (OLV, NVP), (OLV, BZO), (OLV, YLF), (YLF, NVP), (YLF, DWM), (YLF, NIY), (WCE, LDK), (WCE, RAE), (LDK, YLF), (RAE, LDK), (RAE, DWM), (RAE, AJU), (AJU, NIY), (AJU, YLF), (AJU, MUF), (DWM, HEX), (HEX, BZO), (XEI, HEX), (XEI, OLV), (KBM, LDK)]","{MUF: [BZO],
BZO: [NIY],
NIY: [],
OLV: [MUF, NVP, BZO, YLF],
NVP: [],
YLF: [NVP, DWM, NIY],
WCE: [LDK, RAE],
LDK: [YLF],
RAE: [LDK, DWM, AJU],
AJU: [NIY, YLF, MUF],
DWM: [HEX],
HEX: [BZO],
XEI: [HEX, OLV],
KBM: [LDK]}","Node MUF is connected to node BZO.
Node BZO is connected to node NIY.
Node OLV is connected to nodes MUF, NVP, BZO, YLF.
Node YLF is connected to nodes NVP, DWM, NIY.
Node WCE is connected to nodes LDK, RAE.
Node LDK is connected to node YLF.
Node RAE is connected to nodes LDK, DWM, AJU.
Node AJU is connected to nodes NIY, YLF, MUF.
Node DWM is connected to node HEX.
Node HEX is connected to node BZO.
Node XEI is connected to nodes HEX, OLV.
Node KBM is connected to node LDK.","[RAE, YLF, NIY, BZO, MUF, NVP, WCE, DWM, OLV, AJU, HEX, LDK, XEI, KBM]",14,23,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WCE, XEI, KBM, RAE, OLV, LDK, AJU, YLF, MUF, NVP, DWM, HEX, BZO, NIY]","Let's solve it step by step.
Nodes with 0 in-degree: [WCE, XEI, KBM].
Visit node WCE and remove it from the graph.
Nodes with 0 in-degree: [XEI, KBM, RAE].
Visit node XEI and remove it from the graph.
Nodes with 0 in-degree: [KBM, RAE, OLV].
Visit node KBM and remove it from the graph.
Nodes with 0 in-degree: [RAE, OLV].
Visit node RAE and remove it from the graph.
Nodes with 0 in-degree: [OLV, LDK, AJU].
Visit node OLV and remove it from the graph.
Nodes with 0 in-degree: [LDK, AJU].
Visit node LDK and remove it from the graph.
Nodes with 0 in-degree: [AJU].
Visit node AJU and remove it from the graph.
Nodes with 0 in-degree: [YLF, MUF].
Visit node YLF and remove it from the graph.
Nodes with 0 in-degree: [MUF, NVP, DWM].
Visit node MUF and remove it from the graph.
Nodes with 0 in-degree: [NVP, DWM].
Visit node NVP and remove it from the graph.
Nodes with 0 in-degree: [DWM].
Visit node DWM and remove it from the graph.
Nodes with 0 in-degree: [HEX].
Visit node HEX and remove it from the graph.
Nodes with 0 in-degree: [BZO].
Visit node BZO and remove it from the graph.
Nodes with 0 in-degree: [NIY].
Visit node NIY and remove it from the graph.
So the result of topological sorting is ","('[[WCE, XEI, KBM, RAE, OLV, LDK, AJU, YLF, MUF, NVP, DWM, HEX, BZO, NIY], [WCE, XEI, KBM, RAE, OLV, LDK, AJU, HEX, DWM, NVP, YLF, MUF, BZO, NIY], [WCE, NIY, LDK, RAE, YLF, AJU, HEX, XEI, DWM, MUF, BZO, KBM, OLV, NVP], [WCE, XEI, KBM, RAE, DWM, HEX, BZO, NIY, OLV, LDK, AJU, YLF, MUF, NVP]]',)",0,257
topological_sort,"[(NYO, JWQ), (NYO, OPJ), (NYO, ILQ), (JWQ, ILQ), (JWQ, OPJ), (GUJ, SKI), (GUJ, ILQ), (GUJ, JWQ), (GUJ, UFH), (SKI, UFH), (SKI, NYO), (SKI, JWQ), (SKI, OPJ), (SKI, ILQ), (IUI, ILQ), (IUI, GUJ), (IUI, SKI)]","{NYO: [JWQ, OPJ, ILQ],
JWQ: [ILQ, OPJ],
OPJ: [],
ILQ: [],
GUJ: [SKI, ILQ, JWQ, UFH],
SKI: [UFH, NYO, JWQ, OPJ, ILQ],
UFH: [],
IUI: [ILQ, GUJ, SKI]}","Node NYO is connected to nodes JWQ, OPJ, ILQ.
Node JWQ is connected to nodes ILQ, OPJ.
Node GUJ is connected to nodes SKI, ILQ, JWQ, UFH.
Node SKI is connected to nodes UFH, NYO, JWQ, OPJ, ILQ.
Node IUI is connected to nodes ILQ, GUJ, SKI.","[OPJ, ILQ, NYO, IUI, JWQ, SKI, GUJ, UFH]",8,17,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IUI, GUJ, SKI, UFH, NYO, JWQ, ILQ, OPJ]","Let's solve it step by step.
Nodes with 0 in-degree: [IUI].
Visit node IUI and remove it from the graph.
Nodes with 0 in-degree: [GUJ].
Visit node GUJ and remove it from the graph.
Nodes with 0 in-degree: [SKI].
Visit node SKI and remove it from the graph.
Nodes with 0 in-degree: [UFH, NYO].
Visit node UFH and remove it from the graph.
Nodes with 0 in-degree: [NYO].
Visit node NYO and remove it from the graph.
Nodes with 0 in-degree: [JWQ].
Visit node JWQ and remove it from the graph.
Nodes with 0 in-degree: [ILQ, OPJ].
Visit node ILQ and remove it from the graph.
Nodes with 0 in-degree: [OPJ].
Visit node OPJ and remove it from the graph.
So the result of topological sorting is ","('[[IUI, SKI, GUJ, UFH, NYO, JWQ, ILQ, OPJ], [IUI, GUJ, SKI, UFH, JWQ, ILQ, OPJ, NYO], [IUI, GUJ, ILQ, OPJ, SKI, UFH, NYO, JWQ], [IUI, GUJ, SKI, UFH, NYO, JWQ, ILQ, OPJ]]',)",3,258
topological_sort,"[(PHF, RYC), (PHF, YTC), (PHF, QJP), (RYC, NPA), (YTC, VRG), (QJP, YTC), (DHA, RYC), (DHA, QJP), (DHA, NPA), (TVI, PHF), (TVI, NPA)]","{PHF: [RYC, YTC, QJP],
RYC: [NPA],
YTC: [VRG],
QJP: [YTC],
NPA: [],
DHA: [RYC, QJP, NPA],
VRG: [],
TVI: [PHF, NPA]}","Node PHF is connected to nodes RYC, YTC, QJP.
Node RYC is connected to node NPA.
Node YTC is connected to node VRG.
Node QJP is connected to node YTC.
Node DHA is connected to nodes RYC, QJP, NPA.
Node TVI is connected to nodes PHF, NPA.","[DHA, YTC, QJP, TVI, PHF, RYC, VRG, NPA]",8,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DHA, TVI, PHF, RYC, QJP, NPA, YTC, VRG]","Let's solve it step by step.
Nodes with 0 in-degree: [DHA, TVI].
Visit node DHA and remove it from the graph.
Nodes with 0 in-degree: [TVI].
Visit node TVI and remove it from the graph.
Nodes with 0 in-degree: [PHF].
Visit node PHF and remove it from the graph.
Nodes with 0 in-degree: [RYC, QJP].
Visit node RYC and remove it from the graph.
Nodes with 0 in-degree: [QJP, NPA].
Visit node QJP and remove it from the graph.
Nodes with 0 in-degree: [NPA, YTC].
Visit node NPA and remove it from the graph.
Nodes with 0 in-degree: [YTC].
Visit node YTC and remove it from the graph.
Nodes with 0 in-degree: [VRG].
Visit node VRG and remove it from the graph.
So the result of topological sorting is ","('[[DHA, TVI, PHF, RYC, QJP, NPA, YTC, VRG], [DHA, TVI, PHF, RYC, QJP, NPA, VRG, YTC], [DHA, TVI, PHF, RYC, VRG, NPA, QJP, YTC], [DHA, TVI, YTC, VRG, PHF, RYC, QJP, NPA]]',)",0,259
topological_sort,"[(HEO, GYW), (HEO, CUA), (HEO, HUZ), (HEO, URD), (HEO, OCQ), (HEO, GGP), (CUA, YZI), (CUA, URD), (CUA, GGP), (CUA, HUZ), (HUZ, GYW), (HUZ, FMB), (URD, GGP), (URD, YZI), (OCQ, CUA), (OCQ, HUZ), (OCQ, GGP), (GGP, FMB), (GGP, HUZ), (YZI, FMB), (FMB, GYW), (UJX, YZI), (UJX, FMB), (UJX, URD), (UJX, HUZ), (RQF, UJX), (RQF, YZI), (RQF, CUA)]","{HEO: [GYW, CUA, HUZ, URD, OCQ, GGP],
GYW: [],
CUA: [YZI, URD, GGP, HUZ],
HUZ: [GYW, FMB],
URD: [GGP, YZI],
OCQ: [CUA, HUZ, GGP],
GGP: [FMB, HUZ],
YZI: [FMB],
FMB: [GYW],
UJX: [YZI, FMB, URD, HUZ],
RQF: [UJX, YZI, CUA]}","Node HEO is connected to nodes GYW, CUA, HUZ, URD, OCQ, GGP.
Node CUA is connected to nodes YZI, URD, GGP, HUZ.
Node HUZ is connected to nodes GYW, FMB.
Node URD is connected to nodes GGP, YZI.
Node OCQ is connected to nodes CUA, HUZ, GGP.
Node GGP is connected to nodes FMB, HUZ.
Node YZI is connected to node FMB.
Node FMB is connected to node GYW.
Node UJX is connected to nodes YZI, FMB, URD, HUZ.
Node RQF is connected to nodes UJX, YZI, CUA.","[YZI, GYW, URD, OCQ, UJX, HUZ, GGP, FMB, RQF, CUA, HEO]",11,28,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HEO, RQF, OCQ, UJX, CUA, URD, GGP, YZI, HUZ, FMB, GYW]","Let's solve it step by step.
Nodes with 0 in-degree: [HEO, RQF].
Visit node HEO and remove it from the graph.
Nodes with 0 in-degree: [RQF, OCQ].
Visit node RQF and remove it from the graph.
Nodes with 0 in-degree: [OCQ, UJX].
Visit node OCQ and remove it from the graph.
Nodes with 0 in-degree: [UJX, CUA].
Visit node UJX and remove it from the graph.
Nodes with 0 in-degree: [CUA].
Visit node CUA and remove it from the graph.
Nodes with 0 in-degree: [URD].
Visit node URD and remove it from the graph.
Nodes with 0 in-degree: [GGP, YZI].
Visit node GGP and remove it from the graph.
Nodes with 0 in-degree: [YZI, HUZ].
Visit node YZI and remove it from the graph.
Nodes with 0 in-degree: [HUZ].
Visit node HUZ and remove it from the graph.
Nodes with 0 in-degree: [FMB].
Visit node FMB and remove it from the graph.
Nodes with 0 in-degree: [GYW].
Visit node GYW and remove it from the graph.
So the result of topological sorting is ","('[[HEO, RQF, OCQ, UJX, CUA, URD, GYW, HUZ, GGP, YZI, FMB], [HEO, GGP, OCQ, UJX, URD, GYW, FMB, HUZ, CUA, YZI, RQF], [HEO, RQF, OCQ, HUZ, FMB, GYW, UJX, CUA, URD, GGP, YZI], [HEO, RQF, OCQ, UJX, CUA, URD, GGP, YZI, HUZ, FMB, GYW]]',)",3,260
topological_sort,"[(WUQ, LLF), (QVO, ONE), (QVO, LHZ), (QVO, LLF), (ONE, WUQ), (LHZ, WUQ), (LHZ, UIX), (RUD, ONE), (RUD, LHZ), (RUD, UIX), (UIX, LLF), (VMK, LHZ), (VMK, RUD), (VMK, QVO), (VMK, WUQ), (ESL, QVO), (ESL, UIX), (ESL, LHZ), (WPY, ONE), (WPY, VMK), (WPY, UIX), (WPY, WUQ), (XPX, WPY)]","{WUQ: [LLF],
LLF: [],
QVO: [ONE, LHZ, LLF],
ONE: [WUQ],
LHZ: [WUQ, UIX],
RUD: [ONE, LHZ, UIX],
UIX: [LLF],
VMK: [LHZ, RUD, QVO, WUQ],
ESL: [QVO, UIX, LHZ],
WPY: [ONE, VMK, UIX, WUQ],
XPX: [WPY]}","Node WUQ is connected to node LLF.
Node QVO is connected to nodes ONE, LHZ, LLF.
Node ONE is connected to node WUQ.
Node LHZ is connected to nodes WUQ, UIX.
Node RUD is connected to nodes ONE, LHZ, UIX.
Node UIX is connected to node LLF.
Node VMK is connected to nodes LHZ, RUD, QVO, WUQ.
Node ESL is connected to nodes QVO, UIX, LHZ.
Node WPY is connected to nodes ONE, VMK, UIX, WUQ.
Node XPX is connected to node WPY.","[ESL, ONE, UIX, VMK, LHZ, WUQ, WPY, QVO, RUD, XPX, LLF]",11,23,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ESL, XPX, WPY, VMK, RUD, QVO, ONE, LHZ, WUQ, UIX, LLF]","Let's solve it step by step.
Nodes with 0 in-degree: [ESL, XPX].
Visit node ESL and remove it from the graph.
Nodes with 0 in-degree: [XPX].
Visit node XPX and remove it from the graph.
Nodes with 0 in-degree: [WPY].
Visit node WPY and remove it from the graph.
Nodes with 0 in-degree: [VMK].
Visit node VMK and remove it from the graph.
Nodes with 0 in-degree: [RUD, QVO].
Visit node RUD and remove it from the graph.
Nodes with 0 in-degree: [QVO].
Visit node QVO and remove it from the graph.
Nodes with 0 in-degree: [ONE, LHZ].
Visit node ONE and remove it from the graph.
Nodes with 0 in-degree: [LHZ].
Visit node LHZ and remove it from the graph.
Nodes with 0 in-degree: [WUQ, UIX].
Visit node WUQ and remove it from the graph.
Nodes with 0 in-degree: [UIX].
Visit node UIX and remove it from the graph.
Nodes with 0 in-degree: [LLF].
Visit node LLF and remove it from the graph.
So the result of topological sorting is ","('[[ESL, RUD, WUQ, ONE, WPY, LLF, UIX, XPX, LHZ, VMK, QVO], [ESL, XPX, WPY, VMK, RUD, QVO, ONE, LHZ, WUQ, UIX, LLF], [ESL, XPX, WPY, WUQ, UIX, LLF, VMK, RUD, QVO, ONE, LHZ], [ESL, XPX, WPY, VMK, RUD, UIX, ONE, WUQ, LHZ, LLF, QVO]]',)",1,261
topological_sort,"[(DSP, XRN), (DSP, AKS), (YGQ, DSP), (YGQ, XRN), (YGQ, AKS), (DYP, YGQ), (DYP, DSP), (DYP, EKG), (EKG, XRN), (TMS, BGD), (BGD, DSP), (CFB, YGQ), (CFB, EKG), (CFB, AKS)]","{DSP: [XRN, AKS],
XRN: [],
AKS: [],
YGQ: [DSP, XRN, AKS],
DYP: [YGQ, DSP, EKG],
EKG: [XRN],
TMS: [BGD],
BGD: [DSP],
CFB: [YGQ, EKG, AKS]}","Node DSP is connected to nodes XRN, AKS.
Node YGQ is connected to nodes DSP, XRN, AKS.
Node DYP is connected to nodes YGQ, DSP, EKG.
Node EKG is connected to node XRN.
Node TMS is connected to node BGD.
Node BGD is connected to node DSP.
Node CFB is connected to nodes YGQ, EKG, AKS.","[DYP, YGQ, TMS, CFB, XRN, DSP, EKG, AKS, BGD]",9,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[DYP, TMS, CFB, BGD, YGQ, EKG, DSP, XRN, AKS]","Let's solve it step by step.
Nodes with 0 in-degree: [DYP, TMS, CFB].
Visit node DYP and remove it from the graph.
Nodes with 0 in-degree: [TMS, CFB].
Visit node TMS and remove it from the graph.
Nodes with 0 in-degree: [CFB, BGD].
Visit node CFB and remove it from the graph.
Nodes with 0 in-degree: [BGD, YGQ, EKG].
Visit node BGD and remove it from the graph.
Nodes with 0 in-degree: [YGQ, EKG].
Visit node YGQ and remove it from the graph.
Nodes with 0 in-degree: [EKG, DSP].
Visit node EKG and remove it from the graph.
Nodes with 0 in-degree: [DSP].
Visit node DSP and remove it from the graph.
Nodes with 0 in-degree: [XRN, AKS].
Visit node XRN and remove it from the graph.
Nodes with 0 in-degree: [AKS].
Visit node AKS and remove it from the graph.
So the result of topological sorting is ","('[[DYP, TMS, CFB, DSP, XRN, AKS, BGD, YGQ, EKG], [DYP, TMS, CFB, BGD, YGQ, EKG, DSP, XRN, AKS], [DYP, TMS, CFB, BGD, XRN, DSP, EKG, AKS, YGQ], [DYP, DSP, YGQ, XRN, AKS, BGD, CFB, EKG, TMS]]',)",1,262
topological_sort,"[(JGL, MGG), (JGL, HJM), (JGL, FJP), (JGL, XDR), (MGG, WVV), (MGG, REP), (HJM, WVV), (HJM, FJP), (HJM, MGG), (FJP, WVV), (FJP, ZHM), (XDR, FEM), (XDR, MGG), (REP, BLY), (EGY, WVV), (EGY, HJM), (EGY, ZHM), (EGY, XDR), (ZHM, FEM), (ZHM, MGG), (ZHM, REP), (ZWQ, XDR), (ZWQ, FEM), (ZWQ, EGY), (ZWQ, MGG), (ZWQ, HJM), (ZWQ, BLY), (FEM, BLY), (FEM, REP), (IGA, ZHM), (IGA, EGY), (IGA, MGG), (IGA, HJM)]","{JGL: [MGG, HJM, FJP, XDR],
MGG: [WVV, REP],
HJM: [WVV, FJP, MGG],
FJP: [WVV, ZHM],
XDR: [FEM, MGG],
WVV: [],
REP: [BLY],
EGY: [WVV, HJM, ZHM, XDR],
ZHM: [FEM, MGG, REP],
ZWQ: [XDR, FEM, EGY, MGG, HJM, BLY],
FEM: [BLY, REP],
BLY: [],
IGA: [ZHM, EGY, MGG, HJM]}","Node JGL is connected to nodes MGG, HJM, FJP, XDR.
Node MGG is connected to nodes WVV, REP.
Node HJM is connected to nodes WVV, FJP, MGG.
Node FJP is connected to nodes WVV, ZHM.
Node XDR is connected to nodes FEM, MGG.
Node REP is connected to node BLY.
Node EGY is connected to nodes WVV, HJM, ZHM, XDR.
Node ZHM is connected to nodes FEM, MGG, REP.
Node ZWQ is connected to nodes XDR, FEM, EGY, MGG, HJM, BLY.
Node FEM is connected to nodes BLY, REP.
Node IGA is connected to nodes ZHM, EGY, MGG, HJM.","[EGY, IGA, REP, ZWQ, XDR, ZHM, MGG, HJM, WVV, JGL, FEM, BLY, FJP]",13,33,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[JGL, ZWQ, IGA, EGY, HJM, XDR, FJP, ZHM, FEM, MGG, WVV, REP, BLY]","Let's solve it step by step.
Nodes with 0 in-degree: [JGL, ZWQ, IGA].
Visit node JGL and remove it from the graph.
Nodes with 0 in-degree: [ZWQ, IGA].
Visit node ZWQ and remove it from the graph.
Nodes with 0 in-degree: [IGA].
Visit node IGA and remove it from the graph.
Nodes with 0 in-degree: [EGY].
Visit node EGY and remove it from the graph.
Nodes with 0 in-degree: [HJM, XDR].
Visit node HJM and remove it from the graph.
Nodes with 0 in-degree: [XDR, FJP].
Visit node XDR and remove it from the graph.
Nodes with 0 in-degree: [FJP].
Visit node FJP and remove it from the graph.
Nodes with 0 in-degree: [ZHM].
Visit node ZHM and remove it from the graph.
Nodes with 0 in-degree: [FEM, MGG].
Visit node FEM and remove it from the graph.
Nodes with 0 in-degree: [MGG].
Visit node MGG and remove it from the graph.
Nodes with 0 in-degree: [WVV, REP].
Visit node WVV and remove it from the graph.
Nodes with 0 in-degree: [REP].
Visit node REP and remove it from the graph.
Nodes with 0 in-degree: [BLY].
Visit node BLY and remove it from the graph.
So the result of topological sorting is ","('[[JGL, ZWQ, IGA, EGY, HJM, XDR, WVV, BLY, MGG, ZHM, FJP, FEM, REP], [JGL, IGA, FJP, ZHM, ZWQ, REP, BLY, FEM, EGY, XDR, WVV, HJM, MGG], [JGL, ZWQ, IGA, EGY, MGG, WVV, REP, BLY, HJM, XDR, FJP, ZHM, FEM], [JGL, ZWQ, IGA, EGY, HJM, XDR, FJP, ZHM, FEM, MGG, WVV, REP, BLY]]',)",3,263
topological_sort,"[(DQC, LFR), (DQC, JMI), (DQC, NVL), (DQC, QAS), (LFR, NNZ), (LFR, JMI), (JMI, NNZ), (NVL, NNZ), (NVL, TAU), (NVL, ZIO), (NVL, YSQ), (NNZ, QAS), (TAU, ZIO), (TAU, JMI), (ZIO, LFR), (ZIO, YSQ), (YSQ, QAS), (YSQ, JMI), (OZK, ZIO), (OZK, YSQ), (OZK, DQC), (OZK, JMI), (OZK, NVL)]","{DQC: [LFR, JMI, NVL, QAS],
LFR: [NNZ, JMI],
JMI: [NNZ],
NVL: [NNZ, TAU, ZIO, YSQ],
QAS: [],
NNZ: [QAS],
TAU: [ZIO, JMI],
ZIO: [LFR, YSQ],
YSQ: [QAS, JMI],
OZK: [ZIO, YSQ, DQC, JMI, NVL]}","Node DQC is connected to nodes LFR, JMI, NVL, QAS.
Node LFR is connected to nodes NNZ, JMI.
Node JMI is connected to node NNZ.
Node NVL is connected to nodes NNZ, TAU, ZIO, YSQ.
Node NNZ is connected to node QAS.
Node TAU is connected to nodes ZIO, JMI.
Node ZIO is connected to nodes LFR, YSQ.
Node YSQ is connected to nodes QAS, JMI.
Node OZK is connected to nodes ZIO, YSQ, DQC, JMI, NVL.","[ZIO, TAU, NNZ, YSQ, QAS, NVL, JMI, DQC, LFR, OZK]",10,23,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[OZK, DQC, NVL, TAU, ZIO, LFR, YSQ, JMI, NNZ, QAS]","Let's solve it step by step.
Nodes with 0 in-degree: [OZK].
Visit node OZK and remove it from the graph.
Nodes with 0 in-degree: [DQC].
Visit node DQC and remove it from the graph.
Nodes with 0 in-degree: [NVL].
Visit node NVL and remove it from the graph.
Nodes with 0 in-degree: [TAU].
Visit node TAU and remove it from the graph.
Nodes with 0 in-degree: [ZIO].
Visit node ZIO and remove it from the graph.
Nodes with 0 in-degree: [LFR, YSQ].
Visit node LFR and remove it from the graph.
Nodes with 0 in-degree: [YSQ].
Visit node YSQ and remove it from the graph.
Nodes with 0 in-degree: [JMI].
Visit node JMI and remove it from the graph.
Nodes with 0 in-degree: [NNZ].
Visit node NNZ and remove it from the graph.
Nodes with 0 in-degree: [QAS].
Visit node QAS and remove it from the graph.
So the result of topological sorting is ","('[[OZK, DQC, NVL, TAU, ZIO, LFR, QAS, JMI, YSQ, NNZ], [OZK, DQC, NVL, JMI, NNZ, QAS, TAU, ZIO, LFR, YSQ], [OZK, ZIO, LFR, QAS, JMI, DQC, TAU, NVL, NNZ, YSQ], [OZK, DQC, NVL, TAU, ZIO, LFR, YSQ, JMI, NNZ, QAS]]',)",3,264
topological_sort,"[(YGO, JUK), (YGO, GVI), (YGO, LYS), (YGO, JPU), (JUK, LES), (JUK, SBT), (GVI, ZQX), (GVI, LXR), (GVI, SBT), (GVI, JUK), (LYS, TCQ), (LYS, SBT), (LYS, YJF), (LYS, IUX), (JPU, IUX), (JPU, WBA), (JPU, LXR), (JPU, YJF), (JPU, SBT), (LES, SBT), (LES, RCX), (SBT, RCX), (SBT, TCQ), (ZQX, SBT), (ZQX, TCQ), (YJF, TCQ), (IUX, SBT), (IUX, TCQ), (IUX, ZQX), (IUX, JUK), (IUX, RCX), (WBA, GVI), (WBA, TCQ), (WBA, ZQX), (WBA, RCX), (WBA, JUK), (WBA, LXR), (LXR, JUK), (LXR, LES)]","{YGO: [JUK, GVI, LYS, JPU],
JUK: [LES, SBT],
GVI: [ZQX, LXR, SBT, JUK],
LYS: [TCQ, SBT, YJF, IUX],
JPU: [IUX, WBA, LXR, YJF, SBT],
LES: [SBT, RCX],
SBT: [RCX, TCQ],
ZQX: [SBT, TCQ],
TCQ: [],
RCX: [],
YJF: [TCQ],
IUX: [SBT, TCQ, ZQX, JUK, RCX],
WBA: [GVI, TCQ, ZQX, RCX, JUK, LXR],
LXR: [JUK, LES]}","Node YGO is connected to nodes JUK, GVI, LYS, JPU.
Node JUK is connected to nodes LES, SBT.
Node GVI is connected to nodes ZQX, LXR, SBT, JUK.
Node LYS is connected to nodes TCQ, SBT, YJF, IUX.
Node JPU is connected to nodes IUX, WBA, LXR, YJF, SBT.
Node LES is connected to nodes SBT, RCX.
Node SBT is connected to nodes RCX, TCQ.
Node ZQX is connected to nodes SBT, TCQ.
Node YJF is connected to node TCQ.
Node IUX is connected to nodes SBT, TCQ, ZQX, JUK, RCX.
Node WBA is connected to nodes GVI, TCQ, ZQX, RCX, JUK, LXR.
Node LXR is connected to nodes JUK, LES.","[TCQ, YGO, IUX, GVI, ZQX, LES, JPU, WBA, SBT, RCX, YJF, LXR, LYS, JUK]",14,39,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YGO, LYS, JPU, IUX, WBA, YJF, GVI, ZQX, LXR, JUK, LES, SBT, RCX, TCQ]","Let's solve it step by step.
Nodes with 0 in-degree: [YGO].
Visit node YGO and remove it from the graph.
Nodes with 0 in-degree: [LYS, JPU].
Visit node LYS and remove it from the graph.
Nodes with 0 in-degree: [JPU].
Visit node JPU and remove it from the graph.
Nodes with 0 in-degree: [IUX, WBA, YJF].
Visit node IUX and remove it from the graph.
Nodes with 0 in-degree: [WBA, YJF].
Visit node WBA and remove it from the graph.
Nodes with 0 in-degree: [YJF, GVI].
Visit node YJF and remove it from the graph.
Nodes with 0 in-degree: [GVI].
Visit node GVI and remove it from the graph.
Nodes with 0 in-degree: [ZQX, LXR].
Visit node ZQX and remove it from the graph.
Nodes with 0 in-degree: [LXR].
Visit node LXR and remove it from the graph.
Nodes with 0 in-degree: [JUK].
Visit node JUK and remove it from the graph.
Nodes with 0 in-degree: [LES].
Visit node LES and remove it from the graph.
Nodes with 0 in-degree: [SBT].
Visit node SBT and remove it from the graph.
Nodes with 0 in-degree: [RCX, TCQ].
Visit node RCX and remove it from the graph.
Nodes with 0 in-degree: [TCQ].
Visit node TCQ and remove it from the graph.
So the result of topological sorting is ","('[[YGO, LYS, JPU, IUX, WBA, YJF, GVI, ZQX, LXR, JUK, LES, SBT, RCX, TCQ], [YGO, LYS, JPU, IUX, LES, SBT, RCX, TCQ, WBA, YJF, GVI, ZQX, LXR, JUK], [YGO, SBT, TCQ, JPU, LYS, ZQX, WBA, RCX, YJF, LXR, LES, GVI, JUK, IUX], [YGO, LYS, JPU, IUX, WBA, YJF, GVI, SBT, LXR, TCQ, RCX, ZQX, LES, JUK]]',)",0,265
topological_sort,"[(THR, ESS), (THR, IAH), (THR, DLG), (ESS, IXU), (ESS, IAH), (IAH, IXU), (DLG, IXU), (DLG, ESS), (QYY, ESS), (QYY, DLG), (QYY, IAH), (QYY, DNJ), (QYY, XBH), (DNJ, DLG), (DNJ, THR), (DNJ, ZNQ), (XBH, MFW), (XBH, ZNQ), (XBH, DLG), (XBH, THR), (ZNQ, DLG), (ZNQ, IXU), (ZNQ, MFW), (ZNQ, ESS), (MFW, THR), (MFW, IXU)]","{THR: [ESS, IAH, DLG],
ESS: [IXU, IAH],
IAH: [IXU],
DLG: [IXU, ESS],
IXU: [],
QYY: [ESS, DLG, IAH, DNJ, XBH],
DNJ: [DLG, THR, ZNQ],
XBH: [MFW, ZNQ, DLG, THR],
ZNQ: [DLG, IXU, MFW, ESS],
MFW: [THR, IXU]}","Node THR is connected to nodes ESS, IAH, DLG.
Node ESS is connected to nodes IXU, IAH.
Node IAH is connected to node IXU.
Node DLG is connected to nodes IXU, ESS.
Node QYY is connected to nodes ESS, DLG, IAH, DNJ, XBH.
Node DNJ is connected to nodes DLG, THR, ZNQ.
Node XBH is connected to nodes MFW, ZNQ, DLG, THR.
Node ZNQ is connected to nodes DLG, IXU, MFW, ESS.
Node MFW is connected to nodes THR, IXU.","[IAH, THR, DNJ, XBH, ESS, IXU, ZNQ, DLG, QYY, MFW]",10,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QYY, DNJ, XBH, ZNQ, MFW, THR, DLG, ESS, IAH, IXU]","Let's solve it step by step.
Nodes with 0 in-degree: [QYY].
Visit node QYY and remove it from the graph.
Nodes with 0 in-degree: [DNJ, XBH].
Visit node DNJ and remove it from the graph.
Nodes with 0 in-degree: [XBH].
Visit node XBH and remove it from the graph.
Nodes with 0 in-degree: [ZNQ].
Visit node ZNQ and remove it from the graph.
Nodes with 0 in-degree: [MFW].
Visit node MFW and remove it from the graph.
Nodes with 0 in-degree: [THR].
Visit node THR and remove it from the graph.
Nodes with 0 in-degree: [DLG].
Visit node DLG and remove it from the graph.
Nodes with 0 in-degree: [ESS].
Visit node ESS and remove it from the graph.
Nodes with 0 in-degree: [IAH].
Visit node IAH and remove it from the graph.
Nodes with 0 in-degree: [IXU].
Visit node IXU and remove it from the graph.
So the result of topological sorting is ","('[[QYY, DNJ, XBH, ZNQ, MFW, THR, DLG, ESS, IAH, IXU], [QYY, MFW, DNJ, ZNQ, DLG, IXU, XBH, IAH, ESS, THR], [QYY, DNJ, XBH, ESS, IAH, IXU, ZNQ, MFW, THR, DLG], [QYY, DNJ, XBH, ZNQ, MFW, IXU, THR, DLG, ESS, IAH]]',)",0,266
topological_sort,"[(BKK, SET), (BKK, JRZ), (BKK, IJO), (BKK, IHQ), (SET, EKY), (JRZ, EKY), (JRZ, MGI), (JRZ, USG), (IJO, USG), (IJO, IHQ), (IJO, JRZ), (IJO, EKY), (IHQ, SET), (IHQ, WAV), (IHQ, EKY), (TMS, IJO), (TMS, USG), (TMS, SET), (TMS, WAV), (TMS, VAD), (WAV, JRZ), (WAV, MGI), (VAD, JRZ), (VAD, USG), (VAD, QTB), (VAD, EKY), (VAD, WAV), (VAD, IJO), (VAD, SET), (QTB, EKY), (QTB, JRZ), (QTB, IHQ), (MGI, SET), (MGI, USG), (NMD, SET), (NMD, TMS), (NMD, EKY), (NMD, KKE), (NMD, IJO), (KKE, EKY), (KKE, JRZ), (KKE, MGI), (KKE, WAV), (KKE, BKK), (KKE, USG), (KKE, IJO), (ZLP, KKE), (ZLP, QTB), (ZLP, BKK)]","{BKK: [SET, JRZ, IJO, IHQ],
SET: [EKY],
JRZ: [EKY, MGI, USG],
IJO: [USG, IHQ, JRZ, EKY],
IHQ: [SET, WAV, EKY],
EKY: [],
TMS: [IJO, USG, SET, WAV, VAD],
USG: [],
WAV: [JRZ, MGI],
VAD: [JRZ, USG, QTB, EKY, WAV, IJO, SET],
QTB: [EKY, JRZ, IHQ],
MGI: [SET, USG],
NMD: [SET, TMS, EKY, KKE, IJO],
KKE: [EKY, JRZ, MGI, WAV, BKK, USG, IJO],
ZLP: [KKE, QTB, BKK]}","Node BKK is connected to nodes SET, JRZ, IJO, IHQ.
Node SET is connected to node EKY.
Node JRZ is connected to nodes EKY, MGI, USG.
Node IJO is connected to nodes USG, IHQ, JRZ, EKY.
Node IHQ is connected to nodes SET, WAV, EKY.
Node TMS is connected to nodes IJO, USG, SET, WAV, VAD.
Node WAV is connected to nodes JRZ, MGI.
Node VAD is connected to nodes JRZ, USG, QTB, EKY, WAV, IJO, SET.
Node QTB is connected to nodes EKY, JRZ, IHQ.
Node MGI is connected to nodes SET, USG.
Node NMD is connected to nodes SET, TMS, EKY, KKE, IJO.
Node KKE is connected to nodes EKY, JRZ, MGI, WAV, BKK, USG, IJO.
Node ZLP is connected to nodes KKE, QTB, BKK.","[BKK, IHQ, ZLP, VAD, TMS, NMD, IJO, WAV, USG, SET, KKE, QTB, EKY, MGI, JRZ]",15,49,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[NMD, ZLP, TMS, KKE, VAD, BKK, QTB, IJO, IHQ, WAV, JRZ, MGI, SET, USG, EKY]","Let's solve it step by step.
Nodes with 0 in-degree: [NMD, ZLP].
Visit node NMD and remove it from the graph.
Nodes with 0 in-degree: [ZLP, TMS].
Visit node ZLP and remove it from the graph.
Nodes with 0 in-degree: [TMS, KKE].
Visit node TMS and remove it from the graph.
Nodes with 0 in-degree: [KKE, VAD].
Visit node KKE and remove it from the graph.
Nodes with 0 in-degree: [VAD, BKK].
Visit node VAD and remove it from the graph.
Nodes with 0 in-degree: [BKK, QTB].
Visit node BKK and remove it from the graph.
Nodes with 0 in-degree: [QTB, IJO].
Visit node QTB and remove it from the graph.
Nodes with 0 in-degree: [IJO].
Visit node IJO and remove it from the graph.
Nodes with 0 in-degree: [IHQ].
Visit node IHQ and remove it from the graph.
Nodes with 0 in-degree: [WAV].
Visit node WAV and remove it from the graph.
Nodes with 0 in-degree: [JRZ].
Visit node JRZ and remove it from the graph.
Nodes with 0 in-degree: [MGI].
Visit node MGI and remove it from the graph.
Nodes with 0 in-degree: [SET, USG].
Visit node SET and remove it from the graph.
Nodes with 0 in-degree: [USG, EKY].
Visit node USG and remove it from the graph.
Nodes with 0 in-degree: [EKY].
Visit node EKY and remove it from the graph.
So the result of topological sorting is ","('[[NMD, ZLP, TMS, KKE, VAD, JRZ, MGI, SET, USG, EKY, BKK, QTB, IJO, IHQ, WAV], [NMD, BKK, IHQ, MGI, VAD, SET, EKY, USG, KKE, IJO, ZLP, TMS, WAV, QTB, JRZ], [NMD, ZLP, TMS, KKE, VAD, BKK, QTB, IJO, IHQ, WAV, JRZ, MGI, SET, USG, EKY], [NMD, ZLP, TMS, KKE, VAD, BKK, QTB, IHQ, IJO, WAV, EKY, USG, MGI, JRZ, SET]]',)",2,267
topological_sort,"[(TSS, SDZ), (TSS, NSF), (TSS, SKZ), (TSS, HNI), (TSS, SYC), (TSS, SYA), (SDZ, BCP), (SDZ, ODR), (SDZ, HDF), (SDZ, HNI), (SKZ, NSF), (HNI, NSF), (SYC, HNI), (SYC, HDF), (SYC, ODR), (SYA, SYC), (BCP, HNI), (ODR, SKZ), (HDF, NSF), (HDF, ODR), (HDF, BCP), (HDF, HNI), (RUO, SYA), (RUO, ODR), (RUO, TSS), (RUO, BCP)]","{TSS: [SDZ, NSF, SKZ, HNI, SYC, SYA],
SDZ: [BCP, ODR, HDF, HNI],
NSF: [],
SKZ: [NSF],
HNI: [NSF],
SYC: [HNI, HDF, ODR],
SYA: [SYC],
BCP: [HNI],
ODR: [SKZ],
HDF: [NSF, ODR, BCP, HNI],
RUO: [SYA, ODR, TSS, BCP]}","Node TSS is connected to nodes SDZ, NSF, SKZ, HNI, SYC, SYA.
Node SDZ is connected to nodes BCP, ODR, HDF, HNI.
Node SKZ is connected to node NSF.
Node HNI is connected to node NSF.
Node SYC is connected to nodes HNI, HDF, ODR.
Node SYA is connected to node SYC.
Node BCP is connected to node HNI.
Node ODR is connected to node SKZ.
Node HDF is connected to nodes NSF, ODR, BCP, HNI.
Node RUO is connected to nodes SYA, ODR, TSS, BCP.","[SDZ, BCP, TSS, ODR, HNI, SYC, RUO, SKZ, SYA, NSF, HDF]",11,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[RUO, TSS, SDZ, SYA, SYC, HDF, ODR, BCP, SKZ, HNI, NSF]","Let's solve it step by step.
Nodes with 0 in-degree: [RUO].
Visit node RUO and remove it from the graph.
Nodes with 0 in-degree: [TSS].
Visit node TSS and remove it from the graph.
Nodes with 0 in-degree: [SDZ, SYA].
Visit node SDZ and remove it from the graph.
Nodes with 0 in-degree: [SYA].
Visit node SYA and remove it from the graph.
Nodes with 0 in-degree: [SYC].
Visit node SYC and remove it from the graph.
Nodes with 0 in-degree: [HDF].
Visit node HDF and remove it from the graph.
Nodes with 0 in-degree: [ODR, BCP].
Visit node ODR and remove it from the graph.
Nodes with 0 in-degree: [BCP, SKZ].
Visit node BCP and remove it from the graph.
Nodes with 0 in-degree: [SKZ, HNI].
Visit node SKZ and remove it from the graph.
Nodes with 0 in-degree: [HNI].
Visit node HNI and remove it from the graph.
Nodes with 0 in-degree: [NSF].
Visit node NSF and remove it from the graph.
So the result of topological sorting is ","('[[RUO, TSS, SDZ, SKZ, HNI, NSF, SYA, SYC, HDF, ODR, BCP], [RUO, SYA, HNI, BCP, NSF, HDF, SYC, ODR, TSS, SKZ, SDZ], [RUO, TSS, SDZ, SYA, SYC, SKZ, ODR, BCP, NSF, HNI, HDF], [RUO, TSS, SDZ, SYA, SYC, HDF, ODR, BCP, SKZ, HNI, NSF]]',)",3,268
topological_sort,"[(RMH, IHG), (RMH, LUE), (RMH, VYM), (RMH, MWI), (IHG, MWI), (IHG, VFD), (MWI, UPQ), (VFD, VYM), (VFD, LUE), (VFD, TTU), (TTU, UPQ), (AIA, RMH)]","{RMH: [IHG, LUE, VYM, MWI],
IHG: [MWI, VFD],
LUE: [],
VYM: [],
MWI: [UPQ],
VFD: [VYM, LUE, TTU],
TTU: [UPQ],
AIA: [RMH],
UPQ: []}","Node RMH is connected to nodes IHG, LUE, VYM, MWI.
Node IHG is connected to nodes MWI, VFD.
Node MWI is connected to node UPQ.
Node VFD is connected to nodes VYM, LUE, TTU.
Node TTU is connected to node UPQ.
Node AIA is connected to node RMH.","[RMH, MWI, TTU, AIA, UPQ, IHG, LUE, VFD, VYM]",9,12,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[AIA, RMH, IHG, MWI, VFD, VYM, LUE, TTU, UPQ]","Let's solve it step by step.
Nodes with 0 in-degree: [AIA].
Visit node AIA and remove it from the graph.
Nodes with 0 in-degree: [RMH].
Visit node RMH and remove it from the graph.
Nodes with 0 in-degree: [IHG].
Visit node IHG and remove it from the graph.
Nodes with 0 in-degree: [MWI, VFD].
Visit node MWI and remove it from the graph.
Nodes with 0 in-degree: [VFD].
Visit node VFD and remove it from the graph.
Nodes with 0 in-degree: [VYM, LUE, TTU].
Visit node VYM and remove it from the graph.
Nodes with 0 in-degree: [LUE, TTU].
Visit node LUE and remove it from the graph.
Nodes with 0 in-degree: [TTU].
Visit node TTU and remove it from the graph.
Nodes with 0 in-degree: [UPQ].
Visit node UPQ and remove it from the graph.
So the result of topological sorting is ","('[[AIA, VYM, RMH, MWI, IHG, LUE, VFD, TTU, UPQ], [AIA, RMH, IHG, LUE, TTU, UPQ, MWI, VFD, VYM], [AIA, RMH, IHG, MWI, VYM, UPQ, VFD, LUE, TTU], [AIA, RMH, IHG, MWI, VFD, VYM, LUE, TTU, UPQ]]',)",3,269
topological_sort,"[(WHW, XCY), (WHW, KUY), (WHW, HBC), (WHW, RFS), (WHW, SQN), (WHW, FLY), (KUY, FLY), (KUY, SQN), (HBC, XCY), (HBC, FLY), (RFS, FLY), (RFS, PHB), (RFS, HBC), (RFS, LBI), (SQN, LBI), (SQN, HBC), (SQN, FLY), (FLY, XCY), (PHB, LBI), (LBI, HBC), (LBI, FLY), (GSV, FLY), (GSV, RFS), (GSV, PHB), (GSV, QOT), (QOT, XCY), (QOT, SQN), (QOT, WHW), (QOT, LBI), (QOT, KUY), (WGB, LBI), (WGB, KUY), (WGB, GSV), (WGB, PHB), (WGB, QOT), (WGB, QTX), (QTX, GSV), (QTX, FLY), (QTX, PHB), (QTX, WHW)]","{WHW: [XCY, KUY, HBC, RFS, SQN, FLY],
XCY: [],
KUY: [FLY, SQN],
HBC: [XCY, FLY],
RFS: [FLY, PHB, HBC, LBI],
SQN: [LBI, HBC, FLY],
FLY: [XCY],
PHB: [LBI],
LBI: [HBC, FLY],
GSV: [FLY, RFS, PHB, QOT],
QOT: [XCY, SQN, WHW, LBI, KUY],
WGB: [LBI, KUY, GSV, PHB, QOT, QTX],
QTX: [GSV, FLY, PHB, WHW]}","Node WHW is connected to nodes XCY, KUY, HBC, RFS, SQN, FLY.
Node KUY is connected to nodes FLY, SQN.
Node HBC is connected to nodes XCY, FLY.
Node RFS is connected to nodes FLY, PHB, HBC, LBI.
Node SQN is connected to nodes LBI, HBC, FLY.
Node FLY is connected to node XCY.
Node PHB is connected to node LBI.
Node LBI is connected to nodes HBC, FLY.
Node GSV is connected to nodes FLY, RFS, PHB, QOT.
Node QOT is connected to nodes XCY, SQN, WHW, LBI, KUY.
Node WGB is connected to nodes LBI, KUY, GSV, PHB, QOT, QTX.
Node QTX is connected to nodes GSV, FLY, PHB, WHW.","[FLY, GSV, HBC, SQN, WHW, QOT, PHB, RFS, QTX, XCY, KUY, LBI, WGB]",13,40,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[WGB, QTX, GSV, QOT, WHW, KUY, RFS, SQN, PHB, LBI, HBC, FLY, XCY]","Let's solve it step by step.
Nodes with 0 in-degree: [WGB].
Visit node WGB and remove it from the graph.
Nodes with 0 in-degree: [QTX].
Visit node QTX and remove it from the graph.
Nodes with 0 in-degree: [GSV].
Visit node GSV and remove it from the graph.
Nodes with 0 in-degree: [QOT].
Visit node QOT and remove it from the graph.
Nodes with 0 in-degree: [WHW].
Visit node WHW and remove it from the graph.
Nodes with 0 in-degree: [KUY, RFS].
Visit node KUY and remove it from the graph.
Nodes with 0 in-degree: [RFS, SQN].
Visit node RFS and remove it from the graph.
Nodes with 0 in-degree: [SQN, PHB].
Visit node SQN and remove it from the graph.
Nodes with 0 in-degree: [PHB].
Visit node PHB and remove it from the graph.
Nodes with 0 in-degree: [LBI].
Visit node LBI and remove it from the graph.
Nodes with 0 in-degree: [HBC].
Visit node HBC and remove it from the graph.
Nodes with 0 in-degree: [FLY].
Visit node FLY and remove it from the graph.
Nodes with 0 in-degree: [XCY].
Visit node XCY and remove it from the graph.
So the result of topological sorting is ","('[[WGB, QTX, GSV, QOT, WHW, KUY, PHB, XCY, FLY, LBI, SQN, RFS, HBC], [WGB, QTX, GSV, QOT, WHW, KUY, RFS, SQN, PHB, LBI, HBC, FLY, XCY], [WGB, QTX, GSV, QOT, LBI, HBC, FLY, XCY, WHW, KUY, RFS, SQN, PHB], [WGB, XCY, HBC, FLY, GSV, PHB, QTX, LBI, QOT, SQN, KUY, RFS, WHW]]',)",1,270
topological_sort,"[(MZP, PHE), (MZP, JHY), (MZP, ZWY), (PHE, ZWY), (PHE, HGJ), (PHE, YLM), (JHY, MKV), (JHY, EYK), (ZWY, MKV), (HGJ, ENO), (HGJ, IKE), (YLM, TAD), (YLM, ENO), (MKV, BEO), (MKV, TAD), (ENO, ZWE), (IKE, BQM), (IKE, MKV), (ZWE, EYK), (ZWE, ZWY), (ZWE, JHY), (LYN, HGJ)]","{MZP: [PHE, JHY, ZWY],
PHE: [ZWY, HGJ, YLM],
JHY: [MKV, EYK],
ZWY: [MKV],
HGJ: [ENO, IKE],
YLM: [TAD, ENO],
MKV: [BEO, TAD],
EYK: [],
BEO: [],
TAD: [],
ENO: [ZWE],
IKE: [BQM, MKV],
ZWE: [EYK, ZWY, JHY],
BQM: [],
LYN: [HGJ]}","Node MZP is connected to nodes PHE, JHY, ZWY.
Node PHE is connected to nodes ZWY, HGJ, YLM.
Node JHY is connected to nodes MKV, EYK.
Node ZWY is connected to node MKV.
Node HGJ is connected to nodes ENO, IKE.
Node YLM is connected to nodes TAD, ENO.
Node MKV is connected to nodes BEO, TAD.
Node ENO is connected to node ZWE.
Node IKE is connected to nodes BQM, MKV.
Node ZWE is connected to nodes EYK, ZWY, JHY.
Node LYN is connected to node HGJ.","[EYK, MZP, LYN, TAD, BEO, PHE, HGJ, IKE, ZWY, MKV, JHY, BQM, ZWE, ENO, YLM]",15,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MZP, LYN, PHE, HGJ, YLM, IKE, ENO, BQM, ZWE, ZWY, JHY, MKV, EYK, BEO, TAD]","Let's solve it step by step.
Nodes with 0 in-degree: [MZP, LYN].
Visit node MZP and remove it from the graph.
Nodes with 0 in-degree: [LYN, PHE].
Visit node LYN and remove it from the graph.
Nodes with 0 in-degree: [PHE].
Visit node PHE and remove it from the graph.
Nodes with 0 in-degree: [HGJ, YLM].
Visit node HGJ and remove it from the graph.
Nodes with 0 in-degree: [YLM, IKE].
Visit node YLM and remove it from the graph.
Nodes with 0 in-degree: [IKE, ENO].
Visit node IKE and remove it from the graph.
Nodes with 0 in-degree: [ENO, BQM].
Visit node ENO and remove it from the graph.
Nodes with 0 in-degree: [BQM, ZWE].
Visit node BQM and remove it from the graph.
Nodes with 0 in-degree: [ZWE].
Visit node ZWE and remove it from the graph.
Nodes with 0 in-degree: [ZWY, JHY].
Visit node ZWY and remove it from the graph.
Nodes with 0 in-degree: [JHY].
Visit node JHY and remove it from the graph.
Nodes with 0 in-degree: [MKV, EYK].
Visit node MKV and remove it from the graph.
Nodes with 0 in-degree: [EYK, BEO, TAD].
Visit node EYK and remove it from the graph.
Nodes with 0 in-degree: [BEO, TAD].
Visit node BEO and remove it from the graph.
Nodes with 0 in-degree: [TAD].
Visit node TAD and remove it from the graph.
So the result of topological sorting is ","('[[MZP, LYN, PHE, HGJ, YLM, IKE, ENO, MKV, ZWE, BEO, EYK, BQM, TAD, ZWY, JHY], [MZP, EYK, PHE, JHY, HGJ, IKE, ZWE, BQM, TAD, YLM, ENO, LYN, MKV, BEO, ZWY], [MZP, LYN, PHE, HGJ, YLM, IKE, ENO, BQM, ZWE, ZWY, JHY, MKV, EYK, BEO, TAD], [MZP, LYN, PHE, HGJ, YLM, JHY, MKV, EYK, BEO, TAD, IKE, ENO, BQM, ZWE, ZWY]]',)",2,271
topological_sort,"[(BEI, USP), (BEI, JYO), (BEI, ZTP), (JYO, GHY), (ZTP, GHY), (LVG, SOS), (LVG, ZTP), (LVG, OVP), (LVG, KWH), (SOS, OVP), (SOS, KWH), (SOS, WSD), (SOS, EUE), (SOS, ZTP), (SOS, GHY), (OVP, KWH), (OVP, ZTP), (KWH, BEI), (KWH, ZTP), (WSD, OVP), (WSD, NPT), (WSD, ZTP), (WSD, VUI), (EUE, JYO), (EUE, VUI), (EUE, BGR), (EUE, OVP), (GHY, USP), (VUI, ZTP), (VUI, JYO), (VUI, OVP), (VUI, USP), (BGR, OVP), (BGR, BEI), (NPT, BGR), (NPT, ZTP), (NPT, GHY), (NPT, VUI)]","{BEI: [USP, JYO, ZTP],
USP: [],
JYO: [GHY],
ZTP: [GHY],
LVG: [SOS, ZTP, OVP, KWH],
SOS: [OVP, KWH, WSD, EUE, ZTP, GHY],
OVP: [KWH, ZTP],
KWH: [BEI, ZTP],
WSD: [OVP, NPT, ZTP, VUI],
EUE: [JYO, VUI, BGR, OVP],
GHY: [USP],
VUI: [ZTP, JYO, OVP, USP],
BGR: [OVP, BEI],
NPT: [BGR, ZTP, GHY, VUI]}","Node BEI is connected to nodes USP, JYO, ZTP.
Node JYO is connected to node GHY.
Node ZTP is connected to node GHY.
Node LVG is connected to nodes SOS, ZTP, OVP, KWH.
Node SOS is connected to nodes OVP, KWH, WSD, EUE, ZTP, GHY.
Node OVP is connected to nodes KWH, ZTP.
Node KWH is connected to nodes BEI, ZTP.
Node WSD is connected to nodes OVP, NPT, ZTP, VUI.
Node EUE is connected to nodes JYO, VUI, BGR, OVP.
Node GHY is connected to node USP.
Node VUI is connected to nodes ZTP, JYO, OVP, USP.
Node BGR is connected to nodes OVP, BEI.
Node NPT is connected to nodes BGR, ZTP, GHY, VUI.","[LVG, ZTP, BEI, KWH, OVP, WSD, BGR, EUE, JYO, SOS, VUI, USP, GHY, NPT]",14,38,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[LVG, SOS, WSD, EUE, NPT, BGR, VUI, OVP, KWH, BEI, JYO, ZTP, GHY, USP]","Let's solve it step by step.
Nodes with 0 in-degree: [LVG].
Visit node LVG and remove it from the graph.
Nodes with 0 in-degree: [SOS].
Visit node SOS and remove it from the graph.
Nodes with 0 in-degree: [WSD, EUE].
Visit node WSD and remove it from the graph.
Nodes with 0 in-degree: [EUE, NPT].
Visit node EUE and remove it from the graph.
Nodes with 0 in-degree: [NPT].
Visit node NPT and remove it from the graph.
Nodes with 0 in-degree: [BGR, VUI].
Visit node BGR and remove it from the graph.
Nodes with 0 in-degree: [VUI].
Visit node VUI and remove it from the graph.
Nodes with 0 in-degree: [OVP].
Visit node OVP and remove it from the graph.
Nodes with 0 in-degree: [KWH].
Visit node KWH and remove it from the graph.
Nodes with 0 in-degree: [BEI].
Visit node BEI and remove it from the graph.
Nodes with 0 in-degree: [JYO, ZTP].
Visit node JYO and remove it from the graph.
Nodes with 0 in-degree: [ZTP].
Visit node ZTP and remove it from the graph.
Nodes with 0 in-degree: [GHY].
Visit node GHY and remove it from the graph.
Nodes with 0 in-degree: [USP].
Visit node USP and remove it from the graph.
So the result of topological sorting is ","('[[LVG, SOS, WSD, EUE, NPT, BGR, VUI, GHY, KWH, USP, BEI, OVP, JYO, ZTP], [LVG, OVP, JYO, SOS, BEI, KWH, VUI, NPT, GHY, ZTP, EUE, WSD, USP, BGR], [LVG, SOS, WSD, EUE, NPT, BGR, VUI, OVP, KWH, BEI, JYO, ZTP, GHY, USP], [LVG, SOS, WSD, EUE, JYO, ZTP, GHY, USP, NPT, BGR, VUI, OVP, KWH, BEI]]',)",2,272
topological_sort,"[(XMJ, TKM), (XMJ, KWD), (HXP, TKM), (HXP, YEJ), (HXP, SCC), (HXP, HCE), (YEJ, SCC), (YEJ, VPZ), (SCC, VPZ), (SCC, KWD), (SCC, XMJ), (HCE, KWD), (HCE, TKM), (HCE, YEJ)]","{XMJ: [TKM, KWD],
TKM: [],
KWD: [],
HXP: [TKM, YEJ, SCC, HCE],
YEJ: [SCC, VPZ],
SCC: [VPZ, KWD, XMJ],
HCE: [KWD, TKM, YEJ],
VPZ: []}","Node XMJ is connected to nodes TKM, KWD.
Node HXP is connected to nodes TKM, YEJ, SCC, HCE.
Node YEJ is connected to nodes SCC, VPZ.
Node SCC is connected to nodes VPZ, KWD, XMJ.
Node HCE is connected to nodes KWD, TKM, YEJ.","[KWD, HXP, VPZ, SCC, YEJ, TKM, HCE, XMJ]",8,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[HXP, HCE, YEJ, SCC, VPZ, XMJ, TKM, KWD]","Let's solve it step by step.
Nodes with 0 in-degree: [HXP].
Visit node HXP and remove it from the graph.
Nodes with 0 in-degree: [HCE].
Visit node HCE and remove it from the graph.
Nodes with 0 in-degree: [YEJ].
Visit node YEJ and remove it from the graph.
Nodes with 0 in-degree: [SCC].
Visit node SCC and remove it from the graph.
Nodes with 0 in-degree: [VPZ, XMJ].
Visit node VPZ and remove it from the graph.
Nodes with 0 in-degree: [XMJ].
Visit node XMJ and remove it from the graph.
Nodes with 0 in-degree: [TKM, KWD].
Visit node TKM and remove it from the graph.
Nodes with 0 in-degree: [KWD].
Visit node KWD and remove it from the graph.
So the result of topological sorting is ","('[[HXP, HCE, TKM, KWD, YEJ, SCC, VPZ, XMJ], [HXP, HCE, YEJ, SCC, VPZ, XMJ, TKM, KWD], [HXP, KWD, YEJ, SCC, HCE, VPZ, TKM, XMJ], [HXP, HCE, YEJ, SCC, XMJ, TKM, KWD, VPZ]]',)",1,273
topological_sort,"[(RYU, GYU), (VGN, GYU), (IIC, GYU), (IIC, RYU), (IIC, VGN), (FVJ, VGN), (FVJ, RYU), (QMK, OLT), (QMK, RYU), (OLT, YLH), (YLH, VGN), (YLH, FVJ), (URW, IIC), (ATO, YLH)]","{RYU: [GYU],
GYU: [],
VGN: [GYU],
IIC: [GYU, RYU, VGN],
FVJ: [VGN, RYU],
QMK: [OLT, RYU],
OLT: [YLH],
YLH: [VGN, FVJ],
URW: [IIC],
ATO: [YLH]}","Node RYU is connected to node GYU.
Node VGN is connected to node GYU.
Node IIC is connected to nodes GYU, RYU, VGN.
Node FVJ is connected to nodes VGN, RYU.
Node QMK is connected to nodes OLT, RYU.
Node OLT is connected to node YLH.
Node YLH is connected to nodes VGN, FVJ.
Node URW is connected to node IIC.
Node ATO is connected to node YLH.","[RYU, ATO, IIC, FVJ, URW, YLH, QMK, OLT, VGN, GYU]",10,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QMK, URW, ATO, OLT, IIC, YLH, FVJ, VGN, RYU, GYU]","Let's solve it step by step.
Nodes with 0 in-degree: [QMK, URW, ATO].
Visit node QMK and remove it from the graph.
Nodes with 0 in-degree: [URW, ATO, OLT].
Visit node URW and remove it from the graph.
Nodes with 0 in-degree: [ATO, OLT, IIC].
Visit node ATO and remove it from the graph.
Nodes with 0 in-degree: [OLT, IIC].
Visit node OLT and remove it from the graph.
Nodes with 0 in-degree: [IIC, YLH].
Visit node IIC and remove it from the graph.
Nodes with 0 in-degree: [YLH].
Visit node YLH and remove it from the graph.
Nodes with 0 in-degree: [FVJ].
Visit node FVJ and remove it from the graph.
Nodes with 0 in-degree: [VGN, RYU].
Visit node VGN and remove it from the graph.
Nodes with 0 in-degree: [RYU].
Visit node RYU and remove it from the graph.
Nodes with 0 in-degree: [GYU].
Visit node GYU and remove it from the graph.
So the result of topological sorting is ","('[[QMK, URW, ATO, OLT, IIC, GYU, FVJ, RYU, VGN, YLH], [QMK, RYU, FVJ, YLH, ATO, IIC, GYU, VGN, OLT, URW], [QMK, URW, ATO, OLT, IIC, YLH, FVJ, VGN, RYU, GYU], [QMK, URW, ATO, VGN, RYU, GYU, OLT, IIC, YLH, FVJ]]',)",2,274
topological_sort,"[(OHO, KLD), (OHO, VFN), (KLD, VFN), (AUF, PIL), (AUF, NOO), (PIL, OHO), (PIL, KLD), (PIL, NOO), (NOO, VFN), (NOO, KLD), (MFN, RRW), (MFN, EXZ), (RRW, EXZ), (RRW, PIL), (RRW, VFN), (RRW, AUF), (EXZ, PIL), (EXZ, AUF), (EXZ, NOO), (EVO, AUF), (EVO, PIL), (EVO, NOO)]","{OHO: [KLD, VFN],
KLD: [VFN],
VFN: [],
AUF: [PIL, NOO],
PIL: [OHO, KLD, NOO],
NOO: [VFN, KLD],
MFN: [RRW, EXZ],
RRW: [EXZ, PIL, VFN, AUF],
EXZ: [PIL, AUF, NOO],
EVO: [AUF, PIL, NOO]}","Node OHO is connected to nodes KLD, VFN.
Node KLD is connected to node VFN.
Node AUF is connected to nodes PIL, NOO.
Node PIL is connected to nodes OHO, KLD, NOO.
Node NOO is connected to nodes VFN, KLD.
Node MFN is connected to nodes RRW, EXZ.
Node RRW is connected to nodes EXZ, PIL, VFN, AUF.
Node EXZ is connected to nodes PIL, AUF, NOO.
Node EVO is connected to nodes AUF, PIL, NOO.","[AUF, KLD, PIL, EVO, EXZ, OHO, MFN, VFN, NOO, RRW]",10,22,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MFN, EVO, RRW, EXZ, AUF, PIL, OHO, NOO, KLD, VFN]","Let's solve it step by step.
Nodes with 0 in-degree: [MFN, EVO].
Visit node MFN and remove it from the graph.
Nodes with 0 in-degree: [EVO, RRW].
Visit node EVO and remove it from the graph.
Nodes with 0 in-degree: [RRW].
Visit node RRW and remove it from the graph.
Nodes with 0 in-degree: [EXZ].
Visit node EXZ and remove it from the graph.
Nodes with 0 in-degree: [AUF].
Visit node AUF and remove it from the graph.
Nodes with 0 in-degree: [PIL].
Visit node PIL and remove it from the graph.
Nodes with 0 in-degree: [OHO, NOO].
Visit node OHO and remove it from the graph.
Nodes with 0 in-degree: [NOO].
Visit node NOO and remove it from the graph.
Nodes with 0 in-degree: [KLD].
Visit node KLD and remove it from the graph.
Nodes with 0 in-degree: [VFN].
Visit node VFN and remove it from the graph.
So the result of topological sorting is ","('[[MFN, EVO, RRW, NOO, KLD, VFN, EXZ, AUF, PIL, OHO], [MFN, AUF, EXZ, EVO, VFN, RRW, OHO, PIL, KLD, NOO], [MFN, EVO, RRW, EXZ, AUF, OHO, NOO, KLD, VFN, PIL], [MFN, EVO, RRW, EXZ, AUF, PIL, OHO, NOO, KLD, VFN]]',)",3,275
topological_sort,"[(NTJ, XAL), (FTP, UKD), (FTP, CPD), (FTP, ZTH), (UKD, ZTH), (CPD, NTJ), (CPD, XWH), (CPD, XAL), (XWH, ZTH), (XWH, UKD), (ERC, NIA), (ERC, NTJ), (ERC, XAL), (NIA, UKD), (NIA, NTJ), (NIA, FTP), (NIA, ZTH), (NIA, CPD), (NIA, XWH)]","{NTJ: [XAL],
XAL: [],
FTP: [UKD, CPD, ZTH],
UKD: [ZTH],
CPD: [NTJ, XWH, XAL],
ZTH: [],
XWH: [ZTH, UKD],
ERC: [NIA, NTJ, XAL],
NIA: [UKD, NTJ, FTP, ZTH, CPD, XWH]}","Node NTJ is connected to node XAL.
Node FTP is connected to nodes UKD, CPD, ZTH.
Node UKD is connected to node ZTH.
Node CPD is connected to nodes NTJ, XWH, XAL.
Node XWH is connected to nodes ZTH, UKD.
Node ERC is connected to nodes NIA, NTJ, XAL.
Node NIA is connected to nodes UKD, NTJ, FTP, ZTH, CPD, XWH.","[XAL, NTJ, ZTH, ERC, FTP, XWH, CPD, UKD, NIA]",9,19,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ERC, NIA, FTP, CPD, NTJ, XWH, XAL, UKD, ZTH]","Let's solve it step by step.
Nodes with 0 in-degree: [ERC].
Visit node ERC and remove it from the graph.
Nodes with 0 in-degree: [NIA].
Visit node NIA and remove it from the graph.
Nodes with 0 in-degree: [FTP].
Visit node FTP and remove it from the graph.
Nodes with 0 in-degree: [CPD].
Visit node CPD and remove it from the graph.
Nodes with 0 in-degree: [NTJ, XWH].
Visit node NTJ and remove it from the graph.
Nodes with 0 in-degree: [XWH, XAL].
Visit node XWH and remove it from the graph.
Nodes with 0 in-degree: [XAL, UKD].
Visit node XAL and remove it from the graph.
Nodes with 0 in-degree: [UKD].
Visit node UKD and remove it from the graph.
Nodes with 0 in-degree: [ZTH].
Visit node ZTH and remove it from the graph.
So the result of topological sorting is ","('[[ERC, NIA, FTP, CPD, NTJ, UKD, XAL, ZTH, XWH], [ERC, CPD, XAL, UKD, FTP, NIA, ZTH, NTJ, XWH], [ERC, NIA, FTP, CPD, NTJ, XWH, XAL, UKD, ZTH], [ERC, NIA, FTP, XAL, UKD, ZTH, CPD, NTJ, XWH]]',)",2,276
topological_sort,"[(TRE, XZL), (TRE, UXU), (XZL, HVY), (XZL, GUZ), (XZL, UXU), (HVY, UXU), (FKW, XZL), (FKW, HVY), (ZIO, XZL), (ZIO, JFE), (ZIO, HVY), (JFE, FKW), (NRA, HVY), (NRA, XZL), (NRA, ZIO), (EUF, XZL), (KAN, UXU), (KAN, ZIO)]","{TRE: [XZL, UXU],
XZL: [HVY, GUZ, UXU],
UXU: [],
HVY: [UXU],
GUZ: [],
FKW: [XZL, HVY],
ZIO: [XZL, JFE, HVY],
JFE: [FKW],
NRA: [HVY, XZL, ZIO],
EUF: [XZL],
KAN: [UXU, ZIO]}","Node TRE is connected to nodes XZL, UXU.
Node XZL is connected to nodes HVY, GUZ, UXU.
Node HVY is connected to node UXU.
Node FKW is connected to nodes XZL, HVY.
Node ZIO is connected to nodes XZL, JFE, HVY.
Node JFE is connected to node FKW.
Node NRA is connected to nodes HVY, XZL, ZIO.
Node EUF is connected to node XZL.
Node KAN is connected to nodes UXU, ZIO.","[FKW, ZIO, TRE, KAN, EUF, XZL, JFE, GUZ, UXU, HVY, NRA]",11,18,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TRE, NRA, EUF, KAN, ZIO, JFE, FKW, XZL, HVY, GUZ, UXU]","Let's solve it step by step.
Nodes with 0 in-degree: [TRE, NRA, EUF, KAN].
Visit node TRE and remove it from the graph.
Nodes with 0 in-degree: [NRA, EUF, KAN].
Visit node NRA and remove it from the graph.
Nodes with 0 in-degree: [EUF, KAN].
Visit node EUF and remove it from the graph.
Nodes with 0 in-degree: [KAN].
Visit node KAN and remove it from the graph.
Nodes with 0 in-degree: [ZIO].
Visit node ZIO and remove it from the graph.
Nodes with 0 in-degree: [JFE].
Visit node JFE and remove it from the graph.
Nodes with 0 in-degree: [FKW].
Visit node FKW and remove it from the graph.
Nodes with 0 in-degree: [XZL].
Visit node XZL and remove it from the graph.
Nodes with 0 in-degree: [HVY, GUZ].
Visit node HVY and remove it from the graph.
Nodes with 0 in-degree: [GUZ, UXU].
Visit node GUZ and remove it from the graph.
Nodes with 0 in-degree: [UXU].
Visit node UXU and remove it from the graph.
So the result of topological sorting is ","('[[TRE, NRA, EUF, KAN, ZIO, JFE, FKW, XZL, HVY, GUZ, UXU], [TRE, NRA, EUF, KAN, ZIO, JFE, FKW, HVY, XZL, UXU, GUZ], [TRE, NRA, EUF, HVY, GUZ, UXU, KAN, ZIO, JFE, FKW, XZL], [TRE, FKW, HVY, KAN, XZL, UXU, NRA, ZIO, EUF, GUZ, JFE]]',)",0,277
topological_sort,"[(SGE, JPU), (SGE, TKZ), (SGE, JDG), (SGE, BDW), (JPU, FNZ), (JPU, AGM), (JPU, RJC), (TKZ, JDG), (TKZ, RJC), (TKZ, JPU), (JDG, FNZ), (JDG, AGM), (JDG, KRT), (JDG, KVP), (JDG, EWB), (BDW, KRT), (BDW, FNZ), (BDW, LKL), (BDW, RJC), (FNZ, RJC), (FNZ, EWB), (SFP, JPU), (SFP, JDG), (SFP, KRT), (SFP, BDW), (SFP, SGE), (KRT, JPU), (KRT, RJC), (KRT, AGM), (LKL, AGM), (LKL, RJC), (LKL, KVP), (LKL, FNZ), (LKL, QDR), (KVP, EWB), (KVP, KRT), (KVP, RJC), (QDR, KRT), (QDR, EWB), (QDR, JDG), (QDR, RJC)]","{SGE: [JPU, TKZ, JDG, BDW],
JPU: [FNZ, AGM, RJC],
TKZ: [JDG, RJC, JPU],
JDG: [FNZ, AGM, KRT, KVP, EWB],
BDW: [KRT, FNZ, LKL, RJC],
FNZ: [RJC, EWB],
AGM: [],
RJC: [],
SFP: [JPU, JDG, KRT, BDW, SGE],
KRT: [JPU, RJC, AGM],
LKL: [AGM, RJC, KVP, FNZ, QDR],
KVP: [EWB, KRT, RJC],
EWB: [],
QDR: [KRT, EWB, JDG, RJC]}","Node SGE is connected to nodes JPU, TKZ, JDG, BDW.
Node JPU is connected to nodes FNZ, AGM, RJC.
Node TKZ is connected to nodes JDG, RJC, JPU.
Node JDG is connected to nodes FNZ, AGM, KRT, KVP, EWB.
Node BDW is connected to nodes KRT, FNZ, LKL, RJC.
Node FNZ is connected to nodes RJC, EWB.
Node SFP is connected to nodes JPU, JDG, KRT, BDW, SGE.
Node KRT is connected to nodes JPU, RJC, AGM.
Node LKL is connected to nodes AGM, RJC, KVP, FNZ, QDR.
Node KVP is connected to nodes EWB, KRT, RJC.
Node QDR is connected to nodes KRT, EWB, JDG, RJC.","[AGM, FNZ, SFP, LKL, KRT, SGE, QDR, TKZ, JDG, KVP, EWB, JPU, BDW, RJC]",14,41,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SFP, SGE, TKZ, BDW, LKL, QDR, JDG, KVP, KRT, JPU, FNZ, AGM, RJC, EWB]","Let's solve it step by step.
Nodes with 0 in-degree: [SFP].
Visit node SFP and remove it from the graph.
Nodes with 0 in-degree: [SGE].
Visit node SGE and remove it from the graph.
Nodes with 0 in-degree: [TKZ, BDW].
Visit node TKZ and remove it from the graph.
Nodes with 0 in-degree: [BDW].
Visit node BDW and remove it from the graph.
Nodes with 0 in-degree: [LKL].
Visit node LKL and remove it from the graph.
Nodes with 0 in-degree: [QDR].
Visit node QDR and remove it from the graph.
Nodes with 0 in-degree: [JDG].
Visit node JDG and remove it from the graph.
Nodes with 0 in-degree: [KVP].
Visit node KVP and remove it from the graph.
Nodes with 0 in-degree: [KRT].
Visit node KRT and remove it from the graph.
Nodes with 0 in-degree: [JPU].
Visit node JPU and remove it from the graph.
Nodes with 0 in-degree: [FNZ, AGM].
Visit node FNZ and remove it from the graph.
Nodes with 0 in-degree: [AGM, RJC, EWB].
Visit node AGM and remove it from the graph.
Nodes with 0 in-degree: [RJC, EWB].
Visit node RJC and remove it from the graph.
Nodes with 0 in-degree: [EWB].
Visit node EWB and remove it from the graph.
So the result of topological sorting is ","('[[SFP, SGE, TKZ, BDW, LKL, QDR, JDG, KVP, KRT, JPU, FNZ, AGM, RJC, EWB], [SFP, SGE, TKZ, BDW, FNZ, AGM, RJC, EWB, LKL, QDR, JDG, KVP, KRT, JPU], [SFP, SGE, TKZ, BDW, LKL, QDR, JDG, KVP, JPU, FNZ, RJC, KRT, AGM, EWB], [SFP, TKZ, JPU, KRT, SGE, RJC, JDG, FNZ, BDW, KVP, QDR, LKL, EWB, AGM]]',)",0,278
topological_sort,"[(SNR, BYK), (TJY, NJR), (TJY, BYK), (NJR, SNR), (NJR, BYK), (GVD, SNR), (GVD, NJR), (GVD, PTT), (GVD, PMO), (PTT, TJY), (PTT, BXD), (PMO, PTT), (BXD, TJY), (BXD, NJR), (WQM, PTT)]","{SNR: [BYK],
BYK: [],
TJY: [NJR, BYK],
NJR: [SNR, BYK],
GVD: [SNR, NJR, PTT, PMO],
PTT: [TJY, BXD],
PMO: [PTT],
BXD: [TJY, NJR],
WQM: [PTT]}","Node SNR is connected to node BYK.
Node TJY is connected to nodes NJR, BYK.
Node NJR is connected to nodes SNR, BYK.
Node GVD is connected to nodes SNR, NJR, PTT, PMO.
Node PTT is connected to nodes TJY, BXD.
Node PMO is connected to node PTT.
Node BXD is connected to nodes TJY, NJR.
Node WQM is connected to node PTT.","[PMO, WQM, NJR, TJY, GVD, BXD, SNR, PTT, BYK]",9,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GVD, WQM, PMO, PTT, BXD, TJY, NJR, SNR, BYK]","Let's solve it step by step.
Nodes with 0 in-degree: [GVD, WQM].
Visit node GVD and remove it from the graph.
Nodes with 0 in-degree: [WQM, PMO].
Visit node WQM and remove it from the graph.
Nodes with 0 in-degree: [PMO].
Visit node PMO and remove it from the graph.
Nodes with 0 in-degree: [PTT].
Visit node PTT and remove it from the graph.
Nodes with 0 in-degree: [BXD].
Visit node BXD and remove it from the graph.
Nodes with 0 in-degree: [TJY].
Visit node TJY and remove it from the graph.
Nodes with 0 in-degree: [NJR].
Visit node NJR and remove it from the graph.
Nodes with 0 in-degree: [SNR].
Visit node SNR and remove it from the graph.
Nodes with 0 in-degree: [BYK].
Visit node BYK and remove it from the graph.
So the result of topological sorting is ","('[[GVD, WQM, PMO, PTT, BXD, TJY, NJR, SNR, BYK], [GVD, WQM, PMO, PTT, TJY, BXD, SNR, BYK, NJR], [GVD, WQM, PMO, NJR, SNR, BYK, PTT, BXD, TJY], [GVD, PMO, PTT, TJY, BXD, NJR, WQM, BYK, SNR]]',)",0,279
topological_sort,"[(TCE, TVP), (TCE, IKK), (KCU, TCE), (KCU, FRD), (KCU, TVP), (KCU, HSX), (KCU, RBR), (FRD, TVP), (FRD, TCE), (FRD, HSX), (HSX, IKK), (HSX, TCE), (RBR, FRD), (RBR, IKK), (RBR, HSX), (RBR, TVP), (GUC, HSX), (GUC, QUT), (GUC, TVP), (GUC, IKK), (QUT, KCU), (QUT, RBR), (QUT, FRD)]","{TCE: [TVP, IKK],
TVP: [],
IKK: [],
KCU: [TCE, FRD, TVP, HSX, RBR],
FRD: [TVP, TCE, HSX],
HSX: [IKK, TCE],
RBR: [FRD, IKK, HSX, TVP],
GUC: [HSX, QUT, TVP, IKK],
QUT: [KCU, RBR, FRD]}","Node TCE is connected to nodes TVP, IKK.
Node KCU is connected to nodes TCE, FRD, TVP, HSX, RBR.
Node FRD is connected to nodes TVP, TCE, HSX.
Node HSX is connected to nodes IKK, TCE.
Node RBR is connected to nodes FRD, IKK, HSX, TVP.
Node GUC is connected to nodes HSX, QUT, TVP, IKK.
Node QUT is connected to nodes KCU, RBR, FRD.","[RBR, TVP, KCU, GUC, QUT, HSX, TCE, IKK, FRD]",9,23,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GUC, QUT, KCU, RBR, FRD, HSX, TCE, TVP, IKK]","Let's solve it step by step.
Nodes with 0 in-degree: [GUC].
Visit node GUC and remove it from the graph.
Nodes with 0 in-degree: [QUT].
Visit node QUT and remove it from the graph.
Nodes with 0 in-degree: [KCU].
Visit node KCU and remove it from the graph.
Nodes with 0 in-degree: [RBR].
Visit node RBR and remove it from the graph.
Nodes with 0 in-degree: [FRD].
Visit node FRD and remove it from the graph.
Nodes with 0 in-degree: [HSX].
Visit node HSX and remove it from the graph.
Nodes with 0 in-degree: [TCE].
Visit node TCE and remove it from the graph.
Nodes with 0 in-degree: [TVP, IKK].
Visit node TVP and remove it from the graph.
Nodes with 0 in-degree: [IKK].
Visit node IKK and remove it from the graph.
So the result of topological sorting is ","('[[GUC, QUT, KCU, RBR, HSX, FRD, TCE, TVP, IKK], [GUC, QUT, KCU, RBR, FRD, HSX, TCE, TVP, IKK], [GUC, QUT, KCU, TCE, TVP, IKK, RBR, FRD, HSX], [GUC, QUT, KCU, RBR, IKK, TVP, TCE, FRD, HSX]]',)",1,280
topological_sort,"[(PBS, GJI), (PBS, YUS), (PBS, TYM), (PBS, KUO), (GJI, KUO), (GJI, ESB), (YUS, TYM), (YUS, RER), (YUS, DVQ), (TYM, PAI), (KUO, ESB), (KUO, PAI), (ESB, CYH), (ESB, TYM), (DVQ, HVX), (DVQ, RER), (DVQ, GJI), (DVQ, TYM), (HVX, ESB), (RER, TYM), (RER, HVX), (BXI, TYM), (BXI, PBS), (BXI, CYH), (BXI, ESB), (CZD, CYH), (CZD, GJI), (CZD, YUS), (CZD, PBS), (CZD, HVX), (YHD, YUS), (YHD, BXI), (YHD, PBS), (YHD, HVX), (YHD, KUO), (YHD, CYH)]","{PBS: [GJI, YUS, TYM, KUO],
GJI: [KUO, ESB],
YUS: [TYM, RER, DVQ],
TYM: [PAI],
KUO: [ESB, PAI],
ESB: [CYH, TYM],
DVQ: [HVX, RER, GJI, TYM],
HVX: [ESB],
RER: [TYM, HVX],
CYH: [],
BXI: [TYM, PBS, CYH, ESB],
PAI: [],
CZD: [CYH, GJI, YUS, PBS, HVX],
YHD: [YUS, BXI, PBS, HVX, KUO, CYH]}","Node PBS is connected to nodes GJI, YUS, TYM, KUO.
Node GJI is connected to nodes KUO, ESB.
Node YUS is connected to nodes TYM, RER, DVQ.
Node TYM is connected to node PAI.
Node KUO is connected to nodes ESB, PAI.
Node ESB is connected to nodes CYH, TYM.
Node DVQ is connected to nodes HVX, RER, GJI, TYM.
Node HVX is connected to node ESB.
Node RER is connected to nodes TYM, HVX.
Node BXI is connected to nodes TYM, PBS, CYH, ESB.
Node CZD is connected to nodes CYH, GJI, YUS, PBS, HVX.
Node YHD is connected to nodes YUS, BXI, PBS, HVX, KUO, CYH.","[TYM, KUO, ESB, GJI, DVQ, HVX, RER, PBS, YHD, CZD, YUS, PAI, CYH, BXI]",14,36,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[CZD, YHD, BXI, PBS, YUS, DVQ, RER, GJI, HVX, KUO, ESB, CYH, TYM, PAI]","Let's solve it step by step.
Nodes with 0 in-degree: [CZD, YHD].
Visit node CZD and remove it from the graph.
Nodes with 0 in-degree: [YHD].
Visit node YHD and remove it from the graph.
Nodes with 0 in-degree: [BXI].
Visit node BXI and remove it from the graph.
Nodes with 0 in-degree: [PBS].
Visit node PBS and remove it from the graph.
Nodes with 0 in-degree: [YUS].
Visit node YUS and remove it from the graph.
Nodes with 0 in-degree: [DVQ].
Visit node DVQ and remove it from the graph.
Nodes with 0 in-degree: [RER, GJI].
Visit node RER and remove it from the graph.
Nodes with 0 in-degree: [GJI, HVX].
Visit node GJI and remove it from the graph.
Nodes with 0 in-degree: [HVX, KUO].
Visit node HVX and remove it from the graph.
Nodes with 0 in-degree: [KUO].
Visit node KUO and remove it from the graph.
Nodes with 0 in-degree: [ESB].
Visit node ESB and remove it from the graph.
Nodes with 0 in-degree: [CYH, TYM].
Visit node CYH and remove it from the graph.
Nodes with 0 in-degree: [TYM].
Visit node TYM and remove it from the graph.
Nodes with 0 in-degree: [PAI].
Visit node PAI and remove it from the graph.
So the result of topological sorting is ","('[[CZD, YHD, BXI, PBS, YUS, DVQ, RER, GJI, HVX, KUO, ESB, CYH, TYM, PAI], [CZD, YHD, BXI, PBS, ESB, CYH, TYM, PAI, YUS, DVQ, RER, GJI, HVX, KUO], [CZD, PBS, RER, YHD, ESB, BXI, GJI, KUO, YUS, HVX, TYM, PAI, CYH, DVQ], [CZD, YHD, BXI, PBS, YUS, DVQ, RER, CYH, TYM, PAI, HVX, KUO, ESB, GJI]]',)",0,281
topological_sort,"[(PSP, VMS), (PSP, PVN), (PSP, JAK), (PSP, QIW), (PSP, RPU), (VMS, MFD), (VMS, PVN), (JAK, QIW), (QIW, PVN), (QIW, EAQ), (RPU, JAK), (MFD, YYL), (MFD, RPU), (MFD, JAK), (MFD, EAQ), (MCL, EAQ), (MCL, JAK), (MCL, PVN), (MCL, VMS), (MCL, VXR), (VXR, PSP), (YYL, RPU), (YYL, JAK)]","{PSP: [VMS, PVN, JAK, QIW, RPU],
VMS: [MFD, PVN],
PVN: [],
JAK: [QIW],
QIW: [PVN, EAQ],
RPU: [JAK],
MFD: [YYL, RPU, JAK, EAQ],
EAQ: [],
MCL: [EAQ, JAK, PVN, VMS, VXR],
VXR: [PSP],
YYL: [RPU, JAK]}","Node PSP is connected to nodes VMS, PVN, JAK, QIW, RPU.
Node VMS is connected to nodes MFD, PVN.
Node JAK is connected to node QIW.
Node QIW is connected to nodes PVN, EAQ.
Node RPU is connected to node JAK.
Node MFD is connected to nodes YYL, RPU, JAK, EAQ.
Node MCL is connected to nodes EAQ, JAK, PVN, VMS, VXR.
Node VXR is connected to node PSP.
Node YYL is connected to nodes RPU, JAK.","[YYL, EAQ, VXR, VMS, JAK, RPU, QIW, MFD, PVN, MCL, PSP]",11,23,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MCL, VXR, PSP, VMS, MFD, YYL, RPU, JAK, QIW, PVN, EAQ]","Let's solve it step by step.
Nodes with 0 in-degree: [MCL].
Visit node MCL and remove it from the graph.
Nodes with 0 in-degree: [VXR].
Visit node VXR and remove it from the graph.
Nodes with 0 in-degree: [PSP].
Visit node PSP and remove it from the graph.
Nodes with 0 in-degree: [VMS].
Visit node VMS and remove it from the graph.
Nodes with 0 in-degree: [MFD].
Visit node MFD and remove it from the graph.
Nodes with 0 in-degree: [YYL].
Visit node YYL and remove it from the graph.
Nodes with 0 in-degree: [RPU].
Visit node RPU and remove it from the graph.
Nodes with 0 in-degree: [JAK].
Visit node JAK and remove it from the graph.
Nodes with 0 in-degree: [QIW].
Visit node QIW and remove it from the graph.
Nodes with 0 in-degree: [PVN, EAQ].
Visit node PVN and remove it from the graph.
Nodes with 0 in-degree: [EAQ].
Visit node EAQ and remove it from the graph.
So the result of topological sorting is ","('[[MCL, VXR, PSP, VMS, MFD, YYL, RPU, JAK, QIW, PVN, EAQ], [MCL, PSP, VMS, YYL, PVN, QIW, EAQ, MFD, VXR, RPU, JAK], [MCL, VXR, PSP, VMS, MFD, RPU, JAK, PVN, EAQ, QIW, YYL], [MCL, VXR, PSP, QIW, PVN, EAQ, VMS, MFD, YYL, RPU, JAK]]',)",0,282
topological_sort,"[(WEV, KST), (WEV, KON), (WEV, JKA), (WEV, YIP), (KST, VCE), (JKA, VCE), (VCE, YIP), (FTN, JKA), (FTN, YIP), (LKD, JKA), (LKD, WEV), (TDG, LKD), (TDG, YIP), (TDG, VCE)]","{WEV: [KST, KON, JKA, YIP],
KST: [VCE],
KON: [],
JKA: [VCE],
YIP: [],
VCE: [YIP],
FTN: [JKA, YIP],
LKD: [JKA, WEV],
TDG: [LKD, YIP, VCE]}","Node WEV is connected to nodes KST, KON, JKA, YIP.
Node KST is connected to node VCE.
Node JKA is connected to node VCE.
Node VCE is connected to node YIP.
Node FTN is connected to nodes JKA, YIP.
Node LKD is connected to nodes JKA, WEV.
Node TDG is connected to nodes LKD, YIP, VCE.","[YIP, WEV, VCE, LKD, KST, FTN, TDG, JKA, KON]",9,14,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[FTN, TDG, LKD, WEV, KST, KON, JKA, VCE, YIP]","Let's solve it step by step.
Nodes with 0 in-degree: [FTN, TDG].
Visit node FTN and remove it from the graph.
Nodes with 0 in-degree: [TDG].
Visit node TDG and remove it from the graph.
Nodes with 0 in-degree: [LKD].
Visit node LKD and remove it from the graph.
Nodes with 0 in-degree: [WEV].
Visit node WEV and remove it from the graph.
Nodes with 0 in-degree: [KST, KON, JKA].
Visit node KST and remove it from the graph.
Nodes with 0 in-degree: [KON, JKA].
Visit node KON and remove it from the graph.
Nodes with 0 in-degree: [JKA].
Visit node JKA and remove it from the graph.
Nodes with 0 in-degree: [VCE].
Visit node VCE and remove it from the graph.
Nodes with 0 in-degree: [YIP].
Visit node YIP and remove it from the graph.
So the result of topological sorting is ","('[[FTN, TDG, LKD, WEV, KST, KON, JKA, VCE, YIP], [FTN, TDG, LKD, JKA, VCE, YIP, WEV, KST, KON], [FTN, WEV, YIP, KST, TDG, JKA, LKD, VCE, KON], [FTN, TDG, LKD, WEV, KON, JKA, YIP, VCE, KST]]',)",0,283
topological_sort,"[(QVB, LPR), (FTV, GXD), (FTV, DMW), (FTV, VAT), (VAT, DMW), (XTG, QVB), (ORV, VAT), (ORV, QVB), (ORV, LJG), (ORV, GXD), (ORV, LPR), (ORV, DQM), (DQM, TLM), (KZU, TLM), (KZU, FTV), (KZU, DRX), (TLM, LJG), (TLM, LPR), (TLM, DRX), (DRX, FTV), (MKL, TLM)]","{QVB: [LPR],
LPR: [],
FTV: [GXD, DMW, VAT],
GXD: [],
DMW: [],
VAT: [DMW],
XTG: [QVB],
ORV: [VAT, QVB, LJG, GXD, LPR, DQM],
LJG: [],
DQM: [TLM],
KZU: [TLM, FTV, DRX],
TLM: [LJG, LPR, DRX],
DRX: [FTV],
MKL: [TLM]}","Node QVB is connected to node LPR.
Node FTV is connected to nodes GXD, DMW, VAT.
Node VAT is connected to node DMW.
Node XTG is connected to node QVB.
Node ORV is connected to nodes VAT, QVB, LJG, GXD, LPR, DQM.
Node DQM is connected to node TLM.
Node KZU is connected to nodes TLM, FTV, DRX.
Node TLM is connected to nodes LJG, LPR, DRX.
Node DRX is connected to node FTV.
Node MKL is connected to node TLM.","[LPR, FTV, TLM, KZU, MKL, VAT, DRX, DMW, XTG, GXD, QVB, ORV, LJG, DQM]",14,21,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[XTG, ORV, KZU, MKL, QVB, DQM, TLM, LJG, LPR, DRX, FTV, GXD, VAT, DMW]","Let's solve it step by step.
Nodes with 0 in-degree: [XTG, ORV, KZU, MKL].
Visit node XTG and remove it from the graph.
Nodes with 0 in-degree: [ORV, KZU, MKL].
Visit node ORV and remove it from the graph.
Nodes with 0 in-degree: [KZU, MKL, QVB, DQM].
Visit node KZU and remove it from the graph.
Nodes with 0 in-degree: [MKL, QVB, DQM].
Visit node MKL and remove it from the graph.
Nodes with 0 in-degree: [QVB, DQM].
Visit node QVB and remove it from the graph.
Nodes with 0 in-degree: [DQM].
Visit node DQM and remove it from the graph.
Nodes with 0 in-degree: [TLM].
Visit node TLM and remove it from the graph.
Nodes with 0 in-degree: [LJG, LPR, DRX].
Visit node LJG and remove it from the graph.
Nodes with 0 in-degree: [LPR, DRX].
Visit node LPR and remove it from the graph.
Nodes with 0 in-degree: [DRX].
Visit node DRX and remove it from the graph.
Nodes with 0 in-degree: [FTV].
Visit node FTV and remove it from the graph.
Nodes with 0 in-degree: [GXD, VAT].
Visit node GXD and remove it from the graph.
Nodes with 0 in-degree: [VAT].
Visit node VAT and remove it from the graph.
Nodes with 0 in-degree: [DMW].
Visit node DMW and remove it from the graph.
So the result of topological sorting is ","('[[XTG, ORV, KZU, MKL, QVB, DQM, TLM, LJG, LPR, DRX, FTV, GXD, VAT, DMW], [XTG, ORV, FTV, LJG, QVB, DQM, TLM, DRX, MKL, KZU, LPR, DMW, GXD, VAT], [XTG, ORV, KZU, MKL, FTV, GXD, VAT, DMW, QVB, DQM, TLM, LJG, LPR, DRX], [XTG, ORV, KZU, MKL, QVB, DQM, TLM, FTV, LJG, DMW, VAT, LPR, DRX, GXD]]',)",0,284
topological_sort,"[(YOW, HUX), (HUX, ZSU), (ZSU, FCH), (ZSU, RHO), (HEK, BFC), (HEK, XLR), (HEK, IJU), (HEK, AUI), (HEK, YOW), (XLR, BNB), (IJU, YOW), (IJU, BNB), (IJU, FCH), (IJU, BFC), (AUI, YOW), (AUI, XLR), (FCH, BFC), (BNB, HUX), (TYP, IJU), (TYP, YOW), (TYP, HUX), (LUH, FCH), (LUH, IJU), (AEC, HEK), (AEC, ZSU), (AEC, HUX)]","{YOW: [HUX],
HUX: [ZSU],
ZSU: [FCH, RHO],
HEK: [BFC, XLR, IJU, AUI, YOW],
BFC: [],
XLR: [BNB],
IJU: [YOW, BNB, FCH, BFC],
AUI: [YOW, XLR],
FCH: [BFC],
BNB: [HUX],
TYP: [IJU, YOW, HUX],
RHO: [],
LUH: [FCH, IJU],
AEC: [HEK, ZSU, HUX]}","Node YOW is connected to node HUX.
Node HUX is connected to node ZSU.
Node ZSU is connected to nodes FCH, RHO.
Node HEK is connected to nodes BFC, XLR, IJU, AUI, YOW.
Node XLR is connected to node BNB.
Node IJU is connected to nodes YOW, BNB, FCH, BFC.
Node AUI is connected to nodes YOW, XLR.
Node FCH is connected to node BFC.
Node BNB is connected to node HUX.
Node TYP is connected to nodes IJU, YOW, HUX.
Node LUH is connected to nodes FCH, IJU.
Node AEC is connected to nodes HEK, ZSU, HUX.","[BFC, LUH, TYP, HEK, RHO, AEC, ZSU, YOW, AUI, XLR, HUX, BNB, FCH, IJU]",14,26,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[TYP, LUH, AEC, HEK, IJU, AUI, YOW, XLR, BNB, HUX, ZSU, FCH, RHO, BFC]","Let's solve it step by step.
Nodes with 0 in-degree: [TYP, LUH, AEC].
Visit node TYP and remove it from the graph.
Nodes with 0 in-degree: [LUH, AEC].
Visit node LUH and remove it from the graph.
Nodes with 0 in-degree: [AEC].
Visit node AEC and remove it from the graph.
Nodes with 0 in-degree: [HEK].
Visit node HEK and remove it from the graph.
Nodes with 0 in-degree: [IJU, AUI].
Visit node IJU and remove it from the graph.
Nodes with 0 in-degree: [AUI].
Visit node AUI and remove it from the graph.
Nodes with 0 in-degree: [YOW, XLR].
Visit node YOW and remove it from the graph.
Nodes with 0 in-degree: [XLR].
Visit node XLR and remove it from the graph.
Nodes with 0 in-degree: [BNB].
Visit node BNB and remove it from the graph.
Nodes with 0 in-degree: [HUX].
Visit node HUX and remove it from the graph.
Nodes with 0 in-degree: [ZSU].
Visit node ZSU and remove it from the graph.
Nodes with 0 in-degree: [FCH, RHO].
Visit node FCH and remove it from the graph.
Nodes with 0 in-degree: [RHO, BFC].
Visit node RHO and remove it from the graph.
Nodes with 0 in-degree: [BFC].
Visit node BFC and remove it from the graph.
So the result of topological sorting is ","('[[TYP, BFC, YOW, RHO, HUX, BNB, XLR, HEK, AEC, AUI, LUH, FCH, IJU, ZSU], [TYP, LUH, AEC, HEK, IJU, AUI, YOW, XLR, HUX, ZSU, RHO, BNB, FCH, BFC], [TYP, LUH, AEC, HEK, IJU, AUI, YOW, XLR, BNB, HUX, ZSU, FCH, RHO, BFC], [TYP, LUH, AEC, HEK, ZSU, FCH, RHO, BFC, IJU, AUI, YOW, XLR, BNB, HUX]]',)",2,285
topological_sort,"[(FZL, RFM), (FZL, TSN), (RFM, TSN), (DCB, XIG), (DCB, ASY), (DCB, TSN), (DCB, OTG), (XIG, FZL), (ASY, RFM), (ASY, OTG), (OTG, XIG), (OTG, TSN), (NWN, RFM), (NWN, DCB), (NWN, FZL)]","{FZL: [RFM, TSN],
RFM: [TSN],
TSN: [],
DCB: [XIG, ASY, TSN, OTG],
XIG: [FZL],
ASY: [RFM, OTG],
OTG: [XIG, TSN],
NWN: [RFM, DCB, FZL]}","Node FZL is connected to nodes RFM, TSN.
Node RFM is connected to node TSN.
Node DCB is connected to nodes XIG, ASY, TSN, OTG.
Node XIG is connected to node FZL.
Node ASY is connected to nodes RFM, OTG.
Node OTG is connected to nodes XIG, TSN.
Node NWN is connected to nodes RFM, DCB, FZL.","[ASY, XIG, DCB, FZL, NWN, RFM, OTG, TSN]",8,15,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[NWN, DCB, ASY, OTG, XIG, FZL, RFM, TSN]","Let's solve it step by step.
Nodes with 0 in-degree: [NWN].
Visit node NWN and remove it from the graph.
Nodes with 0 in-degree: [DCB].
Visit node DCB and remove it from the graph.
Nodes with 0 in-degree: [ASY].
Visit node ASY and remove it from the graph.
Nodes with 0 in-degree: [OTG].
Visit node OTG and remove it from the graph.
Nodes with 0 in-degree: [XIG].
Visit node XIG and remove it from the graph.
Nodes with 0 in-degree: [FZL].
Visit node FZL and remove it from the graph.
Nodes with 0 in-degree: [RFM].
Visit node RFM and remove it from the graph.
Nodes with 0 in-degree: [TSN].
Visit node TSN and remove it from the graph.
So the result of topological sorting is ","('[[NWN, DCB, ASY, OTG, XIG, FZL, RFM, TSN], [NWN, DCB, ASY, OTG, TSN, RFM, FZL, XIG], [NWN, DCB, RFM, TSN, ASY, OTG, XIG, FZL], [NWN, TSN, OTG, RFM, ASY, DCB, FZL, XIG]]',)",0,286
topological_sort,"[(FXT, AQA), (FXT, OLC), (FXT, LKQ), (FXT, GMI), (FXT, DZR), (AQA, OLC), (AQA, MFE), (AQA, DZR), (LKQ, OLC), (GMI, XBF), (GMI, MFE), (GMI, LKQ), (DZR, XBF), (DZR, GMI), (MFE, LKQ), (QYQ, BQA), (QYQ, OLC), (QYQ, XBF), (QYQ, AQA), (QYQ, FXT), (QYQ, MUQ), (BQA, MFE), (BQA, DZR), (XBF, MUQ), (MUQ, OLC), (JAB, XBF), (JAB, FXT), (JAB, MFE)]","{FXT: [AQA, OLC, LKQ, GMI, DZR],
AQA: [OLC, MFE, DZR],
OLC: [],
LKQ: [OLC],
GMI: [XBF, MFE, LKQ],
DZR: [XBF, GMI],
MFE: [LKQ],
QYQ: [BQA, OLC, XBF, AQA, FXT, MUQ],
BQA: [MFE, DZR],
XBF: [MUQ],
MUQ: [OLC],
JAB: [XBF, FXT, MFE]}","Node FXT is connected to nodes AQA, OLC, LKQ, GMI, DZR.
Node AQA is connected to nodes OLC, MFE, DZR.
Node LKQ is connected to node OLC.
Node GMI is connected to nodes XBF, MFE, LKQ.
Node DZR is connected to nodes XBF, GMI.
Node MFE is connected to node LKQ.
Node QYQ is connected to nodes BQA, OLC, XBF, AQA, FXT, MUQ.
Node BQA is connected to nodes MFE, DZR.
Node XBF is connected to node MUQ.
Node MUQ is connected to node OLC.
Node JAB is connected to nodes XBF, FXT, MFE.","[QYQ, XBF, MUQ, LKQ, DZR, GMI, BQA, JAB, MFE, FXT, OLC, AQA]",12,28,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[QYQ, JAB, BQA, FXT, AQA, DZR, GMI, XBF, MFE, MUQ, LKQ, OLC]","Let's solve it step by step.
Nodes with 0 in-degree: [QYQ, JAB].
Visit node QYQ and remove it from the graph.
Nodes with 0 in-degree: [JAB, BQA].
Visit node JAB and remove it from the graph.
Nodes with 0 in-degree: [BQA, FXT].
Visit node BQA and remove it from the graph.
Nodes with 0 in-degree: [FXT].
Visit node FXT and remove it from the graph.
Nodes with 0 in-degree: [AQA].
Visit node AQA and remove it from the graph.
Nodes with 0 in-degree: [DZR].
Visit node DZR and remove it from the graph.
Nodes with 0 in-degree: [GMI].
Visit node GMI and remove it from the graph.
Nodes with 0 in-degree: [XBF, MFE].
Visit node XBF and remove it from the graph.
Nodes with 0 in-degree: [MFE, MUQ].
Visit node MFE and remove it from the graph.
Nodes with 0 in-degree: [MUQ, LKQ].
Visit node MUQ and remove it from the graph.
Nodes with 0 in-degree: [LKQ].
Visit node LKQ and remove it from the graph.
Nodes with 0 in-degree: [OLC].
Visit node OLC and remove it from the graph.
So the result of topological sorting is ","('[[QYQ, OLC, XBF, AQA, FXT, LKQ, MUQ, JAB, DZR, BQA, GMI, MFE], [QYQ, JAB, BQA, FXT, MFE, MUQ, LKQ, OLC, AQA, DZR, GMI, XBF], [QYQ, JAB, BQA, FXT, AQA, DZR, GMI, XBF, MFE, MUQ, LKQ, OLC], [QYQ, JAB, BQA, FXT, AQA, DZR, LKQ, XBF, MFE, GMI, OLC, MUQ]]',)",2,287
topological_sort,"[(VEI, BCU), (VEI, TQD), (VEI, ECZ), (VEI, SRT), (VEI, AXM), (VEI, CCI), (VEI, RMO), (VEI, SOO), (BCU, TLL), (BCU, CCI), (TQD, WAU), (TQD, SOO), (TQD, SRT), (TQD, CCI), (TQD, ECZ), (ECZ, CCI), (ECZ, WAU), (AXM, TLL), (AXM, SRT), (CCI, TLL), (CCI, SOO), (RMO, ECZ), (RMO, SOO), (RMO, TLL), (SOO, LDX), (SOO, WAU), (SOO, TLL), (SOO, SRT), (TLL, LDX), (TLL, SRT), (WAU, AXM), (WAU, LDX), (VPP, SOO), (VPP, BCU)]","{VEI: [BCU, TQD, ECZ, SRT, AXM, CCI, RMO, SOO],
BCU: [TLL, CCI],
TQD: [WAU, SOO, SRT, CCI, ECZ],
ECZ: [CCI, WAU],
SRT: [],
AXM: [TLL, SRT],
CCI: [TLL, SOO],
RMO: [ECZ, SOO, TLL],
SOO: [LDX, WAU, TLL, SRT],
TLL: [LDX, SRT],
WAU: [AXM, LDX],
LDX: [],
VPP: [SOO, BCU]}","Node VEI is connected to nodes BCU, TQD, ECZ, SRT, AXM, CCI, RMO, SOO.
Node BCU is connected to nodes TLL, CCI.
Node TQD is connected to nodes WAU, SOO, SRT, CCI, ECZ.
Node ECZ is connected to nodes CCI, WAU.
Node AXM is connected to nodes TLL, SRT.
Node CCI is connected to nodes TLL, SOO.
Node RMO is connected to nodes ECZ, SOO, TLL.
Node SOO is connected to nodes LDX, WAU, TLL, SRT.
Node TLL is connected to nodes LDX, SRT.
Node WAU is connected to nodes AXM, LDX.
Node VPP is connected to nodes SOO, BCU.","[TLL, CCI, ECZ, SRT, VEI, RMO, SOO, VPP, LDX, BCU, WAU, TQD, AXM]",13,34,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[VEI, VPP, TQD, RMO, BCU, ECZ, CCI, SOO, WAU, AXM, TLL, LDX, SRT]","Let's solve it step by step.
Nodes with 0 in-degree: [VEI, VPP].
Visit node VEI and remove it from the graph.
Nodes with 0 in-degree: [VPP, TQD, RMO].
Visit node VPP and remove it from the graph.
Nodes with 0 in-degree: [TQD, RMO, BCU].
Visit node TQD and remove it from the graph.
Nodes with 0 in-degree: [RMO, BCU].
Visit node RMO and remove it from the graph.
Nodes with 0 in-degree: [BCU, ECZ].
Visit node BCU and remove it from the graph.
Nodes with 0 in-degree: [ECZ].
Visit node ECZ and remove it from the graph.
Nodes with 0 in-degree: [CCI].
Visit node CCI and remove it from the graph.
Nodes with 0 in-degree: [SOO].
Visit node SOO and remove it from the graph.
Nodes with 0 in-degree: [WAU].
Visit node WAU and remove it from the graph.
Nodes with 0 in-degree: [AXM].
Visit node AXM and remove it from the graph.
Nodes with 0 in-degree: [TLL].
Visit node TLL and remove it from the graph.
Nodes with 0 in-degree: [LDX, SRT].
Visit node LDX and remove it from the graph.
Nodes with 0 in-degree: [SRT].
Visit node SRT and remove it from the graph.
So the result of topological sorting is ","('[[VEI, WAU, VPP, LDX, CCI, SOO, TLL, ECZ, TQD, RMO, SRT, AXM, BCU], [VEI, VPP, TQD, RMO, AXM, TLL, LDX, SRT, BCU, ECZ, CCI, SOO, WAU], [VEI, VPP, TQD, RMO, BCU, ECZ, CCI, SOO, WAU, AXM, TLL, LDX, SRT], [VEI, VPP, TQD, RMO, BCU, ECZ, CCI, TLL, AXM, LDX, SRT, WAU, SOO]]',)",2,288
topological_sort,"[(BSL, IFN), (BSL, AHX), (BSL, JUW), (BSL, PCX), (PCX, IFN), (PCX, JUW), (LYN, PCX), (LYN, BSL), (CVQ, BSL), (CVQ, AHX), (CVQ, LYN), (YFV, JUW), (DRV, CVQ)]","{BSL: [IFN, AHX, JUW, PCX],
IFN: [],
AHX: [],
JUW: [],
PCX: [IFN, JUW],
LYN: [PCX, BSL],
CVQ: [BSL, AHX, LYN],
YFV: [JUW],
DRV: [CVQ]}","Node BSL is connected to nodes IFN, AHX, JUW, PCX.
Node PCX is connected to nodes IFN, JUW.
Node LYN is connected to nodes PCX, BSL.
Node CVQ is connected to nodes BSL, AHX, LYN.
Node YFV is connected to node JUW.
Node DRV is connected to node CVQ.","[DRV, IFN, PCX, CVQ, LYN, AHX, JUW, BSL, YFV]",9,13,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[YFV, DRV, CVQ, LYN, BSL, AHX, PCX, IFN, JUW]","Let's solve it step by step.
Nodes with 0 in-degree: [YFV, DRV].
Visit node YFV and remove it from the graph.
Nodes with 0 in-degree: [DRV].
Visit node DRV and remove it from the graph.
Nodes with 0 in-degree: [CVQ].
Visit node CVQ and remove it from the graph.
Nodes with 0 in-degree: [LYN].
Visit node LYN and remove it from the graph.
Nodes with 0 in-degree: [BSL].
Visit node BSL and remove it from the graph.
Nodes with 0 in-degree: [AHX, PCX].
Visit node AHX and remove it from the graph.
Nodes with 0 in-degree: [PCX].
Visit node PCX and remove it from the graph.
Nodes with 0 in-degree: [IFN, JUW].
Visit node IFN and remove it from the graph.
Nodes with 0 in-degree: [JUW].
Visit node JUW and remove it from the graph.
So the result of topological sorting is ","('[[YFV, LYN, IFN, CVQ, AHX, JUW, DRV, BSL, PCX], [YFV, DRV, CVQ, LYN, BSL, AHX, PCX, IFN, JUW], [YFV, DRV, CVQ, LYN, BSL, PCX, AHX, IFN, JUW], [YFV, DRV, CVQ, PCX, IFN, JUW, LYN, BSL, AHX]]',)",1,289
topological_sort,"[(SZU, DPT), (SZU, AVZ), (SZU, DXL), (SZU, HIX), (SZU, TUX), (SZU, AND), (SZU, EAL), (SZU, DUX), (SZU, YUM), (DPT, AVZ), (DXL, AND), (DXL, DUX), (HIX, AND), (HIX, NNH), (HIX, DPT), (HIX, AVZ), (HIX, DXL), (TUX, AND), (TUX, EAL), (TUX, HIX), (TUX, GGR), (TUX, DUX), (TUX, QVL), (TUX, AVZ), (TUX, NNH), (EAL, NNH), (EAL, HIX), (EAL, AND), (EAL, YUM), (DUX, AVZ), (DUX, DPT), (DUX, GGR), (YUM, DUX), (YUM, HIX), (YUM, AND), (YUM, DPT), (GGR, DPT), (QVL, NNH), (QVL, DPT), (QVL, PUE), (QVL, ZEY), (QVL, HIX), (NNH, AVZ), (NNH, DXL), (PUE, EAL), (PUE, GGR), (PUE, NNH), (PUE, DPT), (PUE, AND), (PUE, AVZ), (ZEY, DPT), (ZEY, NNH), (ZEY, DXL), (ZEY, DUX)]","{SZU: [DPT, AVZ, DXL, HIX, TUX, AND, EAL, DUX, YUM],
DPT: [AVZ],
AVZ: [],
DXL: [AND, DUX],
HIX: [AND, NNH, DPT, AVZ, DXL],
TUX: [AND, EAL, HIX, GGR, DUX, QVL, AVZ, NNH],
AND: [],
EAL: [NNH, HIX, AND, YUM],
DUX: [AVZ, DPT, GGR],
YUM: [DUX, HIX, AND, DPT],
GGR: [DPT],
QVL: [NNH, DPT, PUE, ZEY, HIX],
NNH: [AVZ, DXL],
PUE: [EAL, GGR, NNH, DPT, AND, AVZ],
ZEY: [DPT, NNH, DXL, DUX]}","Node SZU is connected to nodes DPT, AVZ, DXL, HIX, TUX, AND, EAL, DUX, YUM.
Node DPT is connected to node AVZ.
Node DXL is connected to nodes AND, DUX.
Node HIX is connected to nodes AND, NNH, DPT, AVZ, DXL.
Node TUX is connected to nodes AND, EAL, HIX, GGR, DUX, QVL, AVZ, NNH.
Node EAL is connected to nodes NNH, HIX, AND, YUM.
Node DUX is connected to nodes AVZ, DPT, GGR.
Node YUM is connected to nodes DUX, HIX, AND, DPT.
Node GGR is connected to node DPT.
Node QVL is connected to nodes NNH, DPT, PUE, ZEY, HIX.
Node NNH is connected to nodes AVZ, DXL.
Node PUE is connected to nodes EAL, GGR, NNH, DPT, AND, AVZ.
Node ZEY is connected to nodes DPT, NNH, DXL, DUX.","[NNH, DUX, AVZ, QVL, DPT, SZU, TUX, YUM, HIX, PUE, GGR, ZEY, EAL, DXL, AND]",15,54,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[SZU, TUX, QVL, PUE, ZEY, EAL, YUM, HIX, NNH, DXL, AND, DUX, GGR, DPT, AVZ]","Let's solve it step by step.
Nodes with 0 in-degree: [SZU].
Visit node SZU and remove it from the graph.
Nodes with 0 in-degree: [TUX].
Visit node TUX and remove it from the graph.
Nodes with 0 in-degree: [QVL].
Visit node QVL and remove it from the graph.
Nodes with 0 in-degree: [PUE, ZEY].
Visit node PUE and remove it from the graph.
Nodes with 0 in-degree: [ZEY, EAL].
Visit node ZEY and remove it from the graph.
Nodes with 0 in-degree: [EAL].
Visit node EAL and remove it from the graph.
Nodes with 0 in-degree: [YUM].
Visit node YUM and remove it from the graph.
Nodes with 0 in-degree: [HIX].
Visit node HIX and remove it from the graph.
Nodes with 0 in-degree: [NNH].
Visit node NNH and remove it from the graph.
Nodes with 0 in-degree: [DXL].
Visit node DXL and remove it from the graph.
Nodes with 0 in-degree: [AND, DUX].
Visit node AND and remove it from the graph.
Nodes with 0 in-degree: [DUX].
Visit node DUX and remove it from the graph.
Nodes with 0 in-degree: [GGR].
Visit node GGR and remove it from the graph.
Nodes with 0 in-degree: [DPT].
Visit node DPT and remove it from the graph.
Nodes with 0 in-degree: [AVZ].
Visit node AVZ and remove it from the graph.
So the result of topological sorting is ","('[[SZU, TUX, QVL, PUE, ZEY, AND, DUX, GGR, DPT, AVZ, EAL, YUM, HIX, NNH, DXL], [SZU, TUX, QVL, PUE, ZEY, EAL, YUM, HIX, NNH, DXL, AND, DUX, GGR, DPT, AVZ], [SZU, TUX, QVL, PUE, ZEY, EAL, YUM, NNH, DPT, AVZ, DXL, AND, GGR, DUX, HIX], [SZU, NNH, AVZ, YUM, DXL, PUE, EAL, DUX, ZEY, TUX, QVL, HIX, DPT, AND, GGR]]',)",1,290
topological_sort,"[(GTO, CXW), (GTO, UXO), (GTO, WQN), (GTO, OSJ), (GTO, QPN), (GTO, OHB), (CXW, OHB), (CXW, YVX), (UXO, YFM), (WQN, LYM), (WQN, CXW), (QPN, WQN), (QPN, LYM), (QPN, YVX), (QPN, OSJ), (OHB, YVX), (OHB, OSJ), (OHB, IIA), (VHC, OZJ), (VHC, QPN), (VHC, OHB), (VHC, YFM), (VHC, GTO), (OZJ, QPN), (OZJ, OHB), (OZJ, AMB), (OZJ, CXW), (OZJ, LYM), (OZJ, YVX), (YFM, LYM), (YFM, IIA), (YFM, AMB), (YFM, OSJ), (AMB, QPN), (LYM, OSJ), (LYM, YVX), (ZBQ, OHB), (ZBQ, VHC)]","{GTO: [CXW, UXO, WQN, OSJ, QPN, OHB],
CXW: [OHB, YVX],
UXO: [YFM],
WQN: [LYM, CXW],
OSJ: [],
QPN: [WQN, LYM, YVX, OSJ],
OHB: [YVX, OSJ, IIA],
YVX: [],
VHC: [OZJ, QPN, OHB, YFM, GTO],
OZJ: [QPN, OHB, AMB, CXW, LYM, YVX],
YFM: [LYM, IIA, AMB, OSJ],
AMB: [QPN],
LYM: [OSJ, YVX],
IIA: [],
ZBQ: [OHB, VHC]}","Node GTO is connected to nodes CXW, UXO, WQN, OSJ, QPN, OHB.
Node CXW is connected to nodes OHB, YVX.
Node UXO is connected to node YFM.
Node WQN is connected to nodes LYM, CXW.
Node QPN is connected to nodes WQN, LYM, YVX, OSJ.
Node OHB is connected to nodes YVX, OSJ, IIA.
Node VHC is connected to nodes OZJ, QPN, OHB, YFM, GTO.
Node OZJ is connected to nodes QPN, OHB, AMB, CXW, LYM, YVX.
Node YFM is connected to nodes LYM, IIA, AMB, OSJ.
Node AMB is connected to node QPN.
Node LYM is connected to nodes OSJ, YVX.
Node ZBQ is connected to nodes OHB, VHC.","[ZBQ, QPN, OHB, CXW, UXO, OSJ, VHC, OZJ, WQN, LYM, YFM, AMB, GTO, IIA, YVX]",15,38,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[ZBQ, VHC, OZJ, GTO, UXO, YFM, AMB, QPN, WQN, LYM, CXW, OHB, YVX, OSJ, IIA]","Let's solve it step by step.
Nodes with 0 in-degree: [ZBQ].
Visit node ZBQ and remove it from the graph.
Nodes with 0 in-degree: [VHC].
Visit node VHC and remove it from the graph.
Nodes with 0 in-degree: [OZJ, GTO].
Visit node OZJ and remove it from the graph.
Nodes with 0 in-degree: [GTO].
Visit node GTO and remove it from the graph.
Nodes with 0 in-degree: [UXO].
Visit node UXO and remove it from the graph.
Nodes with 0 in-degree: [YFM].
Visit node YFM and remove it from the graph.
Nodes with 0 in-degree: [AMB].
Visit node AMB and remove it from the graph.
Nodes with 0 in-degree: [QPN].
Visit node QPN and remove it from the graph.
Nodes with 0 in-degree: [WQN].
Visit node WQN and remove it from the graph.
Nodes with 0 in-degree: [LYM, CXW].
Visit node LYM and remove it from the graph.
Nodes with 0 in-degree: [CXW].
Visit node CXW and remove it from the graph.
Nodes with 0 in-degree: [OHB].
Visit node OHB and remove it from the graph.
Nodes with 0 in-degree: [YVX, OSJ, IIA].
Visit node YVX and remove it from the graph.
Nodes with 0 in-degree: [OSJ, IIA].
Visit node OSJ and remove it from the graph.
Nodes with 0 in-degree: [IIA].
Visit node IIA and remove it from the graph.
So the result of topological sorting is ","('[[ZBQ, OSJ, GTO, WQN, LYM, QPN, CXW, IIA, VHC, OHB, YFM, AMB, YVX, OZJ, UXO], [ZBQ, VHC, OZJ, GTO, UXO, YFM, AMB, YVX, LYM, OHB, OSJ, CXW, IIA, WQN, QPN], [ZBQ, VHC, OZJ, GTO, UXO, YFM, AMB, QPN, WQN, LYM, CXW, OHB, YVX, OSJ, IIA], [ZBQ, VHC, OZJ, GTO, UXO, CXW, OHB, YVX, OSJ, IIA, YFM, AMB, QPN, WQN, LYM]]',)",2,291
topological_sort,"[(MQV, SVW), (MQV, KYO), (MQV, MST), (MQV, KWE), (SVW, KYO), (SVW, UUU), (SVW, EYA), (KYO, SQC), (MST, SQC), (MST, KWE), (KWE, KYO), (KWE, SQC), (KWE, GBY), (UUU, UQY), (UUU, KYO), (UUU, SQC), (SQC, EYA), (GBY, KYO), (VKA, MQV), (VKA, SQC), (VKA, WWS), (VKA, UQY), (WWS, SVW), (WWS, MST), (UQY, EYA), (UQY, GBY), (UQY, KWE), (EFJ, WWS), (EFJ, SVW), (EFJ, MQV), (EFJ, GBY), (EFJ, VKA)]","{MQV: [SVW, KYO, MST, KWE],
SVW: [KYO, UUU, EYA],
KYO: [SQC],
MST: [SQC, KWE],
KWE: [KYO, SQC, GBY],
UUU: [UQY, KYO, SQC],
EYA: [],
SQC: [EYA],
GBY: [KYO],
VKA: [MQV, SQC, WWS, UQY],
WWS: [SVW, MST],
UQY: [EYA, GBY, KWE],
EFJ: [WWS, SVW, MQV, GBY, VKA]}","Node MQV is connected to nodes SVW, KYO, MST, KWE.
Node SVW is connected to nodes KYO, UUU, EYA.
Node KYO is connected to node SQC.
Node MST is connected to nodes SQC, KWE.
Node KWE is connected to nodes KYO, SQC, GBY.
Node UUU is connected to nodes UQY, KYO, SQC.
Node SQC is connected to node EYA.
Node GBY is connected to node KYO.
Node VKA is connected to nodes MQV, SQC, WWS, UQY.
Node WWS is connected to nodes SVW, MST.
Node UQY is connected to nodes EYA, GBY, KWE.
Node EFJ is connected to nodes WWS, SVW, MQV, GBY, VKA.","[SVW, WWS, KWE, EFJ, MQV, UUU, VKA, MST, EYA, KYO, SQC, UQY, GBY]",13,32,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[EFJ, VKA, MQV, WWS, SVW, MST, UUU, UQY, KWE, GBY, KYO, SQC, EYA]","Let's solve it step by step.
Nodes with 0 in-degree: [EFJ].
Visit node EFJ and remove it from the graph.
Nodes with 0 in-degree: [VKA].
Visit node VKA and remove it from the graph.
Nodes with 0 in-degree: [MQV, WWS].
Visit node MQV and remove it from the graph.
Nodes with 0 in-degree: [WWS].
Visit node WWS and remove it from the graph.
Nodes with 0 in-degree: [SVW, MST].
Visit node SVW and remove it from the graph.
Nodes with 0 in-degree: [MST, UUU].
Visit node MST and remove it from the graph.
Nodes with 0 in-degree: [UUU].
Visit node UUU and remove it from the graph.
Nodes with 0 in-degree: [UQY].
Visit node UQY and remove it from the graph.
Nodes with 0 in-degree: [KWE].
Visit node KWE and remove it from the graph.
Nodes with 0 in-degree: [GBY].
Visit node GBY and remove it from the graph.
Nodes with 0 in-degree: [KYO].
Visit node KYO and remove it from the graph.
Nodes with 0 in-degree: [SQC].
Visit node SQC and remove it from the graph.
Nodes with 0 in-degree: [EYA].
Visit node EYA and remove it from the graph.
So the result of topological sorting is ","('[[EFJ, WWS, KYO, KWE, SQC, UUU, SVW, MST, GBY, EYA, MQV, UQY, VKA], [EFJ, VKA, MQV, WWS, SVW, MST, GBY, SQC, KYO, EYA, KWE, UQY, UUU], [EFJ, VKA, MQV, WWS, SVW, MST, UUU, UQY, KWE, GBY, KYO, SQC, EYA], [EFJ, VKA, MQV, WWS, GBY, KYO, SQC, EYA, SVW, MST, UUU, UQY, KWE]]',)",2,292
topological_sort,"[(GEI, VIX), (GEI, HXY), (GEI, BPV), (GEI, UEL), (GEI, YDQ), (GEI, HOB), (VIX, XYB), (HXY, BKY), (HXY, VIX), (HXY, UEL), (HXY, KIW), (BPV, XYB), (UEL, BPV), (UEL, VIX), (YDQ, BPV), (YDQ, VIX), (HOB, BKY), (HOB, HXY), (HOB, BPV), (HOB, UEL), (HOB, BVV), (BKY, KIW), (KIW, XYB), (KIW, UEL), (KIW, YDQ), (BVV, YDQ), (BVV, BKY), (QUF, QBM), (QUF, KIW), (QUF, BKY), (QUF, YDQ), (QBM, HOB), (QBM, BVV)]","{GEI: [VIX, HXY, BPV, UEL, YDQ, HOB],
VIX: [XYB],
HXY: [BKY, VIX, UEL, KIW],
BPV: [XYB],
UEL: [BPV, VIX],
YDQ: [BPV, VIX],
HOB: [BKY, HXY, BPV, UEL, BVV],
XYB: [],
BKY: [KIW],
KIW: [XYB, UEL, YDQ],
BVV: [YDQ, BKY],
QUF: [QBM, KIW, BKY, YDQ],
QBM: [HOB, BVV]}","Node GEI is connected to nodes VIX, HXY, BPV, UEL, YDQ, HOB.
Node VIX is connected to node XYB.
Node HXY is connected to nodes BKY, VIX, UEL, KIW.
Node BPV is connected to node XYB.
Node UEL is connected to nodes BPV, VIX.
Node YDQ is connected to nodes BPV, VIX.
Node HOB is connected to nodes BKY, HXY, BPV, UEL, BVV.
Node BKY is connected to node KIW.
Node KIW is connected to nodes XYB, UEL, YDQ.
Node BVV is connected to nodes YDQ, BKY.
Node QUF is connected to nodes QBM, KIW, BKY, YDQ.
Node QBM is connected to nodes HOB, BVV.","[BVV, BPV, VIX, XYB, BKY, UEL, HXY, KIW, HOB, YDQ, GEI, QBM, QUF]",13,33,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GEI, QUF, QBM, HOB, HXY, BVV, BKY, KIW, UEL, YDQ, BPV, VIX, XYB]","Let's solve it step by step.
Nodes with 0 in-degree: [GEI, QUF].
Visit node GEI and remove it from the graph.
Nodes with 0 in-degree: [QUF].
Visit node QUF and remove it from the graph.
Nodes with 0 in-degree: [QBM].
Visit node QBM and remove it from the graph.
Nodes with 0 in-degree: [HOB].
Visit node HOB and remove it from the graph.
Nodes with 0 in-degree: [HXY, BVV].
Visit node HXY and remove it from the graph.
Nodes with 0 in-degree: [BVV].
Visit node BVV and remove it from the graph.
Nodes with 0 in-degree: [BKY].
Visit node BKY and remove it from the graph.
Nodes with 0 in-degree: [KIW].
Visit node KIW and remove it from the graph.
Nodes with 0 in-degree: [UEL, YDQ].
Visit node UEL and remove it from the graph.
Nodes with 0 in-degree: [YDQ].
Visit node YDQ and remove it from the graph.
Nodes with 0 in-degree: [BPV, VIX].
Visit node BPV and remove it from the graph.
Nodes with 0 in-degree: [VIX].
Visit node VIX and remove it from the graph.
Nodes with 0 in-degree: [XYB].
Visit node XYB and remove it from the graph.
So the result of topological sorting is ","('[[GEI, QUF, QBM, HOB, HXY, BVV, VIX, KIW, UEL, BKY, BPV, YDQ, XYB], [GEI, QUF, QBM, HOB, YDQ, BPV, VIX, XYB, HXY, BVV, BKY, KIW, UEL], [GEI, QUF, QBM, HOB, HXY, BVV, BKY, KIW, UEL, YDQ, BPV, VIX, XYB], [GEI, XYB, UEL, QUF, KIW, BKY, VIX, BVV, YDQ, HXY, BPV, QBM, HOB]]',)",2,293
topological_sort,"[(EIF, PPT), (EIF, PXZ), (EIF, WUX), (EIF, ZGO), (EIF, CPB), (PXZ, ZGO), (PXZ, WUX), (ZGO, PPT), (CPB, PPT), (AGX, CPB), (AGX, MVK), (AGX, AYG), (AGX, YEF), (MVK, AYG), (MVK, AVL), (MVK, DNH), (MVK, ICD), (MVK, WUX), (AYG, PXZ), (AYG, YEF), (AYG, ZGO), (AYG, WUX), (AYG, EIF), (AYG, CPB), (AVL, EIF), (AVL, CPB), (DNH, PXZ), (DNH, ZGO), (ICD, PXZ), (ICD, WUX), (ICD, CPB)]","{EIF: [PPT, PXZ, WUX, ZGO, CPB],
PPT: [],
PXZ: [ZGO, WUX],
WUX: [],
ZGO: [PPT],
CPB: [PPT],
AGX: [CPB, MVK, AYG, YEF],
MVK: [AYG, AVL, DNH, ICD, WUX],
AYG: [PXZ, YEF, ZGO, WUX, EIF, CPB],
YEF: [],
AVL: [EIF, CPB],
DNH: [PXZ, ZGO],
ICD: [PXZ, WUX, CPB]}","Node EIF is connected to nodes PPT, PXZ, WUX, ZGO, CPB.
Node PXZ is connected to nodes ZGO, WUX.
Node ZGO is connected to node PPT.
Node CPB is connected to node PPT.
Node AGX is connected to nodes CPB, MVK, AYG, YEF.
Node MVK is connected to nodes AYG, AVL, DNH, ICD, WUX.
Node AYG is connected to nodes PXZ, YEF, ZGO, WUX, EIF, CPB.
Node AVL is connected to nodes EIF, CPB.
Node DNH is connected to nodes PXZ, ZGO.
Node ICD is connected to nodes PXZ, WUX, CPB.","[AYG, YEF, MVK, AVL, PPT, EIF, PXZ, CPB, ICD, AGX, WUX, DNH, ZGO]",13,31,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[AGX, MVK, AYG, AVL, DNH, ICD, YEF, EIF, PXZ, CPB, ZGO, WUX, PPT]","Let's solve it step by step.
Nodes with 0 in-degree: [AGX].
Visit node AGX and remove it from the graph.
Nodes with 0 in-degree: [MVK].
Visit node MVK and remove it from the graph.
Nodes with 0 in-degree: [AYG, AVL, DNH, ICD].
Visit node AYG and remove it from the graph.
Nodes with 0 in-degree: [AVL, DNH, ICD, YEF].
Visit node AVL and remove it from the graph.
Nodes with 0 in-degree: [DNH, ICD, YEF, EIF].
Visit node DNH and remove it from the graph.
Nodes with 0 in-degree: [ICD, YEF, EIF].
Visit node ICD and remove it from the graph.
Nodes with 0 in-degree: [YEF, EIF].
Visit node YEF and remove it from the graph.
Nodes with 0 in-degree: [EIF].
Visit node EIF and remove it from the graph.
Nodes with 0 in-degree: [PXZ, CPB].
Visit node PXZ and remove it from the graph.
Nodes with 0 in-degree: [CPB, ZGO, WUX].
Visit node CPB and remove it from the graph.
Nodes with 0 in-degree: [ZGO, WUX].
Visit node ZGO and remove it from the graph.
Nodes with 0 in-degree: [WUX, PPT].
Visit node WUX and remove it from the graph.
Nodes with 0 in-degree: [PPT].
Visit node PPT and remove it from the graph.
So the result of topological sorting is ","('[[AGX, MVK, AYG, AVL, DNH, ICD, PPT, YEF, ZGO, CPB, PXZ, EIF, WUX], [AGX, WUX, AVL, PXZ, CPB, PPT, MVK, DNH, AYG, EIF, ZGO, ICD, YEF], [AGX, MVK, AYG, AVL, CPB, ZGO, WUX, PPT, DNH, ICD, YEF, EIF, PXZ], [AGX, MVK, AYG, AVL, DNH, ICD, YEF, EIF, PXZ, CPB, ZGO, WUX, PPT]]',)",3,294
topological_sort,"[(GNQ, TKQ), (GNQ, RXL), (GNQ, HUG), (GNQ, TDH), (GNQ, XBJ), (TKQ, XBJ), (TKQ, SLJ), (TKQ, SBW), (TKQ, RXL), (TKQ, KVB), (TKQ, HRY), (TKQ, TCG), (RXL, NRA), (RXL, VSB), (HUG, RXL), (TDH, XBJ), (XBJ, SLJ), (SBW, RXL), (SBW, KVB), (SBW, WQS), (KVB, WQS), (KVB, VSB), (KVB, HUG), (HRY, RXL), (HRY, HUG), (HRY, VSB), (HRY, KVB), (TCG, XBJ), (TCG, SLJ), (NRA, VSB), (VSB, XBJ), (WQS, TCG), (WQS, NRA), (RAK, VSB)]","{GNQ: [TKQ, RXL, HUG, TDH, XBJ],
TKQ: [XBJ, SLJ, SBW, RXL, KVB, HRY, TCG],
RXL: [NRA, VSB],
HUG: [RXL],
TDH: [XBJ],
XBJ: [SLJ],
SLJ: [],
SBW: [RXL, KVB, WQS],
KVB: [WQS, VSB, HUG],
HRY: [RXL, HUG, VSB, KVB],
TCG: [XBJ, SLJ],
NRA: [VSB],
VSB: [XBJ],
WQS: [TCG, NRA],
RAK: [VSB]}","Node GNQ is connected to nodes TKQ, RXL, HUG, TDH, XBJ.
Node TKQ is connected to nodes XBJ, SLJ, SBW, RXL, KVB, HRY, TCG.
Node RXL is connected to nodes NRA, VSB.
Node HUG is connected to node RXL.
Node TDH is connected to node XBJ.
Node XBJ is connected to node SLJ.
Node SBW is connected to nodes RXL, KVB, WQS.
Node KVB is connected to nodes WQS, VSB, HUG.
Node HRY is connected to nodes RXL, HUG, VSB, KVB.
Node TCG is connected to nodes XBJ, SLJ.
Node NRA is connected to node VSB.
Node VSB is connected to node XBJ.
Node WQS is connected to nodes TCG, NRA.
Node RAK is connected to node VSB.","[RXL, TCG, GNQ, VSB, SBW, WQS, SLJ, RAK, KVB, XBJ, HUG, HRY, TKQ, TDH, NRA]",15,34,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[GNQ, RAK, TKQ, TDH, SBW, HRY, KVB, WQS, HUG, TCG, RXL, NRA, VSB, XBJ, SLJ]","Let's solve it step by step.
Nodes with 0 in-degree: [GNQ, RAK].
Visit node GNQ and remove it from the graph.
Nodes with 0 in-degree: [RAK, TKQ, TDH].
Visit node RAK and remove it from the graph.
Nodes with 0 in-degree: [TKQ, TDH].
Visit node TKQ and remove it from the graph.
Nodes with 0 in-degree: [TDH, SBW, HRY].
Visit node TDH and remove it from the graph.
Nodes with 0 in-degree: [SBW, HRY].
Visit node SBW and remove it from the graph.
Nodes with 0 in-degree: [HRY].
Visit node HRY and remove it from the graph.
Nodes with 0 in-degree: [KVB].
Visit node KVB and remove it from the graph.
Nodes with 0 in-degree: [WQS, HUG].
Visit node WQS and remove it from the graph.
Nodes with 0 in-degree: [HUG, TCG].
Visit node HUG and remove it from the graph.
Nodes with 0 in-degree: [TCG, RXL].
Visit node TCG and remove it from the graph.
Nodes with 0 in-degree: [RXL].
Visit node RXL and remove it from the graph.
Nodes with 0 in-degree: [NRA].
Visit node NRA and remove it from the graph.
Nodes with 0 in-degree: [VSB].
Visit node VSB and remove it from the graph.
Nodes with 0 in-degree: [XBJ].
Visit node XBJ and remove it from the graph.
Nodes with 0 in-degree: [SLJ].
Visit node SLJ and remove it from the graph.
So the result of topological sorting is ","('[[GNQ, RAK, TKQ, TDH, SBW, HRY, KVB, RXL, NRA, XBJ, TCG, SLJ, HUG, WQS, VSB], [GNQ, RAK, TKQ, TDH, SBW, RXL, NRA, VSB, XBJ, SLJ, HRY, KVB, WQS, HUG, TCG], [GNQ, RAK, TKQ, TDH, SBW, HRY, KVB, WQS, HUG, TCG, RXL, NRA, VSB, XBJ, SLJ], [GNQ, TDH, VSB, HUG, WQS, HRY, SBW, RAK, KVB, TCG, NRA, SLJ, TKQ, RXL, XBJ]]',)",2,295
topological_sort,"[(XWU, OML), (OML, HXO), (OML, AKI), (OML, VNL), (HXO, TAT), (VNL, HXO), (VNL, IWZ), (UHP, IWZ), (IWZ, AKI), (RDL, XWU), (QWZ, OML)]","{XWU: [OML],
OML: [HXO, AKI, VNL],
HXO: [TAT],
AKI: [],
VNL: [HXO, IWZ],
TAT: [],
UHP: [IWZ],
IWZ: [AKI],
RDL: [XWU],
QWZ: [OML]}","Node XWU is connected to node OML.
Node OML is connected to nodes HXO, AKI, VNL.
Node HXO is connected to node TAT.
Node VNL is connected to nodes HXO, IWZ.
Node UHP is connected to node IWZ.
Node IWZ is connected to node AKI.
Node RDL is connected to node XWU.
Node QWZ is connected to node OML.","[IWZ, UHP, QWZ, VNL, HXO, OML, RDL, XWU, AKI, TAT]",10,11,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[UHP, RDL, QWZ, XWU, OML, VNL, HXO, IWZ, TAT, AKI]","Let's solve it step by step.
Nodes with 0 in-degree: [UHP, RDL, QWZ].
Visit node UHP and remove it from the graph.
Nodes with 0 in-degree: [RDL, QWZ].
Visit node RDL and remove it from the graph.
Nodes with 0 in-degree: [QWZ, XWU].
Visit node QWZ and remove it from the graph.
Nodes with 0 in-degree: [XWU].
Visit node XWU and remove it from the graph.
Nodes with 0 in-degree: [OML].
Visit node OML and remove it from the graph.
Nodes with 0 in-degree: [VNL].
Visit node VNL and remove it from the graph.
Nodes with 0 in-degree: [HXO, IWZ].
Visit node HXO and remove it from the graph.
Nodes with 0 in-degree: [IWZ, TAT].
Visit node IWZ and remove it from the graph.
Nodes with 0 in-degree: [TAT, AKI].
Visit node TAT and remove it from the graph.
Nodes with 0 in-degree: [AKI].
Visit node AKI and remove it from the graph.
So the result of topological sorting is ","('[[UHP, RDL, QWZ, IWZ, TAT, AKI, XWU, OML, VNL, HXO], [UHP, RDL, QWZ, XWU, OML, VNL, HXO, IWZ, TAT, AKI], [UHP, RDL, QWZ, XWU, OML, TAT, AKI, VNL, IWZ, HXO], [UHP, XWU, OML, TAT, AKI, RDL, IWZ, VNL, QWZ, HXO]]',)",1,296
topological_sort,"[(LRE, XBW), (LRE, HAQ), (XBW, KDA), (XBW, NWG), (IGG, UPR), (IGG, NWG), (IGG, JTE), (IGG, MTX), (UPR, XBW), (JTE, ZXY), (JTE, UPR), (JTE, NWG), (JTE, XBW), (MTX, LRE), (ZXY, KDA), (ZXY, MTX), (SMW, XBW), (SMW, ZXY), (HGG, IIU), (IIU, HAQ), (RRV, JTE), (RRV, HXP), (HXP, HGG), (HXP, MTX)]","{LRE: [XBW, HAQ],
XBW: [KDA, NWG],
HAQ: [],
KDA: [],
NWG: [],
IGG: [UPR, NWG, JTE, MTX],
UPR: [XBW],
JTE: [ZXY, UPR, NWG, XBW],
MTX: [LRE],
ZXY: [KDA, MTX],
SMW: [XBW, ZXY],
HGG: [IIU],
IIU: [HAQ],
RRV: [JTE, HXP],
HXP: [HGG, MTX]}","Node LRE is connected to nodes XBW, HAQ.
Node XBW is connected to nodes KDA, NWG.
Node IGG is connected to nodes UPR, NWG, JTE, MTX.
Node UPR is connected to node XBW.
Node JTE is connected to nodes ZXY, UPR, NWG, XBW.
Node MTX is connected to node LRE.
Node ZXY is connected to nodes KDA, MTX.
Node SMW is connected to nodes XBW, ZXY.
Node HGG is connected to node IIU.
Node IIU is connected to node HAQ.
Node RRV is connected to nodes JTE, HXP.
Node HXP is connected to nodes HGG, MTX.","[IGG, RRV, HXP, NWG, JTE, HGG, XBW, LRE, IIU, MTX, UPR, HAQ, ZXY, SMW, KDA]",15,24,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[IGG, SMW, RRV, JTE, HXP, ZXY, UPR, HGG, MTX, IIU, LRE, XBW, HAQ, KDA, NWG]","Let's solve it step by step.
Nodes with 0 in-degree: [IGG, SMW, RRV].
Visit node IGG and remove it from the graph.
Nodes with 0 in-degree: [SMW, RRV].
Visit node SMW and remove it from the graph.
Nodes with 0 in-degree: [RRV].
Visit node RRV and remove it from the graph.
Nodes with 0 in-degree: [JTE, HXP].
Visit node JTE and remove it from the graph.
Nodes with 0 in-degree: [HXP, ZXY, UPR].
Visit node HXP and remove it from the graph.
Nodes with 0 in-degree: [ZXY, UPR, HGG].
Visit node ZXY and remove it from the graph.
Nodes with 0 in-degree: [UPR, HGG, MTX].
Visit node UPR and remove it from the graph.
Nodes with 0 in-degree: [HGG, MTX].
Visit node HGG and remove it from the graph.
Nodes with 0 in-degree: [MTX, IIU].
Visit node MTX and remove it from the graph.
Nodes with 0 in-degree: [IIU, LRE].
Visit node IIU and remove it from the graph.
Nodes with 0 in-degree: [LRE].
Visit node LRE and remove it from the graph.
Nodes with 0 in-degree: [XBW, HAQ].
Visit node XBW and remove it from the graph.
Nodes with 0 in-degree: [HAQ, KDA, NWG].
Visit node HAQ and remove it from the graph.
Nodes with 0 in-degree: [KDA, NWG].
Visit node KDA and remove it from the graph.
Nodes with 0 in-degree: [NWG].
Visit node NWG and remove it from the graph.
So the result of topological sorting is ","('[[IGG, KDA, HAQ, ZXY, SMW, RRV, LRE, HGG, JTE, MTX, UPR, NWG, XBW, IIU, HXP], [IGG, SMW, RRV, JTE, HXP, ZXY, UPR, LRE, XBW, MTX, HAQ, IIU, NWG, KDA, HGG], [IGG, SMW, RRV, JTE, HXP, LRE, XBW, HAQ, KDA, NWG, ZXY, UPR, HGG, MTX, IIU], [IGG, SMW, RRV, JTE, HXP, ZXY, UPR, HGG, MTX, IIU, LRE, XBW, HAQ, KDA, NWG]]',)",3,297
topological_sort,"[(HXM, DFB), (HXM, QHC), (HXM, DPJ), (DFB, QHC), (DFB, PHD), (QHC, DPJ), (QHC, DGP), (PHD, DGP), (MMU, PHD), (MMU, QHC), (MMU, DFB), (MMU, HXM), (BTC, DGP), (BTC, HXM), (BTC, DPJ), (BTC, ZBE), (ZBE, PHD), (ZBE, DPJ), (QLY, DFB), (KKP, BTC), (KKP, DFB), (KKP, DPJ), (KKP, QHC), (KKP, QLY)]","{HXM: [DFB, QHC, DPJ],
DFB: [QHC, PHD],
QHC: [DPJ, DGP],
DPJ: [],
PHD: [DGP],
MMU: [PHD, QHC, DFB, HXM],
DGP: [],
BTC: [DGP, HXM, DPJ, ZBE],
ZBE: [PHD, DPJ],
QLY: [DFB],
KKP: [BTC, DFB, DPJ, QHC, QLY]}","Node HXM is connected to nodes DFB, QHC, DPJ.
Node DFB is connected to nodes QHC, PHD.
Node QHC is connected to nodes DPJ, DGP.
Node PHD is connected to node DGP.
Node MMU is connected to nodes PHD, QHC, DFB, HXM.
Node BTC is connected to nodes DGP, HXM, DPJ, ZBE.
Node ZBE is connected to nodes PHD, DPJ.
Node QLY is connected to node DFB.
Node KKP is connected to nodes BTC, DFB, DPJ, QHC, QLY.","[DPJ, DGP, PHD, KKP, MMU, QLY, ZBE, QHC, DFB, BTC, HXM]",11,24,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[MMU, KKP, BTC, QLY, HXM, ZBE, DFB, QHC, PHD, DPJ, DGP]","Let's solve it step by step.
Nodes with 0 in-degree: [MMU, KKP].
Visit node MMU and remove it from the graph.
Nodes with 0 in-degree: [KKP].
Visit node KKP and remove it from the graph.
Nodes with 0 in-degree: [BTC, QLY].
Visit node BTC and remove it from the graph.
Nodes with 0 in-degree: [QLY, HXM, ZBE].
Visit node QLY and remove it from the graph.
Nodes with 0 in-degree: [HXM, ZBE].
Visit node HXM and remove it from the graph.
Nodes with 0 in-degree: [ZBE, DFB].
Visit node ZBE and remove it from the graph.
Nodes with 0 in-degree: [DFB].
Visit node DFB and remove it from the graph.
Nodes with 0 in-degree: [QHC, PHD].
Visit node QHC and remove it from the graph.
Nodes with 0 in-degree: [PHD, DPJ].
Visit node PHD and remove it from the graph.
Nodes with 0 in-degree: [DPJ, DGP].
Visit node DPJ and remove it from the graph.
Nodes with 0 in-degree: [DGP].
Visit node DGP and remove it from the graph.
So the result of topological sorting is ","('[[MMU, KKP, BTC, PHD, DPJ, DGP, QLY, HXM, ZBE, DFB, QHC], [MMU, KKP, BTC, QLY, HXM, ZBE, DFB, QHC, PHD, DPJ, DGP], [MMU, KKP, BTC, QLY, HXM, QHC, DFB, DPJ, DGP, ZBE, PHD], [MMU, DPJ, QHC, BTC, KKP, HXM, ZBE, DGP, QLY, DFB, PHD]]',)",1,298
topological_sort,"[(YLM, AUB), (ERJ, AUB), (ERJ, HIP), (ERJ, YLM), (HIP, JQV), (HIP, EUU), (HIP, ZMI), (HIP, XLT), (BQZ, IWM), (BQZ, AUB), (BQZ, CSD), (BQZ, YLM), (IWM, AUB), (CSD, ERJ), (CSD, XLT), (FBN, IWM), (FBN, AUB), (FBN, EUU), (EUU, AUB), (EUU, IWM), (YQV, EUU), (YQV, CSD), (YQV, JQV), (YQV, ERJ), (YQV, FBN), (JQV, XLT), (JQV, IWM), (XLT, YLM), (XLT, FBN), (XLT, EUU), (XLT, AUB), (XLT, ZMI), (ZMI, EUU), (ZMI, IWM)]","{YLM: [AUB],
AUB: [],
ERJ: [AUB, HIP, YLM],
HIP: [JQV, EUU, ZMI, XLT],
BQZ: [IWM, AUB, CSD, YLM],
IWM: [AUB],
CSD: [ERJ, XLT],
FBN: [IWM, AUB, EUU],
EUU: [AUB, IWM],
YQV: [EUU, CSD, JQV, ERJ, FBN],
JQV: [XLT, IWM],
XLT: [YLM, FBN, EUU, AUB, ZMI],
ZMI: [EUU, IWM]}","Node YLM is connected to node AUB.
Node ERJ is connected to nodes AUB, HIP, YLM.
Node HIP is connected to nodes JQV, EUU, ZMI, XLT.
Node BQZ is connected to nodes IWM, AUB, CSD, YLM.
Node IWM is connected to node AUB.
Node CSD is connected to nodes ERJ, XLT.
Node FBN is connected to nodes IWM, AUB, EUU.
Node EUU is connected to nodes AUB, IWM.
Node YQV is connected to nodes EUU, CSD, JQV, ERJ, FBN.
Node JQV is connected to nodes XLT, IWM.
Node XLT is connected to nodes YLM, FBN, EUU, AUB, ZMI.
Node ZMI is connected to nodes EUU, IWM.","[JQV, CSD, AUB, EUU, IWM, ZMI, HIP, BQZ, XLT, ERJ, YQV, FBN, YLM]",13,34,True,"Output the topological sorting of this graph. Topological sorting is a linear ordering of the nodes of a directed acyclic graph (DAG) such that for every directed edge, the source node comes before the end nodes in the ordering.","[BQZ, YQV, CSD, ERJ, HIP, JQV, XLT, YLM, FBN, ZMI, EUU, IWM, AUB]","Let's solve it step by step.
Nodes with 0 in-degree: [BQZ, YQV].
Visit node BQZ and remove it from the graph.
Nodes with 0 in-degree: [YQV].
Visit node YQV and remove it from the graph.
Nodes with 0 in-degree: [CSD].
Visit node CSD and remove it from the graph.
Nodes with 0 in-degree: [ERJ].
Visit node ERJ and remove it from the graph.
Nodes with 0 in-degree: [HIP].
Visit node HIP and remove it from the graph.
Nodes with 0 in-degree: [JQV].
Visit node JQV and remove it from the graph.
Nodes with 0 in-degree: [XLT].
Visit node XLT and remove it from the graph.
Nodes with 0 in-degree: [YLM, FBN, ZMI].
Visit node YLM and remove it from the graph.
Nodes with 0 in-degree: [FBN, ZMI].
Visit node FBN and remove it from the graph.
Nodes with 0 in-degree: [ZMI].
Visit node ZMI and remove it from the graph.
Nodes with 0 in-degree: [EUU].
Visit node EUU and remove it from the graph.
Nodes with 0 in-degree: [IWM].
Visit node IWM and remove it from the graph.
Nodes with 0 in-degree: [AUB].
Visit node AUB and remove it from the graph.
So the result of topological sorting is ","('[[BQZ, YQV, CSD, ERJ, ZMI, EUU, IWM, AUB, HIP, JQV, XLT, YLM, FBN], [BQZ, YQV, CSD, ERJ, HIP, JQV, YLM, FBN, XLT, EUU, ZMI, IWM, AUB], [BQZ, YQV, CSD, ERJ, HIP, JQV, XLT, YLM, FBN, ZMI, EUU, IWM, AUB], [BQZ, EUU, ERJ, XLT, FBN, JQV, CSD, YQV, YLM, IWM, HIP, ZMI, AUB]]',)",2,299
