task,graph,graph_adj,graph_nl,nodes,num_nodes,num_edges,directed,question,answer,steps,choices,label,id
BFS,"[(<7>, <0>), (<7>, <2>), (<7>, <3>), (<7>, <1>), (<7>, <5>), (<7>, <4>), (<7>, <6>), (<0>, <3>), (<0>, <1>), (<0>, <5>), (<0>, <4>), (<2>, <3>), (<2>, <5>), (<2>, <4>), (<3>, <6>), (<1>, <4>), (<1>, <6>), (<5>, <6>)]","{<7>: [<0>, <2>, <3>, <1>, <5>, <4>, <6>],
<0>: [<7>, <3>, <1>, <5>, <4>],
<2>: [<7>, <3>, <5>, <4>],
<3>: [<7>, <0>, <2>, <6>],
<1>: [<7>, <0>, <4>, <6>],
<5>: [<7>, <0>, <2>, <6>],
<4>: [<7>, <0>, <2>, <1>],
<6>: [<7>, <3>, <1>, <5>]}","Node <7> is connected to nodes <0>, <2>, <3>, <1>, <5>, <4>, <6>.
Node <0> is connected to nodes <7>, <3>, <1>, <5>, <4>.
Node <2> is connected to nodes <7>, <3>, <5>, <4>.
Node <3> is connected to nodes <7>, <0>, <2>, <6>.
Node <1> is connected to nodes <7>, <0>, <4>, <6>.
Node <5> is connected to nodes <7>, <0>, <2>, <6>.
Node <4> is connected to nodes <7>, <0>, <2>, <1>.
Node <6> is connected to nodes <7>, <3>, <1>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,18,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <7>, <0>, <2>, <6>, <1>, <5>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<7>, <0>, <2>, <6>].
Visit node <7>. Unvisited neighbors of node <7> are [<1>, <5>, <4>].
Visit node <0>. 
Visit node <2>. 
Visit node <6>. 
Visit node <1>. 
Visit node <5>. 
Visit node <4>. 
So the BFS traversal is ","('[[<3>, <7>, <0>, <2>, <4>, <6>, <1>, <5>], [<3>, <7>, <0>, <2>, <6>, <1>, <5>, <4>], [<3>, <1>, <6>, <7>, <5>, <4>, <0>, <2>], [<3>, <7>, <5>, <4>, <0>, <2>, <6>, <1>]]',)",1,0
BFS,"[(<4>, <10>), (<4>, <1>), (<4>, <7>), (<4>, <2>), (<4>, <9>), (<10>, <5>), (<10>, <7>), (<10>, <8>), (<10>, <3>), (<10>, <9>), (<1>, <8>), (<1>, <3>), (<1>, <2>), (<1>, <5>), (<7>, <8>), (<2>, <6>), (<9>, <8>), (<9>, <3>), (<5>, <6>), (<3>, <6>), (<3>, <0>), (<6>, <0>)]","{<4>: [<10>, <1>, <7>, <2>, <9>],
<10>: [<4>, <5>, <7>, <8>, <3>, <9>],
<1>: [<4>, <8>, <3>, <2>, <5>],
<7>: [<4>, <10>, <8>],
<2>: [<4>, <1>, <6>],
<9>: [<4>, <10>, <8>, <3>],
<5>: [<10>, <1>, <6>],
<8>: [<10>, <1>, <7>, <9>],
<3>: [<10>, <1>, <6>, <9>, <0>],
<6>: [<5>, <0>, <2>, <3>],
<0>: [<6>, <3>]}","Node <4> is connected to nodes <10>, <1>, <7>, <2>, <9>.
Node <10> is connected to nodes <4>, <5>, <7>, <8>, <3>, <9>.
Node <1> is connected to nodes <4>, <8>, <3>, <2>, <5>.
Node <7> is connected to nodes <4>, <10>, <8>.
Node <2> is connected to nodes <4>, <1>, <6>.
Node <9> is connected to nodes <4>, <10>, <8>, <3>.
Node <5> is connected to nodes <10>, <1>, <6>.
Node <8> is connected to nodes <10>, <1>, <7>, <9>.
Node <3> is connected to nodes <10>, <1>, <6>, <9>, <0>.
Node <6> is connected to nodes <5>, <0>, <2>, <3>.
Node <0> is connected to nodes <6>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,22,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <10>, <1>, <6>, <9>, <0>, <4>, <5>, <7>, <8>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<10>, <1>, <6>, <9>, <0>].
Visit node <10>. Unvisited neighbors of node <10> are [<4>, <5>, <7>, <8>].
Visit node <1>. Unvisited neighbors of node <1> are [<2>].
Visit node <6>. 
Visit node <9>. 
Visit node <0>. 
Visit node <4>. 
Visit node <5>. 
Visit node <7>. 
Visit node <8>. 
Visit node <2>. 
So the BFS traversal is ","('[[<3>, <10>, <1>, <6>, <9>, <7>, <5>, <8>, <2>, <4>, <0>], [<3>, <10>, <1>, <6>, <9>, <0>, <4>, <5>, <7>, <8>, <2>], [<3>, <6>, <5>, <8>, <1>, <9>, <4>, <2>, <0>, <10>, <7>], [<3>, <10>, <1>, <7>, <8>, <2>, <6>, <9>, <0>, <4>, <5>]]',)",1,1
BFS,"[(<10>, <3>), (<10>, <1>), (<3>, <5>), (<3>, <6>), (<3>, <11>), (<3>, <1>), (<3>, <2>), (<1>, <3>), (<2>, <10>), (<0>, <3>), (<0>, <7>), (<0>, <8>), (<0>, <2>), (<7>, <1>), (<7>, <10>), (<7>, <9>), (<7>, <5>), (<8>, <9>), (<5>, <11>), (<5>, <7>), (<6>, <7>), (<6>, <1>), (<6>, <2>), (<6>, <3>), (<6>, <4>), (<11>, <1>), (<11>, <2>), (<11>, <4>), (<11>, <6>), (<4>, <9>), (<4>, <5>), (<9>, <6>), (<9>, <11>), (<9>, <10>)]","{<10>: [<3>, <1>],
<3>: [<5>, <6>, <11>, <1>, <2>],
<1>: [<3>],
<2>: [<10>],
<0>: [<3>, <7>, <8>, <2>],
<7>: [<1>, <10>, <9>, <5>],
<8>: [<9>],
<5>: [<11>, <7>],
<6>: [<7>, <1>, <2>, <3>, <4>],
<11>: [<1>, <2>, <4>, <6>],
<4>: [<9>, <5>],
<9>: [<6>, <11>, <10>]}","Node <10> is connected to nodes <3>, <1>.
Node <3> is connected to nodes <5>, <6>, <11>, <1>, <2>.
Node <1> is connected to node <3>.
Node <2> is connected to node <10>.
Node <0> is connected to nodes <3>, <7>, <8>, <2>.
Node <7> is connected to nodes <1>, <10>, <9>, <5>.
Node <8> is connected to node <9>.
Node <5> is connected to nodes <11>, <7>.
Node <6> is connected to nodes <7>, <1>, <2>, <3>, <4>.
Node <11> is connected to nodes <1>, <2>, <4>, <6>.
Node <4> is connected to nodes <9>, <5>.
Node <9> is connected to nodes <6>, <11>, <10>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,34,True,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <9>, <6>, <11>, <10>, <7>, <1>, <2>, <3>, <4>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<9>].
Visit node <9>. Unvisited neighbors of node <9> are [<6>, <11>, <10>].
Visit node <6>. Unvisited neighbors of node <6> are [<7>, <1>, <2>, <3>, <4>].
Visit node <11>. 
Visit node <10>. 
Visit node <7>. Unvisited neighbors of node <7> are [<5>].
Visit node <1>. 
Visit node <2>. 
Visit node <3>. 
Visit node <4>. 
Visit node <5>. 
So the BFS traversal is ","('[[<8>, <7>, <9>, <4>, <10>, <11>, <2>, <6>, <3>, <1>, <5>], [<8>, <9>, <6>, <3>, <4>, <5>, <11>, <10>, <7>, <1>, <2>], [<8>, <9>, <6>, <11>, <10>, <7>, <1>, <2>, <3>, <4>, <5>], [<8>, <9>, <6>, <11>, <10>, <4>, <1>, <5>, <3>, <2>, <7>]]',)",2,2
BFS,"[(<6>, <4>), (<6>, <7>), (<7>, <0>), (<5>, <2>), (<5>, <1>), (<2>, <1>), (<1>, <3>), (<0>, <3>)]","{<6>: [<4>, <7>],
<4>: [<6>],
<7>: [<6>, <0>],
<5>: [<2>, <1>],
<2>: [<5>, <1>],
<1>: [<5>, <2>, <3>],
<0>: [<3>, <7>],
<3>: [<0>, <1>]}","Node <6> is connected to nodes <4>, <7>.
Node <4> is connected to node <6>.
Node <7> is connected to nodes <6>, <0>.
Node <5> is connected to nodes <2>, <1>.
Node <2> is connected to nodes <5>, <1>.
Node <1> is connected to nodes <5>, <2>, <3>.
Node <0> is connected to nodes <3>, <7>.
Node <3> is connected to nodes <0>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,8,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <3>, <7>, <1>, <6>, <5>, <2>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<3>, <7>].
Visit node <3>. Unvisited neighbors of node <3> are [<1>].
Visit node <7>. Unvisited neighbors of node <7> are [<6>].
Visit node <1>. Unvisited neighbors of node <1> are [<5>, <2>].
Visit node <6>. Unvisited neighbors of node <6> are [<4>].
Visit node <5>. 
Visit node <2>. 
Visit node <4>. 
So the BFS traversal is ","('[[<0>, <3>, <2>, <4>, <7>, <1>, <6>, <5>], [<0>, <3>, <7>, <1>, <6>, <5>, <2>, <4>], [<0>, <3>, <7>, <1>, <6>, <2>, <5>, <4>], [<0>, <6>, <4>, <5>, <3>, <2>, <1>, <7>]]',)",1,3
BFS,"[(<8>, <4>), (<8>, <0>), (<8>, <1>), (<8>, <6>), (<4>, <8>), (<1>, <10>), (<1>, <4>), (<6>, <8>), (<6>, <3>), (<12>, <10>), (<12>, <1>), (<10>, <0>), (<10>, <1>), (<5>, <8>), (<9>, <3>), (<9>, <8>), (<3>, <6>), (<3>, <1>), (<7>, <6>), (<7>, <12>), (<7>, <9>), (<2>, <11>), (<2>, <0>), (<2>, <1>), (<2>, <9>), (<11>, <12>), (<11>, <5>), (<11>, <4>), (<11>, <1>)]","{<8>: [<4>, <0>, <1>, <6>],
<4>: [<8>],
<0>: [],
<1>: [<10>, <4>],
<6>: [<8>, <3>],
<12>: [<10>, <1>],
<10>: [<0>, <1>],
<5>: [<8>],
<9>: [<3>, <8>],
<3>: [<6>, <1>],
<7>: [<6>, <12>, <9>],
<2>: [<11>, <0>, <1>, <9>],
<11>: [<12>, <5>, <4>, <1>]}","Node <8> is connected to nodes <4>, <0>, <1>, <6>.
Node <4> is connected to node <8>.
Node <1> is connected to nodes <10>, <4>.
Node <6> is connected to nodes <8>, <3>.
Node <12> is connected to nodes <10>, <1>.
Node <10> is connected to nodes <0>, <1>.
Node <5> is connected to node <8>.
Node <9> is connected to nodes <3>, <8>.
Node <3> is connected to nodes <6>, <1>.
Node <7> is connected to nodes <6>, <12>, <9>.
Node <2> is connected to nodes <11>, <0>, <1>, <9>.
Node <11> is connected to nodes <12>, <5>, <4>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,29,True,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <8>, <3>, <4>, <0>, <1>, <10>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<8>, <3>].
Visit node <8>. Unvisited neighbors of node <8> are [<4>, <0>, <1>].
Visit node <3>. 
Visit node <4>. 
Visit node <0>. 
Visit node <1>. Unvisited neighbors of node <1> are [<10>].
Visit node <10>. 
So the BFS traversal is ","('[[<6>, <4>, <1>, <10>, <3>, <8>, <0>], [<6>, <8>, <3>, <1>, <0>, <4>, <10>], [<6>, <8>, <1>, <10>, <3>, <4>, <0>], [<6>, <8>, <3>, <4>, <0>, <1>, <10>]]',)",3,4
BFS,"[(<6>, <10>), (<6>, <8>), (<6>, <9>), (<8>, <7>), (<8>, <1>), (<8>, <3>), (<8>, <0>), (<7>, <4>), (<7>, <5>), (<7>, <2>)]","{<6>: [<10>, <8>, <9>],
<10>: [<6>],
<8>: [<6>, <7>, <1>, <3>, <0>],
<9>: [<6>],
<7>: [<4>, <8>, <5>, <2>],
<4>: [<7>],
<5>: [<7>],
<2>: [<7>],
<1>: [<8>],
<3>: [<8>],
<0>: [<8>]}","Node <6> is connected to nodes <10>, <8>, <9>.
Node <10> is connected to node <6>.
Node <8> is connected to nodes <6>, <7>, <1>, <3>, <0>.
Node <9> is connected to node <6>.
Node <7> is connected to nodes <4>, <8>, <5>, <2>.
Node <4> is connected to node <7>.
Node <5> is connected to node <7>.
Node <2> is connected to node <7>.
Node <1> is connected to node <8>.
Node <3> is connected to node <8>.
Node <0> is connected to node <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,10,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <4>, <8>, <5>, <2>, <6>, <1>, <3>, <0>, <10>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<4>, <8>, <5>, <2>].
Visit node <4>. 
Visit node <8>. Unvisited neighbors of node <8> are [<6>, <1>, <3>, <0>].
Visit node <5>. 
Visit node <2>. 
Visit node <6>. Unvisited neighbors of node <6> are [<10>, <9>].
Visit node <1>. 
Visit node <3>. 
Visit node <0>. 
Visit node <10>. 
Visit node <9>. 
So the BFS traversal is ","('[[<7>, <4>, <8>, <0>, <10>, <9>, <5>, <2>, <6>, <1>, <3>], [<7>, <4>, <8>, <5>, <2>, <6>, <1>, <3>, <0>, <10>, <9>], [<7>, <0>, <3>, <8>, <1>, <6>, <5>, <4>, <10>, <9>, <2>], [<7>, <4>, <8>, <5>, <2>, <1>, <3>, <0>, <10>, <9>, <6>]]',)",1,5
BFS,"[(<2>, <8>), (<2>, <0>), (<2>, <4>), (<2>, <1>), (<2>, <6>), (<8>, <3>), (<8>, <5>), (<8>, <0>), (<8>, <4>), (<8>, <1>), (<8>, <7>), (<8>, <6>), (<0>, <3>), (<0>, <5>), (<0>, <4>), (<0>, <7>), (<0>, <6>), (<4>, <5>), (<4>, <7>), (<1>, <3>), (<1>, <5>), (<1>, <7>), (<1>, <6>), (<6>, <3>), (<6>, <7>), (<3>, <5>), (<5>, <7>)]","{<2>: [<8>, <0>, <4>, <1>, <6>],
<8>: [<2>, <3>, <5>, <0>, <4>, <1>, <7>, <6>],
<0>: [<2>, <8>, <3>, <5>, <4>, <7>, <6>],
<4>: [<2>, <8>, <5>, <0>, <7>],
<1>: [<2>, <8>, <3>, <5>, <7>, <6>],
<6>: [<2>, <8>, <3>, <0>, <1>, <7>],
<3>: [<8>, <5>, <0>, <1>, <6>],
<5>: [<8>, <3>, <0>, <4>, <1>, <7>],
<7>: [<8>, <5>, <0>, <4>, <1>, <6>]}","Node <2> is connected to nodes <8>, <0>, <4>, <1>, <6>.
Node <8> is connected to nodes <2>, <3>, <5>, <0>, <4>, <1>, <7>, <6>.
Node <0> is connected to nodes <2>, <8>, <3>, <5>, <4>, <7>, <6>.
Node <4> is connected to nodes <2>, <8>, <5>, <0>, <7>.
Node <1> is connected to nodes <2>, <8>, <3>, <5>, <7>, <6>.
Node <6> is connected to nodes <2>, <8>, <3>, <0>, <1>, <7>.
Node <3> is connected to nodes <8>, <5>, <0>, <1>, <6>.
Node <5> is connected to nodes <8>, <3>, <0>, <4>, <1>, <7>.
Node <7> is connected to nodes <8>, <5>, <0>, <4>, <1>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,27,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <8>, <5>, <0>, <4>, <1>, <6>, <2>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<8>, <5>, <0>, <4>, <1>, <6>].
Visit node <8>. Unvisited neighbors of node <8> are [<2>, <3>].
Visit node <5>. 
Visit node <0>. 
Visit node <4>. 
Visit node <1>. 
Visit node <6>. 
Visit node <2>. 
Visit node <3>. 
So the BFS traversal is ","('[[<7>, <8>, <5>, <6>, <2>, <3>, <0>, <4>, <1>], [<7>, <8>, <4>, <1>, <3>, <6>, <0>, <5>, <2>], [<7>, <8>, <5>, <0>, <2>, <4>, <3>, <1>, <6>], [<7>, <8>, <5>, <0>, <4>, <1>, <6>, <2>, <3>]]',)",3,6
BFS,"[(<2>, <1>), (<2>, <4>), (<2>, <0>), (<2>, <9>), (<2>, <8>), (<1>, <0>), (<1>, <3>), (<1>, <6>), (<1>, <7>), (<1>, <4>), (<4>, <6>), (<4>, <9>), (<0>, <7>), (<8>, <6>), (<8>, <7>), (<3>, <6>), (<3>, <5>), (<3>, <7>), (<6>, <5>), (<7>, <5>)]","{<2>: [<1>, <4>, <0>, <9>, <8>],
<1>: [<2>, <0>, <3>, <6>, <7>, <4>],
<4>: [<2>, <1>, <6>, <9>],
<0>: [<2>, <1>, <7>],
<9>: [<2>, <4>],
<8>: [<2>, <6>, <7>],
<3>: [<1>, <6>, <5>, <7>],
<6>: [<1>, <4>, <5>, <3>, <8>],
<7>: [<1>, <0>, <5>, <3>, <8>],
<5>: [<6>, <3>, <7>]}","Node <2> is connected to nodes <1>, <4>, <0>, <9>, <8>.
Node <1> is connected to nodes <2>, <0>, <3>, <6>, <7>, <4>.
Node <4> is connected to nodes <2>, <1>, <6>, <9>.
Node <0> is connected to nodes <2>, <1>, <7>.
Node <9> is connected to nodes <2>, <4>.
Node <8> is connected to nodes <2>, <6>, <7>.
Node <3> is connected to nodes <1>, <6>, <5>, <7>.
Node <6> is connected to nodes <1>, <4>, <5>, <3>, <8>.
Node <7> is connected to nodes <1>, <0>, <5>, <3>, <8>.
Node <5> is connected to nodes <6>, <3>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,20,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <2>, <4>, <1>, <0>, <8>, <6>, <3>, <7>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<2>, <4>].
Visit node <2>. Unvisited neighbors of node <2> are [<1>, <0>, <8>].
Visit node <4>. Unvisited neighbors of node <4> are [<6>].
Visit node <1>. Unvisited neighbors of node <1> are [<3>, <7>].
Visit node <0>. 
Visit node <8>. 
Visit node <6>. Unvisited neighbors of node <6> are [<5>].
Visit node <3>. 
Visit node <7>. 
Visit node <5>. 
So the BFS traversal is ","('[[<9>, <2>, <4>, <1>, <0>, <8>, <6>, <3>, <7>, <5>], [<9>, <2>, <4>, <3>, <7>, <5>, <1>, <0>, <8>, <6>], [<9>, <1>, <8>, <3>, <7>, <6>, <4>, <0>, <2>, <5>], [<9>, <2>, <4>, <1>, <0>, <8>, <3>, <5>, <6>, <7>]]',)",0,7
BFS,"[(<4>, <5>), (<4>, <3>), (<4>, <6>), (<4>, <0>), (<4>, <2>), (<5>, <6>), (<5>, <0>), (<5>, <2>), (<3>, <2>), (<3>, <4>), (<6>, <7>), (<6>, <1>), (<0>, <5>), (<0>, <6>), (<7>, <5>), (<7>, <1>)]","{<4>: [<5>, <3>, <6>, <0>, <2>],
<5>: [<6>, <0>, <2>],
<3>: [<2>, <4>],
<6>: [<7>, <1>],
<0>: [<5>, <6>],
<2>: [],
<7>: [<5>, <1>],
<1>: []}","Node <4> is connected to nodes <5>, <3>, <6>, <0>, <2>.
Node <5> is connected to nodes <6>, <0>, <2>.
Node <3> is connected to nodes <2>, <4>.
Node <6> is connected to nodes <7>, <1>.
Node <0> is connected to nodes <5>, <6>.
Node <7> is connected to nodes <5>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,16,True,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <5>, <3>, <6>, <0>, <2>, <7>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<5>, <3>, <6>, <0>, <2>].
Visit node <5>. 
Visit node <3>. 
Visit node <6>. Unvisited neighbors of node <6> are [<7>, <1>].
Visit node <0>. 
Visit node <2>. 
Visit node <7>. 
Visit node <1>. 
So the BFS traversal is ","('[[<4>, <3>, <0>, <7>, <1>, <2>, <6>, <5>], [<4>, <5>, <3>, <6>, <0>, <2>, <7>, <1>], [<4>, <5>, <7>, <1>, <3>, <6>, <0>, <2>], [<4>, <5>, <3>, <6>, <2>, <0>, <1>, <7>]]',)",1,8
BFS,"[(<5>, <1>), (<5>, <11>), (<5>, <0>), (<5>, <10>), (<1>, <7>), (<1>, <4>), (<1>, <8>), (<11>, <10>), (<11>, <4>), (<0>, <10>), (<0>, <7>), (<0>, <3>), (<10>, <5>), (<10>, <1>), (<10>, <7>), (<10>, <11>), (<7>, <3>), (<7>, <10>), (<7>, <8>), (<7>, <5>), (<7>, <1>), (<4>, <11>), (<4>, <3>), (<4>, <6>), (<8>, <3>), (<3>, <9>), (<3>, <2>), (<9>, <4>), (<9>, <8>), (<9>, <10>), (<6>, <10>), (<6>, <1>), (<6>, <11>), (<6>, <2>), (<6>, <0>)]","{<5>: [<1>, <11>, <0>, <10>],
<1>: [<7>, <4>, <8>],
<11>: [<10>, <4>],
<0>: [<10>, <7>, <3>],
<10>: [<5>, <1>, <7>, <11>],
<7>: [<3>, <10>, <8>, <5>, <1>],
<4>: [<11>, <3>, <6>],
<8>: [<3>],
<3>: [<9>, <2>],
<9>: [<4>, <8>, <10>],
<2>: [],
<6>: [<10>, <1>, <11>, <2>, <0>]}","Node <5> is connected to nodes <1>, <11>, <0>, <10>.
Node <1> is connected to nodes <7>, <4>, <8>.
Node <11> is connected to nodes <10>, <4>.
Node <0> is connected to nodes <10>, <7>, <3>.
Node <10> is connected to nodes <5>, <1>, <7>, <11>.
Node <7> is connected to nodes <3>, <10>, <8>, <5>, <1>.
Node <4> is connected to nodes <11>, <3>, <6>.
Node <8> is connected to node <3>.
Node <3> is connected to nodes <9>, <2>.
Node <9> is connected to nodes <4>, <8>, <10>.
Node <6> is connected to nodes <10>, <1>, <11>, <2>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,35,True,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <1>, <11>, <0>, <10>, <7>, <4>, <8>, <3>, <6>, <9>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<1>, <11>, <0>, <10>].
Visit node <1>. Unvisited neighbors of node <1> are [<7>, <4>, <8>].
Visit node <11>. 
Visit node <0>. Unvisited neighbors of node <0> are [<3>].
Visit node <10>. 
Visit node <7>. 
Visit node <4>. Unvisited neighbors of node <4> are [<6>].
Visit node <8>. 
Visit node <3>. Unvisited neighbors of node <3> are [<9>, <2>].
Visit node <6>. 
Visit node <9>. 
Visit node <2>. 
So the BFS traversal is ","('[[<5>, <1>, <11>, <0>, <3>, <6>, <9>, <2>, <10>, <7>, <4>, <8>], [<5>, <1>, <11>, <0>, <10>, <7>, <4>, <8>, <3>, <6>, <9>, <2>], [<5>, <1>, <11>, <0>, <10>, <7>, <6>, <2>, <8>, <3>, <9>, <4>], [<5>, <1>, <4>, <9>, <7>, <3>, <0>, <2>, <11>, <8>, <6>, <10>]]',)",1,9
BFS,"[(<8>, <3>), (<8>, <0>), (<3>, <2>), (<0>, <5>), (<2>, <1>), (<6>, <5>), (<5>, <4>), (<5>, <7>), (<4>, <1>)]","{<8>: [<3>, <0>],
<3>: [<8>, <2>],
<0>: [<8>, <5>],
<2>: [<3>, <1>],
<6>: [<5>],
<5>: [<6>, <0>, <4>, <7>],
<4>: [<5>, <1>],
<7>: [<5>],
<1>: [<2>, <4>]}","Node <8> is connected to nodes <3>, <0>.
Node <3> is connected to nodes <8>, <2>.
Node <0> is connected to nodes <8>, <5>.
Node <2> is connected to nodes <3>, <1>.
Node <6> is connected to node <5>.
Node <5> is connected to nodes <6>, <0>, <4>, <7>.
Node <4> is connected to nodes <5>, <1>.
Node <7> is connected to node <5>.
Node <1> is connected to nodes <2>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <5>, <1>, <6>, <0>, <7>, <2>, <8>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<5>, <1>].
Visit node <5>. Unvisited neighbors of node <5> are [<6>, <0>, <7>].
Visit node <1>. Unvisited neighbors of node <1> are [<2>].
Visit node <6>. 
Visit node <0>. Unvisited neighbors of node <0> are [<8>].
Visit node <7>. 
Visit node <2>. Unvisited neighbors of node <2> are [<3>].
Visit node <8>. 
Visit node <3>. 
So the BFS traversal is ","('[[<4>, <5>, <1>, <2>, <8>, <3>, <6>, <0>, <7>], [<4>, <5>, <1>, <6>, <0>, <7>, <2>, <8>, <3>], [<4>, <7>, <0>, <6>, <3>, <8>, <5>, <1>, <2>], [<4>, <5>, <1>, <6>, <3>, <0>, <2>, <7>, <8>]]',)",1,10
BFS,"[(<13>, <1>), (<13>, <8>), (<13>, <4>), (<13>, <10>), (<13>, <9>), (<13>, <11>), (<1>, <7>), (<1>, <4>), (<1>, <0>), (<1>, <10>), (<1>, <2>), (<1>, <6>), (<1>, <9>), (<1>, <11>), (<8>, <7>), (<8>, <3>), (<8>, <0>), (<8>, <2>), (<8>, <6>), (<8>, <9>), (<4>, <5>), (<4>, <12>), (<4>, <7>), (<4>, <0>), (<4>, <10>), (<4>, <2>), (<4>, <6>), (<10>, <5>), (<10>, <9>), (<9>, <12>), (<9>, <2>), (<9>, <11>), (<11>, <7>), (<11>, <3>), (<11>, <0>), (<11>, <6>), (<7>, <3>), (<7>, <2>), (<7>, <6>), (<0>, <5>), (<0>, <12>), (<0>, <3>), (<0>, <6>), (<2>, <6>), (<6>, <5>), (<6>, <12>)]","{<13>: [<1>, <8>, <4>, <10>, <9>, <11>],
<1>: [<13>, <7>, <4>, <0>, <10>, <2>, <6>, <9>, <11>],
<8>: [<13>, <7>, <3>, <0>, <2>, <6>, <9>],
<4>: [<13>, <1>, <5>, <12>, <7>, <0>, <10>, <2>, <6>],
<10>: [<13>, <1>, <5>, <4>, <9>],
<9>: [<13>, <1>, <12>, <8>, <10>, <2>, <11>],
<11>: [<13>, <1>, <7>, <3>, <0>, <6>, <9>],
<7>: [<1>, <8>, <4>, <3>, <2>, <6>, <11>],
<0>: [<1>, <5>, <12>, <8>, <4>, <3>, <6>, <11>],
<2>: [<1>, <7>, <8>, <4>, <6>, <9>],
<6>: [<1>, <5>, <12>, <7>, <8>, <4>, <0>, <2>, <11>],
<5>: [<4>, <0>, <10>, <6>],
<12>: [<4>, <0>, <6>, <9>],
<3>: [<7>, <8>, <0>, <11>]}","Node <13> is connected to nodes <1>, <8>, <4>, <10>, <9>, <11>.
Node <1> is connected to nodes <13>, <7>, <4>, <0>, <10>, <2>, <6>, <9>, <11>.
Node <8> is connected to nodes <13>, <7>, <3>, <0>, <2>, <6>, <9>.
Node <4> is connected to nodes <13>, <1>, <5>, <12>, <7>, <0>, <10>, <2>, <6>.
Node <10> is connected to nodes <13>, <1>, <5>, <4>, <9>.
Node <9> is connected to nodes <13>, <1>, <12>, <8>, <10>, <2>, <11>.
Node <11> is connected to nodes <13>, <1>, <7>, <3>, <0>, <6>, <9>.
Node <7> is connected to nodes <1>, <8>, <4>, <3>, <2>, <6>, <11>.
Node <0> is connected to nodes <1>, <5>, <12>, <8>, <4>, <3>, <6>, <11>.
Node <2> is connected to nodes <1>, <7>, <8>, <4>, <6>, <9>.
Node <6> is connected to nodes <1>, <5>, <12>, <7>, <8>, <4>, <0>, <2>, <11>.
Node <5> is connected to nodes <4>, <0>, <10>, <6>.
Node <12> is connected to nodes <4>, <0>, <6>, <9>.
Node <3> is connected to nodes <7>, <8>, <0>, <11>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,46,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <7>, <8>, <0>, <11>, <1>, <4>, <2>, <6>, <13>, <9>, <5>, <12>, <10>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<7>, <8>, <0>, <11>].
Visit node <7>. Unvisited neighbors of node <7> are [<1>, <4>, <2>, <6>].
Visit node <8>. Unvisited neighbors of node <8> are [<13>, <9>].
Visit node <0>. Unvisited neighbors of node <0> are [<5>, <12>].
Visit node <11>. 
Visit node <1>. Unvisited neighbors of node <1> are [<10>].
Visit node <4>. 
Visit node <2>. 
Visit node <6>. 
Visit node <13>. 
Visit node <9>. 
Visit node <5>. 
Visit node <12>. 
Visit node <10>. 
So the BFS traversal is ","('[[<3>, <9>, <13>, <12>, <6>, <10>, <7>, <2>, <11>, <4>, <8>, <5>, <1>, <0>], [<3>, <7>, <8>, <0>, <9>, <5>, <12>, <10>, <11>, <1>, <4>, <2>, <6>, <13>], [<3>, <7>, <8>, <0>, <11>, <1>, <4>, <2>, <6>, <13>, <9>, <5>, <12>, <10>], [<3>, <7>, <8>, <0>, <11>, <1>, <4>, <13>, <12>, <6>, <2>, <9>, <10>, <5>]]',)",2,11
BFS,"[(<8>, <5>), (<8>, <0>), (<8>, <3>), (<8>, <7>), (<5>, <1>), (<5>, <0>), (<5>, <3>), (<5>, <7>), (<5>, <4>), (<0>, <6>), (<3>, <7>), (<3>, <0>), (<7>, <5>), (<7>, <0>), (<7>, <3>), (<4>, <5>), (<4>, <1>), (<4>, <8>), (<1>, <6>), (<1>, <8>), (<6>, <2>), (<6>, <8>), (<6>, <4>), (<6>, <5>), (<6>, <1>), (<6>, <0>), (<2>, <8>), (<2>, <6>)]","{<8>: [<5>, <0>, <3>, <7>],
<5>: [<1>, <0>, <3>, <7>, <4>],
<0>: [<6>],
<3>: [<7>, <0>],
<7>: [<5>, <0>, <3>],
<4>: [<5>, <1>, <8>],
<1>: [<6>, <8>],
<6>: [<2>, <8>, <4>, <5>, <1>, <0>],
<2>: [<8>, <6>]}","Node <8> is connected to nodes <5>, <0>, <3>, <7>.
Node <5> is connected to nodes <1>, <0>, <3>, <7>, <4>.
Node <0> is connected to node <6>.
Node <3> is connected to nodes <7>, <0>.
Node <7> is connected to nodes <5>, <0>, <3>.
Node <4> is connected to nodes <5>, <1>, <8>.
Node <1> is connected to nodes <6>, <8>.
Node <6> is connected to nodes <2>, <8>, <4>, <5>, <1>, <0>.
Node <2> is connected to nodes <8>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,28,True,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <6>, <2>, <8>, <4>, <5>, <1>, <3>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<6>].
Visit node <6>. Unvisited neighbors of node <6> are [<2>, <8>, <4>, <5>, <1>].
Visit node <2>. 
Visit node <8>. Unvisited neighbors of node <8> are [<3>, <7>].
Visit node <4>. 
Visit node <5>. 
Visit node <1>. 
Visit node <3>. 
Visit node <7>. 
So the BFS traversal is ","('[[<0>, <6>, <2>, <8>, <4>, <5>, <1>, <3>, <7>], [<0>, <6>, <4>, <1>, <7>, <5>, <3>, <2>, <8>], [<0>, <6>, <2>, <1>, <3>, <7>, <8>, <4>, <5>], [<0>, <6>, <2>, <8>, <5>, <1>, <4>, <7>, <3>]]',)",0,12
BFS,"[(<7>, <11>), (<7>, <6>), (<7>, <0>), (<7>, <3>), (<7>, <8>), (<11>, <0>), (<11>, <1>), (<11>, <3>), (<11>, <5>), (<6>, <7>), (<0>, <6>), (<3>, <5>), (<3>, <11>), (<3>, <6>), (<3>, <1>), (<8>, <11>), (<1>, <5>), (<1>, <11>), (<1>, <4>), (<5>, <9>), (<5>, <11>), (<10>, <4>), (<10>, <5>), (<10>, <9>), (<4>, <1>), (<4>, <2>), (<4>, <9>), (<4>, <8>), (<4>, <10>), (<9>, <2>), (<9>, <3>), (<2>, <8>), (<2>, <7>), (<2>, <4>)]","{<7>: [<11>, <6>, <0>, <3>, <8>],
<11>: [<0>, <1>, <3>, <5>],
<6>: [<7>],
<0>: [<6>],
<3>: [<5>, <11>, <6>, <1>],
<8>: [<11>],
<1>: [<5>, <11>, <4>],
<5>: [<9>, <11>],
<10>: [<4>, <5>, <9>],
<4>: [<1>, <2>, <9>, <8>, <10>],
<9>: [<2>, <3>],
<2>: [<8>, <7>, <4>]}","Node <7> is connected to nodes <11>, <6>, <0>, <3>, <8>.
Node <11> is connected to nodes <0>, <1>, <3>, <5>.
Node <6> is connected to node <7>.
Node <0> is connected to node <6>.
Node <3> is connected to nodes <5>, <11>, <6>, <1>.
Node <8> is connected to node <11>.
Node <1> is connected to nodes <5>, <11>, <4>.
Node <5> is connected to nodes <9>, <11>.
Node <10> is connected to nodes <4>, <5>, <9>.
Node <4> is connected to nodes <1>, <2>, <9>, <8>, <10>.
Node <9> is connected to nodes <2>, <3>.
Node <2> is connected to nodes <8>, <7>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,34,True,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <11>, <0>, <1>, <3>, <5>, <6>, <4>, <9>, <7>, <2>, <10>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<11>].
Visit node <11>. Unvisited neighbors of node <11> are [<0>, <1>, <3>, <5>].
Visit node <0>. Unvisited neighbors of node <0> are [<6>].
Visit node <1>. Unvisited neighbors of node <1> are [<4>].
Visit node <3>. 
Visit node <5>. Unvisited neighbors of node <5> are [<9>].
Visit node <6>. Unvisited neighbors of node <6> are [<7>].
Visit node <4>. Unvisited neighbors of node <4> are [<2>, <10>].
Visit node <9>. 
Visit node <7>. 
Visit node <2>. 
Visit node <10>. 
So the BFS traversal is ","('[[<8>, <11>, <0>, <1>, <3>, <5>, <6>, <4>, <9>, <7>, <2>, <10>], [<8>, <11>, <5>, <7>, <6>, <2>, <0>, <9>, <3>, <10>, <4>, <1>], [<8>, <11>, <0>, <1>, <3>, <5>, <2>, <7>, <9>, <4>, <10>, <6>], [<8>, <11>, <0>, <1>, <9>, <7>, <2>, <10>, <3>, <5>, <6>, <4>]]',)",0,13
BFS,"[(<7>, <1>), (<7>, <5>), (<7>, <2>), (<5>, <3>), (<2>, <6>), (<2>, <5>), (<6>, <3>), (<6>, <8>), (<6>, <0>), (<6>, <2>), (<3>, <6>), (<3>, <5>), (<8>, <0>), (<8>, <1>), (<8>, <6>), (<8>, <5>), (<8>, <3>), (<0>, <7>), (<0>, <5>), (<0>, <8>), (<4>, <7>), (<4>, <3>), (<4>, <0>), (<4>, <2>)]","{<7>: [<1>, <5>, <2>],
<1>: [],
<5>: [<3>],
<2>: [<6>, <5>],
<6>: [<3>, <8>, <0>, <2>],
<3>: [<6>, <5>],
<8>: [<0>, <1>, <6>, <5>, <3>],
<0>: [<7>, <5>, <8>],
<4>: [<7>, <3>, <0>, <2>]}","Node <7> is connected to nodes <1>, <5>, <2>.
Node <5> is connected to node <3>.
Node <2> is connected to nodes <6>, <5>.
Node <6> is connected to nodes <3>, <8>, <0>, <2>.
Node <3> is connected to nodes <6>, <5>.
Node <8> is connected to nodes <0>, <1>, <6>, <5>, <3>.
Node <0> is connected to nodes <7>, <5>, <8>.
Node <4> is connected to nodes <7>, <3>, <0>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,24,True,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <6>, <5>, <3>, <8>, <0>, <1>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<6>, <5>].
Visit node <6>. Unvisited neighbors of node <6> are [<3>, <8>, <0>].
Visit node <5>. 
Visit node <3>. 
Visit node <8>. Unvisited neighbors of node <8> are [<1>].
Visit node <0>. Unvisited neighbors of node <0> are [<7>].
Visit node <1>. 
Visit node <7>. 
So the BFS traversal is ","('[[<2>, <5>, <7>, <8>, <0>, <3>, <6>, <1>], [<2>, <6>, <1>, <7>, <5>, <3>, <8>, <0>], [<2>, <6>, <5>, <3>, <8>, <0>, <1>, <7>], [<2>, <6>, <5>, <3>, <8>, <1>, <7>, <0>]]',)",2,14
BFS,"[(<5>, <1>), (<5>, <4>), (<5>, <9>), (<5>, <10>), (<5>, <2>), (<5>, <8>), (<1>, <6>), (<1>, <0>), (<9>, <3>), (<6>, <7>)]","{<5>: [<1>, <4>, <9>, <10>, <2>, <8>],
<1>: [<5>, <6>, <0>],
<4>: [<5>],
<9>: [<5>, <3>],
<10>: [<5>],
<2>: [<5>],
<8>: [<5>],
<6>: [<1>, <7>],
<0>: [<1>],
<3>: [<9>],
<7>: [<6>]}","Node <5> is connected to nodes <1>, <4>, <9>, <10>, <2>, <8>.
Node <1> is connected to nodes <5>, <6>, <0>.
Node <4> is connected to node <5>.
Node <9> is connected to nodes <5>, <3>.
Node <10> is connected to node <5>.
Node <2> is connected to node <5>.
Node <8> is connected to node <5>.
Node <6> is connected to nodes <1>, <7>.
Node <0> is connected to node <1>.
Node <3> is connected to node <9>.
Node <7> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,10,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <1>, <5>, <6>, <4>, <9>, <10>, <2>, <8>, <7>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<1>].
Visit node <1>. Unvisited neighbors of node <1> are [<5>, <6>].
Visit node <5>. Unvisited neighbors of node <5> are [<4>, <9>, <10>, <2>, <8>].
Visit node <6>. Unvisited neighbors of node <6> are [<7>].
Visit node <4>. 
Visit node <9>. Unvisited neighbors of node <9> are [<3>].
Visit node <10>. 
Visit node <2>. 
Visit node <8>. 
Visit node <7>. 
Visit node <3>. 
So the BFS traversal is ","('[[<0>, <8>, <3>, <4>, <5>, <1>, <6>, <10>, <7>, <9>, <2>], [<0>, <1>, <5>, <6>, <4>, <9>, <10>, <2>, <8>, <7>, <3>], [<0>, <1>, <5>, <8>, <7>, <3>, <6>, <4>, <9>, <10>, <2>], [<0>, <1>, <5>, <6>, <4>, <2>, <8>, <7>, <10>, <3>, <9>]]',)",1,15
BFS,"[(<0>, <5>), (<0>, <7>), (<0>, <3>), (<5>, <3>), (<5>, <0>), (<7>, <5>), (<7>, <2>), (<3>, <9>), (<3>, <7>), (<8>, <2>), (<8>, <7>), (<8>, <3>), (<8>, <0>), (<8>, <5>), (<2>, <4>), (<2>, <0>), (<4>, <6>), (<4>, <9>), (<4>, <0>), (<4>, <2>), (<4>, <1>), (<1>, <3>), (<1>, <6>), (<1>, <5>), (<1>, <8>), (<1>, <7>), (<6>, <2>), (<6>, <3>), (<9>, <0>), (<9>, <7>), (<9>, <1>), (<9>, <3>)]","{<0>: [<5>, <7>, <3>],
<5>: [<3>, <0>],
<7>: [<5>, <2>],
<3>: [<9>, <7>],
<8>: [<2>, <7>, <3>, <0>, <5>],
<2>: [<4>, <0>],
<4>: [<6>, <9>, <0>, <2>, <1>],
<1>: [<3>, <6>, <5>, <8>, <7>],
<6>: [<2>, <3>],
<9>: [<0>, <7>, <1>, <3>]}","Node <0> is connected to nodes <5>, <7>, <3>.
Node <5> is connected to nodes <3>, <0>.
Node <7> is connected to nodes <5>, <2>.
Node <3> is connected to nodes <9>, <7>.
Node <8> is connected to nodes <2>, <7>, <3>, <0>, <5>.
Node <2> is connected to nodes <4>, <0>.
Node <4> is connected to nodes <6>, <9>, <0>, <2>, <1>.
Node <1> is connected to nodes <3>, <6>, <5>, <8>, <7>.
Node <6> is connected to nodes <2>, <3>.
Node <9> is connected to nodes <0>, <7>, <1>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,32,True,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <5>, <2>, <3>, <0>, <4>, <9>, <6>, <1>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<5>, <2>].
Visit node <5>. Unvisited neighbors of node <5> are [<3>, <0>].
Visit node <2>. Unvisited neighbors of node <2> are [<4>].
Visit node <3>. Unvisited neighbors of node <3> are [<9>].
Visit node <0>. 
Visit node <4>. Unvisited neighbors of node <4> are [<6>, <1>].
Visit node <9>. 
Visit node <6>. 
Visit node <1>. Unvisited neighbors of node <1> are [<8>].
Visit node <8>. 
So the BFS traversal is ","('[[<7>, <0>, <3>, <1>, <8>, <5>, <4>, <2>, <9>, <6>], [<7>, <5>, <2>, <3>, <0>, <1>, <9>, <6>, <4>, <8>], [<7>, <5>, <2>, <3>, <0>, <4>, <9>, <6>, <1>, <8>], [<7>, <5>, <2>, <6>, <1>, <8>, <3>, <0>, <4>, <9>]]',)",2,16
BFS,"[(<8>, <0>), (<8>, <3>), (<8>, <6>), (<0>, <6>), (<0>, <3>), (<0>, <5>), (<3>, <5>), (<3>, <4>), (<3>, <2>), (<6>, <9>), (<6>, <4>), (<6>, <2>), (<6>, <7>), (<5>, <9>), (<9>, <1>), (<9>, <7>), (<1>, <4>), (<1>, <2>), (<7>, <4>), (<4>, <2>)]","{<8>: [<0>, <3>, <6>],
<0>: [<8>, <6>, <3>, <5>],
<3>: [<8>, <0>, <5>, <4>, <2>],
<6>: [<8>, <0>, <9>, <4>, <2>, <7>],
<5>: [<0>, <9>, <3>],
<9>: [<5>, <1>, <6>, <7>],
<1>: [<9>, <4>, <2>],
<7>: [<9>, <4>, <6>],
<4>: [<2>, <3>, <6>, <1>, <7>],
<2>: [<4>, <3>, <6>, <1>]}","Node <8> is connected to nodes <0>, <3>, <6>.
Node <0> is connected to nodes <8>, <6>, <3>, <5>.
Node <3> is connected to nodes <8>, <0>, <5>, <4>, <2>.
Node <6> is connected to nodes <8>, <0>, <9>, <4>, <2>, <7>.
Node <5> is connected to nodes <0>, <9>, <3>.
Node <9> is connected to nodes <5>, <1>, <6>, <7>.
Node <1> is connected to nodes <9>, <4>, <2>.
Node <7> is connected to nodes <9>, <4>, <6>.
Node <4> is connected to nodes <2>, <3>, <6>, <1>, <7>.
Node <2> is connected to nodes <4>, <3>, <6>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,20,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <4>, <3>, <6>, <1>, <7>, <8>, <0>, <5>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<4>, <3>, <6>, <1>].
Visit node <4>. Unvisited neighbors of node <4> are [<7>].
Visit node <3>. Unvisited neighbors of node <3> are [<8>, <0>, <5>].
Visit node <6>. Unvisited neighbors of node <6> are [<9>].
Visit node <1>. 
Visit node <7>. 
Visit node <8>. 
Visit node <0>. 
Visit node <5>. 
Visit node <9>. 
So the BFS traversal is ","('[[<2>, <4>, <3>, <6>, <1>, <0>, <7>, <9>, <8>, <5>], [<2>, <3>, <5>, <6>, <0>, <8>, <7>, <4>, <9>, <1>], [<2>, <4>, <3>, <6>, <1>, <7>, <8>, <0>, <5>, <9>], [<2>, <4>, <3>, <0>, <5>, <9>, <6>, <1>, <7>, <8>]]',)",2,17
BFS,"[(<11>, <4>), (<11>, <1>), (<11>, <0>), (<4>, <7>), (<4>, <5>), (<1>, <0>), (<1>, <6>), (<0>, <13>), (<0>, <7>), (<0>, <8>), (<0>, <10>), (<0>, <6>), (<0>, <3>), (<0>, <12>), (<7>, <13>), (<7>, <9>), (<7>, <2>), (<7>, <8>), (<5>, <9>), (<9>, <3>), (<2>, <8>), (<8>, <10>), (<8>, <12>), (<8>, <3>)]","{<11>: [<4>, <1>, <0>],
<4>: [<11>, <7>, <5>],
<1>: [<11>, <0>, <6>],
<0>: [<11>, <13>, <7>, <8>, <10>, <6>, <1>, <3>, <12>],
<7>: [<4>, <13>, <9>, <2>, <8>, <0>],
<5>: [<4>, <9>],
<13>: [<7>, <0>],
<9>: [<7>, <3>, <5>],
<2>: [<7>, <8>],
<8>: [<7>, <10>, <12>, <0>, <3>, <2>],
<3>: [<9>, <8>, <0>],
<10>: [<8>, <0>],
<12>: [<8>, <0>],
<6>: [<0>, <1>]}","Node <11> is connected to nodes <4>, <1>, <0>.
Node <4> is connected to nodes <11>, <7>, <5>.
Node <1> is connected to nodes <11>, <0>, <6>.
Node <0> is connected to nodes <11>, <13>, <7>, <8>, <10>, <6>, <1>, <3>, <12>.
Node <7> is connected to nodes <4>, <13>, <9>, <2>, <8>, <0>.
Node <5> is connected to nodes <4>, <9>.
Node <13> is connected to nodes <7>, <0>.
Node <9> is connected to nodes <7>, <3>, <5>.
Node <2> is connected to nodes <7>, <8>.
Node <8> is connected to nodes <7>, <10>, <12>, <0>, <3>, <2>.
Node <3> is connected to nodes <9>, <8>, <0>.
Node <10> is connected to nodes <8>, <0>.
Node <12> is connected to nodes <8>, <0>.
Node <6> is connected to nodes <0>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,24,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <7>, <8>, <4>, <13>, <9>, <0>, <10>, <12>, <3>, <11>, <5>, <6>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<7>, <8>].
Visit node <7>. Unvisited neighbors of node <7> are [<4>, <13>, <9>, <0>].
Visit node <8>. Unvisited neighbors of node <8> are [<10>, <12>, <3>].
Visit node <4>. Unvisited neighbors of node <4> are [<11>, <5>].
Visit node <13>. 
Visit node <9>. 
Visit node <0>. Unvisited neighbors of node <0> are [<6>, <1>].
Visit node <10>. 
Visit node <12>. 
Visit node <3>. 
Visit node <11>. 
Visit node <5>. 
Visit node <6>. 
Visit node <1>. 
So the BFS traversal is ","('[[<2>, <4>, <1>, <6>, <5>, <7>, <9>, <13>, <11>, <0>, <8>, <10>, <12>, <3>], [<2>, <7>, <8>, <4>, <13>, <9>, <0>, <11>, <3>, <10>, <1>, <5>, <12>, <6>], [<2>, <7>, <8>, <4>, <13>, <9>, <0>, <10>, <12>, <3>, <11>, <5>, <6>, <1>], [<2>, <7>, <8>, <4>, <11>, <5>, <6>, <1>, <13>, <9>, <0>, <10>, <12>, <3>]]',)",2,18
BFS,"[(<12>, <1>), (<12>, <5>), (<12>, <4>), (<12>, <2>), (<12>, <3>), (<12>, <8>), (<1>, <10>), (<1>, <4>), (<1>, <8>), (<1>, <6>), (<1>, <9>), (<1>, <2>), (<1>, <7>), (<2>, <3>), (<2>, <0>), (<2>, <7>), (<3>, <9>), (<3>, <11>), (<3>, <10>), (<6>, <9>), (<7>, <11>), (<11>, <0>)]","{<12>: [<1>, <5>, <4>, <2>, <3>, <8>],
<1>: [<12>, <10>, <4>, <8>, <6>, <9>, <2>, <7>],
<5>: [<12>],
<4>: [<12>, <1>],
<2>: [<12>, <1>, <3>, <0>, <7>],
<3>: [<12>, <9>, <11>, <2>, <10>],
<8>: [<12>, <1>],
<10>: [<1>, <3>],
<6>: [<1>, <9>],
<9>: [<1>, <3>, <6>],
<7>: [<1>, <11>, <2>],
<11>: [<3>, <0>, <7>],
<0>: [<11>, <2>]}","Node <12> is connected to nodes <1>, <5>, <4>, <2>, <3>, <8>.
Node <1> is connected to nodes <12>, <10>, <4>, <8>, <6>, <9>, <2>, <7>.
Node <5> is connected to node <12>.
Node <4> is connected to nodes <12>, <1>.
Node <2> is connected to nodes <12>, <1>, <3>, <0>, <7>.
Node <3> is connected to nodes <12>, <9>, <11>, <2>, <10>.
Node <8> is connected to nodes <12>, <1>.
Node <10> is connected to nodes <1>, <3>.
Node <6> is connected to nodes <1>, <9>.
Node <9> is connected to nodes <1>, <3>, <6>.
Node <7> is connected to nodes <1>, <11>, <2>.
Node <11> is connected to nodes <3>, <0>, <7>.
Node <0> is connected to nodes <11>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,22,False,"Start from node <11>, output a sequence of traversal in breadth-first search (BFS) order.","[<11>, <3>, <0>, <7>, <12>, <9>, <2>, <10>, <1>, <5>, <4>, <8>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <11>. Unvisited neighbors of node <11> are [<3>, <0>, <7>].
Visit node <3>. Unvisited neighbors of node <3> are [<12>, <9>, <2>, <10>].
Visit node <0>. 
Visit node <7>. Unvisited neighbors of node <7> are [<1>].
Visit node <12>. Unvisited neighbors of node <12> are [<5>, <4>, <8>].
Visit node <9>. Unvisited neighbors of node <9> are [<6>].
Visit node <2>. 
Visit node <10>. 
Visit node <1>. 
Visit node <5>. 
Visit node <4>. 
Visit node <8>. 
Visit node <6>. 
So the BFS traversal is ","('[[<11>, <3>, <0>, <7>, <12>, <9>, <2>, <8>, <10>, <5>, <1>, <6>, <4>], [<11>, <3>, <0>, <7>, <12>, <9>, <2>, <10>, <1>, <5>, <4>, <8>, <6>], [<11>, <3>, <0>, <7>, <5>, <4>, <8>, <6>, <12>, <9>, <2>, <10>, <1>], [<11>, <0>, <4>, <12>, <5>, <2>, <10>, <9>, <1>, <6>, <8>, <3>, <7>]]',)",1,19
BFS,"[(<7>, <4>), (<7>, <2>), (<4>, <3>), (<2>, <1>), (<3>, <8>), (<8>, <1>), (<1>, <0>), (<1>, <6>), (<0>, <5>)]","{<7>: [<4>, <2>],
<4>: [<7>, <3>],
<2>: [<7>, <1>],
<3>: [<4>, <8>],
<8>: [<1>, <3>],
<1>: [<8>, <0>, <2>, <6>],
<0>: [<1>, <5>],
<6>: [<1>],
<5>: [<0>]}","Node <7> is connected to nodes <4>, <2>.
Node <4> is connected to nodes <7>, <3>.
Node <2> is connected to nodes <7>, <1>.
Node <3> is connected to nodes <4>, <8>.
Node <8> is connected to nodes <1>, <3>.
Node <1> is connected to nodes <8>, <0>, <2>, <6>.
Node <0> is connected to nodes <1>, <5>.
Node <6> is connected to node <1>.
Node <5> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <8>, <0>, <2>, <6>, <3>, <5>, <7>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<8>, <0>, <2>, <6>].
Visit node <8>. Unvisited neighbors of node <8> are [<3>].
Visit node <0>. Unvisited neighbors of node <0> are [<5>].
Visit node <2>. Unvisited neighbors of node <2> are [<7>].
Visit node <6>. 
Visit node <3>. Unvisited neighbors of node <3> are [<4>].
Visit node <5>. 
Visit node <7>. 
Visit node <4>. 
So the BFS traversal is ","('[[<1>, <8>, <0>, <2>, <4>, <5>, <6>, <7>, <3>], [<1>, <5>, <6>, <8>, <7>, <4>, <0>, <2>, <3>], [<1>, <8>, <0>, <5>, <7>, <4>, <2>, <6>, <3>], [<1>, <8>, <0>, <2>, <6>, <3>, <5>, <7>, <4>]]',)",3,20
BFS,"[(<10>, <3>), (<10>, <5>), (<10>, <2>), (<10>, <0>), (<10>, <9>), (<10>, <7>), (<10>, <1>), (<10>, <11>), (<3>, <2>), (<3>, <0>), (<3>, <9>), (<3>, <4>), (<3>, <1>), (<3>, <6>), (<5>, <2>), (<5>, <8>), (<5>, <0>), (<5>, <9>), (<5>, <4>), (<5>, <7>), (<5>, <1>), (<5>, <6>), (<5>, <11>), (<2>, <8>), (<2>, <0>), (<2>, <9>), (<2>, <4>), (<2>, <7>), (<2>, <1>), (<2>, <6>), (<0>, <8>), (<0>, <9>), (<0>, <7>), (<0>, <1>), (<0>, <6>), (<0>, <11>), (<9>, <8>), (<9>, <4>), (<9>, <1>), (<9>, <6>), (<9>, <11>), (<7>, <4>), (<7>, <6>), (<7>, <11>), (<1>, <8>), (<1>, <6>), (<1>, <11>), (<11>, <8>), (<11>, <4>), (<11>, <6>), (<4>, <8>), (<4>, <6>)]","{<10>: [<3>, <5>, <2>, <0>, <9>, <7>, <1>, <11>],
<3>: [<10>, <2>, <0>, <9>, <4>, <1>, <6>],
<5>: [<10>, <2>, <8>, <0>, <9>, <4>, <7>, <1>, <6>, <11>],
<2>: [<10>, <3>, <5>, <8>, <0>, <9>, <4>, <7>, <1>, <6>],
<0>: [<10>, <3>, <5>, <2>, <8>, <9>, <7>, <1>, <6>, <11>],
<9>: [<10>, <3>, <5>, <2>, <8>, <0>, <4>, <1>, <6>, <11>],
<7>: [<10>, <5>, <2>, <0>, <4>, <6>, <11>],
<1>: [<10>, <3>, <5>, <2>, <8>, <0>, <9>, <6>, <11>],
<11>: [<10>, <5>, <8>, <0>, <9>, <4>, <7>, <1>, <6>],
<4>: [<3>, <5>, <2>, <8>, <9>, <7>, <6>, <11>],
<6>: [<3>, <5>, <2>, <0>, <9>, <4>, <7>, <1>, <11>],
<8>: [<5>, <2>, <0>, <9>, <4>, <1>, <11>]}","Node <10> is connected to nodes <3>, <5>, <2>, <0>, <9>, <7>, <1>, <11>.
Node <3> is connected to nodes <10>, <2>, <0>, <9>, <4>, <1>, <6>.
Node <5> is connected to nodes <10>, <2>, <8>, <0>, <9>, <4>, <7>, <1>, <6>, <11>.
Node <2> is connected to nodes <10>, <3>, <5>, <8>, <0>, <9>, <4>, <7>, <1>, <6>.
Node <0> is connected to nodes <10>, <3>, <5>, <2>, <8>, <9>, <7>, <1>, <6>, <11>.
Node <9> is connected to nodes <10>, <3>, <5>, <2>, <8>, <0>, <4>, <1>, <6>, <11>.
Node <7> is connected to nodes <10>, <5>, <2>, <0>, <4>, <6>, <11>.
Node <1> is connected to nodes <10>, <3>, <5>, <2>, <8>, <0>, <9>, <6>, <11>.
Node <11> is connected to nodes <10>, <5>, <8>, <0>, <9>, <4>, <7>, <1>, <6>.
Node <4> is connected to nodes <3>, <5>, <2>, <8>, <9>, <7>, <6>, <11>.
Node <6> is connected to nodes <3>, <5>, <2>, <0>, <9>, <4>, <7>, <1>, <11>.
Node <8> is connected to nodes <5>, <2>, <0>, <9>, <4>, <1>, <11>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,52,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <3>, <5>, <2>, <8>, <9>, <7>, <6>, <11>, <10>, <0>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<3>, <5>, <2>, <8>, <9>, <7>, <6>, <11>].
Visit node <3>. Unvisited neighbors of node <3> are [<10>, <0>, <1>].
Visit node <5>. 
Visit node <2>. 
Visit node <8>. 
Visit node <9>. 
Visit node <7>. 
Visit node <6>. 
Visit node <11>. 
Visit node <10>. 
Visit node <0>. 
Visit node <1>. 
So the BFS traversal is ","('[[<4>, <6>, <9>, <11>, <7>, <10>, <8>, <5>, <1>, <3>, <2>, <0>], [<4>, <3>, <5>, <2>, <8>, <9>, <7>, <6>, <11>, <10>, <0>, <1>], [<4>, <3>, <5>, <2>, <8>, <9>, <7>, <10>, <0>, <11>, <1>, <6>], [<4>, <3>, <5>, <2>, <11>, <10>, <0>, <1>, <8>, <9>, <7>, <6>]]',)",1,21
BFS,"[(<5>, <1>), (<5>, <4>), (<5>, <6>), (<5>, <2>), (<6>, <3>), (<6>, <0>), (<2>, <7>)]","{<5>: [<1>, <4>, <6>, <2>],
<1>: [<5>],
<4>: [<5>],
<6>: [<5>, <3>, <0>],
<2>: [<5>, <7>],
<7>: [<2>],
<3>: [<6>],
<0>: [<6>]}","Node <5> is connected to nodes <1>, <4>, <6>, <2>.
Node <1> is connected to node <5>.
Node <4> is connected to node <5>.
Node <6> is connected to nodes <5>, <3>, <0>.
Node <2> is connected to nodes <5>, <7>.
Node <7> is connected to node <2>.
Node <3> is connected to node <6>.
Node <0> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,7,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <5>, <7>, <1>, <4>, <6>, <3>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<5>, <7>].
Visit node <5>. Unvisited neighbors of node <5> are [<1>, <4>, <6>].
Visit node <7>. 
Visit node <1>. 
Visit node <4>. 
Visit node <6>. Unvisited neighbors of node <6> are [<3>, <0>].
Visit node <3>. 
Visit node <0>. 
So the BFS traversal is ","('[[<2>, <0>, <6>, <1>, <7>, <5>, <3>, <4>], [<2>, <5>, <7>, <1>, <4>, <6>, <3>, <0>], [<2>, <5>, <3>, <0>, <7>, <1>, <4>, <6>], [<2>, <5>, <7>, <1>, <4>, <6>, <3>, <0>]]',)",1,22
BFS,"[(<13>, <6>), (<13>, <3>), (<13>, <0>), (<13>, <5>), (<13>, <4>), (<13>, <8>), (<13>, <12>), (<13>, <10>), (<13>, <7>), (<6>, <3>), (<6>, <0>), (<6>, <2>), (<6>, <9>), (<6>, <5>), (<6>, <11>), (<6>, <4>), (<6>, <8>), (<6>, <12>), (<6>, <10>), (<6>, <7>), (<3>, <0>), (<3>, <2>), (<3>, <1>), (<3>, <5>), (<3>, <11>), (<3>, <4>), (<3>, <10>), (<3>, <7>), (<0>, <2>), (<0>, <1>), (<0>, <5>), (<0>, <11>), (<0>, <8>), (<0>, <10>), (<5>, <11>), (<5>, <4>), (<5>, <8>), (<5>, <10>), (<4>, <9>), (<4>, <1>), (<4>, <11>), (<4>, <8>), (<4>, <12>), (<4>, <7>), (<8>, <9>), (<8>, <10>), (<12>, <9>), (<12>, <1>), (<12>, <11>), (<12>, <7>), (<10>, <1>), (<10>, <7>), (<7>, <2>), (<7>, <9>), (<7>, <1>), (<7>, <11>), (<2>, <9>), (<2>, <1>), (<2>, <11>), (<9>, <1>), (<9>, <11>)]","{<13>: [<6>, <3>, <0>, <5>, <4>, <8>, <12>, <10>, <7>],
<6>: [<13>, <3>, <0>, <2>, <9>, <5>, <11>, <4>, <8>, <12>, <10>, <7>],
<3>: [<13>, <6>, <0>, <2>, <1>, <5>, <11>, <4>, <10>, <7>],
<0>: [<13>, <6>, <3>, <2>, <1>, <5>, <11>, <8>, <10>],
<5>: [<13>, <6>, <3>, <0>, <11>, <4>, <8>, <10>],
<4>: [<13>, <6>, <3>, <9>, <1>, <5>, <11>, <8>, <12>, <7>],
<8>: [<13>, <6>, <0>, <9>, <5>, <4>, <10>],
<12>: [<13>, <6>, <9>, <1>, <11>, <4>, <7>],
<10>: [<13>, <6>, <3>, <0>, <1>, <5>, <8>, <7>],
<7>: [<13>, <6>, <3>, <2>, <9>, <1>, <11>, <4>, <12>, <10>],
<2>: [<6>, <3>, <0>, <9>, <1>, <11>, <7>],
<9>: [<6>, <2>, <1>, <11>, <4>, <8>, <12>, <7>],
<11>: [<6>, <3>, <0>, <2>, <9>, <5>, <4>, <12>, <7>],
<1>: [<3>, <0>, <2>, <9>, <4>, <12>, <10>, <7>]}","Node <13> is connected to nodes <6>, <3>, <0>, <5>, <4>, <8>, <12>, <10>, <7>.
Node <6> is connected to nodes <13>, <3>, <0>, <2>, <9>, <5>, <11>, <4>, <8>, <12>, <10>, <7>.
Node <3> is connected to nodes <13>, <6>, <0>, <2>, <1>, <5>, <11>, <4>, <10>, <7>.
Node <0> is connected to nodes <13>, <6>, <3>, <2>, <1>, <5>, <11>, <8>, <10>.
Node <5> is connected to nodes <13>, <6>, <3>, <0>, <11>, <4>, <8>, <10>.
Node <4> is connected to nodes <13>, <6>, <3>, <9>, <1>, <5>, <11>, <8>, <12>, <7>.
Node <8> is connected to nodes <13>, <6>, <0>, <9>, <5>, <4>, <10>.
Node <12> is connected to nodes <13>, <6>, <9>, <1>, <11>, <4>, <7>.
Node <10> is connected to nodes <13>, <6>, <3>, <0>, <1>, <5>, <8>, <7>.
Node <7> is connected to nodes <13>, <6>, <3>, <2>, <9>, <1>, <11>, <4>, <12>, <10>.
Node <2> is connected to nodes <6>, <3>, <0>, <9>, <1>, <11>, <7>.
Node <9> is connected to nodes <6>, <2>, <1>, <11>, <4>, <8>, <12>, <7>.
Node <11> is connected to nodes <6>, <3>, <0>, <2>, <9>, <5>, <4>, <12>, <7>.
Node <1> is connected to nodes <3>, <0>, <2>, <9>, <4>, <12>, <10>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,61,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <13>, <6>, <3>, <2>, <1>, <5>, <11>, <8>, <10>, <4>, <12>, <7>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<13>, <6>, <3>, <2>, <1>, <5>, <11>, <8>, <10>].
Visit node <13>. Unvisited neighbors of node <13> are [<4>, <12>, <7>].
Visit node <6>. Unvisited neighbors of node <6> are [<9>].
Visit node <3>. 
Visit node <2>. 
Visit node <1>. 
Visit node <5>. 
Visit node <11>. 
Visit node <8>. 
Visit node <10>. 
Visit node <4>. 
Visit node <12>. 
Visit node <7>. 
Visit node <9>. 
So the BFS traversal is ","('[[<0>, <13>, <6>, <3>, <2>, <1>, <5>, <11>, <8>, <10>, <4>, <12>, <7>, <9>], [<0>, <8>, <11>, <1>, <13>, <3>, <7>, <9>, <5>, <2>, <10>, <6>, <4>, <12>], [<0>, <13>, <6>, <3>, <2>, <1>, <5>, <7>, <8>, <11>, <10>, <9>, <12>, <4>], [<0>, <13>, <6>, <3>, <4>, <12>, <7>, <9>, <2>, <1>, <5>, <11>, <8>, <10>]]',)",0,23
BFS,"[(<7>, <5>), (<7>, <6>), (<5>, <8>), (<6>, <9>), (<8>, <1>), (<8>, <10>), (<9>, <2>), (<1>, <4>), (<1>, <3>), (<4>, <0>), (<0>, <10>)]","{<7>: [<5>, <6>],
<5>: [<7>, <8>],
<6>: [<7>, <9>],
<8>: [<5>, <1>, <10>],
<9>: [<6>, <2>],
<2>: [<9>],
<1>: [<4>, <3>, <8>],
<4>: [<1>, <0>],
<3>: [<1>],
<0>: [<4>, <10>],
<10>: [<8>, <0>]}","Node <7> is connected to nodes <5>, <6>.
Node <5> is connected to nodes <7>, <8>.
Node <6> is connected to nodes <7>, <9>.
Node <8> is connected to nodes <5>, <1>, <10>.
Node <9> is connected to nodes <6>, <2>.
Node <2> is connected to node <9>.
Node <1> is connected to nodes <4>, <3>, <8>.
Node <4> is connected to nodes <1>, <0>.
Node <3> is connected to node <1>.
Node <0> is connected to nodes <4>, <10>.
Node <10> is connected to nodes <8>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,11,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <4>, <10>, <1>, <8>, <3>, <5>, <7>, <6>, <9>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<4>, <10>].
Visit node <4>. Unvisited neighbors of node <4> are [<1>].
Visit node <10>. Unvisited neighbors of node <10> are [<8>].
Visit node <1>. Unvisited neighbors of node <1> are [<3>].
Visit node <8>. Unvisited neighbors of node <8> are [<5>].
Visit node <3>. 
Visit node <5>. Unvisited neighbors of node <5> are [<7>].
Visit node <7>. Unvisited neighbors of node <7> are [<6>].
Visit node <6>. Unvisited neighbors of node <6> are [<9>].
Visit node <9>. Unvisited neighbors of node <9> are [<2>].
Visit node <2>. 
So the BFS traversal is ","('[[<0>, <4>, <10>, <1>, <8>, <9>, <2>, <3>, <5>, <7>, <6>], [<0>, <4>, <10>, <1>, <8>, <3>, <5>, <7>, <6>, <9>, <2>], [<0>, <6>, <4>, <1>, <8>, <9>, <3>, <10>, <5>, <2>, <7>], [<0>, <4>, <10>, <6>, <9>, <2>, <1>, <8>, <3>, <5>, <7>]]',)",1,24
BFS,"[(<1>, <7>), (<1>, <10>), (<1>, <4>), (<1>, <3>), (<1>, <9>), (<7>, <5>), (<7>, <11>), (<7>, <9>), (<10>, <5>), (<10>, <8>), (<10>, <1>), (<4>, <5>), (<4>, <1>), (<4>, <0>), (<4>, <7>), (<3>, <8>), (<3>, <9>), (<3>, <1>), (<3>, <0>), (<3>, <10>), (<3>, <4>), (<3>, <5>), (<9>, <1>), (<9>, <2>), (<9>, <4>), (<9>, <11>), (<0>, <2>), (<0>, <7>), (<0>, <4>), (<0>, <5>), (<0>, <8>), (<0>, <9>), (<0>, <1>), (<5>, <3>), (<5>, <8>), (<5>, <1>), (<5>, <0>), (<5>, <2>), (<5>, <4>), (<8>, <9>), (<8>, <1>), (<8>, <6>), (<8>, <3>), (<11>, <2>), (<11>, <7>), (<11>, <10>), (<11>, <4>), (<11>, <5>), (<11>, <3>), (<11>, <8>), (<6>, <4>), (<6>, <0>), (<6>, <2>)]","{<1>: [<7>, <10>, <4>, <3>, <9>],
<7>: [<5>, <11>, <9>],
<10>: [<5>, <8>, <1>],
<4>: [<5>, <1>, <0>, <7>],
<3>: [<8>, <9>, <1>, <0>, <10>, <4>, <5>],
<9>: [<1>, <2>, <4>, <11>],
<0>: [<2>, <7>, <4>, <5>, <8>, <9>, <1>],
<2>: [],
<5>: [<3>, <8>, <1>, <0>, <2>, <4>],
<8>: [<9>, <1>, <6>, <3>],
<11>: [<2>, <7>, <10>, <4>, <5>, <3>, <8>],
<6>: [<4>, <0>, <2>]}","Node <1> is connected to nodes <7>, <10>, <4>, <3>, <9>.
Node <7> is connected to nodes <5>, <11>, <9>.
Node <10> is connected to nodes <5>, <8>, <1>.
Node <4> is connected to nodes <5>, <1>, <0>, <7>.
Node <3> is connected to nodes <8>, <9>, <1>, <0>, <10>, <4>, <5>.
Node <9> is connected to nodes <1>, <2>, <4>, <11>.
Node <0> is connected to nodes <2>, <7>, <4>, <5>, <8>, <9>, <1>.
Node <5> is connected to nodes <3>, <8>, <1>, <0>, <2>, <4>.
Node <8> is connected to nodes <9>, <1>, <6>, <3>.
Node <11> is connected to nodes <2>, <7>, <10>, <4>, <5>, <3>, <8>.
Node <6> is connected to nodes <4>, <0>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,53,True,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <5>, <11>, <9>, <3>, <8>, <1>, <0>, <2>, <4>, <10>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<5>, <11>, <9>].
Visit node <5>. Unvisited neighbors of node <5> are [<3>, <8>, <1>, <0>, <2>, <4>].
Visit node <11>. Unvisited neighbors of node <11> are [<10>].
Visit node <9>. 
Visit node <3>. 
Visit node <8>. Unvisited neighbors of node <8> are [<6>].
Visit node <1>. 
Visit node <0>. 
Visit node <2>. 
Visit node <4>. 
Visit node <10>. 
Visit node <6>. 
So the BFS traversal is ","('[[<7>, <4>, <1>, <9>, <6>, <5>, <10>, <8>, <3>, <0>, <11>, <2>], [<7>, <5>, <11>, <9>, <3>, <8>, <1>, <6>, <2>, <4>, <10>, <0>], [<7>, <5>, <11>, <9>, <3>, <8>, <1>, <0>, <2>, <4>, <10>, <6>], [<7>, <5>, <11>, <9>, <2>, <4>, <10>, <6>, <3>, <8>, <1>, <0>]]',)",2,25
BFS,"[(<6>, <7>), (<6>, <0>), (<7>, <3>), (<0>, <10>), (<3>, <1>), (<1>, <2>), (<2>, <4>), (<2>, <13>), (<4>, <5>), (<5>, <8>), (<10>, <11>), (<8>, <12>), (<8>, <14>), (<12>, <9>), (<14>, <9>)]","{<6>: [<7>, <0>],
<7>: [<6>, <3>],
<0>: [<6>, <10>],
<3>: [<7>, <1>],
<1>: [<3>, <2>],
<2>: [<1>, <4>, <13>],
<4>: [<2>, <5>],
<13>: [<2>],
<5>: [<4>, <8>],
<10>: [<0>, <11>],
<11>: [<10>],
<8>: [<5>, <12>, <14>],
<12>: [<8>, <9>],
<14>: [<8>, <9>],
<9>: [<12>, <14>]}","Node <6> is connected to nodes <7>, <0>.
Node <7> is connected to nodes <6>, <3>.
Node <0> is connected to nodes <6>, <10>.
Node <3> is connected to nodes <7>, <1>.
Node <1> is connected to nodes <3>, <2>.
Node <2> is connected to nodes <1>, <4>, <13>.
Node <4> is connected to nodes <2>, <5>.
Node <13> is connected to node <2>.
Node <5> is connected to nodes <4>, <8>.
Node <10> is connected to nodes <0>, <11>.
Node <11> is connected to node <10>.
Node <8> is connected to nodes <5>, <12>, <14>.
Node <12> is connected to nodes <8>, <9>.
Node <14> is connected to nodes <8>, <9>.
Node <9> is connected to nodes <12>, <14>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,15,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <7>, <0>, <3>, <10>, <1>, <11>, <2>, <4>, <13>, <5>, <8>, <12>, <14>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<7>, <0>].
Visit node <7>. Unvisited neighbors of node <7> are [<3>].
Visit node <0>. Unvisited neighbors of node <0> are [<10>].
Visit node <3>. Unvisited neighbors of node <3> are [<1>].
Visit node <10>. Unvisited neighbors of node <10> are [<11>].
Visit node <1>. Unvisited neighbors of node <1> are [<2>].
Visit node <11>. 
Visit node <2>. Unvisited neighbors of node <2> are [<4>, <13>].
Visit node <4>. Unvisited neighbors of node <4> are [<5>].
Visit node <13>. 
Visit node <5>. Unvisited neighbors of node <5> are [<8>].
Visit node <8>. Unvisited neighbors of node <8> are [<12>, <14>].
Visit node <12>. Unvisited neighbors of node <12> are [<9>].
Visit node <14>. 
Visit node <9>. 
So the BFS traversal is ","('[[<6>, <7>, <0>, <3>, <10>, <5>, <8>, <12>, <14>, <9>, <1>, <11>, <2>, <4>, <13>], [<6>, <7>, <0>, <3>, <10>, <1>, <11>, <2>, <4>, <13>, <5>, <8>, <12>, <14>, <9>], [<6>, <12>, <4>, <5>, <3>, <9>, <11>, <7>, <10>, <0>, <2>, <14>, <1>, <13>, <8>], [<6>, <7>, <0>, <3>, <10>, <1>, <11>, <14>, <5>, <4>, <9>, <12>, <8>, <13>, <2>]]',)",1,26
BFS,"[(<4>, <1>), (<4>, <6>), (<4>, <9>), (<4>, <3>), (<4>, <7>), (<4>, <0>), (<4>, <10>), (<1>, <0>), (<6>, <2>), (<6>, <0>), (<6>, <8>), (<9>, <2>), (<9>, <0>), (<7>, <0>), (<7>, <5>), (<0>, <5>), (<0>, <10>), (<2>, <8>)]","{<4>: [<1>, <6>, <9>, <3>, <7>, <0>, <10>],
<1>: [<4>, <0>],
<6>: [<4>, <2>, <0>, <8>],
<9>: [<4>, <2>, <0>],
<3>: [<4>],
<7>: [<4>, <0>, <5>],
<0>: [<4>, <1>, <6>, <9>, <7>, <5>, <10>],
<10>: [<4>, <0>],
<2>: [<6>, <9>, <8>],
<8>: [<6>, <2>],
<5>: [<0>, <7>]}","Node <4> is connected to nodes <1>, <6>, <9>, <3>, <7>, <0>, <10>.
Node <1> is connected to nodes <4>, <0>.
Node <6> is connected to nodes <4>, <2>, <0>, <8>.
Node <9> is connected to nodes <4>, <2>, <0>.
Node <3> is connected to node <4>.
Node <7> is connected to nodes <4>, <0>, <5>.
Node <0> is connected to nodes <4>, <1>, <6>, <9>, <7>, <5>, <10>.
Node <10> is connected to nodes <4>, <0>.
Node <2> is connected to nodes <6>, <9>, <8>.
Node <8> is connected to nodes <6>, <2>.
Node <5> is connected to nodes <0>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,18,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <6>, <9>, <8>, <4>, <0>, <1>, <3>, <7>, <10>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<6>, <9>, <8>].
Visit node <6>. Unvisited neighbors of node <6> are [<4>, <0>].
Visit node <9>. 
Visit node <8>. 
Visit node <4>. Unvisited neighbors of node <4> are [<1>, <3>, <7>, <10>].
Visit node <0>. Unvisited neighbors of node <0> are [<5>].
Visit node <1>. 
Visit node <3>. 
Visit node <7>. 
Visit node <10>. 
Visit node <5>. 
So the BFS traversal is ","('[[<2>, <6>, <9>, <7>, <10>, <5>, <8>, <4>, <0>, <1>, <3>], [<2>, <6>, <9>, <8>, <4>, <7>, <10>, <5>, <1>, <3>, <0>], [<2>, <6>, <9>, <10>, <7>, <1>, <0>, <3>, <4>, <5>, <8>], [<2>, <6>, <9>, <8>, <4>, <0>, <1>, <3>, <7>, <10>, <5>]]',)",3,27
BFS,"[(<12>, <4>), (<12>, <3>), (<12>, <11>), (<12>, <6>), (<12>, <8>), (<12>, <9>), (<12>, <7>), (<12>, <13>), (<12>, <10>), (<4>, <8>), (<3>, <9>), (<3>, <5>), (<11>, <9>), (<11>, <13>), (<11>, <1>), (<6>, <14>), (<6>, <10>), (<6>, <0>), (<6>, <8>), (<8>, <5>), (<8>, <2>), (<9>, <14>), (<9>, <0>), (<7>, <14>), (<10>, <2>), (<5>, <1>)]","{<12>: [<4>, <3>, <11>, <6>, <8>, <9>, <7>, <13>, <10>],
<4>: [<12>, <8>],
<3>: [<12>, <9>, <5>],
<11>: [<12>, <9>, <13>, <1>],
<6>: [<12>, <14>, <10>, <0>, <8>],
<8>: [<12>, <4>, <5>, <6>, <2>],
<9>: [<12>, <3>, <14>, <11>, <0>],
<7>: [<12>, <14>],
<13>: [<12>, <11>],
<10>: [<12>, <6>, <2>],
<14>: [<9>, <7>, <6>],
<0>: [<9>, <6>],
<5>: [<3>, <1>, <8>],
<1>: [<11>, <5>],
<2>: [<10>, <8>]}","Node <12> is connected to nodes <4>, <3>, <11>, <6>, <8>, <9>, <7>, <13>, <10>.
Node <4> is connected to nodes <12>, <8>.
Node <3> is connected to nodes <12>, <9>, <5>.
Node <11> is connected to nodes <12>, <9>, <13>, <1>.
Node <6> is connected to nodes <12>, <14>, <10>, <0>, <8>.
Node <8> is connected to nodes <12>, <4>, <5>, <6>, <2>.
Node <9> is connected to nodes <12>, <3>, <14>, <11>, <0>.
Node <7> is connected to nodes <12>, <14>.
Node <13> is connected to nodes <12>, <11>.
Node <10> is connected to nodes <12>, <6>, <2>.
Node <14> is connected to nodes <9>, <7>, <6>.
Node <0> is connected to nodes <9>, <6>.
Node <5> is connected to nodes <3>, <1>, <8>.
Node <1> is connected to nodes <11>, <5>.
Node <2> is connected to nodes <10>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,26,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <12>, <14>, <4>, <3>, <11>, <6>, <8>, <9>, <13>, <10>, <5>, <1>, <0>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<12>, <14>].
Visit node <12>. Unvisited neighbors of node <12> are [<4>, <3>, <11>, <6>, <8>, <9>, <13>, <10>].
Visit node <14>. 
Visit node <4>. 
Visit node <3>. Unvisited neighbors of node <3> are [<5>].
Visit node <11>. Unvisited neighbors of node <11> are [<1>].
Visit node <6>. Unvisited neighbors of node <6> are [<0>].
Visit node <8>. Unvisited neighbors of node <8> are [<2>].
Visit node <9>. 
Visit node <13>. 
Visit node <10>. 
Visit node <5>. 
Visit node <1>. 
Visit node <0>. 
Visit node <2>. 
So the BFS traversal is ","('[[<7>, <12>, <14>, <4>, <3>, <11>, <6>, <10>, <5>, <1>, <13>, <2>, <8>, <0>, <9>], [<7>, <6>, <5>, <9>, <3>, <0>, <12>, <4>, <14>, <1>, <2>, <10>, <13>, <8>, <11>], [<7>, <12>, <14>, <4>, <3>, <10>, <5>, <1>, <0>, <2>, <11>, <6>, <8>, <9>, <13>], [<7>, <12>, <14>, <4>, <3>, <11>, <6>, <8>, <9>, <13>, <10>, <5>, <1>, <0>, <2>]]',)",3,28
BFS,"[(<5>, <7>), (<5>, <4>), (<7>, <1>), (<4>, <8>), (<1>, <2>), (<6>, <2>), (<6>, <0>), (<2>, <8>), (<0>, <3>)]","{<5>: [<7>, <4>],
<7>: [<5>, <1>],
<4>: [<5>, <8>],
<1>: [<7>, <2>],
<6>: [<2>, <0>],
<2>: [<6>, <8>, <1>],
<0>: [<6>, <3>],
<8>: [<2>, <4>],
<3>: [<0>]}","Node <5> is connected to nodes <7>, <4>.
Node <7> is connected to nodes <5>, <1>.
Node <4> is connected to nodes <5>, <8>.
Node <1> is connected to nodes <7>, <2>.
Node <6> is connected to nodes <2>, <0>.
Node <2> is connected to nodes <6>, <8>, <1>.
Node <0> is connected to nodes <6>, <3>.
Node <8> is connected to nodes <2>, <4>.
Node <3> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <2>, <4>, <6>, <1>, <5>, <0>, <7>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<2>, <4>].
Visit node <2>. Unvisited neighbors of node <2> are [<6>, <1>].
Visit node <4>. Unvisited neighbors of node <4> are [<5>].
Visit node <6>. Unvisited neighbors of node <6> are [<0>].
Visit node <1>. Unvisited neighbors of node <1> are [<7>].
Visit node <5>. 
Visit node <0>. Unvisited neighbors of node <0> are [<3>].
Visit node <7>. 
Visit node <3>. 
So the BFS traversal is ","('[[<8>, <7>, <1>, <6>, <3>, <4>, <5>, <0>, <2>], [<8>, <2>, <4>, <6>, <1>, <5>, <0>, <7>, <3>], [<8>, <2>, <4>, <0>, <7>, <3>, <6>, <1>, <5>], [<8>, <2>, <4>, <6>, <0>, <7>, <5>, <1>, <3>]]',)",1,29
BFS,"[(<8>, <5>), (<8>, <3>), (<5>, <3>), (<5>, <0>), (<5>, <6>), (<3>, <7>), (<6>, <4>), (<6>, <3>), (<4>, <1>), (<4>, <3>), (<4>, <6>), (<4>, <2>), (<4>, <7>), (<2>, <4>), (<7>, <8>), (<0>, <8>), (<0>, <2>), (<0>, <4>), (<0>, <1>), (<0>, <3>), (<1>, <0>), (<1>, <6>), (<1>, <2>)]","{<8>: [<5>, <3>],
<5>: [<3>, <0>, <6>],
<3>: [<7>],
<6>: [<4>, <3>],
<4>: [<1>, <3>, <6>, <2>, <7>],
<2>: [<4>],
<7>: [<8>],
<0>: [<8>, <2>, <4>, <1>, <3>],
<1>: [<0>, <6>, <2>]}","Node <8> is connected to nodes <5>, <3>.
Node <5> is connected to nodes <3>, <0>, <6>.
Node <3> is connected to node <7>.
Node <6> is connected to nodes <4>, <3>.
Node <4> is connected to nodes <1>, <3>, <6>, <2>, <7>.
Node <2> is connected to node <4>.
Node <7> is connected to node <8>.
Node <0> is connected to nodes <8>, <2>, <4>, <1>, <3>.
Node <1> is connected to nodes <0>, <6>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,23,True,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <3>, <0>, <6>, <7>, <8>, <2>, <4>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<3>, <0>, <6>].
Visit node <3>. Unvisited neighbors of node <3> are [<7>].
Visit node <0>. Unvisited neighbors of node <0> are [<8>, <2>, <4>, <1>].
Visit node <6>. 
Visit node <7>. 
Visit node <8>. 
Visit node <2>. 
Visit node <4>. 
Visit node <1>. 
So the BFS traversal is ","('[[<5>, <0>, <3>, <4>, <8>, <7>, <1>, <6>, <2>], [<5>, <3>, <0>, <6>, <4>, <2>, <1>, <7>, <8>], [<5>, <3>, <0>, <2>, <4>, <1>, <6>, <7>, <8>], [<5>, <3>, <0>, <6>, <7>, <8>, <2>, <4>, <1>]]',)",3,30
BFS,"[(<1>, <7>), (<1>, <2>), (<1>, <0>), (<7>, <4>), (<2>, <6>), (<0>, <3>), (<4>, <3>), (<6>, <5>)]","{<1>: [<7>, <2>, <0>],
<7>: [<1>, <4>],
<2>: [<1>, <6>],
<0>: [<1>, <3>],
<4>: [<7>, <3>],
<3>: [<0>, <4>],
<6>: [<2>, <5>],
<5>: [<6>]}","Node <1> is connected to nodes <7>, <2>, <0>.
Node <7> is connected to nodes <1>, <4>.
Node <2> is connected to nodes <1>, <6>.
Node <0> is connected to nodes <1>, <3>.
Node <4> is connected to nodes <7>, <3>.
Node <3> is connected to nodes <0>, <4>.
Node <6> is connected to nodes <2>, <5>.
Node <5> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,8,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <1>, <4>, <2>, <0>, <3>, <6>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<1>, <4>].
Visit node <1>. Unvisited neighbors of node <1> are [<2>, <0>].
Visit node <4>. Unvisited neighbors of node <4> are [<3>].
Visit node <2>. Unvisited neighbors of node <2> are [<6>].
Visit node <0>. 
Visit node <3>. 
Visit node <6>. Unvisited neighbors of node <6> are [<5>].
Visit node <5>. 
So the BFS traversal is ","('[[<7>, <1>, <3>, <6>, <2>, <0>, <4>, <5>], [<7>, <1>, <4>, <2>, <0>, <3>, <6>, <5>], [<7>, <1>, <6>, <5>, <4>, <2>, <0>, <3>], [<7>, <1>, <4>, <2>, <0>, <5>, <3>, <6>]]',)",1,31
BFS,"[(<5>, <6>), (<6>, <7>), (<7>, <6>), (<7>, <3>), (<7>, <1>), (<7>, <5>), (<3>, <5>), (<3>, <7>), (<3>, <4>), (<1>, <7>), (<1>, <6>), (<1>, <3>), (<4>, <7>), (<4>, <6>), (<0>, <7>), (<0>, <3>), (<2>, <4>), (<2>, <0>)]","{<5>: [<6>],
<6>: [<7>],
<7>: [<6>, <3>, <1>, <5>],
<3>: [<5>, <7>, <4>],
<1>: [<7>, <6>, <3>],
<4>: [<7>, <6>],
<0>: [<7>, <3>],
<2>: [<4>, <0>]}","Node <5> is connected to node <6>.
Node <6> is connected to node <7>.
Node <7> is connected to nodes <6>, <3>, <1>, <5>.
Node <3> is connected to nodes <5>, <7>, <4>.
Node <1> is connected to nodes <7>, <6>, <3>.
Node <4> is connected to nodes <7>, <6>.
Node <0> is connected to nodes <7>, <3>.
Node <2> is connected to nodes <4>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,18,True,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <5>, <7>, <4>, <6>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<5>, <7>, <4>].
Visit node <5>. Unvisited neighbors of node <5> are [<6>].
Visit node <7>. Unvisited neighbors of node <7> are [<1>].
Visit node <4>. 
Visit node <6>. 
Visit node <1>. 
So the BFS traversal is ","('[[<3>, <5>, <6>, <1>, <7>, <4>], [<3>, <4>, <7>, <1>, <5>, <6>], [<3>, <5>, <7>, <4>, <6>, <1>], [<3>, <5>, <7>, <4>, <6>, <1>]]',)",3,32
BFS,"[(<3>, <7>), (<3>, <4>), (<3>, <6>), (<7>, <1>), (<7>, <5>), (<4>, <6>), (<4>, <0>), (<4>, <2>), (<6>, <1>), (<6>, <5>), (<6>, <2>), (<5>, <0>)]","{<3>: [<7>, <4>, <6>],
<7>: [<3>, <1>, <5>],
<4>: [<3>, <6>, <0>, <2>],
<6>: [<3>, <1>, <5>, <2>, <4>],
<1>: [<7>, <6>],
<5>: [<7>, <6>, <0>],
<0>: [<5>, <4>],
<2>: [<6>, <4>]}","Node <3> is connected to nodes <7>, <4>, <6>.
Node <7> is connected to nodes <3>, <1>, <5>.
Node <4> is connected to nodes <3>, <6>, <0>, <2>.
Node <6> is connected to nodes <3>, <1>, <5>, <2>, <4>.
Node <1> is connected to nodes <7>, <6>.
Node <5> is connected to nodes <7>, <6>, <0>.
Node <0> is connected to nodes <5>, <4>.
Node <2> is connected to nodes <6>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,12,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <3>, <6>, <0>, <2>, <7>, <1>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<3>, <6>, <0>, <2>].
Visit node <3>. Unvisited neighbors of node <3> are [<7>].
Visit node <6>. Unvisited neighbors of node <6> are [<1>, <5>].
Visit node <0>. 
Visit node <2>. 
Visit node <7>. 
Visit node <1>. 
Visit node <5>. 
So the BFS traversal is ","('[[<4>, <3>, <6>, <0>, <7>, <2>, <1>, <5>], [<4>, <3>, <1>, <5>, <6>, <0>, <2>, <7>], [<4>, <3>, <6>, <7>, <5>, <0>, <2>, <1>], [<4>, <3>, <6>, <0>, <2>, <7>, <1>, <5>]]',)",3,33
BFS,"[(<1>, <7>), (<1>, <12>), (<1>, <0>), (<1>, <9>), (<1>, <11>), (<0>, <6>), (<0>, <8>), (<0>, <4>), (<11>, <10>), (<11>, <3>), (<3>, <5>), (<5>, <2>)]","{<1>: [<7>, <12>, <0>, <9>, <11>],
<7>: [<1>],
<12>: [<1>],
<0>: [<1>, <6>, <8>, <4>],
<9>: [<1>],
<11>: [<1>, <10>, <3>],
<10>: [<11>],
<3>: [<11>, <5>],
<5>: [<3>, <2>],
<2>: [<5>],
<6>: [<0>],
<8>: [<0>],
<4>: [<0>]}","Node <1> is connected to nodes <7>, <12>, <0>, <9>, <11>.
Node <7> is connected to node <1>.
Node <12> is connected to node <1>.
Node <0> is connected to nodes <1>, <6>, <8>, <4>.
Node <9> is connected to node <1>.
Node <11> is connected to nodes <1>, <10>, <3>.
Node <10> is connected to node <11>.
Node <3> is connected to nodes <11>, <5>.
Node <5> is connected to nodes <3>, <2>.
Node <2> is connected to node <5>.
Node <6> is connected to node <0>.
Node <8> is connected to node <0>.
Node <4> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,12,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <1>, <6>, <8>, <4>, <7>, <12>, <9>, <11>, <10>, <3>, <5>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<1>, <6>, <8>, <4>].
Visit node <1>. Unvisited neighbors of node <1> are [<7>, <12>, <9>, <11>].
Visit node <6>. 
Visit node <8>. 
Visit node <4>. 
Visit node <7>. 
Visit node <12>. 
Visit node <9>. 
Visit node <11>. Unvisited neighbors of node <11> are [<10>, <3>].
Visit node <10>. 
Visit node <3>. Unvisited neighbors of node <3> are [<5>].
Visit node <5>. Unvisited neighbors of node <5> are [<2>].
Visit node <2>. 
So the BFS traversal is ","('[[<0>, <1>, <6>, <8>, <10>, <3>, <5>, <2>, <4>, <7>, <12>, <9>, <11>], [<0>, <12>, <7>, <5>, <3>, <10>, <11>, <1>, <4>, <9>, <6>, <8>, <2>], [<0>, <1>, <6>, <8>, <4>, <7>, <12>, <9>, <11>, <10>, <3>, <5>, <2>], [<0>, <1>, <6>, <8>, <4>, <7>, <9>, <12>, <5>, <3>, <2>, <10>, <11>]]',)",2,34
BFS,"[(<2>, <0>), (<2>, <8>), (<2>, <7>), (<2>, <3>), (<8>, <4>), (<8>, <5>), (<3>, <6>), (<6>, <1>)]","{<2>: [<0>, <8>, <7>, <3>],
<0>: [<2>],
<8>: [<2>, <4>, <5>],
<7>: [<2>],
<3>: [<2>, <6>],
<6>: [<1>, <3>],
<1>: [<6>],
<4>: [<8>],
<5>: [<8>]}","Node <2> is connected to nodes <0>, <8>, <7>, <3>.
Node <0> is connected to node <2>.
Node <8> is connected to nodes <2>, <4>, <5>.
Node <7> is connected to node <2>.
Node <3> is connected to nodes <2>, <6>.
Node <6> is connected to nodes <1>, <3>.
Node <1> is connected to node <6>.
Node <4> is connected to node <8>.
Node <5> is connected to node <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,8,False,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <2>, <4>, <5>, <0>, <7>, <3>, <6>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<2>, <4>, <5>].
Visit node <2>. Unvisited neighbors of node <2> are [<0>, <7>, <3>].
Visit node <4>. 
Visit node <5>. 
Visit node <0>. 
Visit node <7>. 
Visit node <3>. Unvisited neighbors of node <3> are [<6>].
Visit node <6>. Unvisited neighbors of node <6> are [<1>].
Visit node <1>. 
So the BFS traversal is ","('[[<8>, <2>, <4>, <5>, <0>, <7>, <3>, <6>, <1>], [<8>, <3>, <5>, <1>, <0>, <2>, <4>, <6>, <7>], [<8>, <2>, <4>, <5>, <7>, <3>, <1>, <0>, <6>], [<8>, <2>, <4>, <3>, <6>, <1>, <5>, <0>, <7>]]',)",0,35
BFS,"[(<5>, <2>), (<5>, <9>), (<5>, <6>), (<5>, <4>), (<2>, <8>), (<2>, <9>), (<2>, <10>), (<2>, <4>), (<9>, <10>), (<9>, <1>), (<9>, <11>), (<6>, <7>), (<6>, <4>), (<6>, <3>), (<4>, <7>), (<4>, <0>), (<4>, <3>), (<8>, <1>), (<8>, <0>), (<8>, <11>), (<10>, <1>), (<10>, <11>), (<1>, <11>), (<3>, <0>)]","{<5>: [<2>, <9>, <6>, <4>],
<2>: [<5>, <8>, <9>, <10>, <4>],
<9>: [<5>, <2>, <10>, <1>, <11>],
<6>: [<5>, <7>, <4>, <3>],
<4>: [<5>, <2>, <6>, <7>, <0>, <3>],
<8>: [<2>, <1>, <0>, <11>],
<10>: [<2>, <1>, <9>, <11>],
<1>: [<10>, <8>, <9>, <11>],
<11>: [<10>, <1>, <9>, <8>],
<7>: [<6>, <4>],
<3>: [<6>, <0>, <4>],
<0>: [<3>, <4>, <8>]}","Node <5> is connected to nodes <2>, <9>, <6>, <4>.
Node <2> is connected to nodes <5>, <8>, <9>, <10>, <4>.
Node <9> is connected to nodes <5>, <2>, <10>, <1>, <11>.
Node <6> is connected to nodes <5>, <7>, <4>, <3>.
Node <4> is connected to nodes <5>, <2>, <6>, <7>, <0>, <3>.
Node <8> is connected to nodes <2>, <1>, <0>, <11>.
Node <10> is connected to nodes <2>, <1>, <9>, <11>.
Node <1> is connected to nodes <10>, <8>, <9>, <11>.
Node <11> is connected to nodes <10>, <1>, <9>, <8>.
Node <7> is connected to nodes <6>, <4>.
Node <3> is connected to nodes <6>, <0>, <4>.
Node <0> is connected to nodes <3>, <4>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,24,False,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <2>, <1>, <0>, <11>, <5>, <9>, <10>, <4>, <3>, <6>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<2>, <1>, <0>, <11>].
Visit node <2>. Unvisited neighbors of node <2> are [<5>, <9>, <10>, <4>].
Visit node <1>. 
Visit node <0>. Unvisited neighbors of node <0> are [<3>].
Visit node <11>. 
Visit node <5>. Unvisited neighbors of node <5> are [<6>].
Visit node <9>. 
Visit node <10>. 
Visit node <4>. Unvisited neighbors of node <4> are [<7>].
Visit node <3>. 
Visit node <6>. 
Visit node <7>. 
So the BFS traversal is ","('[[<8>, <2>, <1>, <0>, <11>, <5>, <3>, <4>, <6>, <7>, <10>, <9>], [<8>, <2>, <1>, <0>, <11>, <5>, <9>, <10>, <4>, <3>, <6>, <7>], [<8>, <2>, <1>, <0>, <4>, <3>, <6>, <7>, <11>, <5>, <9>, <10>], [<8>, <11>, <10>, <7>, <0>, <1>, <4>, <5>, <6>, <3>, <2>, <9>]]',)",1,36
BFS,"[(<6>, <11>), (<6>, <7>), (<11>, <4>), (<11>, <5>), (<11>, <3>), (<7>, <5>), (<4>, <9>), (<5>, <10>), (<3>, <1>), (<2>, <9>), (<2>, <8>), (<8>, <0>)]","{<6>: [<11>, <7>],
<11>: [<6>, <4>, <5>, <3>],
<7>: [<6>, <5>],
<4>: [<11>, <9>],
<5>: [<11>, <7>, <10>],
<3>: [<11>, <1>],
<2>: [<9>, <8>],
<9>: [<2>, <4>],
<8>: [<2>, <0>],
<0>: [<8>],
<10>: [<5>],
<1>: [<3>]}","Node <6> is connected to nodes <11>, <7>.
Node <11> is connected to nodes <6>, <4>, <5>, <3>.
Node <7> is connected to nodes <6>, <5>.
Node <4> is connected to nodes <11>, <9>.
Node <5> is connected to nodes <11>, <7>, <10>.
Node <3> is connected to nodes <11>, <1>.
Node <2> is connected to nodes <9>, <8>.
Node <9> is connected to nodes <2>, <4>.
Node <8> is connected to nodes <2>, <0>.
Node <0> is connected to node <8>.
Node <10> is connected to node <5>.
Node <1> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,12,False,"Start from node <11>, output a sequence of traversal in breadth-first search (BFS) order.","[<11>, <6>, <4>, <5>, <3>, <7>, <9>, <10>, <1>, <2>, <8>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <11>. Unvisited neighbors of node <11> are [<6>, <4>, <5>, <3>].
Visit node <6>. Unvisited neighbors of node <6> are [<7>].
Visit node <4>. Unvisited neighbors of node <4> are [<9>].
Visit node <5>. Unvisited neighbors of node <5> are [<10>].
Visit node <3>. Unvisited neighbors of node <3> are [<1>].
Visit node <7>. 
Visit node <9>. Unvisited neighbors of node <9> are [<2>].
Visit node <10>. 
Visit node <1>. 
Visit node <2>. Unvisited neighbors of node <2> are [<8>].
Visit node <8>. Unvisited neighbors of node <8> are [<0>].
Visit node <0>. 
So the BFS traversal is ","('[[<11>, <6>, <4>, <5>, <1>, <2>, <8>, <0>, <3>, <7>, <9>, <10>], [<11>, <3>, <0>, <4>, <7>, <2>, <5>, <8>, <9>, <1>, <10>, <6>], [<11>, <6>, <4>, <5>, <3>, <7>, <9>, <10>, <1>, <2>, <8>, <0>], [<11>, <6>, <4>, <5>, <3>, <7>, <9>, <2>, <8>, <10>, <0>, <1>]]',)",2,37
BFS,"[(<6>, <13>), (<6>, <8>), (<13>, <3>), (<13>, <12>), (<13>, <11>), (<3>, <10>), (<3>, <12>), (<12>, <0>), (<11>, <4>), (<5>, <7>), (<5>, <9>), (<7>, <4>), (<9>, <2>), (<0>, <1>)]","{<6>: [<13>, <8>],
<13>: [<6>, <3>, <12>, <11>],
<8>: [<6>],
<3>: [<13>, <10>, <12>],
<12>: [<13>, <3>, <0>],
<11>: [<13>, <4>],
<5>: [<7>, <9>],
<7>: [<5>, <4>],
<9>: [<5>, <2>],
<4>: [<7>, <11>],
<10>: [<3>],
<0>: [<12>, <1>],
<1>: [<0>],
<2>: [<9>]}","Node <6> is connected to nodes <13>, <8>.
Node <13> is connected to nodes <6>, <3>, <12>, <11>.
Node <8> is connected to node <6>.
Node <3> is connected to nodes <13>, <10>, <12>.
Node <12> is connected to nodes <13>, <3>, <0>.
Node <11> is connected to nodes <13>, <4>.
Node <5> is connected to nodes <7>, <9>.
Node <7> is connected to nodes <5>, <4>.
Node <9> is connected to nodes <5>, <2>.
Node <4> is connected to nodes <7>, <11>.
Node <10> is connected to node <3>.
Node <0> is connected to nodes <12>, <1>.
Node <1> is connected to node <0>.
Node <2> is connected to node <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,14,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <5>, <2>, <7>, <4>, <11>, <13>, <6>, <3>, <12>, <8>, <10>, <0>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<5>, <2>].
Visit node <5>. Unvisited neighbors of node <5> are [<7>].
Visit node <2>. 
Visit node <7>. Unvisited neighbors of node <7> are [<4>].
Visit node <4>. Unvisited neighbors of node <4> are [<11>].
Visit node <11>. Unvisited neighbors of node <11> are [<13>].
Visit node <13>. Unvisited neighbors of node <13> are [<6>, <3>, <12>].
Visit node <6>. Unvisited neighbors of node <6> are [<8>].
Visit node <3>. Unvisited neighbors of node <3> are [<10>].
Visit node <12>. Unvisited neighbors of node <12> are [<0>].
Visit node <8>. 
Visit node <10>. 
Visit node <0>. Unvisited neighbors of node <0> are [<1>].
Visit node <1>. 
So the BFS traversal is ","('[[<9>, <5>, <2>, <7>, <4>, <11>, <13>, <0>, <6>, <12>, <1>, <10>, <8>, <3>], [<9>, <5>, <2>, <7>, <8>, <10>, <0>, <1>, <4>, <11>, <13>, <6>, <3>, <12>], [<9>, <4>, <10>, <8>, <1>, <6>, <7>, <13>, <11>, <3>, <12>, <2>, <0>, <5>], [<9>, <5>, <2>, <7>, <4>, <11>, <13>, <6>, <3>, <12>, <8>, <10>, <0>, <1>]]',)",3,38
BFS,"[(<4>, <3>), (<4>, <7>), (<4>, <0>), (<4>, <8>), (<3>, <7>), (<3>, <2>), (<7>, <2>), (<7>, <1>), (<7>, <6>), (<0>, <8>), (<0>, <6>), (<0>, <5>), (<8>, <5>), (<1>, <6>)]","{<4>: [<3>, <7>, <0>, <8>],
<3>: [<4>, <7>, <2>],
<7>: [<4>, <3>, <2>, <1>, <6>],
<0>: [<4>, <8>, <6>, <5>],
<8>: [<4>, <0>, <5>],
<2>: [<3>, <7>],
<1>: [<7>, <6>],
<6>: [<7>, <0>, <1>],
<5>: [<0>, <8>]}","Node <4> is connected to nodes <3>, <7>, <0>, <8>.
Node <3> is connected to nodes <4>, <7>, <2>.
Node <7> is connected to nodes <4>, <3>, <2>, <1>, <6>.
Node <0> is connected to nodes <4>, <8>, <6>, <5>.
Node <8> is connected to nodes <4>, <0>, <5>.
Node <2> is connected to nodes <3>, <7>.
Node <1> is connected to nodes <7>, <6>.
Node <6> is connected to nodes <7>, <0>, <1>.
Node <5> is connected to nodes <0>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,14,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <3>, <7>, <4>, <1>, <6>, <0>, <8>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<3>, <7>].
Visit node <3>. Unvisited neighbors of node <3> are [<4>].
Visit node <7>. Unvisited neighbors of node <7> are [<1>, <6>].
Visit node <4>. Unvisited neighbors of node <4> are [<0>, <8>].
Visit node <1>. 
Visit node <6>. 
Visit node <0>. Unvisited neighbors of node <0> are [<5>].
Visit node <8>. 
Visit node <5>. 
So the BFS traversal is ","('[[<2>, <3>, <7>, <4>, <1>, <6>, <0>, <8>, <5>], [<2>, <3>, <7>, <4>, <5>, <8>, <0>, <1>, <6>], [<2>, <0>, <5>, <6>, <3>, <1>, <7>, <4>, <8>], [<2>, <3>, <7>, <0>, <8>, <5>, <4>, <1>, <6>]]',)",0,39
BFS,"[(<7>, <6>), (<7>, <9>), (<7>, <10>), (<7>, <4>), (<7>, <3>), (<7>, <8>), (<7>, <1>), (<7>, <2>), (<6>, <8>), (<6>, <2>), (<9>, <5>), (<10>, <5>), (<10>, <8>), (<10>, <12>), (<4>, <5>), (<4>, <8>), (<4>, <1>), (<3>, <1>), (<3>, <11>), (<3>, <0>), (<8>, <1>), (<8>, <13>), (<8>, <11>), (<1>, <5>), (<1>, <2>), (<1>, <13>), (<1>, <11>), (<1>, <0>), (<2>, <5>), (<2>, <0>), (<2>, <12>), (<5>, <12>), (<0>, <13>)]","{<7>: [<6>, <9>, <10>, <4>, <3>, <8>, <1>, <2>],
<6>: [<7>, <8>, <2>],
<9>: [<7>, <5>],
<10>: [<7>, <5>, <8>, <12>],
<4>: [<7>, <5>, <8>, <1>],
<3>: [<7>, <1>, <11>, <0>],
<8>: [<7>, <6>, <10>, <4>, <1>, <13>, <11>],
<1>: [<7>, <5>, <2>, <4>, <13>, <8>, <3>, <11>, <0>],
<2>: [<7>, <6>, <5>, <0>, <12>, <1>],
<5>: [<2>, <9>, <12>, <4>, <1>, <10>],
<12>: [<5>, <2>, <10>],
<0>: [<2>, <1>, <13>, <3>],
<13>: [<1>, <8>, <0>],
<11>: [<1>, <3>, <8>]}","Node <7> is connected to nodes <6>, <9>, <10>, <4>, <3>, <8>, <1>, <2>.
Node <6> is connected to nodes <7>, <8>, <2>.
Node <9> is connected to nodes <7>, <5>.
Node <10> is connected to nodes <7>, <5>, <8>, <12>.
Node <4> is connected to nodes <7>, <5>, <8>, <1>.
Node <3> is connected to nodes <7>, <1>, <11>, <0>.
Node <8> is connected to nodes <7>, <6>, <10>, <4>, <1>, <13>, <11>.
Node <1> is connected to nodes <7>, <5>, <2>, <4>, <13>, <8>, <3>, <11>, <0>.
Node <2> is connected to nodes <7>, <6>, <5>, <0>, <12>, <1>.
Node <5> is connected to nodes <2>, <9>, <12>, <4>, <1>, <10>.
Node <12> is connected to nodes <5>, <2>, <10>.
Node <0> is connected to nodes <2>, <1>, <13>, <3>.
Node <13> is connected to nodes <1>, <8>, <0>.
Node <11> is connected to nodes <1>, <3>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,33,False,"Start from node <10>, output a sequence of traversal in breadth-first search (BFS) order.","[<10>, <7>, <5>, <8>, <12>, <6>, <9>, <4>, <3>, <1>, <2>, <13>, <11>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <10>. Unvisited neighbors of node <10> are [<7>, <5>, <8>, <12>].
Visit node <7>. Unvisited neighbors of node <7> are [<6>, <9>, <4>, <3>, <1>, <2>].
Visit node <5>. 
Visit node <8>. Unvisited neighbors of node <8> are [<13>, <11>].
Visit node <12>. 
Visit node <6>. 
Visit node <9>. 
Visit node <4>. 
Visit node <3>. Unvisited neighbors of node <3> are [<0>].
Visit node <1>. 
Visit node <2>. 
Visit node <13>. 
Visit node <11>. 
Visit node <0>. 
So the BFS traversal is ","('[[<10>, <13>, <8>, <2>, <12>, <5>, <3>, <6>, <0>, <11>, <9>, <4>, <7>, <1>], [<10>, <7>, <5>, <8>, <2>, <13>, <11>, <0>, <12>, <6>, <9>, <4>, <3>, <1>], [<10>, <7>, <5>, <8>, <12>, <6>, <9>, <4>, <3>, <1>, <2>, <13>, <11>, <0>], [<10>, <7>, <5>, <8>, <12>, <6>, <9>, <11>, <0>, <1>, <13>, <4>, <2>, <3>]]',)",2,40
BFS,"[(<2>, <3>), (<2>, <9>), (<2>, <1>), (<2>, <11>), (<2>, <6>), (<3>, <9>), (<3>, <8>), (<3>, <10>), (<3>, <6>), (<3>, <5>), (<3>, <0>), (<9>, <1>), (<9>, <4>), (<9>, <11>), (<9>, <10>), (<9>, <6>), (<9>, <5>), (<1>, <8>), (<1>, <11>), (<1>, <6>), (<1>, <0>), (<11>, <6>), (<11>, <5>), (<6>, <7>), (<6>, <4>), (<6>, <10>), (<6>, <5>), (<6>, <0>), (<7>, <8>), (<7>, <5>), (<7>, <0>), (<8>, <4>), (<8>, <10>), (<5>, <10>), (<0>, <4>), (<10>, <4>)]","{<2>: [<3>, <9>, <1>, <11>, <6>],
<3>: [<2>, <9>, <8>, <10>, <6>, <5>, <0>],
<9>: [<2>, <3>, <1>, <4>, <11>, <10>, <6>, <5>],
<1>: [<2>, <9>, <8>, <11>, <6>, <0>],
<11>: [<2>, <9>, <1>, <6>, <5>],
<6>: [<2>, <7>, <3>, <9>, <1>, <4>, <11>, <10>, <5>, <0>],
<7>: [<8>, <6>, <5>, <0>],
<8>: [<7>, <3>, <1>, <4>, <10>],
<5>: [<7>, <3>, <9>, <11>, <10>, <6>],
<0>: [<7>, <3>, <1>, <4>, <6>],
<10>: [<3>, <9>, <8>, <4>, <6>, <5>],
<4>: [<9>, <8>, <10>, <6>, <0>]}","Node <2> is connected to nodes <3>, <9>, <1>, <11>, <6>.
Node <3> is connected to nodes <2>, <9>, <8>, <10>, <6>, <5>, <0>.
Node <9> is connected to nodes <2>, <3>, <1>, <4>, <11>, <10>, <6>, <5>.
Node <1> is connected to nodes <2>, <9>, <8>, <11>, <6>, <0>.
Node <11> is connected to nodes <2>, <9>, <1>, <6>, <5>.
Node <6> is connected to nodes <2>, <7>, <3>, <9>, <1>, <4>, <11>, <10>, <5>, <0>.
Node <7> is connected to nodes <8>, <6>, <5>, <0>.
Node <8> is connected to nodes <7>, <3>, <1>, <4>, <10>.
Node <5> is connected to nodes <7>, <3>, <9>, <11>, <10>, <6>.
Node <0> is connected to nodes <7>, <3>, <1>, <4>, <6>.
Node <10> is connected to nodes <3>, <9>, <8>, <4>, <6>, <5>.
Node <4> is connected to nodes <9>, <8>, <10>, <6>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,36,False,"Start from node <11>, output a sequence of traversal in breadth-first search (BFS) order.","[<11>, <2>, <9>, <1>, <6>, <5>, <3>, <4>, <10>, <8>, <0>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <11>. Unvisited neighbors of node <11> are [<2>, <9>, <1>, <6>, <5>].
Visit node <2>. Unvisited neighbors of node <2> are [<3>].
Visit node <9>. Unvisited neighbors of node <9> are [<4>, <10>].
Visit node <1>. Unvisited neighbors of node <1> are [<8>, <0>].
Visit node <6>. Unvisited neighbors of node <6> are [<7>].
Visit node <5>. 
Visit node <3>. 
Visit node <4>. 
Visit node <10>. 
Visit node <8>. 
Visit node <0>. 
Visit node <7>. 
So the BFS traversal is ","('[[<11>, <5>, <10>, <6>, <0>, <4>, <7>, <9>, <1>, <8>, <3>, <2>], [<11>, <2>, <9>, <1>, <6>, <5>, <4>, <3>, <7>, <10>, <0>, <8>], [<11>, <2>, <9>, <1>, <6>, <5>, <3>, <4>, <10>, <8>, <0>, <7>], [<11>, <2>, <9>, <1>, <10>, <8>, <0>, <7>, <6>, <5>, <3>, <4>]]',)",2,41
BFS,"[(<9>, <1>), (<1>, <3>), (<1>, <7>), (<1>, <0>), (<3>, <7>), (<3>, <9>), (<7>, <8>), (<7>, <0>), (<0>, <1>), (<0>, <2>), (<4>, <3>), (<4>, <5>), (<5>, <6>), (<5>, <9>), (<5>, <4>), (<2>, <7>), (<2>, <5>), (<2>, <4>), (<8>, <9>), (<8>, <2>), (<6>, <2>)]","{<9>: [<1>],
<1>: [<3>, <7>, <0>],
<3>: [<7>, <9>],
<7>: [<8>, <0>],
<0>: [<1>, <2>],
<4>: [<3>, <5>],
<5>: [<6>, <9>, <4>],
<2>: [<7>, <5>, <4>],
<8>: [<9>, <2>],
<6>: [<2>]}","Node <9> is connected to node <1>.
Node <1> is connected to nodes <3>, <7>, <0>.
Node <3> is connected to nodes <7>, <9>.
Node <7> is connected to nodes <8>, <0>.
Node <0> is connected to nodes <1>, <2>.
Node <4> is connected to nodes <3>, <5>.
Node <5> is connected to nodes <6>, <9>, <4>.
Node <2> is connected to nodes <7>, <5>, <4>.
Node <8> is connected to nodes <9>, <2>.
Node <6> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,21,True,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <7>, <5>, <4>, <8>, <0>, <6>, <9>, <3>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<7>, <5>, <4>].
Visit node <7>. Unvisited neighbors of node <7> are [<8>, <0>].
Visit node <5>. Unvisited neighbors of node <5> are [<6>, <9>].
Visit node <4>. Unvisited neighbors of node <4> are [<3>].
Visit node <8>. 
Visit node <0>. Unvisited neighbors of node <0> are [<1>].
Visit node <6>. 
Visit node <9>. 
Visit node <3>. 
Visit node <1>. 
So the BFS traversal is ","('[[<2>, <7>, <5>, <9>, <3>, <1>, <4>, <8>, <0>, <6>], [<2>, <8>, <6>, <9>, <3>, <1>, <4>, <5>, <7>, <0>], [<2>, <7>, <5>, <4>, <8>, <0>, <6>, <9>, <3>, <1>], [<2>, <7>, <5>, <4>, <8>, <1>, <9>, <6>, <0>, <3>]]',)",2,42
BFS,"[(<0>, <7>), (<0>, <5>), (<0>, <6>), (<0>, <4>), (<0>, <1>), (<0>, <2>), (<7>, <5>), (<7>, <4>), (<7>, <1>), (<7>, <8>), (<7>, <2>), (<5>, <6>), (<5>, <1>), (<5>, <8>), (<5>, <2>), (<6>, <4>), (<4>, <1>), (<4>, <8>), (<4>, <2>), (<1>, <8>), (<1>, <2>), (<1>, <3>), (<2>, <8>), (<2>, <3>), (<8>, <3>)]","{<0>: [<7>, <5>, <6>, <4>, <1>, <2>],
<7>: [<0>, <5>, <4>, <1>, <8>, <2>],
<5>: [<0>, <7>, <6>, <1>, <8>, <2>],
<6>: [<0>, <5>, <4>],
<4>: [<0>, <7>, <6>, <1>, <8>, <2>],
<1>: [<0>, <7>, <5>, <4>, <8>, <2>, <3>],
<2>: [<0>, <7>, <5>, <4>, <1>, <8>, <3>],
<8>: [<7>, <5>, <4>, <1>, <2>, <3>],
<3>: [<1>, <8>, <2>]}","Node <0> is connected to nodes <7>, <5>, <6>, <4>, <1>, <2>.
Node <7> is connected to nodes <0>, <5>, <4>, <1>, <8>, <2>.
Node <5> is connected to nodes <0>, <7>, <6>, <1>, <8>, <2>.
Node <6> is connected to nodes <0>, <5>, <4>.
Node <4> is connected to nodes <0>, <7>, <6>, <1>, <8>, <2>.
Node <1> is connected to nodes <0>, <7>, <5>, <4>, <8>, <2>, <3>.
Node <2> is connected to nodes <0>, <7>, <5>, <4>, <1>, <8>, <3>.
Node <8> is connected to nodes <7>, <5>, <4>, <1>, <2>, <3>.
Node <3> is connected to nodes <1>, <8>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,25,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <0>, <7>, <6>, <1>, <8>, <2>, <5>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<0>, <7>, <6>, <1>, <8>, <2>].
Visit node <0>. Unvisited neighbors of node <0> are [<5>].
Visit node <7>. 
Visit node <6>. 
Visit node <1>. Unvisited neighbors of node <1> are [<3>].
Visit node <8>. 
Visit node <2>. 
Visit node <5>. 
Visit node <3>. 
So the BFS traversal is ","('[[<4>, <0>, <7>, <6>, <2>, <8>, <5>, <1>, <3>], [<4>, <0>, <7>, <6>, <1>, <8>, <2>, <5>, <3>], [<4>, <0>, <7>, <2>, <5>, <3>, <6>, <1>, <8>], [<4>, <0>, <8>, <3>, <1>, <7>, <2>, <6>, <5>]]',)",1,43
BFS,"[(<2>, <4>), (<2>, <11>), (<2>, <0>), (<2>, <1>), (<2>, <3>), (<2>, <6>), (<2>, <5>), (<2>, <10>), (<4>, <9>), (<4>, <11>), (<4>, <1>), (<4>, <3>), (<4>, <6>), (<4>, <5>), (<4>, <10>), (<11>, <9>), (<11>, <7>), (<11>, <0>), (<11>, <3>), (<11>, <6>), (<11>, <5>), (<11>, <10>), (<11>, <8>), (<0>, <7>), (<0>, <3>), (<0>, <10>), (<1>, <7>), (<1>, <3>), (<1>, <6>), (<1>, <5>), (<1>, <10>), (<1>, <8>), (<3>, <9>), (<3>, <7>), (<3>, <6>), (<3>, <5>), (<3>, <10>), (<3>, <8>), (<6>, <9>), (<6>, <7>), (<6>, <5>), (<6>, <10>), (<6>, <8>), (<5>, <9>), (<5>, <10>), (<5>, <8>), (<10>, <9>), (<10>, <7>), (<9>, <7>), (<7>, <8>)]","{<2>: [<4>, <11>, <0>, <1>, <3>, <6>, <5>, <10>],
<4>: [<2>, <9>, <11>, <1>, <3>, <6>, <5>, <10>],
<11>: [<2>, <4>, <9>, <7>, <0>, <3>, <6>, <5>, <10>, <8>],
<0>: [<2>, <7>, <11>, <3>, <10>],
<1>: [<2>, <4>, <7>, <3>, <6>, <5>, <10>, <8>],
<3>: [<2>, <4>, <9>, <7>, <11>, <0>, <1>, <6>, <5>, <10>, <8>],
<6>: [<2>, <4>, <9>, <7>, <11>, <1>, <3>, <5>, <10>, <8>],
<5>: [<2>, <4>, <9>, <11>, <1>, <3>, <6>, <10>, <8>],
<10>: [<2>, <4>, <9>, <7>, <11>, <0>, <1>, <3>, <6>, <5>],
<9>: [<4>, <7>, <11>, <3>, <6>, <5>, <10>],
<7>: [<9>, <11>, <0>, <1>, <3>, <6>, <10>, <8>],
<8>: [<7>, <11>, <1>, <3>, <6>, <5>]}","Node <2> is connected to nodes <4>, <11>, <0>, <1>, <3>, <6>, <5>, <10>.
Node <4> is connected to nodes <2>, <9>, <11>, <1>, <3>, <6>, <5>, <10>.
Node <11> is connected to nodes <2>, <4>, <9>, <7>, <0>, <3>, <6>, <5>, <10>, <8>.
Node <0> is connected to nodes <2>, <7>, <11>, <3>, <10>.
Node <1> is connected to nodes <2>, <4>, <7>, <3>, <6>, <5>, <10>, <8>.
Node <3> is connected to nodes <2>, <4>, <9>, <7>, <11>, <0>, <1>, <6>, <5>, <10>, <8>.
Node <6> is connected to nodes <2>, <4>, <9>, <7>, <11>, <1>, <3>, <5>, <10>, <8>.
Node <5> is connected to nodes <2>, <4>, <9>, <11>, <1>, <3>, <6>, <10>, <8>.
Node <10> is connected to nodes <2>, <4>, <9>, <7>, <11>, <0>, <1>, <3>, <6>, <5>.
Node <9> is connected to nodes <4>, <7>, <11>, <3>, <6>, <5>, <10>.
Node <7> is connected to nodes <9>, <11>, <0>, <1>, <3>, <6>, <10>, <8>.
Node <8> is connected to nodes <7>, <11>, <1>, <3>, <6>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,50,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <4>, <11>, <0>, <1>, <3>, <6>, <5>, <10>, <9>, <7>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<4>, <11>, <0>, <1>, <3>, <6>, <5>, <10>].
Visit node <4>. Unvisited neighbors of node <4> are [<9>].
Visit node <11>. Unvisited neighbors of node <11> are [<7>, <8>].
Visit node <0>. 
Visit node <1>. 
Visit node <3>. 
Visit node <6>. 
Visit node <5>. 
Visit node <10>. 
Visit node <9>. 
Visit node <7>. 
Visit node <8>. 
So the BFS traversal is ","('[[<2>, <4>, <11>, <0>, <10>, <9>, <7>, <8>, <1>, <3>, <6>, <5>], [<2>, <1>, <7>, <11>, <4>, <9>, <5>, <3>, <8>, <6>, <10>, <0>], [<2>, <4>, <11>, <0>, <1>, <3>, <6>, <5>, <10>, <9>, <7>, <8>], [<2>, <4>, <11>, <0>, <1>, <3>, <9>, <10>, <6>, <7>, <8>, <5>]]',)",2,44
BFS,"[(<10>, <7>), (<10>, <3>), (<10>, <4>), (<3>, <2>), (<4>, <12>), (<11>, <5>), (<11>, <14>), (<11>, <1>), (<11>, <6>), (<11>, <9>), (<11>, <0>), (<11>, <12>), (<11>, <13>), (<9>, <8>)]","{<10>: [<7>, <3>, <4>],
<7>: [<10>],
<3>: [<10>, <2>],
<4>: [<10>, <12>],
<2>: [<3>],
<11>: [<5>, <14>, <1>, <6>, <9>, <0>, <12>, <13>],
<5>: [<11>],
<14>: [<11>],
<1>: [<11>],
<6>: [<11>],
<9>: [<11>, <8>],
<0>: [<11>],
<12>: [<11>, <4>],
<13>: [<11>],
<8>: [<9>]}","Node <10> is connected to nodes <7>, <3>, <4>.
Node <7> is connected to node <10>.
Node <3> is connected to nodes <10>, <2>.
Node <4> is connected to nodes <10>, <12>.
Node <2> is connected to node <3>.
Node <11> is connected to nodes <5>, <14>, <1>, <6>, <9>, <0>, <12>, <13>.
Node <5> is connected to node <11>.
Node <14> is connected to node <11>.
Node <1> is connected to node <11>.
Node <6> is connected to node <11>.
Node <9> is connected to nodes <11>, <8>.
Node <0> is connected to node <11>.
Node <12> is connected to nodes <11>, <4>.
Node <13> is connected to node <11>.
Node <8> is connected to node <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,14,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <11>, <5>, <14>, <1>, <6>, <9>, <12>, <13>, <8>, <4>, <10>, <7>, <3>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<11>].
Visit node <11>. Unvisited neighbors of node <11> are [<5>, <14>, <1>, <6>, <9>, <12>, <13>].
Visit node <5>. 
Visit node <14>. 
Visit node <1>. 
Visit node <6>. 
Visit node <9>. Unvisited neighbors of node <9> are [<8>].
Visit node <12>. Unvisited neighbors of node <12> are [<4>].
Visit node <13>. 
Visit node <8>. 
Visit node <4>. Unvisited neighbors of node <4> are [<10>].
Visit node <10>. Unvisited neighbors of node <10> are [<7>, <3>].
Visit node <7>. 
Visit node <3>. Unvisited neighbors of node <3> are [<2>].
Visit node <2>. 
So the BFS traversal is ","('[[<0>, <11>, <5>, <14>, <1>, <4>, <10>, <7>, <3>, <2>, <6>, <9>, <12>, <13>, <8>], [<0>, <11>, <5>, <14>, <1>, <6>, <9>, <10>, <4>, <7>, <8>, <13>, <2>, <3>, <12>], [<0>, <11>, <5>, <14>, <1>, <6>, <9>, <12>, <13>, <8>, <4>, <10>, <7>, <3>, <2>], [<0>, <6>, <1>, <3>, <9>, <12>, <2>, <5>, <10>, <8>, <11>, <14>, <7>, <13>, <4>]]',)",2,45
BFS,"[(<5>, <2>), (<5>, <4>), (<5>, <3>), (<2>, <7>), (<4>, <3>), (<4>, <0>), (<4>, <5>), (<4>, <7>), (<4>, <1>), (<3>, <0>), (<3>, <5>), (<3>, <7>), (<3>, <2>), (<3>, <4>), (<7>, <1>), (<7>, <6>), (<7>, <0>), (<7>, <5>), (<1>, <3>), (<1>, <6>), (<1>, <7>), (<1>, <2>), (<6>, <5>), (<6>, <7>), (<6>, <2>), (<6>, <1>), (<6>, <4>), (<0>, <7>), (<0>, <2>), (<0>, <4>)]","{<5>: [<2>, <4>, <3>],
<2>: [<7>],
<4>: [<3>, <0>, <5>, <7>, <1>],
<3>: [<0>, <5>, <7>, <2>, <4>],
<7>: [<1>, <6>, <0>, <5>],
<1>: [<3>, <6>, <7>, <2>],
<6>: [<5>, <7>, <2>, <1>, <4>],
<0>: [<7>, <2>, <4>]}","Node <5> is connected to nodes <2>, <4>, <3>.
Node <2> is connected to node <7>.
Node <4> is connected to nodes <3>, <0>, <5>, <7>, <1>.
Node <3> is connected to nodes <0>, <5>, <7>, <2>, <4>.
Node <7> is connected to nodes <1>, <6>, <0>, <5>.
Node <1> is connected to nodes <3>, <6>, <7>, <2>.
Node <6> is connected to nodes <5>, <7>, <2>, <1>, <4>.
Node <0> is connected to nodes <7>, <2>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,30,True,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <2>, <4>, <3>, <7>, <0>, <1>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<2>, <4>, <3>].
Visit node <2>. Unvisited neighbors of node <2> are [<7>].
Visit node <4>. Unvisited neighbors of node <4> are [<0>, <1>].
Visit node <3>. 
Visit node <7>. Unvisited neighbors of node <7> are [<6>].
Visit node <0>. 
Visit node <1>. 
Visit node <6>. 
So the BFS traversal is ","('[[<5>, <2>, <3>, <4>, <7>, <1>, <0>, <6>], [<5>, <2>, <1>, <6>, <4>, <3>, <7>, <0>], [<5>, <2>, <4>, <3>, <6>, <7>, <0>, <1>], [<5>, <2>, <4>, <3>, <7>, <0>, <1>, <6>]]',)",3,46
BFS,"[(<0>, <1>), (<0>, <2>), (<0>, <4>), (<1>, <9>), (<1>, <4>), (<2>, <3>), (<2>, <5>), (<9>, <7>), (<3>, <8>), (<7>, <6>)]","{<0>: [<1>, <2>, <4>],
<1>: [<0>, <9>, <4>],
<2>: [<0>, <3>, <5>],
<4>: [<0>, <1>],
<9>: [<1>, <7>],
<3>: [<8>, <2>],
<8>: [<3>],
<5>: [<2>],
<7>: [<9>, <6>],
<6>: [<7>]}","Node <0> is connected to nodes <1>, <2>, <4>.
Node <1> is connected to nodes <0>, <9>, <4>.
Node <2> is connected to nodes <0>, <3>, <5>.
Node <4> is connected to nodes <0>, <1>.
Node <9> is connected to nodes <1>, <7>.
Node <3> is connected to nodes <8>, <2>.
Node <8> is connected to node <3>.
Node <5> is connected to node <2>.
Node <7> is connected to nodes <9>, <6>.
Node <6> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,10,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <2>, <0>, <3>, <1>, <4>, <8>, <9>, <7>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<2>].
Visit node <2>. Unvisited neighbors of node <2> are [<0>, <3>].
Visit node <0>. Unvisited neighbors of node <0> are [<1>, <4>].
Visit node <3>. Unvisited neighbors of node <3> are [<8>].
Visit node <1>. Unvisited neighbors of node <1> are [<9>].
Visit node <4>. 
Visit node <8>. 
Visit node <9>. Unvisited neighbors of node <9> are [<7>].
Visit node <7>. Unvisited neighbors of node <7> are [<6>].
Visit node <6>. 
So the BFS traversal is ","('[[<5>, <1>, <3>, <8>, <6>, <7>, <4>, <9>, <0>, <2>], [<5>, <2>, <0>, <9>, <7>, <6>, <3>, <1>, <4>, <8>], [<5>, <2>, <0>, <3>, <1>, <4>, <8>, <9>, <7>, <6>], [<5>, <2>, <0>, <3>, <1>, <4>, <6>, <8>, <7>, <9>]]',)",2,47
BFS,"[(<5>, <0>), (<5>, <6>), (<5>, <2>), (<0>, <4>), (<6>, <3>), (<6>, <8>), (<2>, <3>), (<4>, <7>), (<8>, <1>)]","{<5>: [<0>, <6>, <2>],
<0>: [<5>, <4>],
<6>: [<5>, <3>, <8>],
<2>: [<5>, <3>],
<4>: [<0>, <7>],
<3>: [<6>, <2>],
<8>: [<6>, <1>],
<1>: [<8>],
<7>: [<4>]}","Node <5> is connected to nodes <0>, <6>, <2>.
Node <0> is connected to nodes <5>, <4>.
Node <6> is connected to nodes <5>, <3>, <8>.
Node <2> is connected to nodes <5>, <3>.
Node <4> is connected to nodes <0>, <7>.
Node <3> is connected to nodes <6>, <2>.
Node <8> is connected to nodes <6>, <1>.
Node <1> is connected to node <8>.
Node <7> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <8>, <6>, <5>, <3>, <0>, <2>, <4>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<8>].
Visit node <8>. Unvisited neighbors of node <8> are [<6>].
Visit node <6>. Unvisited neighbors of node <6> are [<5>, <3>].
Visit node <5>. Unvisited neighbors of node <5> are [<0>, <2>].
Visit node <3>. 
Visit node <0>. Unvisited neighbors of node <0> are [<4>].
Visit node <2>. 
Visit node <4>. Unvisited neighbors of node <4> are [<7>].
Visit node <7>. 
So the BFS traversal is ","('[[<1>, <8>, <6>, <5>, <4>, <0>, <7>, <2>, <3>], [<1>, <8>, <6>, <2>, <4>, <7>, <5>, <3>, <0>], [<1>, <7>, <3>, <4>, <6>, <2>, <8>, <5>, <0>], [<1>, <8>, <6>, <5>, <3>, <0>, <2>, <4>, <7>]]',)",3,48
BFS,"[(<1>, <0>), (<1>, <8>), (<1>, <6>), (<1>, <2>), (<1>, <9>), (<1>, <4>), (<0>, <7>), (<0>, <6>), (<0>, <5>), (<0>, <3>), (<0>, <9>), (<8>, <7>), (<8>, <6>), (<8>, <5>), (<8>, <2>), (<8>, <3>), (<8>, <9>), (<6>, <5>), (<6>, <2>), (<6>, <3>), (<6>, <9>), (<6>, <4>), (<2>, <7>), (<2>, <5>), (<2>, <3>), (<2>, <9>), (<2>, <4>), (<9>, <5>), (<9>, <4>), (<4>, <3>), (<7>, <5>), (<7>, <3>), (<5>, <3>)]","{<1>: [<0>, <8>, <6>, <2>, <9>, <4>],
<0>: [<1>, <7>, <6>, <5>, <3>, <9>],
<8>: [<1>, <7>, <6>, <5>, <2>, <3>, <9>],
<6>: [<1>, <0>, <8>, <5>, <2>, <3>, <9>, <4>],
<2>: [<1>, <8>, <7>, <6>, <5>, <3>, <9>, <4>],
<9>: [<1>, <0>, <8>, <6>, <5>, <2>, <4>],
<4>: [<1>, <6>, <2>, <3>, <9>],
<7>: [<0>, <8>, <5>, <2>, <3>],
<5>: [<0>, <8>, <7>, <6>, <2>, <3>, <9>],
<3>: [<0>, <8>, <7>, <6>, <5>, <2>, <4>]}","Node <1> is connected to nodes <0>, <8>, <6>, <2>, <9>, <4>.
Node <0> is connected to nodes <1>, <7>, <6>, <5>, <3>, <9>.
Node <8> is connected to nodes <1>, <7>, <6>, <5>, <2>, <3>, <9>.
Node <6> is connected to nodes <1>, <0>, <8>, <5>, <2>, <3>, <9>, <4>.
Node <2> is connected to nodes <1>, <8>, <7>, <6>, <5>, <3>, <9>, <4>.
Node <9> is connected to nodes <1>, <0>, <8>, <6>, <5>, <2>, <4>.
Node <4> is connected to nodes <1>, <6>, <2>, <3>, <9>.
Node <7> is connected to nodes <0>, <8>, <5>, <2>, <3>.
Node <5> is connected to nodes <0>, <8>, <7>, <6>, <2>, <3>, <9>.
Node <3> is connected to nodes <0>, <8>, <7>, <6>, <5>, <2>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,33,False,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <1>, <7>, <6>, <5>, <2>, <3>, <9>, <0>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<1>, <7>, <6>, <5>, <2>, <3>, <9>].
Visit node <1>. Unvisited neighbors of node <1> are [<0>, <4>].
Visit node <7>. 
Visit node <6>. 
Visit node <5>. 
Visit node <2>. 
Visit node <3>. 
Visit node <9>. 
Visit node <0>. 
Visit node <4>. 
So the BFS traversal is ","('[[<8>, <1>, <7>, <6>, <5>, <2>, <3>, <9>, <0>, <4>], [<8>, <1>, <7>, <6>, <5>, <3>, <0>, <9>, <2>, <4>], [<8>, <1>, <7>, <9>, <0>, <4>, <6>, <5>, <2>, <3>], [<8>, <9>, <4>, <3>, <6>, <2>, <7>, <0>, <5>, <1>]]',)",0,49
BFS,"[(<7>, <3>), (<7>, <10>), (<7>, <2>), (<3>, <10>), (<2>, <5>), (<1>, <5>), (<1>, <9>), (<9>, <4>), (<11>, <6>), (<11>, <8>), (<6>, <4>), (<8>, <0>)]","{<7>: [<3>, <10>, <2>],
<3>: [<7>, <10>],
<10>: [<7>, <3>],
<2>: [<7>, <5>],
<1>: [<5>, <9>],
<5>: [<1>, <2>],
<9>: [<1>, <4>],
<11>: [<6>, <8>],
<6>: [<11>, <4>],
<8>: [<11>, <0>],
<4>: [<6>, <9>],
<0>: [<8>]}","Node <7> is connected to nodes <3>, <10>, <2>.
Node <3> is connected to nodes <7>, <10>.
Node <10> is connected to nodes <7>, <3>.
Node <2> is connected to nodes <7>, <5>.
Node <1> is connected to nodes <5>, <9>.
Node <5> is connected to nodes <1>, <2>.
Node <9> is connected to nodes <1>, <4>.
Node <11> is connected to nodes <6>, <8>.
Node <6> is connected to nodes <11>, <4>.
Node <8> is connected to nodes <11>, <0>.
Node <4> is connected to nodes <6>, <9>.
Node <0> is connected to node <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,12,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <1>, <4>, <5>, <6>, <2>, <11>, <7>, <8>, <3>, <10>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<1>, <4>].
Visit node <1>. Unvisited neighbors of node <1> are [<5>].
Visit node <4>. Unvisited neighbors of node <4> are [<6>].
Visit node <5>. Unvisited neighbors of node <5> are [<2>].
Visit node <6>. Unvisited neighbors of node <6> are [<11>].
Visit node <2>. Unvisited neighbors of node <2> are [<7>].
Visit node <11>. Unvisited neighbors of node <11> are [<8>].
Visit node <7>. Unvisited neighbors of node <7> are [<3>, <10>].
Visit node <8>. Unvisited neighbors of node <8> are [<0>].
Visit node <3>. 
Visit node <10>. 
Visit node <0>. 
So the BFS traversal is ","('[[<9>, <1>, <4>, <5>, <6>, <2>, <8>, <10>, <11>, <0>, <7>, <3>], [<9>, <1>, <4>, <5>, <8>, <3>, <10>, <0>, <6>, <2>, <11>, <7>], [<9>, <1>, <4>, <5>, <6>, <2>, <11>, <7>, <8>, <3>, <10>, <0>], [<9>, <10>, <11>, <5>, <3>, <6>, <1>, <7>, <8>, <2>, <0>, <4>]]',)",2,50
BFS,"[(<2>, <8>), (<2>, <4>), (<2>, <7>), (<8>, <1>), (<4>, <5>), (<7>, <6>), (<1>, <0>), (<0>, <5>), (<6>, <3>)]","{<2>: [<8>, <4>, <7>],
<8>: [<2>, <1>],
<4>: [<2>, <5>],
<7>: [<2>, <6>],
<1>: [<8>, <0>],
<0>: [<1>, <5>],
<5>: [<0>, <4>],
<6>: [<7>, <3>],
<3>: [<6>]}","Node <2> is connected to nodes <8>, <4>, <7>.
Node <8> is connected to nodes <2>, <1>.
Node <4> is connected to nodes <2>, <5>.
Node <7> is connected to nodes <2>, <6>.
Node <1> is connected to nodes <8>, <0>.
Node <0> is connected to nodes <1>, <5>.
Node <5> is connected to nodes <0>, <4>.
Node <6> is connected to nodes <7>, <3>.
Node <3> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <7>, <3>, <2>, <8>, <4>, <1>, <5>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<7>, <3>].
Visit node <7>. Unvisited neighbors of node <7> are [<2>].
Visit node <3>. 
Visit node <2>. Unvisited neighbors of node <2> are [<8>, <4>].
Visit node <8>. Unvisited neighbors of node <8> are [<1>].
Visit node <4>. Unvisited neighbors of node <4> are [<5>].
Visit node <1>. Unvisited neighbors of node <1> are [<0>].
Visit node <5>. 
Visit node <0>. 
So the BFS traversal is ","('[[<6>, <3>, <7>, <4>, <8>, <0>, <1>, <5>, <2>], [<6>, <7>, <3>, <1>, <5>, <0>, <2>, <8>, <4>], [<6>, <7>, <3>, <2>, <8>, <4>, <1>, <5>, <0>], [<6>, <7>, <3>, <2>, <0>, <1>, <4>, <5>, <8>]]',)",2,51
BFS,"[(<6>, <9>), (<6>, <11>), (<9>, <0>), (<9>, <2>), (<9>, <8>), (<11>, <4>), (<11>, <12>), (<11>, <7>), (<11>, <3>), (<4>, <0>), (<4>, <10>), (<0>, <1>), (<0>, <5>), (<0>, <10>), (<10>, <5>), (<10>, <7>), (<1>, <5>), (<1>, <3>), (<5>, <12>), (<5>, <7>), (<5>, <3>), (<3>, <12>), (<3>, <13>), (<3>, <2>), (<12>, <7>), (<12>, <8>), (<13>, <2>)]","{<6>: [<9>, <11>],
<9>: [<6>, <0>, <2>, <8>],
<11>: [<6>, <4>, <12>, <7>, <3>],
<4>: [<0>, <11>, <10>],
<0>: [<4>, <1>, <9>, <5>, <10>],
<10>: [<4>, <0>, <5>, <7>],
<1>: [<0>, <5>, <3>],
<5>: [<0>, <1>, <12>, <7>, <3>, <10>],
<3>: [<1>, <12>, <13>, <5>, <2>, <11>],
<12>: [<5>, <7>, <11>, <3>, <8>],
<7>: [<12>, <5>, <11>, <10>],
<8>: [<12>, <9>],
<13>: [<2>, <3>],
<2>: [<13>, <9>, <3>]}","Node <6> is connected to nodes <9>, <11>.
Node <9> is connected to nodes <6>, <0>, <2>, <8>.
Node <11> is connected to nodes <6>, <4>, <12>, <7>, <3>.
Node <4> is connected to nodes <0>, <11>, <10>.
Node <0> is connected to nodes <4>, <1>, <9>, <5>, <10>.
Node <10> is connected to nodes <4>, <0>, <5>, <7>.
Node <1> is connected to nodes <0>, <5>, <3>.
Node <5> is connected to nodes <0>, <1>, <12>, <7>, <3>, <10>.
Node <3> is connected to nodes <1>, <12>, <13>, <5>, <2>, <11>.
Node <12> is connected to nodes <5>, <7>, <11>, <3>, <8>.
Node <7> is connected to nodes <12>, <5>, <11>, <10>.
Node <8> is connected to nodes <12>, <9>.
Node <13> is connected to nodes <2>, <3>.
Node <2> is connected to nodes <13>, <9>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,27,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <1>, <12>, <13>, <5>, <2>, <11>, <0>, <7>, <8>, <10>, <9>, <6>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<1>, <12>, <13>, <5>, <2>, <11>].
Visit node <1>. Unvisited neighbors of node <1> are [<0>].
Visit node <12>. Unvisited neighbors of node <12> are [<7>, <8>].
Visit node <13>. 
Visit node <5>. Unvisited neighbors of node <5> are [<10>].
Visit node <2>. Unvisited neighbors of node <2> are [<9>].
Visit node <11>. Unvisited neighbors of node <11> are [<6>, <4>].
Visit node <0>. 
Visit node <7>. 
Visit node <8>. 
Visit node <10>. 
Visit node <9>. 
Visit node <6>. 
Visit node <4>. 
So the BFS traversal is ","('[[<3>, <1>, <12>, <13>, <5>, <2>, <11>, <6>, <9>, <7>, <0>, <8>, <10>, <4>], [<3>, <13>, <8>, <2>, <4>, <12>, <9>, <5>, <11>, <0>, <6>, <10>, <1>, <7>], [<3>, <1>, <12>, <13>, <5>, <2>, <11>, <0>, <7>, <8>, <10>, <9>, <6>, <4>], [<3>, <1>, <12>, <13>, <10>, <9>, <6>, <4>, <5>, <2>, <11>, <0>, <7>, <8>]]',)",2,52
BFS,"[(<3>, <9>), (<3>, <6>), (<3>, <0>), (<3>, <8>), (<3>, <7>), (<3>, <1>), (<9>, <6>), (<9>, <0>), (<9>, <5>), (<9>, <4>), (<9>, <8>), (<9>, <10>), (<6>, <11>), (<6>, <5>), (<6>, <8>), (<6>, <10>), (<6>, <2>), (<6>, <7>), (<6>, <1>), (<0>, <4>), (<0>, <10>), (<0>, <2>), (<0>, <1>), (<8>, <11>), (<8>, <5>), (<8>, <4>), (<8>, <2>), (<8>, <1>), (<7>, <11>), (<7>, <5>), (<7>, <10>), (<7>, <2>), (<1>, <11>), (<1>, <5>), (<1>, <2>), (<5>, <11>), (<5>, <4>), (<5>, <10>), (<5>, <2>), (<4>, <11>), (<4>, <10>), (<4>, <2>), (<10>, <11>), (<10>, <2>), (<11>, <2>)]","{<3>: [<9>, <6>, <0>, <8>, <7>, <1>],
<9>: [<3>, <6>, <0>, <5>, <4>, <8>, <10>],
<6>: [<3>, <9>, <11>, <5>, <8>, <10>, <2>, <7>, <1>],
<0>: [<3>, <9>, <4>, <10>, <2>, <1>],
<8>: [<3>, <9>, <6>, <11>, <5>, <4>, <2>, <1>],
<7>: [<3>, <6>, <11>, <5>, <10>, <2>],
<1>: [<3>, <6>, <11>, <0>, <5>, <8>, <2>],
<5>: [<9>, <6>, <11>, <4>, <8>, <10>, <2>, <7>, <1>],
<4>: [<9>, <11>, <0>, <5>, <8>, <10>, <2>],
<10>: [<9>, <6>, <11>, <0>, <5>, <4>, <2>, <7>],
<11>: [<6>, <5>, <4>, <8>, <10>, <2>, <7>, <1>],
<2>: [<6>, <11>, <0>, <5>, <4>, <8>, <10>, <7>, <1>]}","Node <3> is connected to nodes <9>, <6>, <0>, <8>, <7>, <1>.
Node <9> is connected to nodes <3>, <6>, <0>, <5>, <4>, <8>, <10>.
Node <6> is connected to nodes <3>, <9>, <11>, <5>, <8>, <10>, <2>, <7>, <1>.
Node <0> is connected to nodes <3>, <9>, <4>, <10>, <2>, <1>.
Node <8> is connected to nodes <3>, <9>, <6>, <11>, <5>, <4>, <2>, <1>.
Node <7> is connected to nodes <3>, <6>, <11>, <5>, <10>, <2>.
Node <1> is connected to nodes <3>, <6>, <11>, <0>, <5>, <8>, <2>.
Node <5> is connected to nodes <9>, <6>, <11>, <4>, <8>, <10>, <2>, <7>, <1>.
Node <4> is connected to nodes <9>, <11>, <0>, <5>, <8>, <10>, <2>.
Node <10> is connected to nodes <9>, <6>, <11>, <0>, <5>, <4>, <2>, <7>.
Node <11> is connected to nodes <6>, <5>, <4>, <8>, <10>, <2>, <7>, <1>.
Node <2> is connected to nodes <6>, <11>, <0>, <5>, <4>, <8>, <10>, <7>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,45,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <9>, <6>, <0>, <8>, <7>, <1>, <5>, <4>, <10>, <11>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<9>, <6>, <0>, <8>, <7>, <1>].
Visit node <9>. Unvisited neighbors of node <9> are [<5>, <4>, <10>].
Visit node <6>. Unvisited neighbors of node <6> are [<11>, <2>].
Visit node <0>. 
Visit node <8>. 
Visit node <7>. 
Visit node <1>. 
Visit node <5>. 
Visit node <4>. 
Visit node <10>. 
Visit node <11>. 
Visit node <2>. 
So the BFS traversal is ","('[[<3>, <9>, <6>, <0>, <8>, <7>, <1>, <5>, <4>, <10>, <11>, <2>], [<3>, <9>, <11>, <5>, <1>, <0>, <2>, <4>, <7>, <8>, <6>, <10>], [<3>, <9>, <6>, <0>, <8>, <7>, <2>, <10>, <4>, <11>, <5>, <1>], [<3>, <9>, <6>, <0>, <4>, <10>, <11>, <2>, <8>, <7>, <1>, <5>]]',)",0,53
BFS,"[(<6>, <8>), (<6>, <5>), (<8>, <10>), (<5>, <11>), (<10>, <3>), (<14>, <13>), (<14>, <9>), (<13>, <7>), (<13>, <1>), (<7>, <0>), (<1>, <12>), (<0>, <4>), (<4>, <3>), (<4>, <12>), (<2>, <11>)]","{<6>: [<8>, <5>],
<8>: [<6>, <10>],
<5>: [<6>, <11>],
<10>: [<8>, <3>],
<14>: [<13>, <9>],
<13>: [<14>, <7>, <1>],
<9>: [<14>],
<7>: [<13>, <0>],
<1>: [<13>, <12>],
<0>: [<7>, <4>],
<4>: [<0>, <3>, <12>],
<2>: [<11>],
<11>: [<2>, <5>],
<12>: [<1>, <4>],
<3>: [<4>, <10>]}","Node <6> is connected to nodes <8>, <5>.
Node <8> is connected to nodes <6>, <10>.
Node <5> is connected to nodes <6>, <11>.
Node <10> is connected to nodes <8>, <3>.
Node <14> is connected to nodes <13>, <9>.
Node <13> is connected to nodes <14>, <7>, <1>.
Node <9> is connected to node <14>.
Node <7> is connected to nodes <13>, <0>.
Node <1> is connected to nodes <13>, <12>.
Node <0> is connected to nodes <7>, <4>.
Node <4> is connected to nodes <0>, <3>, <12>.
Node <2> is connected to node <11>.
Node <11> is connected to nodes <2>, <5>.
Node <12> is connected to nodes <1>, <4>.
Node <3> is connected to nodes <4>, <10>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,15,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <6>, <11>, <8>, <2>, <10>, <3>, <4>, <0>, <12>, <7>, <1>, <13>, <14>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<6>, <11>].
Visit node <6>. Unvisited neighbors of node <6> are [<8>].
Visit node <11>. Unvisited neighbors of node <11> are [<2>].
Visit node <8>. Unvisited neighbors of node <8> are [<10>].
Visit node <2>. 
Visit node <10>. Unvisited neighbors of node <10> are [<3>].
Visit node <3>. Unvisited neighbors of node <3> are [<4>].
Visit node <4>. Unvisited neighbors of node <4> are [<0>, <12>].
Visit node <0>. Unvisited neighbors of node <0> are [<7>].
Visit node <12>. Unvisited neighbors of node <12> are [<1>].
Visit node <7>. Unvisited neighbors of node <7> are [<13>].
Visit node <1>. 
Visit node <13>. Unvisited neighbors of node <13> are [<14>].
Visit node <14>. Unvisited neighbors of node <14> are [<9>].
Visit node <9>. 
So the BFS traversal is ","('[[<5>, <6>, <11>, <8>, <2>, <10>, <3>, <4>, <12>, <13>, <1>, <0>, <9>, <14>, <7>], [<5>, <6>, <11>, <8>, <2>, <7>, <1>, <13>, <14>, <9>, <10>, <3>, <4>, <0>, <12>], [<5>, <0>, <10>, <8>, <2>, <11>, <14>, <1>, <6>, <13>, <9>, <7>, <3>, <4>, <12>], [<5>, <6>, <11>, <8>, <2>, <10>, <3>, <4>, <0>, <12>, <7>, <1>, <13>, <14>, <9>]]',)",3,54
BFS,"[(<5>, <9>), (<5>, <12>), (<5>, <0>), (<5>, <4>), (<5>, <8>), (<9>, <12>), (<12>, <10>), (<0>, <7>), (<0>, <6>), (<0>, <2>), (<4>, <7>), (<8>, <10>), (<8>, <6>), (<7>, <10>), (<7>, <3>), (<10>, <1>), (<10>, <2>), (<10>, <11>), (<10>, <6>), (<3>, <2>), (<2>, <11>), (<2>, <1>)]","{<5>: [<9>, <12>, <0>, <4>, <8>],
<9>: [<5>, <12>],
<12>: [<5>, <9>, <10>],
<0>: [<5>, <7>, <6>, <2>],
<4>: [<5>, <7>],
<8>: [<5>, <10>, <6>],
<7>: [<0>, <10>, <3>, <4>],
<10>: [<7>, <12>, <1>, <2>, <11>, <8>, <6>],
<3>: [<7>, <2>],
<6>: [<0>, <10>, <8>],
<2>: [<0>, <10>, <11>, <3>, <1>],
<1>: [<10>, <2>],
<11>: [<10>, <2>]}","Node <5> is connected to nodes <9>, <12>, <0>, <4>, <8>.
Node <9> is connected to nodes <5>, <12>.
Node <12> is connected to nodes <5>, <9>, <10>.
Node <0> is connected to nodes <5>, <7>, <6>, <2>.
Node <4> is connected to nodes <5>, <7>.
Node <8> is connected to nodes <5>, <10>, <6>.
Node <7> is connected to nodes <0>, <10>, <3>, <4>.
Node <10> is connected to nodes <7>, <12>, <1>, <2>, <11>, <8>, <6>.
Node <3> is connected to nodes <7>, <2>.
Node <6> is connected to nodes <0>, <10>, <8>.
Node <2> is connected to nodes <0>, <10>, <11>, <3>, <1>.
Node <1> is connected to nodes <10>, <2>.
Node <11> is connected to nodes <10>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,22,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <0>, <10>, <11>, <3>, <1>, <5>, <7>, <6>, <12>, <8>, <9>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<0>, <10>, <11>, <3>, <1>].
Visit node <0>. Unvisited neighbors of node <0> are [<5>, <7>, <6>].
Visit node <10>. Unvisited neighbors of node <10> are [<12>, <8>].
Visit node <11>. 
Visit node <3>. 
Visit node <1>. 
Visit node <5>. Unvisited neighbors of node <5> are [<9>, <4>].
Visit node <7>. 
Visit node <6>. 
Visit node <12>. 
Visit node <8>. 
Visit node <9>. 
Visit node <4>. 
So the BFS traversal is ","('[[<2>, <0>, <10>, <11>, <3>, <1>, <8>, <6>, <7>, <12>, <4>, <5>, <9>], [<2>, <12>, <9>, <10>, <8>, <1>, <4>, <0>, <6>, <7>, <11>, <5>, <3>], [<2>, <0>, <10>, <11>, <3>, <1>, <5>, <7>, <6>, <12>, <8>, <9>, <4>], [<2>, <0>, <10>, <11>, <12>, <8>, <9>, <4>, <3>, <1>, <5>, <7>, <6>]]',)",2,55
BFS,"[(<6>, <4>), (<6>, <9>), (<6>, <13>), (<6>, <10>), (<4>, <2>), (<4>, <9>), (<4>, <14>), (<4>, <5>), (<9>, <14>), (<9>, <11>), (<13>, <7>), (<13>, <11>), (<13>, <2>), (<10>, <0>), (<10>, <1>), (<10>, <12>), (<2>, <0>), (<2>, <3>), (<14>, <5>), (<14>, <1>), (<5>, <0>), (<5>, <7>), (<5>, <12>), (<11>, <3>), (<1>, <12>), (<1>, <3>), (<0>, <7>), (<0>, <8>), (<0>, <12>), (<8>, <12>)]","{<6>: [<4>, <9>, <13>, <10>],
<4>: [<6>, <2>, <9>, <14>, <5>],
<9>: [<6>, <4>, <14>, <11>],
<13>: [<6>, <7>, <11>, <2>],
<10>: [<6>, <0>, <1>, <12>],
<2>: [<4>, <0>, <3>, <13>],
<14>: [<4>, <9>, <5>, <1>],
<5>: [<4>, <14>, <0>, <7>, <12>],
<11>: [<9>, <3>, <13>],
<1>: [<14>, <10>, <12>, <3>],
<0>: [<7>, <5>, <10>, <2>, <8>, <12>],
<7>: [<0>, <5>, <13>],
<8>: [<0>, <12>],
<12>: [<0>, <1>, <10>, <8>, <5>],
<3>: [<1>, <11>, <2>]}","Node <6> is connected to nodes <4>, <9>, <13>, <10>.
Node <4> is connected to nodes <6>, <2>, <9>, <14>, <5>.
Node <9> is connected to nodes <6>, <4>, <14>, <11>.
Node <13> is connected to nodes <6>, <7>, <11>, <2>.
Node <10> is connected to nodes <6>, <0>, <1>, <12>.
Node <2> is connected to nodes <4>, <0>, <3>, <13>.
Node <14> is connected to nodes <4>, <9>, <5>, <1>.
Node <5> is connected to nodes <4>, <14>, <0>, <7>, <12>.
Node <11> is connected to nodes <9>, <3>, <13>.
Node <1> is connected to nodes <14>, <10>, <12>, <3>.
Node <0> is connected to nodes <7>, <5>, <10>, <2>, <8>, <12>.
Node <7> is connected to nodes <0>, <5>, <13>.
Node <8> is connected to nodes <0>, <12>.
Node <12> is connected to nodes <0>, <1>, <10>, <8>, <5>.
Node <3> is connected to nodes <1>, <11>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,30,False,"Start from node <11>, output a sequence of traversal in breadth-first search (BFS) order.","[<11>, <9>, <3>, <13>, <6>, <4>, <14>, <1>, <2>, <7>, <10>, <5>, <12>, <0>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <11>. Unvisited neighbors of node <11> are [<9>, <3>, <13>].
Visit node <9>. Unvisited neighbors of node <9> are [<6>, <4>, <14>].
Visit node <3>. Unvisited neighbors of node <3> are [<1>, <2>].
Visit node <13>. Unvisited neighbors of node <13> are [<7>].
Visit node <6>. Unvisited neighbors of node <6> are [<10>].
Visit node <4>. Unvisited neighbors of node <4> are [<5>].
Visit node <14>. 
Visit node <1>. Unvisited neighbors of node <1> are [<12>].
Visit node <2>. Unvisited neighbors of node <2> are [<0>].
Visit node <7>. 
Visit node <10>. 
Visit node <5>. 
Visit node <12>. Unvisited neighbors of node <12> are [<8>].
Visit node <0>. 
Visit node <8>. 
So the BFS traversal is ","('[[<11>, <9>, <3>, <13>, <6>, <4>, <14>, <7>, <8>, <5>, <2>, <0>, <12>, <10>, <1>], [<11>, <8>, <5>, <3>, <1>, <6>, <7>, <0>, <14>, <2>, <9>, <13>, <10>, <12>, <4>], [<11>, <9>, <3>, <13>, <6>, <10>, <5>, <12>, <0>, <8>, <4>, <14>, <1>, <2>, <7>], [<11>, <9>, <3>, <13>, <6>, <4>, <14>, <1>, <2>, <7>, <10>, <5>, <12>, <0>, <8>]]',)",3,56
BFS,"[(<5>, <9>), (<9>, <6>), (<9>, <7>), (<7>, <0>), (<7>, <10>), (<7>, <8>), (<2>, <0>), (<2>, <8>), (<0>, <4>), (<8>, <1>), (<3>, <10>)]","{<5>: [<9>],
<9>: [<5>, <6>, <7>],
<6>: [<9>],
<7>: [<9>, <0>, <10>, <8>],
<2>: [<0>, <8>],
<0>: [<2>, <4>, <7>],
<8>: [<2>, <7>, <1>],
<4>: [<0>],
<3>: [<10>],
<10>: [<3>, <7>],
<1>: [<8>]}","Node <5> is connected to node <9>.
Node <9> is connected to nodes <5>, <6>, <7>.
Node <6> is connected to node <9>.
Node <7> is connected to nodes <9>, <0>, <10>, <8>.
Node <2> is connected to nodes <0>, <8>.
Node <0> is connected to nodes <2>, <4>, <7>.
Node <8> is connected to nodes <2>, <7>, <1>.
Node <4> is connected to node <0>.
Node <3> is connected to node <10>.
Node <10> is connected to nodes <3>, <7>.
Node <1> is connected to node <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,11,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <9>, <6>, <7>, <0>, <10>, <8>, <2>, <4>, <3>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<9>].
Visit node <9>. Unvisited neighbors of node <9> are [<6>, <7>].
Visit node <6>. 
Visit node <7>. Unvisited neighbors of node <7> are [<0>, <10>, <8>].
Visit node <0>. Unvisited neighbors of node <0> are [<2>, <4>].
Visit node <10>. Unvisited neighbors of node <10> are [<3>].
Visit node <8>. Unvisited neighbors of node <8> are [<1>].
Visit node <2>. 
Visit node <4>. 
Visit node <3>. 
Visit node <1>. 
So the BFS traversal is ","('[[<5>, <1>, <2>, <3>, <10>, <6>, <7>, <9>, <0>, <4>, <8>], [<5>, <9>, <6>, <7>, <0>, <10>, <8>, <2>, <4>, <3>, <1>], [<5>, <9>, <6>, <4>, <3>, <1>, <7>, <0>, <10>, <8>, <2>], [<5>, <9>, <6>, <7>, <0>, <8>, <10>, <3>, <1>, <4>, <2>]]',)",1,57
BFS,"[(<2>, <10>), (<2>, <6>), (<2>, <11>), (<10>, <1>), (<10>, <6>), (<10>, <12>), (<10>, <3>), (<10>, <9>), (<10>, <5>), (<6>, <8>), (<6>, <0>), (<11>, <3>), (<11>, <1>), (<8>, <5>), (<8>, <10>), (<8>, <1>), (<8>, <12>), (<8>, <11>), (<8>, <3>), (<5>, <10>), (<5>, <0>), (<5>, <11>), (<5>, <8>), (<1>, <6>), (<1>, <4>), (<1>, <8>), (<12>, <7>), (<3>, <9>), (<3>, <1>), (<3>, <12>), (<3>, <11>), (<7>, <1>), (<9>, <2>), (<9>, <7>), (<9>, <6>), (<9>, <12>), (<4>, <12>), (<4>, <9>), (<4>, <5>)]","{<2>: [<10>, <6>, <11>],
<10>: [<1>, <6>, <12>, <3>, <9>, <5>],
<6>: [<8>, <0>],
<11>: [<3>, <1>],
<8>: [<5>, <10>, <1>, <12>, <11>, <3>],
<5>: [<10>, <0>, <11>, <8>],
<1>: [<6>, <4>, <8>],
<12>: [<7>],
<3>: [<9>, <1>, <12>, <11>],
<7>: [<1>],
<0>: [],
<9>: [<2>, <7>, <6>, <12>],
<4>: [<12>, <9>, <5>]}","Node <2> is connected to nodes <10>, <6>, <11>.
Node <10> is connected to nodes <1>, <6>, <12>, <3>, <9>, <5>.
Node <6> is connected to nodes <8>, <0>.
Node <11> is connected to nodes <3>, <1>.
Node <8> is connected to nodes <5>, <10>, <1>, <12>, <11>, <3>.
Node <5> is connected to nodes <10>, <0>, <11>, <8>.
Node <1> is connected to nodes <6>, <4>, <8>.
Node <12> is connected to node <7>.
Node <3> is connected to nodes <9>, <1>, <12>, <11>.
Node <7> is connected to node <1>.
Node <9> is connected to nodes <2>, <7>, <6>, <12>.
Node <4> is connected to nodes <12>, <9>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,39,True,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <8>, <0>, <5>, <10>, <1>, <12>, <11>, <3>, <9>, <4>, <7>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<8>, <0>].
Visit node <8>. Unvisited neighbors of node <8> are [<5>, <10>, <1>, <12>, <11>, <3>].
Visit node <0>. 
Visit node <5>. 
Visit node <10>. Unvisited neighbors of node <10> are [<9>].
Visit node <1>. Unvisited neighbors of node <1> are [<4>].
Visit node <12>. Unvisited neighbors of node <12> are [<7>].
Visit node <11>. 
Visit node <3>. 
Visit node <9>. Unvisited neighbors of node <9> are [<2>].
Visit node <4>. 
Visit node <7>. 
Visit node <2>. 
So the BFS traversal is ","('[[<6>, <8>, <0>, <5>, <10>, <1>, <3>, <2>, <11>, <12>, <9>, <7>, <4>], [<6>, <8>, <0>, <5>, <9>, <4>, <7>, <2>, <10>, <1>, <12>, <11>, <3>], [<6>, <7>, <4>, <8>, <12>, <2>, <9>, <5>, <11>, <0>, <1>, <10>, <3>], [<6>, <8>, <0>, <5>, <10>, <1>, <12>, <11>, <3>, <9>, <4>, <7>, <2>]]',)",3,58
BFS,"[(<0>, <1>), (<0>, <3>), (<0>, <6>), (<0>, <2>), (<1>, <7>), (<1>, <8>), (<1>, <4>), (<1>, <6>), (<1>, <2>), (<3>, <8>), (<6>, <5>), (<6>, <7>), (<6>, <8>), (<6>, <4>), (<6>, <2>), (<2>, <5>), (<2>, <7>), (<2>, <8>), (<2>, <4>), (<5>, <8>), (<5>, <4>), (<8>, <7>), (<8>, <4>), (<4>, <7>)]","{<0>: [<1>, <3>, <6>, <2>],
<1>: [<0>, <7>, <8>, <4>, <6>, <2>],
<3>: [<0>, <8>],
<6>: [<0>, <5>, <1>, <7>, <8>, <4>, <2>],
<2>: [<0>, <5>, <1>, <7>, <8>, <4>, <6>],
<5>: [<8>, <4>, <6>, <2>],
<8>: [<5>, <1>, <7>, <4>, <3>, <6>, <2>],
<4>: [<5>, <1>, <7>, <8>, <6>, <2>],
<7>: [<1>, <8>, <4>, <6>, <2>]}","Node <0> is connected to nodes <1>, <3>, <6>, <2>.
Node <1> is connected to nodes <0>, <7>, <8>, <4>, <6>, <2>.
Node <3> is connected to nodes <0>, <8>.
Node <6> is connected to nodes <0>, <5>, <1>, <7>, <8>, <4>, <2>.
Node <2> is connected to nodes <0>, <5>, <1>, <7>, <8>, <4>, <6>.
Node <5> is connected to nodes <8>, <4>, <6>, <2>.
Node <8> is connected to nodes <5>, <1>, <7>, <4>, <3>, <6>, <2>.
Node <4> is connected to nodes <5>, <1>, <7>, <8>, <6>, <2>.
Node <7> is connected to nodes <1>, <8>, <4>, <6>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,24,False,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <5>, <1>, <7>, <4>, <3>, <6>, <2>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<5>, <1>, <7>, <4>, <3>, <6>, <2>].
Visit node <5>. 
Visit node <1>. Unvisited neighbors of node <1> are [<0>].
Visit node <7>. 
Visit node <4>. 
Visit node <3>. 
Visit node <6>. 
Visit node <2>. 
Visit node <0>. 
So the BFS traversal is ","('[[<8>, <5>, <1>, <6>, <2>, <0>, <7>, <4>, <3>], [<8>, <5>, <1>, <7>, <4>, <3>, <6>, <2>, <0>], [<8>, <5>, <1>, <7>, <0>, <4>, <2>, <6>, <3>], [<8>, <0>, <2>, <4>, <3>, <5>, <6>, <1>, <7>]]',)",1,59
BFS,"[(<13>, <5>), (<13>, <6>), (<13>, <7>), (<13>, <12>), (<13>, <8>), (<13>, <0>), (<13>, <9>), (<13>, <1>), (<13>, <4>), (<13>, <3>), (<13>, <11>), (<13>, <2>), (<5>, <6>), (<5>, <8>), (<5>, <0>), (<5>, <9>), (<5>, <1>), (<5>, <3>), (<5>, <11>), (<5>, <10>), (<6>, <7>), (<6>, <12>), (<6>, <1>), (<6>, <4>), (<6>, <3>), (<6>, <11>), (<6>, <10>), (<6>, <2>), (<7>, <12>), (<7>, <0>), (<7>, <9>), (<7>, <1>), (<7>, <4>), (<7>, <3>), (<7>, <11>), (<7>, <10>), (<12>, <8>), (<12>, <0>), (<12>, <1>), (<12>, <4>), (<12>, <3>), (<12>, <11>), (<12>, <10>), (<8>, <1>), (<8>, <10>), (<8>, <2>), (<0>, <9>), (<0>, <4>), (<0>, <3>), (<0>, <11>), (<0>, <10>), (<0>, <2>), (<9>, <1>), (<9>, <4>), (<9>, <3>), (<9>, <11>), (<9>, <10>), (<9>, <2>), (<1>, <4>), (<1>, <11>), (<1>, <10>), (<1>, <2>), (<4>, <3>), (<4>, <10>), (<4>, <2>), (<3>, <11>), (<3>, <10>), (<11>, <10>), (<11>, <2>), (<2>, <10>)]","{<13>: [<5>, <6>, <7>, <12>, <8>, <0>, <9>, <1>, <4>, <3>, <11>, <2>],
<5>: [<13>, <6>, <8>, <0>, <9>, <1>, <3>, <11>, <10>],
<6>: [<13>, <5>, <7>, <12>, <1>, <4>, <3>, <11>, <10>, <2>],
<7>: [<13>, <6>, <12>, <0>, <9>, <1>, <4>, <3>, <11>, <10>],
<12>: [<13>, <6>, <7>, <8>, <0>, <1>, <4>, <3>, <11>, <10>],
<8>: [<13>, <5>, <12>, <1>, <10>, <2>],
<0>: [<13>, <5>, <7>, <12>, <9>, <4>, <3>, <11>, <10>, <2>],
<9>: [<13>, <5>, <7>, <0>, <1>, <4>, <3>, <11>, <10>, <2>],
<1>: [<13>, <5>, <6>, <7>, <12>, <8>, <9>, <4>, <11>, <10>, <2>],
<4>: [<13>, <6>, <7>, <12>, <0>, <9>, <1>, <3>, <10>, <2>],
<3>: [<13>, <5>, <6>, <7>, <12>, <0>, <9>, <4>, <11>, <10>],
<11>: [<13>, <5>, <6>, <7>, <12>, <0>, <9>, <1>, <3>, <10>, <2>],
<2>: [<13>, <6>, <8>, <0>, <9>, <1>, <4>, <11>, <10>],
<10>: [<5>, <6>, <7>, <12>, <8>, <0>, <9>, <1>, <4>, <3>, <11>, <2>]}","Node <13> is connected to nodes <5>, <6>, <7>, <12>, <8>, <0>, <9>, <1>, <4>, <3>, <11>, <2>.
Node <5> is connected to nodes <13>, <6>, <8>, <0>, <9>, <1>, <3>, <11>, <10>.
Node <6> is connected to nodes <13>, <5>, <7>, <12>, <1>, <4>, <3>, <11>, <10>, <2>.
Node <7> is connected to nodes <13>, <6>, <12>, <0>, <9>, <1>, <4>, <3>, <11>, <10>.
Node <12> is connected to nodes <13>, <6>, <7>, <8>, <0>, <1>, <4>, <3>, <11>, <10>.
Node <8> is connected to nodes <13>, <5>, <12>, <1>, <10>, <2>.
Node <0> is connected to nodes <13>, <5>, <7>, <12>, <9>, <4>, <3>, <11>, <10>, <2>.
Node <9> is connected to nodes <13>, <5>, <7>, <0>, <1>, <4>, <3>, <11>, <10>, <2>.
Node <1> is connected to nodes <13>, <5>, <6>, <7>, <12>, <8>, <9>, <4>, <11>, <10>, <2>.
Node <4> is connected to nodes <13>, <6>, <7>, <12>, <0>, <9>, <1>, <3>, <10>, <2>.
Node <3> is connected to nodes <13>, <5>, <6>, <7>, <12>, <0>, <9>, <4>, <11>, <10>.
Node <11> is connected to nodes <13>, <5>, <6>, <7>, <12>, <0>, <9>, <1>, <3>, <10>, <2>.
Node <2> is connected to nodes <13>, <6>, <8>, <0>, <9>, <1>, <4>, <11>, <10>.
Node <10> is connected to nodes <5>, <6>, <7>, <12>, <8>, <0>, <9>, <1>, <4>, <3>, <11>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,70,False,"Start from node <13>, output a sequence of traversal in breadth-first search (BFS) order.","[<13>, <5>, <6>, <7>, <12>, <8>, <0>, <9>, <1>, <4>, <3>, <11>, <2>, <10>]","Let's run breadth-first search (BFS) step by step.
Visit node <13>. Unvisited neighbors of node <13> are [<5>, <6>, <7>, <12>, <8>, <0>, <9>, <1>, <4>, <3>, <11>, <2>].
Visit node <5>. Unvisited neighbors of node <5> are [<10>].
Visit node <6>. 
Visit node <7>. 
Visit node <12>. 
Visit node <8>. 
Visit node <0>. 
Visit node <9>. 
Visit node <1>. 
Visit node <4>. 
Visit node <3>. 
Visit node <11>. 
Visit node <2>. 
Visit node <10>. 
So the BFS traversal is ","('[[<13>, <5>, <6>, <7>, <12>, <8>, <0>, <9>, <1>, <4>, <3>, <11>, <2>, <10>], [<13>, <5>, <6>, <7>, <3>, <11>, <2>, <10>, <12>, <8>, <0>, <9>, <1>, <4>], [<13>, <5>, <6>, <7>, <12>, <8>, <0>, <1>, <4>, <3>, <10>, <9>, <11>, <2>], [<13>, <1>, <8>, <12>, <10>, <5>, <11>, <9>, <4>, <7>, <6>, <3>, <0>, <2>]]',)",0,60
BFS,"[(<6>, <7>), (<6>, <2>), (<6>, <4>), (<7>, <2>), (<7>, <0>), (<2>, <6>), (<4>, <7>), (<0>, <1>), (<0>, <7>), (<0>, <5>), (<3>, <0>), (<3>, <7>), (<5>, <3>), (<1>, <6>), (<1>, <5>), (<1>, <0>)]","{<6>: [<7>, <2>, <4>],
<7>: [<2>, <0>],
<2>: [<6>],
<4>: [<7>],
<0>: [<1>, <7>, <5>],
<3>: [<0>, <7>],
<5>: [<3>],
<1>: [<6>, <5>, <0>]}","Node <6> is connected to nodes <7>, <2>, <4>.
Node <7> is connected to nodes <2>, <0>.
Node <2> is connected to node <6>.
Node <4> is connected to node <7>.
Node <0> is connected to nodes <1>, <7>, <5>.
Node <3> is connected to nodes <0>, <7>.
Node <5> is connected to node <3>.
Node <1> is connected to nodes <6>, <5>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,16,True,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <1>, <7>, <5>, <6>, <2>, <3>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<1>, <7>, <5>].
Visit node <1>. Unvisited neighbors of node <1> are [<6>].
Visit node <7>. Unvisited neighbors of node <7> are [<2>].
Visit node <5>. Unvisited neighbors of node <5> are [<3>].
Visit node <6>. Unvisited neighbors of node <6> are [<4>].
Visit node <2>. 
Visit node <3>. 
Visit node <4>. 
So the BFS traversal is ","('[[<0>, <6>, <7>, <2>, <1>, <3>, <5>, <4>], [<0>, <1>, <7>, <5>, <6>, <2>, <3>, <4>], [<0>, <1>, <3>, <4>, <7>, <5>, <6>, <2>], [<0>, <1>, <7>, <5>, <4>, <2>, <3>, <6>]]',)",1,61
BFS,"[(<1>, <2>), (<1>, <10>), (<2>, <10>), (<10>, <5>), (<10>, <11>), (<11>, <0>), (<11>, <8>), (<11>, <5>), (<0>, <5>), (<8>, <7>), (<8>, <11>), (<4>, <0>), (<6>, <0>), (<6>, <4>), (<3>, <10>), (<3>, <1>), (<9>, <2>), (<9>, <6>), (<7>, <6>), (<7>, <2>), (<7>, <8>)]","{<1>: [<2>, <10>],
<2>: [<10>],
<10>: [<5>, <11>],
<11>: [<0>, <8>, <5>],
<0>: [<5>],
<8>: [<7>, <11>],
<5>: [],
<4>: [<0>],
<6>: [<0>, <4>],
<3>: [<10>, <1>],
<9>: [<2>, <6>],
<7>: [<6>, <2>, <8>]}","Node <1> is connected to nodes <2>, <10>.
Node <2> is connected to node <10>.
Node <10> is connected to nodes <5>, <11>.
Node <11> is connected to nodes <0>, <8>, <5>.
Node <0> is connected to node <5>.
Node <8> is connected to nodes <7>, <11>.
Node <4> is connected to node <0>.
Node <6> is connected to nodes <0>, <4>.
Node <3> is connected to nodes <10>, <1>.
Node <9> is connected to nodes <2>, <6>.
Node <7> is connected to nodes <6>, <2>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,21,True,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <2>, <6>, <10>, <0>, <4>, <5>, <11>, <8>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<2>, <6>].
Visit node <2>. Unvisited neighbors of node <2> are [<10>].
Visit node <6>. Unvisited neighbors of node <6> are [<0>, <4>].
Visit node <10>. Unvisited neighbors of node <10> are [<5>, <11>].
Visit node <0>. 
Visit node <4>. 
Visit node <5>. 
Visit node <11>. Unvisited neighbors of node <11> are [<8>].
Visit node <8>. Unvisited neighbors of node <8> are [<7>].
Visit node <7>. 
So the BFS traversal is ","('[[<9>, <2>, <6>, <11>, <8>, <7>, <10>, <0>, <4>, <5>], [<9>, <7>, <11>, <10>, <4>, <5>, <8>, <6>, <0>, <2>], [<9>, <2>, <6>, <10>, <0>, <8>, <4>, <11>, <5>, <7>], [<9>, <2>, <6>, <10>, <0>, <4>, <5>, <11>, <8>, <7>]]',)",3,62
BFS,"[(<1>, <7>), (<1>, <0>), (<1>, <3>), (<7>, <2>), (<7>, <5>), (<7>, <0>), (<7>, <3>), (<0>, <2>), (<0>, <5>), (<0>, <4>), (<0>, <3>), (<0>, <6>), (<3>, <2>), (<3>, <4>), (<3>, <6>), (<2>, <6>), (<6>, <4>)]","{<1>: [<7>, <0>, <3>],
<7>: [<1>, <2>, <5>, <0>, <3>],
<0>: [<1>, <2>, <7>, <5>, <4>, <3>, <6>],
<3>: [<1>, <2>, <7>, <0>, <4>, <6>],
<2>: [<7>, <0>, <3>, <6>],
<6>: [<2>, <0>, <4>, <3>],
<5>: [<7>, <0>],
<4>: [<0>, <3>, <6>]}","Node <1> is connected to nodes <7>, <0>, <3>.
Node <7> is connected to nodes <1>, <2>, <5>, <0>, <3>.
Node <0> is connected to nodes <1>, <2>, <7>, <5>, <4>, <3>, <6>.
Node <3> is connected to nodes <1>, <2>, <7>, <0>, <4>, <6>.
Node <2> is connected to nodes <7>, <0>, <3>, <6>.
Node <6> is connected to nodes <2>, <0>, <4>, <3>.
Node <5> is connected to nodes <7>, <0>.
Node <4> is connected to nodes <0>, <3>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,17,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <0>, <3>, <6>, <1>, <2>, <7>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<0>, <3>, <6>].
Visit node <0>. Unvisited neighbors of node <0> are [<1>, <2>, <7>, <5>].
Visit node <3>. 
Visit node <6>. 
Visit node <1>. 
Visit node <2>. 
Visit node <7>. 
Visit node <5>. 
So the BFS traversal is ","('[[<4>, <0>, <3>, <6>, <7>, <2>, <5>, <1>], [<4>, <0>, <3>, <6>, <1>, <2>, <7>, <5>], [<4>, <0>, <3>, <1>, <2>, <6>, <7>, <5>], [<4>, <0>, <7>, <5>, <3>, <6>, <1>, <2>]]',)",1,63
BFS,"[(<10>, <5>), (<10>, <9>), (<5>, <7>), (<5>, <10>), (<5>, <6>), (<5>, <3>), (<9>, <7>), (<9>, <1>), (<9>, <6>), (<8>, <4>), (<8>, <9>), (<8>, <1>), (<4>, <2>), (<4>, <1>), (<4>, <10>), (<4>, <8>), (<1>, <8>), (<1>, <3>), (<1>, <5>), (<1>, <9>), (<1>, <7>), (<6>, <3>), (<6>, <10>), (<3>, <4>), (<3>, <5>), (<3>, <9>), (<3>, <0>), (<3>, <1>), (<3>, <6>), (<0>, <10>), (<0>, <8>), (<0>, <4>), (<0>, <5>), (<2>, <7>), (<2>, <6>), (<2>, <3>), (<7>, <1>), (<7>, <10>), (<7>, <8>), (<7>, <6>), (<7>, <3>), (<7>, <4>), (<7>, <5>), (<7>, <2>)]","{<10>: [<5>, <9>],
<5>: [<7>, <10>, <6>, <3>],
<9>: [<7>, <1>, <6>],
<8>: [<4>, <9>, <1>],
<4>: [<2>, <1>, <10>, <8>],
<1>: [<8>, <3>, <5>, <9>, <7>],
<6>: [<3>, <10>],
<3>: [<4>, <5>, <9>, <0>, <1>, <6>],
<0>: [<10>, <8>, <4>, <5>],
<2>: [<7>, <6>, <3>],
<7>: [<1>, <10>, <8>, <6>, <3>, <4>, <5>, <2>]}","Node <10> is connected to nodes <5>, <9>.
Node <5> is connected to nodes <7>, <10>, <6>, <3>.
Node <9> is connected to nodes <7>, <1>, <6>.
Node <8> is connected to nodes <4>, <9>, <1>.
Node <4> is connected to nodes <2>, <1>, <10>, <8>.
Node <1> is connected to nodes <8>, <3>, <5>, <9>, <7>.
Node <6> is connected to nodes <3>, <10>.
Node <3> is connected to nodes <4>, <5>, <9>, <0>, <1>, <6>.
Node <0> is connected to nodes <10>, <8>, <4>, <5>.
Node <2> is connected to nodes <7>, <6>, <3>.
Node <7> is connected to nodes <1>, <10>, <8>, <6>, <3>, <4>, <5>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,44,True,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <7>, <6>, <3>, <1>, <10>, <8>, <4>, <5>, <9>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<7>, <6>, <3>].
Visit node <7>. Unvisited neighbors of node <7> are [<1>, <10>, <8>, <4>, <5>].
Visit node <6>. 
Visit node <3>. Unvisited neighbors of node <3> are [<9>, <0>].
Visit node <1>. 
Visit node <10>. 
Visit node <8>. 
Visit node <4>. 
Visit node <5>. 
Visit node <9>. 
Visit node <0>. 
So the BFS traversal is ","('[[<2>, <7>, <6>, <3>, <1>, <10>, <8>, <4>, <5>, <9>, <0>], [<2>, <7>, <6>, <5>, <9>, <0>, <3>, <1>, <10>, <8>, <4>], [<2>, <7>, <6>, <3>, <1>, <9>, <10>, <5>, <0>, <8>, <4>], [<2>, <3>, <1>, <0>, <9>, <4>, <5>, <10>, <7>, <8>, <6>]]',)",0,64
BFS,"[(<7>, <6>), (<6>, <1>), (<6>, <2>), (<5>, <9>), (<5>, <7>), (<9>, <1>), (<9>, <2>), (<9>, <6>), (<4>, <8>), (<4>, <3>), (<4>, <5>), (<8>, <0>), (<3>, <7>), (<3>, <4>), (<3>, <8>), (<0>, <9>), (<0>, <3>), (<2>, <6>), (<2>, <5>), (<2>, <4>), (<1>, <8>)]","{<7>: [<6>],
<6>: [<1>, <2>],
<5>: [<9>, <7>],
<9>: [<1>, <2>, <6>],
<4>: [<8>, <3>, <5>],
<8>: [<0>],
<3>: [<7>, <4>, <8>],
<0>: [<9>, <3>],
<2>: [<6>, <5>, <4>],
<1>: [<8>]}","Node <7> is connected to node <6>.
Node <6> is connected to nodes <1>, <2>.
Node <5> is connected to nodes <9>, <7>.
Node <9> is connected to nodes <1>, <2>, <6>.
Node <4> is connected to nodes <8>, <3>, <5>.
Node <8> is connected to node <0>.
Node <3> is connected to nodes <7>, <4>, <8>.
Node <0> is connected to nodes <9>, <3>.
Node <2> is connected to nodes <6>, <5>, <4>.
Node <1> is connected to node <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,21,True,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <6>, <5>, <4>, <1>, <9>, <7>, <8>, <3>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<6>, <5>, <4>].
Visit node <6>. Unvisited neighbors of node <6> are [<1>].
Visit node <5>. Unvisited neighbors of node <5> are [<9>, <7>].
Visit node <4>. Unvisited neighbors of node <4> are [<8>, <3>].
Visit node <1>. 
Visit node <9>. 
Visit node <7>. 
Visit node <8>. Unvisited neighbors of node <8> are [<0>].
Visit node <3>. 
Visit node <0>. 
So the BFS traversal is ","('[[<2>, <6>, <5>, <8>, <3>, <0>, <4>, <1>, <9>, <7>], [<2>, <3>, <5>, <4>, <0>, <9>, <7>, <1>, <6>, <8>], [<2>, <6>, <5>, <4>, <1>, <9>, <7>, <8>, <3>, <0>], [<2>, <6>, <5>, <4>, <1>, <3>, <0>, <8>, <7>, <9>]]',)",2,65
BFS,"[(<2>, <7>), (<2>, <6>), (<2>, <4>), (<2>, <3>), (<7>, <5>), (<7>, <9>), (<7>, <4>), (<6>, <5>), (<4>, <8>), (<4>, <3>), (<4>, <9>), (<3>, <8>), (<3>, <5>), (<3>, <1>), (<3>, <0>), (<5>, <10>), (<9>, <1>), (<8>, <10>)]","{<2>: [<7>, <6>, <4>, <3>],
<7>: [<2>, <5>, <9>, <4>],
<6>: [<2>, <5>],
<4>: [<2>, <7>, <8>, <3>, <9>],
<3>: [<2>, <8>, <5>, <1>, <4>, <0>],
<5>: [<7>, <10>, <3>, <6>],
<9>: [<7>, <1>, <4>],
<8>: [<10>, <3>, <4>],
<10>: [<8>, <5>],
<1>: [<3>, <9>],
<0>: [<3>]}","Node <2> is connected to nodes <7>, <6>, <4>, <3>.
Node <7> is connected to nodes <2>, <5>, <9>, <4>.
Node <6> is connected to nodes <2>, <5>.
Node <4> is connected to nodes <2>, <7>, <8>, <3>, <9>.
Node <3> is connected to nodes <2>, <8>, <5>, <1>, <4>, <0>.
Node <5> is connected to nodes <7>, <10>, <3>, <6>.
Node <9> is connected to nodes <7>, <1>, <4>.
Node <8> is connected to nodes <10>, <3>, <4>.
Node <10> is connected to nodes <8>, <5>.
Node <1> is connected to nodes <3>, <9>.
Node <0> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,18,False,"Start from node <10>, output a sequence of traversal in breadth-first search (BFS) order.","[<10>, <8>, <5>, <3>, <4>, <7>, <6>, <2>, <1>, <0>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <10>. Unvisited neighbors of node <10> are [<8>, <5>].
Visit node <8>. Unvisited neighbors of node <8> are [<3>, <4>].
Visit node <5>. Unvisited neighbors of node <5> are [<7>, <6>].
Visit node <3>. Unvisited neighbors of node <3> are [<2>, <1>, <0>].
Visit node <4>. Unvisited neighbors of node <4> are [<9>].
Visit node <7>. 
Visit node <6>. 
Visit node <2>. 
Visit node <1>. 
Visit node <0>. 
Visit node <9>. 
So the BFS traversal is ","('[[<10>, <8>, <5>, <1>, <0>, <9>, <3>, <4>, <7>, <6>, <2>], [<10>, <9>, <2>, <1>, <4>, <6>, <5>, <7>, <3>, <0>, <8>], [<10>, <8>, <5>, <3>, <4>, <7>, <1>, <0>, <6>, <2>, <9>], [<10>, <8>, <5>, <3>, <4>, <7>, <6>, <2>, <1>, <0>, <9>]]',)",3,66
BFS,"[(<7>, <6>), (<7>, <2>), (<7>, <1>), (<2>, <4>), (<2>, <3>), (<3>, <0>), (<3>, <5>)]","{<7>: [<6>, <2>, <1>],
<6>: [<7>],
<2>: [<7>, <4>, <3>],
<1>: [<7>],
<4>: [<2>],
<3>: [<2>, <0>, <5>],
<0>: [<3>],
<5>: [<3>]}","Node <7> is connected to nodes <6>, <2>, <1>.
Node <6> is connected to node <7>.
Node <2> is connected to nodes <7>, <4>, <3>.
Node <1> is connected to node <7>.
Node <4> is connected to node <2>.
Node <3> is connected to nodes <2>, <0>, <5>.
Node <0> is connected to node <3>.
Node <5> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,7,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <7>, <2>, <1>, <4>, <3>, <0>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<7>].
Visit node <7>. Unvisited neighbors of node <7> are [<2>, <1>].
Visit node <2>. Unvisited neighbors of node <2> are [<4>, <3>].
Visit node <1>. 
Visit node <4>. 
Visit node <3>. Unvisited neighbors of node <3> are [<0>, <5>].
Visit node <0>. 
Visit node <5>. 
So the BFS traversal is ","('[[<6>, <7>, <2>, <1>, <4>, <3>, <0>, <5>], [<6>, <1>, <5>, <2>, <7>, <0>, <4>, <3>], [<6>, <7>, <2>, <1>, <4>, <0>, <5>, <3>], [<6>, <7>, <0>, <5>, <2>, <1>, <4>, <3>]]',)",0,67
BFS,"[(<0>, <2>), (<0>, <4>), (<0>, <10>), (<0>, <7>), (<0>, <5>), (<0>, <1>), (<0>, <9>), (<2>, <3>), (<2>, <7>), (<2>, <9>), (<2>, <1>), (<2>, <5>), (<2>, <8>), (<2>, <4>), (<4>, <8>), (<4>, <7>), (<4>, <6>), (<4>, <3>), (<10>, <3>), (<7>, <1>), (<7>, <6>), (<7>, <5>), (<5>, <6>), (<9>, <8>)]","{<0>: [<2>, <4>, <10>, <7>, <5>, <1>, <9>],
<2>: [<0>, <3>, <7>, <9>, <1>, <5>, <8>, <4>],
<4>: [<0>, <2>, <8>, <7>, <6>, <3>],
<10>: [<0>, <3>],
<7>: [<0>, <2>, <4>, <1>, <6>, <5>],
<5>: [<0>, <2>, <7>, <6>],
<1>: [<0>, <2>, <7>],
<9>: [<0>, <2>, <8>],
<3>: [<2>, <4>, <10>],
<8>: [<2>, <4>, <9>],
<6>: [<4>, <7>, <5>]}","Node <0> is connected to nodes <2>, <4>, <10>, <7>, <5>, <1>, <9>.
Node <2> is connected to nodes <0>, <3>, <7>, <9>, <1>, <5>, <8>, <4>.
Node <4> is connected to nodes <0>, <2>, <8>, <7>, <6>, <3>.
Node <10> is connected to nodes <0>, <3>.
Node <7> is connected to nodes <0>, <2>, <4>, <1>, <6>, <5>.
Node <5> is connected to nodes <0>, <2>, <7>, <6>.
Node <1> is connected to nodes <0>, <2>, <7>.
Node <9> is connected to nodes <0>, <2>, <8>.
Node <3> is connected to nodes <2>, <4>, <10>.
Node <8> is connected to nodes <2>, <4>, <9>.
Node <6> is connected to nodes <4>, <7>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,24,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <4>, <7>, <5>, <0>, <2>, <8>, <3>, <1>, <10>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<4>, <7>, <5>].
Visit node <4>. Unvisited neighbors of node <4> are [<0>, <2>, <8>, <3>].
Visit node <7>. Unvisited neighbors of node <7> are [<1>].
Visit node <5>. 
Visit node <0>. Unvisited neighbors of node <0> are [<10>, <9>].
Visit node <2>. 
Visit node <8>. 
Visit node <3>. 
Visit node <1>. 
Visit node <10>. 
Visit node <9>. 
So the BFS traversal is ","('[[<6>, <4>, <7>, <5>, <0>, <2>, <8>, <3>, <1>, <10>, <9>], [<6>, <3>, <8>, <4>, <0>, <2>, <9>, <1>, <10>, <5>, <7>], [<6>, <4>, <7>, <1>, <10>, <9>, <5>, <0>, <2>, <8>, <3>], [<6>, <4>, <7>, <5>, <0>, <1>, <9>, <2>, <3>, <8>, <10>]]',)",0,68
BFS,"[(<8>, <13>), (<8>, <5>), (<13>, <7>), (<5>, <11>), (<5>, <3>), (<5>, <2>), (<7>, <2>), (<11>, <9>), (<3>, <6>), (<2>, <0>), (<2>, <12>), (<9>, <4>), (<4>, <10>), (<6>, <1>)]","{<8>: [<13>, <5>],
<13>: [<8>, <7>],
<5>: [<8>, <11>, <3>, <2>],
<7>: [<13>, <2>],
<11>: [<5>, <9>],
<3>: [<5>, <6>],
<2>: [<5>, <7>, <0>, <12>],
<0>: [<2>],
<12>: [<2>],
<9>: [<11>, <4>],
<4>: [<10>, <9>],
<10>: [<4>],
<6>: [<1>, <3>],
<1>: [<6>]}","Node <8> is connected to nodes <13>, <5>.
Node <13> is connected to nodes <8>, <7>.
Node <5> is connected to nodes <8>, <11>, <3>, <2>.
Node <7> is connected to nodes <13>, <2>.
Node <11> is connected to nodes <5>, <9>.
Node <3> is connected to nodes <5>, <6>.
Node <2> is connected to nodes <5>, <7>, <0>, <12>.
Node <0> is connected to node <2>.
Node <12> is connected to node <2>.
Node <9> is connected to nodes <11>, <4>.
Node <4> is connected to nodes <10>, <9>.
Node <10> is connected to node <4>.
Node <6> is connected to nodes <1>, <3>.
Node <1> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,14,False,"Start from node <13>, output a sequence of traversal in breadth-first search (BFS) order.","[<13>, <8>, <7>, <5>, <2>, <11>, <3>, <0>, <12>, <9>, <6>, <4>, <1>, <10>]","Let's run breadth-first search (BFS) step by step.
Visit node <13>. Unvisited neighbors of node <13> are [<8>, <7>].
Visit node <8>. Unvisited neighbors of node <8> are [<5>].
Visit node <7>. Unvisited neighbors of node <7> are [<2>].
Visit node <5>. Unvisited neighbors of node <5> are [<11>, <3>].
Visit node <2>. Unvisited neighbors of node <2> are [<0>, <12>].
Visit node <11>. Unvisited neighbors of node <11> are [<9>].
Visit node <3>. Unvisited neighbors of node <3> are [<6>].
Visit node <0>. 
Visit node <12>. 
Visit node <9>. Unvisited neighbors of node <9> are [<4>].
Visit node <6>. Unvisited neighbors of node <6> are [<1>].
Visit node <4>. Unvisited neighbors of node <4> are [<10>].
Visit node <1>. 
Visit node <10>. 
So the BFS traversal is ","('[[<13>, <11>, <10>, <3>, <8>, <12>, <6>, <2>, <0>, <7>, <9>, <5>, <4>, <1>], [<13>, <8>, <7>, <5>, <2>, <11>, <3>, <4>, <10>, <9>, <6>, <12>, <1>, <0>], [<13>, <8>, <7>, <5>, <2>, <11>, <3>, <0>, <12>, <9>, <6>, <4>, <1>, <10>], [<13>, <8>, <7>, <5>, <6>, <4>, <1>, <10>, <2>, <11>, <3>, <0>, <12>, <9>]]',)",2,69
BFS,"[(<0>, <7>), (<0>, <2>), (<7>, <11>), (<7>, <10>), (<12>, <6>), (<12>, <9>), (<12>, <0>), (<6>, <4>), (<6>, <9>), (<6>, <0>), (<9>, <7>), (<9>, <0>), (<9>, <13>), (<1>, <13>), (<1>, <6>), (<1>, <2>), (<13>, <4>), (<4>, <11>), (<3>, <2>), (<3>, <0>), (<3>, <13>), (<5>, <10>), (<5>, <3>), (<10>, <13>), (<10>, <3>), (<11>, <10>), (<11>, <12>), (<8>, <13>)]","{<0>: [<7>, <2>],
<7>: [<11>, <10>],
<2>: [],
<12>: [<6>, <9>, <0>],
<6>: [<4>, <9>, <0>],
<9>: [<7>, <0>, <13>],
<1>: [<13>, <6>, <2>],
<13>: [<4>],
<4>: [<11>],
<3>: [<2>, <0>, <13>],
<5>: [<10>, <3>],
<10>: [<13>, <3>],
<11>: [<10>, <12>],
<8>: [<13>]}","Node <0> is connected to nodes <7>, <2>.
Node <7> is connected to nodes <11>, <10>.
Node <12> is connected to nodes <6>, <9>, <0>.
Node <6> is connected to nodes <4>, <9>, <0>.
Node <9> is connected to nodes <7>, <0>, <13>.
Node <1> is connected to nodes <13>, <6>, <2>.
Node <13> is connected to node <4>.
Node <4> is connected to node <11>.
Node <3> is connected to nodes <2>, <0>, <13>.
Node <5> is connected to nodes <10>, <3>.
Node <10> is connected to nodes <13>, <3>.
Node <11> is connected to nodes <10>, <12>.
Node <8> is connected to node <13>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,28,True,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <7>, <0>, <13>, <11>, <10>, <2>, <4>, <12>, <3>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<7>, <0>, <13>].
Visit node <7>. Unvisited neighbors of node <7> are [<11>, <10>].
Visit node <0>. Unvisited neighbors of node <0> are [<2>].
Visit node <13>. Unvisited neighbors of node <13> are [<4>].
Visit node <11>. Unvisited neighbors of node <11> are [<12>].
Visit node <10>. Unvisited neighbors of node <10> are [<3>].
Visit node <2>. 
Visit node <4>. 
Visit node <12>. Unvisited neighbors of node <12> are [<6>].
Visit node <3>. 
Visit node <6>. 
So the BFS traversal is ","('[[<9>, <7>, <0>, <13>, <11>, <10>, <2>, <4>, <12>, <3>, <6>], [<9>, <7>, <0>, <12>, <3>, <6>, <13>, <11>, <10>, <2>, <4>], [<9>, <7>, <0>, <13>, <11>, <12>, <10>, <2>, <6>, <3>, <4>], [<9>, <6>, <0>, <12>, <7>, <10>, <13>, <3>, <2>, <11>, <4>]]',)",0,70
BFS,"[(<11>, <3>), (<11>, <10>), (<11>, <1>), (<3>, <1>), (<1>, <8>), (<9>, <7>), (<7>, <4>), (<7>, <0>), (<4>, <6>), (<0>, <2>), (<6>, <2>), (<8>, <5>)]","{<11>: [<3>, <10>, <1>],
<3>: [<11>, <1>],
<10>: [<11>],
<1>: [<11>, <3>, <8>],
<9>: [<7>],
<7>: [<9>, <4>, <0>],
<4>: [<7>, <6>],
<0>: [<7>, <2>],
<6>: [<4>, <2>],
<2>: [<6>, <0>],
<8>: [<1>, <5>],
<5>: [<8>]}","Node <11> is connected to nodes <3>, <10>, <1>.
Node <3> is connected to nodes <11>, <1>.
Node <10> is connected to node <11>.
Node <1> is connected to nodes <11>, <3>, <8>.
Node <9> is connected to node <7>.
Node <7> is connected to nodes <9>, <4>, <0>.
Node <4> is connected to nodes <7>, <6>.
Node <0> is connected to nodes <7>, <2>.
Node <6> is connected to nodes <4>, <2>.
Node <2> is connected to nodes <6>, <0>.
Node <8> is connected to nodes <1>, <5>.
Node <5> is connected to node <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,12,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <7>, <2>, <9>, <4>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<7>, <2>].
Visit node <7>. Unvisited neighbors of node <7> are [<9>, <4>].
Visit node <2>. Unvisited neighbors of node <2> are [<6>].
Visit node <9>. 
Visit node <4>. 
Visit node <6>. 
So the BFS traversal is ","('[[<0>, <7>, <2>, <4>, <6>, <9>], [<0>, <7>, <6>, <9>, <4>, <2>], [<0>, <7>, <4>, <6>, <2>, <9>], [<0>, <7>, <2>, <9>, <4>, <6>]]',)",3,71
BFS,"[(<5>, <11>), (<5>, <2>), (<5>, <10>), (<5>, <4>), (<5>, <12>), (<5>, <6>), (<5>, <7>), (<5>, <8>), (<5>, <9>), (<11>, <10>), (<11>, <4>), (<11>, <12>), (<11>, <6>), (<11>, <3>), (<11>, <7>), (<11>, <8>), (<11>, <1>), (<11>, <9>), (<2>, <0>), (<2>, <12>), (<2>, <3>), (<2>, <8>), (<2>, <13>), (<2>, <1>), (<2>, <9>), (<10>, <0>), (<10>, <12>), (<10>, <6>), (<10>, <3>), (<10>, <7>), (<10>, <8>), (<10>, <13>), (<10>, <1>), (<10>, <9>), (<4>, <0>), (<4>, <12>), (<4>, <6>), (<4>, <3>), (<4>, <7>), (<4>, <8>), (<4>, <13>), (<4>, <1>), (<4>, <9>), (<12>, <3>), (<12>, <7>), (<12>, <8>), (<12>, <13>), (<12>, <1>), (<12>, <9>), (<6>, <0>), (<6>, <3>), (<6>, <7>), (<6>, <8>), (<6>, <13>), (<6>, <9>), (<7>, <0>), (<7>, <3>), (<7>, <8>), (<7>, <13>), (<7>, <1>), (<7>, <9>), (<8>, <0>), (<8>, <3>), (<8>, <13>), (<8>, <1>), (<8>, <9>), (<9>, <3>), (<9>, <13>), (<9>, <1>), (<3>, <1>), (<1>, <0>), (<1>, <13>), (<0>, <13>)]","{<5>: [<11>, <2>, <10>, <4>, <12>, <6>, <7>, <8>, <9>],
<11>: [<5>, <10>, <4>, <12>, <6>, <3>, <7>, <8>, <1>, <9>],
<2>: [<5>, <0>, <12>, <3>, <8>, <13>, <1>, <9>],
<10>: [<5>, <11>, <0>, <12>, <6>, <3>, <7>, <8>, <13>, <1>, <9>],
<4>: [<5>, <11>, <0>, <12>, <6>, <3>, <7>, <8>, <13>, <1>, <9>],
<12>: [<5>, <11>, <2>, <10>, <4>, <3>, <7>, <8>, <13>, <1>, <9>],
<6>: [<5>, <11>, <10>, <0>, <4>, <3>, <7>, <8>, <13>, <9>],
<7>: [<5>, <11>, <10>, <0>, <4>, <12>, <6>, <3>, <8>, <13>, <1>, <9>],
<8>: [<5>, <11>, <2>, <10>, <0>, <4>, <12>, <6>, <3>, <7>, <13>, <1>, <9>],
<9>: [<5>, <11>, <2>, <10>, <4>, <12>, <6>, <3>, <7>, <8>, <13>, <1>],
<3>: [<11>, <2>, <10>, <4>, <12>, <6>, <7>, <8>, <1>, <9>],
<1>: [<11>, <2>, <10>, <0>, <4>, <12>, <3>, <7>, <8>, <13>, <9>],
<0>: [<2>, <10>, <4>, <6>, <7>, <8>, <13>, <1>],
<13>: [<2>, <10>, <0>, <4>, <12>, <6>, <7>, <8>, <1>, <9>]}","Node <5> is connected to nodes <11>, <2>, <10>, <4>, <12>, <6>, <7>, <8>, <9>.
Node <11> is connected to nodes <5>, <10>, <4>, <12>, <6>, <3>, <7>, <8>, <1>, <9>.
Node <2> is connected to nodes <5>, <0>, <12>, <3>, <8>, <13>, <1>, <9>.
Node <10> is connected to nodes <5>, <11>, <0>, <12>, <6>, <3>, <7>, <8>, <13>, <1>, <9>.
Node <4> is connected to nodes <5>, <11>, <0>, <12>, <6>, <3>, <7>, <8>, <13>, <1>, <9>.
Node <12> is connected to nodes <5>, <11>, <2>, <10>, <4>, <3>, <7>, <8>, <13>, <1>, <9>.
Node <6> is connected to nodes <5>, <11>, <10>, <0>, <4>, <3>, <7>, <8>, <13>, <9>.
Node <7> is connected to nodes <5>, <11>, <10>, <0>, <4>, <12>, <6>, <3>, <8>, <13>, <1>, <9>.
Node <8> is connected to nodes <5>, <11>, <2>, <10>, <0>, <4>, <12>, <6>, <3>, <7>, <13>, <1>, <9>.
Node <9> is connected to nodes <5>, <11>, <2>, <10>, <4>, <12>, <6>, <3>, <7>, <8>, <13>, <1>.
Node <3> is connected to nodes <11>, <2>, <10>, <4>, <12>, <6>, <7>, <8>, <1>, <9>.
Node <1> is connected to nodes <11>, <2>, <10>, <0>, <4>, <12>, <3>, <7>, <8>, <13>, <9>.
Node <0> is connected to nodes <2>, <10>, <4>, <6>, <7>, <8>, <13>, <1>.
Node <13> is connected to nodes <2>, <10>, <0>, <4>, <12>, <6>, <7>, <8>, <1>, <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,73,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <5>, <11>, <10>, <0>, <4>, <3>, <7>, <8>, <13>, <9>, <2>, <12>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<5>, <11>, <10>, <0>, <4>, <3>, <7>, <8>, <13>, <9>].
Visit node <5>. Unvisited neighbors of node <5> are [<2>, <12>].
Visit node <11>. Unvisited neighbors of node <11> are [<1>].
Visit node <10>. 
Visit node <0>. 
Visit node <4>. 
Visit node <3>. 
Visit node <7>. 
Visit node <8>. 
Visit node <13>. 
Visit node <9>. 
Visit node <2>. 
Visit node <12>. 
Visit node <1>. 
So the BFS traversal is ","('[[<6>, <5>, <11>, <10>, <9>, <2>, <12>, <1>, <0>, <4>, <3>, <7>, <8>, <13>], [<6>, <5>, <11>, <10>, <0>, <4>, <3>, <1>, <8>, <13>, <9>, <12>, <7>, <2>], [<6>, <10>, <2>, <13>, <3>, <4>, <7>, <8>, <0>, <1>, <9>, <12>, <11>, <5>], [<6>, <5>, <11>, <10>, <0>, <4>, <3>, <7>, <8>, <13>, <9>, <2>, <12>, <1>]]',)",3,72
BFS,"[(<7>, <2>), (<7>, <9>), (<7>, <4>), (<2>, <4>), (<2>, <1>), (<2>, <5>), (<2>, <0>), (<9>, <4>), (<9>, <8>), (<9>, <1>), (<9>, <0>), (<4>, <5>), (<1>, <8>), (<1>, <6>), (<1>, <3>), (<1>, <5>), (<0>, <6>), (<0>, <3>), (<6>, <3>)]","{<7>: [<2>, <9>, <4>],
<2>: [<7>, <4>, <1>, <5>, <0>],
<9>: [<7>, <4>, <8>, <1>, <0>],
<4>: [<7>, <2>, <9>, <5>],
<1>: [<2>, <9>, <8>, <6>, <3>, <5>],
<5>: [<2>, <4>, <1>],
<0>: [<2>, <9>, <6>, <3>],
<8>: [<9>, <1>],
<6>: [<1>, <3>, <0>],
<3>: [<6>, <1>, <0>]}","Node <7> is connected to nodes <2>, <9>, <4>.
Node <2> is connected to nodes <7>, <4>, <1>, <5>, <0>.
Node <9> is connected to nodes <7>, <4>, <8>, <1>, <0>.
Node <4> is connected to nodes <7>, <2>, <9>, <5>.
Node <1> is connected to nodes <2>, <9>, <8>, <6>, <3>, <5>.
Node <5> is connected to nodes <2>, <4>, <1>.
Node <0> is connected to nodes <2>, <9>, <6>, <3>.
Node <8> is connected to nodes <9>, <1>.
Node <6> is connected to nodes <1>, <3>, <0>.
Node <3> is connected to nodes <6>, <1>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,19,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <1>, <3>, <0>, <2>, <9>, <8>, <5>, <7>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<1>, <3>, <0>].
Visit node <1>. Unvisited neighbors of node <1> are [<2>, <9>, <8>, <5>].
Visit node <3>. 
Visit node <0>. 
Visit node <2>. Unvisited neighbors of node <2> are [<7>, <4>].
Visit node <9>. 
Visit node <8>. 
Visit node <5>. 
Visit node <7>. 
Visit node <4>. 
So the BFS traversal is ","('[[<6>, <1>, <3>, <0>, <2>, <8>, <9>, <7>, <5>, <4>], [<6>, <1>, <3>, <0>, <2>, <9>, <8>, <5>, <7>, <4>], [<6>, <1>, <3>, <5>, <7>, <4>, <0>, <2>, <9>, <8>], [<6>, <7>, <3>, <9>, <5>, <4>, <8>, <2>, <0>, <1>]]',)",1,73
BFS,"[(<4>, <2>), (<4>, <5>), (<2>, <9>), (<2>, <12>), (<2>, <3>), (<2>, <8>), (<2>, <10>), (<2>, <5>), (<5>, <1>), (<5>, <11>), (<5>, <0>), (<5>, <8>), (<1>, <11>), (<1>, <0>), (<1>, <8>), (<11>, <7>), (<11>, <3>), (<11>, <10>), (<0>, <7>), (<0>, <12>), (<0>, <3>), (<8>, <7>), (<8>, <3>), (<8>, <10>), (<9>, <10>), (<12>, <6>), (<3>, <6>), (<10>, <7>)]","{<4>: [<2>, <5>],
<2>: [<4>, <9>, <12>, <3>, <8>, <10>, <5>],
<5>: [<4>, <1>, <2>, <11>, <0>, <8>],
<1>: [<11>, <0>, <8>, <5>],
<11>: [<1>, <7>, <3>, <10>, <5>],
<0>: [<1>, <7>, <12>, <3>, <5>],
<8>: [<1>, <2>, <7>, <3>, <10>, <5>],
<9>: [<2>, <10>],
<12>: [<2>, <0>, <6>],
<3>: [<2>, <11>, <0>, <8>, <6>],
<10>: [<2>, <7>, <9>, <11>, <8>],
<7>: [<11>, <0>, <8>, <10>],
<6>: [<12>, <3>]}","Node <4> is connected to nodes <2>, <5>.
Node <2> is connected to nodes <4>, <9>, <12>, <3>, <8>, <10>, <5>.
Node <5> is connected to nodes <4>, <1>, <2>, <11>, <0>, <8>.
Node <1> is connected to nodes <11>, <0>, <8>, <5>.
Node <11> is connected to nodes <1>, <7>, <3>, <10>, <5>.
Node <0> is connected to nodes <1>, <7>, <12>, <3>, <5>.
Node <8> is connected to nodes <1>, <2>, <7>, <3>, <10>, <5>.
Node <9> is connected to nodes <2>, <10>.
Node <12> is connected to nodes <2>, <0>, <6>.
Node <3> is connected to nodes <2>, <11>, <0>, <8>, <6>.
Node <10> is connected to nodes <2>, <7>, <9>, <11>, <8>.
Node <7> is connected to nodes <11>, <0>, <8>, <10>.
Node <6> is connected to nodes <12>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,28,False,"Start from node <12>, output a sequence of traversal in breadth-first search (BFS) order.","[<12>, <2>, <0>, <6>, <4>, <9>, <3>, <8>, <10>, <5>, <1>, <7>, <11>]","Let's run breadth-first search (BFS) step by step.
Visit node <12>. Unvisited neighbors of node <12> are [<2>, <0>, <6>].
Visit node <2>. Unvisited neighbors of node <2> are [<4>, <9>, <3>, <8>, <10>, <5>].
Visit node <0>. Unvisited neighbors of node <0> are [<1>, <7>].
Visit node <6>. 
Visit node <4>. 
Visit node <9>. 
Visit node <3>. Unvisited neighbors of node <3> are [<11>].
Visit node <8>. 
Visit node <10>. 
Visit node <5>. 
Visit node <1>. 
Visit node <7>. 
Visit node <11>. 
So the BFS traversal is ","('[[<12>, <2>, <0>, <6>, <4>, <9>, <7>, <3>, <5>, <11>, <8>, <10>, <1>], [<12>, <2>, <0>, <6>, <5>, <1>, <7>, <11>, <4>, <9>, <3>, <8>, <10>], [<12>, <2>, <0>, <6>, <4>, <9>, <3>, <8>, <10>, <5>, <1>, <7>, <11>], [<12>, <2>, <10>, <0>, <7>, <4>, <6>, <11>, <5>, <1>, <3>, <8>, <9>]]',)",2,74
BFS,"[(<6>, <3>), (<6>, <10>), (<6>, <4>), (<6>, <8>), (<6>, <0>), (<3>, <10>), (<3>, <0>), (<3>, <6>), (<10>, <9>), (<10>, <4>), (<10>, <8>), (<10>, <2>), (<4>, <5>), (<4>, <6>), (<4>, <1>), (<4>, <7>), (<4>, <10>), (<4>, <9>), (<8>, <5>), (<8>, <0>), (<8>, <7>), (<0>, <2>), (<0>, <1>), (<0>, <9>), (<0>, <4>), (<0>, <8>), (<0>, <5>), (<1>, <9>), (<1>, <11>), (<1>, <8>), (<1>, <0>), (<1>, <2>), (<9>, <8>), (<9>, <5>), (<9>, <0>), (<9>, <6>), (<9>, <10>), (<11>, <0>), (<11>, <1>), (<11>, <9>), (<7>, <9>), (<7>, <6>), (<5>, <0>), (<5>, <1>), (<5>, <4>)]","{<6>: [<3>, <10>, <4>, <8>, <0>],
<3>: [<10>, <0>, <6>],
<10>: [<9>, <4>, <8>, <2>],
<4>: [<5>, <6>, <1>, <7>, <10>, <9>],
<8>: [<5>, <0>, <7>],
<0>: [<2>, <1>, <9>, <4>, <8>, <5>],
<1>: [<9>, <11>, <8>, <0>, <2>],
<9>: [<8>, <5>, <0>, <6>, <10>],
<11>: [<0>, <1>, <9>],
<2>: [],
<7>: [<9>, <6>],
<5>: [<0>, <1>, <4>]}","Node <6> is connected to nodes <3>, <10>, <4>, <8>, <0>.
Node <3> is connected to nodes <10>, <0>, <6>.
Node <10> is connected to nodes <9>, <4>, <8>, <2>.
Node <4> is connected to nodes <5>, <6>, <1>, <7>, <10>, <9>.
Node <8> is connected to nodes <5>, <0>, <7>.
Node <0> is connected to nodes <2>, <1>, <9>, <4>, <8>, <5>.
Node <1> is connected to nodes <9>, <11>, <8>, <0>, <2>.
Node <9> is connected to nodes <8>, <5>, <0>, <6>, <10>.
Node <11> is connected to nodes <0>, <1>, <9>.
Node <7> is connected to nodes <9>, <6>.
Node <5> is connected to nodes <0>, <1>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,45,True,"Start from node <10>, output a sequence of traversal in breadth-first search (BFS) order.","[<10>, <9>, <4>, <8>, <2>, <5>, <0>, <6>, <1>, <7>, <3>, <11>]","Let's run breadth-first search (BFS) step by step.
Visit node <10>. Unvisited neighbors of node <10> are [<9>, <4>, <8>, <2>].
Visit node <9>. Unvisited neighbors of node <9> are [<5>, <0>, <6>].
Visit node <4>. Unvisited neighbors of node <4> are [<1>, <7>].
Visit node <8>. 
Visit node <2>. 
Visit node <5>. 
Visit node <0>. 
Visit node <6>. Unvisited neighbors of node <6> are [<3>].
Visit node <1>. Unvisited neighbors of node <1> are [<11>].
Visit node <7>. 
Visit node <3>. 
Visit node <11>. 
So the BFS traversal is ","('[[<10>, <9>, <4>, <8>, <2>, <5>, <0>, <6>, <1>, <7>, <3>, <11>], [<10>, <11>, <2>, <0>, <6>, <5>, <3>, <8>, <9>, <1>, <7>, <4>], [<10>, <9>, <4>, <8>, <2>, <5>, <7>, <1>, <11>, <6>, <3>, <0>], [<10>, <9>, <4>, <8>, <1>, <7>, <3>, <11>, <2>, <5>, <0>, <6>]]',)",0,75
BFS,"[(<4>, <10>), (<4>, <13>), (<4>, <11>), (<4>, <9>), (<4>, <0>), (<4>, <12>), (<10>, <7>), (<10>, <5>), (<10>, <3>), (<13>, <0>), (<13>, <2>), (<13>, <9>), (<11>, <7>), (<11>, <0>), (<9>, <12>), (<9>, <3>), (<0>, <2>), (<12>, <8>), (<12>, <1>), (<12>, <6>), (<7>, <5>), (<7>, <2>), (<5>, <3>), (<5>, <1>), (<3>, <8>), (<3>, <1>), (<1>, <8>), (<8>, <6>)]","{<4>: [<10>, <13>, <11>, <9>, <0>, <12>],
<10>: [<4>, <7>, <5>, <3>],
<13>: [<4>, <0>, <2>, <9>],
<11>: [<4>, <7>, <0>],
<9>: [<4>, <13>, <12>, <3>],
<0>: [<4>, <13>, <2>, <11>],
<12>: [<4>, <9>, <8>, <1>, <6>],
<7>: [<10>, <5>, <11>, <2>],
<5>: [<10>, <7>, <3>, <1>],
<3>: [<10>, <5>, <9>, <8>, <1>],
<2>: [<7>, <13>, <0>],
<1>: [<5>, <12>, <8>, <3>],
<8>: [<12>, <1>, <6>, <3>],
<6>: [<12>, <8>]}","Node <4> is connected to nodes <10>, <13>, <11>, <9>, <0>, <12>.
Node <10> is connected to nodes <4>, <7>, <5>, <3>.
Node <13> is connected to nodes <4>, <0>, <2>, <9>.
Node <11> is connected to nodes <4>, <7>, <0>.
Node <9> is connected to nodes <4>, <13>, <12>, <3>.
Node <0> is connected to nodes <4>, <13>, <2>, <11>.
Node <12> is connected to nodes <4>, <9>, <8>, <1>, <6>.
Node <7> is connected to nodes <10>, <5>, <11>, <2>.
Node <5> is connected to nodes <10>, <7>, <3>, <1>.
Node <3> is connected to nodes <10>, <5>, <9>, <8>, <1>.
Node <2> is connected to nodes <7>, <13>, <0>.
Node <1> is connected to nodes <5>, <12>, <8>, <3>.
Node <8> is connected to nodes <12>, <1>, <6>, <3>.
Node <6> is connected to nodes <12>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,28,False,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <12>, <1>, <6>, <3>, <4>, <9>, <5>, <10>, <13>, <11>, <0>, <7>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<12>, <1>, <6>, <3>].
Visit node <12>. Unvisited neighbors of node <12> are [<4>, <9>].
Visit node <1>. Unvisited neighbors of node <1> are [<5>].
Visit node <6>. 
Visit node <3>. Unvisited neighbors of node <3> are [<10>].
Visit node <4>. Unvisited neighbors of node <4> are [<13>, <11>, <0>].
Visit node <9>. 
Visit node <5>. Unvisited neighbors of node <5> are [<7>].
Visit node <10>. 
Visit node <13>. Unvisited neighbors of node <13> are [<2>].
Visit node <11>. 
Visit node <0>. 
Visit node <7>. 
Visit node <2>. 
So the BFS traversal is ","('[[<8>, <12>, <1>, <6>, <11>, <0>, <7>, <2>, <3>, <4>, <9>, <5>, <10>, <13>], [<8>, <12>, <1>, <6>, <3>, <4>, <9>, <10>, <7>, <5>, <0>, <13>, <2>, <11>], [<8>, <12>, <1>, <6>, <3>, <4>, <9>, <5>, <10>, <13>, <11>, <0>, <7>, <2>], [<8>, <13>, <6>, <10>, <4>, <7>, <12>, <5>, <0>, <9>, <11>, <1>, <2>, <3>]]',)",2,76
BFS,"[(<5>, <3>), (<5>, <1>), (<3>, <7>), (<1>, <3>), (<1>, <0>), (<1>, <4>), (<2>, <6>), (<2>, <7>), (<2>, <3>), (<2>, <4>), (<6>, <3>), (<6>, <0>), (<6>, <5>), (<6>, <2>), (<7>, <0>), (<7>, <4>), (<7>, <6>), (<4>, <7>), (<0>, <4>), (<0>, <5>), (<0>, <2>), (<0>, <6>), (<0>, <7>)]","{<5>: [<3>, <1>],
<3>: [<7>],
<1>: [<3>, <0>, <4>],
<2>: [<6>, <7>, <3>, <4>],
<6>: [<3>, <0>, <5>, <2>],
<7>: [<0>, <4>, <6>],
<4>: [<7>],
<0>: [<4>, <5>, <2>, <6>, <7>]}","Node <5> is connected to nodes <3>, <1>.
Node <3> is connected to node <7>.
Node <1> is connected to nodes <3>, <0>, <4>.
Node <2> is connected to nodes <6>, <7>, <3>, <4>.
Node <6> is connected to nodes <3>, <0>, <5>, <2>.
Node <7> is connected to nodes <0>, <4>, <6>.
Node <4> is connected to node <7>.
Node <0> is connected to nodes <4>, <5>, <2>, <6>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,23,True,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <3>, <0>, <5>, <2>, <7>, <4>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<3>, <0>, <5>, <2>].
Visit node <3>. Unvisited neighbors of node <3> are [<7>].
Visit node <0>. Unvisited neighbors of node <0> are [<4>].
Visit node <5>. Unvisited neighbors of node <5> are [<1>].
Visit node <2>. 
Visit node <7>. 
Visit node <4>. 
Visit node <1>. 
So the BFS traversal is ","('[[<6>, <3>, <0>, <5>, <7>, <1>, <2>, <4>], [<6>, <3>, <4>, <1>, <0>, <5>, <2>, <7>], [<6>, <0>, <2>, <7>, <5>, <1>, <4>, <3>], [<6>, <3>, <0>, <5>, <2>, <7>, <4>, <1>]]',)",3,77
BFS,"[(<4>, <1>), (<4>, <9>), (<4>, <8>), (<1>, <6>), (<9>, <6>), (<9>, <2>), (<3>, <7>), (<7>, <11>), (<11>, <2>), (<11>, <0>), (<10>, <5>), (<5>, <0>)]","{<4>: [<1>, <9>, <8>],
<1>: [<4>, <6>],
<9>: [<4>, <6>, <2>],
<8>: [<4>],
<6>: [<1>, <9>],
<3>: [<7>],
<7>: [<3>, <11>],
<11>: [<7>, <2>, <0>],
<10>: [<5>],
<5>: [<10>, <0>],
<0>: [<5>, <11>],
<2>: [<11>, <9>]}","Node <4> is connected to nodes <1>, <9>, <8>.
Node <1> is connected to nodes <4>, <6>.
Node <9> is connected to nodes <4>, <6>, <2>.
Node <8> is connected to node <4>.
Node <6> is connected to nodes <1>, <9>.
Node <3> is connected to node <7>.
Node <7> is connected to nodes <3>, <11>.
Node <11> is connected to nodes <7>, <2>, <0>.
Node <10> is connected to node <5>.
Node <5> is connected to nodes <10>, <0>.
Node <0> is connected to nodes <5>, <11>.
Node <2> is connected to nodes <11>, <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,12,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <3>, <11>, <2>, <0>, <9>, <5>, <4>, <6>, <10>, <1>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<3>, <11>].
Visit node <3>. 
Visit node <11>. Unvisited neighbors of node <11> are [<2>, <0>].
Visit node <2>. Unvisited neighbors of node <2> are [<9>].
Visit node <0>. Unvisited neighbors of node <0> are [<5>].
Visit node <9>. Unvisited neighbors of node <9> are [<4>, <6>].
Visit node <5>. Unvisited neighbors of node <5> are [<10>].
Visit node <4>. Unvisited neighbors of node <4> are [<1>, <8>].
Visit node <6>. 
Visit node <10>. 
Visit node <1>. 
Visit node <8>. 
So the BFS traversal is ","('[[<7>, <3>, <11>, <2>, <6>, <10>, <1>, <8>, <0>, <9>, <5>, <4>], [<7>, <11>, <6>, <4>, <8>, <2>, <10>, <0>, <9>, <1>, <3>, <5>], [<7>, <3>, <11>, <2>, <0>, <9>, <6>, <4>, <10>, <8>, <5>, <1>], [<7>, <3>, <11>, <2>, <0>, <9>, <5>, <4>, <6>, <10>, <1>, <8>]]',)",3,78
BFS,"[(<8>, <1>), (<8>, <5>), (<1>, <6>), (<5>, <3>), (<6>, <7>), (<3>, <4>), (<4>, <2>), (<7>, <0>), (<0>, <2>)]","{<8>: [<1>, <5>],
<1>: [<8>, <6>],
<5>: [<8>, <3>],
<6>: [<1>, <7>],
<3>: [<5>, <4>],
<4>: [<3>, <2>],
<7>: [<6>, <0>],
<0>: [<7>, <2>],
<2>: [<4>, <0>]}","Node <8> is connected to nodes <1>, <5>.
Node <1> is connected to nodes <8>, <6>.
Node <5> is connected to nodes <8>, <3>.
Node <6> is connected to nodes <1>, <7>.
Node <3> is connected to nodes <5>, <4>.
Node <4> is connected to nodes <3>, <2>.
Node <7> is connected to nodes <6>, <0>.
Node <0> is connected to nodes <7>, <2>.
Node <2> is connected to nodes <4>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <3>, <2>, <5>, <0>, <8>, <7>, <1>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<3>, <2>].
Visit node <3>. Unvisited neighbors of node <3> are [<5>].
Visit node <2>. Unvisited neighbors of node <2> are [<0>].
Visit node <5>. Unvisited neighbors of node <5> are [<8>].
Visit node <0>. Unvisited neighbors of node <0> are [<7>].
Visit node <8>. Unvisited neighbors of node <8> are [<1>].
Visit node <7>. Unvisited neighbors of node <7> are [<6>].
Visit node <1>. 
Visit node <6>. 
So the BFS traversal is ","('[[<4>, <3>, <2>, <7>, <1>, <6>, <5>, <0>, <8>], [<4>, <0>, <5>, <8>, <2>, <6>, <7>, <1>, <3>], [<4>, <3>, <2>, <5>, <8>, <6>, <7>, <1>, <0>], [<4>, <3>, <2>, <5>, <0>, <8>, <7>, <1>, <6>]]',)",3,79
BFS,"[(<8>, <5>), (<8>, <4>), (<8>, <1>), (<5>, <1>), (<5>, <8>), (<5>, <2>), (<4>, <8>), (<4>, <3>), (<4>, <5>), (<1>, <0>), (<1>, <6>), (<6>, <3>), (<6>, <2>), (<6>, <4>), (<6>, <8>), (<3>, <2>), (<3>, <0>), (<3>, <8>), (<3>, <7>), (<2>, <4>), (<2>, <1>), (<2>, <8>), (<2>, <7>), (<2>, <3>), (<7>, <3>), (<7>, <2>), (<7>, <5>), (<0>, <8>), (<0>, <2>), (<0>, <5>)]","{<8>: [<5>, <4>, <1>],
<5>: [<1>, <8>, <2>],
<4>: [<8>, <3>, <5>],
<1>: [<0>, <6>],
<6>: [<3>, <2>, <4>, <8>],
<3>: [<2>, <0>, <8>, <7>],
<2>: [<4>, <1>, <8>, <7>, <3>],
<7>: [<3>, <2>, <5>],
<0>: [<8>, <2>, <5>]}","Node <8> is connected to nodes <5>, <4>, <1>.
Node <5> is connected to nodes <1>, <8>, <2>.
Node <4> is connected to nodes <8>, <3>, <5>.
Node <1> is connected to nodes <0>, <6>.
Node <6> is connected to nodes <3>, <2>, <4>, <8>.
Node <3> is connected to nodes <2>, <0>, <8>, <7>.
Node <2> is connected to nodes <4>, <1>, <8>, <7>, <3>.
Node <7> is connected to nodes <3>, <2>, <5>.
Node <0> is connected to nodes <8>, <2>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,30,True,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <5>, <4>, <1>, <2>, <3>, <0>, <6>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<5>, <4>, <1>].
Visit node <5>. Unvisited neighbors of node <5> are [<2>].
Visit node <4>. Unvisited neighbors of node <4> are [<3>].
Visit node <1>. Unvisited neighbors of node <1> are [<0>, <6>].
Visit node <2>. Unvisited neighbors of node <2> are [<7>].
Visit node <3>. 
Visit node <0>. 
Visit node <6>. 
Visit node <7>. 
So the BFS traversal is ","('[[<8>, <5>, <4>, <1>, <2>, <3>, <7>, <6>, <0>], [<8>, <0>, <1>, <3>, <5>, <2>, <4>, <7>, <6>], [<8>, <5>, <4>, <0>, <6>, <7>, <1>, <2>, <3>], [<8>, <5>, <4>, <1>, <2>, <3>, <0>, <6>, <7>]]',)",3,80
BFS,"[(<2>, <4>), (<2>, <1>), (<2>, <6>), (<2>, <3>), (<4>, <3>), (<4>, <0>), (<1>, <0>), (<1>, <5>), (<6>, <2>), (<6>, <1>), (<3>, <0>), (<3>, <4>), (<3>, <5>), (<5>, <7>), (<5>, <4>), (<7>, <0>), (<7>, <5>), (<7>, <1>)]","{<2>: [<4>, <1>, <6>, <3>],
<4>: [<3>, <0>],
<1>: [<0>, <5>],
<6>: [<2>, <1>],
<3>: [<0>, <4>, <5>],
<0>: [],
<5>: [<7>, <4>],
<7>: [<0>, <5>, <1>]}","Node <2> is connected to nodes <4>, <1>, <6>, <3>.
Node <4> is connected to nodes <3>, <0>.
Node <1> is connected to nodes <0>, <5>.
Node <6> is connected to nodes <2>, <1>.
Node <3> is connected to nodes <0>, <4>, <5>.
Node <5> is connected to nodes <7>, <4>.
Node <7> is connected to nodes <0>, <5>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,18,True,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <0>, <5>, <1>, <4>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<0>, <5>, <1>].
Visit node <0>. 
Visit node <5>. Unvisited neighbors of node <5> are [<4>].
Visit node <1>. 
Visit node <4>. Unvisited neighbors of node <4> are [<3>].
Visit node <3>. 
So the BFS traversal is ","('[[<7>, <0>, <4>, <3>, <5>, <1>], [<7>, <1>, <0>, <5>, <4>, <3>], [<7>, <0>, <5>, <1>, <4>, <3>], [<7>, <0>, <5>, <4>, <1>, <3>]]',)",2,81
BFS,"[(<10>, <2>), (<10>, <4>), (<10>, <3>), (<10>, <6>), (<4>, <5>), (<3>, <11>), (<3>, <0>), (<6>, <1>), (<11>, <8>), (<0>, <7>), (<7>, <9>)]","{<10>: [<2>, <4>, <3>, <6>],
<2>: [<10>],
<4>: [<10>, <5>],
<3>: [<10>, <11>, <0>],
<6>: [<10>, <1>],
<1>: [<6>],
<5>: [<4>],
<11>: [<3>, <8>],
<0>: [<3>, <7>],
<8>: [<11>],
<7>: [<0>, <9>],
<9>: [<7>]}","Node <10> is connected to nodes <2>, <4>, <3>, <6>.
Node <2> is connected to node <10>.
Node <4> is connected to nodes <10>, <5>.
Node <3> is connected to nodes <10>, <11>, <0>.
Node <6> is connected to nodes <10>, <1>.
Node <1> is connected to node <6>.
Node <5> is connected to node <4>.
Node <11> is connected to nodes <3>, <8>.
Node <0> is connected to nodes <3>, <7>.
Node <8> is connected to node <11>.
Node <7> is connected to nodes <0>, <9>.
Node <9> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,11,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <10>, <11>, <0>, <2>, <4>, <6>, <8>, <7>, <5>, <1>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<10>, <11>, <0>].
Visit node <10>. Unvisited neighbors of node <10> are [<2>, <4>, <6>].
Visit node <11>. Unvisited neighbors of node <11> are [<8>].
Visit node <0>. Unvisited neighbors of node <0> are [<7>].
Visit node <2>. 
Visit node <4>. Unvisited neighbors of node <4> are [<5>].
Visit node <6>. Unvisited neighbors of node <6> are [<1>].
Visit node <8>. 
Visit node <7>. Unvisited neighbors of node <7> are [<9>].
Visit node <5>. 
Visit node <1>. 
Visit node <9>. 
So the BFS traversal is ","('[[<3>, <10>, <11>, <0>, <2>, <4>, <6>, <8>, <7>, <1>, <9>, <5>], [<3>, <10>, <11>, <0>, <7>, <5>, <1>, <9>, <2>, <4>, <6>, <8>], [<3>, <10>, <11>, <0>, <2>, <4>, <6>, <8>, <7>, <5>, <1>, <9>], [<3>, <6>, <7>, <1>, <4>, <0>, <8>, <9>, <11>, <10>, <2>, <5>]]',)",2,82
BFS,"[(<5>, <1>), (<5>, <6>), (<1>, <4>), (<1>, <0>), (<1>, <6>), (<1>, <7>), (<6>, <0>), (<6>, <7>), (<4>, <7>), (<4>, <2>), (<4>, <8>), (<0>, <7>), (<7>, <3>), (<7>, <8>), (<2>, <3>)]","{<5>: [<1>, <6>],
<1>: [<5>, <4>, <0>, <6>, <7>],
<6>: [<5>, <1>, <0>, <7>],
<4>: [<1>, <7>, <2>, <8>],
<0>: [<1>, <6>, <7>],
<7>: [<1>, <4>, <0>, <6>, <3>, <8>],
<2>: [<4>, <3>],
<8>: [<4>, <7>],
<3>: [<7>, <2>]}","Node <5> is connected to nodes <1>, <6>.
Node <1> is connected to nodes <5>, <4>, <0>, <6>, <7>.
Node <6> is connected to nodes <5>, <1>, <0>, <7>.
Node <4> is connected to nodes <1>, <7>, <2>, <8>.
Node <0> is connected to nodes <1>, <6>, <7>.
Node <7> is connected to nodes <1>, <4>, <0>, <6>, <3>, <8>.
Node <2> is connected to nodes <4>, <3>.
Node <8> is connected to nodes <4>, <7>.
Node <3> is connected to nodes <7>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,15,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <5>, <1>, <0>, <7>, <4>, <3>, <8>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<5>, <1>, <0>, <7>].
Visit node <5>. 
Visit node <1>. Unvisited neighbors of node <1> are [<4>].
Visit node <0>. 
Visit node <7>. Unvisited neighbors of node <7> are [<3>, <8>].
Visit node <4>. Unvisited neighbors of node <4> are [<2>].
Visit node <3>. 
Visit node <8>. 
Visit node <2>. 
So the BFS traversal is ","('[[<6>, <5>, <1>, <3>, <8>, <2>, <0>, <7>, <4>], [<6>, <2>, <7>, <8>, <3>, <1>, <4>, <0>, <5>], [<6>, <5>, <1>, <0>, <7>, <4>, <3>, <8>, <2>], [<6>, <5>, <1>, <0>, <4>, <3>, <8>, <2>, <7>]]',)",2,83
BFS,"[(<8>, <13>), (<8>, <1>), (<8>, <0>), (<8>, <11>), (<8>, <9>), (<8>, <3>), (<8>, <4>), (<8>, <12>), (<13>, <11>), (<13>, <9>), (<13>, <7>), (<13>, <4>), (<1>, <6>), (<1>, <0>), (<1>, <7>), (<1>, <3>), (<1>, <12>), (<1>, <5>), (<0>, <11>), (<0>, <5>), (<11>, <9>), (<11>, <7>), (<11>, <3>), (<11>, <10>), (<11>, <5>), (<11>, <8>), (<11>, <13>), (<11>, <2>), (<9>, <12>), (<9>, <10>), (<9>, <5>), (<9>, <13>), (<9>, <1>), (<9>, <6>), (<9>, <11>), (<3>, <12>), (<3>, <10>), (<3>, <1>), (<4>, <12>), (<4>, <10>), (<4>, <0>), (<4>, <7>), (<12>, <5>), (<12>, <0>), (<12>, <3>), (<12>, <4>), (<7>, <4>), (<7>, <10>), (<7>, <5>), (<7>, <8>), (<7>, <2>), (<7>, <6>), (<7>, <0>), (<7>, <11>), (<7>, <9>), (<6>, <11>), (<6>, <9>), (<6>, <5>), (<6>, <2>), (<5>, <13>), (<5>, <1>), (<5>, <2>), (<5>, <6>), (<5>, <7>), (<5>, <4>), (<5>, <12>), (<5>, <10>), (<2>, <9>), (<2>, <4>), (<2>, <12>), (<2>, <1>), (<10>, <5>), (<10>, <0>), (<10>, <9>)]","{<8>: [<13>, <1>, <0>, <11>, <9>, <3>, <4>, <12>],
<13>: [<11>, <9>, <7>, <4>],
<1>: [<6>, <0>, <7>, <3>, <12>, <5>],
<0>: [<11>, <5>],
<11>: [<9>, <7>, <3>, <10>, <5>, <8>, <13>, <2>],
<9>: [<12>, <10>, <5>, <13>, <1>, <6>, <11>],
<3>: [<12>, <10>, <1>],
<4>: [<12>, <10>, <0>, <7>],
<12>: [<5>, <0>, <3>, <4>],
<7>: [<4>, <10>, <5>, <8>, <2>, <6>, <0>, <11>, <9>],
<6>: [<11>, <9>, <5>, <2>],
<5>: [<13>, <1>, <2>, <6>, <7>, <4>, <12>, <10>],
<2>: [<9>, <4>, <12>, <1>],
<10>: [<5>, <0>, <9>]}","Node <8> is connected to nodes <13>, <1>, <0>, <11>, <9>, <3>, <4>, <12>.
Node <13> is connected to nodes <11>, <9>, <7>, <4>.
Node <1> is connected to nodes <6>, <0>, <7>, <3>, <12>, <5>.
Node <0> is connected to nodes <11>, <5>.
Node <11> is connected to nodes <9>, <7>, <3>, <10>, <5>, <8>, <13>, <2>.
Node <9> is connected to nodes <12>, <10>, <5>, <13>, <1>, <6>, <11>.
Node <3> is connected to nodes <12>, <10>, <1>.
Node <4> is connected to nodes <12>, <10>, <0>, <7>.
Node <12> is connected to nodes <5>, <0>, <3>, <4>.
Node <7> is connected to nodes <4>, <10>, <5>, <8>, <2>, <6>, <0>, <11>, <9>.
Node <6> is connected to nodes <11>, <9>, <5>, <2>.
Node <5> is connected to nodes <13>, <1>, <2>, <6>, <7>, <4>, <12>, <10>.
Node <2> is connected to nodes <9>, <4>, <12>, <1>.
Node <10> is connected to nodes <5>, <0>, <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,74,True,"Start from node <13>, output a sequence of traversal in breadth-first search (BFS) order.","[<13>, <11>, <9>, <7>, <4>, <3>, <10>, <5>, <8>, <2>, <12>, <1>, <6>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <13>. Unvisited neighbors of node <13> are [<11>, <9>, <7>, <4>].
Visit node <11>. Unvisited neighbors of node <11> are [<3>, <10>, <5>, <8>, <2>].
Visit node <9>. Unvisited neighbors of node <9> are [<12>, <1>, <6>].
Visit node <7>. Unvisited neighbors of node <7> are [<0>].
Visit node <4>. 
Visit node <3>. 
Visit node <10>. 
Visit node <5>. 
Visit node <8>. 
Visit node <2>. 
Visit node <12>. 
Visit node <1>. 
Visit node <6>. 
Visit node <0>. 
So the BFS traversal is ","('[[<13>, <11>, <9>, <7>, <12>, <1>, <6>, <0>, <4>, <3>, <10>, <5>, <8>, <2>], [<13>, <11>, <9>, <7>, <4>, <3>, <10>, <5>, <8>, <0>, <12>, <1>, <6>, <2>], [<13>, <6>, <0>, <2>, <1>, <4>, <12>, <7>, <11>, <9>, <5>, <8>, <10>, <3>], [<13>, <11>, <9>, <7>, <4>, <3>, <10>, <5>, <8>, <2>, <12>, <1>, <6>, <0>]]',)",3,84
BFS,"[(<5>, <7>), (<5>, <6>), (<5>, <3>), (<7>, <4>), (<7>, <0>), (<7>, <5>), (<6>, <3>), (<6>, <9>), (<6>, <0>), (<6>, <5>), (<6>, <4>), (<6>, <1>), (<3>, <0>), (<3>, <5>), (<3>, <7>), (<3>, <2>), (<3>, <4>), (<4>, <3>), (<4>, <9>), (<4>, <0>), (<0>, <5>), (<0>, <2>), (<0>, <1>), (<0>, <6>), (<2>, <6>), (<2>, <5>), (<9>, <1>), (<9>, <8>), (<9>, <6>), (<9>, <3>), (<1>, <6>), (<1>, <3>), (<1>, <0>), (<1>, <5>), (<8>, <3>), (<8>, <0>), (<8>, <7>), (<8>, <4>), (<8>, <1>)]","{<5>: [<7>, <6>, <3>],
<7>: [<4>, <0>, <5>],
<6>: [<3>, <9>, <0>, <5>, <4>, <1>],
<3>: [<0>, <5>, <7>, <2>, <4>],
<4>: [<3>, <9>, <0>],
<0>: [<5>, <2>, <1>, <6>],
<2>: [<6>, <5>],
<9>: [<1>, <8>, <6>, <3>],
<1>: [<6>, <3>, <0>, <5>],
<8>: [<3>, <0>, <7>, <4>, <1>]}","Node <5> is connected to nodes <7>, <6>, <3>.
Node <7> is connected to nodes <4>, <0>, <5>.
Node <6> is connected to nodes <3>, <9>, <0>, <5>, <4>, <1>.
Node <3> is connected to nodes <0>, <5>, <7>, <2>, <4>.
Node <4> is connected to nodes <3>, <9>, <0>.
Node <0> is connected to nodes <5>, <2>, <1>, <6>.
Node <2> is connected to nodes <6>, <5>.
Node <9> is connected to nodes <1>, <8>, <6>, <3>.
Node <1> is connected to nodes <6>, <3>, <0>, <5>.
Node <8> is connected to nodes <3>, <0>, <7>, <4>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,39,True,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <6>, <3>, <0>, <5>, <9>, <4>, <7>, <2>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<6>, <3>, <0>, <5>].
Visit node <6>. Unvisited neighbors of node <6> are [<9>, <4>].
Visit node <3>. Unvisited neighbors of node <3> are [<7>, <2>].
Visit node <0>. 
Visit node <5>. 
Visit node <9>. Unvisited neighbors of node <9> are [<8>].
Visit node <4>. 
Visit node <7>. 
Visit node <2>. 
Visit node <8>. 
So the BFS traversal is ","('[[<1>, <7>, <3>, <8>, <9>, <5>, <6>, <0>, <4>, <2>], [<1>, <6>, <3>, <7>, <2>, <8>, <0>, <5>, <9>, <4>], [<1>, <6>, <3>, <0>, <5>, <9>, <4>, <7>, <2>, <8>], [<1>, <6>, <3>, <0>, <5>, <7>, <9>, <8>, <2>, <4>]]',)",2,85
BFS,"[(<0>, <3>), (<0>, <8>), (<0>, <5>), (<0>, <2>), (<0>, <7>), (<3>, <5>), (<3>, <2>), (<3>, <7>), (<8>, <9>), (<8>, <5>), (<8>, <6>), (<8>, <4>), (<8>, <7>), (<5>, <1>), (<5>, <9>), (<5>, <2>), (<5>, <4>), (<2>, <1>), (<2>, <10>), (<2>, <4>), (<7>, <1>), (<7>, <10>), (<1>, <9>), (<1>, <10>), (<1>, <4>), (<9>, <4>), (<10>, <4>), (<4>, <6>)]","{<0>: [<3>, <8>, <5>, <2>, <7>],
<3>: [<0>, <5>, <2>, <7>],
<8>: [<0>, <9>, <5>, <6>, <4>, <7>],
<5>: [<0>, <1>, <3>, <8>, <9>, <2>, <4>],
<2>: [<0>, <1>, <3>, <10>, <5>, <4>],
<7>: [<0>, <1>, <3>, <8>, <10>],
<1>: [<9>, <10>, <5>, <2>, <4>, <7>],
<9>: [<1>, <8>, <5>, <4>],
<10>: [<1>, <2>, <4>, <7>],
<4>: [<1>, <8>, <9>, <10>, <5>, <2>, <6>],
<6>: [<8>, <4>]}","Node <0> is connected to nodes <3>, <8>, <5>, <2>, <7>.
Node <3> is connected to nodes <0>, <5>, <2>, <7>.
Node <8> is connected to nodes <0>, <9>, <5>, <6>, <4>, <7>.
Node <5> is connected to nodes <0>, <1>, <3>, <8>, <9>, <2>, <4>.
Node <2> is connected to nodes <0>, <1>, <3>, <10>, <5>, <4>.
Node <7> is connected to nodes <0>, <1>, <3>, <8>, <10>.
Node <1> is connected to nodes <9>, <10>, <5>, <2>, <4>, <7>.
Node <9> is connected to nodes <1>, <8>, <5>, <4>.
Node <10> is connected to nodes <1>, <2>, <4>, <7>.
Node <4> is connected to nodes <1>, <8>, <9>, <10>, <5>, <2>, <6>.
Node <6> is connected to nodes <8>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,28,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <0>, <1>, <3>, <8>, <10>, <5>, <2>, <9>, <4>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<0>, <1>, <3>, <8>, <10>].
Visit node <0>. Unvisited neighbors of node <0> are [<5>, <2>].
Visit node <1>. Unvisited neighbors of node <1> are [<9>, <4>].
Visit node <3>. 
Visit node <8>. Unvisited neighbors of node <8> are [<6>].
Visit node <10>. 
Visit node <5>. 
Visit node <2>. 
Visit node <9>. 
Visit node <4>. 
Visit node <6>. 
So the BFS traversal is ","('[[<7>, <0>, <1>, <3>, <8>, <5>, <10>, <6>, <4>, <9>, <2>], [<7>, <0>, <1>, <9>, <4>, <6>, <3>, <8>, <10>, <5>, <2>], [<7>, <5>, <1>, <10>, <0>, <3>, <9>, <6>, <8>, <2>, <4>], [<7>, <0>, <1>, <3>, <8>, <10>, <5>, <2>, <9>, <4>, <6>]]',)",3,86
BFS,"[(<8>, <3>), (<8>, <7>), (<8>, <4>), (<7>, <1>), (<7>, <0>), (<7>, <2>), (<1>, <6>), (<1>, <5>), (<2>, <9>)]","{<8>: [<3>, <7>, <4>],
<3>: [<8>],
<7>: [<8>, <1>, <0>, <2>],
<4>: [<8>],
<1>: [<6>, <7>, <5>],
<6>: [<1>],
<5>: [<1>],
<0>: [<7>],
<2>: [<7>, <9>],
<9>: [<2>]}","Node <8> is connected to nodes <3>, <7>, <4>.
Node <3> is connected to node <8>.
Node <7> is connected to nodes <8>, <1>, <0>, <2>.
Node <4> is connected to node <8>.
Node <1> is connected to nodes <6>, <7>, <5>.
Node <6> is connected to node <1>.
Node <5> is connected to node <1>.
Node <0> is connected to node <7>.
Node <2> is connected to nodes <7>, <9>.
Node <9> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,9,False,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <3>, <7>, <4>, <1>, <0>, <2>, <6>, <5>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<3>, <7>, <4>].
Visit node <3>. 
Visit node <7>. Unvisited neighbors of node <7> are [<1>, <0>, <2>].
Visit node <4>. 
Visit node <1>. Unvisited neighbors of node <1> are [<6>, <5>].
Visit node <0>. 
Visit node <2>. Unvisited neighbors of node <2> are [<9>].
Visit node <6>. 
Visit node <5>. 
Visit node <9>. 
So the BFS traversal is ","('[[<8>, <3>, <7>, <4>, <1>, <0>, <2>, <6>, <5>, <9>], [<8>, <3>, <7>, <4>, <1>, <5>, <2>, <9>, <6>, <0>], [<8>, <7>, <0>, <2>, <3>, <9>, <5>, <6>, <4>, <1>], [<8>, <3>, <7>, <6>, <5>, <9>, <4>, <1>, <0>, <2>]]',)",0,87
BFS,"[(<1>, <13>), (<1>, <6>), (<1>, <9>), (<1>, <10>), (<1>, <2>), (<1>, <8>), (<1>, <0>), (<1>, <4>), (<1>, <11>), (<1>, <12>), (<1>, <7>), (<13>, <3>), (<13>, <6>), (<13>, <5>), (<13>, <10>), (<13>, <8>), (<13>, <0>), (<13>, <4>), (<13>, <11>), (<13>, <7>), (<6>, <9>), (<6>, <5>), (<6>, <10>), (<6>, <2>), (<6>, <0>), (<6>, <4>), (<6>, <11>), (<6>, <7>), (<9>, <3>), (<9>, <8>), (<9>, <0>), (<9>, <4>), (<9>, <12>), (<9>, <7>), (<10>, <3>), (<10>, <5>), (<10>, <2>), (<10>, <8>), (<10>, <0>), (<10>, <7>), (<2>, <3>), (<2>, <5>), (<2>, <8>), (<2>, <4>), (<2>, <11>), (<2>, <12>), (<2>, <7>), (<8>, <3>), (<8>, <5>), (<8>, <0>), (<8>, <4>), (<8>, <11>), (<8>, <12>), (<8>, <7>), (<0>, <3>), (<0>, <5>), (<0>, <4>), (<0>, <11>), (<0>, <12>), (<0>, <7>), (<4>, <5>), (<4>, <12>), (<11>, <3>), (<11>, <12>), (<11>, <7>), (<12>, <3>), (<12>, <7>), (<7>, <3>), (<7>, <5>)]","{<1>: [<13>, <6>, <9>, <10>, <2>, <8>, <0>, <4>, <11>, <12>, <7>],
<13>: [<1>, <3>, <6>, <5>, <10>, <8>, <0>, <4>, <11>, <7>],
<6>: [<1>, <13>, <9>, <5>, <10>, <2>, <0>, <4>, <11>, <7>],
<9>: [<1>, <3>, <6>, <8>, <0>, <4>, <12>, <7>],
<10>: [<1>, <3>, <13>, <6>, <5>, <2>, <8>, <0>, <7>],
<2>: [<1>, <3>, <6>, <5>, <10>, <8>, <4>, <11>, <12>, <7>],
<8>: [<1>, <3>, <13>, <9>, <5>, <10>, <2>, <0>, <4>, <11>, <12>, <7>],
<0>: [<1>, <3>, <13>, <6>, <9>, <5>, <10>, <8>, <4>, <11>, <12>, <7>],
<4>: [<1>, <13>, <6>, <9>, <5>, <2>, <8>, <0>, <12>],
<11>: [<1>, <3>, <13>, <6>, <2>, <8>, <0>, <12>, <7>],
<12>: [<1>, <3>, <9>, <2>, <8>, <0>, <4>, <11>, <7>],
<7>: [<1>, <3>, <13>, <6>, <9>, <5>, <10>, <2>, <8>, <0>, <11>, <12>],
<3>: [<13>, <9>, <10>, <2>, <8>, <0>, <11>, <12>, <7>],
<5>: [<13>, <6>, <10>, <2>, <8>, <0>, <4>, <7>]}","Node <1> is connected to nodes <13>, <6>, <9>, <10>, <2>, <8>, <0>, <4>, <11>, <12>, <7>.
Node <13> is connected to nodes <1>, <3>, <6>, <5>, <10>, <8>, <0>, <4>, <11>, <7>.
Node <6> is connected to nodes <1>, <13>, <9>, <5>, <10>, <2>, <0>, <4>, <11>, <7>.
Node <9> is connected to nodes <1>, <3>, <6>, <8>, <0>, <4>, <12>, <7>.
Node <10> is connected to nodes <1>, <3>, <13>, <6>, <5>, <2>, <8>, <0>, <7>.
Node <2> is connected to nodes <1>, <3>, <6>, <5>, <10>, <8>, <4>, <11>, <12>, <7>.
Node <8> is connected to nodes <1>, <3>, <13>, <9>, <5>, <10>, <2>, <0>, <4>, <11>, <12>, <7>.
Node <0> is connected to nodes <1>, <3>, <13>, <6>, <9>, <5>, <10>, <8>, <4>, <11>, <12>, <7>.
Node <4> is connected to nodes <1>, <13>, <6>, <9>, <5>, <2>, <8>, <0>, <12>.
Node <11> is connected to nodes <1>, <3>, <13>, <6>, <2>, <8>, <0>, <12>, <7>.
Node <12> is connected to nodes <1>, <3>, <9>, <2>, <8>, <0>, <4>, <11>, <7>.
Node <7> is connected to nodes <1>, <3>, <13>, <6>, <9>, <5>, <10>, <2>, <8>, <0>, <11>, <12>.
Node <3> is connected to nodes <13>, <9>, <10>, <2>, <8>, <0>, <11>, <12>, <7>.
Node <5> is connected to nodes <13>, <6>, <10>, <2>, <8>, <0>, <4>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,69,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <1>, <3>, <6>, <5>, <10>, <8>, <4>, <11>, <12>, <7>, <13>, <9>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<1>, <3>, <6>, <5>, <10>, <8>, <4>, <11>, <12>, <7>].
Visit node <1>. Unvisited neighbors of node <1> are [<13>, <9>, <0>].
Visit node <3>. 
Visit node <6>. 
Visit node <5>. 
Visit node <10>. 
Visit node <8>. 
Visit node <4>. 
Visit node <11>. 
Visit node <12>. 
Visit node <7>. 
Visit node <13>. 
Visit node <9>. 
Visit node <0>. 
So the BFS traversal is ","('[[<2>, <1>, <3>, <6>, <7>, <13>, <9>, <0>, <5>, <10>, <8>, <4>, <11>, <12>], [<2>, <1>, <3>, <6>, <5>, <10>, <8>, <9>, <7>, <13>, <4>, <11>, <0>, <12>], [<2>, <11>, <4>, <3>, <0>, <9>, <6>, <7>, <8>, <12>, <5>, <1>, <13>, <10>], [<2>, <1>, <3>, <6>, <5>, <10>, <8>, <4>, <11>, <12>, <7>, <13>, <9>, <0>]]',)",3,88
BFS,"[(<5>, <12>), (<5>, <1>), (<12>, <7>), (<1>, <0>), (<1>, <10>), (<7>, <6>), (<7>, <8>), (<3>, <2>), (<3>, <11>), (<3>, <9>), (<2>, <10>), (<2>, <4>), (<10>, <4>)]","{<5>: [<12>, <1>],
<12>: [<5>, <7>],
<1>: [<5>, <0>, <10>],
<7>: [<12>, <6>, <8>],
<3>: [<2>, <11>, <9>],
<2>: [<3>, <10>, <4>],
<11>: [<3>],
<9>: [<3>],
<10>: [<2>, <1>, <4>],
<4>: [<2>, <10>],
<0>: [<1>],
<6>: [<7>],
<8>: [<7>]}","Node <5> is connected to nodes <12>, <1>.
Node <12> is connected to nodes <5>, <7>.
Node <1> is connected to nodes <5>, <0>, <10>.
Node <7> is connected to nodes <12>, <6>, <8>.
Node <3> is connected to nodes <2>, <11>, <9>.
Node <2> is connected to nodes <3>, <10>, <4>.
Node <11> is connected to node <3>.
Node <9> is connected to node <3>.
Node <10> is connected to nodes <2>, <1>, <4>.
Node <4> is connected to nodes <2>, <10>.
Node <0> is connected to node <1>.
Node <6> is connected to node <7>.
Node <8> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,13,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <12>, <6>, <8>, <5>, <1>, <0>, <10>, <2>, <4>, <3>, <11>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<12>, <6>, <8>].
Visit node <12>. Unvisited neighbors of node <12> are [<5>].
Visit node <6>. 
Visit node <8>. 
Visit node <5>. Unvisited neighbors of node <5> are [<1>].
Visit node <1>. Unvisited neighbors of node <1> are [<0>, <10>].
Visit node <0>. 
Visit node <10>. Unvisited neighbors of node <10> are [<2>, <4>].
Visit node <2>. Unvisited neighbors of node <2> are [<3>].
Visit node <4>. 
Visit node <3>. Unvisited neighbors of node <3> are [<11>, <9>].
Visit node <11>. 
Visit node <9>. 
So the BFS traversal is ","('[[<7>, <12>, <6>, <8>, <4>, <3>, <11>, <9>, <5>, <1>, <0>, <10>, <2>], [<7>, <12>, <6>, <8>, <5>, <1>, <0>, <10>, <2>, <4>, <3>, <11>, <9>], [<7>, <3>, <6>, <11>, <2>, <8>, <10>, <12>, <4>, <0>, <1>, <9>, <5>], [<7>, <12>, <6>, <8>, <5>, <1>, <9>, <2>, <3>, <10>, <4>, <11>, <0>]]',)",1,89
BFS,"[(<0>, <6>), (<0>, <11>), (<0>, <1>), (<6>, <5>), (<6>, <4>), (<6>, <12>), (<11>, <5>), (<11>, <7>), (<11>, <8>), (<11>, <3>), (<1>, <9>), (<1>, <3>), (<1>, <12>), (<4>, <2>), (<4>, <7>), (<4>, <8>), (<12>, <2>), (<12>, <7>), (<9>, <10>), (<9>, <7>), (<7>, <13>), (<13>, <8>), (<13>, <3>)]","{<0>: [<6>, <11>, <1>],
<6>: [<0>, <5>, <4>, <12>],
<11>: [<0>, <5>, <7>, <8>, <3>],
<1>: [<0>, <9>, <3>, <12>],
<5>: [<6>, <11>],
<4>: [<6>, <2>, <7>, <8>],
<12>: [<6>, <2>, <7>, <1>],
<2>: [<4>, <12>],
<9>: [<10>, <7>, <1>],
<10>: [<9>],
<7>: [<9>, <13>, <4>, <11>, <12>],
<13>: [<7>, <8>, <3>],
<8>: [<13>, <4>, <11>],
<3>: [<13>, <11>, <1>]}","Node <0> is connected to nodes <6>, <11>, <1>.
Node <6> is connected to nodes <0>, <5>, <4>, <12>.
Node <11> is connected to nodes <0>, <5>, <7>, <8>, <3>.
Node <1> is connected to nodes <0>, <9>, <3>, <12>.
Node <5> is connected to nodes <6>, <11>.
Node <4> is connected to nodes <6>, <2>, <7>, <8>.
Node <12> is connected to nodes <6>, <2>, <7>, <1>.
Node <2> is connected to nodes <4>, <12>.
Node <9> is connected to nodes <10>, <7>, <1>.
Node <10> is connected to node <9>.
Node <7> is connected to nodes <9>, <13>, <4>, <11>, <12>.
Node <13> is connected to nodes <7>, <8>, <3>.
Node <8> is connected to nodes <13>, <4>, <11>.
Node <3> is connected to nodes <13>, <11>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,23,False,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <0>, <9>, <3>, <12>, <6>, <11>, <10>, <7>, <13>, <2>, <5>, <4>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<0>, <9>, <3>, <12>].
Visit node <0>. Unvisited neighbors of node <0> are [<6>, <11>].
Visit node <9>. Unvisited neighbors of node <9> are [<10>, <7>].
Visit node <3>. Unvisited neighbors of node <3> are [<13>].
Visit node <12>. Unvisited neighbors of node <12> are [<2>].
Visit node <6>. Unvisited neighbors of node <6> are [<5>, <4>].
Visit node <11>. Unvisited neighbors of node <11> are [<8>].
Visit node <10>. 
Visit node <7>. 
Visit node <13>. 
Visit node <2>. 
Visit node <5>. 
Visit node <4>. 
Visit node <8>. 
So the BFS traversal is ","('[[<1>, <10>, <12>, <13>, <3>, <6>, <11>, <5>, <7>, <9>, <0>, <8>, <4>, <2>], [<1>, <0>, <9>, <3>, <12>, <6>, <11>, <10>, <7>, <13>, <2>, <5>, <4>, <8>], [<1>, <0>, <9>, <3>, <12>, <6>, <11>, <7>, <5>, <10>, <13>, <8>, <4>, <2>], [<1>, <0>, <9>, <3>, <2>, <5>, <4>, <8>, <12>, <6>, <11>, <10>, <7>, <13>]]',)",1,90
BFS,"[(<1>, <10>), (<1>, <9>), (<1>, <6>), (<1>, <4>), (<1>, <5>), (<1>, <8>), (<1>, <7>), (<10>, <3>), (<10>, <9>), (<10>, <4>), (<9>, <2>), (<9>, <5>), (<9>, <0>), (<9>, <7>), (<9>, <4>), (<9>, <6>), (<9>, <11>), (<9>, <3>), (<6>, <11>), (<4>, <2>), (<4>, <5>), (<4>, <8>), (<4>, <7>), (<4>, <3>), (<8>, <7>), (<2>, <0>), (<0>, <11>)]","{<1>: [<10>, <9>, <6>, <4>, <5>, <8>, <7>],
<10>: [<1>, <3>, <9>, <4>],
<9>: [<1>, <10>, <2>, <5>, <0>, <7>, <4>, <6>, <11>, <3>],
<6>: [<1>, <9>, <11>],
<4>: [<1>, <10>, <9>, <2>, <5>, <8>, <7>, <3>],
<5>: [<1>, <9>, <4>],
<8>: [<1>, <4>, <7>],
<7>: [<1>, <9>, <4>, <8>],
<3>: [<10>, <9>, <4>],
<2>: [<9>, <4>, <0>],
<0>: [<9>, <2>, <11>],
<11>: [<9>, <0>, <6>]}","Node <1> is connected to nodes <10>, <9>, <6>, <4>, <5>, <8>, <7>.
Node <10> is connected to nodes <1>, <3>, <9>, <4>.
Node <9> is connected to nodes <1>, <10>, <2>, <5>, <0>, <7>, <4>, <6>, <11>, <3>.
Node <6> is connected to nodes <1>, <9>, <11>.
Node <4> is connected to nodes <1>, <10>, <9>, <2>, <5>, <8>, <7>, <3>.
Node <5> is connected to nodes <1>, <9>, <4>.
Node <8> is connected to nodes <1>, <4>, <7>.
Node <7> is connected to nodes <1>, <9>, <4>, <8>.
Node <3> is connected to nodes <10>, <9>, <4>.
Node <2> is connected to nodes <9>, <4>, <0>.
Node <0> is connected to nodes <9>, <2>, <11>.
Node <11> is connected to nodes <9>, <0>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,27,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <1>, <9>, <11>, <10>, <4>, <5>, <8>, <7>, <2>, <0>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<1>, <9>, <11>].
Visit node <1>. Unvisited neighbors of node <1> are [<10>, <4>, <5>, <8>, <7>].
Visit node <9>. Unvisited neighbors of node <9> are [<2>, <0>, <3>].
Visit node <11>. 
Visit node <10>. 
Visit node <4>. 
Visit node <5>. 
Visit node <8>. 
Visit node <7>. 
Visit node <2>. 
Visit node <0>. 
Visit node <3>. 
So the BFS traversal is ","('[[<6>, <1>, <9>, <11>, <7>, <2>, <0>, <3>, <10>, <4>, <5>, <8>], [<6>, <1>, <9>, <11>, <10>, <4>, <5>, <8>, <7>, <2>, <0>, <3>], [<6>, <1>, <3>, <2>, <7>, <8>, <9>, <5>, <10>, <11>, <4>, <0>], [<6>, <1>, <9>, <11>, <10>, <4>, <7>, <2>, <8>, <3>, <0>, <5>]]',)",1,91
BFS,"[(<7>, <4>), (<7>, <1>), (<4>, <8>), (<1>, <9>), (<1>, <2>), (<8>, <9>), (<5>, <6>), (<6>, <3>), (<3>, <11>), (<2>, <0>), (<11>, <12>), (<11>, <10>), (<12>, <10>)]","{<7>: [<4>, <1>],
<4>: [<7>, <8>],
<1>: [<7>, <9>, <2>],
<8>: [<4>, <9>],
<5>: [<6>],
<6>: [<5>, <3>],
<3>: [<6>, <11>],
<9>: [<1>, <8>],
<2>: [<1>, <0>],
<0>: [<2>],
<11>: [<3>, <12>, <10>],
<12>: [<11>, <10>],
<10>: [<11>, <12>]}","Node <7> is connected to nodes <4>, <1>.
Node <4> is connected to nodes <7>, <8>.
Node <1> is connected to nodes <7>, <9>, <2>.
Node <8> is connected to nodes <4>, <9>.
Node <5> is connected to node <6>.
Node <6> is connected to nodes <5>, <3>.
Node <3> is connected to nodes <6>, <11>.
Node <9> is connected to nodes <1>, <8>.
Node <2> is connected to nodes <1>, <0>.
Node <0> is connected to node <2>.
Node <11> is connected to nodes <3>, <12>, <10>.
Node <12> is connected to nodes <11>, <10>.
Node <10> is connected to nodes <11>, <12>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,13,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <5>, <3>, <11>, <12>, <10>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<5>, <3>].
Visit node <5>. 
Visit node <3>. Unvisited neighbors of node <3> are [<11>].
Visit node <11>. Unvisited neighbors of node <11> are [<12>, <10>].
Visit node <12>. 
Visit node <10>. 
So the BFS traversal is ","('[[<6>, <3>, <10>, <12>, <5>, <11>], [<6>, <5>, <3>, <11>, <12>, <10>], [<6>, <5>, <12>, <10>, <3>, <11>], [<6>, <5>, <3>, <10>, <12>, <11>]]',)",1,92
BFS,"[(<5>, <2>), (<5>, <1>), (<5>, <9>), (<5>, <0>), (<5>, <7>), (<5>, <4>), (<5>, <10>), (<5>, <6>), (<9>, <3>), (<3>, <8>)]","{<5>: [<2>, <1>, <9>, <0>, <7>, <4>, <10>, <6>],
<2>: [<5>],
<1>: [<5>],
<9>: [<5>, <3>],
<0>: [<5>],
<7>: [<5>],
<4>: [<5>],
<10>: [<5>],
<6>: [<5>],
<3>: [<9>, <8>],
<8>: [<3>]}","Node <5> is connected to nodes <2>, <1>, <9>, <0>, <7>, <4>, <10>, <6>.
Node <2> is connected to node <5>.
Node <1> is connected to node <5>.
Node <9> is connected to nodes <5>, <3>.
Node <0> is connected to node <5>.
Node <7> is connected to node <5>.
Node <4> is connected to node <5>.
Node <10> is connected to node <5>.
Node <6> is connected to node <5>.
Node <3> is connected to nodes <9>, <8>.
Node <8> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,10,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <2>, <1>, <9>, <0>, <7>, <4>, <10>, <6>, <3>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<2>, <1>, <9>, <0>, <7>, <4>, <10>, <6>].
Visit node <2>. 
Visit node <1>. 
Visit node <9>. Unvisited neighbors of node <9> are [<3>].
Visit node <0>. 
Visit node <7>. 
Visit node <4>. 
Visit node <10>. 
Visit node <6>. 
Visit node <3>. Unvisited neighbors of node <3> are [<8>].
Visit node <8>. 
So the BFS traversal is ","('[[<5>, <2>, <1>, <6>, <3>, <8>, <9>, <0>, <7>, <4>, <10>], [<5>, <1>, <8>, <9>, <0>, <3>, <2>, <4>, <10>, <7>, <6>], [<5>, <2>, <1>, <9>, <0>, <6>, <3>, <10>, <7>, <4>, <8>], [<5>, <2>, <1>, <9>, <0>, <7>, <4>, <10>, <6>, <3>, <8>]]',)",3,93
BFS,"[(<2>, <10>), (<2>, <3>), (<2>, <7>), (<2>, <4>), (<2>, <0>), (<2>, <6>), (<2>, <5>), (<10>, <9>), (<10>, <1>), (<10>, <3>), (<10>, <7>), (<10>, <8>), (<10>, <4>), (<10>, <6>), (<3>, <9>), (<3>, <7>), (<3>, <8>), (<3>, <4>), (<3>, <0>), (<3>, <5>), (<7>, <1>), (<7>, <8>), (<7>, <4>), (<7>, <0>), (<7>, <5>), (<4>, <9>), (<4>, <0>), (<4>, <6>), (<4>, <5>), (<0>, <9>), (<0>, <1>), (<0>, <8>), (<0>, <6>), (<6>, <9>), (<6>, <1>), (<6>, <8>), (<6>, <5>), (<5>, <9>), (<5>, <1>), (<1>, <8>)]","{<2>: [<10>, <3>, <7>, <4>, <0>, <6>, <5>],
<10>: [<2>, <9>, <1>, <3>, <7>, <8>, <4>, <6>],
<3>: [<2>, <9>, <10>, <7>, <8>, <4>, <0>, <5>],
<7>: [<2>, <10>, <1>, <3>, <8>, <4>, <0>, <5>],
<4>: [<2>, <9>, <10>, <3>, <7>, <0>, <6>, <5>],
<0>: [<2>, <9>, <1>, <3>, <7>, <8>, <4>, <6>],
<6>: [<2>, <9>, <10>, <1>, <8>, <4>, <0>, <5>],
<5>: [<2>, <9>, <1>, <3>, <7>, <4>, <6>],
<9>: [<10>, <3>, <4>, <0>, <6>, <5>],
<1>: [<10>, <7>, <8>, <0>, <6>, <5>],
<8>: [<10>, <1>, <3>, <7>, <0>, <6>]}","Node <2> is connected to nodes <10>, <3>, <7>, <4>, <0>, <6>, <5>.
Node <10> is connected to nodes <2>, <9>, <1>, <3>, <7>, <8>, <4>, <6>.
Node <3> is connected to nodes <2>, <9>, <10>, <7>, <8>, <4>, <0>, <5>.
Node <7> is connected to nodes <2>, <10>, <1>, <3>, <8>, <4>, <0>, <5>.
Node <4> is connected to nodes <2>, <9>, <10>, <3>, <7>, <0>, <6>, <5>.
Node <0> is connected to nodes <2>, <9>, <1>, <3>, <7>, <8>, <4>, <6>.
Node <6> is connected to nodes <2>, <9>, <10>, <1>, <8>, <4>, <0>, <5>.
Node <5> is connected to nodes <2>, <9>, <1>, <3>, <7>, <4>, <6>.
Node <9> is connected to nodes <10>, <3>, <4>, <0>, <6>, <5>.
Node <1> is connected to nodes <10>, <7>, <8>, <0>, <6>, <5>.
Node <8> is connected to nodes <10>, <1>, <3>, <7>, <0>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,40,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <2>, <9>, <10>, <1>, <8>, <4>, <0>, <5>, <3>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<2>, <9>, <10>, <1>, <8>, <4>, <0>, <5>].
Visit node <2>. Unvisited neighbors of node <2> are [<3>, <7>].
Visit node <9>. 
Visit node <10>. 
Visit node <1>. 
Visit node <8>. 
Visit node <4>. 
Visit node <0>. 
Visit node <5>. 
Visit node <3>. 
Visit node <7>. 
So the BFS traversal is ","('[[<6>, <1>, <8>, <3>, <4>, <10>, <0>, <9>, <5>, <7>, <2>], [<6>, <2>, <9>, <10>, <1>, <5>, <7>, <8>, <4>, <3>, <0>], [<6>, <2>, <9>, <5>, <3>, <7>, <10>, <1>, <8>, <4>, <0>], [<6>, <2>, <9>, <10>, <1>, <8>, <4>, <0>, <5>, <3>, <7>]]',)",3,94
BFS,"[(<8>, <12>), (<8>, <7>), (<12>, <11>), (<7>, <2>), (<11>, <5>), (<5>, <4>), (<4>, <2>), (<9>, <6>), (<9>, <0>), (<6>, <1>), (<0>, <3>), (<0>, <10>), (<3>, <10>)]","{<8>: [<12>, <7>],
<12>: [<8>, <11>],
<7>: [<8>, <2>],
<11>: [<12>, <5>],
<5>: [<4>, <11>],
<4>: [<5>, <2>],
<2>: [<4>, <7>],
<9>: [<6>, <0>],
<6>: [<9>, <1>],
<0>: [<9>, <3>, <10>],
<1>: [<6>],
<3>: [<0>, <10>],
<10>: [<0>, <3>]}","Node <8> is connected to nodes <12>, <7>.
Node <12> is connected to nodes <8>, <11>.
Node <7> is connected to nodes <8>, <2>.
Node <11> is connected to nodes <12>, <5>.
Node <5> is connected to nodes <4>, <11>.
Node <4> is connected to nodes <5>, <2>.
Node <2> is connected to nodes <4>, <7>.
Node <9> is connected to nodes <6>, <0>.
Node <6> is connected to nodes <9>, <1>.
Node <0> is connected to nodes <9>, <3>, <10>.
Node <1> is connected to node <6>.
Node <3> is connected to nodes <0>, <10>.
Node <10> is connected to nodes <0>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,13,False,"Start from node <10>, output a sequence of traversal in breadth-first search (BFS) order.","[<10>, <0>, <3>, <9>, <6>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <10>. Unvisited neighbors of node <10> are [<0>, <3>].
Visit node <0>. Unvisited neighbors of node <0> are [<9>].
Visit node <3>. 
Visit node <9>. Unvisited neighbors of node <9> are [<6>].
Visit node <6>. Unvisited neighbors of node <6> are [<1>].
Visit node <1>. 
So the BFS traversal is ","('[[<10>, <0>, <6>, <1>, <3>, <9>], [<10>, <0>, <3>, <6>, <9>, <1>], [<10>, <0>, <6>, <9>, <3>, <1>], [<10>, <0>, <3>, <9>, <6>, <1>]]',)",3,95
BFS,"[(<7>, <14>), (<7>, <6>), (<7>, <5>), (<14>, <13>), (<6>, <13>), (<6>, <3>), (<6>, <4>), (<6>, <2>), (<6>, <10>), (<6>, <12>), (<6>, <5>), (<6>, <8>), (<5>, <0>), (<5>, <11>), (<5>, <4>), (<5>, <10>), (<5>, <12>), (<5>, <9>), (<13>, <0>), (<13>, <10>), (<10>, <3>), (<3>, <11>), (<3>, <1>), (<1>, <4>), (<4>, <2>), (<12>, <9>)]","{<7>: [<14>, <6>, <5>],
<14>: [<7>, <13>],
<6>: [<7>, <13>, <3>, <4>, <2>, <10>, <12>, <5>, <8>],
<5>: [<7>, <0>, <11>, <4>, <6>, <10>, <12>, <9>],
<13>: [<14>, <0>, <10>, <6>],
<0>: [<13>, <5>],
<10>: [<13>, <3>, <6>, <5>],
<3>: [<11>, <1>, <10>, <6>],
<11>: [<3>, <5>],
<1>: [<3>, <4>],
<4>: [<2>, <6>, <1>, <5>],
<2>: [<4>, <6>],
<12>: [<6>, <5>, <9>],
<8>: [<6>],
<9>: [<5>, <12>]}","Node <7> is connected to nodes <14>, <6>, <5>.
Node <14> is connected to nodes <7>, <13>.
Node <6> is connected to nodes <7>, <13>, <3>, <4>, <2>, <10>, <12>, <5>, <8>.
Node <5> is connected to nodes <7>, <0>, <11>, <4>, <6>, <10>, <12>, <9>.
Node <13> is connected to nodes <14>, <0>, <10>, <6>.
Node <0> is connected to nodes <13>, <5>.
Node <10> is connected to nodes <13>, <3>, <6>, <5>.
Node <3> is connected to nodes <11>, <1>, <10>, <6>.
Node <11> is connected to nodes <3>, <5>.
Node <1> is connected to nodes <3>, <4>.
Node <4> is connected to nodes <2>, <6>, <1>, <5>.
Node <2> is connected to nodes <4>, <6>.
Node <12> is connected to nodes <6>, <5>, <9>.
Node <8> is connected to node <6>.
Node <9> is connected to nodes <5>, <12>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,26,False,"Start from node <10>, output a sequence of traversal in breadth-first search (BFS) order.","[<10>, <13>, <3>, <6>, <5>, <14>, <0>, <11>, <1>, <7>, <4>, <2>, <12>, <8>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <10>. Unvisited neighbors of node <10> are [<13>, <3>, <6>, <5>].
Visit node <13>. Unvisited neighbors of node <13> are [<14>, <0>].
Visit node <3>. Unvisited neighbors of node <3> are [<11>, <1>].
Visit node <6>. Unvisited neighbors of node <6> are [<7>, <4>, <2>, <12>, <8>].
Visit node <5>. Unvisited neighbors of node <5> are [<9>].
Visit node <14>. 
Visit node <0>. 
Visit node <11>. 
Visit node <1>. 
Visit node <7>. 
Visit node <4>. 
Visit node <2>. 
Visit node <12>. 
Visit node <8>. 
Visit node <9>. 
So the BFS traversal is ","('[[<10>, <8>, <13>, <4>, <1>, <11>, <2>, <3>, <6>, <5>, <14>, <7>, <12>, <9>, <0>], [<10>, <13>, <3>, <6>, <5>, <14>, <0>, <8>, <12>, <7>, <9>, <11>, <2>, <1>, <4>], [<10>, <13>, <3>, <6>, <5>, <4>, <2>, <12>, <8>, <9>, <14>, <0>, <11>, <1>, <7>], [<10>, <13>, <3>, <6>, <5>, <14>, <0>, <11>, <1>, <7>, <4>, <2>, <12>, <8>, <9>]]',)",3,96
BFS,"[(<3>, <8>), (<3>, <12>), (<3>, <1>), (<3>, <7>), (<3>, <5>), (<3>, <9>), (<3>, <2>), (<8>, <10>), (<8>, <5>), (<8>, <9>), (<8>, <2>), (<12>, <11>), (<12>, <1>), (<12>, <10>), (<12>, <0>), (<12>, <4>), (<1>, <6>), (<1>, <11>), (<1>, <10>), (<1>, <5>), (<7>, <6>), (<7>, <0>), (<7>, <2>), (<5>, <10>), (<5>, <9>), (<5>, <2>), (<9>, <6>), (<9>, <10>), (<2>, <11>), (<2>, <10>), (<10>, <11>), (<10>, <0>), (<10>, <4>), (<6>, <11>), (<6>, <0>), (<11>, <4>)]","{<3>: [<8>, <12>, <1>, <7>, <5>, <9>, <2>],
<8>: [<3>, <10>, <5>, <9>, <2>],
<12>: [<3>, <11>, <1>, <10>, <0>, <4>],
<1>: [<3>, <6>, <12>, <11>, <10>, <5>],
<7>: [<3>, <6>, <0>, <2>],
<5>: [<3>, <8>, <1>, <10>, <9>, <2>],
<9>: [<3>, <8>, <6>, <10>, <5>],
<2>: [<3>, <8>, <11>, <7>, <10>, <5>],
<10>: [<8>, <12>, <11>, <1>, <5>, <9>, <0>, <2>, <4>],
<6>: [<11>, <1>, <7>, <9>, <0>],
<11>: [<6>, <12>, <1>, <10>, <2>, <4>],
<0>: [<6>, <12>, <7>, <10>],
<4>: [<12>, <11>, <10>]}","Node <3> is connected to nodes <8>, <12>, <1>, <7>, <5>, <9>, <2>.
Node <8> is connected to nodes <3>, <10>, <5>, <9>, <2>.
Node <12> is connected to nodes <3>, <11>, <1>, <10>, <0>, <4>.
Node <1> is connected to nodes <3>, <6>, <12>, <11>, <10>, <5>.
Node <7> is connected to nodes <3>, <6>, <0>, <2>.
Node <5> is connected to nodes <3>, <8>, <1>, <10>, <9>, <2>.
Node <9> is connected to nodes <3>, <8>, <6>, <10>, <5>.
Node <2> is connected to nodes <3>, <8>, <11>, <7>, <10>, <5>.
Node <10> is connected to nodes <8>, <12>, <11>, <1>, <5>, <9>, <0>, <2>, <4>.
Node <6> is connected to nodes <11>, <1>, <7>, <9>, <0>.
Node <11> is connected to nodes <6>, <12>, <1>, <10>, <2>, <4>.
Node <0> is connected to nodes <6>, <12>, <7>, <10>.
Node <4> is connected to nodes <12>, <11>, <10>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,36,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <11>, <1>, <7>, <9>, <0>, <12>, <10>, <2>, <4>, <3>, <5>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<11>, <1>, <7>, <9>, <0>].
Visit node <11>. Unvisited neighbors of node <11> are [<12>, <10>, <2>, <4>].
Visit node <1>. Unvisited neighbors of node <1> are [<3>, <5>].
Visit node <7>. 
Visit node <9>. Unvisited neighbors of node <9> are [<8>].
Visit node <0>. 
Visit node <12>. 
Visit node <10>. 
Visit node <2>. 
Visit node <4>. 
Visit node <3>. 
Visit node <5>. 
Visit node <8>. 
So the BFS traversal is ","('[[<6>, <11>, <1>, <7>, <9>, <0>, <12>, <10>, <2>, <4>, <3>, <5>, <8>], [<6>, <11>, <1>, <7>, <9>, <0>, <4>, <2>, <3>, <10>, <5>, <12>, <8>], [<6>, <11>, <1>, <7>, <4>, <3>, <5>, <8>, <9>, <0>, <12>, <10>, <2>], [<6>, <12>, <7>, <11>, <5>, <1>, <4>, <3>, <8>, <2>, <10>, <0>, <9>]]',)",0,97
BFS,"[(<14>, <4>), (<14>, <3>), (<4>, <6>), (<4>, <5>), (<4>, <11>), (<4>, <13>), (<3>, <13>), (<3>, <4>), (<3>, <2>), (<3>, <9>), (<6>, <1>), (<6>, <3>), (<6>, <13>), (<6>, <14>), (<6>, <4>), (<5>, <9>), (<5>, <11>), (<5>, <13>), (<5>, <14>), (<5>, <7>), (<5>, <0>), (<5>, <6>), (<11>, <13>), (<11>, <14>), (<11>, <12>), (<11>, <0>), (<11>, <1>), (<13>, <4>), (<13>, <12>), (<13>, <10>), (<13>, <8>), (<13>, <5>), (<13>, <2>), (<12>, <6>), (<12>, <9>), (<12>, <3>), (<12>, <11>), (<12>, <13>), (<12>, <4>), (<9>, <3>), (<9>, <11>), (<9>, <8>), (<7>, <5>), (<7>, <2>), (<7>, <11>), (<2>, <3>), (<2>, <11>), (<2>, <7>), (<2>, <6>), (<0>, <10>), (<0>, <5>), (<10>, <8>), (<10>, <5>), (<10>, <0>), (<10>, <6>), (<1>, <3>), (<1>, <4>), (<1>, <2>), (<8>, <11>), (<8>, <12>)]","{<14>: [<4>, <3>],
<4>: [<6>, <5>, <11>, <13>],
<3>: [<13>, <4>, <2>, <9>],
<6>: [<1>, <3>, <13>, <14>, <4>],
<5>: [<9>, <11>, <13>, <14>, <7>, <0>, <6>],
<11>: [<13>, <14>, <12>, <0>, <1>],
<13>: [<4>, <12>, <10>, <8>, <5>, <2>],
<12>: [<6>, <9>, <3>, <11>, <13>, <4>],
<9>: [<3>, <11>, <8>],
<7>: [<5>, <2>, <11>],
<2>: [<3>, <11>, <7>, <6>],
<0>: [<10>, <5>],
<10>: [<8>, <5>, <0>, <6>],
<1>: [<3>, <4>, <2>],
<8>: [<11>, <12>]}","Node <14> is connected to nodes <4>, <3>.
Node <4> is connected to nodes <6>, <5>, <11>, <13>.
Node <3> is connected to nodes <13>, <4>, <2>, <9>.
Node <6> is connected to nodes <1>, <3>, <13>, <14>, <4>.
Node <5> is connected to nodes <9>, <11>, <13>, <14>, <7>, <0>, <6>.
Node <11> is connected to nodes <13>, <14>, <12>, <0>, <1>.
Node <13> is connected to nodes <4>, <12>, <10>, <8>, <5>, <2>.
Node <12> is connected to nodes <6>, <9>, <3>, <11>, <13>, <4>.
Node <9> is connected to nodes <3>, <11>, <8>.
Node <7> is connected to nodes <5>, <2>, <11>.
Node <2> is connected to nodes <3>, <11>, <7>, <6>.
Node <0> is connected to nodes <10>, <5>.
Node <10> is connected to nodes <8>, <5>, <0>, <6>.
Node <1> is connected to nodes <3>, <4>, <2>.
Node <8> is connected to nodes <11>, <12>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,60,True,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <3>, <11>, <8>, <13>, <4>, <2>, <14>, <12>, <0>, <1>, <10>, <5>, <6>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<3>, <11>, <8>].
Visit node <3>. Unvisited neighbors of node <3> are [<13>, <4>, <2>].
Visit node <11>. Unvisited neighbors of node <11> are [<14>, <12>, <0>, <1>].
Visit node <8>. 
Visit node <13>. Unvisited neighbors of node <13> are [<10>, <5>].
Visit node <4>. Unvisited neighbors of node <4> are [<6>].
Visit node <2>. Unvisited neighbors of node <2> are [<7>].
Visit node <14>. 
Visit node <12>. 
Visit node <0>. 
Visit node <1>. 
Visit node <10>. 
Visit node <5>. 
Visit node <6>. 
Visit node <7>. 
So the BFS traversal is ","('[[<9>, <3>, <11>, <8>, <13>, <4>, <2>, <14>, <12>, <0>, <1>, <10>, <5>, <6>, <7>], [<9>, <3>, <11>, <8>, <13>, <1>, <10>, <5>, <6>, <7>, <4>, <2>, <14>, <12>, <0>], [<9>, <13>, <4>, <8>, <5>, <6>, <12>, <2>, <7>, <3>, <0>, <10>, <11>, <1>, <14>], [<9>, <3>, <11>, <8>, <13>, <4>, <2>, <7>, <14>, <0>, <5>, <6>, <12>, <1>, <10>]]',)",0,98
BFS,"[(<8>, <2>), (<8>, <4>), (<2>, <0>), (<2>, <11>), (<2>, <9>), (<4>, <0>), (<4>, <11>), (<4>, <7>), (<4>, <1>), (<4>, <2>), (<4>, <10>), (<4>, <5>), (<6>, <12>), (<6>, <5>), (<6>, <9>), (<12>, <3>), (<12>, <0>), (<12>, <11>), (<12>, <9>), (<12>, <6>), (<5>, <1>), (<5>, <2>), (<9>, <6>), (<9>, <12>), (<9>, <10>), (<9>, <3>), (<3>, <0>), (<3>, <8>), (<0>, <11>), (<0>, <8>), (<0>, <12>), (<0>, <1>), (<0>, <3>), (<11>, <7>), (<11>, <9>), (<11>, <12>), (<11>, <4>), (<11>, <3>), (<11>, <0>), (<1>, <9>), (<1>, <8>), (<10>, <5>), (<10>, <11>), (<10>, <9>), (<10>, <8>), (<10>, <6>), (<10>, <1>), (<10>, <2>), (<7>, <12>), (<7>, <1>), (<7>, <4>), (<7>, <3>)]","{<8>: [<2>, <4>],
<2>: [<0>, <11>, <9>],
<4>: [<0>, <11>, <7>, <1>, <2>, <10>, <5>],
<6>: [<12>, <5>, <9>],
<12>: [<3>, <0>, <11>, <9>, <6>],
<5>: [<1>, <2>],
<9>: [<6>, <12>, <10>, <3>],
<3>: [<0>, <8>],
<0>: [<11>, <8>, <12>, <1>, <3>],
<11>: [<7>, <9>, <12>, <4>, <3>, <0>],
<1>: [<9>, <8>],
<10>: [<5>, <11>, <9>, <8>, <6>, <1>, <2>],
<7>: [<12>, <1>, <4>, <3>]}","Node <8> is connected to nodes <2>, <4>.
Node <2> is connected to nodes <0>, <11>, <9>.
Node <4> is connected to nodes <0>, <11>, <7>, <1>, <2>, <10>, <5>.
Node <6> is connected to nodes <12>, <5>, <9>.
Node <12> is connected to nodes <3>, <0>, <11>, <9>, <6>.
Node <5> is connected to nodes <1>, <2>.
Node <9> is connected to nodes <6>, <12>, <10>, <3>.
Node <3> is connected to nodes <0>, <8>.
Node <0> is connected to nodes <11>, <8>, <12>, <1>, <3>.
Node <11> is connected to nodes <7>, <9>, <12>, <4>, <3>, <0>.
Node <1> is connected to nodes <9>, <8>.
Node <10> is connected to nodes <5>, <11>, <9>, <8>, <6>, <1>, <2>.
Node <7> is connected to nodes <12>, <1>, <4>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,52,True,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <2>, <4>, <0>, <11>, <9>, <7>, <1>, <10>, <5>, <12>, <3>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<2>, <4>].
Visit node <2>. Unvisited neighbors of node <2> are [<0>, <11>, <9>].
Visit node <4>. Unvisited neighbors of node <4> are [<7>, <1>, <10>, <5>].
Visit node <0>. Unvisited neighbors of node <0> are [<12>, <3>].
Visit node <11>. 
Visit node <9>. Unvisited neighbors of node <9> are [<6>].
Visit node <7>. 
Visit node <1>. 
Visit node <10>. 
Visit node <5>. 
Visit node <12>. 
Visit node <3>. 
Visit node <6>. 
So the BFS traversal is ","('[[<8>, <2>, <4>, <0>, <5>, <12>, <3>, <6>, <11>, <9>, <7>, <1>, <10>], [<8>, <12>, <9>, <6>, <11>, <4>, <0>, <10>, <3>, <1>, <7>, <2>, <5>], [<8>, <2>, <4>, <0>, <11>, <9>, <3>, <1>, <5>, <7>, <10>, <6>, <12>], [<8>, <2>, <4>, <0>, <11>, <9>, <7>, <1>, <10>, <5>, <12>, <3>, <6>]]',)",3,99
BFS,"[(<11>, <7>), (<11>, <0>), (<0>, <1>), (<0>, <3>), (<2>, <9>), (<2>, <1>), (<2>, <6>), (<2>, <4>), (<9>, <8>), (<9>, <12>), (<9>, <5>), (<1>, <10>), (<3>, <13>)]","{<11>: [<7>, <0>],
<7>: [<11>],
<0>: [<11>, <1>, <3>],
<2>: [<9>, <1>, <6>, <4>],
<9>: [<2>, <8>, <12>, <5>],
<1>: [<2>, <10>, <0>],
<6>: [<2>],
<4>: [<2>],
<8>: [<9>],
<12>: [<9>],
<5>: [<9>],
<10>: [<1>],
<3>: [<0>, <13>],
<13>: [<3>]}","Node <11> is connected to nodes <7>, <0>.
Node <7> is connected to node <11>.
Node <0> is connected to nodes <11>, <1>, <3>.
Node <2> is connected to nodes <9>, <1>, <6>, <4>.
Node <9> is connected to nodes <2>, <8>, <12>, <5>.
Node <1> is connected to nodes <2>, <10>, <0>.
Node <6> is connected to node <2>.
Node <4> is connected to node <2>.
Node <8> is connected to node <9>.
Node <12> is connected to node <9>.
Node <5> is connected to node <9>.
Node <10> is connected to node <1>.
Node <3> is connected to nodes <0>, <13>.
Node <13> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,13,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <2>, <8>, <12>, <5>, <1>, <6>, <4>, <10>, <0>, <11>, <3>, <7>, <13>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<2>, <8>, <12>, <5>].
Visit node <2>. Unvisited neighbors of node <2> are [<1>, <6>, <4>].
Visit node <8>. 
Visit node <12>. 
Visit node <5>. 
Visit node <1>. Unvisited neighbors of node <1> are [<10>, <0>].
Visit node <6>. 
Visit node <4>. 
Visit node <10>. 
Visit node <0>. Unvisited neighbors of node <0> are [<11>, <3>].
Visit node <11>. Unvisited neighbors of node <11> are [<7>].
Visit node <3>. Unvisited neighbors of node <3> are [<13>].
Visit node <7>. 
Visit node <13>. 
So the BFS traversal is ","('[[<9>, <2>, <8>, <12>, <5>, <1>, <6>, <4>, <10>, <0>, <11>, <3>, <7>, <13>], [<9>, <2>, <8>, <12>, <11>, <3>, <7>, <13>, <5>, <1>, <6>, <4>, <10>, <0>], [<9>, <0>, <12>, <11>, <1>, <6>, <4>, <7>, <13>, <8>, <10>, <5>, <3>, <2>], [<9>, <2>, <8>, <12>, <5>, <1>, <6>, <0>, <3>, <13>, <10>, <4>, <7>, <11>]]',)",0,100
BFS,"[(<9>, <4>), (<9>, <2>), (<9>, <7>), (<9>, <8>), (<9>, <11>), (<4>, <6>), (<4>, <12>), (<2>, <0>), (<2>, <6>), (<2>, <13>), (<2>, <7>), (<8>, <0>), (<8>, <12>), (<8>, <11>), (<8>, <5>), (<8>, <10>), (<11>, <3>), (<11>, <13>), (<6>, <0>), (<12>, <1>), (<12>, <3>), (<12>, <10>), (<12>, <5>), (<0>, <10>), (<5>, <1>), (<5>, <13>), (<13>, <1>), (<1>, <3>)]","{<9>: [<4>, <2>, <7>, <8>, <11>],
<4>: [<9>, <6>, <12>],
<2>: [<9>, <0>, <6>, <13>, <7>],
<7>: [<9>, <2>],
<8>: [<9>, <0>, <12>, <11>, <5>, <10>],
<11>: [<9>, <8>, <3>, <13>],
<6>: [<4>, <0>, <2>],
<12>: [<4>, <8>, <1>, <3>, <10>, <5>],
<0>: [<8>, <2>, <10>, <6>],
<5>: [<8>, <1>, <12>, <13>],
<10>: [<8>, <0>, <12>],
<13>: [<2>, <1>, <5>, <11>],
<1>: [<3>, <5>, <13>, <12>],
<3>: [<1>, <11>, <12>]}","Node <9> is connected to nodes <4>, <2>, <7>, <8>, <11>.
Node <4> is connected to nodes <9>, <6>, <12>.
Node <2> is connected to nodes <9>, <0>, <6>, <13>, <7>.
Node <7> is connected to nodes <9>, <2>.
Node <8> is connected to nodes <9>, <0>, <12>, <11>, <5>, <10>.
Node <11> is connected to nodes <9>, <8>, <3>, <13>.
Node <6> is connected to nodes <4>, <0>, <2>.
Node <12> is connected to nodes <4>, <8>, <1>, <3>, <10>, <5>.
Node <0> is connected to nodes <8>, <2>, <10>, <6>.
Node <5> is connected to nodes <8>, <1>, <12>, <13>.
Node <10> is connected to nodes <8>, <0>, <12>.
Node <13> is connected to nodes <2>, <1>, <5>, <11>.
Node <1> is connected to nodes <3>, <5>, <13>, <12>.
Node <3> is connected to nodes <1>, <11>, <12>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,28,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <4>, <2>, <7>, <8>, <11>, <6>, <12>, <0>, <13>, <5>, <10>, <3>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<4>, <2>, <7>, <8>, <11>].
Visit node <4>. Unvisited neighbors of node <4> are [<6>, <12>].
Visit node <2>. Unvisited neighbors of node <2> are [<0>, <13>].
Visit node <7>. 
Visit node <8>. Unvisited neighbors of node <8> are [<5>, <10>].
Visit node <11>. Unvisited neighbors of node <11> are [<3>].
Visit node <6>. 
Visit node <12>. Unvisited neighbors of node <12> are [<1>].
Visit node <0>. 
Visit node <13>. 
Visit node <5>. 
Visit node <10>. 
Visit node <3>. 
Visit node <1>. 
So the BFS traversal is ","('[[<9>, <4>, <2>, <7>, <5>, <10>, <3>, <1>, <8>, <11>, <6>, <12>, <0>, <13>], [<9>, <4>, <2>, <7>, <8>, <11>, <6>, <12>, <0>, <13>, <5>, <10>, <3>, <1>], [<9>, <4>, <2>, <7>, <8>, <11>, <6>, <0>, <13>, <5>, <1>, <3>, <10>, <12>], [<9>, <6>, <2>, <7>, <8>, <13>, <3>, <10>, <11>, <5>, <0>, <4>, <1>, <12>]]',)",1,101
BFS,"[(<8>, <5>), (<8>, <6>), (<5>, <1>), (<6>, <7>), (<1>, <3>), (<3>, <0>), (<0>, <4>), (<4>, <7>), (<7>, <2>)]","{<8>: [<5>, <6>],
<5>: [<8>, <1>],
<6>: [<8>, <7>],
<1>: [<5>, <3>],
<3>: [<0>, <1>],
<0>: [<3>, <4>],
<4>: [<0>, <7>],
<7>: [<6>, <2>, <4>],
<2>: [<7>]}","Node <8> is connected to nodes <5>, <6>.
Node <5> is connected to nodes <8>, <1>.
Node <6> is connected to nodes <8>, <7>.
Node <1> is connected to nodes <5>, <3>.
Node <3> is connected to nodes <0>, <1>.
Node <0> is connected to nodes <3>, <4>.
Node <4> is connected to nodes <0>, <7>.
Node <7> is connected to nodes <6>, <2>, <4>.
Node <2> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <0>, <7>, <3>, <6>, <2>, <1>, <8>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<0>, <7>].
Visit node <0>. Unvisited neighbors of node <0> are [<3>].
Visit node <7>. Unvisited neighbors of node <7> are [<6>, <2>].
Visit node <3>. Unvisited neighbors of node <3> are [<1>].
Visit node <6>. Unvisited neighbors of node <6> are [<8>].
Visit node <2>. 
Visit node <1>. Unvisited neighbors of node <1> are [<5>].
Visit node <8>. 
Visit node <5>. 
So the BFS traversal is ","('[[<4>, <0>, <7>, <3>, <5>, <2>, <6>, <8>, <1>], [<4>, <0>, <7>, <3>, <6>, <2>, <1>, <8>, <5>], [<4>, <0>, <1>, <7>, <3>, <2>, <6>, <5>, <8>], [<4>, <0>, <7>, <1>, <8>, <5>, <3>, <6>, <2>]]',)",1,102
BFS,"[(<7>, <2>), (<7>, <5>), (<7>, <8>), (<7>, <3>), (<7>, <1>), (<2>, <8>), (<2>, <4>), (<2>, <9>), (<2>, <3>), (<2>, <0>), (<5>, <4>), (<5>, <6>), (<5>, <9>), (<5>, <1>), (<5>, <0>), (<8>, <4>), (<8>, <6>), (<8>, <9>), (<8>, <1>), (<8>, <0>), (<3>, <6>), (<3>, <9>), (<3>, <1>), (<1>, <4>), (<1>, <6>), (<1>, <9>), (<1>, <0>), (<4>, <6>), (<4>, <0>), (<9>, <6>), (<9>, <0>), (<0>, <6>)]","{<7>: [<2>, <5>, <8>, <3>, <1>],
<2>: [<7>, <8>, <4>, <9>, <3>, <0>],
<5>: [<7>, <4>, <6>, <9>, <1>, <0>],
<8>: [<7>, <2>, <4>, <6>, <9>, <1>, <0>],
<3>: [<7>, <2>, <6>, <9>, <1>],
<1>: [<7>, <5>, <8>, <4>, <6>, <9>, <3>, <0>],
<4>: [<2>, <5>, <8>, <6>, <1>, <0>],
<9>: [<2>, <5>, <8>, <6>, <3>, <1>, <0>],
<0>: [<2>, <5>, <8>, <4>, <6>, <9>, <1>],
<6>: [<5>, <8>, <4>, <9>, <3>, <1>, <0>]}","Node <7> is connected to nodes <2>, <5>, <8>, <3>, <1>.
Node <2> is connected to nodes <7>, <8>, <4>, <9>, <3>, <0>.
Node <5> is connected to nodes <7>, <4>, <6>, <9>, <1>, <0>.
Node <8> is connected to nodes <7>, <2>, <4>, <6>, <9>, <1>, <0>.
Node <3> is connected to nodes <7>, <2>, <6>, <9>, <1>.
Node <1> is connected to nodes <7>, <5>, <8>, <4>, <6>, <9>, <3>, <0>.
Node <4> is connected to nodes <2>, <5>, <8>, <6>, <1>, <0>.
Node <9> is connected to nodes <2>, <5>, <8>, <6>, <3>, <1>, <0>.
Node <0> is connected to nodes <2>, <5>, <8>, <4>, <6>, <9>, <1>.
Node <6> is connected to nodes <5>, <8>, <4>, <9>, <3>, <1>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,32,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <2>, <5>, <8>, <6>, <1>, <0>, <7>, <9>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<2>, <5>, <8>, <6>, <1>, <0>].
Visit node <2>. Unvisited neighbors of node <2> are [<7>, <9>, <3>].
Visit node <5>. 
Visit node <8>. 
Visit node <6>. 
Visit node <1>. 
Visit node <0>. 
Visit node <7>. 
Visit node <9>. 
Visit node <3>. 
So the BFS traversal is ","('[[<4>, <2>, <5>, <7>, <9>, <3>, <8>, <6>, <1>, <0>], [<4>, <2>, <5>, <8>, <6>, <1>, <0>, <7>, <9>, <3>], [<4>, <2>, <5>, <8>, <6>, <3>, <1>, <9>, <7>, <0>], [<4>, <2>, <6>, <3>, <9>, <1>, <0>, <5>, <8>, <7>]]',)",1,103
BFS,"[(<8>, <2>), (<8>, <6>), (<8>, <3>), (<8>, <12>), (<8>, <0>), (<8>, <10>), (<2>, <6>), (<2>, <3>), (<2>, <4>), (<2>, <12>), (<2>, <0>), (<2>, <10>), (<2>, <9>), (<2>, <1>), (<2>, <5>), (<6>, <11>), (<6>, <0>), (<6>, <10>), (<6>, <9>), (<6>, <1>), (<3>, <11>), (<3>, <12>), (<3>, <10>), (<3>, <9>), (<3>, <7>), (<3>, <5>), (<12>, <4>), (<12>, <0>), (<12>, <9>), (<12>, <7>), (<12>, <1>), (<12>, <5>), (<0>, <11>), (<0>, <10>), (<0>, <9>), (<0>, <5>), (<10>, <11>), (<10>, <9>), (<10>, <7>), (<10>, <1>), (<10>, <5>), (<11>, <4>), (<11>, <9>), (<11>, <1>), (<4>, <9>), (<4>, <1>), (<4>, <5>), (<9>, <7>), (<9>, <1>), (<9>, <5>), (<1>, <7>), (<5>, <7>)]","{<8>: [<2>, <6>, <3>, <12>, <0>, <10>],
<2>: [<8>, <6>, <3>, <4>, <12>, <0>, <10>, <9>, <1>, <5>],
<6>: [<8>, <11>, <2>, <0>, <10>, <9>, <1>],
<3>: [<8>, <11>, <2>, <12>, <10>, <9>, <7>, <5>],
<12>: [<8>, <2>, <3>, <4>, <0>, <9>, <7>, <1>, <5>],
<0>: [<8>, <11>, <2>, <6>, <12>, <10>, <9>, <5>],
<10>: [<8>, <11>, <2>, <6>, <3>, <0>, <9>, <7>, <1>, <5>],
<11>: [<6>, <3>, <4>, <0>, <10>, <9>, <1>],
<4>: [<11>, <2>, <12>, <9>, <1>, <5>],
<9>: [<11>, <2>, <6>, <3>, <4>, <12>, <0>, <10>, <7>, <1>, <5>],
<1>: [<11>, <2>, <6>, <4>, <12>, <10>, <9>, <7>],
<5>: [<2>, <3>, <4>, <12>, <0>, <10>, <9>, <7>],
<7>: [<3>, <12>, <10>, <9>, <1>, <5>]}","Node <8> is connected to nodes <2>, <6>, <3>, <12>, <0>, <10>.
Node <2> is connected to nodes <8>, <6>, <3>, <4>, <12>, <0>, <10>, <9>, <1>, <5>.
Node <6> is connected to nodes <8>, <11>, <2>, <0>, <10>, <9>, <1>.
Node <3> is connected to nodes <8>, <11>, <2>, <12>, <10>, <9>, <7>, <5>.
Node <12> is connected to nodes <8>, <2>, <3>, <4>, <0>, <9>, <7>, <1>, <5>.
Node <0> is connected to nodes <8>, <11>, <2>, <6>, <12>, <10>, <9>, <5>.
Node <10> is connected to nodes <8>, <11>, <2>, <6>, <3>, <0>, <9>, <7>, <1>, <5>.
Node <11> is connected to nodes <6>, <3>, <4>, <0>, <10>, <9>, <1>.
Node <4> is connected to nodes <11>, <2>, <12>, <9>, <1>, <5>.
Node <9> is connected to nodes <11>, <2>, <6>, <3>, <4>, <12>, <0>, <10>, <7>, <1>, <5>.
Node <1> is connected to nodes <11>, <2>, <6>, <4>, <12>, <10>, <9>, <7>.
Node <5> is connected to nodes <2>, <3>, <4>, <12>, <0>, <10>, <9>, <7>.
Node <7> is connected to nodes <3>, <12>, <10>, <9>, <1>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,52,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <8>, <6>, <3>, <4>, <12>, <0>, <10>, <9>, <1>, <5>, <11>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<8>, <6>, <3>, <4>, <12>, <0>, <10>, <9>, <1>, <5>].
Visit node <8>. 
Visit node <6>. Unvisited neighbors of node <6> are [<11>].
Visit node <3>. Unvisited neighbors of node <3> are [<7>].
Visit node <4>. 
Visit node <12>. 
Visit node <0>. 
Visit node <10>. 
Visit node <9>. 
Visit node <1>. 
Visit node <5>. 
Visit node <11>. 
Visit node <7>. 
So the BFS traversal is ","('[[<2>, <8>, <6>, <3>, <4>, <12>, <10>, <9>, <0>, <7>, <5>, <11>, <1>], [<2>, <8>, <6>, <3>, <4>, <12>, <0>, <10>, <9>, <1>, <5>, <11>, <7>], [<2>, <7>, <3>, <9>, <10>, <8>, <12>, <1>, <5>, <11>, <4>, <0>, <6>], [<2>, <8>, <6>, <3>, <1>, <5>, <11>, <7>, <4>, <12>, <0>, <10>, <9>]]',)",1,104
BFS,"[(<0>, <5>), (<0>, <4>), (<0>, <9>), (<4>, <3>), (<9>, <8>), (<9>, <7>), (<9>, <2>), (<9>, <11>), (<9>, <10>), (<7>, <6>), (<2>, <1>)]","{<0>: [<5>, <4>, <9>],
<5>: [<0>],
<4>: [<0>, <3>],
<9>: [<0>, <8>, <7>, <2>, <11>, <10>],
<8>: [<9>],
<7>: [<9>, <6>],
<2>: [<9>, <1>],
<11>: [<9>],
<10>: [<9>],
<3>: [<4>],
<1>: [<2>],
<6>: [<7>]}","Node <0> is connected to nodes <5>, <4>, <9>.
Node <5> is connected to node <0>.
Node <4> is connected to nodes <0>, <3>.
Node <9> is connected to nodes <0>, <8>, <7>, <2>, <11>, <10>.
Node <8> is connected to node <9>.
Node <7> is connected to nodes <9>, <6>.
Node <2> is connected to nodes <9>, <1>.
Node <11> is connected to node <9>.
Node <10> is connected to node <9>.
Node <3> is connected to node <4>.
Node <1> is connected to node <2>.
Node <6> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,11,False,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <9>, <0>, <7>, <2>, <11>, <10>, <5>, <4>, <6>, <1>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<9>].
Visit node <9>. Unvisited neighbors of node <9> are [<0>, <7>, <2>, <11>, <10>].
Visit node <0>. Unvisited neighbors of node <0> are [<5>, <4>].
Visit node <7>. Unvisited neighbors of node <7> are [<6>].
Visit node <2>. Unvisited neighbors of node <2> are [<1>].
Visit node <11>. 
Visit node <10>. 
Visit node <5>. 
Visit node <4>. Unvisited neighbors of node <4> are [<3>].
Visit node <6>. 
Visit node <1>. 
Visit node <3>. 
So the BFS traversal is ","('[[<8>, <5>, <6>, <9>, <7>, <0>, <11>, <4>, <3>, <1>, <2>, <10>], [<8>, <9>, <0>, <7>, <2>, <11>, <10>, <5>, <4>, <6>, <1>, <3>], [<8>, <9>, <0>, <7>, <2>, <11>, <5>, <4>, <1>, <6>, <3>, <10>], [<8>, <9>, <0>, <7>, <4>, <6>, <1>, <3>, <2>, <11>, <10>, <5>]]',)",1,105
BFS,"[(<4>, <14>), (<4>, <6>), (<4>, <9>), (<4>, <8>), (<14>, <13>), (<14>, <12>), (<14>, <11>), (<6>, <7>), (<6>, <10>), (<6>, <0>), (<6>, <12>), (<6>, <11>), (<6>, <9>), (<9>, <3>), (<9>, <2>), (<9>, <12>), (<9>, <11>), (<9>, <5>), (<8>, <7>), (<8>, <0>), (<8>, <13>), (<8>, <2>), (<13>, <11>), (<12>, <2>), (<12>, <5>), (<11>, <1>), (<7>, <3>), (<7>, <5>), (<7>, <1>), (<10>, <3>), (<10>, <5>), (<10>, <1>), (<0>, <3>), (<5>, <1>)]","{<4>: [<14>, <6>, <9>, <8>],
<14>: [<4>, <13>, <12>, <11>],
<6>: [<4>, <7>, <10>, <0>, <12>, <11>, <9>],
<9>: [<4>, <6>, <3>, <2>, <12>, <11>, <5>],
<8>: [<4>, <7>, <0>, <13>, <2>],
<13>: [<14>, <11>, <8>],
<12>: [<14>, <6>, <2>, <9>, <5>],
<11>: [<14>, <6>, <13>, <9>, <1>],
<7>: [<6>, <3>, <8>, <5>, <1>],
<10>: [<6>, <3>, <5>, <1>],
<0>: [<6>, <3>, <8>],
<3>: [<7>, <10>, <0>, <9>],
<5>: [<7>, <10>, <12>, <9>, <1>],
<1>: [<7>, <10>, <11>, <5>],
<2>: [<12>, <9>, <8>]}","Node <4> is connected to nodes <14>, <6>, <9>, <8>.
Node <14> is connected to nodes <4>, <13>, <12>, <11>.
Node <6> is connected to nodes <4>, <7>, <10>, <0>, <12>, <11>, <9>.
Node <9> is connected to nodes <4>, <6>, <3>, <2>, <12>, <11>, <5>.
Node <8> is connected to nodes <4>, <7>, <0>, <13>, <2>.
Node <13> is connected to nodes <14>, <11>, <8>.
Node <12> is connected to nodes <14>, <6>, <2>, <9>, <5>.
Node <11> is connected to nodes <14>, <6>, <13>, <9>, <1>.
Node <7> is connected to nodes <6>, <3>, <8>, <5>, <1>.
Node <10> is connected to nodes <6>, <3>, <5>, <1>.
Node <0> is connected to nodes <6>, <3>, <8>.
Node <3> is connected to nodes <7>, <10>, <0>, <9>.
Node <5> is connected to nodes <7>, <10>, <12>, <9>, <1>.
Node <1> is connected to nodes <7>, <10>, <11>, <5>.
Node <2> is connected to nodes <12>, <9>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,34,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <6>, <3>, <8>, <4>, <7>, <10>, <12>, <11>, <9>, <13>, <2>, <14>, <5>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<6>, <3>, <8>].
Visit node <6>. Unvisited neighbors of node <6> are [<4>, <7>, <10>, <12>, <11>, <9>].
Visit node <3>. 
Visit node <8>. Unvisited neighbors of node <8> are [<13>, <2>].
Visit node <4>. Unvisited neighbors of node <4> are [<14>].
Visit node <7>. Unvisited neighbors of node <7> are [<5>, <1>].
Visit node <10>. 
Visit node <12>. 
Visit node <11>. 
Visit node <9>. 
Visit node <13>. 
Visit node <2>. 
Visit node <14>. 
Visit node <5>. 
Visit node <1>. 
So the BFS traversal is ","('[[<0>, <6>, <3>, <8>, <4>, <7>, <10>, <12>, <11>, <9>, <13>, <2>, <14>, <5>, <1>], [<0>, <6>, <3>, <8>, <4>, <7>, <10>, <13>, <11>, <9>, <12>, <1>, <2>, <14>, <5>], [<0>, <14>, <7>, <2>, <8>, <11>, <6>, <12>, <1>, <5>, <10>, <9>, <4>, <3>, <13>], [<0>, <6>, <3>, <8>, <4>, <13>, <2>, <14>, <5>, <1>, <7>, <10>, <12>, <11>, <9>]]',)",0,106
BFS,"[(<0>, <9>), (<0>, <1>), (<0>, <8>), (<0>, <6>), (<0>, <7>), (<0>, <4>), (<0>, <3>), (<9>, <1>), (<9>, <8>), (<9>, <2>), (<9>, <5>), (<9>, <10>), (<9>, <4>), (<9>, <3>), (<1>, <6>), (<8>, <5>), (<8>, <10>), (<8>, <7>), (<8>, <4>), (<8>, <3>), (<6>, <2>), (<6>, <5>), (<6>, <10>), (<6>, <7>), (<6>, <4>), (<7>, <10>), (<4>, <2>), (<4>, <3>), (<3>, <2>), (<3>, <5>), (<2>, <10>), (<5>, <10>)]","{<0>: [<9>, <1>, <8>, <6>, <7>, <4>, <3>],
<9>: [<0>, <1>, <8>, <2>, <5>, <10>, <4>, <3>],
<1>: [<0>, <9>, <6>],
<8>: [<0>, <9>, <5>, <10>, <7>, <4>, <3>],
<6>: [<0>, <1>, <2>, <5>, <10>, <7>, <4>],
<7>: [<0>, <8>, <6>, <10>],
<4>: [<0>, <9>, <8>, <2>, <6>, <3>],
<3>: [<0>, <9>, <8>, <2>, <5>, <4>],
<2>: [<9>, <6>, <10>, <4>, <3>],
<5>: [<9>, <8>, <6>, <10>, <3>],
<10>: [<9>, <8>, <2>, <6>, <5>, <7>]}","Node <0> is connected to nodes <9>, <1>, <8>, <6>, <7>, <4>, <3>.
Node <9> is connected to nodes <0>, <1>, <8>, <2>, <5>, <10>, <4>, <3>.
Node <1> is connected to nodes <0>, <9>, <6>.
Node <8> is connected to nodes <0>, <9>, <5>, <10>, <7>, <4>, <3>.
Node <6> is connected to nodes <0>, <1>, <2>, <5>, <10>, <7>, <4>.
Node <7> is connected to nodes <0>, <8>, <6>, <10>.
Node <4> is connected to nodes <0>, <9>, <8>, <2>, <6>, <3>.
Node <3> is connected to nodes <0>, <9>, <8>, <2>, <5>, <4>.
Node <2> is connected to nodes <9>, <6>, <10>, <4>, <3>.
Node <5> is connected to nodes <9>, <8>, <6>, <10>, <3>.
Node <10> is connected to nodes <9>, <8>, <2>, <6>, <5>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,32,False,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <0>, <9>, <6>, <8>, <7>, <4>, <3>, <2>, <5>, <10>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<0>, <9>, <6>].
Visit node <0>. Unvisited neighbors of node <0> are [<8>, <7>, <4>, <3>].
Visit node <9>. Unvisited neighbors of node <9> are [<2>, <5>, <10>].
Visit node <6>. 
Visit node <8>. 
Visit node <7>. 
Visit node <4>. 
Visit node <3>. 
Visit node <2>. 
Visit node <5>. 
Visit node <10>. 
So the BFS traversal is ","('[[<1>, <0>, <9>, <2>, <5>, <10>, <6>, <8>, <7>, <4>, <3>], [<1>, <0>, <9>, <6>, <8>, <7>, <2>, <10>, <5>, <3>, <4>], [<1>, <0>, <9>, <6>, <8>, <7>, <4>, <3>, <2>, <5>, <10>], [<1>, <10>, <4>, <3>, <7>, <2>, <5>, <8>, <6>, <0>, <9>]]',)",2,107
BFS,"[(<1>, <3>), (<1>, <7>), (<3>, <6>), (<7>, <0>), (<6>, <5>), (<6>, <2>), (<5>, <8>), (<2>, <9>), (<9>, <0>), (<0>, <4>)]","{<1>: [<3>, <7>],
<3>: [<1>, <6>],
<7>: [<1>, <0>],
<6>: [<3>, <5>, <2>],
<5>: [<6>, <8>],
<2>: [<6>, <9>],
<8>: [<5>],
<9>: [<2>, <0>],
<0>: [<9>, <7>, <4>],
<4>: [<0>]}","Node <1> is connected to nodes <3>, <7>.
Node <3> is connected to nodes <1>, <6>.
Node <7> is connected to nodes <1>, <0>.
Node <6> is connected to nodes <3>, <5>, <2>.
Node <5> is connected to nodes <6>, <8>.
Node <2> is connected to nodes <6>, <9>.
Node <8> is connected to node <5>.
Node <9> is connected to nodes <2>, <0>.
Node <0> is connected to nodes <9>, <7>, <4>.
Node <4> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,10,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <9>, <7>, <4>, <2>, <1>, <6>, <3>, <5>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<9>, <7>, <4>].
Visit node <9>. Unvisited neighbors of node <9> are [<2>].
Visit node <7>. Unvisited neighbors of node <7> are [<1>].
Visit node <4>. 
Visit node <2>. Unvisited neighbors of node <2> are [<6>].
Visit node <1>. Unvisited neighbors of node <1> are [<3>].
Visit node <6>. Unvisited neighbors of node <6> are [<5>].
Visit node <3>. 
Visit node <5>. Unvisited neighbors of node <5> are [<8>].
Visit node <8>. 
So the BFS traversal is ","('[[<0>, <9>, <7>, <4>, <2>, <6>, <8>, <5>, <3>, <1>], [<0>, <2>, <9>, <5>, <4>, <1>, <3>, <8>, <6>, <7>], [<0>, <9>, <7>, <3>, <5>, <8>, <4>, <2>, <1>, <6>], [<0>, <9>, <7>, <4>, <2>, <1>, <6>, <3>, <5>, <8>]]',)",3,108
BFS,"[(<0>, <2>), (<2>, <9>), (<2>, <5>), (<5>, <3>), (<8>, <6>), (<8>, <4>), (<8>, <7>), (<4>, <3>), (<7>, <3>), (<7>, <1>)]","{<0>: [<2>],
<2>: [<0>, <9>, <5>],
<9>: [<2>],
<5>: [<2>, <3>],
<8>: [<6>, <4>, <7>],
<6>: [<8>],
<4>: [<8>, <3>],
<7>: [<8>, <3>, <1>],
<3>: [<4>, <5>, <7>],
<1>: [<7>]}","Node <0> is connected to node <2>.
Node <2> is connected to nodes <0>, <9>, <5>.
Node <9> is connected to node <2>.
Node <5> is connected to nodes <2>, <3>.
Node <8> is connected to nodes <6>, <4>, <7>.
Node <6> is connected to node <8>.
Node <4> is connected to nodes <8>, <3>.
Node <7> is connected to nodes <8>, <3>, <1>.
Node <3> is connected to nodes <4>, <5>, <7>.
Node <1> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,10,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <4>, <5>, <7>, <8>, <2>, <1>, <6>, <0>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<4>, <5>, <7>].
Visit node <4>. Unvisited neighbors of node <4> are [<8>].
Visit node <5>. Unvisited neighbors of node <5> are [<2>].
Visit node <7>. Unvisited neighbors of node <7> are [<1>].
Visit node <8>. Unvisited neighbors of node <8> are [<6>].
Visit node <2>. Unvisited neighbors of node <2> are [<0>, <9>].
Visit node <1>. 
Visit node <6>. 
Visit node <0>. 
Visit node <9>. 
So the BFS traversal is ","('[[<3>, <2>, <8>, <6>, <0>, <7>, <9>, <1>, <4>, <5>], [<3>, <4>, <5>, <7>, <8>, <0>, <1>, <2>, <9>, <6>], [<3>, <4>, <5>, <7>, <8>, <2>, <1>, <6>, <0>, <9>], [<3>, <4>, <5>, <6>, <0>, <9>, <7>, <8>, <2>, <1>]]',)",2,109
BFS,"[(<7>, <4>), (<7>, <8>), (<7>, <1>), (<7>, <3>), (<7>, <6>), (<4>, <3>), (<4>, <5>), (<4>, <10>), (<8>, <0>), (<8>, <12>), (<8>, <2>), (<8>, <10>), (<8>, <4>), (<8>, <9>), (<8>, <11>), (<1>, <3>), (<1>, <6>), (<1>, <12>), (<1>, <2>), (<3>, <12>), (<3>, <7>), (<3>, <10>), (<3>, <11>), (<6>, <5>), (<6>, <12>), (<6>, <7>), (<6>, <10>), (<6>, <9>), (<6>, <11>), (<6>, <1>), (<2>, <10>), (<2>, <11>), (<2>, <1>), (<2>, <6>), (<2>, <12>), (<2>, <7>), (<10>, <11>), (<10>, <8>), (<10>, <7>), (<11>, <1>), (<11>, <3>), (<11>, <5>), (<11>, <10>), (<11>, <9>), (<12>, <10>), (<12>, <11>), (<12>, <5>), (<5>, <12>), (<5>, <2>), (<5>, <4>), (<5>, <1>), (<5>, <3>), (<5>, <6>), (<9>, <11>), (<9>, <1>), (<9>, <6>), (<9>, <7>), (<9>, <2>), (<0>, <3>), (<0>, <6>), (<0>, <5>)]","{<7>: [<4>, <8>, <1>, <3>, <6>],
<4>: [<3>, <5>, <10>],
<8>: [<0>, <12>, <2>, <10>, <4>, <9>, <11>],
<1>: [<3>, <6>, <12>, <2>],
<3>: [<12>, <7>, <10>, <11>],
<6>: [<5>, <12>, <7>, <10>, <9>, <11>, <1>],
<2>: [<10>, <11>, <1>, <6>, <12>, <7>],
<10>: [<11>, <8>, <7>],
<11>: [<1>, <3>, <5>, <10>, <9>],
<12>: [<10>, <11>, <5>],
<5>: [<12>, <2>, <4>, <1>, <3>, <6>],
<9>: [<11>, <1>, <6>, <7>, <2>],
<0>: [<3>, <6>, <5>]}","Node <7> is connected to nodes <4>, <8>, <1>, <3>, <6>.
Node <4> is connected to nodes <3>, <5>, <10>.
Node <8> is connected to nodes <0>, <12>, <2>, <10>, <4>, <9>, <11>.
Node <1> is connected to nodes <3>, <6>, <12>, <2>.
Node <3> is connected to nodes <12>, <7>, <10>, <11>.
Node <6> is connected to nodes <5>, <12>, <7>, <10>, <9>, <11>, <1>.
Node <2> is connected to nodes <10>, <11>, <1>, <6>, <12>, <7>.
Node <10> is connected to nodes <11>, <8>, <7>.
Node <11> is connected to nodes <1>, <3>, <5>, <10>, <9>.
Node <12> is connected to nodes <10>, <11>, <5>.
Node <5> is connected to nodes <12>, <2>, <4>, <1>, <3>, <6>.
Node <9> is connected to nodes <11>, <1>, <6>, <7>, <2>.
Node <0> is connected to nodes <3>, <6>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,61,True,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <3>, <6>, <12>, <2>, <7>, <10>, <11>, <5>, <9>, <4>, <8>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<3>, <6>, <12>, <2>].
Visit node <3>. Unvisited neighbors of node <3> are [<7>, <10>, <11>].
Visit node <6>. Unvisited neighbors of node <6> are [<5>, <9>].
Visit node <12>. 
Visit node <2>. 
Visit node <7>. Unvisited neighbors of node <7> are [<4>, <8>].
Visit node <10>. 
Visit node <11>. 
Visit node <5>. 
Visit node <9>. 
Visit node <4>. 
Visit node <8>. Unvisited neighbors of node <8> are [<0>].
Visit node <0>. 
So the BFS traversal is ","('[[<1>, <9>, <5>, <11>, <3>, <6>, <7>, <8>, <10>, <12>, <2>, <4>, <0>], [<1>, <3>, <6>, <12>, <9>, <4>, <8>, <0>, <2>, <7>, <10>, <11>, <5>], [<1>, <3>, <6>, <12>, <2>, <7>, <5>, <4>, <11>, <9>, <0>, <10>, <8>], [<1>, <3>, <6>, <12>, <2>, <7>, <10>, <11>, <5>, <9>, <4>, <8>, <0>]]',)",3,110
BFS,"[(<4>, <8>), (<4>, <9>), (<4>, <6>), (<4>, <5>), (<4>, <0>), (<4>, <7>), (<4>, <3>), (<8>, <9>), (<8>, <5>), (<8>, <0>), (<8>, <2>), (<9>, <2>), (<9>, <6>), (<6>, <7>), (<6>, <5>), (<6>, <1>), (<5>, <0>), (<5>, <1>), (<5>, <2>), (<0>, <7>), (<0>, <1>)]","{<4>: [<8>, <9>, <6>, <5>, <0>, <7>, <3>],
<8>: [<4>, <9>, <5>, <0>, <2>],
<9>: [<4>, <8>, <2>, <6>],
<6>: [<4>, <9>, <7>, <5>, <1>],
<5>: [<4>, <8>, <0>, <1>, <2>, <6>],
<0>: [<4>, <8>, <7>, <5>, <1>],
<7>: [<4>, <0>, <6>],
<3>: [<4>],
<2>: [<8>, <9>, <5>],
<1>: [<0>, <5>, <6>]}","Node <4> is connected to nodes <8>, <9>, <6>, <5>, <0>, <7>, <3>.
Node <8> is connected to nodes <4>, <9>, <5>, <0>, <2>.
Node <9> is connected to nodes <4>, <8>, <2>, <6>.
Node <6> is connected to nodes <4>, <9>, <7>, <5>, <1>.
Node <5> is connected to nodes <4>, <8>, <0>, <1>, <2>, <6>.
Node <0> is connected to nodes <4>, <8>, <7>, <5>, <1>.
Node <7> is connected to nodes <4>, <0>, <6>.
Node <3> is connected to node <4>.
Node <2> is connected to nodes <8>, <9>, <5>.
Node <1> is connected to nodes <0>, <5>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,21,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <4>, <8>, <9>, <6>, <5>, <0>, <7>, <2>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<4>].
Visit node <4>. Unvisited neighbors of node <4> are [<8>, <9>, <6>, <5>, <0>, <7>].
Visit node <8>. Unvisited neighbors of node <8> are [<2>].
Visit node <9>. 
Visit node <6>. Unvisited neighbors of node <6> are [<1>].
Visit node <5>. 
Visit node <0>. 
Visit node <7>. 
Visit node <2>. 
Visit node <1>. 
So the BFS traversal is ","('[[<3>, <4>, <8>, <7>, <2>, <1>, <9>, <6>, <5>, <0>], [<3>, <4>, <8>, <9>, <6>, <1>, <0>, <7>, <2>, <5>], [<3>, <8>, <0>, <5>, <2>, <7>, <4>, <6>, <9>, <1>], [<3>, <4>, <8>, <9>, <6>, <5>, <0>, <7>, <2>, <1>]]',)",3,111
BFS,"[(<5>, <0>), (<5>, <12>), (<0>, <8>), (<12>, <3>), (<12>, <10>), (<12>, <7>), (<8>, <4>), (<10>, <1>), (<10>, <2>), (<10>, <13>), (<10>, <11>), (<10>, <9>), (<10>, <6>)]","{<5>: [<0>, <12>],
<0>: [<5>, <8>],
<12>: [<5>, <3>, <10>, <7>],
<8>: [<0>, <4>],
<3>: [<12>],
<10>: [<12>, <1>, <2>, <13>, <11>, <9>, <6>],
<7>: [<12>],
<1>: [<10>],
<2>: [<10>],
<13>: [<10>],
<11>: [<10>],
<9>: [<10>],
<6>: [<10>],
<4>: [<8>]}","Node <5> is connected to nodes <0>, <12>.
Node <0> is connected to nodes <5>, <8>.
Node <12> is connected to nodes <5>, <3>, <10>, <7>.
Node <8> is connected to nodes <0>, <4>.
Node <3> is connected to node <12>.
Node <10> is connected to nodes <12>, <1>, <2>, <13>, <11>, <9>, <6>.
Node <7> is connected to node <12>.
Node <1> is connected to node <10>.
Node <2> is connected to node <10>.
Node <13> is connected to node <10>.
Node <11> is connected to node <10>.
Node <9> is connected to node <10>.
Node <6> is connected to node <10>.
Node <4> is connected to node <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,13,False,"Start from node <12>, output a sequence of traversal in breadth-first search (BFS) order.","[<12>, <5>, <3>, <10>, <7>, <0>, <1>, <2>, <13>, <11>, <9>, <6>, <8>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <12>. Unvisited neighbors of node <12> are [<5>, <3>, <10>, <7>].
Visit node <5>. Unvisited neighbors of node <5> are [<0>].
Visit node <3>. 
Visit node <10>. Unvisited neighbors of node <10> are [<1>, <2>, <13>, <11>, <9>, <6>].
Visit node <7>. 
Visit node <0>. Unvisited neighbors of node <0> are [<8>].
Visit node <1>. 
Visit node <2>. 
Visit node <13>. 
Visit node <11>. 
Visit node <9>. 
Visit node <6>. 
Visit node <8>. Unvisited neighbors of node <8> are [<4>].
Visit node <4>. 
So the BFS traversal is ","('[[<12>, <5>, <3>, <10>, <9>, <6>, <8>, <4>, <7>, <0>, <1>, <2>, <13>, <11>], [<12>, <5>, <3>, <10>, <7>, <0>, <1>, <11>, <6>, <13>, <8>, <2>, <9>, <4>], [<12>, <13>, <11>, <6>, <5>, <0>, <8>, <7>, <1>, <4>, <3>, <10>, <9>, <2>], [<12>, <5>, <3>, <10>, <7>, <0>, <1>, <2>, <13>, <11>, <9>, <6>, <8>, <4>]]',)",3,112
BFS,"[(<0>, <7>), (<0>, <6>), (<7>, <4>), (<6>, <1>), (<6>, <2>), (<6>, <5>), (<4>, <3>)]","{<0>: [<7>, <6>],
<7>: [<0>, <4>],
<6>: [<0>, <1>, <2>, <5>],
<4>: [<7>, <3>],
<1>: [<6>],
<2>: [<6>],
<5>: [<6>],
<3>: [<4>]}","Node <0> is connected to nodes <7>, <6>.
Node <7> is connected to nodes <0>, <4>.
Node <6> is connected to nodes <0>, <1>, <2>, <5>.
Node <4> is connected to nodes <7>, <3>.
Node <1> is connected to node <6>.
Node <2> is connected to node <6>.
Node <5> is connected to node <6>.
Node <3> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,7,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <6>, <0>, <1>, <2>, <7>, <4>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<6>].
Visit node <6>. Unvisited neighbors of node <6> are [<0>, <1>, <2>].
Visit node <0>. Unvisited neighbors of node <0> are [<7>].
Visit node <1>. 
Visit node <2>. 
Visit node <7>. Unvisited neighbors of node <7> are [<4>].
Visit node <4>. Unvisited neighbors of node <4> are [<3>].
Visit node <3>. 
So the BFS traversal is ","('[[<5>, <6>, <0>, <1>, <2>, <7>, <4>, <3>], [<5>, <6>, <0>, <1>, <2>, <7>, <4>, <3>], [<5>, <6>, <4>, <3>, <0>, <1>, <2>, <7>], [<5>, <7>, <1>, <6>, <0>, <2>, <4>, <3>]]',)",1,113
BFS,"[(<1>, <6>), (<1>, <5>), (<1>, <0>), (<1>, <9>), (<1>, <2>), (<1>, <7>), (<1>, <12>), (<6>, <10>), (<6>, <5>), (<6>, <0>), (<6>, <2>), (<6>, <13>), (<6>, <7>), (<6>, <12>), (<6>, <8>), (<6>, <3>), (<5>, <10>), (<5>, <9>), (<5>, <2>), (<5>, <13>), (<5>, <8>), (<5>, <3>), (<0>, <10>), (<0>, <9>), (<0>, <13>), (<0>, <7>), (<0>, <12>), (<9>, <4>), (<9>, <13>), (<9>, <12>), (<2>, <4>), (<2>, <13>), (<2>, <11>), (<2>, <3>), (<7>, <4>), (<7>, <13>), (<7>, <11>), (<12>, <11>), (<12>, <8>), (<12>, <3>), (<10>, <11>), (<10>, <3>), (<13>, <11>), (<13>, <3>), (<8>, <4>), (<3>, <11>)]","{<1>: [<6>, <5>, <0>, <9>, <2>, <7>, <12>],
<6>: [<1>, <10>, <5>, <0>, <2>, <13>, <7>, <12>, <8>, <3>],
<5>: [<1>, <6>, <10>, <9>, <2>, <13>, <8>, <3>],
<0>: [<1>, <6>, <10>, <9>, <13>, <7>, <12>],
<9>: [<1>, <5>, <0>, <4>, <13>, <12>],
<2>: [<1>, <6>, <5>, <4>, <13>, <11>, <3>],
<7>: [<1>, <6>, <0>, <4>, <13>, <11>],
<12>: [<1>, <6>, <0>, <9>, <11>, <8>, <3>],
<10>: [<6>, <5>, <0>, <11>, <3>],
<13>: [<6>, <5>, <0>, <9>, <2>, <7>, <11>, <3>],
<8>: [<6>, <5>, <4>, <12>],
<3>: [<6>, <10>, <5>, <2>, <13>, <11>, <12>],
<11>: [<10>, <2>, <13>, <7>, <12>, <3>],
<4>: [<9>, <2>, <7>, <8>]}","Node <1> is connected to nodes <6>, <5>, <0>, <9>, <2>, <7>, <12>.
Node <6> is connected to nodes <1>, <10>, <5>, <0>, <2>, <13>, <7>, <12>, <8>, <3>.
Node <5> is connected to nodes <1>, <6>, <10>, <9>, <2>, <13>, <8>, <3>.
Node <0> is connected to nodes <1>, <6>, <10>, <9>, <13>, <7>, <12>.
Node <9> is connected to nodes <1>, <5>, <0>, <4>, <13>, <12>.
Node <2> is connected to nodes <1>, <6>, <5>, <4>, <13>, <11>, <3>.
Node <7> is connected to nodes <1>, <6>, <0>, <4>, <13>, <11>.
Node <12> is connected to nodes <1>, <6>, <0>, <9>, <11>, <8>, <3>.
Node <10> is connected to nodes <6>, <5>, <0>, <11>, <3>.
Node <13> is connected to nodes <6>, <5>, <0>, <9>, <2>, <7>, <11>, <3>.
Node <8> is connected to nodes <6>, <5>, <4>, <12>.
Node <3> is connected to nodes <6>, <10>, <5>, <2>, <13>, <11>, <12>.
Node <11> is connected to nodes <10>, <2>, <13>, <7>, <12>, <3>.
Node <4> is connected to nodes <9>, <2>, <7>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,46,False,"Start from node <13>, output a sequence of traversal in breadth-first search (BFS) order.","[<13>, <6>, <5>, <0>, <9>, <2>, <7>, <11>, <3>, <1>, <10>, <12>, <8>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <13>. Unvisited neighbors of node <13> are [<6>, <5>, <0>, <9>, <2>, <7>, <11>, <3>].
Visit node <6>. Unvisited neighbors of node <6> are [<1>, <10>, <12>, <8>].
Visit node <5>. 
Visit node <0>. 
Visit node <9>. Unvisited neighbors of node <9> are [<4>].
Visit node <2>. 
Visit node <7>. 
Visit node <11>. 
Visit node <3>. 
Visit node <1>. 
Visit node <10>. 
Visit node <12>. 
Visit node <8>. 
Visit node <4>. 
So the BFS traversal is ","('[[<13>, <6>, <5>, <0>, <10>, <12>, <8>, <4>, <9>, <2>, <7>, <11>, <3>, <1>], [<13>, <6>, <5>, <0>, <9>, <2>, <7>, <11>, <3>, <1>, <10>, <12>, <8>, <4>], [<13>, <11>, <7>, <3>, <12>, <6>, <4>, <9>, <10>, <8>, <5>, <0>, <1>, <2>], [<13>, <6>, <5>, <0>, <9>, <2>, <7>, <12>, <11>, <8>, <4>, <1>, <10>, <3>]]',)",1,114
BFS,"[(<11>, <4>), (<11>, <7>), (<11>, <9>), (<4>, <6>), (<4>, <10>), (<4>, <3>), (<9>, <8>), (<9>, <0>), (<8>, <2>), (<8>, <5>), (<2>, <1>), (<2>, <12>)]","{<11>: [<4>, <7>, <9>],
<4>: [<11>, <6>, <10>, <3>],
<7>: [<11>],
<9>: [<11>, <8>, <0>],
<6>: [<4>],
<10>: [<4>],
<3>: [<4>],
<8>: [<2>, <9>, <5>],
<2>: [<8>, <1>, <12>],
<5>: [<8>],
<1>: [<2>],
<12>: [<2>],
<0>: [<9>]}","Node <11> is connected to nodes <4>, <7>, <9>.
Node <4> is connected to nodes <11>, <6>, <10>, <3>.
Node <7> is connected to node <11>.
Node <9> is connected to nodes <11>, <8>, <0>.
Node <6> is connected to node <4>.
Node <10> is connected to node <4>.
Node <3> is connected to node <4>.
Node <8> is connected to nodes <2>, <9>, <5>.
Node <2> is connected to nodes <8>, <1>, <12>.
Node <5> is connected to node <8>.
Node <1> is connected to node <2>.
Node <12> is connected to node <2>.
Node <0> is connected to node <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,12,False,"Start from node <12>, output a sequence of traversal in breadth-first search (BFS) order.","[<12>, <2>, <8>, <1>, <9>, <5>, <11>, <0>, <4>, <7>, <6>, <10>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <12>. Unvisited neighbors of node <12> are [<2>].
Visit node <2>. Unvisited neighbors of node <2> are [<8>, <1>].
Visit node <8>. Unvisited neighbors of node <8> are [<9>, <5>].
Visit node <1>. 
Visit node <9>. Unvisited neighbors of node <9> are [<11>, <0>].
Visit node <5>. 
Visit node <11>. Unvisited neighbors of node <11> are [<4>, <7>].
Visit node <0>. 
Visit node <4>. Unvisited neighbors of node <4> are [<6>, <10>, <3>].
Visit node <7>. 
Visit node <6>. 
Visit node <10>. 
Visit node <3>. 
So the BFS traversal is ","('[[<12>, <2>, <8>, <1>, <7>, <6>, <10>, <3>, <9>, <5>, <11>, <0>, <4>], [<12>, <9>, <6>, <0>, <7>, <8>, <4>, <2>, <5>, <3>, <1>, <11>, <10>], [<12>, <2>, <8>, <1>, <9>, <5>, <6>, <10>, <4>, <11>, <3>, <0>, <7>], [<12>, <2>, <8>, <1>, <9>, <5>, <11>, <0>, <4>, <7>, <6>, <10>, <3>]]',)",3,115
BFS,"[(<12>, <11>), (<12>, <1>), (<12>, <2>), (<12>, <10>), (<11>, <10>), (<11>, <5>), (<11>, <6>), (<1>, <2>), (<1>, <4>), (<2>, <3>), (<2>, <6>), (<10>, <9>), (<10>, <8>), (<10>, <6>), (<5>, <3>), (<5>, <7>), (<5>, <4>), (<5>, <0>), (<5>, <6>), (<3>, <7>), (<3>, <4>), (<7>, <9>), (<7>, <0>), (<9>, <8>), (<9>, <0>), (<0>, <8>)]","{<12>: [<11>, <1>, <2>, <10>],
<11>: [<12>, <10>, <5>, <6>],
<1>: [<12>, <2>, <4>],
<2>: [<12>, <3>, <1>, <6>],
<10>: [<12>, <11>, <9>, <8>, <6>],
<5>: [<11>, <3>, <7>, <4>, <0>, <6>],
<6>: [<11>, <2>, <5>, <10>],
<3>: [<2>, <7>, <4>, <5>],
<7>: [<3>, <9>, <0>, <5>],
<4>: [<3>, <5>, <1>],
<9>: [<7>, <8>, <10>, <0>],
<0>: [<7>, <9>, <5>, <8>],
<8>: [<9>, <10>, <0>]}","Node <12> is connected to nodes <11>, <1>, <2>, <10>.
Node <11> is connected to nodes <12>, <10>, <5>, <6>.
Node <1> is connected to nodes <12>, <2>, <4>.
Node <2> is connected to nodes <12>, <3>, <1>, <6>.
Node <10> is connected to nodes <12>, <11>, <9>, <8>, <6>.
Node <5> is connected to nodes <11>, <3>, <7>, <4>, <0>, <6>.
Node <6> is connected to nodes <11>, <2>, <5>, <10>.
Node <3> is connected to nodes <2>, <7>, <4>, <5>.
Node <7> is connected to nodes <3>, <9>, <0>, <5>.
Node <4> is connected to nodes <3>, <5>, <1>.
Node <9> is connected to nodes <7>, <8>, <10>, <0>.
Node <0> is connected to nodes <7>, <9>, <5>, <8>.
Node <8> is connected to nodes <9>, <10>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,26,False,"Start from node <12>, output a sequence of traversal in breadth-first search (BFS) order.","[<12>, <11>, <1>, <2>, <10>, <5>, <6>, <4>, <3>, <9>, <8>, <7>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <12>. Unvisited neighbors of node <12> are [<11>, <1>, <2>, <10>].
Visit node <11>. Unvisited neighbors of node <11> are [<5>, <6>].
Visit node <1>. Unvisited neighbors of node <1> are [<4>].
Visit node <2>. Unvisited neighbors of node <2> are [<3>].
Visit node <10>. Unvisited neighbors of node <10> are [<9>, <8>].
Visit node <5>. Unvisited neighbors of node <5> are [<7>, <0>].
Visit node <6>. 
Visit node <4>. 
Visit node <3>. 
Visit node <9>. 
Visit node <8>. 
Visit node <7>. 
Visit node <0>. 
So the BFS traversal is ","('[[<12>, <11>, <1>, <2>, <9>, <8>, <7>, <0>, <10>, <5>, <6>, <4>, <3>], [<12>, <8>, <5>, <3>, <0>, <1>, <10>, <2>, <9>, <4>, <6>, <11>, <7>], [<12>, <11>, <1>, <2>, <10>, <5>, <6>, <4>, <3>, <9>, <8>, <7>, <0>], [<12>, <11>, <1>, <2>, <10>, <5>, <4>, <6>, <9>, <8>, <0>, <7>, <3>]]',)",2,116
BFS,"[(<2>, <6>), (<2>, <4>), (<2>, <5>), (<2>, <3>), (<2>, <0>), (<2>, <1>), (<2>, <7>), (<6>, <8>), (<6>, <4>), (<6>, <5>), (<6>, <7>), (<4>, <5>), (<4>, <3>), (<4>, <0>), (<4>, <1>), (<4>, <7>), (<5>, <8>), (<5>, <0>), (<5>, <1>), (<3>, <8>), (<3>, <0>), (<3>, <1>), (<3>, <7>), (<0>, <8>), (<0>, <1>), (<1>, <8>), (<7>, <8>)]","{<2>: [<6>, <4>, <5>, <3>, <0>, <1>, <7>],
<6>: [<2>, <8>, <4>, <5>, <7>],
<4>: [<2>, <6>, <5>, <3>, <0>, <1>, <7>],
<5>: [<2>, <8>, <6>, <4>, <0>, <1>],
<3>: [<2>, <8>, <4>, <0>, <1>, <7>],
<0>: [<2>, <8>, <4>, <5>, <3>, <1>],
<1>: [<2>, <8>, <4>, <5>, <3>, <0>],
<7>: [<2>, <8>, <6>, <4>, <3>],
<8>: [<6>, <5>, <3>, <0>, <1>, <7>]}","Node <2> is connected to nodes <6>, <4>, <5>, <3>, <0>, <1>, <7>.
Node <6> is connected to nodes <2>, <8>, <4>, <5>, <7>.
Node <4> is connected to nodes <2>, <6>, <5>, <3>, <0>, <1>, <7>.
Node <5> is connected to nodes <2>, <8>, <6>, <4>, <0>, <1>.
Node <3> is connected to nodes <2>, <8>, <4>, <0>, <1>, <7>.
Node <0> is connected to nodes <2>, <8>, <4>, <5>, <3>, <1>.
Node <1> is connected to nodes <2>, <8>, <4>, <5>, <3>, <0>.
Node <7> is connected to nodes <2>, <8>, <6>, <4>, <3>.
Node <8> is connected to nodes <6>, <5>, <3>, <0>, <1>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,27,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <2>, <6>, <5>, <3>, <0>, <1>, <7>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<2>, <6>, <5>, <3>, <0>, <1>, <7>].
Visit node <2>. 
Visit node <6>. Unvisited neighbors of node <6> are [<8>].
Visit node <5>. 
Visit node <3>. 
Visit node <0>. 
Visit node <1>. 
Visit node <7>. 
Visit node <8>. 
So the BFS traversal is ","('[[<4>, <2>, <6>, <1>, <7>, <8>, <5>, <3>, <0>], [<4>, <2>, <6>, <5>, <3>, <0>, <1>, <7>, <8>], [<4>, <3>, <7>, <5>, <0>, <1>, <2>, <8>, <6>], [<4>, <2>, <6>, <5>, <7>, <1>, <0>, <8>, <3>]]',)",1,117
BFS,"[(<5>, <0>), (<5>, <6>), (<5>, <1>), (<0>, <2>), (<6>, <3>), (<6>, <7>), (<1>, <4>), (<2>, <4>)]","{<5>: [<0>, <6>, <1>],
<0>: [<5>, <2>],
<6>: [<5>, <3>, <7>],
<1>: [<5>, <4>],
<2>: [<0>, <4>],
<4>: [<1>, <2>],
<3>: [<6>],
<7>: [<6>]}","Node <5> is connected to nodes <0>, <6>, <1>.
Node <0> is connected to nodes <5>, <2>.
Node <6> is connected to nodes <5>, <3>, <7>.
Node <1> is connected to nodes <5>, <4>.
Node <2> is connected to nodes <0>, <4>.
Node <4> is connected to nodes <1>, <2>.
Node <3> is connected to node <6>.
Node <7> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,8,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <0>, <4>, <5>, <1>, <6>, <3>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<0>, <4>].
Visit node <0>. Unvisited neighbors of node <0> are [<5>].
Visit node <4>. Unvisited neighbors of node <4> are [<1>].
Visit node <5>. Unvisited neighbors of node <5> are [<6>].
Visit node <1>. 
Visit node <6>. Unvisited neighbors of node <6> are [<3>, <7>].
Visit node <3>. 
Visit node <7>. 
So the BFS traversal is ","('[[<2>, <0>, <4>, <5>, <7>, <1>, <6>, <3>], [<2>, <0>, <4>, <5>, <1>, <6>, <3>, <7>], [<2>, <6>, <0>, <4>, <3>, <5>, <7>, <1>], [<2>, <0>, <3>, <7>, <4>, <5>, <1>, <6>]]',)",1,118
BFS,"[(<1>, <6>), (<1>, <2>), (<1>, <7>), (<6>, <3>), (<6>, <0>), (<6>, <7>), (<2>, <7>), (<2>, <5>), (<2>, <4>), (<7>, <3>), (<7>, <5>), (<3>, <0>)]","{<1>: [<6>, <2>, <7>],
<6>: [<1>, <3>, <0>, <7>],
<2>: [<1>, <7>, <5>, <4>],
<7>: [<1>, <6>, <3>, <2>, <5>],
<3>: [<6>, <0>, <7>],
<0>: [<6>, <3>],
<5>: [<2>, <7>],
<4>: [<2>]}","Node <1> is connected to nodes <6>, <2>, <7>.
Node <6> is connected to nodes <1>, <3>, <0>, <7>.
Node <2> is connected to nodes <1>, <7>, <5>, <4>.
Node <7> is connected to nodes <1>, <6>, <3>, <2>, <5>.
Node <3> is connected to nodes <6>, <0>, <7>.
Node <0> is connected to nodes <6>, <3>.
Node <5> is connected to nodes <2>, <7>.
Node <4> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,12,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <1>, <6>, <3>, <2>, <5>, <0>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<1>, <6>, <3>, <2>, <5>].
Visit node <1>. 
Visit node <6>. Unvisited neighbors of node <6> are [<0>].
Visit node <3>. 
Visit node <2>. Unvisited neighbors of node <2> are [<4>].
Visit node <5>. 
Visit node <0>. 
Visit node <4>. 
So the BFS traversal is ","('[[<7>, <1>, <6>, <3>, <4>, <0>, <5>, <2>], [<7>, <1>, <0>, <4>, <6>, <3>, <2>, <5>], [<7>, <1>, <6>, <3>, <2>, <5>, <0>, <4>], [<7>, <6>, <1>, <4>, <3>, <5>, <2>, <0>]]',)",2,119
BFS,"[(<10>, <11>), (<10>, <13>), (<10>, <6>), (<10>, <9>), (<10>, <1>), (<10>, <4>), (<11>, <6>), (<11>, <0>), (<11>, <9>), (<11>, <4>), (<13>, <6>), (<13>, <7>), (<13>, <9>), (<13>, <3>), (<13>, <12>), (<6>, <5>), (<6>, <0>), (<6>, <9>), (<9>, <5>), (<9>, <7>), (<9>, <0>), (<9>, <1>), (<9>, <2>), (<9>, <12>), (<1>, <5>), (<1>, <7>), (<1>, <0>), (<1>, <3>), (<1>, <12>), (<4>, <0>), (<4>, <3>), (<4>, <2>), (<4>, <12>), (<0>, <5>), (<0>, <2>), (<8>, <3>), (<8>, <12>), (<3>, <5>), (<3>, <12>), (<7>, <2>), (<5>, <2>)]","{<10>: [<11>, <13>, <6>, <9>, <1>, <4>],
<11>: [<10>, <6>, <0>, <9>, <4>],
<13>: [<10>, <6>, <7>, <9>, <3>, <12>],
<6>: [<10>, <11>, <13>, <5>, <0>, <9>],
<9>: [<10>, <11>, <13>, <6>, <5>, <7>, <0>, <1>, <2>, <12>],
<1>: [<10>, <5>, <7>, <0>, <9>, <3>, <12>],
<4>: [<10>, <11>, <0>, <3>, <2>, <12>],
<0>: [<11>, <6>, <5>, <9>, <1>, <2>, <4>],
<8>: [<3>, <12>],
<3>: [<8>, <13>, <5>, <1>, <4>, <12>],
<12>: [<8>, <13>, <9>, <3>, <1>, <4>],
<7>: [<13>, <9>, <1>, <2>],
<5>: [<6>, <0>, <9>, <3>, <1>, <2>],
<2>: [<5>, <7>, <0>, <9>, <4>]}","Node <10> is connected to nodes <11>, <13>, <6>, <9>, <1>, <4>.
Node <11> is connected to nodes <10>, <6>, <0>, <9>, <4>.
Node <13> is connected to nodes <10>, <6>, <7>, <9>, <3>, <12>.
Node <6> is connected to nodes <10>, <11>, <13>, <5>, <0>, <9>.
Node <9> is connected to nodes <10>, <11>, <13>, <6>, <5>, <7>, <0>, <1>, <2>, <12>.
Node <1> is connected to nodes <10>, <5>, <7>, <0>, <9>, <3>, <12>.
Node <4> is connected to nodes <10>, <11>, <0>, <3>, <2>, <12>.
Node <0> is connected to nodes <11>, <6>, <5>, <9>, <1>, <2>, <4>.
Node <8> is connected to nodes <3>, <12>.
Node <3> is connected to nodes <8>, <13>, <5>, <1>, <4>, <12>.
Node <12> is connected to nodes <8>, <13>, <9>, <3>, <1>, <4>.
Node <7> is connected to nodes <13>, <9>, <1>, <2>.
Node <5> is connected to nodes <6>, <0>, <9>, <3>, <1>, <2>.
Node <2> is connected to nodes <5>, <7>, <0>, <9>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,41,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <6>, <0>, <9>, <3>, <1>, <2>, <10>, <11>, <13>, <4>, <7>, <12>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<6>, <0>, <9>, <3>, <1>, <2>].
Visit node <6>. Unvisited neighbors of node <6> are [<10>, <11>, <13>].
Visit node <0>. Unvisited neighbors of node <0> are [<4>].
Visit node <9>. Unvisited neighbors of node <9> are [<7>, <12>].
Visit node <3>. Unvisited neighbors of node <3> are [<8>].
Visit node <1>. 
Visit node <2>. 
Visit node <10>. 
Visit node <11>. 
Visit node <13>. 
Visit node <4>. 
Visit node <7>. 
Visit node <12>. 
Visit node <8>. 
So the BFS traversal is ","('[[<5>, <6>, <0>, <9>, <3>, <1>, <2>, <13>, <12>, <4>, <11>, <10>, <8>, <7>], [<5>, <2>, <6>, <7>, <10>, <9>, <13>, <1>, <3>, <0>, <8>, <11>, <4>, <12>], [<5>, <6>, <0>, <9>, <4>, <7>, <12>, <8>, <3>, <1>, <2>, <10>, <11>, <13>], [<5>, <6>, <0>, <9>, <3>, <1>, <2>, <10>, <11>, <13>, <4>, <7>, <12>, <8>]]',)",3,120
BFS,"[(<0>, <10>), (<0>, <6>), (<0>, <7>), (<0>, <3>), (<10>, <12>), (<10>, <9>), (<10>, <2>), (<10>, <6>), (<6>, <2>), (<6>, <9>), (<6>, <5>), (<7>, <9>), (<7>, <3>), (<3>, <4>), (<3>, <11>), (<12>, <5>), (<12>, <1>), (<12>, <9>), (<12>, <11>), (<9>, <4>), (<2>, <8>), (<2>, <1>), (<5>, <4>), (<8>, <4>), (<8>, <11>), (<1>, <4>)]","{<0>: [<10>, <6>, <7>, <3>],
<10>: [<0>, <12>, <9>, <2>, <6>],
<6>: [<0>, <10>, <2>, <9>, <5>],
<7>: [<0>, <9>, <3>],
<3>: [<0>, <4>, <7>, <11>],
<12>: [<10>, <5>, <1>, <9>, <11>],
<9>: [<10>, <6>, <12>, <4>, <7>],
<2>: [<10>, <6>, <8>, <1>],
<5>: [<6>, <12>, <4>],
<8>: [<2>, <4>, <11>],
<1>: [<2>, <12>, <4>],
<11>: [<12>, <8>, <3>],
<4>: [<8>, <1>, <9>, <5>, <3>]}","Node <0> is connected to nodes <10>, <6>, <7>, <3>.
Node <10> is connected to nodes <0>, <12>, <9>, <2>, <6>.
Node <6> is connected to nodes <0>, <10>, <2>, <9>, <5>.
Node <7> is connected to nodes <0>, <9>, <3>.
Node <3> is connected to nodes <0>, <4>, <7>, <11>.
Node <12> is connected to nodes <10>, <5>, <1>, <9>, <11>.
Node <9> is connected to nodes <10>, <6>, <12>, <4>, <7>.
Node <2> is connected to nodes <10>, <6>, <8>, <1>.
Node <5> is connected to nodes <6>, <12>, <4>.
Node <8> is connected to nodes <2>, <4>, <11>.
Node <1> is connected to nodes <2>, <12>, <4>.
Node <11> is connected to nodes <12>, <8>, <3>.
Node <4> is connected to nodes <8>, <1>, <9>, <5>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,26,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <0>, <9>, <3>, <10>, <6>, <12>, <4>, <11>, <2>, <5>, <1>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<0>, <9>, <3>].
Visit node <0>. Unvisited neighbors of node <0> are [<10>, <6>].
Visit node <9>. Unvisited neighbors of node <9> are [<12>, <4>].
Visit node <3>. Unvisited neighbors of node <3> are [<11>].
Visit node <10>. Unvisited neighbors of node <10> are [<2>].
Visit node <6>. Unvisited neighbors of node <6> are [<5>].
Visit node <12>. Unvisited neighbors of node <12> are [<1>].
Visit node <4>. Unvisited neighbors of node <4> are [<8>].
Visit node <11>. 
Visit node <2>. 
Visit node <5>. 
Visit node <1>. 
Visit node <8>. 
So the BFS traversal is ","('[[<7>, <0>, <9>, <3>, <2>, <5>, <1>, <8>, <10>, <6>, <12>, <4>, <11>], [<7>, <6>, <4>, <5>, <11>, <9>, <12>, <0>, <1>, <10>, <3>, <8>, <2>], [<7>, <0>, <9>, <3>, <10>, <6>, <12>, <4>, <11>, <2>, <5>, <1>, <8>], [<7>, <0>, <9>, <3>, <10>, <6>, <4>, <12>, <8>, <1>, <11>, <5>, <2>]]',)",2,121
BFS,"[(<13>, <11>), (<13>, <10>), (<13>, <3>), (<13>, <6>), (<13>, <9>), (<13>, <12>), (<13>, <7>), (<11>, <12>), (<11>, <9>), (<10>, <5>), (<3>, <6>), (<6>, <5>), (<6>, <0>), (<9>, <7>), (<9>, <5>), (<9>, <4>), (<9>, <2>), (<9>, <1>), (<9>, <0>), (<7>, <8>), (<8>, <0>), (<5>, <4>), (<5>, <1>), (<4>, <2>)]","{<13>: [<11>, <10>, <3>, <6>, <9>, <12>, <7>],
<11>: [<13>, <12>, <9>],
<10>: [<13>, <5>],
<3>: [<13>, <6>],
<6>: [<13>, <3>, <5>, <0>],
<9>: [<13>, <11>, <7>, <5>, <4>, <2>, <1>, <0>],
<12>: [<13>, <11>],
<7>: [<13>, <8>, <9>],
<8>: [<7>, <0>],
<0>: [<8>, <6>, <9>],
<5>: [<6>, <4>, <10>, <1>, <9>],
<4>: [<5>, <2>, <9>],
<1>: [<5>, <9>],
<2>: [<4>, <9>]}","Node <13> is connected to nodes <11>, <10>, <3>, <6>, <9>, <12>, <7>.
Node <11> is connected to nodes <13>, <12>, <9>.
Node <10> is connected to nodes <13>, <5>.
Node <3> is connected to nodes <13>, <6>.
Node <6> is connected to nodes <13>, <3>, <5>, <0>.
Node <9> is connected to nodes <13>, <11>, <7>, <5>, <4>, <2>, <1>, <0>.
Node <12> is connected to nodes <13>, <11>.
Node <7> is connected to nodes <13>, <8>, <9>.
Node <8> is connected to nodes <7>, <0>.
Node <0> is connected to nodes <8>, <6>, <9>.
Node <5> is connected to nodes <6>, <4>, <10>, <1>, <9>.
Node <4> is connected to nodes <5>, <2>, <9>.
Node <1> is connected to nodes <5>, <9>.
Node <2> is connected to nodes <4>, <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,24,False,"Start from node <12>, output a sequence of traversal in breadth-first search (BFS) order.","[<12>, <13>, <11>, <10>, <3>, <6>, <9>, <7>, <5>, <0>, <4>, <2>, <1>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <12>. Unvisited neighbors of node <12> are [<13>, <11>].
Visit node <13>. Unvisited neighbors of node <13> are [<10>, <3>, <6>, <9>, <7>].
Visit node <11>. 
Visit node <10>. Unvisited neighbors of node <10> are [<5>].
Visit node <3>. 
Visit node <6>. Unvisited neighbors of node <6> are [<0>].
Visit node <9>. Unvisited neighbors of node <9> are [<4>, <2>, <1>].
Visit node <7>. Unvisited neighbors of node <7> are [<8>].
Visit node <5>. 
Visit node <0>. 
Visit node <4>. 
Visit node <2>. 
Visit node <1>. 
Visit node <8>. 
So the BFS traversal is ","('[[<12>, <13>, <9>, <5>, <4>, <10>, <2>, <11>, <8>, <0>, <6>, <7>, <3>, <1>], [<12>, <13>, <11>, <10>, <3>, <6>, <9>, <2>, <7>, <8>, <1>, <0>, <4>, <5>], [<12>, <13>, <11>, <10>, <4>, <2>, <1>, <8>, <3>, <6>, <9>, <7>, <5>, <0>], [<12>, <13>, <11>, <10>, <3>, <6>, <9>, <7>, <5>, <0>, <4>, <2>, <1>, <8>]]',)",3,122
BFS,"[(<1>, <5>), (<1>, <2>), (<1>, <8>), (<1>, <3>), (<5>, <2>), (<5>, <12>), (<5>, <3>), (<8>, <7>), (<3>, <12>), (<3>, <4>), (<12>, <7>), (<12>, <9>), (<12>, <0>), (<12>, <4>), (<7>, <0>), (<7>, <6>), (<0>, <6>), (<0>, <11>), (<0>, <4>), (<0>, <10>), (<6>, <9>), (<6>, <11>), (<9>, <10>), (<9>, <4>), (<10>, <4>), (<10>, <11>)]","{<1>: [<5>, <2>, <8>, <3>],
<5>: [<1>, <2>, <12>, <3>],
<2>: [<1>, <5>],
<8>: [<1>, <7>],
<3>: [<1>, <5>, <12>, <4>],
<12>: [<5>, <7>, <9>, <3>, <0>, <4>],
<7>: [<8>, <0>, <12>, <6>],
<0>: [<7>, <6>, <12>, <11>, <4>, <10>],
<6>: [<7>, <9>, <0>, <11>],
<9>: [<6>, <12>, <10>, <4>],
<10>: [<9>, <0>, <4>, <11>],
<4>: [<9>, <3>, <12>, <0>, <10>],
<11>: [<6>, <0>, <10>]}","Node <1> is connected to nodes <5>, <2>, <8>, <3>.
Node <5> is connected to nodes <1>, <2>, <12>, <3>.
Node <2> is connected to nodes <1>, <5>.
Node <8> is connected to nodes <1>, <7>.
Node <3> is connected to nodes <1>, <5>, <12>, <4>.
Node <12> is connected to nodes <5>, <7>, <9>, <3>, <0>, <4>.
Node <7> is connected to nodes <8>, <0>, <12>, <6>.
Node <0> is connected to nodes <7>, <6>, <12>, <11>, <4>, <10>.
Node <6> is connected to nodes <7>, <9>, <0>, <11>.
Node <9> is connected to nodes <6>, <12>, <10>, <4>.
Node <10> is connected to nodes <9>, <0>, <4>, <11>.
Node <4> is connected to nodes <9>, <3>, <12>, <0>, <10>.
Node <11> is connected to nodes <6>, <0>, <10>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,26,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <7>, <6>, <12>, <11>, <4>, <10>, <8>, <9>, <5>, <3>, <1>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<7>, <6>, <12>, <11>, <4>, <10>].
Visit node <7>. Unvisited neighbors of node <7> are [<8>].
Visit node <6>. Unvisited neighbors of node <6> are [<9>].
Visit node <12>. Unvisited neighbors of node <12> are [<5>, <3>].
Visit node <11>. 
Visit node <4>. 
Visit node <10>. 
Visit node <8>. Unvisited neighbors of node <8> are [<1>].
Visit node <9>. 
Visit node <5>. Unvisited neighbors of node <5> are [<2>].
Visit node <3>. 
Visit node <1>. 
Visit node <2>. 
So the BFS traversal is ","('[[<0>, <7>, <6>, <12>, <11>, <4>, <8>, <3>, <9>, <10>, <5>, <1>, <2>], [<0>, <7>, <6>, <12>, <11>, <4>, <10>, <8>, <9>, <5>, <3>, <1>, <2>], [<0>, <6>, <11>, <7>, <10>, <5>, <12>, <1>, <9>, <8>, <2>, <3>, <4>], [<0>, <7>, <6>, <12>, <5>, <3>, <1>, <2>, <11>, <4>, <10>, <8>, <9>]]',)",1,123
BFS,"[(<4>, <5>), (<4>, <1>), (<4>, <6>), (<4>, <7>), (<4>, <0>), (<4>, <3>), (<5>, <1>), (<5>, <2>), (<5>, <7>), (<5>, <0>), (<5>, <3>), (<1>, <6>), (<1>, <7>), (<1>, <0>), (<6>, <2>), (<6>, <7>), (<6>, <0>), (<6>, <3>), (<7>, <2>), (<7>, <0>), (<7>, <3>), (<0>, <3>)]","{<4>: [<5>, <1>, <6>, <7>, <0>, <3>],
<5>: [<4>, <1>, <2>, <7>, <0>, <3>],
<1>: [<4>, <5>, <6>, <7>, <0>],
<6>: [<4>, <1>, <2>, <7>, <0>, <3>],
<7>: [<4>, <5>, <1>, <2>, <6>, <0>, <3>],
<0>: [<4>, <5>, <1>, <6>, <7>, <3>],
<3>: [<4>, <5>, <6>, <7>, <0>],
<2>: [<5>, <6>, <7>]}","Node <4> is connected to nodes <5>, <1>, <6>, <7>, <0>, <3>.
Node <5> is connected to nodes <4>, <1>, <2>, <7>, <0>, <3>.
Node <1> is connected to nodes <4>, <5>, <6>, <7>, <0>.
Node <6> is connected to nodes <4>, <1>, <2>, <7>, <0>, <3>.
Node <7> is connected to nodes <4>, <5>, <1>, <2>, <6>, <0>, <3>.
Node <0> is connected to nodes <4>, <5>, <1>, <6>, <7>, <3>.
Node <3> is connected to nodes <4>, <5>, <6>, <7>, <0>.
Node <2> is connected to nodes <5>, <6>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,22,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <4>, <5>, <6>, <7>, <0>, <1>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<4>, <5>, <6>, <7>, <0>].
Visit node <4>. Unvisited neighbors of node <4> are [<1>].
Visit node <5>. Unvisited neighbors of node <5> are [<2>].
Visit node <6>. 
Visit node <7>. 
Visit node <0>. 
Visit node <1>. 
Visit node <2>. 
So the BFS traversal is ","('[[<3>, <4>, <5>, <6>, <7>, <0>, <1>, <2>], [<3>, <4>, <5>, <6>, <7>, <0>, <1>, <2>], [<3>, <1>, <7>, <0>, <2>, <4>, <6>, <5>], [<3>, <4>, <1>, <2>, <5>, <6>, <7>, <0>]]',)",0,124
BFS,"[(<5>, <2>), (<5>, <8>), (<2>, <0>), (<8>, <3>), (<0>, <6>), (<6>, <7>), (<7>, <1>), (<1>, <4>), (<3>, <4>)]","{<5>: [<2>, <8>],
<2>: [<5>, <0>],
<8>: [<5>, <3>],
<0>: [<2>, <6>],
<6>: [<7>, <0>],
<7>: [<6>, <1>],
<1>: [<7>, <4>],
<3>: [<8>, <4>],
<4>: [<1>, <3>]}","Node <5> is connected to nodes <2>, <8>.
Node <2> is connected to nodes <5>, <0>.
Node <8> is connected to nodes <5>, <3>.
Node <0> is connected to nodes <2>, <6>.
Node <6> is connected to nodes <7>, <0>.
Node <7> is connected to nodes <6>, <1>.
Node <1> is connected to nodes <7>, <4>.
Node <3> is connected to nodes <8>, <4>.
Node <4> is connected to nodes <1>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <2>, <8>, <0>, <3>, <6>, <4>, <7>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<2>, <8>].
Visit node <2>. Unvisited neighbors of node <2> are [<0>].
Visit node <8>. Unvisited neighbors of node <8> are [<3>].
Visit node <0>. Unvisited neighbors of node <0> are [<6>].
Visit node <3>. Unvisited neighbors of node <3> are [<4>].
Visit node <6>. Unvisited neighbors of node <6> are [<7>].
Visit node <4>. Unvisited neighbors of node <4> are [<1>].
Visit node <7>. 
Visit node <1>. 
So the BFS traversal is ","('[[<5>, <2>, <8>, <0>, <4>, <7>, <1>, <6>, <3>], [<5>, <2>, <8>, <0>, <3>, <6>, <4>, <7>, <1>], [<5>, <0>, <4>, <2>, <7>, <8>, <6>, <1>, <3>], [<5>, <2>, <8>, <4>, <7>, <1>, <0>, <3>, <6>]]',)",1,125
BFS,"[(<5>, <3>), (<5>, <2>), (<5>, <1>), (<5>, <4>), (<3>, <0>), (<2>, <7>), (<0>, <6>)]","{<5>: [<3>, <2>, <1>, <4>],
<3>: [<5>, <0>],
<2>: [<5>, <7>],
<1>: [<5>],
<4>: [<5>],
<0>: [<3>, <6>],
<6>: [<0>],
<7>: [<2>]}","Node <5> is connected to nodes <3>, <2>, <1>, <4>.
Node <3> is connected to nodes <5>, <0>.
Node <2> is connected to nodes <5>, <7>.
Node <1> is connected to node <5>.
Node <4> is connected to node <5>.
Node <0> is connected to nodes <3>, <6>.
Node <6> is connected to node <0>.
Node <7> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,7,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <5>, <0>, <2>, <1>, <4>, <6>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<5>, <0>].
Visit node <5>. Unvisited neighbors of node <5> are [<2>, <1>, <4>].
Visit node <0>. Unvisited neighbors of node <0> are [<6>].
Visit node <2>. Unvisited neighbors of node <2> are [<7>].
Visit node <1>. 
Visit node <4>. 
Visit node <6>. 
Visit node <7>. 
So the BFS traversal is ","('[[<3>, <5>, <0>, <2>, <1>, <4>, <6>, <7>], [<3>, <5>, <6>, <7>, <0>, <2>, <1>, <4>], [<3>, <1>, <4>, <0>, <2>, <5>, <6>, <7>], [<3>, <5>, <0>, <2>, <7>, <1>, <4>, <6>]]',)",0,126
BFS,"[(<2>, <8>), (<2>, <4>), (<2>, <7>), (<2>, <0>), (<8>, <6>), (<8>, <11>), (<4>, <3>), (<4>, <11>), (<0>, <5>), (<6>, <10>), (<3>, <1>), (<10>, <9>)]","{<2>: [<8>, <4>, <7>, <0>],
<8>: [<2>, <6>, <11>],
<4>: [<2>, <3>, <11>],
<7>: [<2>],
<0>: [<2>, <5>],
<6>: [<8>, <10>],
<11>: [<8>, <4>],
<3>: [<4>, <1>],
<1>: [<3>],
<10>: [<6>, <9>],
<9>: [<10>],
<5>: [<0>]}","Node <2> is connected to nodes <8>, <4>, <7>, <0>.
Node <8> is connected to nodes <2>, <6>, <11>.
Node <4> is connected to nodes <2>, <3>, <11>.
Node <7> is connected to node <2>.
Node <0> is connected to nodes <2>, <5>.
Node <6> is connected to nodes <8>, <10>.
Node <11> is connected to nodes <8>, <4>.
Node <3> is connected to nodes <4>, <1>.
Node <1> is connected to node <3>.
Node <10> is connected to nodes <6>, <9>.
Node <9> is connected to node <10>.
Node <5> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,12,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <4>, <1>, <2>, <11>, <8>, <7>, <0>, <6>, <5>, <10>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<4>, <1>].
Visit node <4>. Unvisited neighbors of node <4> are [<2>, <11>].
Visit node <1>. 
Visit node <2>. Unvisited neighbors of node <2> are [<8>, <7>, <0>].
Visit node <11>. 
Visit node <8>. Unvisited neighbors of node <8> are [<6>].
Visit node <7>. 
Visit node <0>. Unvisited neighbors of node <0> are [<5>].
Visit node <6>. Unvisited neighbors of node <6> are [<10>].
Visit node <5>. 
Visit node <10>. Unvisited neighbors of node <10> are [<9>].
Visit node <9>. 
So the BFS traversal is ","('[[<3>, <2>, <10>, <7>, <4>, <6>, <5>, <8>, <0>, <1>, <11>, <9>], [<3>, <4>, <1>, <2>, <11>, <8>, <6>, <5>, <10>, <7>, <0>, <9>], [<3>, <4>, <1>, <2>, <11>, <8>, <7>, <0>, <6>, <5>, <10>, <9>], [<3>, <4>, <1>, <2>, <6>, <5>, <10>, <9>, <11>, <8>, <7>, <0>]]',)",2,127
BFS,"[(<1>, <8>), (<1>, <3>), (<8>, <7>), (<3>, <4>), (<7>, <2>), (<2>, <0>), (<0>, <6>), (<0>, <5>), (<5>, <4>)]","{<1>: [<8>, <3>],
<8>: [<1>, <7>],
<3>: [<1>, <4>],
<7>: [<8>, <2>],
<2>: [<7>, <0>],
<0>: [<2>, <6>, <5>],
<6>: [<0>],
<5>: [<0>, <4>],
<4>: [<5>, <3>]}","Node <1> is connected to nodes <8>, <3>.
Node <8> is connected to nodes <1>, <7>.
Node <3> is connected to nodes <1>, <4>.
Node <7> is connected to nodes <8>, <2>.
Node <2> is connected to nodes <7>, <0>.
Node <0> is connected to nodes <2>, <6>, <5>.
Node <6> is connected to node <0>.
Node <5> is connected to nodes <0>, <4>.
Node <4> is connected to nodes <5>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <8>, <2>, <1>, <0>, <3>, <6>, <5>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<8>, <2>].
Visit node <8>. Unvisited neighbors of node <8> are [<1>].
Visit node <2>. Unvisited neighbors of node <2> are [<0>].
Visit node <1>. Unvisited neighbors of node <1> are [<3>].
Visit node <0>. Unvisited neighbors of node <0> are [<6>, <5>].
Visit node <3>. Unvisited neighbors of node <3> are [<4>].
Visit node <6>. 
Visit node <5>. 
Visit node <4>. 
So the BFS traversal is ","('[[<7>, <8>, <2>, <1>, <0>, <3>, <6>, <5>, <4>], [<7>, <5>, <6>, <3>, <8>, <4>, <1>, <0>, <2>], [<7>, <8>, <2>, <1>, <6>, <5>, <4>, <3>, <0>], [<7>, <8>, <2>, <6>, <5>, <4>, <1>, <0>, <3>]]',)",0,128
BFS,"[(<2>, <9>), (<2>, <4>), (<2>, <3>), (<2>, <7>), (<2>, <8>), (<9>, <6>), (<9>, <7>), (<9>, <4>), (<9>, <5>), (<4>, <3>), (<4>, <0>), (<4>, <6>), (<4>, <7>), (<4>, <1>), (<4>, <8>), (<3>, <0>), (<3>, <7>), (<7>, <0>), (<8>, <6>), (<8>, <5>), (<6>, <5>)]","{<2>: [<9>, <4>, <3>, <7>, <8>],
<9>: [<2>, <6>, <7>, <4>, <5>],
<4>: [<2>, <9>, <3>, <0>, <6>, <7>, <1>, <8>],
<3>: [<2>, <4>, <0>, <7>],
<7>: [<2>, <9>, <4>, <3>, <0>],
<8>: [<2>, <4>, <6>, <5>],
<6>: [<9>, <4>, <5>, <8>],
<5>: [<9>, <6>, <8>],
<0>: [<4>, <3>, <7>],
<1>: [<4>]}","Node <2> is connected to nodes <9>, <4>, <3>, <7>, <8>.
Node <9> is connected to nodes <2>, <6>, <7>, <4>, <5>.
Node <4> is connected to nodes <2>, <9>, <3>, <0>, <6>, <7>, <1>, <8>.
Node <3> is connected to nodes <2>, <4>, <0>, <7>.
Node <7> is connected to nodes <2>, <9>, <4>, <3>, <0>.
Node <8> is connected to nodes <2>, <4>, <6>, <5>.
Node <6> is connected to nodes <9>, <4>, <5>, <8>.
Node <5> is connected to nodes <9>, <6>, <8>.
Node <0> is connected to nodes <4>, <3>, <7>.
Node <1> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,21,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <2>, <9>, <3>, <0>, <6>, <7>, <1>, <8>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<2>, <9>, <3>, <0>, <6>, <7>, <1>, <8>].
Visit node <2>. 
Visit node <9>. Unvisited neighbors of node <9> are [<5>].
Visit node <3>. 
Visit node <0>. 
Visit node <6>. 
Visit node <7>. 
Visit node <1>. 
Visit node <8>. 
Visit node <5>. 
So the BFS traversal is ","('[[<4>, <2>, <9>, <1>, <8>, <5>, <3>, <0>, <6>, <7>], [<4>, <7>, <2>, <0>, <5>, <9>, <6>, <8>, <3>, <1>], [<4>, <2>, <9>, <3>, <0>, <8>, <5>, <1>, <6>, <7>], [<4>, <2>, <9>, <3>, <0>, <6>, <7>, <1>, <8>, <5>]]',)",3,129
BFS,"[(<4>, <6>), (<4>, <7>), (<4>, <5>), (<6>, <0>), (<7>, <2>), (<0>, <2>), (<0>, <3>), (<8>, <2>), (<1>, <3>)]","{<4>: [<6>, <7>, <5>],
<6>: [<4>, <0>],
<7>: [<4>, <2>],
<5>: [<4>],
<0>: [<6>, <2>, <3>],
<8>: [<2>],
<2>: [<8>, <0>, <7>],
<1>: [<3>],
<3>: [<1>, <0>]}","Node <4> is connected to nodes <6>, <7>, <5>.
Node <6> is connected to nodes <4>, <0>.
Node <7> is connected to nodes <4>, <2>.
Node <5> is connected to node <4>.
Node <0> is connected to nodes <6>, <2>, <3>.
Node <8> is connected to node <2>.
Node <2> is connected to nodes <8>, <0>, <7>.
Node <1> is connected to node <3>.
Node <3> is connected to nodes <1>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <8>, <0>, <7>, <6>, <3>, <4>, <1>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<8>, <0>, <7>].
Visit node <8>. 
Visit node <0>. Unvisited neighbors of node <0> are [<6>, <3>].
Visit node <7>. Unvisited neighbors of node <7> are [<4>].
Visit node <6>. 
Visit node <3>. Unvisited neighbors of node <3> are [<1>].
Visit node <4>. Unvisited neighbors of node <4> are [<5>].
Visit node <1>. 
Visit node <5>. 
So the BFS traversal is ","('[[<2>, <8>, <0>, <7>, <6>, <3>, <4>, <5>, <1>], [<2>, <8>, <0>, <7>, <6>, <3>, <4>, <1>, <5>], [<2>, <8>, <0>, <4>, <1>, <5>, <7>, <6>, <3>], [<2>, <6>, <8>, <3>, <7>, <1>, <0>, <5>, <4>]]',)",1,130
BFS,"[(<4>, <7>), (<4>, <8>), (<4>, <10>), (<4>, <3>), (<4>, <2>), (<4>, <6>), (<7>, <3>), (<7>, <2>), (<7>, <6>), (<7>, <0>), (<7>, <5>), (<8>, <10>), (<8>, <3>), (<8>, <0>), (<8>, <5>), (<10>, <6>), (<10>, <9>), (<3>, <2>), (<3>, <6>), (<3>, <0>), (<2>, <0>), (<2>, <1>), (<6>, <9>), (<6>, <1>), (<0>, <5>), (<9>, <1>)]","{<4>: [<7>, <8>, <10>, <3>, <2>, <6>],
<7>: [<4>, <3>, <2>, <6>, <0>, <5>],
<8>: [<4>, <10>, <3>, <0>, <5>],
<10>: [<4>, <8>, <6>, <9>],
<3>: [<4>, <7>, <8>, <2>, <6>, <0>],
<2>: [<4>, <7>, <3>, <0>, <1>],
<6>: [<4>, <7>, <10>, <3>, <9>, <1>],
<0>: [<7>, <8>, <3>, <2>, <5>],
<5>: [<7>, <8>, <0>],
<9>: [<10>, <6>, <1>],
<1>: [<2>, <6>, <9>]}","Node <4> is connected to nodes <7>, <8>, <10>, <3>, <2>, <6>.
Node <7> is connected to nodes <4>, <3>, <2>, <6>, <0>, <5>.
Node <8> is connected to nodes <4>, <10>, <3>, <0>, <5>.
Node <10> is connected to nodes <4>, <8>, <6>, <9>.
Node <3> is connected to nodes <4>, <7>, <8>, <2>, <6>, <0>.
Node <2> is connected to nodes <4>, <7>, <3>, <0>, <1>.
Node <6> is connected to nodes <4>, <7>, <10>, <3>, <9>, <1>.
Node <0> is connected to nodes <7>, <8>, <3>, <2>, <5>.
Node <5> is connected to nodes <7>, <8>, <0>.
Node <9> is connected to nodes <10>, <6>, <1>.
Node <1> is connected to nodes <2>, <6>, <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,26,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <10>, <6>, <1>, <4>, <8>, <7>, <3>, <2>, <0>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<10>, <6>, <1>].
Visit node <10>. Unvisited neighbors of node <10> are [<4>, <8>].
Visit node <6>. Unvisited neighbors of node <6> are [<7>, <3>].
Visit node <1>. Unvisited neighbors of node <1> are [<2>].
Visit node <4>. 
Visit node <8>. Unvisited neighbors of node <8> are [<0>, <5>].
Visit node <7>. 
Visit node <3>. 
Visit node <2>. 
Visit node <0>. 
Visit node <5>. 
So the BFS traversal is ","('[[<9>, <10>, <6>, <1>, <4>, <0>, <7>, <3>, <8>, <2>, <5>], [<9>, <10>, <6>, <1>, <4>, <8>, <7>, <3>, <2>, <0>, <5>], [<9>, <10>, <6>, <5>, <0>, <7>, <2>, <3>, <1>, <4>, <8>], [<9>, <10>, <6>, <2>, <0>, <5>, <1>, <4>, <8>, <7>, <3>]]',)",1,131
BFS,"[(<4>, <5>), (<4>, <1>), (<4>, <12>), (<4>, <9>), (<4>, <11>), (<5>, <0>), (<1>, <10>), (<9>, <3>), (<0>, <8>), (<6>, <2>), (<6>, <3>), (<10>, <7>)]","{<4>: [<5>, <1>, <12>, <9>, <11>],
<5>: [<4>, <0>],
<1>: [<4>, <10>],
<12>: [<4>],
<9>: [<4>, <3>],
<11>: [<4>],
<0>: [<5>, <8>],
<6>: [<2>, <3>],
<2>: [<6>],
<3>: [<6>, <9>],
<10>: [<1>, <7>],
<8>: [<0>],
<7>: [<10>]}","Node <4> is connected to nodes <5>, <1>, <12>, <9>, <11>.
Node <5> is connected to nodes <4>, <0>.
Node <1> is connected to nodes <4>, <10>.
Node <12> is connected to node <4>.
Node <9> is connected to nodes <4>, <3>.
Node <11> is connected to node <4>.
Node <0> is connected to nodes <5>, <8>.
Node <6> is connected to nodes <2>, <3>.
Node <2> is connected to node <6>.
Node <3> is connected to nodes <6>, <9>.
Node <10> is connected to nodes <1>, <7>.
Node <8> is connected to node <0>.
Node <7> is connected to node <10>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,12,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <6>, <9>, <2>, <4>, <5>, <1>, <12>, <11>, <0>, <10>, <8>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<6>, <9>].
Visit node <6>. Unvisited neighbors of node <6> are [<2>].
Visit node <9>. Unvisited neighbors of node <9> are [<4>].
Visit node <2>. 
Visit node <4>. Unvisited neighbors of node <4> are [<5>, <1>, <12>, <11>].
Visit node <5>. Unvisited neighbors of node <5> are [<0>].
Visit node <1>. Unvisited neighbors of node <1> are [<10>].
Visit node <12>. 
Visit node <11>. 
Visit node <0>. Unvisited neighbors of node <0> are [<8>].
Visit node <10>. Unvisited neighbors of node <10> are [<7>].
Visit node <8>. 
Visit node <7>. 
So the BFS traversal is ","('[[<3>, <8>, <5>, <12>, <2>, <7>, <11>, <6>, <10>, <1>, <0>, <9>, <4>], [<3>, <6>, <9>, <2>, <4>, <5>, <8>, <7>, <11>, <0>, <12>, <1>, <10>], [<3>, <6>, <9>, <2>, <4>, <5>, <1>, <12>, <11>, <0>, <10>, <8>, <7>], [<3>, <6>, <9>, <2>, <0>, <10>, <8>, <7>, <4>, <5>, <1>, <12>, <11>]]',)",2,132
BFS,"[(<3>, <8>), (<8>, <2>), (<0>, <4>), (<0>, <7>), (<0>, <10>), (<7>, <1>), (<7>, <6>), (<10>, <1>), (<10>, <9>), (<10>, <5>), (<1>, <2>), (<1>, <0>), (<2>, <3>), (<2>, <1>), (<2>, <4>), (<9>, <8>), (<9>, <0>), (<9>, <1>), (<6>, <3>)]","{<3>: [<8>],
<8>: [<2>],
<0>: [<4>, <7>, <10>],
<4>: [],
<7>: [<1>, <6>],
<10>: [<1>, <9>, <5>],
<1>: [<2>, <0>],
<2>: [<3>, <1>, <4>],
<9>: [<8>, <0>, <1>],
<6>: [<3>],
<5>: []}","Node <3> is connected to node <8>.
Node <8> is connected to node <2>.
Node <0> is connected to nodes <4>, <7>, <10>.
Node <7> is connected to nodes <1>, <6>.
Node <10> is connected to nodes <1>, <9>, <5>.
Node <1> is connected to nodes <2>, <0>.
Node <2> is connected to nodes <3>, <1>, <4>.
Node <9> is connected to nodes <8>, <0>, <1>.
Node <6> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,19,True,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <8>, <0>, <1>, <2>, <4>, <7>, <10>, <3>, <6>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<8>, <0>, <1>].
Visit node <8>. Unvisited neighbors of node <8> are [<2>].
Visit node <0>. Unvisited neighbors of node <0> are [<4>, <7>, <10>].
Visit node <1>. 
Visit node <2>. Unvisited neighbors of node <2> are [<3>].
Visit node <4>. 
Visit node <7>. Unvisited neighbors of node <7> are [<6>].
Visit node <10>. Unvisited neighbors of node <10> are [<5>].
Visit node <3>. 
Visit node <6>. 
Visit node <5>. 
So the BFS traversal is ","('[[<9>, <7>, <10>, <2>, <0>, <8>, <1>, <5>, <4>, <6>, <3>], [<9>, <8>, <0>, <1>, <2>, <4>, <7>, <10>, <3>, <6>, <5>], [<9>, <8>, <0>, <1>, <2>, <10>, <3>, <7>, <6>, <5>, <4>], [<9>, <8>, <0>, <3>, <6>, <5>, <1>, <2>, <4>, <7>, <10>]]',)",1,133
BFS,"[(<5>, <3>), (<5>, <0>), (<3>, <7>), (<3>, <6>), (<0>, <1>), (<7>, <1>), (<6>, <4>), (<4>, <2>)]","{<5>: [<3>, <0>],
<3>: [<5>, <7>, <6>],
<0>: [<5>, <1>],
<7>: [<3>, <1>],
<6>: [<3>, <4>],
<1>: [<0>, <7>],
<4>: [<6>, <2>],
<2>: [<4>]}","Node <5> is connected to nodes <3>, <0>.
Node <3> is connected to nodes <5>, <7>, <6>.
Node <0> is connected to nodes <5>, <1>.
Node <7> is connected to nodes <3>, <1>.
Node <6> is connected to nodes <3>, <4>.
Node <1> is connected to nodes <0>, <7>.
Node <4> is connected to nodes <6>, <2>.
Node <2> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,8,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <3>, <0>, <7>, <6>, <1>, <4>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<3>, <0>].
Visit node <3>. Unvisited neighbors of node <3> are [<7>, <6>].
Visit node <0>. Unvisited neighbors of node <0> are [<1>].
Visit node <7>. 
Visit node <6>. Unvisited neighbors of node <6> are [<4>].
Visit node <1>. 
Visit node <4>. Unvisited neighbors of node <4> are [<2>].
Visit node <2>. 
So the BFS traversal is ","('[[<5>, <3>, <0>, <7>, <1>, <4>, <6>, <2>], [<5>, <1>, <4>, <6>, <2>, <0>, <3>, <7>], [<5>, <3>, <0>, <7>, <6>, <1>, <4>, <2>], [<5>, <3>, <4>, <2>, <0>, <7>, <6>, <1>]]',)",2,134
BFS,"[(<2>, <7>), (<2>, <0>), (<2>, <1>), (<2>, <5>), (<7>, <1>), (<7>, <10>), (<7>, <3>), (<0>, <8>), (<0>, <5>), (<0>, <2>), (<0>, <10>), (<1>, <5>), (<1>, <2>), (<1>, <10>), (<1>, <6>), (<1>, <9>), (<5>, <2>), (<5>, <3>), (<5>, <0>), (<10>, <8>), (<10>, <1>), (<8>, <1>), (<8>, <10>), (<8>, <7>), (<6>, <11>), (<6>, <3>), (<6>, <8>), (<6>, <1>), (<6>, <5>), (<6>, <2>), (<6>, <10>), (<11>, <0>), (<11>, <2>), (<11>, <10>), (<3>, <0>), (<3>, <4>), (<3>, <10>), (<3>, <6>), (<3>, <9>), (<9>, <0>), (<9>, <8>), (<9>, <4>), (<9>, <5>), (<9>, <10>), (<9>, <6>), (<4>, <5>), (<4>, <6>)]","{<2>: [<7>, <0>, <1>, <5>],
<7>: [<1>, <10>, <3>],
<0>: [<8>, <5>, <2>, <10>],
<1>: [<5>, <2>, <10>, <6>, <9>],
<5>: [<2>, <3>, <0>],
<10>: [<8>, <1>],
<8>: [<1>, <10>, <7>],
<6>: [<11>, <3>, <8>, <1>, <5>, <2>, <10>],
<11>: [<0>, <2>, <10>],
<3>: [<0>, <4>, <10>, <6>, <9>],
<9>: [<0>, <8>, <4>, <5>, <10>, <6>],
<4>: [<5>, <6>]}","Node <2> is connected to nodes <7>, <0>, <1>, <5>.
Node <7> is connected to nodes <1>, <10>, <3>.
Node <0> is connected to nodes <8>, <5>, <2>, <10>.
Node <1> is connected to nodes <5>, <2>, <10>, <6>, <9>.
Node <5> is connected to nodes <2>, <3>, <0>.
Node <10> is connected to nodes <8>, <1>.
Node <8> is connected to nodes <1>, <10>, <7>.
Node <6> is connected to nodes <11>, <3>, <8>, <1>, <5>, <2>, <10>.
Node <11> is connected to nodes <0>, <2>, <10>.
Node <3> is connected to nodes <0>, <4>, <10>, <6>, <9>.
Node <9> is connected to nodes <0>, <8>, <4>, <5>, <10>, <6>.
Node <4> is connected to nodes <5>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,47,True,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <0>, <4>, <10>, <6>, <9>, <8>, <5>, <2>, <1>, <11>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<0>, <4>, <10>, <6>, <9>].
Visit node <0>. Unvisited neighbors of node <0> are [<8>, <5>, <2>].
Visit node <4>. 
Visit node <10>. Unvisited neighbors of node <10> are [<1>].
Visit node <6>. Unvisited neighbors of node <6> are [<11>].
Visit node <9>. 
Visit node <8>. Unvisited neighbors of node <8> are [<7>].
Visit node <5>. 
Visit node <2>. 
Visit node <1>. 
Visit node <11>. 
Visit node <7>. 
So the BFS traversal is ","('[[<3>, <8>, <11>, <4>, <5>, <10>, <1>, <2>, <0>, <7>, <9>, <6>], [<3>, <0>, <4>, <10>, <2>, <1>, <11>, <7>, <6>, <9>, <8>, <5>], [<3>, <0>, <4>, <10>, <6>, <9>, <8>, <5>, <2>, <1>, <11>, <7>], [<3>, <0>, <4>, <10>, <6>, <9>, <11>, <8>, <7>, <2>, <5>, <1>]]',)",2,135
BFS,"[(<4>, <8>), (<4>, <5>), (<4>, <0>), (<4>, <7>), (<4>, <1>), (<4>, <3>), (<4>, <2>), (<4>, <9>), (<9>, <6>)]","{<4>: [<8>, <5>, <0>, <7>, <1>, <3>, <2>, <9>],
<8>: [<4>],
<5>: [<4>],
<0>: [<4>],
<7>: [<4>],
<1>: [<4>],
<3>: [<4>],
<2>: [<4>],
<9>: [<4>, <6>],
<6>: [<9>]}","Node <4> is connected to nodes <8>, <5>, <0>, <7>, <1>, <3>, <2>, <9>.
Node <8> is connected to node <4>.
Node <5> is connected to node <4>.
Node <0> is connected to node <4>.
Node <7> is connected to node <4>.
Node <1> is connected to node <4>.
Node <3> is connected to node <4>.
Node <2> is connected to node <4>.
Node <9> is connected to nodes <4>, <6>.
Node <6> is connected to node <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,9,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <4>, <6>, <8>, <5>, <0>, <7>, <1>, <3>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<4>, <6>].
Visit node <4>. Unvisited neighbors of node <4> are [<8>, <5>, <0>, <7>, <1>, <3>, <2>].
Visit node <6>. 
Visit node <8>. 
Visit node <5>. 
Visit node <0>. 
Visit node <7>. 
Visit node <1>. 
Visit node <3>. 
Visit node <2>. 
So the BFS traversal is ","('[[<9>, <4>, <6>, <8>, <5>, <1>, <0>, <7>, <3>, <2>], [<9>, <4>, <6>, <1>, <3>, <2>, <8>, <5>, <0>, <7>], [<9>, <4>, <6>, <8>, <5>, <0>, <7>, <1>, <3>, <2>], [<9>, <6>, <4>, <1>, <2>, <5>, <0>, <7>, <8>, <3>]]',)",2,136
BFS,"[(<8>, <11>), (<8>, <9>), (<9>, <5>), (<9>, <4>), (<7>, <3>), (<7>, <5>), (<3>, <6>), (<5>, <12>), (<5>, <2>), (<5>, <1>), (<5>, <10>), (<2>, <0>)]","{<8>: [<11>, <9>],
<11>: [<8>],
<9>: [<8>, <5>, <4>],
<7>: [<3>, <5>],
<3>: [<7>, <6>],
<5>: [<7>, <9>, <12>, <2>, <1>, <10>],
<6>: [<3>],
<12>: [<5>],
<2>: [<5>, <0>],
<1>: [<5>],
<10>: [<5>],
<4>: [<9>],
<0>: [<2>]}","Node <8> is connected to nodes <11>, <9>.
Node <11> is connected to node <8>.
Node <9> is connected to nodes <8>, <5>, <4>.
Node <7> is connected to nodes <3>, <5>.
Node <3> is connected to nodes <7>, <6>.
Node <5> is connected to nodes <7>, <9>, <12>, <2>, <1>, <10>.
Node <6> is connected to node <3>.
Node <12> is connected to node <5>.
Node <2> is connected to nodes <5>, <0>.
Node <1> is connected to node <5>.
Node <10> is connected to node <5>.
Node <4> is connected to node <9>.
Node <0> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,12,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <7>, <9>, <12>, <2>, <1>, <10>, <3>, <8>, <4>, <0>, <6>, <11>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<7>, <9>, <12>, <2>, <1>, <10>].
Visit node <7>. Unvisited neighbors of node <7> are [<3>].
Visit node <9>. Unvisited neighbors of node <9> are [<8>, <4>].
Visit node <12>. 
Visit node <2>. Unvisited neighbors of node <2> are [<0>].
Visit node <1>. 
Visit node <10>. 
Visit node <3>. Unvisited neighbors of node <3> are [<6>].
Visit node <8>. Unvisited neighbors of node <8> are [<11>].
Visit node <4>. 
Visit node <0>. 
Visit node <6>. 
Visit node <11>. 
So the BFS traversal is ","('[[<5>, <1>, <11>, <12>, <9>, <3>, <2>, <7>, <4>, <6>, <0>, <8>, <10>], [<5>, <7>, <9>, <12>, <2>, <1>, <10>, <3>, <8>, <4>, <0>, <6>, <11>], [<5>, <7>, <9>, <12>, <2>, <1>, <8>, <4>, <0>, <11>, <6>, <10>, <3>], [<5>, <7>, <9>, <12>, <4>, <0>, <6>, <11>, <2>, <1>, <10>, <3>, <8>]]',)",1,137
BFS,"[(<2>, <0>), (<2>, <7>), (<0>, <5>), (<0>, <6>), (<7>, <1>), (<5>, <3>), (<8>, <4>), (<8>, <3>), (<4>, <3>)]","{<2>: [<0>, <7>],
<0>: [<2>, <5>, <6>],
<7>: [<2>, <1>],
<5>: [<0>, <3>],
<6>: [<0>],
<8>: [<4>, <3>],
<4>: [<8>, <3>],
<3>: [<8>, <4>, <5>],
<1>: [<7>]}","Node <2> is connected to nodes <0>, <7>.
Node <0> is connected to nodes <2>, <5>, <6>.
Node <7> is connected to nodes <2>, <1>.
Node <5> is connected to nodes <0>, <3>.
Node <6> is connected to node <0>.
Node <8> is connected to nodes <4>, <3>.
Node <4> is connected to nodes <8>, <3>.
Node <3> is connected to nodes <8>, <4>, <5>.
Node <1> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <2>, <5>, <6>, <7>, <3>, <1>, <8>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<2>, <5>, <6>].
Visit node <2>. Unvisited neighbors of node <2> are [<7>].
Visit node <5>. Unvisited neighbors of node <5> are [<3>].
Visit node <6>. 
Visit node <7>. Unvisited neighbors of node <7> are [<1>].
Visit node <3>. Unvisited neighbors of node <3> are [<8>, <4>].
Visit node <1>. 
Visit node <8>. 
Visit node <4>. 
So the BFS traversal is ","('[[<0>, <2>, <5>, <6>, <1>, <3>, <7>, <8>, <4>], [<0>, <2>, <5>, <6>, <7>, <3>, <1>, <8>, <4>], [<0>, <4>, <1>, <2>, <5>, <7>, <6>, <8>, <3>], [<0>, <2>, <5>, <1>, <8>, <4>, <6>, <7>, <3>]]',)",1,138
BFS,"[(<2>, <3>), (<2>, <5>), (<3>, <7>), (<3>, <1>), (<5>, <0>), (<7>, <6>), (<7>, <1>), (<4>, <6>)]","{<2>: [<3>, <5>],
<3>: [<2>, <7>, <1>],
<5>: [<2>, <0>],
<7>: [<3>, <6>, <1>],
<1>: [<3>, <7>],
<0>: [<5>],
<4>: [<6>],
<6>: [<4>, <7>]}","Node <2> is connected to nodes <3>, <5>.
Node <3> is connected to nodes <2>, <7>, <1>.
Node <5> is connected to nodes <2>, <0>.
Node <7> is connected to nodes <3>, <6>, <1>.
Node <1> is connected to nodes <3>, <7>.
Node <0> is connected to node <5>.
Node <4> is connected to node <6>.
Node <6> is connected to nodes <4>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,8,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <3>, <5>, <7>, <1>, <0>, <6>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<3>, <5>].
Visit node <3>. Unvisited neighbors of node <3> are [<7>, <1>].
Visit node <5>. Unvisited neighbors of node <5> are [<0>].
Visit node <7>. Unvisited neighbors of node <7> are [<6>].
Visit node <1>. 
Visit node <0>. 
Visit node <6>. Unvisited neighbors of node <6> are [<4>].
Visit node <4>. 
So the BFS traversal is ","('[[<2>, <3>, <5>, <7>, <6>, <4>, <1>, <0>], [<2>, <3>, <0>, <7>, <6>, <1>, <4>, <5>], [<2>, <3>, <6>, <4>, <5>, <7>, <1>, <0>], [<2>, <3>, <5>, <7>, <1>, <0>, <6>, <4>]]',)",3,139
BFS,"[(<4>, <0>), (<4>, <1>), (<4>, <3>), (<4>, <8>), (<0>, <3>), (<0>, <8>), (<0>, <1>), (<0>, <10>), (<0>, <9>), (<1>, <2>), (<1>, <11>), (<8>, <11>), (<8>, <9>), (<8>, <7>), (<10>, <2>), (<10>, <6>), (<9>, <2>), (<9>, <5>), (<2>, <7>), (<11>, <5>), (<11>, <6>), (<7>, <5>), (<7>, <6>), (<5>, <6>)]","{<4>: [<0>, <1>, <3>, <8>],
<0>: [<4>, <3>, <8>, <1>, <10>, <9>],
<1>: [<4>, <0>, <2>, <11>],
<3>: [<4>, <0>],
<8>: [<4>, <0>, <11>, <9>, <7>],
<10>: [<0>, <2>, <6>],
<9>: [<0>, <8>, <2>, <5>],
<2>: [<1>, <9>, <10>, <7>],
<11>: [<1>, <8>, <5>, <6>],
<7>: [<8>, <2>, <5>, <6>],
<5>: [<11>, <9>, <7>, <6>],
<6>: [<11>, <5>, <7>, <10>]}","Node <4> is connected to nodes <0>, <1>, <3>, <8>.
Node <0> is connected to nodes <4>, <3>, <8>, <1>, <10>, <9>.
Node <1> is connected to nodes <4>, <0>, <2>, <11>.
Node <3> is connected to nodes <4>, <0>.
Node <8> is connected to nodes <4>, <0>, <11>, <9>, <7>.
Node <10> is connected to nodes <0>, <2>, <6>.
Node <9> is connected to nodes <0>, <8>, <2>, <5>.
Node <2> is connected to nodes <1>, <9>, <10>, <7>.
Node <11> is connected to nodes <1>, <8>, <5>, <6>.
Node <7> is connected to nodes <8>, <2>, <5>, <6>.
Node <5> is connected to nodes <11>, <9>, <7>, <6>.
Node <6> is connected to nodes <11>, <5>, <7>, <10>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,24,False,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <4>, <0>, <2>, <11>, <3>, <8>, <10>, <9>, <7>, <5>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<4>, <0>, <2>, <11>].
Visit node <4>. Unvisited neighbors of node <4> are [<3>, <8>].
Visit node <0>. Unvisited neighbors of node <0> are [<10>, <9>].
Visit node <2>. Unvisited neighbors of node <2> are [<7>].
Visit node <11>. Unvisited neighbors of node <11> are [<5>, <6>].
Visit node <3>. 
Visit node <8>. 
Visit node <10>. 
Visit node <9>. 
Visit node <7>. 
Visit node <5>. 
Visit node <6>. 
So the BFS traversal is ","('[[<1>, <7>, <4>, <11>, <5>, <10>, <9>, <2>, <8>, <3>, <0>, <6>], [<1>, <4>, <0>, <2>, <11>, <3>, <8>, <10>, <9>, <7>, <5>, <6>], [<1>, <4>, <0>, <2>, <9>, <7>, <5>, <6>, <11>, <3>, <8>, <10>], [<1>, <4>, <0>, <2>, <11>, <3>, <9>, <10>, <6>, <5>, <7>, <8>]]',)",1,140
BFS,"[(<6>, <7>), (<6>, <5>), (<6>, <13>), (<7>, <1>), (<7>, <3>), (<7>, <12>), (<5>, <9>), (<5>, <3>), (<5>, <13>), (<13>, <14>), (<13>, <11>), (<13>, <0>), (<1>, <4>), (<1>, <8>), (<1>, <10>), (<3>, <2>), (<3>, <12>), (<12>, <9>), (<12>, <14>), (<12>, <11>), (<12>, <0>), (<9>, <2>), (<2>, <14>), (<2>, <4>), (<2>, <0>), (<2>, <8>), (<4>, <10>), (<4>, <8>), (<0>, <8>), (<10>, <11>)]","{<6>: [<7>, <5>, <13>],
<7>: [<6>, <1>, <3>, <12>],
<5>: [<6>, <9>, <3>, <13>],
<13>: [<6>, <14>, <5>, <11>, <0>],
<1>: [<7>, <4>, <8>, <10>],
<3>: [<7>, <2>, <12>, <5>],
<12>: [<7>, <9>, <14>, <3>, <11>, <0>],
<9>: [<2>, <5>, <12>],
<2>: [<9>, <14>, <4>, <0>, <3>, <8>],
<14>: [<2>, <13>, <12>],
<4>: [<2>, <10>, <8>, <1>],
<0>: [<2>, <8>, <12>, <13>],
<8>: [<2>, <4>, <1>, <0>],
<10>: [<4>, <1>, <11>],
<11>: [<10>, <12>, <13>]}","Node <6> is connected to nodes <7>, <5>, <13>.
Node <7> is connected to nodes <6>, <1>, <3>, <12>.
Node <5> is connected to nodes <6>, <9>, <3>, <13>.
Node <13> is connected to nodes <6>, <14>, <5>, <11>, <0>.
Node <1> is connected to nodes <7>, <4>, <8>, <10>.
Node <3> is connected to nodes <7>, <2>, <12>, <5>.
Node <12> is connected to nodes <7>, <9>, <14>, <3>, <11>, <0>.
Node <9> is connected to nodes <2>, <5>, <12>.
Node <2> is connected to nodes <9>, <14>, <4>, <0>, <3>, <8>.
Node <14> is connected to nodes <2>, <13>, <12>.
Node <4> is connected to nodes <2>, <10>, <8>, <1>.
Node <0> is connected to nodes <2>, <8>, <12>, <13>.
Node <8> is connected to nodes <2>, <4>, <1>, <0>.
Node <10> is connected to nodes <4>, <1>, <11>.
Node <11> is connected to nodes <10>, <12>, <13>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,30,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <6>, <1>, <3>, <12>, <5>, <13>, <4>, <8>, <10>, <2>, <9>, <14>, <11>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<6>, <1>, <3>, <12>].
Visit node <6>. Unvisited neighbors of node <6> are [<5>, <13>].
Visit node <1>. Unvisited neighbors of node <1> are [<4>, <8>, <10>].
Visit node <3>. Unvisited neighbors of node <3> are [<2>].
Visit node <12>. Unvisited neighbors of node <12> are [<9>, <14>, <11>, <0>].
Visit node <5>. 
Visit node <13>. 
Visit node <4>. 
Visit node <8>. 
Visit node <10>. 
Visit node <2>. 
Visit node <9>. 
Visit node <14>. 
Visit node <11>. 
Visit node <0>. 
So the BFS traversal is ","('[[<7>, <8>, <13>, <0>, <5>, <10>, <14>, <4>, <6>, <12>, <9>, <2>, <1>, <11>, <3>], [<7>, <6>, <1>, <3>, <12>, <5>, <13>, <10>, <11>, <0>, <4>, <14>, <2>, <8>, <9>], [<7>, <6>, <1>, <3>, <12>, <5>, <13>, <4>, <8>, <10>, <2>, <9>, <14>, <11>, <0>], [<7>, <6>, <1>, <3>, <12>, <2>, <9>, <14>, <11>, <0>, <5>, <13>, <4>, <8>, <10>]]',)",2,141
BFS,"[(<0>, <3>), (<0>, <4>), (<0>, <7>), (<0>, <1>), (<0>, <5>), (<3>, <8>), (<3>, <6>), (<3>, <7>), (<3>, <1>), (<3>, <2>), (<4>, <8>), (<4>, <6>), (<4>, <7>), (<4>, <9>), (<4>, <1>), (<4>, <5>), (<4>, <2>), (<7>, <8>), (<7>, <6>), (<7>, <2>), (<1>, <8>), (<1>, <6>), (<1>, <9>), (<1>, <2>), (<5>, <8>), (<5>, <6>), (<5>, <9>), (<8>, <9>), (<8>, <2>), (<6>, <9>), (<2>, <9>)]","{<0>: [<3>, <4>, <7>, <1>, <5>],
<3>: [<0>, <8>, <6>, <7>, <1>, <2>],
<4>: [<0>, <8>, <6>, <7>, <9>, <1>, <5>, <2>],
<7>: [<0>, <3>, <8>, <6>, <4>, <2>],
<1>: [<0>, <3>, <8>, <6>, <4>, <9>, <2>],
<5>: [<0>, <8>, <6>, <4>, <9>],
<8>: [<3>, <4>, <7>, <9>, <1>, <5>, <2>],
<6>: [<3>, <4>, <7>, <9>, <1>, <5>],
<2>: [<3>, <8>, <4>, <7>, <9>, <1>],
<9>: [<8>, <6>, <4>, <1>, <5>, <2>]}","Node <0> is connected to nodes <3>, <4>, <7>, <1>, <5>.
Node <3> is connected to nodes <0>, <8>, <6>, <7>, <1>, <2>.
Node <4> is connected to nodes <0>, <8>, <6>, <7>, <9>, <1>, <5>, <2>.
Node <7> is connected to nodes <0>, <3>, <8>, <6>, <4>, <2>.
Node <1> is connected to nodes <0>, <3>, <8>, <6>, <4>, <9>, <2>.
Node <5> is connected to nodes <0>, <8>, <6>, <4>, <9>.
Node <8> is connected to nodes <3>, <4>, <7>, <9>, <1>, <5>, <2>.
Node <6> is connected to nodes <3>, <4>, <7>, <9>, <1>, <5>.
Node <2> is connected to nodes <3>, <8>, <4>, <7>, <9>, <1>.
Node <9> is connected to nodes <8>, <6>, <4>, <1>, <5>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,31,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <3>, <4>, <7>, <1>, <5>, <8>, <6>, <2>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<3>, <4>, <7>, <1>, <5>].
Visit node <3>. Unvisited neighbors of node <3> are [<8>, <6>, <2>].
Visit node <4>. Unvisited neighbors of node <4> are [<9>].
Visit node <7>. 
Visit node <1>. 
Visit node <5>. 
Visit node <8>. 
Visit node <6>. 
Visit node <2>. 
Visit node <9>. 
So the BFS traversal is ","('[[<0>, <3>, <4>, <6>, <2>, <9>, <7>, <1>, <5>, <8>], [<0>, <3>, <4>, <7>, <1>, <5>, <8>, <6>, <2>, <9>], [<0>, <9>, <1>, <7>, <6>, <2>, <3>, <5>, <8>, <4>], [<0>, <3>, <4>, <7>, <1>, <6>, <8>, <9>, <2>, <5>]]',)",1,142
BFS,"[(<5>, <7>), (<5>, <3>), (<5>, <4>), (<5>, <9>), (<5>, <8>), (<5>, <10>), (<5>, <6>), (<5>, <0>), (<7>, <2>), (<7>, <3>), (<7>, <1>), (<7>, <4>), (<7>, <9>), (<7>, <8>), (<7>, <10>), (<7>, <6>), (<7>, <0>), (<3>, <2>), (<3>, <1>), (<3>, <9>), (<3>, <8>), (<3>, <0>), (<4>, <2>), (<4>, <8>), (<4>, <6>), (<4>, <0>), (<9>, <2>), (<9>, <1>), (<9>, <8>), (<9>, <10>), (<9>, <0>), (<8>, <2>), (<8>, <6>), (<8>, <0>), (<10>, <2>), (<10>, <6>), (<10>, <0>), (<6>, <2>), (<6>, <1>), (<0>, <2>), (<0>, <1>), (<2>, <1>)]","{<5>: [<7>, <3>, <4>, <9>, <8>, <10>, <6>, <0>],
<7>: [<5>, <2>, <3>, <1>, <4>, <9>, <8>, <10>, <6>, <0>],
<3>: [<5>, <2>, <7>, <1>, <9>, <8>, <0>],
<4>: [<5>, <2>, <7>, <8>, <6>, <0>],
<9>: [<5>, <2>, <7>, <3>, <1>, <8>, <10>, <0>],
<8>: [<5>, <2>, <7>, <3>, <4>, <9>, <6>, <0>],
<10>: [<5>, <2>, <7>, <9>, <6>, <0>],
<6>: [<5>, <2>, <7>, <1>, <4>, <8>, <10>],
<0>: [<5>, <2>, <7>, <3>, <1>, <4>, <9>, <8>, <10>],
<2>: [<7>, <3>, <1>, <4>, <9>, <8>, <10>, <6>, <0>],
<1>: [<2>, <7>, <3>, <9>, <6>, <0>]}","Node <5> is connected to nodes <7>, <3>, <4>, <9>, <8>, <10>, <6>, <0>.
Node <7> is connected to nodes <5>, <2>, <3>, <1>, <4>, <9>, <8>, <10>, <6>, <0>.
Node <3> is connected to nodes <5>, <2>, <7>, <1>, <9>, <8>, <0>.
Node <4> is connected to nodes <5>, <2>, <7>, <8>, <6>, <0>.
Node <9> is connected to nodes <5>, <2>, <7>, <3>, <1>, <8>, <10>, <0>.
Node <8> is connected to nodes <5>, <2>, <7>, <3>, <4>, <9>, <6>, <0>.
Node <10> is connected to nodes <5>, <2>, <7>, <9>, <6>, <0>.
Node <6> is connected to nodes <5>, <2>, <7>, <1>, <4>, <8>, <10>.
Node <0> is connected to nodes <5>, <2>, <7>, <3>, <1>, <4>, <9>, <8>, <10>.
Node <2> is connected to nodes <7>, <3>, <1>, <4>, <9>, <8>, <10>, <6>, <0>.
Node <1> is connected to nodes <2>, <7>, <3>, <9>, <6>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,42,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <5>, <2>, <7>, <1>, <9>, <8>, <0>, <4>, <10>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<5>, <2>, <7>, <1>, <9>, <8>, <0>].
Visit node <5>. Unvisited neighbors of node <5> are [<4>, <10>, <6>].
Visit node <2>. 
Visit node <7>. 
Visit node <1>. 
Visit node <9>. 
Visit node <8>. 
Visit node <0>. 
Visit node <4>. 
Visit node <10>. 
Visit node <6>. 
So the BFS traversal is ","('[[<3>, <5>, <2>, <4>, <10>, <6>, <7>, <1>, <9>, <8>, <0>], [<3>, <5>, <2>, <7>, <1>, <9>, <8>, <0>, <4>, <10>, <6>], [<3>, <5>, <2>, <7>, <1>, <4>, <8>, <6>, <0>, <9>, <10>], [<3>, <6>, <0>, <8>, <4>, <5>, <1>, <7>, <10>, <2>, <9>]]',)",1,143
BFS,"[(<1>, <3>), (<1>, <0>), (<1>, <6>), (<1>, <2>), (<1>, <8>), (<3>, <0>), (<0>, <7>), (<0>, <5>), (<6>, <5>), (<2>, <8>), (<2>, <4>), (<8>, <7>), (<8>, <4>), (<7>, <5>)]","{<1>: [<3>, <0>, <6>, <2>, <8>],
<3>: [<1>, <0>],
<0>: [<1>, <3>, <7>, <5>],
<6>: [<1>, <5>],
<2>: [<1>, <8>, <4>],
<8>: [<1>, <7>, <4>, <2>],
<7>: [<8>, <0>, <5>],
<4>: [<8>, <2>],
<5>: [<7>, <0>, <6>]}","Node <1> is connected to nodes <3>, <0>, <6>, <2>, <8>.
Node <3> is connected to nodes <1>, <0>.
Node <0> is connected to nodes <1>, <3>, <7>, <5>.
Node <6> is connected to nodes <1>, <5>.
Node <2> is connected to nodes <1>, <8>, <4>.
Node <8> is connected to nodes <1>, <7>, <4>, <2>.
Node <7> is connected to nodes <8>, <0>, <5>.
Node <4> is connected to nodes <8>, <2>.
Node <5> is connected to nodes <7>, <0>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,14,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <8>, <0>, <5>, <1>, <4>, <2>, <3>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<8>, <0>, <5>].
Visit node <8>. Unvisited neighbors of node <8> are [<1>, <4>, <2>].
Visit node <0>. Unvisited neighbors of node <0> are [<3>].
Visit node <5>. Unvisited neighbors of node <5> are [<6>].
Visit node <1>. 
Visit node <4>. 
Visit node <2>. 
Visit node <3>. 
Visit node <6>. 
So the BFS traversal is ","('[[<7>, <8>, <0>, <5>, <1>, <4>, <2>, <3>, <6>], [<7>, <8>, <0>, <2>, <3>, <6>, <5>, <1>, <4>], [<7>, <8>, <0>, <5>, <3>, <1>, <2>, <4>, <6>], [<7>, <4>, <2>, <5>, <1>, <3>, <0>, <6>, <8>]]',)",0,144
BFS,"[(<0>, <4>), (<0>, <7>), (<0>, <12>), (<0>, <11>), (<0>, <10>), (<0>, <6>), (<4>, <3>), (<4>, <2>), (<7>, <1>), (<7>, <9>), (<7>, <13>), (<7>, <6>), (<7>, <11>), (<7>, <8>), (<7>, <5>), (<12>, <10>), (<12>, <1>), (<12>, <8>), (<11>, <1>), (<11>, <9>), (<11>, <13>), (<11>, <2>), (<3>, <13>), (<2>, <5>)]","{<0>: [<4>, <7>, <12>, <11>, <10>, <6>],
<4>: [<0>, <3>, <2>],
<7>: [<0>, <1>, <9>, <13>, <6>, <11>, <8>, <5>],
<12>: [<0>, <10>, <1>, <8>],
<11>: [<0>, <7>, <1>, <9>, <13>, <2>],
<10>: [<0>, <12>],
<6>: [<0>, <7>],
<3>: [<4>, <13>],
<2>: [<4>, <11>, <5>],
<1>: [<12>, <7>, <11>],
<8>: [<12>, <7>],
<9>: [<7>, <11>],
<13>: [<7>, <11>, <3>],
<5>: [<7>, <2>]}","Node <0> is connected to nodes <4>, <7>, <12>, <11>, <10>, <6>.
Node <4> is connected to nodes <0>, <3>, <2>.
Node <7> is connected to nodes <0>, <1>, <9>, <13>, <6>, <11>, <8>, <5>.
Node <12> is connected to nodes <0>, <10>, <1>, <8>.
Node <11> is connected to nodes <0>, <7>, <1>, <9>, <13>, <2>.
Node <10> is connected to nodes <0>, <12>.
Node <6> is connected to nodes <0>, <7>.
Node <3> is connected to nodes <4>, <13>.
Node <2> is connected to nodes <4>, <11>, <5>.
Node <1> is connected to nodes <12>, <7>, <11>.
Node <8> is connected to nodes <12>, <7>.
Node <9> is connected to nodes <7>, <11>.
Node <13> is connected to nodes <7>, <11>, <3>.
Node <5> is connected to nodes <7>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,24,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <0>, <1>, <9>, <13>, <6>, <11>, <8>, <5>, <4>, <12>, <10>, <3>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<0>, <1>, <9>, <13>, <6>, <11>, <8>, <5>].
Visit node <0>. Unvisited neighbors of node <0> are [<4>, <12>, <10>].
Visit node <1>. 
Visit node <9>. 
Visit node <13>. Unvisited neighbors of node <13> are [<3>].
Visit node <6>. 
Visit node <11>. Unvisited neighbors of node <11> are [<2>].
Visit node <8>. 
Visit node <5>. 
Visit node <4>. 
Visit node <12>. 
Visit node <10>. 
Visit node <3>. 
Visit node <2>. 
So the BFS traversal is ","('[[<7>, <12>, <0>, <1>, <11>, <2>, <5>, <10>, <4>, <9>, <13>, <3>, <6>, <8>], [<7>, <0>, <1>, <9>, <13>, <6>, <11>, <12>, <8>, <10>, <3>, <5>, <2>, <4>], [<7>, <0>, <1>, <9>, <12>, <10>, <3>, <2>, <13>, <6>, <11>, <8>, <5>, <4>], [<7>, <0>, <1>, <9>, <13>, <6>, <11>, <8>, <5>, <4>, <12>, <10>, <3>, <2>]]',)",3,145
BFS,"[(<6>, <5>), (<6>, <7>), (<5>, <1>), (<7>, <2>), (<7>, <1>), (<4>, <0>), (<0>, <3>), (<0>, <8>), (<3>, <2>)]","{<6>: [<5>, <7>],
<5>: [<6>, <1>],
<7>: [<6>, <2>, <1>],
<1>: [<5>, <7>],
<4>: [<0>],
<0>: [<4>, <3>, <8>],
<3>: [<0>, <2>],
<8>: [<0>],
<2>: [<7>, <3>]}","Node <6> is connected to nodes <5>, <7>.
Node <5> is connected to nodes <6>, <1>.
Node <7> is connected to nodes <6>, <2>, <1>.
Node <1> is connected to nodes <5>, <7>.
Node <4> is connected to node <0>.
Node <0> is connected to nodes <4>, <3>, <8>.
Node <3> is connected to nodes <0>, <2>.
Node <8> is connected to node <0>.
Node <2> is connected to nodes <7>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <5>, <7>, <1>, <2>, <3>, <0>, <4>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<5>, <7>].
Visit node <5>. Unvisited neighbors of node <5> are [<1>].
Visit node <7>. Unvisited neighbors of node <7> are [<2>].
Visit node <1>. 
Visit node <2>. Unvisited neighbors of node <2> are [<3>].
Visit node <3>. Unvisited neighbors of node <3> are [<0>].
Visit node <0>. Unvisited neighbors of node <0> are [<4>, <8>].
Visit node <4>. 
Visit node <8>. 
So the BFS traversal is ","('[[<6>, <5>, <7>, <0>, <4>, <8>, <1>, <2>, <3>], [<6>, <5>, <7>, <1>, <4>, <3>, <2>, <8>, <0>], [<6>, <4>, <7>, <3>, <1>, <8>, <2>, <5>, <0>], [<6>, <5>, <7>, <1>, <2>, <3>, <0>, <4>, <8>]]',)",3,146
BFS,"[(<2>, <1>), (<2>, <5>), (<1>, <7>), (<1>, <0>), (<5>, <4>), (<5>, <7>), (<5>, <0>), (<5>, <2>), (<5>, <1>), (<7>, <2>), (<0>, <1>), (<0>, <5>), (<4>, <7>), (<4>, <0>), (<4>, <2>), (<3>, <6>), (<3>, <2>), (<3>, <1>), (<6>, <5>), (<6>, <3>), (<6>, <7>)]","{<2>: [<1>, <5>],
<1>: [<7>, <0>],
<5>: [<4>, <7>, <0>, <2>, <1>],
<7>: [<2>],
<0>: [<1>, <5>],
<4>: [<7>, <0>, <2>],
<3>: [<6>, <2>, <1>],
<6>: [<5>, <3>, <7>]}","Node <2> is connected to nodes <1>, <5>.
Node <1> is connected to nodes <7>, <0>.
Node <5> is connected to nodes <4>, <7>, <0>, <2>, <1>.
Node <7> is connected to node <2>.
Node <0> is connected to nodes <1>, <5>.
Node <4> is connected to nodes <7>, <0>, <2>.
Node <3> is connected to nodes <6>, <2>, <1>.
Node <6> is connected to nodes <5>, <3>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,21,True,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <4>, <7>, <0>, <2>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<4>, <7>, <0>, <2>, <1>].
Visit node <4>. 
Visit node <7>. 
Visit node <0>. 
Visit node <2>. 
Visit node <1>. 
So the BFS traversal is ","('[[<5>, <4>, <2>, <1>, <7>, <0>], [<5>, <4>, <7>, <0>, <2>, <1>], [<5>, <7>, <4>, <1>, <2>, <0>], [<5>, <4>, <7>, <1>, <0>, <2>]]',)",1,147
BFS,"[(<5>, <11>), (<5>, <8>), (<5>, <3>), (<5>, <2>), (<5>, <4>), (<11>, <0>), (<11>, <9>), (<11>, <4>), (<8>, <9>), (<8>, <3>), (<8>, <6>), (<8>, <10>), (<3>, <0>), (<3>, <6>), (<3>, <1>), (<3>, <2>), (<2>, <9>), (<2>, <7>), (<2>, <1>), (<2>, <4>), (<4>, <0>), (<4>, <7>), (<4>, <6>), (<4>, <1>), (<0>, <9>), (<0>, <7>), (<0>, <6>), (<0>, <10>), (<0>, <1>), (<9>, <6>), (<9>, <10>), (<7>, <1>), (<10>, <1>)]","{<5>: [<11>, <8>, <3>, <2>, <4>],
<11>: [<5>, <0>, <9>, <4>],
<8>: [<5>, <9>, <3>, <6>, <10>],
<3>: [<5>, <0>, <8>, <6>, <1>, <2>],
<2>: [<5>, <9>, <7>, <3>, <1>, <4>],
<4>: [<5>, <0>, <11>, <7>, <6>, <1>, <2>],
<0>: [<11>, <9>, <7>, <3>, <6>, <10>, <1>, <4>],
<9>: [<0>, <11>, <8>, <6>, <10>, <2>],
<7>: [<0>, <1>, <2>, <4>],
<6>: [<0>, <9>, <8>, <3>, <4>],
<10>: [<0>, <9>, <8>, <1>],
<1>: [<0>, <7>, <3>, <10>, <2>, <4>]}","Node <5> is connected to nodes <11>, <8>, <3>, <2>, <4>.
Node <11> is connected to nodes <5>, <0>, <9>, <4>.
Node <8> is connected to nodes <5>, <9>, <3>, <6>, <10>.
Node <3> is connected to nodes <5>, <0>, <8>, <6>, <1>, <2>.
Node <2> is connected to nodes <5>, <9>, <7>, <3>, <1>, <4>.
Node <4> is connected to nodes <5>, <0>, <11>, <7>, <6>, <1>, <2>.
Node <0> is connected to nodes <11>, <9>, <7>, <3>, <6>, <10>, <1>, <4>.
Node <9> is connected to nodes <0>, <11>, <8>, <6>, <10>, <2>.
Node <7> is connected to nodes <0>, <1>, <2>, <4>.
Node <6> is connected to nodes <0>, <9>, <8>, <3>, <4>.
Node <10> is connected to nodes <0>, <9>, <8>, <1>.
Node <1> is connected to nodes <0>, <7>, <3>, <10>, <2>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,33,False,"Start from node <11>, output a sequence of traversal in breadth-first search (BFS) order.","[<11>, <5>, <0>, <9>, <4>, <8>, <3>, <2>, <7>, <6>, <10>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <11>. Unvisited neighbors of node <11> are [<5>, <0>, <9>, <4>].
Visit node <5>. Unvisited neighbors of node <5> are [<8>, <3>, <2>].
Visit node <0>. Unvisited neighbors of node <0> are [<7>, <6>, <10>, <1>].
Visit node <9>. 
Visit node <4>. 
Visit node <8>. 
Visit node <3>. 
Visit node <2>. 
Visit node <7>. 
Visit node <6>. 
Visit node <10>. 
Visit node <1>. 
So the BFS traversal is ","('[[<11>, <0>, <7>, <8>, <6>, <5>, <1>, <9>, <3>, <4>, <2>, <10>], [<11>, <5>, <0>, <9>, <4>, <8>, <3>, <2>, <7>, <6>, <10>, <1>], [<11>, <5>, <0>, <9>, <4>, <8>, <6>, <2>, <1>, <10>, <7>, <3>], [<11>, <5>, <0>, <9>, <7>, <6>, <10>, <1>, <4>, <8>, <3>, <2>]]',)",1,148
BFS,"[(<0>, <6>), (<0>, <2>), (<0>, <4>), (<0>, <1>), (<0>, <5>), (<0>, <7>), (<6>, <2>), (<2>, <7>), (<4>, <7>), (<1>, <7>), (<5>, <7>), (<7>, <3>)]","{<0>: [<6>, <2>, <4>, <1>, <5>, <7>],
<6>: [<0>, <2>],
<2>: [<0>, <6>, <7>],
<4>: [<0>, <7>],
<1>: [<0>, <7>],
<5>: [<0>, <7>],
<7>: [<0>, <2>, <4>, <3>, <5>, <1>],
<3>: [<7>]}","Node <0> is connected to nodes <6>, <2>, <4>, <1>, <5>, <7>.
Node <6> is connected to nodes <0>, <2>.
Node <2> is connected to nodes <0>, <6>, <7>.
Node <4> is connected to nodes <0>, <7>.
Node <1> is connected to nodes <0>, <7>.
Node <5> is connected to nodes <0>, <7>.
Node <7> is connected to nodes <0>, <2>, <4>, <3>, <5>, <1>.
Node <3> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,12,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <0>, <6>, <7>, <4>, <1>, <5>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<0>, <6>, <7>].
Visit node <0>. Unvisited neighbors of node <0> are [<4>, <1>, <5>].
Visit node <6>. 
Visit node <7>. Unvisited neighbors of node <7> are [<3>].
Visit node <4>. 
Visit node <1>. 
Visit node <5>. 
Visit node <3>. 
So the BFS traversal is ","('[[<2>, <0>, <5>, <3>, <6>, <7>, <4>, <1>], [<2>, <0>, <6>, <7>, <4>, <1>, <5>, <3>], [<2>, <0>, <6>, <7>, <5>, <4>, <1>, <3>], [<2>, <6>, <3>, <5>, <7>, <1>, <4>, <0>]]',)",1,149
BFS,"[(<6>, <2>), (<6>, <8>), (<6>, <3>), (<2>, <7>), (<2>, <3>), (<2>, <5>), (<8>, <7>), (<8>, <3>), (<8>, <1>), (<3>, <7>), (<3>, <1>), (<3>, <5>), (<7>, <1>), (<7>, <5>), (<7>, <0>), (<5>, <4>), (<5>, <0>), (<1>, <0>)]","{<6>: [<2>, <8>, <3>],
<2>: [<6>, <7>, <3>, <5>],
<8>: [<6>, <7>, <3>, <1>],
<3>: [<6>, <2>, <7>, <8>, <1>, <5>],
<7>: [<2>, <8>, <3>, <1>, <5>, <0>],
<5>: [<2>, <4>, <7>, <3>, <0>],
<4>: [<5>],
<1>: [<7>, <8>, <3>, <0>],
<0>: [<7>, <1>, <5>]}","Node <6> is connected to nodes <2>, <8>, <3>.
Node <2> is connected to nodes <6>, <7>, <3>, <5>.
Node <8> is connected to nodes <6>, <7>, <3>, <1>.
Node <3> is connected to nodes <6>, <2>, <7>, <8>, <1>, <5>.
Node <7> is connected to nodes <2>, <8>, <3>, <1>, <5>, <0>.
Node <5> is connected to nodes <2>, <4>, <7>, <3>, <0>.
Node <4> is connected to node <5>.
Node <1> is connected to nodes <7>, <8>, <3>, <0>.
Node <0> is connected to nodes <7>, <1>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,18,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <6>, <7>, <3>, <5>, <8>, <1>, <0>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<6>, <7>, <3>, <5>].
Visit node <6>. Unvisited neighbors of node <6> are [<8>].
Visit node <7>. Unvisited neighbors of node <7> are [<1>, <0>].
Visit node <3>. 
Visit node <5>. Unvisited neighbors of node <5> are [<4>].
Visit node <8>. 
Visit node <1>. 
Visit node <0>. 
Visit node <4>. 
So the BFS traversal is ","('[[<2>, <6>, <7>, <3>, <4>, <0>, <5>, <1>, <8>], [<2>, <1>, <3>, <5>, <4>, <6>, <0>, <8>, <7>], [<2>, <6>, <7>, <1>, <0>, <4>, <3>, <5>, <8>], [<2>, <6>, <7>, <3>, <5>, <8>, <1>, <0>, <4>]]',)",3,150
BFS,"[(<10>, <7>), (<10>, <11>), (<10>, <5>), (<10>, <9>), (<10>, <2>), (<10>, <0>), (<10>, <3>), (<10>, <4>), (<7>, <11>), (<7>, <5>), (<7>, <6>), (<7>, <9>), (<7>, <2>), (<7>, <0>), (<7>, <4>), (<11>, <5>), (<11>, <6>), (<11>, <2>), (<11>, <3>), (<11>, <4>), (<5>, <1>), (<5>, <9>), (<5>, <2>), (<5>, <0>), (<9>, <6>), (<9>, <8>), (<9>, <2>), (<9>, <0>), (<9>, <3>), (<9>, <4>), (<2>, <1>), (<2>, <4>), (<0>, <6>), (<0>, <8>), (<0>, <1>), (<0>, <3>), (<0>, <4>), (<3>, <6>), (<3>, <8>), (<3>, <1>), (<3>, <4>), (<4>, <6>), (<4>, <1>), (<6>, <8>), (<6>, <1>), (<1>, <8>)]","{<10>: [<7>, <11>, <5>, <9>, <2>, <0>, <3>, <4>],
<7>: [<10>, <11>, <5>, <6>, <9>, <2>, <0>, <4>],
<11>: [<10>, <7>, <5>, <6>, <2>, <3>, <4>],
<5>: [<10>, <7>, <11>, <1>, <9>, <2>, <0>],
<9>: [<10>, <7>, <5>, <6>, <8>, <2>, <0>, <3>, <4>],
<2>: [<10>, <7>, <11>, <5>, <1>, <9>, <4>],
<0>: [<10>, <7>, <5>, <6>, <8>, <1>, <9>, <3>, <4>],
<3>: [<10>, <11>, <6>, <8>, <1>, <9>, <0>, <4>],
<4>: [<10>, <7>, <11>, <6>, <1>, <9>, <2>, <0>, <3>],
<6>: [<7>, <11>, <8>, <1>, <9>, <0>, <3>, <4>],
<1>: [<5>, <6>, <8>, <2>, <0>, <3>, <4>],
<8>: [<6>, <1>, <9>, <0>, <3>]}","Node <10> is connected to nodes <7>, <11>, <5>, <9>, <2>, <0>, <3>, <4>.
Node <7> is connected to nodes <10>, <11>, <5>, <6>, <9>, <2>, <0>, <4>.
Node <11> is connected to nodes <10>, <7>, <5>, <6>, <2>, <3>, <4>.
Node <5> is connected to nodes <10>, <7>, <11>, <1>, <9>, <2>, <0>.
Node <9> is connected to nodes <10>, <7>, <5>, <6>, <8>, <2>, <0>, <3>, <4>.
Node <2> is connected to nodes <10>, <7>, <11>, <5>, <1>, <9>, <4>.
Node <0> is connected to nodes <10>, <7>, <5>, <6>, <8>, <1>, <9>, <3>, <4>.
Node <3> is connected to nodes <10>, <11>, <6>, <8>, <1>, <9>, <0>, <4>.
Node <4> is connected to nodes <10>, <7>, <11>, <6>, <1>, <9>, <2>, <0>, <3>.
Node <6> is connected to nodes <7>, <11>, <8>, <1>, <9>, <0>, <3>, <4>.
Node <1> is connected to nodes <5>, <6>, <8>, <2>, <0>, <3>, <4>.
Node <8> is connected to nodes <6>, <1>, <9>, <0>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,46,False,"Start from node <11>, output a sequence of traversal in breadth-first search (BFS) order.","[<11>, <10>, <7>, <5>, <6>, <2>, <3>, <4>, <9>, <0>, <1>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <11>. Unvisited neighbors of node <11> are [<10>, <7>, <5>, <6>, <2>, <3>, <4>].
Visit node <10>. Unvisited neighbors of node <10> are [<9>, <0>].
Visit node <7>. 
Visit node <5>. Unvisited neighbors of node <5> are [<1>].
Visit node <6>. Unvisited neighbors of node <6> are [<8>].
Visit node <2>. 
Visit node <3>. 
Visit node <4>. 
Visit node <9>. 
Visit node <0>. 
Visit node <1>. 
Visit node <8>. 
So the BFS traversal is ","('[[<11>, <10>, <7>, <5>, <6>, <2>, <9>, <1>, <0>, <4>, <8>, <3>], [<11>, <9>, <7>, <3>, <6>, <8>, <4>, <1>, <2>, <0>, <10>, <5>], [<11>, <10>, <7>, <5>, <9>, <0>, <1>, <8>, <6>, <2>, <3>, <4>], [<11>, <10>, <7>, <5>, <6>, <2>, <3>, <4>, <9>, <0>, <1>, <8>]]',)",3,151
BFS,"[(<4>, <5>), (<5>, <0>), (<5>, <2>), (<5>, <1>), (<0>, <7>), (<2>, <7>), (<2>, <1>), (<1>, <5>), (<1>, <0>), (<7>, <5>), (<7>, <0>), (<6>, <3>), (<6>, <1>), (<6>, <5>), (<3>, <1>), (<3>, <2>), (<3>, <6>)]","{<4>: [<5>],
<5>: [<0>, <2>, <1>],
<0>: [<7>],
<2>: [<7>, <1>],
<1>: [<5>, <0>],
<7>: [<5>, <0>],
<6>: [<3>, <1>, <5>],
<3>: [<1>, <2>, <6>]}","Node <4> is connected to node <5>.
Node <5> is connected to nodes <0>, <2>, <1>.
Node <0> is connected to node <7>.
Node <2> is connected to nodes <7>, <1>.
Node <1> is connected to nodes <5>, <0>.
Node <7> is connected to nodes <5>, <0>.
Node <6> is connected to nodes <3>, <1>, <5>.
Node <3> is connected to nodes <1>, <2>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,17,True,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <7>, <5>, <2>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<7>].
Visit node <7>. Unvisited neighbors of node <7> are [<5>].
Visit node <5>. Unvisited neighbors of node <5> are [<2>, <1>].
Visit node <2>. 
Visit node <1>. 
So the BFS traversal is ","('[[<0>, <7>, <5>, <2>, <1>], [<0>, <1>, <7>, <5>, <2>], [<0>, <1>, <5>, <2>, <7>], [<0>, <7>, <5>, <2>, <1>]]',)",3,152
BFS,"[(<11>, <6>), (<11>, <4>), (<6>, <3>), (<4>, <0>), (<4>, <2>), (<7>, <1>), (<7>, <2>), (<7>, <8>), (<2>, <5>), (<0>, <10>), (<0>, <9>)]","{<11>: [<6>, <4>],
<6>: [<11>, <3>],
<4>: [<11>, <0>, <2>],
<3>: [<6>],
<7>: [<1>, <2>, <8>],
<1>: [<7>],
<2>: [<7>, <4>, <5>],
<8>: [<7>],
<0>: [<4>, <10>, <9>],
<10>: [<0>],
<9>: [<0>],
<5>: [<2>]}","Node <11> is connected to nodes <6>, <4>.
Node <6> is connected to nodes <11>, <3>.
Node <4> is connected to nodes <11>, <0>, <2>.
Node <3> is connected to node <6>.
Node <7> is connected to nodes <1>, <2>, <8>.
Node <1> is connected to node <7>.
Node <2> is connected to nodes <7>, <4>, <5>.
Node <8> is connected to node <7>.
Node <0> is connected to nodes <4>, <10>, <9>.
Node <10> is connected to node <0>.
Node <9> is connected to node <0>.
Node <5> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,11,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <2>, <7>, <4>, <1>, <8>, <11>, <0>, <6>, <10>, <9>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<2>].
Visit node <2>. Unvisited neighbors of node <2> are [<7>, <4>].
Visit node <7>. Unvisited neighbors of node <7> are [<1>, <8>].
Visit node <4>. Unvisited neighbors of node <4> are [<11>, <0>].
Visit node <1>. 
Visit node <8>. 
Visit node <11>. Unvisited neighbors of node <11> are [<6>].
Visit node <0>. Unvisited neighbors of node <0> are [<10>, <9>].
Visit node <6>. Unvisited neighbors of node <6> are [<3>].
Visit node <10>. 
Visit node <9>. 
Visit node <3>. 
So the BFS traversal is ","('[[<5>, <2>, <7>, <4>, <6>, <10>, <9>, <3>, <1>, <8>, <11>, <0>], [<5>, <2>, <7>, <4>, <1>, <8>, <11>, <0>, <6>, <10>, <9>, <3>], [<5>, <2>, <7>, <4>, <1>, <8>, <9>, <0>, <3>, <6>, <10>, <11>], [<5>, <3>, <6>, <8>, <11>, <4>, <1>, <10>, <2>, <0>, <9>, <7>]]',)",1,153
BFS,"[(<7>, <0>), (<7>, <5>), (<7>, <6>), (<0>, <3>), (<0>, <5>), (<0>, <1>), (<5>, <6>), (<5>, <2>), (<5>, <4>), (<5>, <3>), (<6>, <1>), (<6>, <11>), (<3>, <9>), (<1>, <11>), (<1>, <4>), (<11>, <9>), (<11>, <10>), (<4>, <8>), (<9>, <8>), (<9>, <10>), (<9>, <2>), (<8>, <2>), (<8>, <10>), (<10>, <2>)]","{<7>: [<0>, <5>, <6>],
<0>: [<7>, <3>, <5>, <1>],
<5>: [<7>, <0>, <6>, <2>, <4>, <3>],
<6>: [<7>, <1>, <5>, <11>],
<3>: [<0>, <9>, <5>],
<1>: [<0>, <6>, <11>, <4>],
<11>: [<1>, <6>, <9>, <10>],
<4>: [<1>, <8>, <5>],
<9>: [<8>, <10>, <2>, <3>, <11>],
<8>: [<9>, <2>, <10>, <4>],
<10>: [<9>, <8>, <2>, <11>],
<2>: [<9>, <8>, <5>, <10>]}","Node <7> is connected to nodes <0>, <5>, <6>.
Node <0> is connected to nodes <7>, <3>, <5>, <1>.
Node <5> is connected to nodes <7>, <0>, <6>, <2>, <4>, <3>.
Node <6> is connected to nodes <7>, <1>, <5>, <11>.
Node <3> is connected to nodes <0>, <9>, <5>.
Node <1> is connected to nodes <0>, <6>, <11>, <4>.
Node <11> is connected to nodes <1>, <6>, <9>, <10>.
Node <4> is connected to nodes <1>, <8>, <5>.
Node <9> is connected to nodes <8>, <10>, <2>, <3>, <11>.
Node <8> is connected to nodes <9>, <2>, <10>, <4>.
Node <10> is connected to nodes <9>, <8>, <2>, <11>.
Node <2> is connected to nodes <9>, <8>, <5>, <10>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,24,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <0>, <9>, <5>, <7>, <1>, <8>, <10>, <2>, <11>, <6>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<0>, <9>, <5>].
Visit node <0>. Unvisited neighbors of node <0> are [<7>, <1>].
Visit node <9>. Unvisited neighbors of node <9> are [<8>, <10>, <2>, <11>].
Visit node <5>. Unvisited neighbors of node <5> are [<6>, <4>].
Visit node <7>. 
Visit node <1>. 
Visit node <8>. 
Visit node <10>. 
Visit node <2>. 
Visit node <11>. 
Visit node <6>. 
Visit node <4>. 
So the BFS traversal is ","('[[<3>, <0>, <9>, <5>, <7>, <1>, <2>, <10>, <8>, <4>, <6>, <11>], [<3>, <0>, <9>, <5>, <2>, <11>, <6>, <4>, <7>, <1>, <8>, <10>], [<3>, <0>, <6>, <5>, <9>, <2>, <7>, <11>, <8>, <10>, <4>, <1>], [<3>, <0>, <9>, <5>, <7>, <1>, <8>, <10>, <2>, <11>, <6>, <4>]]',)",3,154
BFS,"[(<7>, <8>), (<7>, <2>), (<7>, <4>), (<7>, <0>), (<7>, <5>), (<8>, <2>), (<8>, <6>), (<8>, <1>), (<8>, <4>), (<8>, <0>), (<8>, <9>), (<2>, <1>), (<2>, <3>), (<2>, <4>), (<2>, <0>), (<2>, <9>), (<4>, <1>), (<4>, <3>), (<4>, <0>), (<4>, <9>), (<0>, <6>), (<0>, <5>), (<5>, <6>), (<5>, <1>), (<5>, <3>), (<6>, <1>), (<1>, <3>), (<1>, <9>), (<9>, <3>)]","{<7>: [<8>, <2>, <4>, <0>, <5>],
<8>: [<7>, <2>, <6>, <1>, <4>, <0>, <9>],
<2>: [<7>, <8>, <1>, <3>, <4>, <0>, <9>],
<4>: [<7>, <8>, <2>, <1>, <3>, <0>, <9>],
<0>: [<7>, <8>, <2>, <6>, <4>, <5>],
<5>: [<7>, <6>, <1>, <3>, <0>],
<6>: [<8>, <1>, <0>, <5>],
<1>: [<8>, <2>, <6>, <3>, <4>, <9>, <5>],
<9>: [<8>, <2>, <1>, <3>, <4>],
<3>: [<2>, <1>, <4>, <9>, <5>]}","Node <7> is connected to nodes <8>, <2>, <4>, <0>, <5>.
Node <8> is connected to nodes <7>, <2>, <6>, <1>, <4>, <0>, <9>.
Node <2> is connected to nodes <7>, <8>, <1>, <3>, <4>, <0>, <9>.
Node <4> is connected to nodes <7>, <8>, <2>, <1>, <3>, <0>, <9>.
Node <0> is connected to nodes <7>, <8>, <2>, <6>, <4>, <5>.
Node <5> is connected to nodes <7>, <6>, <1>, <3>, <0>.
Node <6> is connected to nodes <8>, <1>, <0>, <5>.
Node <1> is connected to nodes <8>, <2>, <6>, <3>, <4>, <9>, <5>.
Node <9> is connected to nodes <8>, <2>, <1>, <3>, <4>.
Node <3> is connected to nodes <2>, <1>, <4>, <9>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,29,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <8>, <2>, <4>, <0>, <5>, <6>, <1>, <9>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<8>, <2>, <4>, <0>, <5>].
Visit node <8>. Unvisited neighbors of node <8> are [<6>, <1>, <9>].
Visit node <2>. Unvisited neighbors of node <2> are [<3>].
Visit node <4>. 
Visit node <0>. 
Visit node <5>. 
Visit node <6>. 
Visit node <1>. 
Visit node <9>. 
Visit node <3>. 
So the BFS traversal is ","('[[<7>, <9>, <2>, <1>, <0>, <5>, <8>, <3>, <6>, <4>], [<7>, <8>, <2>, <4>, <0>, <5>, <6>, <1>, <9>, <3>], [<7>, <8>, <2>, <1>, <9>, <3>, <4>, <0>, <5>, <6>], [<7>, <8>, <2>, <4>, <0>, <1>, <6>, <5>, <9>, <3>]]',)",1,155
BFS,"[(<9>, <4>), (<9>, <3>), (<9>, <7>), (<9>, <6>), (<9>, <1>), (<4>, <8>), (<4>, <5>), (<4>, <10>), (<4>, <0>), (<3>, <8>), (<3>, <7>), (<3>, <0>), (<7>, <8>), (<7>, <5>), (<7>, <10>), (<7>, <1>), (<6>, <5>), (<6>, <10>), (<6>, <1>), (<6>, <0>), (<1>, <8>), (<1>, <10>), (<1>, <2>), (<1>, <0>), (<8>, <5>), (<5>, <10>), (<5>, <2>), (<5>, <0>), (<10>, <0>), (<2>, <0>)]","{<9>: [<4>, <3>, <7>, <6>, <1>],
<4>: [<9>, <8>, <5>, <10>, <0>],
<3>: [<9>, <8>, <7>, <0>],
<7>: [<9>, <8>, <5>, <10>, <3>, <1>],
<6>: [<9>, <5>, <10>, <1>, <0>],
<1>: [<9>, <8>, <10>, <2>, <7>, <6>, <0>],
<8>: [<5>, <4>, <3>, <7>, <1>],
<5>: [<8>, <10>, <4>, <2>, <7>, <6>, <0>],
<10>: [<5>, <4>, <7>, <6>, <1>, <0>],
<2>: [<5>, <1>, <0>],
<0>: [<5>, <10>, <4>, <2>, <3>, <6>, <1>]}","Node <9> is connected to nodes <4>, <3>, <7>, <6>, <1>.
Node <4> is connected to nodes <9>, <8>, <5>, <10>, <0>.
Node <3> is connected to nodes <9>, <8>, <7>, <0>.
Node <7> is connected to nodes <9>, <8>, <5>, <10>, <3>, <1>.
Node <6> is connected to nodes <9>, <5>, <10>, <1>, <0>.
Node <1> is connected to nodes <9>, <8>, <10>, <2>, <7>, <6>, <0>.
Node <8> is connected to nodes <5>, <4>, <3>, <7>, <1>.
Node <5> is connected to nodes <8>, <10>, <4>, <2>, <7>, <6>, <0>.
Node <10> is connected to nodes <5>, <4>, <7>, <6>, <1>, <0>.
Node <2> is connected to nodes <5>, <1>, <0>.
Node <0> is connected to nodes <5>, <10>, <4>, <2>, <3>, <6>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,30,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <4>, <3>, <7>, <6>, <1>, <8>, <5>, <10>, <0>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<4>, <3>, <7>, <6>, <1>].
Visit node <4>. Unvisited neighbors of node <4> are [<8>, <5>, <10>, <0>].
Visit node <3>. 
Visit node <7>. 
Visit node <6>. 
Visit node <1>. Unvisited neighbors of node <1> are [<2>].
Visit node <8>. 
Visit node <5>. 
Visit node <10>. 
Visit node <0>. 
Visit node <2>. 
So the BFS traversal is ","('[[<9>, <4>, <3>, <7>, <6>, <1>, <8>, <5>, <10>, <0>, <2>], [<9>, <4>, <3>, <10>, <0>, <2>, <7>, <6>, <1>, <8>, <5>], [<9>, <4>, <3>, <7>, <6>, <2>, <1>, <5>, <0>, <10>, <8>], [<9>, <8>, <5>, <2>, <0>, <3>, <1>, <4>, <10>, <6>, <7>]]',)",0,156
BFS,"[(<5>, <1>), (<5>, <2>), (<1>, <6>), (<1>, <4>), (<2>, <3>), (<6>, <3>), (<6>, <0>), (<0>, <7>)]","{<5>: [<1>, <2>],
<1>: [<5>, <6>, <4>],
<2>: [<5>, <3>],
<6>: [<1>, <3>, <0>],
<4>: [<1>],
<3>: [<6>, <2>],
<0>: [<6>, <7>],
<7>: [<0>]}","Node <5> is connected to nodes <1>, <2>.
Node <1> is connected to nodes <5>, <6>, <4>.
Node <2> is connected to nodes <5>, <3>.
Node <6> is connected to nodes <1>, <3>, <0>.
Node <4> is connected to node <1>.
Node <3> is connected to nodes <6>, <2>.
Node <0> is connected to nodes <6>, <7>.
Node <7> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,8,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <5>, <3>, <1>, <6>, <4>, <0>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<5>, <3>].
Visit node <5>. Unvisited neighbors of node <5> are [<1>].
Visit node <3>. Unvisited neighbors of node <3> are [<6>].
Visit node <1>. Unvisited neighbors of node <1> are [<4>].
Visit node <6>. Unvisited neighbors of node <6> are [<0>].
Visit node <4>. 
Visit node <0>. Unvisited neighbors of node <0> are [<7>].
Visit node <7>. 
So the BFS traversal is ","('[[<2>, <5>, <3>, <1>, <6>, <4>, <0>, <7>], [<2>, <6>, <4>, <0>, <7>, <1>, <5>, <3>], [<2>, <5>, <0>, <7>, <3>, <1>, <6>, <4>], [<2>, <5>, <3>, <1>, <7>, <4>, <6>, <0>]]',)",0,157
BFS,"[(<9>, <5>), (<9>, <4>), (<5>, <7>), (<5>, <10>), (<4>, <2>), (<4>, <8>), (<4>, <11>), (<14>, <0>), (<14>, <11>), (<14>, <4>), (<0>, <5>), (<0>, <2>), (<0>, <7>), (<11>, <5>), (<11>, <6>), (<11>, <3>), (<11>, <0>), (<8>, <11>), (<8>, <10>), (<8>, <12>), (<8>, <4>), (<8>, <6>), (<10>, <12>), (<10>, <11>), (<12>, <4>), (<12>, <2>), (<12>, <9>), (<12>, <8>), (<6>, <4>), (<1>, <3>), (<1>, <7>), (<1>, <10>), (<1>, <12>), (<1>, <13>), (<1>, <2>), (<1>, <14>), (<3>, <12>), (<3>, <13>), (<3>, <14>), (<7>, <5>), (<7>, <9>), (<7>, <1>), (<13>, <14>), (<13>, <3>), (<13>, <10>), (<13>, <4>), (<2>, <9>), (<2>, <0>), (<2>, <6>)]","{<9>: [<5>, <4>],
<5>: [<7>, <10>],
<4>: [<2>, <8>, <11>],
<14>: [<0>, <11>, <4>],
<0>: [<5>, <2>, <7>],
<11>: [<5>, <6>, <3>, <0>],
<8>: [<11>, <10>, <12>, <4>, <6>],
<10>: [<12>, <11>],
<12>: [<4>, <2>, <9>, <8>],
<6>: [<4>],
<1>: [<3>, <7>, <10>, <12>, <13>, <2>, <14>],
<3>: [<12>, <13>, <14>],
<7>: [<5>, <9>, <1>],
<13>: [<14>, <3>, <10>, <4>],
<2>: [<9>, <0>, <6>]}","Node <9> is connected to nodes <5>, <4>.
Node <5> is connected to nodes <7>, <10>.
Node <4> is connected to nodes <2>, <8>, <11>.
Node <14> is connected to nodes <0>, <11>, <4>.
Node <0> is connected to nodes <5>, <2>, <7>.
Node <11> is connected to nodes <5>, <6>, <3>, <0>.
Node <8> is connected to nodes <11>, <10>, <12>, <4>, <6>.
Node <10> is connected to nodes <12>, <11>.
Node <12> is connected to nodes <4>, <2>, <9>, <8>.
Node <6> is connected to node <4>.
Node <1> is connected to nodes <3>, <7>, <10>, <12>, <13>, <2>, <14>.
Node <3> is connected to nodes <12>, <13>, <14>.
Node <7> is connected to nodes <5>, <9>, <1>.
Node <13> is connected to nodes <14>, <3>, <10>, <4>.
Node <2> is connected to nodes <9>, <0>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,49,True,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <3>, <7>, <10>, <12>, <13>, <2>, <14>, <5>, <9>, <11>, <4>, <8>, <0>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<3>, <7>, <10>, <12>, <13>, <2>, <14>].
Visit node <3>. 
Visit node <7>. Unvisited neighbors of node <7> are [<5>, <9>].
Visit node <10>. Unvisited neighbors of node <10> are [<11>].
Visit node <12>. Unvisited neighbors of node <12> are [<4>, <8>].
Visit node <13>. 
Visit node <2>. Unvisited neighbors of node <2> are [<0>, <6>].
Visit node <14>. 
Visit node <5>. 
Visit node <9>. 
Visit node <11>. 
Visit node <4>. 
Visit node <8>. 
Visit node <0>. 
Visit node <6>. 
So the BFS traversal is ","('[[<1>, <3>, <7>, <10>, <12>, <13>, <2>, <14>, <5>, <9>, <11>, <4>, <8>, <0>, <6>], [<1>, <3>, <7>, <10>, <12>, <11>, <4>, <8>, <0>, <6>, <13>, <2>, <14>, <5>, <9>], [<1>, <3>, <7>, <10>, <12>, <13>, <2>, <5>, <4>, <8>, <11>, <0>, <9>, <6>, <14>], [<1>, <6>, <10>, <2>, <7>, <0>, <8>, <9>, <12>, <13>, <11>, <5>, <3>, <14>, <4>]]',)",0,158
BFS,"[(<9>, <7>), (<9>, <12>), (<9>, <13>), (<9>, <11>), (<9>, <2>), (<9>, <10>), (<9>, <8>), (<9>, <0>), (<9>, <3>), (<9>, <5>), (<7>, <6>), (<7>, <10>), (<7>, <4>), (<7>, <1>), (<7>, <0>), (<7>, <11>), (<12>, <11>), (<12>, <0>), (<13>, <11>), (<13>, <0>), (<11>, <4>), (<11>, <0>), (<11>, <2>), (<2>, <8>), (<2>, <5>), (<2>, <1>), (<10>, <6>), (<10>, <1>), (<8>, <3>), (<8>, <6>), (<8>, <1>), (<0>, <5>), (<5>, <4>)]","{<9>: [<7>, <12>, <13>, <11>, <2>, <10>, <8>, <0>, <3>, <5>],
<7>: [<9>, <6>, <10>, <4>, <1>, <0>, <11>],
<12>: [<9>, <11>, <0>],
<13>: [<9>, <11>, <0>],
<11>: [<9>, <7>, <4>, <0>, <13>, <12>, <2>],
<2>: [<9>, <11>, <8>, <5>, <1>],
<10>: [<9>, <7>, <6>, <1>],
<8>: [<9>, <3>, <2>, <6>, <1>],
<0>: [<9>, <7>, <11>, <12>, <13>, <5>],
<3>: [<9>, <8>],
<5>: [<9>, <4>, <0>, <2>],
<6>: [<7>, <8>, <10>],
<4>: [<7>, <11>, <5>],
<1>: [<7>, <8>, <10>, <2>]}","Node <9> is connected to nodes <7>, <12>, <13>, <11>, <2>, <10>, <8>, <0>, <3>, <5>.
Node <7> is connected to nodes <9>, <6>, <10>, <4>, <1>, <0>, <11>.
Node <12> is connected to nodes <9>, <11>, <0>.
Node <13> is connected to nodes <9>, <11>, <0>.
Node <11> is connected to nodes <9>, <7>, <4>, <0>, <13>, <12>, <2>.
Node <2> is connected to nodes <9>, <11>, <8>, <5>, <1>.
Node <10> is connected to nodes <9>, <7>, <6>, <1>.
Node <8> is connected to nodes <9>, <3>, <2>, <6>, <1>.
Node <0> is connected to nodes <9>, <7>, <11>, <12>, <13>, <5>.
Node <3> is connected to nodes <9>, <8>.
Node <5> is connected to nodes <9>, <4>, <0>, <2>.
Node <6> is connected to nodes <7>, <8>, <10>.
Node <4> is connected to nodes <7>, <11>, <5>.
Node <1> is connected to nodes <7>, <8>, <10>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,33,False,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <7>, <8>, <10>, <2>, <9>, <6>, <4>, <0>, <11>, <3>, <5>, <12>, <13>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<7>, <8>, <10>, <2>].
Visit node <7>. Unvisited neighbors of node <7> are [<9>, <6>, <4>, <0>, <11>].
Visit node <8>. Unvisited neighbors of node <8> are [<3>].
Visit node <10>. 
Visit node <2>. Unvisited neighbors of node <2> are [<5>].
Visit node <9>. Unvisited neighbors of node <9> are [<12>, <13>].
Visit node <6>. 
Visit node <4>. 
Visit node <0>. 
Visit node <11>. 
Visit node <3>. 
Visit node <5>. 
Visit node <12>. 
Visit node <13>. 
So the BFS traversal is ","('[[<1>, <7>, <8>, <10>, <2>, <9>, <6>, <4>, <0>, <11>, <3>, <5>, <12>, <13>], [<1>, <7>, <8>, <10>, <2>, <9>, <6>, <5>, <13>, <4>, <12>, <0>, <3>, <11>], [<1>, <7>, <8>, <10>, <3>, <5>, <12>, <13>, <2>, <9>, <6>, <4>, <0>, <11>], [<1>, <11>, <12>, <13>, <10>, <5>, <0>, <7>, <9>, <4>, <6>, <3>, <8>, <2>]]',)",0,159
BFS,"[(<1>, <14>), (<1>, <10>), (<1>, <2>), (<14>, <1>), (<14>, <4>), (<14>, <3>), (<10>, <12>), (<10>, <6>), (<10>, <1>), (<10>, <9>), (<10>, <0>), (<10>, <11>), (<10>, <13>), (<10>, <5>), (<10>, <14>), (<2>, <6>), (<2>, <4>), (<2>, <0>), (<2>, <11>), (<9>, <4>), (<9>, <0>), (<9>, <5>), (<9>, <12>), (<4>, <11>), (<4>, <3>), (<4>, <2>), (<4>, <1>), (<0>, <3>), (<0>, <4>), (<5>, <14>), (<5>, <11>), (<12>, <9>), (<12>, <5>), (<11>, <13>), (<11>, <8>), (<11>, <10>), (<11>, <4>), (<3>, <2>), (<3>, <6>), (<3>, <0>), (<8>, <1>), (<8>, <9>), (<8>, <0>), (<8>, <11>), (<8>, <7>), (<8>, <5>), (<8>, <14>), (<7>, <2>), (<6>, <9>), (<6>, <13>), (<6>, <3>), (<6>, <14>)]","{<1>: [<14>, <10>, <2>],
<14>: [<1>, <4>, <3>],
<10>: [<12>, <6>, <1>, <9>, <0>, <11>, <13>, <5>, <14>],
<2>: [<6>, <4>, <0>, <11>],
<9>: [<4>, <0>, <5>, <12>],
<4>: [<11>, <3>, <2>, <1>],
<0>: [<3>, <4>],
<5>: [<14>, <11>],
<12>: [<9>, <5>],
<11>: [<13>, <8>, <10>, <4>],
<3>: [<2>, <6>, <0>],
<13>: [],
<8>: [<1>, <9>, <0>, <11>, <7>, <5>, <14>],
<7>: [<2>],
<6>: [<9>, <13>, <3>, <14>]}","Node <1> is connected to nodes <14>, <10>, <2>.
Node <14> is connected to nodes <1>, <4>, <3>.
Node <10> is connected to nodes <12>, <6>, <1>, <9>, <0>, <11>, <13>, <5>, <14>.
Node <2> is connected to nodes <6>, <4>, <0>, <11>.
Node <9> is connected to nodes <4>, <0>, <5>, <12>.
Node <4> is connected to nodes <11>, <3>, <2>, <1>.
Node <0> is connected to nodes <3>, <4>.
Node <5> is connected to nodes <14>, <11>.
Node <12> is connected to nodes <9>, <5>.
Node <11> is connected to nodes <13>, <8>, <10>, <4>.
Node <3> is connected to nodes <2>, <6>, <0>.
Node <8> is connected to nodes <1>, <9>, <0>, <11>, <7>, <5>, <14>.
Node <7> is connected to node <2>.
Node <6> is connected to nodes <9>, <13>, <3>, <14>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,52,True,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <6>, <4>, <0>, <11>, <9>, <13>, <3>, <14>, <1>, <8>, <10>, <5>, <12>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<6>, <4>, <0>, <11>].
Visit node <6>. Unvisited neighbors of node <6> are [<9>, <13>, <3>, <14>].
Visit node <4>. Unvisited neighbors of node <4> are [<1>].
Visit node <0>. 
Visit node <11>. Unvisited neighbors of node <11> are [<8>, <10>].
Visit node <9>. Unvisited neighbors of node <9> are [<5>, <12>].
Visit node <13>. 
Visit node <3>. 
Visit node <14>. 
Visit node <1>. 
Visit node <8>. Unvisited neighbors of node <8> are [<7>].
Visit node <10>. 
Visit node <5>. 
Visit node <12>. 
Visit node <7>. 
So the BFS traversal is ","('[[<2>, <6>, <4>, <0>, <11>, <9>, <13>, <3>, <14>, <1>, <8>, <10>, <5>, <12>, <7>], [<2>, <6>, <4>, <0>, <11>, <8>, <10>, <5>, <12>, <7>, <9>, <13>, <3>, <14>, <1>], [<2>, <4>, <6>, <3>, <13>, <7>, <0>, <1>, <10>, <14>, <5>, <12>, <11>, <9>, <8>], [<2>, <6>, <4>, <0>, <11>, <9>, <13>, <10>, <14>, <5>, <7>, <12>, <1>, <3>, <8>]]',)",0,160
BFS,"[(<7>, <2>), (<7>, <6>), (<7>, <3>), (<7>, <0>), (<7>, <5>), (<2>, <1>), (<6>, <4>)]","{<7>: [<2>, <6>, <3>, <0>, <5>],
<2>: [<7>, <1>],
<6>: [<7>, <4>],
<3>: [<7>],
<0>: [<7>],
<5>: [<7>],
<1>: [<2>],
<4>: [<6>]}","Node <7> is connected to nodes <2>, <6>, <3>, <0>, <5>.
Node <2> is connected to nodes <7>, <1>.
Node <6> is connected to nodes <7>, <4>.
Node <3> is connected to node <7>.
Node <0> is connected to node <7>.
Node <5> is connected to node <7>.
Node <1> is connected to node <2>.
Node <4> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,7,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <7>, <2>, <6>, <3>, <0>, <1>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<7>].
Visit node <7>. Unvisited neighbors of node <7> are [<2>, <6>, <3>, <0>].
Visit node <2>. Unvisited neighbors of node <2> are [<1>].
Visit node <6>. Unvisited neighbors of node <6> are [<4>].
Visit node <3>. 
Visit node <0>. 
Visit node <1>. 
Visit node <4>. 
So the BFS traversal is ","('[[<5>, <7>, <2>, <6>, <1>, <4>, <3>, <0>], [<5>, <7>, <1>, <4>, <2>, <6>, <3>, <0>], [<5>, <7>, <2>, <6>, <3>, <0>, <1>, <4>], [<5>, <7>, <3>, <2>, <4>, <0>, <1>, <6>]]',)",2,161
BFS,"[(<7>, <4>), (<7>, <0>), (<7>, <6>), (<7>, <2>), (<7>, <1>), (<7>, <8>), (<4>, <3>), (<4>, <0>), (<0>, <3>), (<0>, <1>), (<0>, <9>), (<6>, <2>), (<6>, <8>), (<2>, <10>), (<2>, <9>), (<2>, <3>), (<1>, <10>), (<8>, <9>), (<8>, <5>), (<3>, <5>), (<9>, <5>), (<10>, <5>)]","{<7>: [<4>, <0>, <6>, <2>, <1>, <8>],
<4>: [<7>, <3>, <0>],
<0>: [<7>, <4>, <3>, <1>, <9>],
<6>: [<7>, <2>, <8>],
<2>: [<7>, <10>, <6>, <9>, <3>],
<1>: [<7>, <0>, <10>],
<8>: [<7>, <9>, <5>, <6>],
<3>: [<4>, <0>, <2>, <5>],
<9>: [<0>, <2>, <8>, <5>],
<10>: [<2>, <1>, <5>],
<5>: [<10>, <9>, <8>, <3>]}","Node <7> is connected to nodes <4>, <0>, <6>, <2>, <1>, <8>.
Node <4> is connected to nodes <7>, <3>, <0>.
Node <0> is connected to nodes <7>, <4>, <3>, <1>, <9>.
Node <6> is connected to nodes <7>, <2>, <8>.
Node <2> is connected to nodes <7>, <10>, <6>, <9>, <3>.
Node <1> is connected to nodes <7>, <0>, <10>.
Node <8> is connected to nodes <7>, <9>, <5>, <6>.
Node <3> is connected to nodes <4>, <0>, <2>, <5>.
Node <9> is connected to nodes <0>, <2>, <8>, <5>.
Node <10> is connected to nodes <2>, <1>, <5>.
Node <5> is connected to nodes <10>, <9>, <8>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,22,False,"Start from node <10>, output a sequence of traversal in breadth-first search (BFS) order.","[<10>, <2>, <1>, <5>, <7>, <6>, <9>, <3>, <0>, <8>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <10>. Unvisited neighbors of node <10> are [<2>, <1>, <5>].
Visit node <2>. Unvisited neighbors of node <2> are [<7>, <6>, <9>, <3>].
Visit node <1>. Unvisited neighbors of node <1> are [<0>].
Visit node <5>. Unvisited neighbors of node <5> are [<8>].
Visit node <7>. Unvisited neighbors of node <7> are [<4>].
Visit node <6>. 
Visit node <9>. 
Visit node <3>. 
Visit node <0>. 
Visit node <8>. 
Visit node <4>. 
So the BFS traversal is ","('[[<10>, <0>, <9>, <8>, <7>, <2>, <5>, <4>, <1>, <3>, <6>], [<10>, <2>, <1>, <5>, <7>, <6>, <9>, <3>, <0>, <8>, <4>], [<10>, <2>, <1>, <5>, <7>, <6>, <4>, <3>, <8>, <9>, <0>], [<10>, <2>, <1>, <0>, <8>, <4>, <5>, <7>, <6>, <9>, <3>]]',)",1,162
BFS,"[(<8>, <7>), (<8>, <5>), (<8>, <11>), (<8>, <0>), (<7>, <1>), (<7>, <5>), (<7>, <4>), (<5>, <0>), (<5>, <9>), (<11>, <0>), (<11>, <2>), (<11>, <7>), (<11>, <5>), (<11>, <6>), (<11>, <10>), (<0>, <9>), (<2>, <1>), (<2>, <5>), (<2>, <6>), (<2>, <10>), (<2>, <11>), (<1>, <9>), (<1>, <5>), (<1>, <4>), (<1>, <8>), (<1>, <2>), (<1>, <7>), (<6>, <11>), (<6>, <7>), (<6>, <9>), (<6>, <4>), (<10>, <3>), (<10>, <0>), (<10>, <8>), (<10>, <7>), (<10>, <1>), (<10>, <9>), (<10>, <6>), (<4>, <7>), (<9>, <4>), (<9>, <6>), (<9>, <1>), (<3>, <2>), (<3>, <1>)]","{<8>: [<7>, <5>, <11>, <0>],
<7>: [<1>, <5>, <4>],
<5>: [<0>, <9>],
<11>: [<0>, <2>, <7>, <5>, <6>, <10>],
<0>: [<9>],
<2>: [<1>, <5>, <6>, <10>, <11>],
<1>: [<9>, <5>, <4>, <8>, <2>, <7>],
<6>: [<11>, <7>, <9>, <4>],
<10>: [<3>, <0>, <8>, <7>, <1>, <9>, <6>],
<4>: [<7>],
<9>: [<4>, <6>, <1>],
<3>: [<2>, <1>]}","Node <8> is connected to nodes <7>, <5>, <11>, <0>.
Node <7> is connected to nodes <1>, <5>, <4>.
Node <5> is connected to nodes <0>, <9>.
Node <11> is connected to nodes <0>, <2>, <7>, <5>, <6>, <10>.
Node <0> is connected to node <9>.
Node <2> is connected to nodes <1>, <5>, <6>, <10>, <11>.
Node <1> is connected to nodes <9>, <5>, <4>, <8>, <2>, <7>.
Node <6> is connected to nodes <11>, <7>, <9>, <4>.
Node <10> is connected to nodes <3>, <0>, <8>, <7>, <1>, <9>, <6>.
Node <4> is connected to node <7>.
Node <9> is connected to nodes <4>, <6>, <1>.
Node <3> is connected to nodes <2>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,44,True,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <9>, <5>, <4>, <8>, <2>, <7>, <6>, <0>, <11>, <10>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<9>, <5>, <4>, <8>, <2>, <7>].
Visit node <9>. Unvisited neighbors of node <9> are [<6>].
Visit node <5>. Unvisited neighbors of node <5> are [<0>].
Visit node <4>. 
Visit node <8>. Unvisited neighbors of node <8> are [<11>].
Visit node <2>. Unvisited neighbors of node <2> are [<10>].
Visit node <7>. 
Visit node <6>. 
Visit node <0>. 
Visit node <11>. 
Visit node <10>. Unvisited neighbors of node <10> are [<3>].
Visit node <3>. 
So the BFS traversal is ","('[[<1>, <9>, <5>, <4>, <8>, <2>, <7>, <6>, <0>, <11>, <10>, <3>], [<1>, <9>, <5>, <4>, <0>, <11>, <10>, <3>, <8>, <2>, <7>, <6>], [<1>, <2>, <8>, <0>, <6>, <3>, <10>, <5>, <11>, <7>, <4>, <9>], [<1>, <9>, <5>, <4>, <8>, <2>, <10>, <3>, <7>, <6>, <0>, <11>]]',)",0,163
BFS,"[(<6>, <8>), (<6>, <11>), (<6>, <10>), (<8>, <1>), (<8>, <3>), (<8>, <14>), (<8>, <5>), (<8>, <6>), (<11>, <10>), (<11>, <5>), (<10>, <3>), (<10>, <14>), (<10>, <13>), (<10>, <4>), (<1>, <8>), (<1>, <0>), (<3>, <2>), (<3>, <4>), (<14>, <5>), (<14>, <6>), (<14>, <11>), (<14>, <12>), (<14>, <2>), (<5>, <0>), (<5>, <10>), (<5>, <3>), (<0>, <4>), (<0>, <3>), (<4>, <6>), (<12>, <6>), (<12>, <11>), (<13>, <6>), (<13>, <0>), (<13>, <2>), (<2>, <5>), (<2>, <0>), (<2>, <4>), (<2>, <12>), (<7>, <11>), (<7>, <12>), (<7>, <3>), (<9>, <11>)]","{<6>: [<8>, <11>, <10>],
<8>: [<1>, <3>, <14>, <5>, <6>],
<11>: [<10>, <5>],
<10>: [<3>, <14>, <13>, <4>],
<1>: [<8>, <0>],
<3>: [<2>, <4>],
<14>: [<5>, <6>, <11>, <12>, <2>],
<5>: [<0>, <10>, <3>],
<0>: [<4>, <3>],
<4>: [<6>],
<12>: [<6>, <11>],
<13>: [<6>, <0>, <2>],
<2>: [<5>, <0>, <4>, <12>],
<7>: [<11>, <12>, <3>],
<9>: [<11>]}","Node <6> is connected to nodes <8>, <11>, <10>.
Node <8> is connected to nodes <1>, <3>, <14>, <5>, <6>.
Node <11> is connected to nodes <10>, <5>.
Node <10> is connected to nodes <3>, <14>, <13>, <4>.
Node <1> is connected to nodes <8>, <0>.
Node <3> is connected to nodes <2>, <4>.
Node <14> is connected to nodes <5>, <6>, <11>, <12>, <2>.
Node <5> is connected to nodes <0>, <10>, <3>.
Node <0> is connected to nodes <4>, <3>.
Node <4> is connected to node <6>.
Node <12> is connected to nodes <6>, <11>.
Node <13> is connected to nodes <6>, <0>, <2>.
Node <2> is connected to nodes <5>, <0>, <4>, <12>.
Node <7> is connected to nodes <11>, <12>, <3>.
Node <9> is connected to node <11>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,42,True,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <4>, <3>, <6>, <2>, <8>, <11>, <10>, <5>, <12>, <1>, <14>, <13>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<4>, <3>].
Visit node <4>. Unvisited neighbors of node <4> are [<6>].
Visit node <3>. Unvisited neighbors of node <3> are [<2>].
Visit node <6>. Unvisited neighbors of node <6> are [<8>, <11>, <10>].
Visit node <2>. Unvisited neighbors of node <2> are [<5>, <12>].
Visit node <8>. Unvisited neighbors of node <8> are [<1>, <14>].
Visit node <11>. 
Visit node <10>. Unvisited neighbors of node <10> are [<13>].
Visit node <5>. 
Visit node <12>. 
Visit node <1>. 
Visit node <14>. 
Visit node <13>. 
So the BFS traversal is ","('[[<0>, <4>, <3>, <6>, <2>, <8>, <11>, <10>, <5>, <12>, <1>, <14>, <13>], [<0>, <4>, <3>, <6>, <12>, <1>, <14>, <13>, <2>, <8>, <11>, <10>, <5>], [<0>, <4>, <3>, <6>, <2>, <8>, <13>, <10>, <1>, <5>, <12>, <14>, <11>], [<0>, <11>, <8>, <3>, <2>, <14>, <5>, <1>, <10>, <6>, <13>, <12>, <4>]]',)",0,164
BFS,"[(<1>, <4>), (<1>, <10>), (<4>, <12>), (<4>, <5>), (<10>, <2>), (<12>, <7>), (<12>, <9>), (<8>, <6>), (<8>, <0>), (<6>, <13>), (<0>, <11>), (<13>, <3>), (<7>, <11>), (<9>, <14>), (<3>, <2>)]","{<1>: [<4>, <10>],
<4>: [<1>, <12>, <5>],
<10>: [<1>, <2>],
<12>: [<4>, <7>, <9>],
<5>: [<4>],
<8>: [<6>, <0>],
<6>: [<8>, <13>],
<0>: [<8>, <11>],
<13>: [<6>, <3>],
<7>: [<12>, <11>],
<9>: [<12>, <14>],
<11>: [<7>, <0>],
<3>: [<2>, <13>],
<2>: [<3>, <10>],
<14>: [<9>]}","Node <1> is connected to nodes <4>, <10>.
Node <4> is connected to nodes <1>, <12>, <5>.
Node <10> is connected to nodes <1>, <2>.
Node <12> is connected to nodes <4>, <7>, <9>.
Node <5> is connected to node <4>.
Node <8> is connected to nodes <6>, <0>.
Node <6> is connected to nodes <8>, <13>.
Node <0> is connected to nodes <8>, <11>.
Node <13> is connected to nodes <6>, <3>.
Node <7> is connected to nodes <12>, <11>.
Node <9> is connected to nodes <12>, <14>.
Node <11> is connected to nodes <7>, <0>.
Node <3> is connected to nodes <2>, <13>.
Node <2> is connected to nodes <3>, <10>.
Node <14> is connected to node <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,15,False,"Start from node <12>, output a sequence of traversal in breadth-first search (BFS) order.","[<12>, <4>, <7>, <9>, <1>, <5>, <11>, <14>, <10>, <0>, <2>, <8>, <3>, <6>, <13>]","Let's run breadth-first search (BFS) step by step.
Visit node <12>. Unvisited neighbors of node <12> are [<4>, <7>, <9>].
Visit node <4>. Unvisited neighbors of node <4> are [<1>, <5>].
Visit node <7>. Unvisited neighbors of node <7> are [<11>].
Visit node <9>. Unvisited neighbors of node <9> are [<14>].
Visit node <1>. Unvisited neighbors of node <1> are [<10>].
Visit node <5>. 
Visit node <11>. Unvisited neighbors of node <11> are [<0>].
Visit node <14>. 
Visit node <10>. Unvisited neighbors of node <10> are [<2>].
Visit node <0>. Unvisited neighbors of node <0> are [<8>].
Visit node <2>. Unvisited neighbors of node <2> are [<3>].
Visit node <8>. Unvisited neighbors of node <8> are [<6>].
Visit node <3>. Unvisited neighbors of node <3> are [<13>].
Visit node <6>. 
Visit node <13>. 
So the BFS traversal is ","('[[<12>, <4>, <7>, <9>, <1>, <2>, <8>, <3>, <6>, <13>, <5>, <11>, <14>, <10>, <0>], [<12>, <4>, <7>, <9>, <1>, <5>, <11>, <0>, <6>, <10>, <13>, <3>, <14>, <2>, <8>], [<12>, <4>, <7>, <9>, <1>, <5>, <11>, <14>, <10>, <0>, <2>, <8>, <3>, <6>, <13>], [<12>, <7>, <1>, <9>, <8>, <5>, <0>, <4>, <14>, <3>, <11>, <13>, <2>, <10>, <6>]]',)",2,165
BFS,"[(<6>, <1>), (<9>, <5>), (<9>, <8>), (<5>, <7>), (<5>, <4>), (<2>, <9>), (<3>, <4>), (<3>, <8>), (<3>, <9>), (<3>, <2>), (<0>, <5>), (<0>, <7>), (<0>, <6>), (<0>, <2>), (<0>, <3>), (<7>, <1>), (<7>, <9>)]","{<6>: [<1>],
<1>: [],
<9>: [<5>, <8>],
<5>: [<7>, <4>],
<8>: [],
<2>: [<9>],
<3>: [<4>, <8>, <9>, <2>],
<4>: [],
<0>: [<5>, <7>, <6>, <2>, <3>],
<7>: [<1>, <9>]}","Node <6> is connected to node <1>.
Node <9> is connected to nodes <5>, <8>.
Node <5> is connected to nodes <7>, <4>.
Node <2> is connected to node <9>.
Node <3> is connected to nodes <4>, <8>, <9>, <2>.
Node <0> is connected to nodes <5>, <7>, <6>, <2>, <3>.
Node <7> is connected to nodes <1>, <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,17,True,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <7>, <4>, <1>, <9>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<7>, <4>].
Visit node <7>. Unvisited neighbors of node <7> are [<1>, <9>].
Visit node <4>. 
Visit node <1>. 
Visit node <9>. Unvisited neighbors of node <9> are [<8>].
Visit node <8>. 
So the BFS traversal is ","('[[<5>, <7>, <9>, <8>, <1>, <4>], [<5>, <7>, <4>, <1>, <9>, <8>], [<5>, <7>, <9>, <8>, <4>, <1>], [<5>, <7>, <4>, <1>, <8>, <9>]]',)",1,166
BFS,"[(<11>, <0>), (<11>, <4>), (<4>, <12>), (<4>, <2>), (<4>, <7>), (<9>, <6>), (<9>, <10>), (<10>, <2>), (<12>, <8>), (<12>, <1>), (<1>, <3>), (<2>, <5>)]","{<11>: [<0>, <4>],
<0>: [<11>],
<4>: [<11>, <12>, <2>, <7>],
<9>: [<6>, <10>],
<6>: [<9>],
<10>: [<9>, <2>],
<12>: [<8>, <1>, <4>],
<8>: [<12>],
<1>: [<12>, <3>],
<2>: [<4>, <5>, <10>],
<7>: [<4>],
<5>: [<2>],
<3>: [<1>]}","Node <11> is connected to nodes <0>, <4>.
Node <0> is connected to node <11>.
Node <4> is connected to nodes <11>, <12>, <2>, <7>.
Node <9> is connected to nodes <6>, <10>.
Node <6> is connected to node <9>.
Node <10> is connected to nodes <9>, <2>.
Node <12> is connected to nodes <8>, <1>, <4>.
Node <8> is connected to node <12>.
Node <1> is connected to nodes <12>, <3>.
Node <2> is connected to nodes <4>, <5>, <10>.
Node <7> is connected to node <4>.
Node <5> is connected to node <2>.
Node <3> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,12,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <2>, <4>, <10>, <11>, <12>, <7>, <9>, <0>, <8>, <1>, <6>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<2>].
Visit node <2>. Unvisited neighbors of node <2> are [<4>, <10>].
Visit node <4>. Unvisited neighbors of node <4> are [<11>, <12>, <7>].
Visit node <10>. Unvisited neighbors of node <10> are [<9>].
Visit node <11>. Unvisited neighbors of node <11> are [<0>].
Visit node <12>. Unvisited neighbors of node <12> are [<8>, <1>].
Visit node <7>. 
Visit node <9>. Unvisited neighbors of node <9> are [<6>].
Visit node <0>. 
Visit node <8>. 
Visit node <1>. Unvisited neighbors of node <1> are [<3>].
Visit node <6>. 
Visit node <3>. 
So the BFS traversal is ","('[[<5>, <8>, <7>, <12>, <2>, <1>, <6>, <3>, <9>, <0>, <11>, <4>, <10>], [<5>, <2>, <4>, <10>, <8>, <1>, <6>, <3>, <11>, <12>, <7>, <9>, <0>], [<5>, <2>, <4>, <10>, <11>, <12>, <7>, <3>, <8>, <9>, <0>, <6>, <1>], [<5>, <2>, <4>, <10>, <11>, <12>, <7>, <9>, <0>, <8>, <1>, <6>, <3>]]',)",3,167
BFS,"[(<11>, <4>), (<11>, <9>), (<11>, <13>), (<11>, <14>), (<4>, <12>), (<4>, <1>), (<4>, <10>), (<9>, <7>), (<9>, <2>), (<9>, <10>), (<9>, <13>), (<13>, <2>), (<13>, <3>), (<13>, <6>), (<13>, <0>), (<14>, <6>), (<12>, <8>), (<12>, <10>), (<1>, <3>), (<1>, <8>), (<1>, <0>), (<10>, <5>), (<7>, <2>), (<7>, <0>), (<7>, <6>), (<0>, <6>), (<0>, <8>), (<6>, <3>), (<6>, <5>), (<3>, <5>)]","{<11>: [<4>, <9>, <13>, <14>],
<4>: [<11>, <12>, <1>, <10>],
<9>: [<11>, <7>, <2>, <10>, <13>],
<13>: [<11>, <2>, <9>, <3>, <6>, <0>],
<14>: [<11>, <6>],
<12>: [<4>, <8>, <10>],
<1>: [<4>, <3>, <8>, <0>],
<10>: [<4>, <9>, <12>, <5>],
<7>: [<2>, <9>, <0>, <6>],
<2>: [<7>, <13>, <9>],
<0>: [<7>, <1>, <6>, <8>, <13>],
<6>: [<7>, <3>, <14>, <13>, <5>, <0>],
<3>: [<1>, <6>, <13>, <5>],
<8>: [<1>, <12>, <0>],
<5>: [<3>, <6>, <10>]}","Node <11> is connected to nodes <4>, <9>, <13>, <14>.
Node <4> is connected to nodes <11>, <12>, <1>, <10>.
Node <9> is connected to nodes <11>, <7>, <2>, <10>, <13>.
Node <13> is connected to nodes <11>, <2>, <9>, <3>, <6>, <0>.
Node <14> is connected to nodes <11>, <6>.
Node <12> is connected to nodes <4>, <8>, <10>.
Node <1> is connected to nodes <4>, <3>, <8>, <0>.
Node <10> is connected to nodes <4>, <9>, <12>, <5>.
Node <7> is connected to nodes <2>, <9>, <0>, <6>.
Node <2> is connected to nodes <7>, <13>, <9>.
Node <0> is connected to nodes <7>, <1>, <6>, <8>, <13>.
Node <6> is connected to nodes <7>, <3>, <14>, <13>, <5>, <0>.
Node <3> is connected to nodes <1>, <6>, <13>, <5>.
Node <8> is connected to nodes <1>, <12>, <0>.
Node <5> is connected to nodes <3>, <6>, <10>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,30,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <2>, <9>, <0>, <6>, <13>, <11>, <10>, <1>, <8>, <3>, <14>, <5>, <4>, <12>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<2>, <9>, <0>, <6>].
Visit node <2>. Unvisited neighbors of node <2> are [<13>].
Visit node <9>. Unvisited neighbors of node <9> are [<11>, <10>].
Visit node <0>. Unvisited neighbors of node <0> are [<1>, <8>].
Visit node <6>. Unvisited neighbors of node <6> are [<3>, <14>, <5>].
Visit node <13>. 
Visit node <11>. Unvisited neighbors of node <11> are [<4>].
Visit node <10>. Unvisited neighbors of node <10> are [<12>].
Visit node <1>. 
Visit node <8>. 
Visit node <3>. 
Visit node <14>. 
Visit node <5>. 
Visit node <4>. 
Visit node <12>. 
So the BFS traversal is ","('[[<7>, <2>, <9>, <0>, <6>, <3>, <14>, <5>, <4>, <12>, <13>, <11>, <10>, <1>, <8>], [<7>, <13>, <14>, <3>, <10>, <11>, <12>, <6>, <9>, <0>, <2>, <1>, <8>, <5>, <4>], [<7>, <2>, <9>, <0>, <6>, <13>, <11>, <10>, <1>, <8>, <3>, <14>, <5>, <4>, <12>], [<7>, <2>, <9>, <0>, <6>, <13>, <11>, <12>, <3>, <10>, <5>, <8>, <14>, <4>, <1>]]',)",2,168
BFS,"[(<0>, <3>), (<3>, <5>), (<3>, <7>), (<5>, <7>), (<7>, <2>), (<2>, <6>), (<6>, <4>), (<4>, <1>)]","{<0>: [<3>],
<3>: [<0>, <5>, <7>],
<5>: [<3>, <7>],
<7>: [<3>, <5>, <2>],
<2>: [<7>, <6>],
<6>: [<2>, <4>],
<4>: [<6>, <1>],
<1>: [<4>]}","Node <0> is connected to node <3>.
Node <3> is connected to nodes <0>, <5>, <7>.
Node <5> is connected to nodes <3>, <7>.
Node <7> is connected to nodes <3>, <5>, <2>.
Node <2> is connected to nodes <7>, <6>.
Node <6> is connected to nodes <2>, <4>.
Node <4> is connected to nodes <6>, <1>.
Node <1> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,8,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <3>, <5>, <7>, <2>, <6>, <4>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<3>].
Visit node <3>. Unvisited neighbors of node <3> are [<5>, <7>].
Visit node <5>. 
Visit node <7>. Unvisited neighbors of node <7> are [<2>].
Visit node <2>. Unvisited neighbors of node <2> are [<6>].
Visit node <6>. Unvisited neighbors of node <6> are [<4>].
Visit node <4>. Unvisited neighbors of node <4> are [<1>].
Visit node <1>. 
So the BFS traversal is ","('[[<0>, <3>, <5>, <7>, <6>, <2>, <1>, <4>], [<0>, <3>, <4>, <1>, <5>, <7>, <2>, <6>], [<0>, <3>, <5>, <7>, <2>, <6>, <4>, <1>], [<0>, <7>, <5>, <3>, <4>, <2>, <1>, <6>]]',)",2,169
BFS,"[(<3>, <7>), (<3>, <4>), (<7>, <2>), (<4>, <12>), (<4>, <8>), (<2>, <10>), (<2>, <8>), (<9>, <5>), (<9>, <1>), (<5>, <12>), (<5>, <6>), (<11>, <10>), (<10>, <0>)]","{<3>: [<7>, <4>],
<7>: [<3>, <2>],
<4>: [<3>, <12>, <8>],
<2>: [<7>, <10>, <8>],
<9>: [<5>, <1>],
<5>: [<9>, <12>, <6>],
<1>: [<9>],
<12>: [<5>, <4>],
<6>: [<5>],
<8>: [<4>, <2>],
<11>: [<10>],
<10>: [<11>, <2>, <0>],
<0>: [<10>]}","Node <3> is connected to nodes <7>, <4>.
Node <7> is connected to nodes <3>, <2>.
Node <4> is connected to nodes <3>, <12>, <8>.
Node <2> is connected to nodes <7>, <10>, <8>.
Node <9> is connected to nodes <5>, <1>.
Node <5> is connected to nodes <9>, <12>, <6>.
Node <1> is connected to node <9>.
Node <12> is connected to nodes <5>, <4>.
Node <6> is connected to node <5>.
Node <8> is connected to nodes <4>, <2>.
Node <11> is connected to node <10>.
Node <10> is connected to nodes <11>, <2>, <0>.
Node <0> is connected to node <10>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,13,False,"Start from node <11>, output a sequence of traversal in breadth-first search (BFS) order.","[<11>, <10>, <2>, <0>, <7>, <8>, <3>, <4>, <12>, <5>, <9>, <6>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <11>. Unvisited neighbors of node <11> are [<10>].
Visit node <10>. Unvisited neighbors of node <10> are [<2>, <0>].
Visit node <2>. Unvisited neighbors of node <2> are [<7>, <8>].
Visit node <0>. 
Visit node <7>. Unvisited neighbors of node <7> are [<3>].
Visit node <8>. Unvisited neighbors of node <8> are [<4>].
Visit node <3>. 
Visit node <4>. Unvisited neighbors of node <4> are [<12>].
Visit node <12>. Unvisited neighbors of node <12> are [<5>].
Visit node <5>. Unvisited neighbors of node <5> are [<9>, <6>].
Visit node <9>. Unvisited neighbors of node <9> are [<1>].
Visit node <6>. 
Visit node <1>. 
So the BFS traversal is ","('[[<11>, <8>, <9>, <4>, <3>, <2>, <5>, <0>, <1>, <10>, <7>, <12>, <6>], [<11>, <10>, <2>, <0>, <7>, <8>, <1>, <4>, <12>, <6>, <3>, <9>, <5>], [<11>, <10>, <2>, <0>, <5>, <9>, <6>, <1>, <7>, <8>, <3>, <4>, <12>], [<11>, <10>, <2>, <0>, <7>, <8>, <3>, <4>, <12>, <5>, <9>, <6>, <1>]]',)",3,170
BFS,"[(<8>, <0>), (<8>, <1>), (<8>, <2>), (<8>, <6>), (<0>, <7>), (<1>, <8>), (<1>, <7>), (<2>, <5>), (<2>, <3>), (<7>, <0>), (<7>, <2>), (<5>, <3>), (<5>, <4>), (<5>, <9>), (<5>, <7>), (<3>, <1>), (<3>, <4>), (<3>, <8>), (<3>, <5>), (<4>, <10>), (<4>, <9>), (<4>, <5>), (<9>, <6>), (<9>, <1>), (<9>, <2>), (<10>, <5>)]","{<8>: [<0>, <1>, <2>, <6>],
<0>: [<7>],
<1>: [<8>, <7>],
<2>: [<5>, <3>],
<6>: [],
<7>: [<0>, <2>],
<5>: [<3>, <4>, <9>, <7>],
<3>: [<1>, <4>, <8>, <5>],
<4>: [<10>, <9>, <5>],
<9>: [<6>, <1>, <2>],
<10>: [<5>]}","Node <8> is connected to nodes <0>, <1>, <2>, <6>.
Node <0> is connected to node <7>.
Node <1> is connected to nodes <8>, <7>.
Node <2> is connected to nodes <5>, <3>.
Node <7> is connected to nodes <0>, <2>.
Node <5> is connected to nodes <3>, <4>, <9>, <7>.
Node <3> is connected to nodes <1>, <4>, <8>, <5>.
Node <4> is connected to nodes <10>, <9>, <5>.
Node <9> is connected to nodes <6>, <1>, <2>.
Node <10> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,26,True,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <8>, <7>, <0>, <2>, <6>, <5>, <3>, <4>, <9>, <10>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<8>, <7>].
Visit node <8>. Unvisited neighbors of node <8> are [<0>, <2>, <6>].
Visit node <7>. 
Visit node <0>. 
Visit node <2>. Unvisited neighbors of node <2> are [<5>, <3>].
Visit node <6>. 
Visit node <5>. Unvisited neighbors of node <5> are [<4>, <9>].
Visit node <3>. 
Visit node <4>. Unvisited neighbors of node <4> are [<10>].
Visit node <9>. 
Visit node <10>. 
So the BFS traversal is ","('[[<1>, <8>, <7>, <0>, <2>, <3>, <10>, <5>, <9>, <4>, <6>], [<1>, <8>, <7>, <4>, <9>, <10>, <0>, <2>, <6>, <5>, <3>], [<1>, <8>, <7>, <0>, <2>, <6>, <5>, <3>, <4>, <9>, <10>], [<1>, <8>, <2>, <4>, <7>, <6>, <10>, <9>, <0>, <5>, <3>]]',)",2,171
BFS,"[(<1>, <2>), (<1>, <4>), (<1>, <7>), (<1>, <5>), (<2>, <4>), (<2>, <0>), (<2>, <6>), (<4>, <5>), (<7>, <0>), (<7>, <6>), (<7>, <5>), (<5>, <3>), (<5>, <0>), (<3>, <6>), (<6>, <0>)]","{<1>: [<2>, <4>, <7>, <5>],
<2>: [<1>, <4>, <0>, <6>],
<4>: [<1>, <2>, <5>],
<7>: [<1>, <0>, <6>, <5>],
<5>: [<1>, <3>, <4>, <0>, <7>],
<3>: [<6>, <5>],
<6>: [<3>, <2>, <0>, <7>],
<0>: [<2>, <7>, <6>, <5>]}","Node <1> is connected to nodes <2>, <4>, <7>, <5>.
Node <2> is connected to nodes <1>, <4>, <0>, <6>.
Node <4> is connected to nodes <1>, <2>, <5>.
Node <7> is connected to nodes <1>, <0>, <6>, <5>.
Node <5> is connected to nodes <1>, <3>, <4>, <0>, <7>.
Node <3> is connected to nodes <6>, <5>.
Node <6> is connected to nodes <3>, <2>, <0>, <7>.
Node <0> is connected to nodes <2>, <7>, <6>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,15,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <1>, <2>, <5>, <7>, <0>, <6>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<1>, <2>, <5>].
Visit node <1>. Unvisited neighbors of node <1> are [<7>].
Visit node <2>. Unvisited neighbors of node <2> are [<0>, <6>].
Visit node <5>. Unvisited neighbors of node <5> are [<3>].
Visit node <7>. 
Visit node <0>. 
Visit node <6>. 
Visit node <3>. 
So the BFS traversal is ","('[[<4>, <1>, <6>, <3>, <2>, <5>, <7>, <0>], [<4>, <1>, <2>, <5>, <7>, <0>, <6>, <3>], [<4>, <1>, <2>, <5>, <6>, <7>, <3>, <0>], [<4>, <5>, <0>, <7>, <3>, <6>, <1>, <2>]]',)",1,172
BFS,"[(<6>, <8>), (<6>, <1>), (<6>, <11>), (<8>, <11>), (<1>, <11>), (<1>, <0>), (<1>, <3>), (<11>, <2>), (<11>, <9>), (<11>, <5>), (<4>, <10>), (<4>, <5>), (<10>, <0>), (<5>, <0>), (<5>, <2>), (<0>, <4>), (<2>, <12>), (<9>, <8>), (<3>, <8>), (<3>, <10>), (<3>, <12>), (<7>, <11>)]","{<6>: [<8>, <1>, <11>],
<8>: [<11>],
<1>: [<11>, <0>, <3>],
<11>: [<2>, <9>, <5>],
<4>: [<10>, <5>],
<10>: [<0>],
<5>: [<0>, <2>],
<0>: [<4>],
<2>: [<12>],
<12>: [],
<9>: [<8>],
<3>: [<8>, <10>, <12>],
<7>: [<11>]}","Node <6> is connected to nodes <8>, <1>, <11>.
Node <8> is connected to node <11>.
Node <1> is connected to nodes <11>, <0>, <3>.
Node <11> is connected to nodes <2>, <9>, <5>.
Node <4> is connected to nodes <10>, <5>.
Node <10> is connected to node <0>.
Node <5> is connected to nodes <0>, <2>.
Node <0> is connected to node <4>.
Node <2> is connected to node <12>.
Node <9> is connected to node <8>.
Node <3> is connected to nodes <8>, <10>, <12>.
Node <7> is connected to node <11>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,22,True,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <11>, <0>, <3>, <2>, <9>, <5>, <4>, <8>, <10>, <12>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<11>, <0>, <3>].
Visit node <11>. Unvisited neighbors of node <11> are [<2>, <9>, <5>].
Visit node <0>. Unvisited neighbors of node <0> are [<4>].
Visit node <3>. Unvisited neighbors of node <3> are [<8>, <10>, <12>].
Visit node <2>. 
Visit node <9>. 
Visit node <5>. 
Visit node <4>. 
Visit node <8>. 
Visit node <10>. 
Visit node <12>. 
So the BFS traversal is ","('[[<1>, <2>, <10>, <4>, <11>, <8>, <5>, <3>, <0>, <12>, <9>], [<1>, <11>, <0>, <8>, <10>, <12>, <3>, <2>, <9>, <5>, <4>], [<1>, <11>, <0>, <3>, <2>, <8>, <4>, <12>, <10>, <5>, <9>], [<1>, <11>, <0>, <3>, <2>, <9>, <5>, <4>, <8>, <10>, <12>]]',)",3,173
BFS,"[(<3>, <5>), (<3>, <2>), (<3>, <7>), (<3>, <11>), (<3>, <8>), (<3>, <0>), (<7>, <10>), (<11>, <6>), (<8>, <9>), (<8>, <4>), (<8>, <1>), (<9>, <12>)]","{<3>: [<5>, <2>, <7>, <11>, <8>, <0>],
<5>: [<3>],
<2>: [<3>],
<7>: [<3>, <10>],
<11>: [<3>, <6>],
<8>: [<3>, <9>, <4>, <1>],
<0>: [<3>],
<6>: [<11>],
<9>: [<8>, <12>],
<4>: [<8>],
<1>: [<8>],
<12>: [<9>],
<10>: [<7>]}","Node <3> is connected to nodes <5>, <2>, <7>, <11>, <8>, <0>.
Node <5> is connected to node <3>.
Node <2> is connected to node <3>.
Node <7> is connected to nodes <3>, <10>.
Node <11> is connected to nodes <3>, <6>.
Node <8> is connected to nodes <3>, <9>, <4>, <1>.
Node <0> is connected to node <3>.
Node <6> is connected to node <11>.
Node <9> is connected to nodes <8>, <12>.
Node <4> is connected to node <8>.
Node <1> is connected to node <8>.
Node <12> is connected to node <9>.
Node <10> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,12,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <3>, <10>, <5>, <2>, <11>, <8>, <0>, <6>, <9>, <4>, <1>, <12>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<3>, <10>].
Visit node <3>. Unvisited neighbors of node <3> are [<5>, <2>, <11>, <8>, <0>].
Visit node <10>. 
Visit node <5>. 
Visit node <2>. 
Visit node <11>. Unvisited neighbors of node <11> are [<6>].
Visit node <8>. Unvisited neighbors of node <8> are [<9>, <4>, <1>].
Visit node <0>. 
Visit node <6>. 
Visit node <9>. Unvisited neighbors of node <9> are [<12>].
Visit node <4>. 
Visit node <1>. 
Visit node <12>. 
So the BFS traversal is ","('[[<7>, <3>, <10>, <5>, <2>, <11>, <8>, <0>, <6>, <9>, <4>, <1>, <12>], [<7>, <3>, <8>, <12>, <9>, <1>, <10>, <4>, <5>, <6>, <0>, <2>, <11>], [<7>, <3>, <10>, <5>, <2>, <11>, <4>, <6>, <0>, <8>, <12>, <1>, <9>], [<7>, <3>, <10>, <5>, <9>, <4>, <1>, <12>, <2>, <11>, <8>, <0>, <6>]]',)",0,174
BFS,"[(<13>, <5>), (<13>, <11>), (<13>, <2>), (<13>, <12>), (<13>, <4>), (<13>, <6>), (<13>, <8>), (<13>, <7>), (<5>, <1>), (<5>, <10>), (<5>, <11>), (<5>, <2>), (<5>, <3>), (<5>, <12>), (<5>, <4>), (<5>, <0>), (<5>, <6>), (<5>, <7>), (<11>, <1>), (<11>, <10>), (<11>, <2>), (<11>, <12>), (<11>, <4>), (<11>, <0>), (<11>, <6>), (<11>, <8>), (<11>, <7>), (<2>, <10>), (<2>, <12>), (<2>, <0>), (<2>, <6>), (<2>, <8>), (<2>, <7>), (<12>, <1>), (<12>, <10>), (<12>, <3>), (<12>, <4>), (<12>, <9>), (<12>, <6>), (<12>, <7>), (<4>, <1>), (<4>, <10>), (<4>, <3>), (<4>, <9>), (<4>, <0>), (<4>, <6>), (<4>, <7>), (<6>, <10>), (<6>, <3>), (<6>, <9>), (<6>, <0>), (<6>, <8>), (<6>, <7>), (<8>, <1>), (<8>, <10>), (<8>, <9>), (<8>, <0>), (<7>, <1>), (<7>, <10>), (<7>, <3>), (<1>, <10>), (<1>, <3>), (<1>, <9>), (<1>, <0>), (<10>, <3>), (<10>, <9>), (<10>, <0>), (<3>, <9>), (<3>, <0>), (<9>, <0>)]","{<13>: [<5>, <11>, <2>, <12>, <4>, <6>, <8>, <7>],
<5>: [<13>, <1>, <10>, <11>, <2>, <3>, <12>, <4>, <0>, <6>, <7>],
<11>: [<13>, <1>, <10>, <5>, <2>, <12>, <4>, <0>, <6>, <8>, <7>],
<2>: [<13>, <10>, <5>, <11>, <12>, <0>, <6>, <8>, <7>],
<12>: [<13>, <1>, <10>, <5>, <11>, <2>, <3>, <4>, <9>, <6>, <7>],
<4>: [<13>, <1>, <10>, <5>, <11>, <3>, <12>, <9>, <0>, <6>, <7>],
<6>: [<13>, <10>, <5>, <11>, <2>, <3>, <12>, <4>, <9>, <0>, <8>, <7>],
<8>: [<13>, <1>, <10>, <11>, <2>, <9>, <0>, <6>],
<7>: [<13>, <1>, <10>, <5>, <11>, <2>, <3>, <12>, <4>, <6>],
<1>: [<10>, <5>, <11>, <3>, <12>, <4>, <9>, <0>, <8>, <7>],
<10>: [<1>, <5>, <11>, <2>, <3>, <12>, <4>, <9>, <0>, <6>, <8>, <7>],
<3>: [<1>, <10>, <5>, <12>, <4>, <9>, <0>, <6>, <7>],
<9>: [<1>, <10>, <3>, <12>, <4>, <0>, <6>, <8>],
<0>: [<1>, <10>, <5>, <11>, <2>, <3>, <4>, <9>, <6>, <8>]}","Node <13> is connected to nodes <5>, <11>, <2>, <12>, <4>, <6>, <8>, <7>.
Node <5> is connected to nodes <13>, <1>, <10>, <11>, <2>, <3>, <12>, <4>, <0>, <6>, <7>.
Node <11> is connected to nodes <13>, <1>, <10>, <5>, <2>, <12>, <4>, <0>, <6>, <8>, <7>.
Node <2> is connected to nodes <13>, <10>, <5>, <11>, <12>, <0>, <6>, <8>, <7>.
Node <12> is connected to nodes <13>, <1>, <10>, <5>, <11>, <2>, <3>, <4>, <9>, <6>, <7>.
Node <4> is connected to nodes <13>, <1>, <10>, <5>, <11>, <3>, <12>, <9>, <0>, <6>, <7>.
Node <6> is connected to nodes <13>, <10>, <5>, <11>, <2>, <3>, <12>, <4>, <9>, <0>, <8>, <7>.
Node <8> is connected to nodes <13>, <1>, <10>, <11>, <2>, <9>, <0>, <6>.
Node <7> is connected to nodes <13>, <1>, <10>, <5>, <11>, <2>, <3>, <12>, <4>, <6>.
Node <1> is connected to nodes <10>, <5>, <11>, <3>, <12>, <4>, <9>, <0>, <8>, <7>.
Node <10> is connected to nodes <1>, <5>, <11>, <2>, <3>, <12>, <4>, <9>, <0>, <6>, <8>, <7>.
Node <3> is connected to nodes <1>, <10>, <5>, <12>, <4>, <9>, <0>, <6>, <7>.
Node <9> is connected to nodes <1>, <10>, <3>, <12>, <4>, <0>, <6>, <8>.
Node <0> is connected to nodes <1>, <10>, <5>, <11>, <2>, <3>, <4>, <9>, <6>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,70,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <1>, <10>, <5>, <11>, <2>, <3>, <4>, <9>, <6>, <8>, <12>, <7>, <13>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<1>, <10>, <5>, <11>, <2>, <3>, <4>, <9>, <6>, <8>].
Visit node <1>. Unvisited neighbors of node <1> are [<12>, <7>].
Visit node <10>. 
Visit node <5>. Unvisited neighbors of node <5> are [<13>].
Visit node <11>. 
Visit node <2>. 
Visit node <3>. 
Visit node <4>. 
Visit node <9>. 
Visit node <6>. 
Visit node <8>. 
Visit node <12>. 
Visit node <7>. 
Visit node <13>. 
So the BFS traversal is ","('[[<0>, <1>, <10>, <5>, <11>, <2>, <3>, <4>, <12>, <9>, <13>, <7>, <8>, <6>], [<0>, <1>, <10>, <5>, <11>, <2>, <3>, <4>, <9>, <6>, <8>, <12>, <7>, <13>], [<0>, <1>, <10>, <5>, <8>, <12>, <7>, <13>, <11>, <2>, <3>, <4>, <9>, <6>], [<0>, <12>, <1>, <4>, <7>, <9>, <8>, <13>, <11>, <6>, <3>, <5>, <10>, <2>]]',)",1,175
BFS,"[(<4>, <0>), (<4>, <8>), (<0>, <5>), (<8>, <2>), (<5>, <10>), (<5>, <3>), (<11>, <9>), (<11>, <6>), (<9>, <10>), (<6>, <10>), (<2>, <1>), (<2>, <7>)]","{<4>: [<0>, <8>],
<0>: [<4>, <5>],
<8>: [<4>, <2>],
<5>: [<0>, <10>, <3>],
<11>: [<9>, <6>],
<9>: [<11>, <10>],
<6>: [<11>, <10>],
<10>: [<9>, <5>, <6>],
<2>: [<8>, <1>, <7>],
<1>: [<2>],
<7>: [<2>],
<3>: [<5>]}","Node <4> is connected to nodes <0>, <8>.
Node <0> is connected to nodes <4>, <5>.
Node <8> is connected to nodes <4>, <2>.
Node <5> is connected to nodes <0>, <10>, <3>.
Node <11> is connected to nodes <9>, <6>.
Node <9> is connected to nodes <11>, <10>.
Node <6> is connected to nodes <11>, <10>.
Node <10> is connected to nodes <9>, <5>, <6>.
Node <2> is connected to nodes <8>, <1>, <7>.
Node <1> is connected to node <2>.
Node <7> is connected to node <2>.
Node <3> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,12,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <0>, <8>, <5>, <2>, <10>, <3>, <1>, <7>, <9>, <6>, <11>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<0>, <8>].
Visit node <0>. Unvisited neighbors of node <0> are [<5>].
Visit node <8>. Unvisited neighbors of node <8> are [<2>].
Visit node <5>. Unvisited neighbors of node <5> are [<10>, <3>].
Visit node <2>. Unvisited neighbors of node <2> are [<1>, <7>].
Visit node <10>. Unvisited neighbors of node <10> are [<9>, <6>].
Visit node <3>. 
Visit node <1>. 
Visit node <7>. 
Visit node <9>. Unvisited neighbors of node <9> are [<11>].
Visit node <6>. 
Visit node <11>. 
So the BFS traversal is ","('[[<4>, <0>, <8>, <5>, <7>, <9>, <6>, <11>, <2>, <10>, <3>, <1>], [<4>, <0>, <8>, <5>, <2>, <10>, <3>, <1>, <7>, <9>, <6>, <11>], [<4>, <0>, <8>, <5>, <2>, <10>, <7>, <1>, <11>, <3>, <6>, <9>], [<4>, <6>, <3>, <11>, <1>, <2>, <5>, <0>, <7>, <9>, <10>, <8>]]',)",1,176
BFS,"[(<0>, <1>), (<0>, <3>), (<0>, <5>), (<1>, <5>), (<1>, <6>), (<1>, <0>), (<1>, <4>), (<3>, <5>), (<3>, <6>), (<3>, <4>), (<5>, <4>), (<5>, <7>), (<4>, <3>), (<4>, <7>), (<7>, <2>), (<2>, <7>), (<2>, <0>), (<2>, <4>)]","{<0>: [<1>, <3>, <5>],
<1>: [<5>, <6>, <0>, <4>],
<3>: [<5>, <6>, <4>],
<5>: [<4>, <7>],
<4>: [<3>, <7>],
<7>: [<2>],
<6>: [],
<2>: [<7>, <0>, <4>]}","Node <0> is connected to nodes <1>, <3>, <5>.
Node <1> is connected to nodes <5>, <6>, <0>, <4>.
Node <3> is connected to nodes <5>, <6>, <4>.
Node <5> is connected to nodes <4>, <7>.
Node <4> is connected to nodes <3>, <7>.
Node <7> is connected to node <2>.
Node <2> is connected to nodes <7>, <0>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,18,True,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <2>, <0>, <4>, <1>, <3>, <5>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<2>].
Visit node <2>. Unvisited neighbors of node <2> are [<0>, <4>].
Visit node <0>. Unvisited neighbors of node <0> are [<1>, <3>, <5>].
Visit node <4>. 
Visit node <1>. Unvisited neighbors of node <1> are [<6>].
Visit node <3>. 
Visit node <5>. 
Visit node <6>. 
So the BFS traversal is ","('[[<7>, <1>, <2>, <6>, <5>, <0>, <3>, <4>], [<7>, <2>, <0>, <4>, <1>, <3>, <5>, <6>], [<7>, <2>, <5>, <6>, <0>, <4>, <1>, <3>], [<7>, <2>, <0>, <4>, <6>, <5>, <3>, <1>]]',)",1,177
BFS,"[(<5>, <1>), (<5>, <7>), (<1>, <7>), (<1>, <6>), (<1>, <0>), (<7>, <10>), (<7>, <0>), (<2>, <4>), (<2>, <6>), (<2>, <0>), (<4>, <10>), (<4>, <9>), (<4>, <5>), (<6>, <1>), (<10>, <6>), (<10>, <5>), (<3>, <9>), (<3>, <1>), (<3>, <7>), (<3>, <6>), (<8>, <9>), (<8>, <1>), (<8>, <4>)]","{<5>: [<1>, <7>],
<1>: [<7>, <6>, <0>],
<7>: [<10>, <0>],
<2>: [<4>, <6>, <0>],
<4>: [<10>, <9>, <5>],
<6>: [<1>],
<0>: [],
<10>: [<6>, <5>],
<9>: [],
<3>: [<9>, <1>, <7>, <6>],
<8>: [<9>, <1>, <4>]}","Node <5> is connected to nodes <1>, <7>.
Node <1> is connected to nodes <7>, <6>, <0>.
Node <7> is connected to nodes <10>, <0>.
Node <2> is connected to nodes <4>, <6>, <0>.
Node <4> is connected to nodes <10>, <9>, <5>.
Node <6> is connected to node <1>.
Node <10> is connected to nodes <6>, <5>.
Node <3> is connected to nodes <9>, <1>, <7>, <6>.
Node <8> is connected to nodes <9>, <1>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,23,True,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <1>, <7>, <0>, <10>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<1>].
Visit node <1>. Unvisited neighbors of node <1> are [<7>, <0>].
Visit node <7>. Unvisited neighbors of node <7> are [<10>].
Visit node <0>. 
Visit node <10>. Unvisited neighbors of node <10> are [<5>].
Visit node <5>. 
So the BFS traversal is ","('[[<6>, <1>, <7>, <5>, <10>, <0>], [<6>, <1>, <10>, <5>, <7>, <0>], [<6>, <1>, <7>, <0>, <10>, <5>], [<6>, <5>, <0>, <10>, <1>, <7>]]',)",2,178
BFS,"[(<4>, <7>), (<7>, <1>), (<1>, <7>), (<1>, <5>), (<5>, <3>), (<5>, <1>), (<5>, <6>), (<5>, <4>), (<3>, <1>), (<6>, <4>), (<6>, <1>), (<0>, <6>), (<0>, <4>), (<2>, <1>), (<2>, <6>)]","{<4>: [<7>],
<7>: [<1>],
<1>: [<7>, <5>],
<5>: [<3>, <1>, <6>, <4>],
<3>: [<1>],
<6>: [<4>, <1>],
<0>: [<6>, <4>],
<2>: [<1>, <6>]}","Node <4> is connected to node <7>.
Node <7> is connected to node <1>.
Node <1> is connected to nodes <7>, <5>.
Node <5> is connected to nodes <3>, <1>, <6>, <4>.
Node <3> is connected to node <1>.
Node <6> is connected to nodes <4>, <1>.
Node <0> is connected to nodes <6>, <4>.
Node <2> is connected to nodes <1>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,15,True,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <1>, <6>, <7>, <5>, <4>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<1>, <6>].
Visit node <1>. Unvisited neighbors of node <1> are [<7>, <5>].
Visit node <6>. Unvisited neighbors of node <6> are [<4>].
Visit node <7>. 
Visit node <5>. Unvisited neighbors of node <5> are [<3>].
Visit node <4>. 
Visit node <3>. 
So the BFS traversal is ","('[[<2>, <4>, <7>, <3>, <1>, <5>, <6>], [<2>, <1>, <4>, <3>, <6>, <7>, <5>], [<2>, <1>, <6>, <7>, <5>, <4>, <3>], [<2>, <1>, <6>, <3>, <7>, <5>, <4>]]',)",2,179
BFS,"[(<7>, <6>), (<7>, <5>), (<7>, <4>), (<7>, <2>), (<6>, <1>), (<6>, <7>), (<5>, <0>), (<5>, <1>), (<5>, <4>), (<5>, <6>), (<4>, <7>), (<4>, <5>), (<4>, <1>), (<2>, <1>), (<1>, <4>), (<1>, <2>), (<0>, <1>), (<0>, <3>), (<0>, <7>), (<3>, <7>)]","{<7>: [<6>, <5>, <4>, <2>],
<6>: [<1>, <7>],
<5>: [<0>, <1>, <4>, <6>],
<4>: [<7>, <5>, <1>],
<2>: [<1>],
<1>: [<4>, <2>],
<0>: [<1>, <3>, <7>],
<3>: [<7>]}","Node <7> is connected to nodes <6>, <5>, <4>, <2>.
Node <6> is connected to nodes <1>, <7>.
Node <5> is connected to nodes <0>, <1>, <4>, <6>.
Node <4> is connected to nodes <7>, <5>, <1>.
Node <2> is connected to node <1>.
Node <1> is connected to nodes <4>, <2>.
Node <0> is connected to nodes <1>, <3>, <7>.
Node <3> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,20,True,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <6>, <5>, <4>, <2>, <1>, <0>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<6>, <5>, <4>, <2>].
Visit node <6>. Unvisited neighbors of node <6> are [<1>].
Visit node <5>. Unvisited neighbors of node <5> are [<0>].
Visit node <4>. 
Visit node <2>. 
Visit node <1>. 
Visit node <0>. Unvisited neighbors of node <0> are [<3>].
Visit node <3>. 
So the BFS traversal is ","('[[<7>, <6>, <5>, <4>, <2>, <1>, <0>, <3>], [<7>, <6>, <1>, <0>, <5>, <2>, <4>, <3>], [<7>, <6>, <5>, <4>, <0>, <3>, <1>, <2>], [<7>, <6>, <0>, <3>, <5>, <4>, <2>, <1>]]',)",0,180
BFS,"[(<10>, <5>), (<10>, <0>), (<10>, <8>), (<10>, <6>), (<5>, <0>), (<5>, <14>), (<5>, <4>), (<5>, <11>), (<5>, <6>), (<0>, <11>), (<0>, <10>), (<0>, <5>), (<0>, <7>), (<8>, <6>), (<8>, <2>), (<8>, <1>), (<8>, <7>), (<8>, <13>), (<8>, <12>), (<8>, <0>), (<6>, <1>), (<6>, <3>), (<6>, <4>), (<6>, <11>), (<9>, <5>), (<9>, <7>), (<9>, <12>), (<9>, <0>), (<9>, <4>), (<7>, <13>), (<7>, <3>), (<7>, <14>), (<7>, <2>), (<7>, <5>), (<7>, <1>), (<12>, <0>), (<12>, <11>), (<12>, <13>), (<4>, <11>), (<4>, <3>), (<4>, <0>), (<4>, <8>), (<14>, <7>), (<14>, <3>), (<11>, <2>), (<11>, <13>), (<11>, <3>), (<1>, <7>), (<1>, <13>), (<1>, <0>), (<1>, <14>), (<1>, <8>), (<1>, <6>), (<1>, <10>), (<1>, <9>), (<13>, <4>), (<13>, <5>), (<3>, <8>), (<3>, <6>), (<3>, <9>), (<2>, <7>), (<2>, <3>), (<2>, <6>)]","{<10>: [<5>, <0>, <8>, <6>],
<5>: [<0>, <14>, <4>, <11>, <6>],
<0>: [<11>, <10>, <5>, <7>],
<8>: [<6>, <2>, <1>, <7>, <13>, <12>, <0>],
<6>: [<1>, <3>, <4>, <11>],
<9>: [<5>, <7>, <12>, <0>, <4>],
<7>: [<13>, <3>, <14>, <2>, <5>, <1>],
<12>: [<0>, <11>, <13>],
<4>: [<11>, <3>, <0>, <8>],
<14>: [<7>, <3>],
<11>: [<2>, <13>, <3>],
<1>: [<7>, <13>, <0>, <14>, <8>, <6>, <10>, <9>],
<13>: [<4>, <5>],
<3>: [<8>, <6>, <9>],
<2>: [<7>, <3>, <6>]}","Node <10> is connected to nodes <5>, <0>, <8>, <6>.
Node <5> is connected to nodes <0>, <14>, <4>, <11>, <6>.
Node <0> is connected to nodes <11>, <10>, <5>, <7>.
Node <8> is connected to nodes <6>, <2>, <1>, <7>, <13>, <12>, <0>.
Node <6> is connected to nodes <1>, <3>, <4>, <11>.
Node <9> is connected to nodes <5>, <7>, <12>, <0>, <4>.
Node <7> is connected to nodes <13>, <3>, <14>, <2>, <5>, <1>.
Node <12> is connected to nodes <0>, <11>, <13>.
Node <4> is connected to nodes <11>, <3>, <0>, <8>.
Node <14> is connected to nodes <7>, <3>.
Node <11> is connected to nodes <2>, <13>, <3>.
Node <1> is connected to nodes <7>, <13>, <0>, <14>, <8>, <6>, <10>, <9>.
Node <13> is connected to nodes <4>, <5>.
Node <3> is connected to nodes <8>, <6>, <9>.
Node <2> is connected to nodes <7>, <3>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,63,True,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <0>, <14>, <4>, <11>, <6>, <10>, <7>, <3>, <8>, <2>, <13>, <1>, <9>, <12>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<0>, <14>, <4>, <11>, <6>].
Visit node <0>. Unvisited neighbors of node <0> are [<10>, <7>].
Visit node <14>. Unvisited neighbors of node <14> are [<3>].
Visit node <4>. Unvisited neighbors of node <4> are [<8>].
Visit node <11>. Unvisited neighbors of node <11> are [<2>, <13>].
Visit node <6>. Unvisited neighbors of node <6> are [<1>].
Visit node <10>. 
Visit node <7>. 
Visit node <3>. Unvisited neighbors of node <3> are [<9>].
Visit node <8>. Unvisited neighbors of node <8> are [<12>].
Visit node <2>. 
Visit node <13>. 
Visit node <1>. 
Visit node <9>. 
Visit node <12>. 
So the BFS traversal is ","('[[<5>, <0>, <14>, <4>, <11>, <6>, <10>, <12>, <3>, <9>, <2>, <13>, <8>, <7>, <1>], [<5>, <0>, <14>, <4>, <11>, <2>, <13>, <1>, <9>, <12>, <6>, <10>, <7>, <3>, <8>], [<5>, <0>, <14>, <4>, <11>, <6>, <10>, <7>, <3>, <8>, <2>, <13>, <1>, <9>, <12>], [<5>, <0>, <11>, <6>, <1>, <7>, <14>, <12>, <10>, <9>, <8>, <2>, <3>, <13>, <4>]]',)",2,181
BFS,"[(<6>, <7>), (<6>, <0>), (<6>, <8>), (<6>, <1>), (<6>, <4>), (<7>, <5>), (<7>, <2>), (<7>, <8>), (<7>, <3>), (<7>, <4>), (<7>, <6>), (<0>, <4>), (<0>, <9>), (<0>, <2>), (<8>, <1>), (<8>, <5>), (<8>, <10>), (<8>, <0>), (<1>, <4>), (<1>, <7>), (<1>, <2>), (<1>, <10>), (<1>, <0>), (<1>, <8>), (<1>, <3>), (<4>, <6>), (<4>, <7>), (<4>, <5>), (<4>, <10>), (<4>, <0>), (<4>, <8>), (<4>, <1>), (<5>, <8>), (<5>, <4>), (<2>, <10>), (<2>, <1>), (<2>, <7>), (<2>, <5>), (<3>, <1>), (<3>, <7>), (<3>, <8>), (<9>, <2>), (<9>, <8>), (<9>, <1>), (<9>, <4>), (<9>, <6>), (<10>, <8>), (<10>, <3>), (<10>, <6>)]","{<6>: [<7>, <0>, <8>, <1>, <4>],
<7>: [<5>, <2>, <8>, <3>, <4>, <6>],
<0>: [<4>, <9>, <2>],
<8>: [<1>, <5>, <10>, <0>],
<1>: [<4>, <7>, <2>, <10>, <0>, <8>, <3>],
<4>: [<6>, <7>, <5>, <10>, <0>, <8>, <1>],
<5>: [<8>, <4>],
<2>: [<10>, <1>, <7>, <5>],
<3>: [<1>, <7>, <8>],
<9>: [<2>, <8>, <1>, <4>, <6>],
<10>: [<8>, <3>, <6>]}","Node <6> is connected to nodes <7>, <0>, <8>, <1>, <4>.
Node <7> is connected to nodes <5>, <2>, <8>, <3>, <4>, <6>.
Node <0> is connected to nodes <4>, <9>, <2>.
Node <8> is connected to nodes <1>, <5>, <10>, <0>.
Node <1> is connected to nodes <4>, <7>, <2>, <10>, <0>, <8>, <3>.
Node <4> is connected to nodes <6>, <7>, <5>, <10>, <0>, <8>, <1>.
Node <5> is connected to nodes <8>, <4>.
Node <2> is connected to nodes <10>, <1>, <7>, <5>.
Node <3> is connected to nodes <1>, <7>, <8>.
Node <9> is connected to nodes <2>, <8>, <1>, <4>, <6>.
Node <10> is connected to nodes <8>, <3>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,49,True,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <5>, <2>, <8>, <3>, <4>, <6>, <10>, <1>, <0>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<5>, <2>, <8>, <3>, <4>, <6>].
Visit node <5>. 
Visit node <2>. Unvisited neighbors of node <2> are [<10>, <1>].
Visit node <8>. Unvisited neighbors of node <8> are [<0>].
Visit node <3>. 
Visit node <4>. 
Visit node <6>. 
Visit node <10>. 
Visit node <1>. 
Visit node <0>. Unvisited neighbors of node <0> are [<9>].
Visit node <9>. 
So the BFS traversal is ","('[[<7>, <4>, <0>, <6>, <10>, <2>, <5>, <3>, <8>, <1>, <9>], [<7>, <5>, <2>, <1>, <0>, <9>, <8>, <3>, <4>, <6>, <10>], [<7>, <5>, <2>, <8>, <3>, <4>, <6>, <10>, <1>, <0>, <9>], [<7>, <5>, <2>, <8>, <3>, <10>, <0>, <1>, <6>, <9>, <4>]]',)",2,182
BFS,"[(<10>, <8>), (<10>, <5>), (<10>, <2>), (<10>, <1>), (<8>, <1>), (<8>, <6>), (<8>, <10>), (<8>, <3>), (<5>, <2>), (<5>, <8>), (<2>, <10>), (<2>, <7>), (<2>, <0>), (<2>, <5>), (<1>, <6>), (<1>, <10>), (<1>, <9>), (<1>, <8>), (<1>, <5>), (<1>, <2>), (<7>, <9>), (<7>, <8>), (<9>, <8>), (<9>, <4>), (<9>, <2>), (<3>, <9>), (<3>, <8>), (<3>, <4>), (<3>, <5>), (<4>, <10>), (<4>, <7>), (<4>, <8>), (<0>, <8>), (<0>, <5>), (<0>, <2>), (<0>, <6>), (<0>, <10>), (<0>, <7>), (<0>, <3>), (<0>, <9>), (<6>, <8>)]","{<10>: [<8>, <5>, <2>, <1>],
<8>: [<1>, <6>, <10>, <3>],
<5>: [<2>, <8>],
<2>: [<10>, <7>, <0>, <5>],
<1>: [<6>, <10>, <9>, <8>, <5>, <2>],
<7>: [<9>, <8>],
<9>: [<8>, <4>, <2>],
<3>: [<9>, <8>, <4>, <5>],
<4>: [<10>, <7>, <8>],
<0>: [<8>, <5>, <2>, <6>, <10>, <7>, <3>, <9>],
<6>: [<8>]}","Node <10> is connected to nodes <8>, <5>, <2>, <1>.
Node <8> is connected to nodes <1>, <6>, <10>, <3>.
Node <5> is connected to nodes <2>, <8>.
Node <2> is connected to nodes <10>, <7>, <0>, <5>.
Node <1> is connected to nodes <6>, <10>, <9>, <8>, <5>, <2>.
Node <7> is connected to nodes <9>, <8>.
Node <9> is connected to nodes <8>, <4>, <2>.
Node <3> is connected to nodes <9>, <8>, <4>, <5>.
Node <4> is connected to nodes <10>, <7>, <8>.
Node <0> is connected to nodes <8>, <5>, <2>, <6>, <10>, <7>, <3>, <9>.
Node <6> is connected to node <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,41,True,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <8>, <4>, <2>, <1>, <6>, <10>, <3>, <7>, <0>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<8>, <4>, <2>].
Visit node <8>. Unvisited neighbors of node <8> are [<1>, <6>, <10>, <3>].
Visit node <4>. Unvisited neighbors of node <4> are [<7>].
Visit node <2>. Unvisited neighbors of node <2> are [<0>, <5>].
Visit node <1>. 
Visit node <6>. 
Visit node <10>. 
Visit node <3>. 
Visit node <7>. 
Visit node <0>. 
Visit node <5>. 
So the BFS traversal is ","('[[<9>, <8>, <4>, <2>, <1>, <6>, <10>, <3>, <7>, <0>, <5>], [<9>, <8>, <4>, <2>, <1>, <6>, <5>, <7>, <3>, <0>, <10>], [<9>, <8>, <4>, <7>, <0>, <5>, <2>, <1>, <6>, <10>, <3>], [<9>, <0>, <6>, <7>, <8>, <3>, <2>, <4>, <1>, <5>, <10>]]',)",0,183
BFS,"[(<5>, <6>), (<5>, <4>), (<6>, <7>), (<4>, <2>), (<7>, <8>), (<3>, <1>), (<3>, <0>), (<1>, <8>), (<1>, <0>)]","{<5>: [<6>, <4>],
<6>: [<5>, <7>],
<4>: [<5>, <2>],
<7>: [<6>, <8>],
<3>: [<1>, <0>],
<1>: [<3>, <8>, <0>],
<0>: [<3>, <1>],
<8>: [<1>, <7>],
<2>: [<4>]}","Node <5> is connected to nodes <6>, <4>.
Node <6> is connected to nodes <5>, <7>.
Node <4> is connected to nodes <5>, <2>.
Node <7> is connected to nodes <6>, <8>.
Node <3> is connected to nodes <1>, <0>.
Node <1> is connected to nodes <3>, <8>, <0>.
Node <0> is connected to nodes <3>, <1>.
Node <8> is connected to nodes <1>, <7>.
Node <2> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <6>, <8>, <5>, <1>, <4>, <3>, <0>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<6>, <8>].
Visit node <6>. Unvisited neighbors of node <6> are [<5>].
Visit node <8>. Unvisited neighbors of node <8> are [<1>].
Visit node <5>. Unvisited neighbors of node <5> are [<4>].
Visit node <1>. Unvisited neighbors of node <1> are [<3>, <0>].
Visit node <4>. Unvisited neighbors of node <4> are [<2>].
Visit node <3>. 
Visit node <0>. 
Visit node <2>. 
So the BFS traversal is ","('[[<7>, <0>, <3>, <1>, <8>, <5>, <6>, <2>, <4>], [<7>, <6>, <8>, <5>, <1>, <3>, <2>, <0>, <4>], [<7>, <6>, <8>, <3>, <0>, <2>, <5>, <1>, <4>], [<7>, <6>, <8>, <5>, <1>, <4>, <3>, <0>, <2>]]',)",3,184
BFS,"[(<7>, <0>), (<0>, <3>), (<3>, <5>), (<3>, <9>), (<1>, <8>), (<1>, <11>), (<1>, <4>), (<8>, <2>), (<2>, <10>), (<5>, <6>), (<9>, <6>), (<10>, <6>)]","{<7>: [<0>],
<0>: [<7>, <3>],
<3>: [<0>, <5>, <9>],
<1>: [<8>, <11>, <4>],
<8>: [<1>, <2>],
<11>: [<1>],
<4>: [<1>],
<2>: [<8>, <10>],
<5>: [<3>, <6>],
<9>: [<3>, <6>],
<10>: [<2>, <6>],
<6>: [<5>, <10>, <9>]}","Node <7> is connected to node <0>.
Node <0> is connected to nodes <7>, <3>.
Node <3> is connected to nodes <0>, <5>, <9>.
Node <1> is connected to nodes <8>, <11>, <4>.
Node <8> is connected to nodes <1>, <2>.
Node <11> is connected to node <1>.
Node <4> is connected to node <1>.
Node <2> is connected to nodes <8>, <10>.
Node <5> is connected to nodes <3>, <6>.
Node <9> is connected to nodes <3>, <6>.
Node <10> is connected to nodes <2>, <6>.
Node <6> is connected to nodes <5>, <10>, <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,12,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <0>, <3>, <5>, <9>, <6>, <10>, <2>, <8>, <1>, <11>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<0>].
Visit node <0>. Unvisited neighbors of node <0> are [<3>].
Visit node <3>. Unvisited neighbors of node <3> are [<5>, <9>].
Visit node <5>. Unvisited neighbors of node <5> are [<6>].
Visit node <9>. 
Visit node <6>. Unvisited neighbors of node <6> are [<10>].
Visit node <10>. Unvisited neighbors of node <10> are [<2>].
Visit node <2>. Unvisited neighbors of node <2> are [<8>].
Visit node <8>. Unvisited neighbors of node <8> are [<1>].
Visit node <1>. Unvisited neighbors of node <1> are [<11>, <4>].
Visit node <11>. 
Visit node <4>. 
So the BFS traversal is ","('[[<7>, <0>, <3>, <5>, <9>, <6>, <1>, <2>, <10>, <11>, <8>, <4>], [<7>, <2>, <3>, <11>, <5>, <0>, <1>, <10>, <4>, <8>, <6>, <9>], [<7>, <0>, <3>, <5>, <9>, <6>, <10>, <2>, <8>, <1>, <11>, <4>], [<7>, <0>, <3>, <5>, <8>, <1>, <11>, <4>, <9>, <6>, <10>, <2>]]',)",2,185
BFS,"[(<9>, <5>), (<5>, <4>), (<4>, <2>), (<4>, <5>), (<4>, <7>), (<2>, <9>), (<7>, <6>), (<7>, <5>), (<3>, <2>), (<3>, <6>), (<3>, <1>), (<3>, <0>), (<3>, <4>), (<6>, <1>), (<6>, <8>), (<6>, <5>), (<6>, <3>), (<1>, <8>), (<8>, <7>), (<8>, <1>)]","{<9>: [<5>],
<5>: [<4>],
<4>: [<2>, <5>, <7>],
<2>: [<9>],
<7>: [<6>, <5>],
<3>: [<2>, <6>, <1>, <0>, <4>],
<6>: [<1>, <8>, <5>, <3>],
<1>: [<8>],
<0>: [],
<8>: [<7>, <1>]}","Node <9> is connected to node <5>.
Node <5> is connected to node <4>.
Node <4> is connected to nodes <2>, <5>, <7>.
Node <2> is connected to node <9>.
Node <7> is connected to nodes <6>, <5>.
Node <3> is connected to nodes <2>, <6>, <1>, <0>, <4>.
Node <6> is connected to nodes <1>, <8>, <5>, <3>.
Node <1> is connected to node <8>.
Node <8> is connected to nodes <7>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,20,True,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <2>, <6>, <1>, <0>, <4>, <9>, <8>, <5>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<2>, <6>, <1>, <0>, <4>].
Visit node <2>. Unvisited neighbors of node <2> are [<9>].
Visit node <6>. Unvisited neighbors of node <6> are [<8>, <5>].
Visit node <1>. 
Visit node <0>. 
Visit node <4>. Unvisited neighbors of node <4> are [<7>].
Visit node <9>. 
Visit node <8>. 
Visit node <5>. 
Visit node <7>. 
So the BFS traversal is ","('[[<3>, <2>, <6>, <1>, <0>, <4>, <9>, <8>, <5>, <7>], [<3>, <2>, <6>, <8>, <5>, <7>, <1>, <0>, <4>, <9>], [<3>, <9>, <0>, <4>, <1>, <6>, <5>, <2>, <7>, <8>], [<3>, <2>, <6>, <1>, <0>, <7>, <9>, <8>, <4>, <5>]]',)",0,186
BFS,"[(<10>, <7>), (<10>, <2>), (<10>, <4>), (<10>, <0>), (<10>, <8>), (<10>, <9>), (<10>, <6>), (<7>, <4>), (<7>, <8>), (<2>, <4>), (<2>, <1>), (<4>, <1>), (<4>, <0>), (<4>, <6>), (<4>, <5>), (<0>, <3>), (<0>, <1>), (<0>, <6>), (<0>, <8>), (<0>, <5>), (<0>, <9>), (<8>, <1>), (<8>, <9>), (<1>, <3>)]","{<10>: [<7>, <2>, <4>, <0>, <8>, <9>, <6>],
<7>: [<10>, <4>, <8>],
<2>: [<10>, <4>, <1>],
<4>: [<10>, <7>, <2>, <1>, <0>, <6>, <5>],
<0>: [<10>, <3>, <1>, <4>, <6>, <8>, <5>, <9>],
<8>: [<10>, <7>, <1>, <0>, <9>],
<9>: [<10>, <0>, <8>],
<6>: [<10>, <4>, <0>],
<1>: [<2>, <3>, <4>, <8>, <0>],
<3>: [<1>, <0>],
<5>: [<4>, <0>]}","Node <10> is connected to nodes <7>, <2>, <4>, <0>, <8>, <9>, <6>.
Node <7> is connected to nodes <10>, <4>, <8>.
Node <2> is connected to nodes <10>, <4>, <1>.
Node <4> is connected to nodes <10>, <7>, <2>, <1>, <0>, <6>, <5>.
Node <0> is connected to nodes <10>, <3>, <1>, <4>, <6>, <8>, <5>, <9>.
Node <8> is connected to nodes <10>, <7>, <1>, <0>, <9>.
Node <9> is connected to nodes <10>, <0>, <8>.
Node <6> is connected to nodes <10>, <4>, <0>.
Node <1> is connected to nodes <2>, <3>, <4>, <8>, <0>.
Node <3> is connected to nodes <1>, <0>.
Node <5> is connected to nodes <4>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,24,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <1>, <0>, <2>, <4>, <8>, <10>, <6>, <5>, <9>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<1>, <0>].
Visit node <1>. Unvisited neighbors of node <1> are [<2>, <4>, <8>].
Visit node <0>. Unvisited neighbors of node <0> are [<10>, <6>, <5>, <9>].
Visit node <2>. 
Visit node <4>. Unvisited neighbors of node <4> are [<7>].
Visit node <8>. 
Visit node <10>. 
Visit node <6>. 
Visit node <5>. 
Visit node <9>. 
Visit node <7>. 
So the BFS traversal is ","('[[<3>, <6>, <1>, <7>, <4>, <5>, <9>, <2>, <10>, <0>, <8>], [<3>, <1>, <0>, <2>, <4>, <8>, <10>, <6>, <5>, <9>, <7>], [<3>, <1>, <0>, <5>, <9>, <7>, <2>, <4>, <8>, <10>, <6>], [<3>, <1>, <0>, <2>, <4>, <6>, <8>, <7>, <9>, <10>, <5>]]',)",1,187
BFS,"[(<1>, <5>), (<1>, <3>), (<1>, <0>), (<1>, <8>), (<5>, <0>), (<5>, <8>), (<5>, <4>), (<5>, <7>), (<3>, <0>), (<3>, <8>), (<3>, <11>), (<3>, <7>), (<3>, <10>), (<0>, <8>), (<0>, <9>), (<0>, <4>), (<0>, <7>), (<0>, <3>), (<8>, <2>), (<8>, <4>), (<8>, <7>), (<8>, <0>), (<8>, <6>), (<9>, <10>), (<9>, <8>), (<9>, <2>), (<10>, <5>), (<10>, <0>), (<10>, <1>), (<10>, <4>), (<2>, <5>), (<4>, <3>), (<4>, <2>), (<4>, <9>), (<11>, <5>), (<11>, <3>), (<11>, <6>), (<11>, <8>), (<11>, <4>), (<6>, <7>), (<6>, <3>), (<7>, <8>), (<7>, <4>)]","{<1>: [<5>, <3>, <0>, <8>],
<5>: [<0>, <8>, <4>, <7>],
<3>: [<0>, <8>, <11>, <7>, <10>],
<0>: [<8>, <9>, <4>, <7>, <3>],
<8>: [<2>, <4>, <7>, <0>, <6>],
<9>: [<10>, <8>, <2>],
<10>: [<5>, <0>, <1>, <4>],
<2>: [<5>],
<4>: [<3>, <2>, <9>],
<11>: [<5>, <3>, <6>, <8>, <4>],
<6>: [<7>, <3>],
<7>: [<8>, <4>]}","Node <1> is connected to nodes <5>, <3>, <0>, <8>.
Node <5> is connected to nodes <0>, <8>, <4>, <7>.
Node <3> is connected to nodes <0>, <8>, <11>, <7>, <10>.
Node <0> is connected to nodes <8>, <9>, <4>, <7>, <3>.
Node <8> is connected to nodes <2>, <4>, <7>, <0>, <6>.
Node <9> is connected to nodes <10>, <8>, <2>.
Node <10> is connected to nodes <5>, <0>, <1>, <4>.
Node <2> is connected to node <5>.
Node <4> is connected to nodes <3>, <2>, <9>.
Node <11> is connected to nodes <5>, <3>, <6>, <8>, <4>.
Node <6> is connected to nodes <7>, <3>.
Node <7> is connected to nodes <8>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,43,True,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <5>, <0>, <8>, <4>, <7>, <9>, <3>, <6>, <10>, <11>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<5>].
Visit node <5>. Unvisited neighbors of node <5> are [<0>, <8>, <4>, <7>].
Visit node <0>. Unvisited neighbors of node <0> are [<9>, <3>].
Visit node <8>. Unvisited neighbors of node <8> are [<6>].
Visit node <4>. 
Visit node <7>. 
Visit node <9>. Unvisited neighbors of node <9> are [<10>].
Visit node <3>. Unvisited neighbors of node <3> are [<11>].
Visit node <6>. 
Visit node <10>. Unvisited neighbors of node <10> are [<1>].
Visit node <11>. 
Visit node <1>. 
So the BFS traversal is ","('[[<2>, <5>, <0>, <8>, <4>, <7>, <9>, <3>, <6>, <10>, <11>, <1>], [<2>, <11>, <4>, <8>, <5>, <7>, <9>, <1>, <6>, <3>, <0>, <10>], [<2>, <5>, <0>, <8>, <6>, <10>, <11>, <1>, <4>, <7>, <9>, <3>], [<2>, <5>, <0>, <8>, <4>, <7>, <10>, <6>, <9>, <11>, <1>, <3>]]',)",0,188
BFS,"[(<1>, <9>), (<1>, <6>), (<1>, <8>), (<1>, <7>), (<1>, <4>), (<1>, <10>), (<1>, <2>), (<9>, <6>), (<9>, <0>), (<9>, <5>), (<9>, <12>), (<9>, <4>), (<9>, <10>), (<6>, <0>), (<6>, <8>), (<6>, <3>), (<6>, <5>), (<6>, <7>), (<6>, <4>), (<8>, <5>), (<8>, <4>), (<8>, <10>), (<7>, <0>), (<7>, <3>), (<7>, <5>), (<7>, <11>), (<7>, <4>), (<7>, <10>), (<4>, <0>), (<4>, <3>), (<4>, <11>), (<4>, <12>), (<4>, <2>), (<10>, <11>), (<10>, <12>), (<2>, <3>), (<2>, <5>), (<2>, <12>), (<0>, <12>), (<5>, <11>), (<12>, <11>), (<3>, <11>)]","{<1>: [<9>, <6>, <8>, <7>, <4>, <10>, <2>],
<9>: [<1>, <6>, <0>, <5>, <12>, <4>, <10>],
<6>: [<1>, <9>, <0>, <8>, <3>, <5>, <7>, <4>],
<8>: [<1>, <6>, <5>, <4>, <10>],
<7>: [<1>, <6>, <0>, <3>, <5>, <11>, <4>, <10>],
<4>: [<1>, <9>, <6>, <0>, <8>, <3>, <7>, <11>, <12>, <2>],
<10>: [<1>, <9>, <8>, <7>, <11>, <12>],
<2>: [<1>, <3>, <5>, <12>, <4>],
<0>: [<9>, <6>, <7>, <12>, <4>],
<5>: [<9>, <6>, <8>, <7>, <11>, <2>],
<12>: [<9>, <0>, <11>, <4>, <10>, <2>],
<3>: [<6>, <7>, <11>, <4>, <2>],
<11>: [<3>, <5>, <7>, <12>, <4>, <10>]}","Node <1> is connected to nodes <9>, <6>, <8>, <7>, <4>, <10>, <2>.
Node <9> is connected to nodes <1>, <6>, <0>, <5>, <12>, <4>, <10>.
Node <6> is connected to nodes <1>, <9>, <0>, <8>, <3>, <5>, <7>, <4>.
Node <8> is connected to nodes <1>, <6>, <5>, <4>, <10>.
Node <7> is connected to nodes <1>, <6>, <0>, <3>, <5>, <11>, <4>, <10>.
Node <4> is connected to nodes <1>, <9>, <6>, <0>, <8>, <3>, <7>, <11>, <12>, <2>.
Node <10> is connected to nodes <1>, <9>, <8>, <7>, <11>, <12>.
Node <2> is connected to nodes <1>, <3>, <5>, <12>, <4>.
Node <0> is connected to nodes <9>, <6>, <7>, <12>, <4>.
Node <5> is connected to nodes <9>, <6>, <8>, <7>, <11>, <2>.
Node <12> is connected to nodes <9>, <0>, <11>, <4>, <10>, <2>.
Node <3> is connected to nodes <6>, <7>, <11>, <4>, <2>.
Node <11> is connected to nodes <3>, <5>, <7>, <12>, <4>, <10>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,42,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <9>, <6>, <8>, <7>, <11>, <2>, <1>, <0>, <12>, <4>, <10>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<9>, <6>, <8>, <7>, <11>, <2>].
Visit node <9>. Unvisited neighbors of node <9> are [<1>, <0>, <12>, <4>, <10>].
Visit node <6>. Unvisited neighbors of node <6> are [<3>].
Visit node <8>. 
Visit node <7>. 
Visit node <11>. 
Visit node <2>. 
Visit node <1>. 
Visit node <0>. 
Visit node <12>. 
Visit node <4>. 
Visit node <10>. 
Visit node <3>. 
So the BFS traversal is ","('[[<5>, <9>, <6>, <8>, <7>, <11>, <2>, <1>, <0>, <12>, <4>, <10>, <3>], [<5>, <9>, <11>, <10>, <1>, <12>, <0>, <7>, <3>, <8>, <2>, <4>, <6>], [<5>, <9>, <6>, <8>, <12>, <4>, <10>, <3>, <7>, <11>, <2>, <1>, <0>], [<5>, <9>, <6>, <8>, <7>, <11>, <1>, <3>, <12>, <10>, <2>, <4>, <0>]]',)",0,189
BFS,"[(<2>, <1>), (<2>, <5>), (<2>, <9>), (<2>, <8>), (<2>, <6>), (<1>, <4>), (<1>, <5>), (<1>, <10>), (<1>, <0>), (<5>, <12>), (<5>, <6>), (<9>, <11>), (<9>, <3>), (<9>, <10>), (<9>, <7>), (<8>, <6>), (<6>, <12>), (<6>, <4>), (<6>, <11>), (<6>, <10>), (<6>, <0>), (<12>, <0>), (<0>, <11>), (<0>, <10>), (<0>, <7>), (<4>, <10>), (<4>, <7>), (<10>, <3>), (<7>, <3>)]","{<2>: [<1>, <5>, <9>, <8>, <6>],
<1>: [<2>, <4>, <5>, <10>, <0>],
<5>: [<2>, <12>, <1>, <6>],
<9>: [<2>, <11>, <3>, <10>, <7>],
<8>: [<2>, <6>],
<6>: [<2>, <12>, <4>, <11>, <5>, <8>, <10>, <0>],
<12>: [<5>, <0>, <6>],
<0>: [<12>, <11>, <1>, <10>, <7>, <6>],
<4>: [<1>, <10>, <7>, <6>],
<10>: [<4>, <1>, <3>, <9>, <0>, <6>],
<7>: [<4>, <3>, <9>, <0>],
<11>: [<9>, <0>, <6>],
<3>: [<9>, <10>, <7>]}","Node <2> is connected to nodes <1>, <5>, <9>, <8>, <6>.
Node <1> is connected to nodes <2>, <4>, <5>, <10>, <0>.
Node <5> is connected to nodes <2>, <12>, <1>, <6>.
Node <9> is connected to nodes <2>, <11>, <3>, <10>, <7>.
Node <8> is connected to nodes <2>, <6>.
Node <6> is connected to nodes <2>, <12>, <4>, <11>, <5>, <8>, <10>, <0>.
Node <12> is connected to nodes <5>, <0>, <6>.
Node <0> is connected to nodes <12>, <11>, <1>, <10>, <7>, <6>.
Node <4> is connected to nodes <1>, <10>, <7>, <6>.
Node <10> is connected to nodes <4>, <1>, <3>, <9>, <0>, <6>.
Node <7> is connected to nodes <4>, <3>, <9>, <0>.
Node <11> is connected to nodes <9>, <0>, <6>.
Node <3> is connected to nodes <9>, <10>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,29,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <12>, <11>, <1>, <10>, <7>, <6>, <5>, <9>, <2>, <4>, <3>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<12>, <11>, <1>, <10>, <7>, <6>].
Visit node <12>. Unvisited neighbors of node <12> are [<5>].
Visit node <11>. Unvisited neighbors of node <11> are [<9>].
Visit node <1>. Unvisited neighbors of node <1> are [<2>, <4>].
Visit node <10>. Unvisited neighbors of node <10> are [<3>].
Visit node <7>. 
Visit node <6>. Unvisited neighbors of node <6> are [<8>].
Visit node <5>. 
Visit node <9>. 
Visit node <2>. 
Visit node <4>. 
Visit node <3>. 
Visit node <8>. 
So the BFS traversal is ","('[[<0>, <12>, <11>, <1>, <10>, <7>, <6>, <5>, <9>, <2>, <4>, <3>, <8>], [<0>, <12>, <11>, <1>, <2>, <4>, <3>, <8>, <10>, <7>, <6>, <5>, <9>], [<0>, <9>, <8>, <11>, <12>, <5>, <1>, <2>, <10>, <6>, <4>, <7>, <3>], [<0>, <12>, <11>, <1>, <10>, <7>, <9>, <6>, <4>, <8>, <3>, <2>, <5>]]',)",0,190
BFS,"[(<3>, <1>), (<3>, <5>), (<3>, <7>), (<1>, <4>), (<1>, <6>), (<1>, <3>), (<5>, <3>), (<7>, <6>), (<7>, <2>), (<4>, <7>), (<4>, <0>), (<4>, <3>), (<6>, <1>), (<6>, <2>), (<6>, <4>), (<6>, <7>), (<2>, <4>), (<2>, <8>), (<2>, <7>), (<2>, <6>), (<2>, <0>), (<8>, <6>), (<8>, <3>), (<8>, <1>), (<8>, <4>), (<0>, <4>), (<0>, <8>), (<0>, <5>)]","{<3>: [<1>, <5>, <7>],
<1>: [<4>, <6>, <3>],
<5>: [<3>],
<7>: [<6>, <2>],
<4>: [<7>, <0>, <3>],
<6>: [<1>, <2>, <4>, <7>],
<2>: [<4>, <8>, <7>, <6>, <0>],
<8>: [<6>, <3>, <1>, <4>],
<0>: [<4>, <8>, <5>]}","Node <3> is connected to nodes <1>, <5>, <7>.
Node <1> is connected to nodes <4>, <6>, <3>.
Node <5> is connected to node <3>.
Node <7> is connected to nodes <6>, <2>.
Node <4> is connected to nodes <7>, <0>, <3>.
Node <6> is connected to nodes <1>, <2>, <4>, <7>.
Node <2> is connected to nodes <4>, <8>, <7>, <6>, <0>.
Node <8> is connected to nodes <6>, <3>, <1>, <4>.
Node <0> is connected to nodes <4>, <8>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,28,True,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <6>, <2>, <1>, <4>, <8>, <0>, <3>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<6>, <2>].
Visit node <6>. Unvisited neighbors of node <6> are [<1>, <4>].
Visit node <2>. Unvisited neighbors of node <2> are [<8>, <0>].
Visit node <1>. Unvisited neighbors of node <1> are [<3>].
Visit node <4>. 
Visit node <8>. 
Visit node <0>. Unvisited neighbors of node <0> are [<5>].
Visit node <3>. 
Visit node <5>. 
So the BFS traversal is ","('[[<7>, <6>, <2>, <1>, <4>, <8>, <0>, <3>, <5>], [<7>, <6>, <2>, <1>, <4>, <5>, <3>, <0>, <8>], [<7>, <6>, <2>, <0>, <3>, <5>, <1>, <4>, <8>], [<7>, <1>, <3>, <5>, <4>, <2>, <8>, <6>, <0>]]',)",0,191
BFS,"[(<0>, <7>), (<0>, <5>), (<0>, <1>), (<0>, <4>), (<0>, <6>), (<5>, <3>), (<3>, <2>)]","{<0>: [<7>, <5>, <1>, <4>, <6>],
<7>: [<0>],
<5>: [<0>, <3>],
<1>: [<0>],
<4>: [<0>],
<6>: [<0>],
<3>: [<5>, <2>],
<2>: [<3>]}","Node <0> is connected to nodes <7>, <5>, <1>, <4>, <6>.
Node <7> is connected to node <0>.
Node <5> is connected to nodes <0>, <3>.
Node <1> is connected to node <0>.
Node <4> is connected to node <0>.
Node <6> is connected to node <0>.
Node <3> is connected to nodes <5>, <2>.
Node <2> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,7,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <0>, <7>, <5>, <1>, <4>, <3>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<0>].
Visit node <0>. Unvisited neighbors of node <0> are [<7>, <5>, <1>, <4>].
Visit node <7>. 
Visit node <5>. Unvisited neighbors of node <5> are [<3>].
Visit node <1>. 
Visit node <4>. 
Visit node <3>. Unvisited neighbors of node <3> are [<2>].
Visit node <2>. 
So the BFS traversal is ","('[[<6>, <0>, <7>, <5>, <1>, <4>, <3>, <2>], [<6>, <3>, <5>, <4>, <7>, <0>, <2>, <1>], [<6>, <0>, <3>, <2>, <7>, <5>, <1>, <4>], [<6>, <0>, <7>, <5>, <2>, <3>, <4>, <1>]]',)",0,192
BFS,"[(<3>, <5>), (<3>, <0>), (<3>, <2>), (<3>, <8>), (<5>, <7>), (<2>, <4>), (<8>, <1>), (<1>, <9>), (<9>, <6>), (<6>, <4>)]","{<3>: [<5>, <0>, <2>, <8>],
<5>: [<3>, <7>],
<0>: [<3>],
<2>: [<3>, <4>],
<8>: [<3>, <1>],
<7>: [<5>],
<1>: [<9>, <8>],
<9>: [<1>, <6>],
<6>: [<9>, <4>],
<4>: [<6>, <2>]}","Node <3> is connected to nodes <5>, <0>, <2>, <8>.
Node <5> is connected to nodes <3>, <7>.
Node <0> is connected to node <3>.
Node <2> is connected to nodes <3>, <4>.
Node <8> is connected to nodes <3>, <1>.
Node <7> is connected to node <5>.
Node <1> is connected to nodes <9>, <8>.
Node <9> is connected to nodes <1>, <6>.
Node <6> is connected to nodes <9>, <4>.
Node <4> is connected to nodes <6>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,10,False,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <3>, <1>, <5>, <0>, <2>, <9>, <7>, <4>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<3>, <1>].
Visit node <3>. Unvisited neighbors of node <3> are [<5>, <0>, <2>].
Visit node <1>. Unvisited neighbors of node <1> are [<9>].
Visit node <5>. Unvisited neighbors of node <5> are [<7>].
Visit node <0>. 
Visit node <2>. Unvisited neighbors of node <2> are [<4>].
Visit node <9>. Unvisited neighbors of node <9> are [<6>].
Visit node <7>. 
Visit node <4>. 
Visit node <6>. 
So the BFS traversal is ","('[[<8>, <5>, <3>, <2>, <1>, <9>, <6>, <0>, <4>, <7>], [<8>, <3>, <1>, <5>, <0>, <2>, <9>, <7>, <4>, <6>], [<8>, <3>, <1>, <5>, <0>, <4>, <9>, <2>, <6>, <7>], [<8>, <3>, <1>, <7>, <4>, <6>, <5>, <0>, <2>, <9>]]',)",1,193
BFS,"[(<9>, <3>), (<9>, <11>), (<9>, <14>), (<9>, <4>), (<9>, <6>), (<9>, <0>), (<9>, <12>), (<9>, <10>), (<9>, <5>), (<3>, <12>), (<3>, <2>), (<3>, <4>), (<3>, <6>), (<3>, <13>), (<3>, <0>), (<3>, <14>), (<3>, <8>), (<3>, <1>), (<11>, <8>), (<11>, <6>), (<14>, <7>), (<6>, <2>), (<12>, <5>), (<10>, <1>), (<2>, <7>), (<13>, <8>)]","{<9>: [<3>, <11>, <14>, <4>, <6>, <0>, <12>, <10>, <5>],
<3>: [<9>, <12>, <2>, <4>, <6>, <13>, <0>, <14>, <8>, <1>],
<11>: [<9>, <8>, <6>],
<14>: [<9>, <3>, <7>],
<4>: [<9>, <3>],
<6>: [<9>, <3>, <11>, <2>],
<0>: [<9>, <3>],
<12>: [<9>, <3>, <5>],
<10>: [<9>, <1>],
<5>: [<9>, <12>],
<2>: [<3>, <7>, <6>],
<13>: [<3>, <8>],
<8>: [<3>, <11>, <13>],
<1>: [<3>, <10>],
<7>: [<14>, <2>]}","Node <9> is connected to nodes <3>, <11>, <14>, <4>, <6>, <0>, <12>, <10>, <5>.
Node <3> is connected to nodes <9>, <12>, <2>, <4>, <6>, <13>, <0>, <14>, <8>, <1>.
Node <11> is connected to nodes <9>, <8>, <6>.
Node <14> is connected to nodes <9>, <3>, <7>.
Node <4> is connected to nodes <9>, <3>.
Node <6> is connected to nodes <9>, <3>, <11>, <2>.
Node <0> is connected to nodes <9>, <3>.
Node <12> is connected to nodes <9>, <3>, <5>.
Node <10> is connected to nodes <9>, <1>.
Node <5> is connected to nodes <9>, <12>.
Node <2> is connected to nodes <3>, <7>, <6>.
Node <13> is connected to nodes <3>, <8>.
Node <8> is connected to nodes <3>, <11>, <13>.
Node <1> is connected to nodes <3>, <10>.
Node <7> is connected to nodes <14>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,26,False,"Start from node <13>, output a sequence of traversal in breadth-first search (BFS) order.","[<13>, <3>, <8>, <9>, <12>, <2>, <4>, <6>, <0>, <14>, <1>, <11>, <10>, <5>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <13>. Unvisited neighbors of node <13> are [<3>, <8>].
Visit node <3>. Unvisited neighbors of node <3> are [<9>, <12>, <2>, <4>, <6>, <0>, <14>, <1>].
Visit node <8>. Unvisited neighbors of node <8> are [<11>].
Visit node <9>. Unvisited neighbors of node <9> are [<10>, <5>].
Visit node <12>. 
Visit node <2>. Unvisited neighbors of node <2> are [<7>].
Visit node <4>. 
Visit node <6>. 
Visit node <0>. 
Visit node <14>. 
Visit node <1>. 
Visit node <11>. 
Visit node <10>. 
Visit node <5>. 
Visit node <7>. 
So the BFS traversal is ","('[[<13>, <3>, <2>, <1>, <0>, <9>, <10>, <6>, <5>, <4>, <11>, <14>, <7>, <8>, <12>], [<13>, <3>, <8>, <9>, <12>, <1>, <11>, <10>, <5>, <7>, <2>, <4>, <6>, <0>, <14>], [<13>, <3>, <8>, <9>, <12>, <2>, <4>, <6>, <0>, <14>, <1>, <11>, <10>, <5>, <7>], [<13>, <3>, <8>, <9>, <12>, <2>, <4>, <11>, <5>, <6>, <10>, <7>, <0>, <14>, <1>]]',)",2,194
BFS,"[(<13>, <11>), (<13>, <4>), (<13>, <2>), (<13>, <6>), (<13>, <12>), (<13>, <3>), (<13>, <9>), (<13>, <7>), (<13>, <5>), (<13>, <0>), (<4>, <1>), (<5>, <8>), (<0>, <10>)]","{<13>: [<11>, <4>, <2>, <6>, <12>, <3>, <9>, <7>, <5>, <0>],
<11>: [<13>],
<4>: [<13>, <1>],
<2>: [<13>],
<6>: [<13>],
<12>: [<13>],
<3>: [<13>],
<9>: [<13>],
<7>: [<13>],
<5>: [<13>, <8>],
<0>: [<13>, <10>],
<8>: [<5>],
<1>: [<4>],
<10>: [<0>]}","Node <13> is connected to nodes <11>, <4>, <2>, <6>, <12>, <3>, <9>, <7>, <5>, <0>.
Node <11> is connected to node <13>.
Node <4> is connected to nodes <13>, <1>.
Node <2> is connected to node <13>.
Node <6> is connected to node <13>.
Node <12> is connected to node <13>.
Node <3> is connected to node <13>.
Node <9> is connected to node <13>.
Node <7> is connected to node <13>.
Node <5> is connected to nodes <13>, <8>.
Node <0> is connected to nodes <13>, <10>.
Node <8> is connected to node <5>.
Node <1> is connected to node <4>.
Node <10> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,13,False,"Start from node <13>, output a sequence of traversal in breadth-first search (BFS) order.","[<13>, <11>, <4>, <2>, <6>, <12>, <3>, <9>, <7>, <5>, <0>, <1>, <8>, <10>]","Let's run breadth-first search (BFS) step by step.
Visit node <13>. Unvisited neighbors of node <13> are [<11>, <4>, <2>, <6>, <12>, <3>, <9>, <7>, <5>, <0>].
Visit node <11>. 
Visit node <4>. Unvisited neighbors of node <4> are [<1>].
Visit node <2>. 
Visit node <6>. 
Visit node <12>. 
Visit node <3>. 
Visit node <9>. 
Visit node <7>. 
Visit node <5>. Unvisited neighbors of node <5> are [<8>].
Visit node <0>. Unvisited neighbors of node <0> are [<10>].
Visit node <1>. 
Visit node <8>. 
Visit node <10>. 
So the BFS traversal is ","('[[<13>, <11>, <4>, <2>, <0>, <1>, <8>, <10>, <6>, <12>, <3>, <9>, <7>, <5>], [<13>, <11>, <4>, <2>, <6>, <12>, <3>, <9>, <7>, <5>, <0>, <1>, <8>, <10>], [<13>, <6>, <0>, <10>, <2>, <5>, <9>, <1>, <4>, <3>, <11>, <12>, <7>, <8>], [<13>, <11>, <4>, <2>, <6>, <12>, <3>, <0>, <5>, <7>, <8>, <10>, <1>, <9>]]',)",1,195
BFS,"[(<7>, <9>), (<7>, <6>), (<9>, <12>), (<9>, <10>), (<9>, <2>), (<9>, <13>), (<6>, <11>), (<12>, <5>), (<2>, <0>), (<13>, <0>), (<5>, <8>), (<1>, <11>), (<1>, <3>), (<4>, <8>)]","{<7>: [<9>, <6>],
<9>: [<7>, <12>, <10>, <2>, <13>],
<6>: [<7>, <11>],
<12>: [<9>, <5>],
<10>: [<9>],
<2>: [<9>, <0>],
<13>: [<9>, <0>],
<5>: [<12>, <8>],
<1>: [<11>, <3>],
<11>: [<1>, <6>],
<3>: [<1>],
<0>: [<2>, <13>],
<4>: [<8>],
<8>: [<4>, <5>]}","Node <7> is connected to nodes <9>, <6>.
Node <9> is connected to nodes <7>, <12>, <10>, <2>, <13>.
Node <6> is connected to nodes <7>, <11>.
Node <12> is connected to nodes <9>, <5>.
Node <10> is connected to node <9>.
Node <2> is connected to nodes <9>, <0>.
Node <13> is connected to nodes <9>, <0>.
Node <5> is connected to nodes <12>, <8>.
Node <1> is connected to nodes <11>, <3>.
Node <11> is connected to nodes <1>, <6>.
Node <3> is connected to node <1>.
Node <0> is connected to nodes <2>, <13>.
Node <4> is connected to node <8>.
Node <8> is connected to nodes <4>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,14,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <8>, <5>, <12>, <9>, <7>, <10>, <2>, <13>, <6>, <0>, <11>, <1>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<8>].
Visit node <8>. Unvisited neighbors of node <8> are [<5>].
Visit node <5>. Unvisited neighbors of node <5> are [<12>].
Visit node <12>. Unvisited neighbors of node <12> are [<9>].
Visit node <9>. Unvisited neighbors of node <9> are [<7>, <10>, <2>, <13>].
Visit node <7>. Unvisited neighbors of node <7> are [<6>].
Visit node <10>. 
Visit node <2>. Unvisited neighbors of node <2> are [<0>].
Visit node <13>. 
Visit node <6>. Unvisited neighbors of node <6> are [<11>].
Visit node <0>. 
Visit node <11>. Unvisited neighbors of node <11> are [<1>].
Visit node <1>. Unvisited neighbors of node <1> are [<3>].
Visit node <3>. 
So the BFS traversal is ","('[[<4>, <8>, <5>, <12>, <9>, <7>, <10>, <6>, <0>, <13>, <2>, <11>, <1>, <3>], [<4>, <8>, <5>, <12>, <9>, <7>, <10>, <2>, <13>, <6>, <0>, <11>, <1>, <3>], [<4>, <8>, <5>, <12>, <0>, <11>, <1>, <3>, <9>, <7>, <10>, <2>, <13>, <6>], [<4>, <12>, <8>, <5>, <11>, <3>, <0>, <7>, <6>, <2>, <1>, <9>, <13>, <10>]]',)",1,196
BFS,"[(<5>, <2>), (<5>, <0>), (<5>, <4>), (<5>, <3>), (<5>, <6>), (<5>, <8>), (<5>, <1>), (<5>, <7>), (<2>, <8>), (<2>, <6>), (<2>, <0>), (<0>, <4>), (<4>, <6>), (<4>, <9>), (<3>, <7>), (<6>, <8>), (<6>, <1>), (<8>, <9>), (<8>, <7>), (<1>, <9>), (<7>, <9>)]","{<5>: [<2>, <0>, <4>, <3>, <6>, <8>, <1>, <7>],
<2>: [<5>, <8>, <6>, <0>],
<0>: [<5>, <2>, <4>],
<4>: [<5>, <0>, <6>, <9>],
<3>: [<5>, <7>],
<6>: [<5>, <2>, <8>, <4>, <1>],
<8>: [<5>, <2>, <6>, <9>, <7>],
<1>: [<5>, <6>, <9>],
<7>: [<5>, <8>, <9>, <3>],
<9>: [<8>, <4>, <1>, <7>]}","Node <5> is connected to nodes <2>, <0>, <4>, <3>, <6>, <8>, <1>, <7>.
Node <2> is connected to nodes <5>, <8>, <6>, <0>.
Node <0> is connected to nodes <5>, <2>, <4>.
Node <4> is connected to nodes <5>, <0>, <6>, <9>.
Node <3> is connected to nodes <5>, <7>.
Node <6> is connected to nodes <5>, <2>, <8>, <4>, <1>.
Node <8> is connected to nodes <5>, <2>, <6>, <9>, <7>.
Node <1> is connected to nodes <5>, <6>, <9>.
Node <7> is connected to nodes <5>, <8>, <9>, <3>.
Node <9> is connected to nodes <8>, <4>, <1>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,21,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <5>, <2>, <4>, <3>, <6>, <8>, <1>, <7>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<5>, <2>, <4>].
Visit node <5>. Unvisited neighbors of node <5> are [<3>, <6>, <8>, <1>, <7>].
Visit node <2>. 
Visit node <4>. Unvisited neighbors of node <4> are [<9>].
Visit node <3>. 
Visit node <6>. 
Visit node <8>. 
Visit node <1>. 
Visit node <7>. 
Visit node <9>. 
So the BFS traversal is ","('[[<0>, <5>, <1>, <2>, <3>, <4>, <9>, <6>, <8>, <7>], [<0>, <5>, <2>, <4>, <3>, <6>, <9>, <1>, <8>, <7>], [<0>, <5>, <2>, <1>, <7>, <9>, <4>, <3>, <6>, <8>], [<0>, <5>, <2>, <4>, <3>, <6>, <8>, <1>, <7>, <9>]]',)",3,197
BFS,"[(<1>, <4>), (<1>, <5>), (<4>, <10>), (<5>, <10>), (<5>, <6>), (<5>, <8>), (<5>, <2>), (<5>, <3>), (<10>, <7>), (<10>, <2>), (<7>, <8>), (<2>, <8>), (<6>, <9>), (<6>, <0>), (<6>, <8>), (<9>, <3>), (<0>, <8>), (<8>, <3>)]","{<1>: [<4>, <5>],
<4>: [<1>, <10>],
<5>: [<1>, <10>, <6>, <8>, <2>, <3>],
<10>: [<4>, <5>, <7>, <2>],
<7>: [<10>, <8>],
<2>: [<10>, <5>, <8>],
<6>: [<9>, <0>, <5>, <8>],
<9>: [<6>, <3>],
<0>: [<6>, <8>],
<8>: [<6>, <5>, <2>, <7>, <0>, <3>],
<3>: [<9>, <5>, <8>]}","Node <1> is connected to nodes <4>, <5>.
Node <4> is connected to nodes <1>, <10>.
Node <5> is connected to nodes <1>, <10>, <6>, <8>, <2>, <3>.
Node <10> is connected to nodes <4>, <5>, <7>, <2>.
Node <7> is connected to nodes <10>, <8>.
Node <2> is connected to nodes <10>, <5>, <8>.
Node <6> is connected to nodes <9>, <0>, <5>, <8>.
Node <9> is connected to nodes <6>, <3>.
Node <0> is connected to nodes <6>, <8>.
Node <8> is connected to nodes <6>, <5>, <2>, <7>, <0>, <3>.
Node <3> is connected to nodes <9>, <5>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,18,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <9>, <0>, <5>, <8>, <3>, <1>, <10>, <2>, <7>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<9>, <0>, <5>, <8>].
Visit node <9>. Unvisited neighbors of node <9> are [<3>].
Visit node <0>. 
Visit node <5>. Unvisited neighbors of node <5> are [<1>, <10>, <2>].
Visit node <8>. Unvisited neighbors of node <8> are [<7>].
Visit node <3>. 
Visit node <1>. Unvisited neighbors of node <1> are [<4>].
Visit node <10>. 
Visit node <2>. 
Visit node <7>. 
Visit node <4>. 
So the BFS traversal is ","('[[<6>, <9>, <0>, <5>, <8>, <3>, <1>, <10>, <2>, <7>, <4>], [<6>, <4>, <0>, <3>, <7>, <1>, <5>, <8>, <9>, <10>, <2>], [<6>, <9>, <0>, <2>, <7>, <4>, <5>, <8>, <3>, <1>, <10>], [<6>, <9>, <0>, <5>, <8>, <1>, <7>, <3>, <4>, <10>, <2>]]',)",0,198
BFS,"[(<2>, <9>), (<2>, <12>), (<2>, <13>), (<9>, <6>), (<12>, <5>), (<12>, <10>), (<6>, <0>), (<5>, <0>), (<10>, <3>), (<10>, <11>), (<11>, <4>), (<4>, <1>), (<14>, <8>), (<14>, <1>), (<1>, <7>)]","{<2>: [<9>, <12>, <13>],
<9>: [<2>, <6>],
<12>: [<2>, <5>, <10>],
<13>: [<2>],
<6>: [<9>, <0>],
<5>: [<12>, <0>],
<10>: [<12>, <3>, <11>],
<0>: [<5>, <6>],
<3>: [<10>],
<11>: [<10>, <4>],
<4>: [<11>, <1>],
<14>: [<8>, <1>],
<8>: [<14>],
<1>: [<14>, <4>, <7>],
<7>: [<1>]}","Node <2> is connected to nodes <9>, <12>, <13>.
Node <9> is connected to nodes <2>, <6>.
Node <12> is connected to nodes <2>, <5>, <10>.
Node <13> is connected to node <2>.
Node <6> is connected to nodes <9>, <0>.
Node <5> is connected to nodes <12>, <0>.
Node <10> is connected to nodes <12>, <3>, <11>.
Node <0> is connected to nodes <5>, <6>.
Node <3> is connected to node <10>.
Node <11> is connected to nodes <10>, <4>.
Node <4> is connected to nodes <11>, <1>.
Node <14> is connected to nodes <8>, <1>.
Node <8> is connected to node <14>.
Node <1> is connected to nodes <14>, <4>, <7>.
Node <7> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,15,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <10>, <12>, <11>, <2>, <5>, <4>, <9>, <13>, <0>, <1>, <6>, <14>, <7>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<10>].
Visit node <10>. Unvisited neighbors of node <10> are [<12>, <11>].
Visit node <12>. Unvisited neighbors of node <12> are [<2>, <5>].
Visit node <11>. Unvisited neighbors of node <11> are [<4>].
Visit node <2>. Unvisited neighbors of node <2> are [<9>, <13>].
Visit node <5>. Unvisited neighbors of node <5> are [<0>].
Visit node <4>. Unvisited neighbors of node <4> are [<1>].
Visit node <9>. Unvisited neighbors of node <9> are [<6>].
Visit node <13>. 
Visit node <0>. 
Visit node <1>. Unvisited neighbors of node <1> are [<14>, <7>].
Visit node <6>. 
Visit node <14>. Unvisited neighbors of node <14> are [<8>].
Visit node <7>. 
Visit node <8>. 
So the BFS traversal is ","('[[<3>, <10>, <12>, <11>, <2>, <1>, <6>, <14>, <7>, <8>, <5>, <4>, <9>, <13>, <0>], [<3>, <10>, <13>, <11>, <5>, <9>, <0>, <6>, <12>, <14>, <2>, <1>, <4>, <7>, <8>], [<3>, <10>, <12>, <11>, <2>, <5>, <4>, <8>, <1>, <6>, <13>, <0>, <7>, <9>, <14>], [<3>, <10>, <12>, <11>, <2>, <5>, <4>, <9>, <13>, <0>, <1>, <6>, <14>, <7>, <8>]]',)",3,199
BFS,"[(<6>, <7>), (<6>, <5>), (<6>, <11>), (<6>, <8>), (<7>, <14>), (<7>, <4>), (<7>, <6>), (<5>, <14>), (<5>, <9>), (<5>, <4>), (<11>, <4>), (<11>, <12>), (<8>, <6>), (<8>, <5>), (<8>, <9>), (<8>, <4>), (<12>, <2>), (<12>, <0>), (<12>, <5>), (<12>, <1>), (<12>, <10>), (<2>, <0>), (<2>, <3>), (<0>, <9>), (<0>, <11>), (<0>, <8>), (<0>, <10>), (<0>, <2>), (<1>, <11>), (<1>, <6>), (<1>, <7>), (<1>, <0>), (<10>, <2>), (<10>, <7>), (<10>, <0>), (<10>, <1>), (<10>, <9>), (<10>, <4>), (<3>, <11>), (<3>, <4>), (<3>, <13>), (<3>, <8>), (<3>, <1>), (<14>, <11>), (<14>, <6>), (<14>, <12>), (<14>, <7>), (<14>, <1>), (<4>, <13>), (<4>, <8>), (<4>, <7>), (<4>, <14>), (<9>, <4>), (<9>, <13>), (<9>, <6>), (<9>, <2>), (<9>, <3>), (<13>, <8>), (<13>, <6>), (<13>, <12>), (<13>, <7>), (<13>, <1>), (<13>, <9>), (<13>, <4>)]","{<6>: [<7>, <5>, <11>, <8>],
<7>: [<14>, <4>, <6>],
<5>: [<14>, <9>, <4>],
<11>: [<4>, <12>],
<8>: [<6>, <5>, <9>, <4>],
<12>: [<2>, <0>, <5>, <1>, <10>],
<2>: [<0>, <3>],
<0>: [<9>, <11>, <8>, <10>, <2>],
<1>: [<11>, <6>, <7>, <0>],
<10>: [<2>, <7>, <0>, <1>, <9>, <4>],
<3>: [<11>, <4>, <13>, <8>, <1>],
<14>: [<11>, <6>, <12>, <7>, <1>],
<4>: [<13>, <8>, <7>, <14>],
<9>: [<4>, <13>, <6>, <2>, <3>],
<13>: [<8>, <6>, <12>, <7>, <1>, <9>, <4>]}","Node <6> is connected to nodes <7>, <5>, <11>, <8>.
Node <7> is connected to nodes <14>, <4>, <6>.
Node <5> is connected to nodes <14>, <9>, <4>.
Node <11> is connected to nodes <4>, <12>.
Node <8> is connected to nodes <6>, <5>, <9>, <4>.
Node <12> is connected to nodes <2>, <0>, <5>, <1>, <10>.
Node <2> is connected to nodes <0>, <3>.
Node <0> is connected to nodes <9>, <11>, <8>, <10>, <2>.
Node <1> is connected to nodes <11>, <6>, <7>, <0>.
Node <10> is connected to nodes <2>, <7>, <0>, <1>, <9>, <4>.
Node <3> is connected to nodes <11>, <4>, <13>, <8>, <1>.
Node <14> is connected to nodes <11>, <6>, <12>, <7>, <1>.
Node <4> is connected to nodes <13>, <8>, <7>, <14>.
Node <9> is connected to nodes <4>, <13>, <6>, <2>, <3>.
Node <13> is connected to nodes <8>, <6>, <12>, <7>, <1>, <9>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,64,True,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <13>, <8>, <7>, <14>, <6>, <12>, <1>, <9>, <5>, <11>, <2>, <0>, <10>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<13>, <8>, <7>, <14>].
Visit node <13>. Unvisited neighbors of node <13> are [<6>, <12>, <1>, <9>].
Visit node <8>. Unvisited neighbors of node <8> are [<5>].
Visit node <7>. 
Visit node <14>. Unvisited neighbors of node <14> are [<11>].
Visit node <6>. 
Visit node <12>. Unvisited neighbors of node <12> are [<2>, <0>, <10>].
Visit node <1>. 
Visit node <9>. Unvisited neighbors of node <9> are [<3>].
Visit node <5>. 
Visit node <11>. 
Visit node <2>. 
Visit node <0>. 
Visit node <10>. 
Visit node <3>. 
So the BFS traversal is ","('[[<4>, <13>, <8>, <7>, <14>, <11>, <2>, <0>, <10>, <3>, <6>, <12>, <1>, <9>, <5>], [<4>, <13>, <8>, <7>, <14>, <6>, <12>, <1>, <9>, <5>, <11>, <2>, <0>, <10>, <3>], [<4>, <6>, <0>, <12>, <2>, <10>, <9>, <7>, <3>, <1>, <11>, <8>, <5>, <13>, <14>], [<4>, <13>, <8>, <7>, <14>, <6>, <12>, <11>, <2>, <5>, <3>, <1>, <10>, <9>, <0>]]',)",1,200
BFS,"[(<3>, <7>), (<3>, <6>), (<3>, <5>), (<3>, <0>), (<3>, <1>), (<7>, <8>), (<7>, <6>), (<7>, <9>), (<7>, <10>), (<7>, <4>), (<6>, <8>), (<6>, <9>), (<6>, <2>), (<6>, <5>), (<6>, <0>), (<6>, <1>), (<5>, <8>), (<5>, <9>), (<5>, <10>), (<5>, <2>), (<5>, <4>), (<5>, <0>), (<0>, <9>), (<0>, <10>), (<0>, <2>), (<0>, <1>), (<1>, <9>), (<1>, <10>), (<1>, <4>), (<8>, <9>), (<8>, <2>), (<8>, <4>), (<9>, <10>), (<9>, <2>), (<9>, <4>), (<10>, <2>), (<10>, <4>), (<4>, <2>)]","{<3>: [<7>, <6>, <5>, <0>, <1>],
<7>: [<3>, <8>, <6>, <9>, <10>, <4>],
<6>: [<3>, <7>, <8>, <9>, <2>, <5>, <0>, <1>],
<5>: [<3>, <8>, <6>, <9>, <10>, <2>, <4>, <0>],
<0>: [<3>, <6>, <9>, <10>, <2>, <5>, <1>],
<1>: [<3>, <6>, <9>, <10>, <4>, <0>],
<8>: [<7>, <6>, <9>, <2>, <5>, <4>],
<9>: [<7>, <8>, <6>, <10>, <2>, <5>, <4>, <0>, <1>],
<10>: [<7>, <9>, <2>, <5>, <4>, <0>, <1>],
<4>: [<7>, <8>, <9>, <10>, <2>, <5>, <1>],
<2>: [<8>, <6>, <9>, <10>, <5>, <4>, <0>]}","Node <3> is connected to nodes <7>, <6>, <5>, <0>, <1>.
Node <7> is connected to nodes <3>, <8>, <6>, <9>, <10>, <4>.
Node <6> is connected to nodes <3>, <7>, <8>, <9>, <2>, <5>, <0>, <1>.
Node <5> is connected to nodes <3>, <8>, <6>, <9>, <10>, <2>, <4>, <0>.
Node <0> is connected to nodes <3>, <6>, <9>, <10>, <2>, <5>, <1>.
Node <1> is connected to nodes <3>, <6>, <9>, <10>, <4>, <0>.
Node <8> is connected to nodes <7>, <6>, <9>, <2>, <5>, <4>.
Node <9> is connected to nodes <7>, <8>, <6>, <10>, <2>, <5>, <4>, <0>, <1>.
Node <10> is connected to nodes <7>, <9>, <2>, <5>, <4>, <0>, <1>.
Node <4> is connected to nodes <7>, <8>, <9>, <10>, <2>, <5>, <1>.
Node <2> is connected to nodes <8>, <6>, <9>, <10>, <5>, <4>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,38,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <7>, <8>, <6>, <10>, <2>, <5>, <4>, <0>, <1>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<7>, <8>, <6>, <10>, <2>, <5>, <4>, <0>, <1>].
Visit node <7>. Unvisited neighbors of node <7> are [<3>].
Visit node <8>. 
Visit node <6>. 
Visit node <10>. 
Visit node <2>. 
Visit node <5>. 
Visit node <4>. 
Visit node <0>. 
Visit node <1>. 
Visit node <3>. 
So the BFS traversal is ","('[[<9>, <7>, <8>, <0>, <1>, <3>, <6>, <10>, <2>, <5>, <4>], [<9>, <3>, <5>, <7>, <2>, <0>, <6>, <10>, <1>, <4>, <8>], [<9>, <7>, <8>, <6>, <10>, <0>, <4>, <1>, <5>, <3>, <2>], [<9>, <7>, <8>, <6>, <10>, <2>, <5>, <4>, <0>, <1>, <3>]]',)",3,201
BFS,"[(<1>, <11>), (<11>, <3>), (<3>, <10>), (<3>, <4>), (<10>, <5>), (<10>, <0>), (<4>, <9>), (<5>, <12>), (<2>, <12>), (<2>, <8>), (<12>, <9>), (<8>, <6>), (<6>, <7>)]","{<1>: [<11>],
<11>: [<1>, <3>],
<3>: [<11>, <10>, <4>],
<10>: [<3>, <5>, <0>],
<4>: [<3>, <9>],
<5>: [<10>, <12>],
<0>: [<10>],
<2>: [<12>, <8>],
<12>: [<2>, <9>, <5>],
<8>: [<2>, <6>],
<9>: [<12>, <4>],
<6>: [<8>, <7>],
<7>: [<6>]}","Node <1> is connected to node <11>.
Node <11> is connected to nodes <1>, <3>.
Node <3> is connected to nodes <11>, <10>, <4>.
Node <10> is connected to nodes <3>, <5>, <0>.
Node <4> is connected to nodes <3>, <9>.
Node <5> is connected to nodes <10>, <12>.
Node <0> is connected to node <10>.
Node <2> is connected to nodes <12>, <8>.
Node <12> is connected to nodes <2>, <9>, <5>.
Node <8> is connected to nodes <2>, <6>.
Node <9> is connected to nodes <12>, <4>.
Node <6> is connected to nodes <8>, <7>.
Node <7> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,13,False,"Start from node <10>, output a sequence of traversal in breadth-first search (BFS) order.","[<10>, <3>, <5>, <0>, <11>, <4>, <12>, <1>, <9>, <2>, <8>, <6>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <10>. Unvisited neighbors of node <10> are [<3>, <5>, <0>].
Visit node <3>. Unvisited neighbors of node <3> are [<11>, <4>].
Visit node <5>. Unvisited neighbors of node <5> are [<12>].
Visit node <0>. 
Visit node <11>. Unvisited neighbors of node <11> are [<1>].
Visit node <4>. Unvisited neighbors of node <4> are [<9>].
Visit node <12>. Unvisited neighbors of node <12> are [<2>].
Visit node <1>. 
Visit node <9>. 
Visit node <2>. Unvisited neighbors of node <2> are [<8>].
Visit node <8>. Unvisited neighbors of node <8> are [<6>].
Visit node <6>. Unvisited neighbors of node <6> are [<7>].
Visit node <7>. 
So the BFS traversal is ","('[[<10>, <3>, <5>, <0>, <11>, <4>, <12>, <1>, <9>, <2>, <8>, <6>, <7>], [<10>, <12>, <0>, <11>, <9>, <8>, <1>, <2>, <5>, <3>, <4>, <6>, <7>], [<10>, <3>, <5>, <0>, <11>, <4>, <12>, <6>, <7>, <1>, <2>, <9>, <8>], [<10>, <3>, <5>, <0>, <2>, <8>, <6>, <7>, <11>, <4>, <12>, <1>, <9>]]',)",0,202
BFS,"[(<1>, <9>), (<1>, <7>), (<1>, <0>), (<1>, <14>), (<1>, <6>), (<1>, <5>), (<1>, <10>), (<1>, <3>), (<9>, <12>), (<9>, <4>), (<9>, <0>), (<9>, <13>), (<9>, <2>), (<9>, <10>), (<9>, <11>), (<9>, <3>), (<7>, <12>), (<7>, <4>), (<7>, <0>), (<7>, <14>), (<7>, <6>), (<7>, <5>), (<7>, <2>), (<7>, <8>), (<7>, <10>), (<7>, <11>), (<7>, <3>), (<0>, <12>), (<0>, <14>), (<0>, <2>), (<0>, <8>), (<0>, <10>), (<0>, <11>), (<0>, <3>), (<14>, <4>), (<14>, <13>), (<14>, <2>), (<14>, <8>), (<14>, <11>), (<6>, <12>), (<6>, <13>), (<6>, <5>), (<6>, <2>), (<6>, <8>), (<6>, <10>), (<6>, <11>), (<6>, <3>), (<5>, <4>), (<5>, <13>), (<5>, <2>), (<5>, <8>), (<5>, <10>), (<5>, <11>), (<5>, <3>), (<10>, <12>), (<10>, <13>), (<10>, <2>), (<10>, <11>), (<10>, <3>), (<3>, <4>), (<3>, <13>), (<3>, <8>), (<3>, <11>), (<12>, <4>), (<12>, <2>), (<12>, <8>), (<12>, <11>), (<4>, <13>), (<4>, <2>), (<4>, <8>), (<4>, <11>), (<13>, <8>), (<13>, <11>), (<11>, <8>)]","{<1>: [<9>, <7>, <0>, <14>, <6>, <5>, <10>, <3>],
<9>: [<1>, <12>, <4>, <0>, <13>, <2>, <10>, <11>, <3>],
<7>: [<1>, <12>, <4>, <0>, <14>, <6>, <5>, <2>, <8>, <10>, <11>, <3>],
<0>: [<1>, <9>, <7>, <12>, <14>, <2>, <8>, <10>, <11>, <3>],
<14>: [<1>, <7>, <4>, <0>, <13>, <2>, <8>, <11>],
<6>: [<1>, <7>, <12>, <13>, <5>, <2>, <8>, <10>, <11>, <3>],
<5>: [<1>, <7>, <4>, <6>, <13>, <2>, <8>, <10>, <11>, <3>],
<10>: [<1>, <9>, <7>, <12>, <0>, <6>, <13>, <5>, <2>, <11>, <3>],
<3>: [<1>, <9>, <7>, <4>, <0>, <6>, <13>, <5>, <8>, <10>, <11>],
<12>: [<9>, <7>, <4>, <0>, <6>, <2>, <8>, <10>, <11>],
<4>: [<9>, <7>, <12>, <14>, <13>, <5>, <2>, <8>, <11>, <3>],
<13>: [<9>, <4>, <14>, <6>, <5>, <8>, <10>, <11>, <3>],
<2>: [<9>, <7>, <12>, <4>, <0>, <14>, <6>, <5>, <10>],
<11>: [<9>, <7>, <12>, <4>, <0>, <14>, <6>, <13>, <5>, <8>, <10>, <3>],
<8>: [<7>, <12>, <4>, <0>, <14>, <6>, <13>, <5>, <11>, <3>]}","Node <1> is connected to nodes <9>, <7>, <0>, <14>, <6>, <5>, <10>, <3>.
Node <9> is connected to nodes <1>, <12>, <4>, <0>, <13>, <2>, <10>, <11>, <3>.
Node <7> is connected to nodes <1>, <12>, <4>, <0>, <14>, <6>, <5>, <2>, <8>, <10>, <11>, <3>.
Node <0> is connected to nodes <1>, <9>, <7>, <12>, <14>, <2>, <8>, <10>, <11>, <3>.
Node <14> is connected to nodes <1>, <7>, <4>, <0>, <13>, <2>, <8>, <11>.
Node <6> is connected to nodes <1>, <7>, <12>, <13>, <5>, <2>, <8>, <10>, <11>, <3>.
Node <5> is connected to nodes <1>, <7>, <4>, <6>, <13>, <2>, <8>, <10>, <11>, <3>.
Node <10> is connected to nodes <1>, <9>, <7>, <12>, <0>, <6>, <13>, <5>, <2>, <11>, <3>.
Node <3> is connected to nodes <1>, <9>, <7>, <4>, <0>, <6>, <13>, <5>, <8>, <10>, <11>.
Node <12> is connected to nodes <9>, <7>, <4>, <0>, <6>, <2>, <8>, <10>, <11>.
Node <4> is connected to nodes <9>, <7>, <12>, <14>, <13>, <5>, <2>, <8>, <11>, <3>.
Node <13> is connected to nodes <9>, <4>, <14>, <6>, <5>, <8>, <10>, <11>, <3>.
Node <2> is connected to nodes <9>, <7>, <12>, <4>, <0>, <14>, <6>, <5>, <10>.
Node <11> is connected to nodes <9>, <7>, <12>, <4>, <0>, <14>, <6>, <13>, <5>, <8>, <10>, <3>.
Node <8> is connected to nodes <7>, <12>, <4>, <0>, <14>, <6>, <13>, <5>, <11>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,74,False,"Start from node <10>, output a sequence of traversal in breadth-first search (BFS) order.","[<10>, <1>, <9>, <7>, <12>, <0>, <6>, <13>, <5>, <2>, <11>, <3>, <14>, <4>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <10>. Unvisited neighbors of node <10> are [<1>, <9>, <7>, <12>, <0>, <6>, <13>, <5>, <2>, <11>, <3>].
Visit node <1>. Unvisited neighbors of node <1> are [<14>].
Visit node <9>. Unvisited neighbors of node <9> are [<4>].
Visit node <7>. Unvisited neighbors of node <7> are [<8>].
Visit node <12>. 
Visit node <0>. 
Visit node <6>. 
Visit node <13>. 
Visit node <5>. 
Visit node <2>. 
Visit node <11>. 
Visit node <3>. 
Visit node <14>. 
Visit node <4>. 
Visit node <8>. 
So the BFS traversal is ","('[[<10>, <1>, <9>, <7>, <12>, <11>, <3>, <14>, <4>, <8>, <0>, <6>, <13>, <5>, <2>], [<10>, <2>, <8>, <5>, <0>, <11>, <9>, <1>, <6>, <14>, <12>, <7>, <4>, <3>, <13>], [<10>, <1>, <9>, <7>, <12>, <0>, <6>, <13>, <5>, <2>, <11>, <3>, <14>, <4>, <8>], [<10>, <1>, <9>, <7>, <12>, <0>, <6>, <5>, <11>, <3>, <4>, <8>, <2>, <13>, <14>]]',)",2,203
BFS,"[(<4>, <11>), (<4>, <1>), (<4>, <9>), (<4>, <7>), (<4>, <10>), (<4>, <2>), (<4>, <3>), (<4>, <8>), (<11>, <10>), (<11>, <7>), (<1>, <10>), (<1>, <0>), (<10>, <6>), (<10>, <2>), (<10>, <3>), (<10>, <8>), (<3>, <6>), (<3>, <5>), (<8>, <0>), (<8>, <5>)]","{<4>: [<11>, <1>, <9>, <7>, <10>, <2>, <3>, <8>],
<11>: [<4>, <10>, <7>],
<1>: [<4>, <10>, <0>],
<9>: [<4>],
<7>: [<4>, <11>],
<10>: [<4>, <11>, <6>, <2>, <1>, <3>, <8>],
<2>: [<4>, <10>],
<3>: [<4>, <10>, <6>, <5>],
<8>: [<4>, <10>, <0>, <5>],
<6>: [<10>, <3>],
<0>: [<1>, <8>],
<5>: [<8>, <3>]}","Node <4> is connected to nodes <11>, <1>, <9>, <7>, <10>, <2>, <3>, <8>.
Node <11> is connected to nodes <4>, <10>, <7>.
Node <1> is connected to nodes <4>, <10>, <0>.
Node <9> is connected to node <4>.
Node <7> is connected to nodes <4>, <11>.
Node <10> is connected to nodes <4>, <11>, <6>, <2>, <1>, <3>, <8>.
Node <2> is connected to nodes <4>, <10>.
Node <3> is connected to nodes <4>, <10>, <6>, <5>.
Node <8> is connected to nodes <4>, <10>, <0>, <5>.
Node <6> is connected to nodes <10>, <3>.
Node <0> is connected to nodes <1>, <8>.
Node <5> is connected to nodes <8>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,20,False,"Start from node <10>, output a sequence of traversal in breadth-first search (BFS) order.","[<10>, <4>, <11>, <6>, <2>, <1>, <3>, <8>, <9>, <7>, <0>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <10>. Unvisited neighbors of node <10> are [<4>, <11>, <6>, <2>, <1>, <3>, <8>].
Visit node <4>. Unvisited neighbors of node <4> are [<9>, <7>].
Visit node <11>. 
Visit node <6>. 
Visit node <2>. 
Visit node <1>. Unvisited neighbors of node <1> are [<0>].
Visit node <3>. Unvisited neighbors of node <3> are [<5>].
Visit node <8>. 
Visit node <9>. 
Visit node <7>. 
Visit node <0>. 
Visit node <5>. 
So the BFS traversal is ","('[[<10>, <4>, <11>, <6>, <2>, <1>, <7>, <9>, <8>, <5>, <0>, <3>], [<10>, <11>, <4>, <5>, <6>, <8>, <0>, <9>, <7>, <3>, <2>, <1>], [<10>, <4>, <11>, <6>, <2>, <1>, <3>, <8>, <9>, <7>, <0>, <5>], [<10>, <4>, <11>, <6>, <9>, <7>, <0>, <5>, <2>, <1>, <3>, <8>]]',)",2,204
BFS,"[(<9>, <8>), (<9>, <5>), (<9>, <0>), (<9>, <6>), (<9>, <7>), (<8>, <1>), (<8>, <2>), (<5>, <7>), (<5>, <0>), (<5>, <6>), (<5>, <10>), (<5>, <4>), (<5>, <1>), (<5>, <2>), (<5>, <11>), (<6>, <2>), (<6>, <3>), (<2>, <11>), (<2>, <10>), (<2>, <4>)]","{<9>: [<8>, <5>, <0>, <6>, <7>],
<8>: [<9>, <1>, <2>],
<5>: [<9>, <7>, <0>, <6>, <10>, <4>, <1>, <2>, <11>],
<0>: [<9>, <5>],
<6>: [<9>, <5>, <2>, <3>],
<7>: [<9>, <5>],
<1>: [<8>, <5>],
<2>: [<8>, <5>, <6>, <11>, <10>, <4>],
<10>: [<5>, <2>],
<4>: [<5>, <2>],
<11>: [<5>, <2>],
<3>: [<6>]}","Node <9> is connected to nodes <8>, <5>, <0>, <6>, <7>.
Node <8> is connected to nodes <9>, <1>, <2>.
Node <5> is connected to nodes <9>, <7>, <0>, <6>, <10>, <4>, <1>, <2>, <11>.
Node <0> is connected to nodes <9>, <5>.
Node <6> is connected to nodes <9>, <5>, <2>, <3>.
Node <7> is connected to nodes <9>, <5>.
Node <1> is connected to nodes <8>, <5>.
Node <2> is connected to nodes <8>, <5>, <6>, <11>, <10>, <4>.
Node <10> is connected to nodes <5>, <2>.
Node <4> is connected to nodes <5>, <2>.
Node <11> is connected to nodes <5>, <2>.
Node <3> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,20,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <9>, <5>, <2>, <3>, <8>, <0>, <7>, <10>, <4>, <1>, <11>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<9>, <5>, <2>, <3>].
Visit node <9>. Unvisited neighbors of node <9> are [<8>, <0>, <7>].
Visit node <5>. Unvisited neighbors of node <5> are [<10>, <4>, <1>, <11>].
Visit node <2>. 
Visit node <3>. 
Visit node <8>. 
Visit node <0>. 
Visit node <7>. 
Visit node <10>. 
Visit node <4>. 
Visit node <1>. 
Visit node <11>. 
So the BFS traversal is ","('[[<6>, <9>, <5>, <2>, <3>, <8>, <0>, <7>, <10>, <4>, <1>, <11>], [<6>, <9>, <5>, <2>, <3>, <8>, <10>, <7>, <0>, <11>, <1>, <4>], [<6>, <9>, <5>, <2>, <10>, <4>, <1>, <11>, <3>, <8>, <0>, <7>], [<6>, <0>, <3>, <8>, <11>, <7>, <4>, <1>, <10>, <2>, <9>, <5>]]',)",0,205
BFS,"[(<5>, <0>), (<5>, <8>), (<5>, <1>), (<5>, <6>), (<5>, <4>), (<8>, <2>), (<8>, <6>), (<8>, <7>), (<8>, <5>), (<8>, <3>), (<1>, <6>), (<1>, <4>), (<1>, <2>), (<6>, <9>), (<6>, <4>), (<6>, <3>), (<6>, <2>), (<6>, <1>), (<4>, <0>), (<4>, <3>), (<4>, <6>), (<3>, <8>), (<3>, <2>), (<3>, <1>), (<3>, <6>), (<3>, <7>), (<3>, <5>), (<2>, <4>), (<2>, <5>), (<2>, <0>), (<7>, <9>), (<7>, <4>), (<7>, <0>), (<7>, <6>), (<9>, <0>), (<9>, <2>), (<9>, <1>), (<9>, <7>)]","{<5>: [<0>, <8>, <1>, <6>, <4>],
<0>: [],
<8>: [<2>, <6>, <7>, <5>, <3>],
<1>: [<6>, <4>, <2>],
<6>: [<9>, <4>, <3>, <2>, <1>],
<4>: [<0>, <3>, <6>],
<3>: [<8>, <2>, <1>, <6>, <7>, <5>],
<2>: [<4>, <5>, <0>],
<7>: [<9>, <4>, <0>, <6>],
<9>: [<0>, <2>, <1>, <7>]}","Node <5> is connected to nodes <0>, <8>, <1>, <6>, <4>.
Node <8> is connected to nodes <2>, <6>, <7>, <5>, <3>.
Node <1> is connected to nodes <6>, <4>, <2>.
Node <6> is connected to nodes <9>, <4>, <3>, <2>, <1>.
Node <4> is connected to nodes <0>, <3>, <6>.
Node <3> is connected to nodes <8>, <2>, <1>, <6>, <7>, <5>.
Node <2> is connected to nodes <4>, <5>, <0>.
Node <7> is connected to nodes <9>, <4>, <0>, <6>.
Node <9> is connected to nodes <0>, <2>, <1>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,38,True,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <4>, <5>, <0>, <3>, <6>, <8>, <1>, <7>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<4>, <5>, <0>].
Visit node <4>. Unvisited neighbors of node <4> are [<3>, <6>].
Visit node <5>. Unvisited neighbors of node <5> are [<8>, <1>].
Visit node <0>. 
Visit node <3>. Unvisited neighbors of node <3> are [<7>].
Visit node <6>. Unvisited neighbors of node <6> are [<9>].
Visit node <8>. 
Visit node <1>. 
Visit node <7>. 
Visit node <9>. 
So the BFS traversal is ","('[[<2>, <4>, <5>, <0>, <3>, <1>, <7>, <9>, <6>, <8>], [<2>, <4>, <5>, <1>, <7>, <9>, <0>, <3>, <6>, <8>], [<2>, <4>, <5>, <0>, <3>, <6>, <8>, <1>, <7>, <9>], [<2>, <3>, <4>, <9>, <7>, <8>, <6>, <5>, <0>, <1>]]',)",2,206
BFS,"[(<14>, <6>), (<14>, <13>), (<14>, <1>), (<14>, <4>), (<14>, <9>), (<6>, <3>), (<6>, <10>), (<6>, <2>), (<6>, <1>), (<6>, <7>), (<13>, <0>), (<13>, <3>), (<13>, <1>), (<13>, <5>), (<13>, <4>), (<1>, <2>), (<1>, <12>), (<4>, <2>), (<4>, <5>), (<4>, <11>), (<9>, <11>), (<9>, <12>), (<3>, <10>), (<3>, <2>), (<3>, <5>), (<3>, <12>), (<10>, <0>), (<10>, <8>), (<10>, <2>), (<10>, <5>), (<10>, <11>), (<2>, <7>), (<7>, <0>), (<7>, <8>), (<7>, <5>), (<7>, <11>), (<7>, <12>), (<0>, <8>), (<0>, <11>), (<8>, <12>), (<11>, <5>), (<5>, <12>)]","{<14>: [<6>, <13>, <1>, <4>, <9>],
<6>: [<14>, <3>, <10>, <2>, <1>, <7>],
<13>: [<14>, <0>, <3>, <1>, <5>, <4>],
<1>: [<14>, <6>, <13>, <2>, <12>],
<4>: [<14>, <13>, <2>, <5>, <11>],
<9>: [<14>, <11>, <12>],
<3>: [<6>, <13>, <10>, <2>, <5>, <12>],
<10>: [<6>, <0>, <3>, <8>, <2>, <5>, <11>],
<2>: [<6>, <3>, <10>, <1>, <7>, <4>],
<7>: [<6>, <0>, <8>, <2>, <5>, <11>, <12>],
<0>: [<13>, <10>, <8>, <7>, <11>],
<8>: [<0>, <10>, <7>, <12>],
<11>: [<0>, <10>, <5>, <7>, <4>, <9>],
<5>: [<13>, <3>, <10>, <7>, <11>, <12>, <4>],
<12>: [<3>, <8>, <1>, <5>, <7>, <9>]}","Node <14> is connected to nodes <6>, <13>, <1>, <4>, <9>.
Node <6> is connected to nodes <14>, <3>, <10>, <2>, <1>, <7>.
Node <13> is connected to nodes <14>, <0>, <3>, <1>, <5>, <4>.
Node <1> is connected to nodes <14>, <6>, <13>, <2>, <12>.
Node <4> is connected to nodes <14>, <13>, <2>, <5>, <11>.
Node <9> is connected to nodes <14>, <11>, <12>.
Node <3> is connected to nodes <6>, <13>, <10>, <2>, <5>, <12>.
Node <10> is connected to nodes <6>, <0>, <3>, <8>, <2>, <5>, <11>.
Node <2> is connected to nodes <6>, <3>, <10>, <1>, <7>, <4>.
Node <7> is connected to nodes <6>, <0>, <8>, <2>, <5>, <11>, <12>.
Node <0> is connected to nodes <13>, <10>, <8>, <7>, <11>.
Node <8> is connected to nodes <0>, <10>, <7>, <12>.
Node <11> is connected to nodes <0>, <10>, <5>, <7>, <4>, <9>.
Node <5> is connected to nodes <13>, <3>, <10>, <7>, <11>, <12>, <4>.
Node <12> is connected to nodes <3>, <8>, <1>, <5>, <7>, <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,42,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <13>, <3>, <10>, <7>, <11>, <12>, <4>, <14>, <0>, <1>, <6>, <2>, <8>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<13>, <3>, <10>, <7>, <11>, <12>, <4>].
Visit node <13>. Unvisited neighbors of node <13> are [<14>, <0>, <1>].
Visit node <3>. Unvisited neighbors of node <3> are [<6>, <2>].
Visit node <10>. Unvisited neighbors of node <10> are [<8>].
Visit node <7>. 
Visit node <11>. Unvisited neighbors of node <11> are [<9>].
Visit node <12>. 
Visit node <4>. 
Visit node <14>. 
Visit node <0>. 
Visit node <1>. 
Visit node <6>. 
Visit node <2>. 
Visit node <8>. 
Visit node <9>. 
So the BFS traversal is ","('[[<5>, <13>, <3>, <10>, <7>, <1>, <6>, <2>, <8>, <9>, <11>, <12>, <4>, <14>, <0>], [<5>, <13>, <3>, <10>, <7>, <11>, <12>, <4>, <0>, <1>, <2>, <6>, <8>, <14>, <9>], [<5>, <7>, <3>, <9>, <12>, <1>, <10>, <2>, <6>, <4>, <8>, <11>, <13>, <0>, <14>], [<5>, <13>, <3>, <10>, <7>, <11>, <12>, <4>, <14>, <0>, <1>, <6>, <2>, <8>, <9>]]',)",3,207
BFS,"[(<11>, <2>), (<11>, <12>), (<11>, <4>), (<12>, <5>), (<12>, <8>), (<12>, <1>), (<5>, <10>), (<1>, <0>), (<1>, <13>), (<1>, <3>), (<1>, <7>), (<13>, <6>), (<13>, <9>)]","{<11>: [<2>, <12>, <4>],
<2>: [<11>],
<12>: [<11>, <5>, <8>, <1>],
<4>: [<11>],
<5>: [<12>, <10>],
<8>: [<12>],
<1>: [<12>, <0>, <13>, <3>, <7>],
<10>: [<5>],
<0>: [<1>],
<13>: [<1>, <6>, <9>],
<3>: [<1>],
<7>: [<1>],
<6>: [<13>],
<9>: [<13>]}","Node <11> is connected to nodes <2>, <12>, <4>.
Node <2> is connected to node <11>.
Node <12> is connected to nodes <11>, <5>, <8>, <1>.
Node <4> is connected to node <11>.
Node <5> is connected to nodes <12>, <10>.
Node <8> is connected to node <12>.
Node <1> is connected to nodes <12>, <0>, <13>, <3>, <7>.
Node <10> is connected to node <5>.
Node <0> is connected to node <1>.
Node <13> is connected to nodes <1>, <6>, <9>.
Node <3> is connected to node <1>.
Node <7> is connected to node <1>.
Node <6> is connected to node <13>.
Node <9> is connected to node <13>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,13,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <13>, <1>, <6>, <12>, <0>, <3>, <7>, <11>, <5>, <8>, <2>, <4>, <10>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<13>].
Visit node <13>. Unvisited neighbors of node <13> are [<1>, <6>].
Visit node <1>. Unvisited neighbors of node <1> are [<12>, <0>, <3>, <7>].
Visit node <6>. 
Visit node <12>. Unvisited neighbors of node <12> are [<11>, <5>, <8>].
Visit node <0>. 
Visit node <3>. 
Visit node <7>. 
Visit node <11>. Unvisited neighbors of node <11> are [<2>, <4>].
Visit node <5>. Unvisited neighbors of node <5> are [<10>].
Visit node <8>. 
Visit node <2>. 
Visit node <4>. 
Visit node <10>. 
So the BFS traversal is ","('[[<9>, <13>, <1>, <6>, <12>, <0>, <3>, <4>, <2>, <8>, <11>, <5>, <7>, <10>], [<9>, <3>, <11>, <5>, <4>, <6>, <2>, <13>, <12>, <1>, <10>, <0>, <8>, <7>], [<9>, <13>, <1>, <6>, <8>, <2>, <4>, <10>, <12>, <0>, <3>, <7>, <11>, <5>], [<9>, <13>, <1>, <6>, <12>, <0>, <3>, <7>, <11>, <5>, <8>, <2>, <4>, <10>]]',)",3,208
BFS,"[(<4>, <5>), (<4>, <10>), (<4>, <9>), (<4>, <6>), (<4>, <14>), (<4>, <11>), (<4>, <2>), (<4>, <13>), (<5>, <7>), (<5>, <3>), (<5>, <1>), (<5>, <8>), (<5>, <12>), (<10>, <0>), (<10>, <3>), (<10>, <9>), (<10>, <8>), (<10>, <11>), (<10>, <12>), (<9>, <3>), (<9>, <6>), (<9>, <1>), (<9>, <2>), (<9>, <13>), (<6>, <3>), (<6>, <8>), (<6>, <13>), (<14>, <3>), (<14>, <1>), (<14>, <11>), (<14>, <2>), (<14>, <13>), (<11>, <7>), (<11>, <3>), (<11>, <8>), (<11>, <2>), (<2>, <7>), (<2>, <0>), (<2>, <1>), (<13>, <7>), (<13>, <3>), (<13>, <1>), (<13>, <8>), (<13>, <12>), (<7>, <0>), (<7>, <1>), (<3>, <0>), (<3>, <1>), (<3>, <8>), (<1>, <8>), (<12>, <0>)]","{<4>: [<5>, <10>, <9>, <6>, <14>, <11>, <2>, <13>],
<5>: [<4>, <7>, <3>, <1>, <8>, <12>],
<10>: [<4>, <0>, <3>, <9>, <8>, <11>, <12>],
<9>: [<4>, <10>, <3>, <6>, <1>, <2>, <13>],
<6>: [<4>, <3>, <9>, <8>, <13>],
<14>: [<4>, <3>, <1>, <11>, <2>, <13>],
<11>: [<4>, <7>, <10>, <3>, <14>, <8>, <2>],
<2>: [<4>, <7>, <0>, <9>, <14>, <1>, <11>],
<13>: [<4>, <7>, <3>, <9>, <6>, <14>, <1>, <8>, <12>],
<7>: [<5>, <0>, <1>, <11>, <2>, <13>],
<3>: [<5>, <0>, <10>, <9>, <6>, <14>, <1>, <8>, <11>, <13>],
<1>: [<5>, <7>, <3>, <9>, <14>, <8>, <2>, <13>],
<8>: [<5>, <10>, <3>, <6>, <1>, <11>, <13>],
<12>: [<5>, <0>, <10>, <13>],
<0>: [<7>, <10>, <3>, <12>, <2>]}","Node <4> is connected to nodes <5>, <10>, <9>, <6>, <14>, <11>, <2>, <13>.
Node <5> is connected to nodes <4>, <7>, <3>, <1>, <8>, <12>.
Node <10> is connected to nodes <4>, <0>, <3>, <9>, <8>, <11>, <12>.
Node <9> is connected to nodes <4>, <10>, <3>, <6>, <1>, <2>, <13>.
Node <6> is connected to nodes <4>, <3>, <9>, <8>, <13>.
Node <14> is connected to nodes <4>, <3>, <1>, <11>, <2>, <13>.
Node <11> is connected to nodes <4>, <7>, <10>, <3>, <14>, <8>, <2>.
Node <2> is connected to nodes <4>, <7>, <0>, <9>, <14>, <1>, <11>.
Node <13> is connected to nodes <4>, <7>, <3>, <9>, <6>, <14>, <1>, <8>, <12>.
Node <7> is connected to nodes <5>, <0>, <1>, <11>, <2>, <13>.
Node <3> is connected to nodes <5>, <0>, <10>, <9>, <6>, <14>, <1>, <8>, <11>, <13>.
Node <1> is connected to nodes <5>, <7>, <3>, <9>, <14>, <8>, <2>, <13>.
Node <8> is connected to nodes <5>, <10>, <3>, <6>, <1>, <11>, <13>.
Node <12> is connected to nodes <5>, <0>, <10>, <13>.
Node <0> is connected to nodes <7>, <10>, <3>, <12>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,51,False,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <5>, <7>, <3>, <9>, <14>, <8>, <2>, <13>, <4>, <12>, <0>, <11>, <10>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<5>, <7>, <3>, <9>, <14>, <8>, <2>, <13>].
Visit node <5>. Unvisited neighbors of node <5> are [<4>, <12>].
Visit node <7>. Unvisited neighbors of node <7> are [<0>, <11>].
Visit node <3>. Unvisited neighbors of node <3> are [<10>, <6>].
Visit node <9>. 
Visit node <14>. 
Visit node <8>. 
Visit node <2>. 
Visit node <13>. 
Visit node <4>. 
Visit node <12>. 
Visit node <0>. 
Visit node <11>. 
Visit node <10>. 
Visit node <6>. 
So the BFS traversal is ","('[[<1>, <5>, <7>, <3>, <9>, <14>, <8>, <2>, <13>, <4>, <12>, <0>, <11>, <10>, <6>], [<1>, <5>, <7>, <3>, <9>, <12>, <0>, <11>, <10>, <6>, <14>, <8>, <2>, <13>, <4>], [<1>, <7>, <9>, <0>, <10>, <12>, <3>, <13>, <8>, <11>, <14>, <4>, <2>, <5>, <6>], [<1>, <5>, <7>, <3>, <9>, <14>, <8>, <10>, <0>, <4>, <11>, <6>, <2>, <12>, <13>]]',)",0,209
BFS,"[(<2>, <6>), (<2>, <7>), (<2>, <5>), (<2>, <11>), (<2>, <3>), (<2>, <10>), (<2>, <4>), (<2>, <0>), (<6>, <12>), (<6>, <5>), (<6>, <3>), (<6>, <4>), (<6>, <8>), (<7>, <5>), (<7>, <11>), (<7>, <2>), (<5>, <11>), (<5>, <3>), (<5>, <10>), (<5>, <4>), (<5>, <0>), (<5>, <8>), (<5>, <1>), (<5>, <2>), (<5>, <13>), (<5>, <9>), (<11>, <3>), (<11>, <4>), (<11>, <6>), (<11>, <7>), (<11>, <12>), (<11>, <9>), (<11>, <5>), (<3>, <1>), (<3>, <2>), (<10>, <0>), (<10>, <2>), (<10>, <6>), (<10>, <12>), (<10>, <9>), (<4>, <0>), (<4>, <1>), (<4>, <12>), (<4>, <9>), (<4>, <5>), (<4>, <3>), (<4>, <10>), (<0>, <8>), (<0>, <1>), (<0>, <2>), (<0>, <11>), (<0>, <3>), (<12>, <11>), (<12>, <3>), (<12>, <10>), (<12>, <1>), (<12>, <2>), (<12>, <7>), (<8>, <1>), (<8>, <9>), (<8>, <5>), (<8>, <11>), (<8>, <0>), (<1>, <2>), (<1>, <8>), (<13>, <5>), (<13>, <11>), (<13>, <4>), (<13>, <8>), (<13>, <2>), (<13>, <7>), (<9>, <5>), (<9>, <4>), (<9>, <1>), (<9>, <7>), (<9>, <12>), (<9>, <13>)]","{<2>: [<6>, <7>, <5>, <11>, <3>, <10>, <4>, <0>],
<6>: [<12>, <5>, <3>, <4>, <8>],
<7>: [<5>, <11>, <2>],
<5>: [<11>, <3>, <10>, <4>, <0>, <8>, <1>, <2>, <13>, <9>],
<11>: [<3>, <4>, <6>, <7>, <12>, <9>, <5>],
<3>: [<1>, <2>],
<10>: [<0>, <2>, <6>, <12>, <9>],
<4>: [<0>, <1>, <12>, <9>, <5>, <3>, <10>],
<0>: [<8>, <1>, <2>, <11>, <3>],
<12>: [<11>, <3>, <10>, <1>, <2>, <7>],
<8>: [<1>, <9>, <5>, <11>, <0>],
<1>: [<2>, <8>],
<13>: [<5>, <11>, <4>, <8>, <2>, <7>],
<9>: [<5>, <4>, <1>, <7>, <12>, <13>]}","Node <2> is connected to nodes <6>, <7>, <5>, <11>, <3>, <10>, <4>, <0>.
Node <6> is connected to nodes <12>, <5>, <3>, <4>, <8>.
Node <7> is connected to nodes <5>, <11>, <2>.
Node <5> is connected to nodes <11>, <3>, <10>, <4>, <0>, <8>, <1>, <2>, <13>, <9>.
Node <11> is connected to nodes <3>, <4>, <6>, <7>, <12>, <9>, <5>.
Node <3> is connected to nodes <1>, <2>.
Node <10> is connected to nodes <0>, <2>, <6>, <12>, <9>.
Node <4> is connected to nodes <0>, <1>, <12>, <9>, <5>, <3>, <10>.
Node <0> is connected to nodes <8>, <1>, <2>, <11>, <3>.
Node <12> is connected to nodes <11>, <3>, <10>, <1>, <2>, <7>.
Node <8> is connected to nodes <1>, <9>, <5>, <11>, <0>.
Node <1> is connected to nodes <2>, <8>.
Node <13> is connected to nodes <5>, <11>, <4>, <8>, <2>, <7>.
Node <9> is connected to nodes <5>, <4>, <1>, <7>, <12>, <13>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,77,True,"Start from node <13>, output a sequence of traversal in breadth-first search (BFS) order.","[<13>, <5>, <11>, <4>, <8>, <2>, <7>, <3>, <10>, <0>, <1>, <9>, <6>, <12>]","Let's run breadth-first search (BFS) step by step.
Visit node <13>. Unvisited neighbors of node <13> are [<5>, <11>, <4>, <8>, <2>, <7>].
Visit node <5>. Unvisited neighbors of node <5> are [<3>, <10>, <0>, <1>, <9>].
Visit node <11>. Unvisited neighbors of node <11> are [<6>, <12>].
Visit node <4>. 
Visit node <8>. 
Visit node <2>. 
Visit node <7>. 
Visit node <3>. 
Visit node <10>. 
Visit node <0>. 
Visit node <1>. 
Visit node <9>. 
Visit node <6>. 
Visit node <12>. 
So the BFS traversal is ","('[[<13>, <5>, <11>, <4>, <1>, <9>, <6>, <12>, <8>, <2>, <7>, <3>, <10>, <0>], [<13>, <2>, <10>, <7>, <1>, <11>, <5>, <3>, <0>, <12>, <4>, <9>, <8>, <6>], [<13>, <5>, <11>, <4>, <8>, <2>, <7>, <3>, <10>, <0>, <1>, <9>, <6>, <12>], [<13>, <5>, <11>, <4>, <8>, <2>, <7>, <3>, <6>, <10>, <1>, <12>, <9>, <0>]]',)",2,210
BFS,"[(<0>, <6>), (<0>, <10>), (<0>, <8>), (<0>, <2>), (<0>, <5>), (<0>, <3>), (<2>, <4>), (<5>, <7>), (<5>, <1>), (<5>, <11>), (<5>, <9>), (<7>, <12>)]","{<0>: [<6>, <10>, <8>, <2>, <5>, <3>],
<6>: [<0>],
<10>: [<0>],
<8>: [<0>],
<2>: [<0>, <4>],
<5>: [<0>, <7>, <1>, <11>, <9>],
<3>: [<0>],
<7>: [<5>, <12>],
<1>: [<5>],
<11>: [<5>],
<9>: [<5>],
<12>: [<7>],
<4>: [<2>]}","Node <0> is connected to nodes <6>, <10>, <8>, <2>, <5>, <3>.
Node <6> is connected to node <0>.
Node <10> is connected to node <0>.
Node <8> is connected to node <0>.
Node <2> is connected to nodes <0>, <4>.
Node <5> is connected to nodes <0>, <7>, <1>, <11>, <9>.
Node <3> is connected to node <0>.
Node <7> is connected to nodes <5>, <12>.
Node <1> is connected to node <5>.
Node <11> is connected to node <5>.
Node <9> is connected to node <5>.
Node <12> is connected to node <7>.
Node <4> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,12,False,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <5>, <0>, <7>, <11>, <9>, <6>, <10>, <8>, <2>, <3>, <12>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<5>].
Visit node <5>. Unvisited neighbors of node <5> are [<0>, <7>, <11>, <9>].
Visit node <0>. Unvisited neighbors of node <0> are [<6>, <10>, <8>, <2>, <3>].
Visit node <7>. Unvisited neighbors of node <7> are [<12>].
Visit node <11>. 
Visit node <9>. 
Visit node <6>. 
Visit node <10>. 
Visit node <8>. 
Visit node <2>. Unvisited neighbors of node <2> are [<4>].
Visit node <3>. 
Visit node <12>. 
Visit node <4>. 
So the BFS traversal is ","('[[<1>, <5>, <0>, <7>, <2>, <3>, <12>, <4>, <11>, <9>, <6>, <10>, <8>], [<1>, <7>, <0>, <9>, <3>, <6>, <12>, <4>, <5>, <8>, <2>, <10>, <11>], [<1>, <5>, <0>, <7>, <11>, <9>, <4>, <3>, <6>, <10>, <2>, <8>, <12>], [<1>, <5>, <0>, <7>, <11>, <9>, <6>, <10>, <8>, <2>, <3>, <12>, <4>]]',)",3,211
BFS,"[(<1>, <7>), (<1>, <10>), (<1>, <9>), (<1>, <0>), (<7>, <10>), (<7>, <5>), (<7>, <9>), (<7>, <3>), (<7>, <2>), (<10>, <6>), (<10>, <5>), (<10>, <0>), (<10>, <8>), (<10>, <3>), (<10>, <4>), (<9>, <5>), (<9>, <0>), (<9>, <3>), (<9>, <2>), (<0>, <6>), (<0>, <2>), (<6>, <5>), (<6>, <8>), (<6>, <3>), (<6>, <2>), (<6>, <4>), (<5>, <3>), (<5>, <4>), (<8>, <3>), (<8>, <4>), (<3>, <2>), (<2>, <4>)]","{<1>: [<7>, <10>, <9>, <0>],
<7>: [<1>, <10>, <5>, <9>, <3>, <2>],
<10>: [<1>, <6>, <7>, <5>, <0>, <8>, <3>, <4>],
<9>: [<1>, <7>, <5>, <0>, <3>, <2>],
<0>: [<1>, <6>, <10>, <9>, <2>],
<6>: [<10>, <5>, <0>, <8>, <3>, <2>, <4>],
<5>: [<6>, <7>, <10>, <9>, <3>, <4>],
<8>: [<6>, <10>, <3>, <4>],
<3>: [<6>, <7>, <10>, <5>, <9>, <8>, <2>],
<2>: [<6>, <7>, <9>, <0>, <3>, <4>],
<4>: [<6>, <10>, <5>, <8>, <2>]}","Node <1> is connected to nodes <7>, <10>, <9>, <0>.
Node <7> is connected to nodes <1>, <10>, <5>, <9>, <3>, <2>.
Node <10> is connected to nodes <1>, <6>, <7>, <5>, <0>, <8>, <3>, <4>.
Node <9> is connected to nodes <1>, <7>, <5>, <0>, <3>, <2>.
Node <0> is connected to nodes <1>, <6>, <10>, <9>, <2>.
Node <6> is connected to nodes <10>, <5>, <0>, <8>, <3>, <2>, <4>.
Node <5> is connected to nodes <6>, <7>, <10>, <9>, <3>, <4>.
Node <8> is connected to nodes <6>, <10>, <3>, <4>.
Node <3> is connected to nodes <6>, <7>, <10>, <5>, <9>, <8>, <2>.
Node <2> is connected to nodes <6>, <7>, <9>, <0>, <3>, <4>.
Node <4> is connected to nodes <6>, <10>, <5>, <8>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,32,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <1>, <7>, <5>, <0>, <3>, <2>, <10>, <6>, <4>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<1>, <7>, <5>, <0>, <3>, <2>].
Visit node <1>. Unvisited neighbors of node <1> are [<10>].
Visit node <7>. 
Visit node <5>. Unvisited neighbors of node <5> are [<6>, <4>].
Visit node <0>. 
Visit node <3>. Unvisited neighbors of node <3> are [<8>].
Visit node <2>. 
Visit node <10>. 
Visit node <6>. 
Visit node <4>. 
Visit node <8>. 
So the BFS traversal is ","('[[<9>, <1>, <7>, <5>, <0>, <3>, <2>, <10>, <6>, <4>, <8>], [<9>, <1>, <7>, <6>, <4>, <8>, <5>, <0>, <3>, <2>, <10>], [<9>, <1>, <3>, <7>, <2>, <10>, <8>, <4>, <5>, <6>, <0>], [<9>, <1>, <7>, <5>, <0>, <3>, <8>, <4>, <6>, <10>, <2>]]',)",0,212
BFS,"[(<5>, <4>), (<5>, <6>), (<4>, <0>), (<4>, <5>), (<6>, <4>), (<2>, <7>), (<2>, <0>), (<7>, <6>), (<7>, <1>), (<7>, <2>), (<7>, <4>), (<0>, <3>), (<0>, <4>), (<0>, <7>), (<1>, <2>), (<3>, <5>), (<3>, <2>), (<3>, <4>)]","{<5>: [<4>, <6>],
<4>: [<0>, <5>],
<6>: [<4>],
<2>: [<7>, <0>],
<7>: [<6>, <1>, <2>, <4>],
<0>: [<3>, <4>, <7>],
<1>: [<2>],
<3>: [<5>, <2>, <4>]}","Node <5> is connected to nodes <4>, <6>.
Node <4> is connected to nodes <0>, <5>.
Node <6> is connected to node <4>.
Node <2> is connected to nodes <7>, <0>.
Node <7> is connected to nodes <6>, <1>, <2>, <4>.
Node <0> is connected to nodes <3>, <4>, <7>.
Node <1> is connected to node <2>.
Node <3> is connected to nodes <5>, <2>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,18,True,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <0>, <5>, <3>, <7>, <6>, <2>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<0>, <5>].
Visit node <0>. Unvisited neighbors of node <0> are [<3>, <7>].
Visit node <5>. Unvisited neighbors of node <5> are [<6>].
Visit node <3>. Unvisited neighbors of node <3> are [<2>].
Visit node <7>. Unvisited neighbors of node <7> are [<1>].
Visit node <6>. 
Visit node <2>. 
Visit node <1>. 
So the BFS traversal is ","('[[<4>, <0>, <2>, <1>, <5>, <3>, <7>, <6>], [<4>, <0>, <5>, <3>, <7>, <6>, <2>, <1>], [<4>, <5>, <1>, <2>, <0>, <6>, <7>, <3>], [<4>, <0>, <5>, <3>, <7>, <6>, <1>, <2>]]',)",1,213
BFS,"[(<12>, <3>), (<12>, <5>), (<12>, <9>), (<12>, <2>), (<12>, <0>), (<12>, <10>), (<12>, <1>), (<3>, <6>), (<3>, <11>), (<5>, <4>), (<5>, <1>), (<5>, <7>), (<5>, <8>), (<5>, <9>), (<5>, <11>), (<9>, <6>), (<2>, <4>), (<0>, <8>), (<0>, <7>), (<10>, <1>), (<1>, <11>), (<4>, <8>)]","{<12>: [<3>, <5>, <9>, <2>, <0>, <10>, <1>],
<3>: [<12>, <6>, <11>],
<5>: [<12>, <4>, <1>, <7>, <8>, <9>, <11>],
<9>: [<12>, <5>, <6>],
<2>: [<12>, <4>],
<0>: [<12>, <8>, <7>],
<10>: [<12>, <1>],
<1>: [<12>, <5>, <11>, <10>],
<6>: [<3>, <9>],
<11>: [<3>, <5>, <1>],
<4>: [<2>, <8>, <5>],
<8>: [<4>, <5>, <0>],
<7>: [<5>, <0>]}","Node <12> is connected to nodes <3>, <5>, <9>, <2>, <0>, <10>, <1>.
Node <3> is connected to nodes <12>, <6>, <11>.
Node <5> is connected to nodes <12>, <4>, <1>, <7>, <8>, <9>, <11>.
Node <9> is connected to nodes <12>, <5>, <6>.
Node <2> is connected to nodes <12>, <4>.
Node <0> is connected to nodes <12>, <8>, <7>.
Node <10> is connected to nodes <12>, <1>.
Node <1> is connected to nodes <12>, <5>, <11>, <10>.
Node <6> is connected to nodes <3>, <9>.
Node <11> is connected to nodes <3>, <5>, <1>.
Node <4> is connected to nodes <2>, <8>, <5>.
Node <8> is connected to nodes <4>, <5>, <0>.
Node <7> is connected to nodes <5>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,22,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <12>, <4>, <3>, <5>, <9>, <0>, <10>, <1>, <8>, <6>, <11>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<12>, <4>].
Visit node <12>. Unvisited neighbors of node <12> are [<3>, <5>, <9>, <0>, <10>, <1>].
Visit node <4>. Unvisited neighbors of node <4> are [<8>].
Visit node <3>. Unvisited neighbors of node <3> are [<6>, <11>].
Visit node <5>. Unvisited neighbors of node <5> are [<7>].
Visit node <9>. 
Visit node <0>. 
Visit node <10>. 
Visit node <1>. 
Visit node <8>. 
Visit node <6>. 
Visit node <11>. 
Visit node <7>. 
So the BFS traversal is ","('[[<2>, <12>, <4>, <3>, <5>, <9>, <0>, <10>, <1>, <8>, <6>, <11>, <7>], [<2>, <1>, <4>, <9>, <5>, <6>, <8>, <11>, <12>, <7>, <10>, <0>, <3>], [<2>, <12>, <4>, <3>, <8>, <6>, <11>, <7>, <5>, <9>, <0>, <10>, <1>], [<2>, <12>, <4>, <3>, <5>, <9>, <1>, <8>, <0>, <11>, <10>, <6>, <7>]]',)",0,214
BFS,"[(<0>, <6>), (<0>, <1>), (<0>, <5>), (<0>, <8>), (<0>, <7>), (<6>, <7>), (<1>, <8>), (<5>, <8>), (<8>, <4>), (<7>, <4>), (<7>, <3>), (<7>, <2>), (<4>, <3>), (<3>, <2>)]","{<0>: [<6>, <1>, <5>, <8>, <7>],
<6>: [<0>, <7>],
<1>: [<0>, <8>],
<5>: [<0>, <8>],
<8>: [<0>, <1>, <4>, <5>],
<7>: [<0>, <6>, <4>, <3>, <2>],
<4>: [<7>, <8>, <3>],
<3>: [<7>, <4>, <2>],
<2>: [<7>, <3>]}","Node <0> is connected to nodes <6>, <1>, <5>, <8>, <7>.
Node <6> is connected to nodes <0>, <7>.
Node <1> is connected to nodes <0>, <8>.
Node <5> is connected to nodes <0>, <8>.
Node <8> is connected to nodes <0>, <1>, <4>, <5>.
Node <7> is connected to nodes <0>, <6>, <4>, <3>, <2>.
Node <4> is connected to nodes <7>, <8>, <3>.
Node <3> is connected to nodes <7>, <4>, <2>.
Node <2> is connected to nodes <7>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,14,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <7>, <8>, <3>, <0>, <6>, <2>, <1>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<7>, <8>, <3>].
Visit node <7>. Unvisited neighbors of node <7> are [<0>, <6>, <2>].
Visit node <8>. Unvisited neighbors of node <8> are [<1>, <5>].
Visit node <3>. 
Visit node <0>. 
Visit node <6>. 
Visit node <2>. 
Visit node <1>. 
Visit node <5>. 
So the BFS traversal is ","('[[<4>, <7>, <8>, <3>, <2>, <1>, <6>, <5>, <0>], [<4>, <7>, <8>, <3>, <0>, <6>, <2>, <1>, <5>], [<4>, <7>, <8>, <2>, <1>, <5>, <3>, <0>, <6>], [<4>, <7>, <5>, <8>, <1>, <0>, <6>, <2>, <3>]]',)",1,215
BFS,"[(<9>, <2>), (<9>, <6>), (<9>, <8>), (<9>, <3>), (<2>, <7>), (<2>, <6>), (<2>, <1>), (<2>, <4>), (<6>, <0>), (<6>, <3>), (<6>, <5>), (<6>, <1>), (<6>, <8>), (<8>, <0>), (<3>, <4>), (<7>, <1>)]","{<9>: [<2>, <6>, <8>, <3>],
<2>: [<9>, <7>, <6>, <1>, <4>],
<6>: [<9>, <2>, <0>, <3>, <5>, <1>, <8>],
<8>: [<9>, <6>, <0>],
<3>: [<9>, <6>, <4>],
<7>: [<2>, <1>],
<1>: [<2>, <6>, <7>],
<4>: [<2>, <3>],
<0>: [<6>, <8>],
<5>: [<6>]}","Node <9> is connected to nodes <2>, <6>, <8>, <3>.
Node <2> is connected to nodes <9>, <7>, <6>, <1>, <4>.
Node <6> is connected to nodes <9>, <2>, <0>, <3>, <5>, <1>, <8>.
Node <8> is connected to nodes <9>, <6>, <0>.
Node <3> is connected to nodes <9>, <6>, <4>.
Node <7> is connected to nodes <2>, <1>.
Node <1> is connected to nodes <2>, <6>, <7>.
Node <4> is connected to nodes <2>, <3>.
Node <0> is connected to nodes <6>, <8>.
Node <5> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,16,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <2>, <6>, <8>, <3>, <7>, <1>, <4>, <0>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<2>, <6>, <8>, <3>].
Visit node <2>. Unvisited neighbors of node <2> are [<7>, <1>, <4>].
Visit node <6>. Unvisited neighbors of node <6> are [<0>, <5>].
Visit node <8>. 
Visit node <3>. 
Visit node <7>. 
Visit node <1>. 
Visit node <4>. 
Visit node <0>. 
Visit node <5>. 
So the BFS traversal is ","('[[<9>, <2>, <6>, <8>, <3>, <7>, <1>, <4>, <0>, <5>], [<9>, <2>, <6>, <4>, <0>, <5>, <8>, <3>, <7>, <1>], [<9>, <2>, <6>, <8>, <3>, <7>, <5>, <0>, <4>, <1>], [<9>, <4>, <0>, <2>, <7>, <1>, <8>, <6>, <5>, <3>]]',)",0,216
BFS,"[(<1>, <10>), (<1>, <0>), (<1>, <4>), (<10>, <9>), (<10>, <3>), (<10>, <2>), (<10>, <8>), (<10>, <7>), (<3>, <6>), (<2>, <5>)]","{<1>: [<10>, <0>, <4>],
<10>: [<1>, <9>, <3>, <2>, <8>, <7>],
<0>: [<1>],
<4>: [<1>],
<9>: [<10>],
<3>: [<10>, <6>],
<2>: [<10>, <5>],
<8>: [<10>],
<7>: [<10>],
<6>: [<3>],
<5>: [<2>]}","Node <1> is connected to nodes <10>, <0>, <4>.
Node <10> is connected to nodes <1>, <9>, <3>, <2>, <8>, <7>.
Node <0> is connected to node <1>.
Node <4> is connected to node <1>.
Node <9> is connected to node <10>.
Node <3> is connected to nodes <10>, <6>.
Node <2> is connected to nodes <10>, <5>.
Node <8> is connected to node <10>.
Node <7> is connected to node <10>.
Node <6> is connected to node <3>.
Node <5> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,10,False,"Start from node <10>, output a sequence of traversal in breadth-first search (BFS) order.","[<10>, <1>, <9>, <3>, <2>, <8>, <7>, <0>, <4>, <6>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <10>. Unvisited neighbors of node <10> are [<1>, <9>, <3>, <2>, <8>, <7>].
Visit node <1>. Unvisited neighbors of node <1> are [<0>, <4>].
Visit node <9>. 
Visit node <3>. Unvisited neighbors of node <3> are [<6>].
Visit node <2>. Unvisited neighbors of node <2> are [<5>].
Visit node <8>. 
Visit node <7>. 
Visit node <0>. 
Visit node <4>. 
Visit node <6>. 
Visit node <5>. 
So the BFS traversal is ","('[[<10>, <1>, <9>, <3>, <2>, <8>, <7>, <0>, <4>, <6>, <5>], [<10>, <8>, <7>, <3>, <9>, <1>, <0>, <6>, <2>, <5>, <4>], [<10>, <1>, <9>, <4>, <6>, <5>, <3>, <2>, <8>, <7>, <0>], [<10>, <1>, <9>, <3>, <2>, <0>, <4>, <6>, <5>, <8>, <7>]]',)",0,217
BFS,"[(<5>, <2>), (<5>, <4>), (<5>, <0>), (<5>, <6>), (<2>, <4>), (<2>, <3>), (<2>, <7>), (<2>, <6>), (<4>, <7>), (<4>, <2>), (<0>, <1>), (<0>, <3>), (<3>, <0>), (<3>, <5>), (<3>, <4>), (<7>, <5>), (<7>, <2>), (<7>, <1>), (<7>, <3>), (<1>, <7>), (<1>, <6>), (<1>, <2>)]","{<5>: [<2>, <4>, <0>, <6>],
<2>: [<4>, <3>, <7>, <6>],
<4>: [<7>, <2>],
<0>: [<1>, <3>],
<6>: [],
<3>: [<0>, <5>, <4>],
<7>: [<5>, <2>, <1>, <3>],
<1>: [<7>, <6>, <2>]}","Node <5> is connected to nodes <2>, <4>, <0>, <6>.
Node <2> is connected to nodes <4>, <3>, <7>, <6>.
Node <4> is connected to nodes <7>, <2>.
Node <0> is connected to nodes <1>, <3>.
Node <3> is connected to nodes <0>, <5>, <4>.
Node <7> is connected to nodes <5>, <2>, <1>, <3>.
Node <1> is connected to nodes <7>, <6>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,22,True,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <7>, <2>, <5>, <1>, <3>, <6>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<7>, <2>].
Visit node <7>. Unvisited neighbors of node <7> are [<5>, <1>, <3>].
Visit node <2>. Unvisited neighbors of node <2> are [<6>].
Visit node <5>. Unvisited neighbors of node <5> are [<0>].
Visit node <1>. 
Visit node <3>. 
Visit node <6>. 
Visit node <0>. 
So the BFS traversal is ","('[[<4>, <7>, <2>, <5>, <1>, <3>, <6>, <0>], [<4>, <2>, <5>, <0>, <1>, <3>, <6>, <7>], [<4>, <7>, <2>, <5>, <6>, <3>, <1>, <0>], [<4>, <7>, <6>, <0>, <2>, <5>, <1>, <3>]]',)",0,218
BFS,"[(<1>, <8>), (<8>, <2>), (<8>, <5>), (<8>, <9>), (<2>, <5>), (<2>, <4>), (<9>, <3>), (<9>, <0>), (<9>, <7>), (<6>, <3>), (<4>, <10>), (<4>, <12>), (<7>, <11>)]","{<1>: [<8>],
<8>: [<1>, <2>, <5>, <9>],
<2>: [<8>, <5>, <4>],
<5>: [<8>, <2>],
<9>: [<8>, <3>, <0>, <7>],
<6>: [<3>],
<3>: [<6>, <9>],
<4>: [<2>, <10>, <12>],
<0>: [<9>],
<7>: [<9>, <11>],
<11>: [<7>],
<10>: [<4>],
<12>: [<4>]}","Node <1> is connected to node <8>.
Node <8> is connected to nodes <1>, <2>, <5>, <9>.
Node <2> is connected to nodes <8>, <5>, <4>.
Node <5> is connected to nodes <8>, <2>.
Node <9> is connected to nodes <8>, <3>, <0>, <7>.
Node <6> is connected to node <3>.
Node <3> is connected to nodes <6>, <9>.
Node <4> is connected to nodes <2>, <10>, <12>.
Node <0> is connected to node <9>.
Node <7> is connected to nodes <9>, <11>.
Node <11> is connected to node <7>.
Node <10> is connected to node <4>.
Node <12> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,13,False,"Start from node <11>, output a sequence of traversal in breadth-first search (BFS) order.","[<11>, <7>, <9>, <8>, <3>, <0>, <1>, <2>, <5>, <6>, <4>, <10>, <12>]","Let's run breadth-first search (BFS) step by step.
Visit node <11>. Unvisited neighbors of node <11> are [<7>].
Visit node <7>. Unvisited neighbors of node <7> are [<9>].
Visit node <9>. Unvisited neighbors of node <9> are [<8>, <3>, <0>].
Visit node <8>. Unvisited neighbors of node <8> are [<1>, <2>, <5>].
Visit node <3>. Unvisited neighbors of node <3> are [<6>].
Visit node <0>. 
Visit node <1>. 
Visit node <2>. Unvisited neighbors of node <2> are [<4>].
Visit node <5>. 
Visit node <6>. 
Visit node <4>. Unvisited neighbors of node <4> are [<10>, <12>].
Visit node <10>. 
Visit node <12>. 
So the BFS traversal is ","('[[<11>, <7>, <9>, <8>, <3>, <0>, <1>, <2>, <5>, <6>, <4>, <10>, <12>], [<11>, <7>, <12>, <8>, <9>, <2>, <10>, <5>, <4>, <1>, <6>, <0>, <3>], [<11>, <7>, <9>, <8>, <3>, <0>, <12>, <4>, <5>, <10>, <1>, <2>, <6>], [<11>, <7>, <9>, <8>, <6>, <4>, <10>, <12>, <3>, <0>, <1>, <2>, <5>]]',)",0,219
BFS,"[(<2>, <9>), (<2>, <7>), (<2>, <6>), (<2>, <0>), (<2>, <5>), (<9>, <4>), (<9>, <3>), (<9>, <7>), (<9>, <8>), (<9>, <0>), (<9>, <1>), (<9>, <5>), (<7>, <4>), (<7>, <3>), (<7>, <6>), (<7>, <8>), (<7>, <0>), (<7>, <1>), (<6>, <4>), (<6>, <3>), (<6>, <8>), (<6>, <5>), (<0>, <4>), (<0>, <3>), (<0>, <1>), (<0>, <5>), (<5>, <1>), (<4>, <3>), (<4>, <8>), (<4>, <1>), (<3>, <1>), (<8>, <1>)]","{<2>: [<9>, <7>, <6>, <0>, <5>],
<9>: [<2>, <4>, <3>, <7>, <8>, <0>, <1>, <5>],
<7>: [<2>, <4>, <9>, <3>, <6>, <8>, <0>, <1>],
<6>: [<2>, <4>, <3>, <7>, <8>, <5>],
<0>: [<2>, <4>, <9>, <3>, <7>, <1>, <5>],
<5>: [<2>, <9>, <6>, <0>, <1>],
<4>: [<9>, <3>, <7>, <6>, <8>, <0>, <1>],
<3>: [<4>, <9>, <7>, <6>, <0>, <1>],
<8>: [<4>, <9>, <7>, <6>, <1>],
<1>: [<4>, <9>, <3>, <7>, <8>, <0>, <5>]}","Node <2> is connected to nodes <9>, <7>, <6>, <0>, <5>.
Node <9> is connected to nodes <2>, <4>, <3>, <7>, <8>, <0>, <1>, <5>.
Node <7> is connected to nodes <2>, <4>, <9>, <3>, <6>, <8>, <0>, <1>.
Node <6> is connected to nodes <2>, <4>, <3>, <7>, <8>, <5>.
Node <0> is connected to nodes <2>, <4>, <9>, <3>, <7>, <1>, <5>.
Node <5> is connected to nodes <2>, <9>, <6>, <0>, <1>.
Node <4> is connected to nodes <9>, <3>, <7>, <6>, <8>, <0>, <1>.
Node <3> is connected to nodes <4>, <9>, <7>, <6>, <0>, <1>.
Node <8> is connected to nodes <4>, <9>, <7>, <6>, <1>.
Node <1> is connected to nodes <4>, <9>, <3>, <7>, <8>, <0>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,32,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <2>, <9>, <6>, <0>, <1>, <7>, <4>, <3>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<2>, <9>, <6>, <0>, <1>].
Visit node <2>. Unvisited neighbors of node <2> are [<7>].
Visit node <9>. Unvisited neighbors of node <9> are [<4>, <3>, <8>].
Visit node <6>. 
Visit node <0>. 
Visit node <1>. 
Visit node <7>. 
Visit node <4>. 
Visit node <3>. 
Visit node <8>. 
So the BFS traversal is ","('[[<5>, <2>, <9>, <6>, <0>, <7>, <1>, <3>, <4>, <8>], [<5>, <0>, <3>, <9>, <2>, <1>, <8>, <6>, <4>, <7>], [<5>, <2>, <9>, <6>, <0>, <1>, <7>, <4>, <3>, <8>], [<5>, <2>, <9>, <4>, <3>, <8>, <6>, <0>, <1>, <7>]]',)",2,220
BFS,"[(<8>, <1>), (<8>, <2>), (<8>, <4>), (<8>, <5>), (<8>, <0>), (<8>, <6>), (<8>, <3>), (<6>, <7>)]","{<8>: [<1>, <2>, <4>, <5>, <0>, <6>, <3>],
<1>: [<8>],
<2>: [<8>],
<4>: [<8>],
<5>: [<8>],
<0>: [<8>],
<6>: [<8>, <7>],
<3>: [<8>],
<7>: [<6>]}","Node <8> is connected to nodes <1>, <2>, <4>, <5>, <0>, <6>, <3>.
Node <1> is connected to node <8>.
Node <2> is connected to node <8>.
Node <4> is connected to node <8>.
Node <5> is connected to node <8>.
Node <0> is connected to node <8>.
Node <6> is connected to nodes <8>, <7>.
Node <3> is connected to node <8>.
Node <7> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,8,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <8>, <1>, <4>, <5>, <0>, <6>, <3>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<8>].
Visit node <8>. Unvisited neighbors of node <8> are [<1>, <4>, <5>, <0>, <6>, <3>].
Visit node <1>. 
Visit node <4>. 
Visit node <5>. 
Visit node <0>. 
Visit node <6>. Unvisited neighbors of node <6> are [<7>].
Visit node <3>. 
Visit node <7>. 
So the BFS traversal is ","('[[<2>, <8>, <1>, <4>, <5>, <0>, <6>, <3>, <7>], [<2>, <8>, <1>, <6>, <3>, <7>, <4>, <5>, <0>], [<2>, <8>, <1>, <4>, <7>, <6>, <0>, <5>, <3>], [<2>, <3>, <1>, <0>, <5>, <6>, <7>, <4>, <8>]]',)",0,221
BFS,"[(<0>, <5>), (<0>, <3>), (<0>, <6>), (<0>, <1>), (<0>, <7>), (<5>, <4>), (<5>, <3>), (<5>, <6>), (<5>, <1>), (<5>, <7>), (<3>, <2>), (<3>, <4>), (<3>, <8>), (<3>, <6>), (<3>, <1>), (<3>, <7>), (<6>, <4>), (<6>, <8>), (<6>, <1>), (<1>, <8>), (<1>, <7>), (<7>, <2>), (<7>, <8>), (<4>, <8>)]","{<0>: [<5>, <3>, <6>, <1>, <7>],
<5>: [<0>, <4>, <3>, <6>, <1>, <7>],
<3>: [<0>, <2>, <4>, <5>, <8>, <6>, <1>, <7>],
<6>: [<0>, <4>, <5>, <8>, <3>, <1>],
<1>: [<0>, <5>, <8>, <3>, <6>, <7>],
<7>: [<0>, <2>, <5>, <8>, <3>, <1>],
<2>: [<3>, <7>],
<4>: [<5>, <8>, <3>, <6>],
<8>: [<4>, <3>, <6>, <1>, <7>]}","Node <0> is connected to nodes <5>, <3>, <6>, <1>, <7>.
Node <5> is connected to nodes <0>, <4>, <3>, <6>, <1>, <7>.
Node <3> is connected to nodes <0>, <2>, <4>, <5>, <8>, <6>, <1>, <7>.
Node <6> is connected to nodes <0>, <4>, <5>, <8>, <3>, <1>.
Node <1> is connected to nodes <0>, <5>, <8>, <3>, <6>, <7>.
Node <7> is connected to nodes <0>, <2>, <5>, <8>, <3>, <1>.
Node <2> is connected to nodes <3>, <7>.
Node <4> is connected to nodes <5>, <8>, <3>, <6>.
Node <8> is connected to nodes <4>, <3>, <6>, <1>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,24,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <0>, <2>, <4>, <5>, <8>, <6>, <1>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<0>, <2>, <4>, <5>, <8>, <6>, <1>, <7>].
Visit node <0>. 
Visit node <2>. 
Visit node <4>. 
Visit node <5>. 
Visit node <8>. 
Visit node <6>. 
Visit node <1>. 
Visit node <7>. 
So the BFS traversal is ","('[[<3>, <2>, <0>, <7>, <5>, <8>, <6>, <4>, <1>], [<3>, <0>, <2>, <4>, <5>, <8>, <6>, <1>, <7>], [<3>, <0>, <2>, <6>, <1>, <7>, <4>, <5>, <8>], [<3>, <0>, <2>, <4>, <8>, <1>, <5>, <6>, <7>]]',)",1,222
BFS,"[(<1>, <0>), (<1>, <8>), (<1>, <11>), (<1>, <6>), (<1>, <4>), (<0>, <2>), (<8>, <9>), (<6>, <10>), (<2>, <3>), (<10>, <7>), (<10>, <5>)]","{<1>: [<0>, <8>, <11>, <6>, <4>],
<0>: [<1>, <2>],
<8>: [<1>, <9>],
<11>: [<1>],
<6>: [<1>, <10>],
<4>: [<1>],
<2>: [<0>, <3>],
<10>: [<7>, <6>, <5>],
<7>: [<10>],
<5>: [<10>],
<9>: [<8>],
<3>: [<2>]}","Node <1> is connected to nodes <0>, <8>, <11>, <6>, <4>.
Node <0> is connected to nodes <1>, <2>.
Node <8> is connected to nodes <1>, <9>.
Node <11> is connected to node <1>.
Node <6> is connected to nodes <1>, <10>.
Node <4> is connected to node <1>.
Node <2> is connected to nodes <0>, <3>.
Node <10> is connected to nodes <7>, <6>, <5>.
Node <7> is connected to node <10>.
Node <5> is connected to node <10>.
Node <9> is connected to node <8>.
Node <3> is connected to node <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,11,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <1>, <2>, <8>, <11>, <6>, <4>, <3>, <9>, <10>, <7>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<1>, <2>].
Visit node <1>. Unvisited neighbors of node <1> are [<8>, <11>, <6>, <4>].
Visit node <2>. Unvisited neighbors of node <2> are [<3>].
Visit node <8>. Unvisited neighbors of node <8> are [<9>].
Visit node <11>. 
Visit node <6>. Unvisited neighbors of node <6> are [<10>].
Visit node <4>. 
Visit node <3>. 
Visit node <9>. 
Visit node <10>. Unvisited neighbors of node <10> are [<7>, <5>].
Visit node <7>. 
Visit node <5>. 
So the BFS traversal is ","('[[<0>, <1>, <2>, <8>, <9>, <10>, <7>, <5>, <11>, <6>, <4>, <3>], [<0>, <7>, <5>, <9>, <6>, <3>, <11>, <4>, <10>, <2>, <8>, <1>], [<0>, <1>, <2>, <8>, <11>, <6>, <4>, <10>, <9>, <7>, <5>, <3>], [<0>, <1>, <2>, <8>, <11>, <6>, <4>, <3>, <9>, <10>, <7>, <5>]]',)",3,223
BFS,"[(<6>, <7>), (<6>, <2>), (<6>, <1>), (<7>, <1>), (<7>, <4>), (<2>, <6>), (<1>, <4>), (<1>, <0>), (<1>, <7>), (<0>, <4>), (<0>, <3>), (<0>, <6>), (<4>, <3>), (<4>, <5>), (<4>, <6>), (<4>, <7>), (<3>, <6>), (<3>, <0>), (<3>, <7>), (<3>, <1>), (<5>, <1>), (<5>, <3>)]","{<6>: [<7>, <2>, <1>],
<7>: [<1>, <4>],
<2>: [<6>],
<1>: [<4>, <0>, <7>],
<0>: [<4>, <3>, <6>],
<4>: [<3>, <5>, <6>, <7>],
<3>: [<6>, <0>, <7>, <1>],
<5>: [<1>, <3>]}","Node <6> is connected to nodes <7>, <2>, <1>.
Node <7> is connected to nodes <1>, <4>.
Node <2> is connected to node <6>.
Node <1> is connected to nodes <4>, <0>, <7>.
Node <0> is connected to nodes <4>, <3>, <6>.
Node <4> is connected to nodes <3>, <5>, <6>, <7>.
Node <3> is connected to nodes <6>, <0>, <7>, <1>.
Node <5> is connected to nodes <1>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,22,True,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <6>, <7>, <1>, <4>, <0>, <3>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<6>].
Visit node <6>. Unvisited neighbors of node <6> are [<7>, <1>].
Visit node <7>. Unvisited neighbors of node <7> are [<4>].
Visit node <1>. Unvisited neighbors of node <1> are [<0>].
Visit node <4>. Unvisited neighbors of node <4> are [<3>, <5>].
Visit node <0>. 
Visit node <3>. 
Visit node <5>. 
So the BFS traversal is ","('[[<2>, <4>, <1>, <5>, <6>, <7>, <0>, <3>], [<2>, <6>, <7>, <1>, <4>, <0>, <3>, <5>], [<2>, <6>, <3>, <5>, <7>, <1>, <4>, <0>], [<2>, <6>, <7>, <1>, <3>, <0>, <4>, <5>]]',)",1,224
BFS,"[(<8>, <2>), (<8>, <5>), (<8>, <4>), (<2>, <4>), (<2>, <8>), (<5>, <4>), (<5>, <0>), (<4>, <8>), (<4>, <3>), (<7>, <8>), (<6>, <2>), (<0>, <1>), (<0>, <3>), (<0>, <8>), (<10>, <4>), (<10>, <7>), (<9>, <10>)]","{<8>: [<2>, <5>, <4>],
<2>: [<4>, <8>],
<5>: [<4>, <0>],
<4>: [<8>, <3>],
<7>: [<8>],
<6>: [<2>],
<0>: [<1>, <3>, <8>],
<1>: [],
<3>: [],
<10>: [<4>, <7>],
<9>: [<10>]}","Node <8> is connected to nodes <2>, <5>, <4>.
Node <2> is connected to nodes <4>, <8>.
Node <5> is connected to nodes <4>, <0>.
Node <4> is connected to nodes <8>, <3>.
Node <7> is connected to node <8>.
Node <6> is connected to node <2>.
Node <0> is connected to nodes <1>, <3>, <8>.
Node <10> is connected to nodes <4>, <7>.
Node <9> is connected to node <10>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,17,True,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <2>, <4>, <8>, <3>, <5>, <0>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<2>].
Visit node <2>. Unvisited neighbors of node <2> are [<4>, <8>].
Visit node <4>. Unvisited neighbors of node <4> are [<3>].
Visit node <8>. Unvisited neighbors of node <8> are [<5>].
Visit node <3>. 
Visit node <5>. Unvisited neighbors of node <5> are [<0>].
Visit node <0>. Unvisited neighbors of node <0> are [<1>].
Visit node <1>. 
So the BFS traversal is ","('[[<6>, <4>, <5>, <1>, <8>, <2>, <0>, <3>], [<6>, <2>, <0>, <1>, <4>, <8>, <3>, <5>], [<6>, <2>, <4>, <8>, <3>, <5>, <0>, <1>], [<6>, <2>, <4>, <8>, <1>, <3>, <5>, <0>]]',)",2,225
BFS,"[(<3>, <6>), (<3>, <5>), (<3>, <2>), (<3>, <1>), (<6>, <5>), (<6>, <7>), (<5>, <0>), (<5>, <2>), (<5>, <7>), (<5>, <1>), (<2>, <0>), (<2>, <4>), (<2>, <7>), (<2>, <1>), (<1>, <0>), (<1>, <4>), (<1>, <7>), (<0>, <4>), (<0>, <7>)]","{<3>: [<6>, <5>, <2>, <1>],
<6>: [<3>, <5>, <7>],
<5>: [<3>, <0>, <6>, <2>, <7>, <1>],
<2>: [<3>, <0>, <5>, <4>, <7>, <1>],
<1>: [<3>, <0>, <5>, <4>, <2>, <7>],
<0>: [<5>, <4>, <2>, <7>, <1>],
<4>: [<0>, <2>, <1>],
<7>: [<0>, <6>, <5>, <2>, <1>]}","Node <3> is connected to nodes <6>, <5>, <2>, <1>.
Node <6> is connected to nodes <3>, <5>, <7>.
Node <5> is connected to nodes <3>, <0>, <6>, <2>, <7>, <1>.
Node <2> is connected to nodes <3>, <0>, <5>, <4>, <7>, <1>.
Node <1> is connected to nodes <3>, <0>, <5>, <4>, <2>, <7>.
Node <0> is connected to nodes <5>, <4>, <2>, <7>, <1>.
Node <4> is connected to nodes <0>, <2>, <1>.
Node <7> is connected to nodes <0>, <6>, <5>, <2>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,19,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <3>, <0>, <5>, <4>, <7>, <1>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<3>, <0>, <5>, <4>, <7>, <1>].
Visit node <3>. Unvisited neighbors of node <3> are [<6>].
Visit node <0>. 
Visit node <5>. 
Visit node <4>. 
Visit node <7>. 
Visit node <1>. 
Visit node <6>. 
So the BFS traversal is ","('[[<2>, <3>, <0>, <5>, <4>, <1>, <6>, <7>], [<2>, <3>, <0>, <5>, <4>, <7>, <1>, <6>], [<2>, <7>, <6>, <1>, <4>, <0>, <3>, <5>], [<2>, <3>, <1>, <6>, <0>, <5>, <4>, <7>]]',)",1,226
BFS,"[(<6>, <0>), (<6>, <7>), (<6>, <5>), (<6>, <3>), (<0>, <4>), (<0>, <3>), (<7>, <5>), (<7>, <2>), (<7>, <1>), (<5>, <4>), (<3>, <1>), (<3>, <2>)]","{<6>: [<0>, <7>, <5>, <3>],
<0>: [<6>, <4>, <3>],
<7>: [<6>, <5>, <2>, <1>],
<5>: [<6>, <4>, <7>],
<3>: [<6>, <0>, <1>, <2>],
<4>: [<0>, <5>],
<2>: [<7>, <3>],
<1>: [<7>, <3>]}","Node <6> is connected to nodes <0>, <7>, <5>, <3>.
Node <0> is connected to nodes <6>, <4>, <3>.
Node <7> is connected to nodes <6>, <5>, <2>, <1>.
Node <5> is connected to nodes <6>, <4>, <7>.
Node <3> is connected to nodes <6>, <0>, <1>, <2>.
Node <4> is connected to nodes <0>, <5>.
Node <2> is connected to nodes <7>, <3>.
Node <1> is connected to nodes <7>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,12,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <0>, <7>, <5>, <3>, <4>, <2>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<0>, <7>, <5>, <3>].
Visit node <0>. Unvisited neighbors of node <0> are [<4>].
Visit node <7>. Unvisited neighbors of node <7> are [<2>, <1>].
Visit node <5>. 
Visit node <3>. 
Visit node <4>. 
Visit node <2>. 
Visit node <1>. 
So the BFS traversal is ","('[[<6>, <0>, <7>, <5>, <3>, <4>, <2>, <1>], [<6>, <7>, <5>, <0>, <4>, <3>, <2>, <1>], [<6>, <0>, <2>, <1>, <7>, <5>, <3>, <4>], [<6>, <0>, <7>, <5>, <2>, <3>, <1>, <4>]]',)",0,227
BFS,"[(<5>, <2>), (<5>, <9>), (<5>, <14>), (<2>, <10>), (<9>, <0>), (<9>, <8>), (<9>, <7>), (<9>, <4>), (<9>, <3>), (<9>, <10>), (<14>, <1>), (<14>, <8>), (<14>, <6>), (<14>, <13>), (<14>, <7>), (<14>, <12>), (<10>, <8>), (<10>, <11>), (<1>, <0>), (<1>, <8>), (<0>, <3>), (<8>, <6>), (<8>, <4>), (<8>, <12>), (<7>, <11>), (<6>, <13>)]","{<5>: [<2>, <9>, <14>],
<2>: [<5>, <10>],
<9>: [<5>, <0>, <8>, <7>, <4>, <3>, <10>],
<14>: [<5>, <1>, <8>, <6>, <13>, <7>, <12>],
<10>: [<2>, <9>, <8>, <11>],
<1>: [<0>, <8>, <14>],
<0>: [<1>, <9>, <3>],
<8>: [<1>, <9>, <6>, <4>, <14>, <12>, <10>],
<3>: [<0>, <9>],
<7>: [<9>, <11>, <14>],
<4>: [<9>, <8>],
<6>: [<8>, <13>, <14>],
<12>: [<8>, <14>],
<13>: [<6>, <14>],
<11>: [<10>, <7>]}","Node <5> is connected to nodes <2>, <9>, <14>.
Node <2> is connected to nodes <5>, <10>.
Node <9> is connected to nodes <5>, <0>, <8>, <7>, <4>, <3>, <10>.
Node <14> is connected to nodes <5>, <1>, <8>, <6>, <13>, <7>, <12>.
Node <10> is connected to nodes <2>, <9>, <8>, <11>.
Node <1> is connected to nodes <0>, <8>, <14>.
Node <0> is connected to nodes <1>, <9>, <3>.
Node <8> is connected to nodes <1>, <9>, <6>, <4>, <14>, <12>, <10>.
Node <3> is connected to nodes <0>, <9>.
Node <7> is connected to nodes <9>, <11>, <14>.
Node <4> is connected to nodes <9>, <8>.
Node <6> is connected to nodes <8>, <13>, <14>.
Node <12> is connected to nodes <8>, <14>.
Node <13> is connected to nodes <6>, <14>.
Node <11> is connected to nodes <10>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,26,False,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <1>, <9>, <6>, <4>, <14>, <12>, <10>, <0>, <5>, <7>, <3>, <13>, <2>, <11>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<1>, <9>, <6>, <4>, <14>, <12>, <10>].
Visit node <1>. Unvisited neighbors of node <1> are [<0>].
Visit node <9>. Unvisited neighbors of node <9> are [<5>, <7>, <3>].
Visit node <6>. Unvisited neighbors of node <6> are [<13>].
Visit node <4>. 
Visit node <14>. 
Visit node <12>. 
Visit node <10>. Unvisited neighbors of node <10> are [<2>, <11>].
Visit node <0>. 
Visit node <5>. 
Visit node <7>. 
Visit node <3>. 
Visit node <13>. 
Visit node <2>. 
Visit node <11>. 
So the BFS traversal is ","('[[<8>, <1>, <9>, <6>, <4>, <7>, <3>, <13>, <2>, <11>, <14>, <12>, <10>, <0>, <5>], [<8>, <1>, <9>, <6>, <4>, <14>, <12>, <10>, <0>, <5>, <7>, <3>, <13>, <2>, <11>], [<8>, <1>, <9>, <6>, <4>, <14>, <12>, <0>, <13>, <7>, <3>, <5>, <10>, <2>, <11>], [<8>, <2>, <10>, <5>, <12>, <6>, <9>, <14>, <11>, <3>, <4>, <13>, <7>, <0>, <1>]]',)",1,228
BFS,"[(<2>, <6>), (<2>, <3>), (<2>, <0>), (<2>, <4>), (<2>, <1>), (<2>, <7>), (<2>, <9>), (<2>, <8>), (<6>, <1>), (<6>, <3>), (<6>, <4>), (<6>, <5>), (<6>, <8>), (<3>, <0>), (<0>, <8>), (<0>, <5>), (<0>, <9>), (<4>, <1>), (<4>, <8>), (<4>, <10>), (<4>, <7>), (<1>, <5>), (<7>, <8>), (<9>, <8>), (<8>, <10>), (<8>, <11>), (<10>, <11>)]","{<2>: [<6>, <3>, <0>, <4>, <1>, <7>, <9>, <8>],
<6>: [<2>, <1>, <3>, <4>, <5>, <8>],
<3>: [<2>, <6>, <0>],
<0>: [<2>, <3>, <8>, <5>, <9>],
<4>: [<2>, <6>, <1>, <8>, <10>, <7>],
<1>: [<2>, <6>, <5>, <4>],
<7>: [<2>, <8>, <4>],
<9>: [<2>, <0>, <8>],
<8>: [<2>, <6>, <0>, <9>, <10>, <7>, <11>, <4>],
<5>: [<6>, <1>, <0>],
<10>: [<8>, <11>, <4>],
<11>: [<8>, <10>]}","Node <2> is connected to nodes <6>, <3>, <0>, <4>, <1>, <7>, <9>, <8>.
Node <6> is connected to nodes <2>, <1>, <3>, <4>, <5>, <8>.
Node <3> is connected to nodes <2>, <6>, <0>.
Node <0> is connected to nodes <2>, <3>, <8>, <5>, <9>.
Node <4> is connected to nodes <2>, <6>, <1>, <8>, <10>, <7>.
Node <1> is connected to nodes <2>, <6>, <5>, <4>.
Node <7> is connected to nodes <2>, <8>, <4>.
Node <9> is connected to nodes <2>, <0>, <8>.
Node <8> is connected to nodes <2>, <6>, <0>, <9>, <10>, <7>, <11>, <4>.
Node <5> is connected to nodes <6>, <1>, <0>.
Node <10> is connected to nodes <8>, <11>, <4>.
Node <11> is connected to nodes <8>, <10>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,27,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <2>, <3>, <8>, <5>, <9>, <6>, <4>, <1>, <7>, <10>, <11>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<2>, <3>, <8>, <5>, <9>].
Visit node <2>. Unvisited neighbors of node <2> are [<6>, <4>, <1>, <7>].
Visit node <3>. 
Visit node <8>. Unvisited neighbors of node <8> are [<10>, <11>].
Visit node <5>. 
Visit node <9>. 
Visit node <6>. 
Visit node <4>. 
Visit node <1>. 
Visit node <7>. 
Visit node <10>. 
Visit node <11>. 
So the BFS traversal is ","('[[<0>, <2>, <3>, <8>, <5>, <9>, <7>, <10>, <11>, <4>, <1>, <6>], [<0>, <2>, <3>, <8>, <1>, <7>, <10>, <11>, <5>, <9>, <6>, <4>], [<0>, <2>, <3>, <8>, <5>, <9>, <6>, <4>, <1>, <7>, <10>, <11>], [<0>, <10>, <9>, <8>, <2>, <6>, <1>, <7>, <3>, <4>, <11>, <5>]]',)",2,229
BFS,"[(<5>, <2>), (<5>, <3>), (<5>, <1>), (<5>, <4>), (<2>, <11>), (<2>, <1>), (<2>, <0>), (<3>, <4>), (<3>, <7>), (<1>, <8>), (<1>, <9>), (<1>, <10>), (<1>, <7>), (<1>, <0>), (<4>, <11>), (<4>, <10>), (<11>, <0>), (<0>, <9>), (<7>, <10>), (<7>, <6>), (<10>, <9>), (<10>, <6>), (<8>, <9>), (<8>, <6>)]","{<5>: [<2>, <3>, <1>, <4>],
<2>: [<5>, <11>, <1>, <0>],
<3>: [<5>, <4>, <7>],
<1>: [<5>, <2>, <8>, <9>, <10>, <7>, <0>],
<4>: [<5>, <3>, <11>, <10>],
<11>: [<2>, <4>, <0>],
<0>: [<2>, <9>, <1>, <11>],
<7>: [<3>, <1>, <10>, <6>],
<10>: [<4>, <9>, <1>, <7>, <6>],
<8>: [<9>, <6>, <1>],
<9>: [<8>, <0>, <1>, <10>],
<6>: [<8>, <10>, <7>]}","Node <5> is connected to nodes <2>, <3>, <1>, <4>.
Node <2> is connected to nodes <5>, <11>, <1>, <0>.
Node <3> is connected to nodes <5>, <4>, <7>.
Node <1> is connected to nodes <5>, <2>, <8>, <9>, <10>, <7>, <0>.
Node <4> is connected to nodes <5>, <3>, <11>, <10>.
Node <11> is connected to nodes <2>, <4>, <0>.
Node <0> is connected to nodes <2>, <9>, <1>, <11>.
Node <7> is connected to nodes <3>, <1>, <10>, <6>.
Node <10> is connected to nodes <4>, <9>, <1>, <7>, <6>.
Node <8> is connected to nodes <9>, <6>, <1>.
Node <9> is connected to nodes <8>, <0>, <1>, <10>.
Node <6> is connected to nodes <8>, <10>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,24,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <5>, <3>, <11>, <10>, <2>, <1>, <7>, <0>, <9>, <6>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<5>, <3>, <11>, <10>].
Visit node <5>. Unvisited neighbors of node <5> are [<2>, <1>].
Visit node <3>. Unvisited neighbors of node <3> are [<7>].
Visit node <11>. Unvisited neighbors of node <11> are [<0>].
Visit node <10>. Unvisited neighbors of node <10> are [<9>, <6>].
Visit node <2>. 
Visit node <1>. Unvisited neighbors of node <1> are [<8>].
Visit node <7>. 
Visit node <0>. 
Visit node <9>. 
Visit node <6>. 
Visit node <8>. 
So the BFS traversal is ","('[[<4>, <9>, <7>, <10>, <6>, <11>, <5>, <0>, <3>, <8>, <2>, <1>], [<4>, <5>, <3>, <11>, <0>, <9>, <6>, <8>, <10>, <2>, <1>, <7>], [<4>, <5>, <3>, <11>, <10>, <2>, <9>, <0>, <1>, <6>, <7>, <8>], [<4>, <5>, <3>, <11>, <10>, <2>, <1>, <7>, <0>, <9>, <6>, <8>]]',)",3,230
BFS,"[(<7>, <3>), (<7>, <2>), (<7>, <6>), (<7>, <12>), (<7>, <11>), (<7>, <4>), (<7>, <0>), (<7>, <8>), (<3>, <1>), (<3>, <4>), (<3>, <8>), (<3>, <7>), (<6>, <12>), (<6>, <4>), (<6>, <0>), (<12>, <0>), (<12>, <10>), (<12>, <6>), (<11>, <5>), (<11>, <2>), (<11>, <12>), (<4>, <5>), (<4>, <10>), (<0>, <7>), (<0>, <10>), (<0>, <11>), (<0>, <1>), (<8>, <7>), (<8>, <9>), (<8>, <6>), (<8>, <12>), (<9>, <5>), (<9>, <10>), (<9>, <6>), (<9>, <12>), (<9>, <1>), (<9>, <0>), (<5>, <9>), (<10>, <11>), (<10>, <3>), (<1>, <0>), (<1>, <8>), (<1>, <3>), (<1>, <10>), (<1>, <2>)]","{<7>: [<3>, <2>, <6>, <12>, <11>, <4>, <0>, <8>],
<3>: [<1>, <4>, <8>, <7>],
<2>: [],
<6>: [<12>, <4>, <0>],
<12>: [<0>, <10>, <6>],
<11>: [<5>, <2>, <12>],
<4>: [<5>, <10>],
<0>: [<7>, <10>, <11>, <1>],
<8>: [<7>, <9>, <6>, <12>],
<9>: [<5>, <10>, <6>, <12>, <1>, <0>],
<5>: [<9>],
<10>: [<11>, <3>],
<1>: [<0>, <8>, <3>, <10>, <2>]}","Node <7> is connected to nodes <3>, <2>, <6>, <12>, <11>, <4>, <0>, <8>.
Node <3> is connected to nodes <1>, <4>, <8>, <7>.
Node <6> is connected to nodes <12>, <4>, <0>.
Node <12> is connected to nodes <0>, <10>, <6>.
Node <11> is connected to nodes <5>, <2>, <12>.
Node <4> is connected to nodes <5>, <10>.
Node <0> is connected to nodes <7>, <10>, <11>, <1>.
Node <8> is connected to nodes <7>, <9>, <6>, <12>.
Node <9> is connected to nodes <5>, <10>, <6>, <12>, <1>, <0>.
Node <5> is connected to node <9>.
Node <10> is connected to nodes <11>, <3>.
Node <1> is connected to nodes <0>, <8>, <3>, <10>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,45,True,"Start from node <11>, output a sequence of traversal in breadth-first search (BFS) order.","[<11>, <5>, <2>, <12>, <9>, <0>, <10>, <6>, <1>, <7>, <3>, <4>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <11>. Unvisited neighbors of node <11> are [<5>, <2>, <12>].
Visit node <5>. Unvisited neighbors of node <5> are [<9>].
Visit node <2>. 
Visit node <12>. Unvisited neighbors of node <12> are [<0>, <10>, <6>].
Visit node <9>. Unvisited neighbors of node <9> are [<1>].
Visit node <0>. Unvisited neighbors of node <0> are [<7>].
Visit node <10>. Unvisited neighbors of node <10> are [<3>].
Visit node <6>. Unvisited neighbors of node <6> are [<4>].
Visit node <1>. Unvisited neighbors of node <1> are [<8>].
Visit node <7>. 
Visit node <3>. 
Visit node <4>. 
Visit node <8>. 
So the BFS traversal is ","('[[<11>, <5>, <2>, <12>, <9>, <0>, <10>, <6>, <1>, <7>, <3>, <4>, <8>], [<11>, <5>, <2>, <12>, <7>, <3>, <4>, <8>, <9>, <0>, <10>, <6>, <1>], [<11>, <5>, <2>, <12>, <9>, <0>, <10>, <4>, <3>, <6>, <8>, <1>, <7>], [<11>, <2>, <9>, <12>, <8>, <7>, <6>, <5>, <0>, <1>, <3>, <10>, <4>]]',)",0,231
BFS,"[(<7>, <3>), (<7>, <9>), (<7>, <8>), (<7>, <0>), (<3>, <5>), (<3>, <1>), (<3>, <9>), (<3>, <8>), (<9>, <8>), (<9>, <7>), (<8>, <2>), (<8>, <3>), (<8>, <4>), (<8>, <6>), (<8>, <9>), (<0>, <7>), (<0>, <3>), (<0>, <4>), (<0>, <6>), (<0>, <8>), (<2>, <3>), (<2>, <4>), (<2>, <5>), (<2>, <8>), (<4>, <6>), (<4>, <5>), (<4>, <1>), (<5>, <8>), (<5>, <4>), (<5>, <6>), (<1>, <8>), (<1>, <0>), (<1>, <4>), (<1>, <6>), (<6>, <5>), (<6>, <3>), (<6>, <4>)]","{<7>: [<3>, <9>, <8>, <0>],
<3>: [<5>, <1>, <9>, <8>],
<9>: [<8>, <7>],
<8>: [<2>, <3>, <4>, <6>, <9>],
<0>: [<7>, <3>, <4>, <6>, <8>],
<2>: [<3>, <4>, <5>, <8>],
<4>: [<6>, <5>, <1>],
<5>: [<8>, <4>, <6>],
<1>: [<8>, <0>, <4>, <6>],
<6>: [<5>, <3>, <4>]}","Node <7> is connected to nodes <3>, <9>, <8>, <0>.
Node <3> is connected to nodes <5>, <1>, <9>, <8>.
Node <9> is connected to nodes <8>, <7>.
Node <8> is connected to nodes <2>, <3>, <4>, <6>, <9>.
Node <0> is connected to nodes <7>, <3>, <4>, <6>, <8>.
Node <2> is connected to nodes <3>, <4>, <5>, <8>.
Node <4> is connected to nodes <6>, <5>, <1>.
Node <5> is connected to nodes <8>, <4>, <6>.
Node <1> is connected to nodes <8>, <0>, <4>, <6>.
Node <6> is connected to nodes <5>, <3>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,37,True,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <3>, <9>, <8>, <0>, <5>, <1>, <2>, <4>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<3>, <9>, <8>, <0>].
Visit node <3>. Unvisited neighbors of node <3> are [<5>, <1>].
Visit node <9>. 
Visit node <8>. Unvisited neighbors of node <8> are [<2>, <4>, <6>].
Visit node <0>. 
Visit node <5>. 
Visit node <1>. 
Visit node <2>. 
Visit node <4>. 
Visit node <6>. 
So the BFS traversal is ","('[[<7>, <3>, <9>, <8>, <0>, <5>, <1>, <2>, <4>, <6>], [<7>, <3>, <9>, <2>, <4>, <6>, <8>, <0>, <5>, <1>], [<7>, <8>, <2>, <3>, <5>, <6>, <9>, <0>, <1>, <4>], [<7>, <3>, <9>, <8>, <0>, <5>, <2>, <6>, <1>, <4>]]',)",0,232
BFS,"[(<6>, <7>), (<6>, <1>), (<6>, <11>), (<6>, <9>), (<7>, <8>), (<7>, <5>), (<7>, <4>), (<7>, <2>), (<7>, <9>), (<1>, <8>), (<1>, <9>), (<1>, <11>), (<11>, <8>), (<11>, <10>), (<11>, <9>), (<8>, <5>), (<5>, <2>), (<5>, <3>), (<4>, <0>), (<4>, <10>), (<4>, <3>), (<2>, <3>), (<0>, <10>), (<0>, <3>)]","{<6>: [<7>, <1>, <11>, <9>],
<7>: [<6>, <8>, <5>, <4>, <2>, <9>],
<1>: [<6>, <8>, <9>, <11>],
<11>: [<6>, <1>, <8>, <10>, <9>],
<9>: [<6>, <7>, <1>, <11>],
<8>: [<7>, <1>, <5>, <11>],
<5>: [<7>, <8>, <2>, <3>],
<4>: [<7>, <0>, <10>, <3>],
<2>: [<7>, <5>, <3>],
<0>: [<4>, <10>, <3>],
<10>: [<0>, <4>, <11>],
<3>: [<0>, <4>, <5>, <2>]}","Node <6> is connected to nodes <7>, <1>, <11>, <9>.
Node <7> is connected to nodes <6>, <8>, <5>, <4>, <2>, <9>.
Node <1> is connected to nodes <6>, <8>, <9>, <11>.
Node <11> is connected to nodes <6>, <1>, <8>, <10>, <9>.
Node <9> is connected to nodes <6>, <7>, <1>, <11>.
Node <8> is connected to nodes <7>, <1>, <5>, <11>.
Node <5> is connected to nodes <7>, <8>, <2>, <3>.
Node <4> is connected to nodes <7>, <0>, <10>, <3>.
Node <2> is connected to nodes <7>, <5>, <3>.
Node <0> is connected to nodes <4>, <10>, <3>.
Node <10> is connected to nodes <0>, <4>, <11>.
Node <3> is connected to nodes <0>, <4>, <5>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,24,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <7>, <0>, <10>, <3>, <6>, <8>, <5>, <2>, <9>, <11>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<7>, <0>, <10>, <3>].
Visit node <7>. Unvisited neighbors of node <7> are [<6>, <8>, <5>, <2>, <9>].
Visit node <0>. 
Visit node <10>. Unvisited neighbors of node <10> are [<11>].
Visit node <3>. 
Visit node <6>. Unvisited neighbors of node <6> are [<1>].
Visit node <8>. 
Visit node <5>. 
Visit node <2>. 
Visit node <9>. 
Visit node <11>. 
Visit node <1>. 
So the BFS traversal is ","('[[<4>, <7>, <0>, <10>, <2>, <9>, <11>, <1>, <3>, <6>, <8>, <5>], [<4>, <7>, <0>, <10>, <3>, <6>, <8>, <5>, <2>, <9>, <11>, <1>], [<4>, <7>, <0>, <10>, <3>, <6>, <11>, <1>, <5>, <8>, <9>, <2>], [<4>, <3>, <5>, <11>, <9>, <1>, <7>, <6>, <8>, <10>, <0>, <2>]]',)",1,233
BFS,"[(<0>, <12>), (<0>, <1>), (<0>, <2>), (<0>, <3>), (<0>, <8>), (<0>, <4>), (<0>, <13>), (<0>, <6>), (<0>, <9>), (<12>, <2>), (<12>, <11>), (<12>, <3>), (<12>, <8>), (<12>, <4>), (<12>, <7>), (<12>, <13>), (<12>, <6>), (<12>, <10>), (<12>, <9>), (<1>, <2>), (<1>, <11>), (<1>, <3>), (<1>, <8>), (<1>, <4>), (<1>, <5>), (<1>, <7>), (<1>, <13>), (<1>, <10>), (<1>, <9>), (<2>, <3>), (<2>, <8>), (<2>, <4>), (<2>, <7>), (<2>, <13>), (<2>, <6>), (<2>, <9>), (<3>, <11>), (<3>, <8>), (<3>, <5>), (<3>, <7>), (<3>, <13>), (<3>, <6>), (<8>, <11>), (<8>, <4>), (<8>, <5>), (<8>, <7>), (<8>, <13>), (<8>, <6>), (<8>, <10>), (<4>, <11>), (<4>, <5>), (<4>, <7>), (<4>, <6>), (<4>, <10>), (<4>, <9>), (<13>, <5>), (<13>, <6>), (<13>, <10>), (<13>, <9>), (<6>, <11>), (<6>, <7>), (<6>, <10>), (<9>, <11>), (<9>, <5>), (<9>, <10>), (<11>, <5>), (<11>, <10>), (<7>, <5>), (<7>, <10>), (<10>, <5>)]","{<0>: [<12>, <1>, <2>, <3>, <8>, <4>, <13>, <6>, <9>],
<12>: [<0>, <2>, <11>, <3>, <8>, <4>, <7>, <13>, <6>, <10>, <9>],
<1>: [<0>, <2>, <11>, <3>, <8>, <4>, <5>, <7>, <13>, <10>, <9>],
<2>: [<0>, <12>, <1>, <3>, <8>, <4>, <7>, <13>, <6>, <9>],
<3>: [<0>, <12>, <1>, <2>, <11>, <8>, <5>, <7>, <13>, <6>],
<8>: [<0>, <12>, <1>, <2>, <11>, <3>, <4>, <5>, <7>, <13>, <6>, <10>],
<4>: [<0>, <12>, <1>, <2>, <11>, <8>, <5>, <7>, <6>, <10>, <9>],
<13>: [<0>, <12>, <1>, <2>, <3>, <8>, <5>, <6>, <10>, <9>],
<6>: [<0>, <12>, <2>, <11>, <3>, <8>, <4>, <7>, <13>, <10>],
<9>: [<0>, <12>, <1>, <2>, <11>, <4>, <5>, <13>, <10>],
<11>: [<12>, <1>, <3>, <8>, <4>, <5>, <6>, <10>, <9>],
<7>: [<12>, <1>, <2>, <3>, <8>, <4>, <5>, <6>, <10>],
<10>: [<12>, <1>, <11>, <8>, <4>, <5>, <7>, <13>, <6>, <9>],
<5>: [<1>, <11>, <3>, <8>, <4>, <7>, <13>, <10>, <9>]}","Node <0> is connected to nodes <12>, <1>, <2>, <3>, <8>, <4>, <13>, <6>, <9>.
Node <12> is connected to nodes <0>, <2>, <11>, <3>, <8>, <4>, <7>, <13>, <6>, <10>, <9>.
Node <1> is connected to nodes <0>, <2>, <11>, <3>, <8>, <4>, <5>, <7>, <13>, <10>, <9>.
Node <2> is connected to nodes <0>, <12>, <1>, <3>, <8>, <4>, <7>, <13>, <6>, <9>.
Node <3> is connected to nodes <0>, <12>, <1>, <2>, <11>, <8>, <5>, <7>, <13>, <6>.
Node <8> is connected to nodes <0>, <12>, <1>, <2>, <11>, <3>, <4>, <5>, <7>, <13>, <6>, <10>.
Node <4> is connected to nodes <0>, <12>, <1>, <2>, <11>, <8>, <5>, <7>, <6>, <10>, <9>.
Node <13> is connected to nodes <0>, <12>, <1>, <2>, <3>, <8>, <5>, <6>, <10>, <9>.
Node <6> is connected to nodes <0>, <12>, <2>, <11>, <3>, <8>, <4>, <7>, <13>, <10>.
Node <9> is connected to nodes <0>, <12>, <1>, <2>, <11>, <4>, <5>, <13>, <10>.
Node <11> is connected to nodes <12>, <1>, <3>, <8>, <4>, <5>, <6>, <10>, <9>.
Node <7> is connected to nodes <12>, <1>, <2>, <3>, <8>, <4>, <5>, <6>, <10>.
Node <10> is connected to nodes <12>, <1>, <11>, <8>, <4>, <5>, <7>, <13>, <6>, <9>.
Node <5> is connected to nodes <1>, <11>, <3>, <8>, <4>, <7>, <13>, <10>, <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,70,False,"Start from node <10>, output a sequence of traversal in breadth-first search (BFS) order.","[<10>, <12>, <1>, <11>, <8>, <4>, <5>, <7>, <13>, <6>, <9>, <0>, <2>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <10>. Unvisited neighbors of node <10> are [<12>, <1>, <11>, <8>, <4>, <5>, <7>, <13>, <6>, <9>].
Visit node <12>. Unvisited neighbors of node <12> are [<0>, <2>, <3>].
Visit node <1>. 
Visit node <11>. 
Visit node <8>. 
Visit node <4>. 
Visit node <5>. 
Visit node <7>. 
Visit node <13>. 
Visit node <6>. 
Visit node <9>. 
Visit node <0>. 
Visit node <2>. 
Visit node <3>. 
So the BFS traversal is ","('[[<10>, <2>, <1>, <8>, <13>, <3>, <4>, <0>, <5>, <11>, <9>, <12>, <6>, <7>], [<10>, <12>, <1>, <11>, <8>, <4>, <5>, <7>, <0>, <3>, <6>, <9>, <2>, <13>], [<10>, <12>, <1>, <11>, <8>, <4>, <5>, <7>, <13>, <6>, <9>, <0>, <2>, <3>], [<10>, <12>, <1>, <11>, <9>, <0>, <2>, <3>, <8>, <4>, <5>, <7>, <13>, <6>]]',)",2,234
BFS,"[(<8>, <4>), (<8>, <1>), (<8>, <3>), (<8>, <9>), (<1>, <5>), (<1>, <12>), (<1>, <13>), (<1>, <0>), (<1>, <10>), (<1>, <11>), (<1>, <7>), (<9>, <2>), (<5>, <14>), (<10>, <6>)]","{<8>: [<4>, <1>, <3>, <9>],
<4>: [<8>],
<1>: [<8>, <5>, <12>, <13>, <0>, <10>, <11>, <7>],
<3>: [<8>],
<9>: [<8>, <2>],
<5>: [<1>, <14>],
<12>: [<1>],
<13>: [<1>],
<0>: [<1>],
<10>: [<1>, <6>],
<11>: [<1>],
<7>: [<1>],
<14>: [<5>],
<2>: [<9>],
<6>: [<10>]}","Node <8> is connected to nodes <4>, <1>, <3>, <9>.
Node <4> is connected to node <8>.
Node <1> is connected to nodes <8>, <5>, <12>, <13>, <0>, <10>, <11>, <7>.
Node <3> is connected to node <8>.
Node <9> is connected to nodes <8>, <2>.
Node <5> is connected to nodes <1>, <14>.
Node <12> is connected to node <1>.
Node <13> is connected to node <1>.
Node <0> is connected to node <1>.
Node <10> is connected to nodes <1>, <6>.
Node <11> is connected to node <1>.
Node <7> is connected to node <1>.
Node <14> is connected to node <5>.
Node <2> is connected to node <9>.
Node <6> is connected to node <10>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,14,False,"Start from node <10>, output a sequence of traversal in breadth-first search (BFS) order.","[<10>, <1>, <6>, <8>, <5>, <12>, <13>, <0>, <11>, <7>, <4>, <3>, <9>, <14>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <10>. Unvisited neighbors of node <10> are [<1>, <6>].
Visit node <1>. Unvisited neighbors of node <1> are [<8>, <5>, <12>, <13>, <0>, <11>, <7>].
Visit node <6>. 
Visit node <8>. Unvisited neighbors of node <8> are [<4>, <3>, <9>].
Visit node <5>. Unvisited neighbors of node <5> are [<14>].
Visit node <12>. 
Visit node <13>. 
Visit node <0>. 
Visit node <11>. 
Visit node <7>. 
Visit node <4>. 
Visit node <3>. 
Visit node <9>. Unvisited neighbors of node <9> are [<2>].
Visit node <14>. 
Visit node <2>. 
So the BFS traversal is ","('[[<10>, <1>, <6>, <8>, <5>, <12>, <13>, <0>, <11>, <4>, <2>, <9>, <7>, <14>, <3>], [<10>, <1>, <6>, <8>, <5>, <4>, <3>, <9>, <14>, <2>, <12>, <13>, <0>, <11>, <7>], [<10>, <0>, <7>, <5>, <12>, <3>, <9>, <11>, <6>, <4>, <1>, <13>, <14>, <2>, <8>], [<10>, <1>, <6>, <8>, <5>, <12>, <13>, <0>, <11>, <7>, <4>, <3>, <9>, <14>, <2>]]',)",3,235
BFS,"[(<7>, <11>), (<7>, <1>), (<7>, <6>), (<7>, <0>), (<11>, <1>), (<11>, <4>), (<11>, <8>), (<1>, <8>), (<1>, <3>), (<1>, <6>), (<6>, <0>), (<6>, <10>), (<0>, <5>), (<0>, <9>), (<0>, <10>), (<4>, <12>), (<4>, <3>), (<4>, <8>), (<8>, <3>), (<3>, <9>), (<5>, <2>), (<5>, <9>), (<5>, <10>), (<2>, <12>), (<2>, <10>), (<9>, <12>)]","{<7>: [<11>, <1>, <6>, <0>],
<11>: [<7>, <1>, <4>, <8>],
<1>: [<7>, <11>, <8>, <3>, <6>],
<6>: [<7>, <1>, <0>, <10>],
<0>: [<7>, <5>, <6>, <9>, <10>],
<4>: [<11>, <12>, <3>, <8>],
<8>: [<11>, <1>, <4>, <3>],
<3>: [<1>, <4>, <8>, <9>],
<5>: [<0>, <2>, <9>, <10>],
<2>: [<5>, <12>, <10>],
<9>: [<5>, <0>, <12>, <3>],
<10>: [<5>, <0>, <6>, <2>],
<12>: [<4>, <9>, <2>]}","Node <7> is connected to nodes <11>, <1>, <6>, <0>.
Node <11> is connected to nodes <7>, <1>, <4>, <8>.
Node <1> is connected to nodes <7>, <11>, <8>, <3>, <6>.
Node <6> is connected to nodes <7>, <1>, <0>, <10>.
Node <0> is connected to nodes <7>, <5>, <6>, <9>, <10>.
Node <4> is connected to nodes <11>, <12>, <3>, <8>.
Node <8> is connected to nodes <11>, <1>, <4>, <3>.
Node <3> is connected to nodes <1>, <4>, <8>, <9>.
Node <5> is connected to nodes <0>, <2>, <9>, <10>.
Node <2> is connected to nodes <5>, <12>, <10>.
Node <9> is connected to nodes <5>, <0>, <12>, <3>.
Node <10> is connected to nodes <5>, <0>, <6>, <2>.
Node <12> is connected to nodes <4>, <9>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,26,False,"Start from node <12>, output a sequence of traversal in breadth-first search (BFS) order.","[<12>, <4>, <9>, <2>, <11>, <3>, <8>, <5>, <0>, <10>, <7>, <1>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <12>. Unvisited neighbors of node <12> are [<4>, <9>, <2>].
Visit node <4>. Unvisited neighbors of node <4> are [<11>, <3>, <8>].
Visit node <9>. Unvisited neighbors of node <9> are [<5>, <0>].
Visit node <2>. Unvisited neighbors of node <2> are [<10>].
Visit node <11>. Unvisited neighbors of node <11> are [<7>, <1>].
Visit node <3>. 
Visit node <8>. 
Visit node <5>. 
Visit node <0>. Unvisited neighbors of node <0> are [<6>].
Visit node <10>. 
Visit node <7>. 
Visit node <1>. 
Visit node <6>. 
So the BFS traversal is ","('[[<12>, <4>, <9>, <2>, <11>, <3>, <8>, <5>, <0>, <10>, <7>, <1>, <6>], [<12>, <4>, <9>, <2>, <11>, <3>, <0>, <7>, <8>, <5>, <10>, <1>, <6>], [<12>, <4>, <9>, <2>, <10>, <7>, <1>, <6>, <11>, <3>, <8>, <5>, <0>], [<12>, <7>, <9>, <8>, <1>, <0>, <5>, <6>, <4>, <11>, <3>, <2>, <10>]]',)",0,236
BFS,"[(<6>, <8>), (<6>, <7>), (<6>, <0>), (<6>, <5>), (<6>, <3>), (<6>, <2>), (<6>, <4>), (<8>, <0>), (<8>, <1>), (<8>, <2>), (<8>, <4>), (<7>, <0>), (<7>, <5>), (<7>, <2>), (<7>, <4>), (<0>, <5>), (<0>, <3>), (<0>, <1>), (<0>, <2>), (<0>, <4>), (<5>, <2>), (<5>, <4>), (<3>, <1>), (<3>, <2>), (<3>, <4>), (<2>, <4>), (<4>, <1>)]","{<6>: [<8>, <7>, <0>, <5>, <3>, <2>, <4>],
<8>: [<6>, <0>, <1>, <2>, <4>],
<7>: [<6>, <0>, <5>, <2>, <4>],
<0>: [<6>, <8>, <7>, <5>, <3>, <1>, <2>, <4>],
<5>: [<6>, <7>, <0>, <2>, <4>],
<3>: [<6>, <0>, <1>, <2>, <4>],
<2>: [<6>, <8>, <7>, <0>, <5>, <3>, <4>],
<4>: [<6>, <8>, <7>, <0>, <5>, <3>, <1>, <2>],
<1>: [<8>, <0>, <3>, <4>]}","Node <6> is connected to nodes <8>, <7>, <0>, <5>, <3>, <2>, <4>.
Node <8> is connected to nodes <6>, <0>, <1>, <2>, <4>.
Node <7> is connected to nodes <6>, <0>, <5>, <2>, <4>.
Node <0> is connected to nodes <6>, <8>, <7>, <5>, <3>, <1>, <2>, <4>.
Node <5> is connected to nodes <6>, <7>, <0>, <2>, <4>.
Node <3> is connected to nodes <6>, <0>, <1>, <2>, <4>.
Node <2> is connected to nodes <6>, <8>, <7>, <0>, <5>, <3>, <4>.
Node <4> is connected to nodes <6>, <8>, <7>, <0>, <5>, <3>, <1>, <2>.
Node <1> is connected to nodes <8>, <0>, <3>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,27,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <6>, <0>, <5>, <2>, <4>, <8>, <3>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<6>, <0>, <5>, <2>, <4>].
Visit node <6>. Unvisited neighbors of node <6> are [<8>, <3>].
Visit node <0>. Unvisited neighbors of node <0> are [<1>].
Visit node <5>. 
Visit node <2>. 
Visit node <4>. 
Visit node <8>. 
Visit node <3>. 
Visit node <1>. 
So the BFS traversal is ","('[[<7>, <6>, <0>, <5>, <2>, <4>, <8>, <3>, <1>], [<7>, <5>, <2>, <1>, <3>, <4>, <0>, <6>, <8>], [<7>, <6>, <0>, <5>, <3>, <2>, <1>, <4>, <8>], [<7>, <6>, <0>, <8>, <3>, <1>, <5>, <2>, <4>]]',)",0,237
BFS,"[(<10>, <5>), (<10>, <12>), (<10>, <4>), (<10>, <1>), (<10>, <0>), (<5>, <8>), (<5>, <12>), (<5>, <9>), (<5>, <4>), (<5>, <6>), (<5>, <7>), (<5>, <13>), (<12>, <9>), (<12>, <3>), (<12>, <1>), (<12>, <5>), (<12>, <8>), (<4>, <6>), (<4>, <1>), (<4>, <5>), (<4>, <2>), (<4>, <3>), (<1>, <7>), (<1>, <3>), (<1>, <4>), (<0>, <5>), (<0>, <11>), (<0>, <12>), (<0>, <4>), (<0>, <13>), (<8>, <2>), (<8>, <3>), (<8>, <13>), (<8>, <5>), (<9>, <2>), (<9>, <1>), (<9>, <7>), (<9>, <11>), (<6>, <0>), (<6>, <12>), (<6>, <9>), (<6>, <2>), (<7>, <5>), (<7>, <8>), (<7>, <2>), (<13>, <10>), (<13>, <3>), (<11>, <9>), (<11>, <4>), (<11>, <7>), (<2>, <11>), (<3>, <6>), (<3>, <7>), (<3>, <11>)]","{<10>: [<5>, <12>, <4>, <1>, <0>],
<5>: [<8>, <12>, <9>, <4>, <6>, <7>, <13>],
<12>: [<9>, <3>, <1>, <5>, <8>],
<4>: [<6>, <1>, <5>, <2>, <3>],
<1>: [<7>, <3>, <4>],
<0>: [<5>, <11>, <12>, <4>, <13>],
<8>: [<2>, <3>, <13>, <5>],
<9>: [<2>, <1>, <7>, <11>],
<6>: [<0>, <12>, <9>, <2>],
<7>: [<5>, <8>, <2>],
<13>: [<10>, <3>],
<11>: [<9>, <4>, <7>],
<2>: [<11>],
<3>: [<6>, <7>, <11>]}","Node <10> is connected to nodes <5>, <12>, <4>, <1>, <0>.
Node <5> is connected to nodes <8>, <12>, <9>, <4>, <6>, <7>, <13>.
Node <12> is connected to nodes <9>, <3>, <1>, <5>, <8>.
Node <4> is connected to nodes <6>, <1>, <5>, <2>, <3>.
Node <1> is connected to nodes <7>, <3>, <4>.
Node <0> is connected to nodes <5>, <11>, <12>, <4>, <13>.
Node <8> is connected to nodes <2>, <3>, <13>, <5>.
Node <9> is connected to nodes <2>, <1>, <7>, <11>.
Node <6> is connected to nodes <0>, <12>, <9>, <2>.
Node <7> is connected to nodes <5>, <8>, <2>.
Node <13> is connected to nodes <10>, <3>.
Node <11> is connected to nodes <9>, <4>, <7>.
Node <2> is connected to node <11>.
Node <3> is connected to nodes <6>, <7>, <11>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,54,True,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <2>, <3>, <13>, <5>, <11>, <6>, <7>, <10>, <12>, <9>, <4>, <0>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<2>, <3>, <13>, <5>].
Visit node <2>. Unvisited neighbors of node <2> are [<11>].
Visit node <3>. Unvisited neighbors of node <3> are [<6>, <7>].
Visit node <13>. Unvisited neighbors of node <13> are [<10>].
Visit node <5>. Unvisited neighbors of node <5> are [<12>, <9>, <4>].
Visit node <11>. 
Visit node <6>. Unvisited neighbors of node <6> are [<0>].
Visit node <7>. 
Visit node <10>. Unvisited neighbors of node <10> are [<1>].
Visit node <12>. 
Visit node <9>. 
Visit node <4>. 
Visit node <0>. 
Visit node <1>. 
So the BFS traversal is ","('[[<8>, <2>, <3>, <13>, <9>, <4>, <0>, <1>, <5>, <11>, <6>, <7>, <10>, <12>], [<8>, <2>, <3>, <13>, <5>, <11>, <6>, <9>, <4>, <0>, <7>, <12>, <10>, <1>], [<8>, <2>, <3>, <13>, <5>, <11>, <6>, <7>, <10>, <12>, <9>, <4>, <0>, <1>], [<8>, <7>, <11>, <1>, <13>, <5>, <0>, <12>, <3>, <6>, <2>, <10>, <4>, <9>]]',)",2,238
BFS,"[(<10>, <2>), (<10>, <5>), (<10>, <0>), (<10>, <11>), (<10>, <1>), (<10>, <8>), (<10>, <12>), (<8>, <7>), (<8>, <3>), (<12>, <13>), (<7>, <4>), (<7>, <9>), (<7>, <6>)]","{<10>: [<2>, <5>, <0>, <11>, <1>, <8>, <12>],
<2>: [<10>],
<5>: [<10>],
<0>: [<10>],
<11>: [<10>],
<1>: [<10>],
<8>: [<10>, <7>, <3>],
<12>: [<10>, <13>],
<7>: [<8>, <4>, <9>, <6>],
<3>: [<8>],
<13>: [<12>],
<4>: [<7>],
<9>: [<7>],
<6>: [<7>]}","Node <10> is connected to nodes <2>, <5>, <0>, <11>, <1>, <8>, <12>.
Node <2> is connected to node <10>.
Node <5> is connected to node <10>.
Node <0> is connected to node <10>.
Node <11> is connected to node <10>.
Node <1> is connected to node <10>.
Node <8> is connected to nodes <10>, <7>, <3>.
Node <12> is connected to nodes <10>, <13>.
Node <7> is connected to nodes <8>, <4>, <9>, <6>.
Node <3> is connected to node <8>.
Node <13> is connected to node <12>.
Node <4> is connected to node <7>.
Node <9> is connected to node <7>.
Node <6> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,13,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <10>, <2>, <5>, <11>, <1>, <8>, <12>, <7>, <3>, <13>, <4>, <9>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<10>].
Visit node <10>. Unvisited neighbors of node <10> are [<2>, <5>, <11>, <1>, <8>, <12>].
Visit node <2>. 
Visit node <5>. 
Visit node <11>. 
Visit node <1>. 
Visit node <8>. Unvisited neighbors of node <8> are [<7>, <3>].
Visit node <12>. Unvisited neighbors of node <12> are [<13>].
Visit node <7>. Unvisited neighbors of node <7> are [<4>, <9>, <6>].
Visit node <3>. 
Visit node <13>. 
Visit node <4>. 
Visit node <9>. 
Visit node <6>. 
So the BFS traversal is ","('[[<0>, <10>, <2>, <5>, <11>, <1>, <8>, <6>, <9>, <12>, <4>, <13>, <7>, <3>], [<0>, <10>, <2>, <5>, <11>, <1>, <8>, <12>, <7>, <3>, <13>, <4>, <9>, <6>], [<0>, <1>, <6>, <12>, <11>, <5>, <4>, <10>, <2>, <8>, <7>, <3>, <9>, <13>], [<0>, <10>, <2>, <5>, <13>, <4>, <9>, <6>, <11>, <1>, <8>, <12>, <7>, <3>]]',)",1,239
BFS,"[(<10>, <11>), (<10>, <3>), (<10>, <2>), (<10>, <1>), (<11>, <9>), (<11>, <2>), (<11>, <0>), (<11>, <1>), (<11>, <5>), (<11>, <8>), (<11>, <10>), (<3>, <5>), (<3>, <8>), (<3>, <6>), (<2>, <8>), (<2>, <11>), (<2>, <9>), (<1>, <10>), (<1>, <3>), (<1>, <2>), (<1>, <0>), (<6>, <9>), (<6>, <0>), (<6>, <1>), (<9>, <2>), (<9>, <1>), (<9>, <5>), (<9>, <10>), (<0>, <1>), (<0>, <5>), (<0>, <4>), (<5>, <8>), (<5>, <6>), (<5>, <3>), (<5>, <9>), (<5>, <2>), (<5>, <1>), (<8>, <11>), (<8>, <9>), (<8>, <5>), (<4>, <10>), (<4>, <3>), (<7>, <9>), (<7>, <2>), (<7>, <5>)]","{<10>: [<11>, <3>, <2>, <1>],
<11>: [<9>, <2>, <0>, <1>, <5>, <8>, <10>],
<3>: [<5>, <8>, <6>],
<2>: [<8>, <11>, <9>],
<1>: [<10>, <3>, <2>, <0>],
<6>: [<9>, <0>, <1>],
<9>: [<2>, <1>, <5>, <10>],
<0>: [<1>, <5>, <4>],
<5>: [<8>, <6>, <3>, <9>, <2>, <1>],
<8>: [<11>, <9>, <5>],
<4>: [<10>, <3>],
<7>: [<9>, <2>, <5>]}","Node <10> is connected to nodes <11>, <3>, <2>, <1>.
Node <11> is connected to nodes <9>, <2>, <0>, <1>, <5>, <8>, <10>.
Node <3> is connected to nodes <5>, <8>, <6>.
Node <2> is connected to nodes <8>, <11>, <9>.
Node <1> is connected to nodes <10>, <3>, <2>, <0>.
Node <6> is connected to nodes <9>, <0>, <1>.
Node <9> is connected to nodes <2>, <1>, <5>, <10>.
Node <0> is connected to nodes <1>, <5>, <4>.
Node <5> is connected to nodes <8>, <6>, <3>, <9>, <2>, <1>.
Node <8> is connected to nodes <11>, <9>, <5>.
Node <4> is connected to nodes <10>, <3>.
Node <7> is connected to nodes <9>, <2>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,45,True,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <8>, <11>, <9>, <5>, <0>, <1>, <10>, <6>, <3>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<8>, <11>, <9>].
Visit node <8>. Unvisited neighbors of node <8> are [<5>].
Visit node <11>. Unvisited neighbors of node <11> are [<0>, <1>, <10>].
Visit node <9>. 
Visit node <5>. Unvisited neighbors of node <5> are [<6>, <3>].
Visit node <0>. Unvisited neighbors of node <0> are [<4>].
Visit node <1>. 
Visit node <10>. 
Visit node <6>. 
Visit node <3>. 
Visit node <4>. 
So the BFS traversal is ","('[[<2>, <8>, <11>, <6>, <3>, <4>, <9>, <5>, <0>, <1>, <10>], [<2>, <9>, <10>, <6>, <1>, <3>, <4>, <11>, <8>, <0>, <5>], [<2>, <8>, <11>, <9>, <5>, <10>, <6>, <4>, <1>, <3>, <0>], [<2>, <8>, <11>, <9>, <5>, <0>, <1>, <10>, <6>, <3>, <4>]]',)",3,240
BFS,"[(<5>, <8>), (<5>, <10>), (<5>, <2>), (<5>, <1>), (<5>, <6>), (<8>, <13>), (<8>, <11>), (<8>, <4>), (<8>, <6>), (<10>, <0>), (<10>, <2>), (<2>, <3>), (<2>, <13>), (<2>, <9>), (<2>, <1>), (<2>, <7>), (<6>, <0>), (<13>, <3>), (<13>, <9>), (<13>, <7>), (<13>, <4>), (<11>, <4>), (<4>, <3>), (<4>, <0>), (<3>, <9>), (<3>, <12>), (<9>, <7>)]","{<5>: [<8>, <10>, <2>, <1>, <6>],
<8>: [<5>, <13>, <11>, <4>, <6>],
<10>: [<5>, <0>, <2>],
<2>: [<5>, <3>, <10>, <13>, <9>, <1>, <7>],
<1>: [<5>, <2>],
<6>: [<5>, <8>, <0>],
<13>: [<8>, <3>, <9>, <2>, <7>, <4>],
<11>: [<8>, <4>],
<4>: [<8>, <3>, <0>, <13>, <11>],
<3>: [<13>, <9>, <2>, <12>, <4>],
<9>: [<3>, <13>, <2>, <7>],
<12>: [<3>],
<0>: [<10>, <4>, <6>],
<7>: [<13>, <9>, <2>]}","Node <5> is connected to nodes <8>, <10>, <2>, <1>, <6>.
Node <8> is connected to nodes <5>, <13>, <11>, <4>, <6>.
Node <10> is connected to nodes <5>, <0>, <2>.
Node <2> is connected to nodes <5>, <3>, <10>, <13>, <9>, <1>, <7>.
Node <1> is connected to nodes <5>, <2>.
Node <6> is connected to nodes <5>, <8>, <0>.
Node <13> is connected to nodes <8>, <3>, <9>, <2>, <7>, <4>.
Node <11> is connected to nodes <8>, <4>.
Node <4> is connected to nodes <8>, <3>, <0>, <13>, <11>.
Node <3> is connected to nodes <13>, <9>, <2>, <12>, <4>.
Node <9> is connected to nodes <3>, <13>, <2>, <7>.
Node <12> is connected to node <3>.
Node <0> is connected to nodes <10>, <4>, <6>.
Node <7> is connected to nodes <13>, <9>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,27,False,"Start from node <11>, output a sequence of traversal in breadth-first search (BFS) order.","[<11>, <8>, <4>, <5>, <13>, <6>, <3>, <0>, <10>, <2>, <1>, <9>, <7>, <12>]","Let's run breadth-first search (BFS) step by step.
Visit node <11>. Unvisited neighbors of node <11> are [<8>, <4>].
Visit node <8>. Unvisited neighbors of node <8> are [<5>, <13>, <6>].
Visit node <4>. Unvisited neighbors of node <4> are [<3>, <0>].
Visit node <5>. Unvisited neighbors of node <5> are [<10>, <2>, <1>].
Visit node <13>. Unvisited neighbors of node <13> are [<9>, <7>].
Visit node <6>. 
Visit node <3>. Unvisited neighbors of node <3> are [<12>].
Visit node <0>. 
Visit node <10>. 
Visit node <2>. 
Visit node <1>. 
Visit node <9>. 
Visit node <7>. 
Visit node <12>. 
So the BFS traversal is ","('[[<11>, <12>, <3>, <7>, <0>, <1>, <6>, <4>, <5>, <13>, <9>, <10>, <8>, <2>], [<11>, <8>, <4>, <5>, <1>, <9>, <7>, <12>, <13>, <6>, <3>, <0>, <10>, <2>], [<11>, <8>, <4>, <5>, <13>, <6>, <3>, <9>, <2>, <0>, <7>, <10>, <12>, <1>], [<11>, <8>, <4>, <5>, <13>, <6>, <3>, <0>, <10>, <2>, <1>, <9>, <7>, <12>]]',)",3,241
BFS,"[(<4>, <0>), (<4>, <7>), (<4>, <10>), (<4>, <5>), (<4>, <6>), (<4>, <1>), (<0>, <8>), (<0>, <3>), (<0>, <7>), (<0>, <10>), (<0>, <9>), (<0>, <5>), (<0>, <6>), (<0>, <2>), (<0>, <1>), (<7>, <8>), (<7>, <3>), (<7>, <10>), (<7>, <9>), (<7>, <5>), (<7>, <6>), (<7>, <2>), (<7>, <1>), (<10>, <8>), (<10>, <9>), (<10>, <5>), (<10>, <6>), (<5>, <9>), (<5>, <2>), (<5>, <1>), (<6>, <8>), (<6>, <3>), (<1>, <8>), (<1>, <3>), (<1>, <9>), (<1>, <2>), (<8>, <3>), (<8>, <9>), (<8>, <2>), (<3>, <2>), (<9>, <2>)]","{<4>: [<0>, <7>, <10>, <5>, <6>, <1>],
<0>: [<4>, <8>, <3>, <7>, <10>, <9>, <5>, <6>, <2>, <1>],
<7>: [<4>, <0>, <8>, <3>, <10>, <9>, <5>, <6>, <2>, <1>],
<10>: [<4>, <0>, <8>, <7>, <9>, <5>, <6>],
<5>: [<4>, <0>, <7>, <10>, <9>, <2>, <1>],
<6>: [<4>, <0>, <8>, <3>, <7>, <10>],
<1>: [<4>, <0>, <8>, <3>, <7>, <9>, <5>, <2>],
<8>: [<0>, <3>, <7>, <10>, <9>, <6>, <2>, <1>],
<3>: [<0>, <8>, <7>, <6>, <2>, <1>],
<9>: [<0>, <8>, <7>, <10>, <5>, <2>, <1>],
<2>: [<0>, <8>, <3>, <7>, <9>, <5>, <1>]}","Node <4> is connected to nodes <0>, <7>, <10>, <5>, <6>, <1>.
Node <0> is connected to nodes <4>, <8>, <3>, <7>, <10>, <9>, <5>, <6>, <2>, <1>.
Node <7> is connected to nodes <4>, <0>, <8>, <3>, <10>, <9>, <5>, <6>, <2>, <1>.
Node <10> is connected to nodes <4>, <0>, <8>, <7>, <9>, <5>, <6>.
Node <5> is connected to nodes <4>, <0>, <7>, <10>, <9>, <2>, <1>.
Node <6> is connected to nodes <4>, <0>, <8>, <3>, <7>, <10>.
Node <1> is connected to nodes <4>, <0>, <8>, <3>, <7>, <9>, <5>, <2>.
Node <8> is connected to nodes <0>, <3>, <7>, <10>, <9>, <6>, <2>, <1>.
Node <3> is connected to nodes <0>, <8>, <7>, <6>, <2>, <1>.
Node <9> is connected to nodes <0>, <8>, <7>, <10>, <5>, <2>, <1>.
Node <2> is connected to nodes <0>, <8>, <3>, <7>, <9>, <5>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,41,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <4>, <0>, <7>, <10>, <9>, <2>, <1>, <6>, <8>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<4>, <0>, <7>, <10>, <9>, <2>, <1>].
Visit node <4>. Unvisited neighbors of node <4> are [<6>].
Visit node <0>. Unvisited neighbors of node <0> are [<8>, <3>].
Visit node <7>. 
Visit node <10>. 
Visit node <9>. 
Visit node <2>. 
Visit node <1>. 
Visit node <6>. 
Visit node <8>. 
Visit node <3>. 
So the BFS traversal is ","('[[<5>, <4>, <0>, <6>, <8>, <3>, <7>, <10>, <9>, <2>, <1>], [<5>, <4>, <0>, <7>, <10>, <9>, <2>, <1>, <6>, <8>, <3>], [<5>, <6>, <10>, <2>, <1>, <3>, <7>, <0>, <8>, <4>, <9>], [<5>, <4>, <0>, <7>, <10>, <8>, <3>, <9>, <6>, <1>, <2>]]',)",1,242
BFS,"[(<6>, <7>), (<6>, <0>), (<6>, <3>), (<6>, <2>), (<0>, <2>), (<0>, <1>), (<0>, <3>), (<0>, <4>), (<3>, <5>), (<3>, <1>), (<2>, <5>), (<1>, <4>)]","{<6>: [<7>, <0>, <3>, <2>],
<7>: [<6>],
<0>: [<6>, <2>, <1>, <3>, <4>],
<3>: [<6>, <5>, <0>, <1>],
<2>: [<6>, <5>, <0>],
<5>: [<2>, <3>],
<1>: [<0>, <3>, <4>],
<4>: [<0>, <1>]}","Node <6> is connected to nodes <7>, <0>, <3>, <2>.
Node <7> is connected to node <6>.
Node <0> is connected to nodes <6>, <2>, <1>, <3>, <4>.
Node <3> is connected to nodes <6>, <5>, <0>, <1>.
Node <2> is connected to nodes <6>, <5>, <0>.
Node <5> is connected to nodes <2>, <3>.
Node <1> is connected to nodes <0>, <3>, <4>.
Node <4> is connected to nodes <0>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,12,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <6>, <5>, <0>, <7>, <3>, <1>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<6>, <5>, <0>].
Visit node <6>. Unvisited neighbors of node <6> are [<7>, <3>].
Visit node <5>. 
Visit node <0>. Unvisited neighbors of node <0> are [<1>, <4>].
Visit node <7>. 
Visit node <3>. 
Visit node <1>. 
Visit node <4>. 
So the BFS traversal is ","('[[<2>, <6>, <5>, <0>, <7>, <3>, <4>, <1>], [<2>, <6>, <5>, <0>, <7>, <3>, <1>, <4>], [<2>, <6>, <1>, <4>, <5>, <0>, <7>, <3>], [<2>, <4>, <0>, <6>, <7>, <1>, <3>, <5>]]',)",1,243
BFS,"[(<2>, <1>), (<2>, <8>), (<2>, <9>), (<2>, <3>), (<2>, <5>), (<2>, <0>), (<2>, <6>), (<1>, <8>), (<1>, <3>), (<1>, <5>), (<1>, <0>), (<1>, <6>), (<1>, <4>), (<1>, <7>), (<8>, <9>), (<8>, <3>), (<8>, <0>), (<8>, <6>), (<8>, <4>), (<9>, <3>), (<9>, <0>), (<9>, <10>), (<9>, <6>), (<9>, <7>), (<3>, <0>), (<3>, <10>), (<3>, <6>), (<3>, <4>), (<3>, <7>), (<5>, <0>), (<5>, <10>), (<5>, <6>), (<5>, <4>), (<5>, <7>), (<0>, <6>), (<0>, <4>), (<0>, <7>), (<6>, <10>), (<6>, <4>), (<4>, <10>), (<4>, <7>), (<7>, <10>)]","{<2>: [<1>, <8>, <9>, <3>, <5>, <0>, <6>],
<1>: [<2>, <8>, <3>, <5>, <0>, <6>, <4>, <7>],
<8>: [<2>, <1>, <9>, <3>, <0>, <6>, <4>],
<9>: [<2>, <8>, <3>, <0>, <10>, <6>, <7>],
<3>: [<2>, <1>, <8>, <9>, <0>, <10>, <6>, <4>, <7>],
<5>: [<2>, <1>, <0>, <10>, <6>, <4>, <7>],
<0>: [<2>, <1>, <8>, <9>, <3>, <5>, <6>, <4>, <7>],
<6>: [<2>, <1>, <8>, <9>, <3>, <5>, <0>, <10>, <4>],
<4>: [<1>, <8>, <3>, <5>, <0>, <10>, <6>, <7>],
<7>: [<1>, <9>, <3>, <5>, <0>, <10>, <4>],
<10>: [<9>, <3>, <5>, <6>, <4>, <7>]}","Node <2> is connected to nodes <1>, <8>, <9>, <3>, <5>, <0>, <6>.
Node <1> is connected to nodes <2>, <8>, <3>, <5>, <0>, <6>, <4>, <7>.
Node <8> is connected to nodes <2>, <1>, <9>, <3>, <0>, <6>, <4>.
Node <9> is connected to nodes <2>, <8>, <3>, <0>, <10>, <6>, <7>.
Node <3> is connected to nodes <2>, <1>, <8>, <9>, <0>, <10>, <6>, <4>, <7>.
Node <5> is connected to nodes <2>, <1>, <0>, <10>, <6>, <4>, <7>.
Node <0> is connected to nodes <2>, <1>, <8>, <9>, <3>, <5>, <6>, <4>, <7>.
Node <6> is connected to nodes <2>, <1>, <8>, <9>, <3>, <5>, <0>, <10>, <4>.
Node <4> is connected to nodes <1>, <8>, <3>, <5>, <0>, <10>, <6>, <7>.
Node <7> is connected to nodes <1>, <9>, <3>, <5>, <0>, <10>, <4>.
Node <10> is connected to nodes <9>, <3>, <5>, <6>, <4>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,42,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <2>, <8>, <3>, <0>, <10>, <6>, <7>, <1>, <5>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<2>, <8>, <3>, <0>, <10>, <6>, <7>].
Visit node <2>. Unvisited neighbors of node <2> are [<1>, <5>].
Visit node <8>. Unvisited neighbors of node <8> are [<4>].
Visit node <3>. 
Visit node <0>. 
Visit node <10>. 
Visit node <6>. 
Visit node <7>. 
Visit node <1>. 
Visit node <5>. 
Visit node <4>. 
So the BFS traversal is ","('[[<9>, <2>, <8>, <3>, <0>, <10>, <6>, <7>, <1>, <5>, <4>], [<9>, <2>, <8>, <3>, <0>, <6>, <5>, <7>, <10>, <1>, <4>], [<9>, <2>, <8>, <1>, <5>, <4>, <3>, <0>, <10>, <6>, <7>], [<9>, <10>, <8>, <6>, <3>, <2>, <4>, <7>, <5>, <0>, <1>]]',)",0,244
BFS,"[(<7>, <4>), (<7>, <5>), (<7>, <2>), (<4>, <6>), (<4>, <1>), (<4>, <2>), (<4>, <9>), (<4>, <7>), (<5>, <4>), (<2>, <3>), (<2>, <7>), (<2>, <6>), (<6>, <1>), (<6>, <8>), (<6>, <9>), (<6>, <5>), (<1>, <0>), (<1>, <8>), (<1>, <7>), (<1>, <6>), (<9>, <7>), (<9>, <4>), (<9>, <2>), (<8>, <7>), (<8>, <4>), (<8>, <6>), (<8>, <2>), (<0>, <3>), (<0>, <7>), (<0>, <4>), (<0>, <6>), (<0>, <1>), (<3>, <7>), (<3>, <6>)]","{<7>: [<4>, <5>, <2>],
<4>: [<6>, <1>, <2>, <9>, <7>],
<5>: [<4>],
<2>: [<3>, <7>, <6>],
<6>: [<1>, <8>, <9>, <5>],
<1>: [<0>, <8>, <7>, <6>],
<9>: [<7>, <4>, <2>],
<8>: [<7>, <4>, <6>, <2>],
<0>: [<3>, <7>, <4>, <6>, <1>],
<3>: [<7>, <6>]}","Node <7> is connected to nodes <4>, <5>, <2>.
Node <4> is connected to nodes <6>, <1>, <2>, <9>, <7>.
Node <5> is connected to node <4>.
Node <2> is connected to nodes <3>, <7>, <6>.
Node <6> is connected to nodes <1>, <8>, <9>, <5>.
Node <1> is connected to nodes <0>, <8>, <7>, <6>.
Node <9> is connected to nodes <7>, <4>, <2>.
Node <8> is connected to nodes <7>, <4>, <6>, <2>.
Node <0> is connected to nodes <3>, <7>, <4>, <6>, <1>.
Node <3> is connected to nodes <7>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,34,True,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <3>, <7>, <4>, <6>, <1>, <5>, <2>, <9>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<3>, <7>, <4>, <6>, <1>].
Visit node <3>. 
Visit node <7>. Unvisited neighbors of node <7> are [<5>, <2>].
Visit node <4>. Unvisited neighbors of node <4> are [<9>].
Visit node <6>. Unvisited neighbors of node <6> are [<8>].
Visit node <1>. 
Visit node <5>. 
Visit node <2>. 
Visit node <9>. 
Visit node <8>. 
So the BFS traversal is ","('[[<0>, <7>, <5>, <2>, <3>, <4>, <6>, <9>, <1>, <8>], [<0>, <3>, <7>, <4>, <6>, <9>, <5>, <8>, <2>, <1>], [<0>, <3>, <7>, <4>, <6>, <1>, <5>, <2>, <9>, <8>], [<0>, <3>, <7>, <2>, <9>, <8>, <4>, <6>, <1>, <5>]]',)",2,245
BFS,"[(<5>, <2>), (<5>, <6>), (<5>, <7>), (<5>, <3>), (<2>, <6>), (<6>, <7>), (<6>, <0>), (<6>, <4>), (<6>, <1>), (<7>, <3>), (<7>, <4>), (<3>, <0>), (<0>, <4>), (<0>, <2>), (<0>, <1>), (<0>, <5>), (<4>, <1>), (<4>, <0>), (<1>, <6>), (<1>, <7>), (<1>, <3>), (<1>, <0>)]","{<5>: [<2>, <6>, <7>, <3>],
<2>: [<6>],
<6>: [<7>, <0>, <4>, <1>],
<7>: [<3>, <4>],
<3>: [<0>],
<0>: [<4>, <2>, <1>, <5>],
<4>: [<1>, <0>],
<1>: [<6>, <7>, <3>, <0>]}","Node <5> is connected to nodes <2>, <6>, <7>, <3>.
Node <2> is connected to node <6>.
Node <6> is connected to nodes <7>, <0>, <4>, <1>.
Node <7> is connected to nodes <3>, <4>.
Node <3> is connected to node <0>.
Node <0> is connected to nodes <4>, <2>, <1>, <5>.
Node <4> is connected to nodes <1>, <0>.
Node <1> is connected to nodes <6>, <7>, <3>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,22,True,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <7>, <0>, <4>, <1>, <3>, <2>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<7>, <0>, <4>, <1>].
Visit node <7>. Unvisited neighbors of node <7> are [<3>].
Visit node <0>. Unvisited neighbors of node <0> are [<2>, <5>].
Visit node <4>. 
Visit node <1>. 
Visit node <3>. 
Visit node <2>. 
Visit node <5>. 
So the BFS traversal is ","('[[<6>, <4>, <5>, <2>, <0>, <3>, <1>, <7>], [<6>, <7>, <2>, <5>, <0>, <4>, <1>, <3>], [<6>, <7>, <0>, <4>, <1>, <5>, <2>, <3>], [<6>, <7>, <0>, <4>, <1>, <3>, <2>, <5>]]',)",3,246
BFS,"[(<8>, <6>), (<8>, <5>), (<8>, <7>), (<8>, <2>), (<6>, <3>), (<6>, <0>), (<6>, <5>), (<6>, <7>), (<6>, <4>), (<5>, <0>), (<5>, <7>), (<5>, <1>), (<7>, <3>), (<7>, <0>), (<7>, <1>), (<2>, <3>), (<2>, <1>), (<2>, <4>), (<3>, <1>), (<3>, <4>), (<1>, <0>), (<4>, <0>)]","{<8>: [<6>, <5>, <7>, <2>],
<6>: [<8>, <3>, <0>, <5>, <7>, <4>],
<5>: [<8>, <0>, <6>, <7>, <1>],
<7>: [<8>, <3>, <0>, <6>, <5>, <1>],
<2>: [<8>, <3>, <1>, <4>],
<3>: [<6>, <7>, <1>, <4>, <2>],
<1>: [<3>, <0>, <5>, <7>, <2>],
<4>: [<3>, <0>, <6>, <2>],
<0>: [<6>, <5>, <7>, <1>, <4>]}","Node <8> is connected to nodes <6>, <5>, <7>, <2>.
Node <6> is connected to nodes <8>, <3>, <0>, <5>, <7>, <4>.
Node <5> is connected to nodes <8>, <0>, <6>, <7>, <1>.
Node <7> is connected to nodes <8>, <3>, <0>, <6>, <5>, <1>.
Node <2> is connected to nodes <8>, <3>, <1>, <4>.
Node <3> is connected to nodes <6>, <7>, <1>, <4>, <2>.
Node <1> is connected to nodes <3>, <0>, <5>, <7>, <2>.
Node <4> is connected to nodes <3>, <0>, <6>, <2>.
Node <0> is connected to nodes <6>, <5>, <7>, <1>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,22,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <6>, <7>, <1>, <4>, <2>, <8>, <0>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<6>, <7>, <1>, <4>, <2>].
Visit node <6>. Unvisited neighbors of node <6> are [<8>, <0>, <5>].
Visit node <7>. 
Visit node <1>. 
Visit node <4>. 
Visit node <2>. 
Visit node <8>. 
Visit node <0>. 
Visit node <5>. 
So the BFS traversal is ","('[[<3>, <6>, <7>, <8>, <0>, <5>, <1>, <4>, <2>], [<3>, <2>, <6>, <4>, <0>, <5>, <8>, <1>, <7>], [<3>, <6>, <7>, <1>, <4>, <2>, <8>, <0>, <5>], [<3>, <6>, <7>, <1>, <0>, <2>, <4>, <8>, <5>]]',)",2,247
BFS,"[(<1>, <3>), (<1>, <2>), (<1>, <4>), (<1>, <9>), (<3>, <4>), (<3>, <2>), (<3>, <5>), (<2>, <6>), (<2>, <7>), (<4>, <0>), (<4>, <5>), (<9>, <8>), (<9>, <7>), (<5>, <8>), (<5>, <0>), (<8>, <0>), (<8>, <6>), (<0>, <6>), (<0>, <7>), (<6>, <7>)]","{<1>: [<3>, <2>, <4>, <9>],
<3>: [<1>, <4>, <2>, <5>],
<2>: [<1>, <3>, <6>, <7>],
<4>: [<1>, <3>, <0>, <5>],
<9>: [<1>, <8>, <7>],
<5>: [<3>, <8>, <0>, <4>],
<8>: [<0>, <9>, <6>, <5>],
<0>: [<8>, <6>, <7>, <5>, <4>],
<6>: [<8>, <0>, <2>, <7>],
<7>: [<0>, <2>, <6>, <9>]}","Node <1> is connected to nodes <3>, <2>, <4>, <9>.
Node <3> is connected to nodes <1>, <4>, <2>, <5>.
Node <2> is connected to nodes <1>, <3>, <6>, <7>.
Node <4> is connected to nodes <1>, <3>, <0>, <5>.
Node <9> is connected to nodes <1>, <8>, <7>.
Node <5> is connected to nodes <3>, <8>, <0>, <4>.
Node <8> is connected to nodes <0>, <9>, <6>, <5>.
Node <0> is connected to nodes <8>, <6>, <7>, <5>, <4>.
Node <6> is connected to nodes <8>, <0>, <2>, <7>.
Node <7> is connected to nodes <0>, <2>, <6>, <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,20,False,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <0>, <9>, <6>, <5>, <7>, <4>, <1>, <2>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<0>, <9>, <6>, <5>].
Visit node <0>. Unvisited neighbors of node <0> are [<7>, <4>].
Visit node <9>. Unvisited neighbors of node <9> are [<1>].
Visit node <6>. Unvisited neighbors of node <6> are [<2>].
Visit node <5>. Unvisited neighbors of node <5> are [<3>].
Visit node <7>. 
Visit node <4>. 
Visit node <1>. 
Visit node <2>. 
Visit node <3>. 
So the BFS traversal is ","('[[<8>, <0>, <9>, <6>, <5>, <3>, <7>, <4>, <2>, <1>], [<8>, <3>, <5>, <7>, <9>, <2>, <6>, <4>, <0>, <1>], [<8>, <0>, <9>, <1>, <2>, <3>, <6>, <5>, <7>, <4>], [<8>, <0>, <9>, <6>, <5>, <7>, <4>, <1>, <2>, <3>]]',)",3,248
BFS,"[(<8>, <10>), (<8>, <1>), (<8>, <11>), (<8>, <7>), (<10>, <6>), (<10>, <13>), (<10>, <1>), (<1>, <0>), (<1>, <7>), (<11>, <6>), (<11>, <5>), (<11>, <12>), (<7>, <12>), (<7>, <0>), (<6>, <3>), (<6>, <9>), (<6>, <2>), (<13>, <4>), (<13>, <5>), (<3>, <2>), (<3>, <9>), (<3>, <4>), (<9>, <12>), (<9>, <0>), (<2>, <4>), (<2>, <5>), (<4>, <5>), (<12>, <0>)]","{<8>: [<10>, <1>, <11>, <7>],
<10>: [<8>, <6>, <13>, <1>],
<1>: [<8>, <10>, <0>, <7>],
<11>: [<8>, <6>, <5>, <12>],
<7>: [<8>, <12>, <0>, <1>],
<6>: [<10>, <3>, <9>, <2>, <11>],
<13>: [<10>, <4>, <5>],
<3>: [<6>, <2>, <9>, <4>],
<9>: [<6>, <3>, <12>, <0>],
<2>: [<6>, <3>, <4>, <5>],
<4>: [<13>, <2>, <3>, <5>],
<5>: [<13>, <2>, <4>, <11>],
<12>: [<0>, <9>, <7>, <11>],
<0>: [<12>, <1>, <9>, <7>]}","Node <8> is connected to nodes <10>, <1>, <11>, <7>.
Node <10> is connected to nodes <8>, <6>, <13>, <1>.
Node <1> is connected to nodes <8>, <10>, <0>, <7>.
Node <11> is connected to nodes <8>, <6>, <5>, <12>.
Node <7> is connected to nodes <8>, <12>, <0>, <1>.
Node <6> is connected to nodes <10>, <3>, <9>, <2>, <11>.
Node <13> is connected to nodes <10>, <4>, <5>.
Node <3> is connected to nodes <6>, <2>, <9>, <4>.
Node <9> is connected to nodes <6>, <3>, <12>, <0>.
Node <2> is connected to nodes <6>, <3>, <4>, <5>.
Node <4> is connected to nodes <13>, <2>, <3>, <5>.
Node <5> is connected to nodes <13>, <2>, <4>, <11>.
Node <12> is connected to nodes <0>, <9>, <7>, <11>.
Node <0> is connected to nodes <12>, <1>, <9>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,28,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <13>, <2>, <3>, <5>, <10>, <6>, <9>, <11>, <8>, <1>, <12>, <0>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<13>, <2>, <3>, <5>].
Visit node <13>. Unvisited neighbors of node <13> are [<10>].
Visit node <2>. Unvisited neighbors of node <2> are [<6>].
Visit node <3>. Unvisited neighbors of node <3> are [<9>].
Visit node <5>. Unvisited neighbors of node <5> are [<11>].
Visit node <10>. Unvisited neighbors of node <10> are [<8>, <1>].
Visit node <6>. 
Visit node <9>. Unvisited neighbors of node <9> are [<12>, <0>].
Visit node <11>. 
Visit node <8>. Unvisited neighbors of node <8> are [<7>].
Visit node <1>. 
Visit node <12>. 
Visit node <0>. 
Visit node <7>. 
So the BFS traversal is ","('[[<4>, <13>, <2>, <3>, <5>, <10>, <6>, <9>, <11>, <8>, <1>, <12>, <0>, <7>], [<4>, <13>, <2>, <3>, <5>, <10>, <6>, <7>, <11>, <1>, <12>, <9>, <0>, <8>], [<4>, <13>, <2>, <3>, <1>, <12>, <0>, <7>, <5>, <10>, <6>, <9>, <11>, <8>], [<4>, <8>, <6>, <2>, <0>, <11>, <7>, <12>, <1>, <3>, <10>, <5>, <13>, <9>]]',)",0,249
BFS,"[(<9>, <2>), (<9>, <7>), (<9>, <1>), (<9>, <8>), (<9>, <6>), (<9>, <3>), (<2>, <1>), (<2>, <8>), (<2>, <6>), (<2>, <4>), (<2>, <3>), (<2>, <11>), (<2>, <5>), (<2>, <0>), (<7>, <1>), (<7>, <6>), (<7>, <0>), (<1>, <4>), (<1>, <11>), (<8>, <3>), (<8>, <5>), (<8>, <0>), (<6>, <10>), (<6>, <0>), (<3>, <10>), (<3>, <4>), (<3>, <11>), (<3>, <0>), (<4>, <10>), (<4>, <11>), (<11>, <0>), (<5>, <0>), (<0>, <10>)]","{<9>: [<2>, <7>, <1>, <8>, <6>, <3>],
<2>: [<9>, <1>, <8>, <6>, <4>, <3>, <11>, <5>, <0>],
<7>: [<9>, <1>, <6>, <0>],
<1>: [<9>, <2>, <7>, <4>, <11>],
<8>: [<9>, <2>, <3>, <5>, <0>],
<6>: [<9>, <2>, <7>, <10>, <0>],
<3>: [<9>, <2>, <8>, <10>, <4>, <11>, <0>],
<4>: [<2>, <1>, <10>, <3>, <11>],
<11>: [<2>, <1>, <4>, <3>, <0>],
<5>: [<2>, <8>, <0>],
<0>: [<2>, <7>, <8>, <6>, <10>, <3>, <11>, <5>],
<10>: [<6>, <4>, <3>, <0>]}","Node <9> is connected to nodes <2>, <7>, <1>, <8>, <6>, <3>.
Node <2> is connected to nodes <9>, <1>, <8>, <6>, <4>, <3>, <11>, <5>, <0>.
Node <7> is connected to nodes <9>, <1>, <6>, <0>.
Node <1> is connected to nodes <9>, <2>, <7>, <4>, <11>.
Node <8> is connected to nodes <9>, <2>, <3>, <5>, <0>.
Node <6> is connected to nodes <9>, <2>, <7>, <10>, <0>.
Node <3> is connected to nodes <9>, <2>, <8>, <10>, <4>, <11>, <0>.
Node <4> is connected to nodes <2>, <1>, <10>, <3>, <11>.
Node <11> is connected to nodes <2>, <1>, <4>, <3>, <0>.
Node <5> is connected to nodes <2>, <8>, <0>.
Node <0> is connected to nodes <2>, <7>, <8>, <6>, <10>, <3>, <11>, <5>.
Node <10> is connected to nodes <6>, <4>, <3>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,33,False,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <9>, <2>, <7>, <4>, <11>, <8>, <6>, <3>, <5>, <0>, <10>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<9>, <2>, <7>, <4>, <11>].
Visit node <9>. Unvisited neighbors of node <9> are [<8>, <6>, <3>].
Visit node <2>. Unvisited neighbors of node <2> are [<5>, <0>].
Visit node <7>. 
Visit node <4>. Unvisited neighbors of node <4> are [<10>].
Visit node <11>. 
Visit node <8>. 
Visit node <6>. 
Visit node <3>. 
Visit node <5>. 
Visit node <0>. 
Visit node <10>. 
So the BFS traversal is ","('[[<1>, <9>, <2>, <7>, <4>, <11>, <0>, <3>, <5>, <10>, <8>, <6>], [<1>, <9>, <2>, <7>, <4>, <11>, <8>, <6>, <3>, <5>, <0>, <10>], [<1>, <0>, <11>, <7>, <9>, <2>, <4>, <6>, <10>, <5>, <3>, <8>], [<1>, <9>, <2>, <7>, <3>, <5>, <0>, <10>, <4>, <11>, <8>, <6>]]',)",1,250
BFS,"[(<2>, <5>), (<2>, <0>), (<2>, <6>), (<2>, <1>), (<2>, <3>), (<2>, <4>), (<5>, <3>), (<0>, <3>), (<6>, <1>), (<1>, <3>), (<1>, <7>), (<3>, <4>)]","{<2>: [<5>, <0>, <6>, <1>, <3>, <4>],
<5>: [<2>, <3>],
<0>: [<2>, <3>],
<6>: [<2>, <1>],
<1>: [<2>, <6>, <3>, <7>],
<3>: [<2>, <5>, <0>, <4>, <1>],
<4>: [<2>, <3>],
<7>: [<1>]}","Node <2> is connected to nodes <5>, <0>, <6>, <1>, <3>, <4>.
Node <5> is connected to nodes <2>, <3>.
Node <0> is connected to nodes <2>, <3>.
Node <6> is connected to nodes <2>, <1>.
Node <1> is connected to nodes <2>, <6>, <3>, <7>.
Node <3> is connected to nodes <2>, <5>, <0>, <4>, <1>.
Node <4> is connected to nodes <2>, <3>.
Node <7> is connected to node <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,12,False,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <2>, <6>, <3>, <7>, <5>, <0>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<2>, <6>, <3>, <7>].
Visit node <2>. Unvisited neighbors of node <2> are [<5>, <0>, <4>].
Visit node <6>. 
Visit node <3>. 
Visit node <7>. 
Visit node <5>. 
Visit node <0>. 
Visit node <4>. 
So the BFS traversal is ","('[[<1>, <2>, <0>, <4>, <6>, <3>, <7>, <5>], [<1>, <2>, <6>, <3>, <7>, <5>, <0>, <4>], [<1>, <3>, <6>, <0>, <4>, <5>, <7>, <2>], [<1>, <2>, <6>, <3>, <7>, <0>, <4>, <5>]]',)",1,251
BFS,"[(<2>, <5>), (<2>, <1>), (<2>, <3>), (<2>, <7>), (<2>, <6>), (<2>, <8>), (<1>, <4>), (<7>, <0>)]","{<2>: [<5>, <1>, <3>, <7>, <6>, <8>],
<5>: [<2>],
<1>: [<2>, <4>],
<3>: [<2>],
<7>: [<2>, <0>],
<6>: [<2>],
<8>: [<2>],
<4>: [<1>],
<0>: [<7>]}","Node <2> is connected to nodes <5>, <1>, <3>, <7>, <6>, <8>.
Node <5> is connected to node <2>.
Node <1> is connected to nodes <2>, <4>.
Node <3> is connected to node <2>.
Node <7> is connected to nodes <2>, <0>.
Node <6> is connected to node <2>.
Node <8> is connected to node <2>.
Node <4> is connected to node <1>.
Node <0> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,8,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <2>, <5>, <1>, <7>, <6>, <8>, <4>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<2>].
Visit node <2>. Unvisited neighbors of node <2> are [<5>, <1>, <7>, <6>, <8>].
Visit node <5>. 
Visit node <1>. Unvisited neighbors of node <1> are [<4>].
Visit node <7>. Unvisited neighbors of node <7> are [<0>].
Visit node <6>. 
Visit node <8>. 
Visit node <4>. 
Visit node <0>. 
So the BFS traversal is ","('[[<3>, <2>, <5>, <1>, <6>, <7>, <0>, <8>, <4>], [<3>, <6>, <2>, <7>, <5>, <1>, <8>, <0>, <4>], [<3>, <2>, <5>, <8>, <4>, <0>, <1>, <7>, <6>], [<3>, <2>, <5>, <1>, <7>, <6>, <8>, <4>, <0>]]',)",3,252
BFS,"[(<10>, <9>), (<10>, <1>), (<10>, <12>), (<10>, <8>), (<10>, <2>), (<9>, <0>), (<9>, <12>), (<9>, <3>), (<1>, <6>), (<1>, <0>), (<1>, <11>), (<1>, <4>), (<1>, <5>), (<12>, <7>), (<12>, <6>), (<12>, <13>), (<12>, <4>), (<12>, <8>), (<8>, <7>), (<8>, <6>), (<8>, <11>), (<8>, <13>), (<8>, <5>), (<2>, <6>), (<2>, <0>), (<2>, <3>), (<2>, <13>), (<7>, <11>), (<7>, <13>), (<7>, <4>), (<7>, <5>), (<11>, <6>), (<11>, <3>), (<11>, <5>), (<13>, <0>), (<13>, <3>), (<13>, <4>), (<4>, <6>), (<4>, <0>), (<4>, <5>), (<5>, <6>), (<0>, <6>), (<3>, <6>)]","{<10>: [<9>, <1>, <12>, <8>, <2>],
<9>: [<10>, <0>, <12>, <3>],
<1>: [<10>, <6>, <0>, <11>, <4>, <5>],
<12>: [<10>, <7>, <9>, <6>, <13>, <4>, <8>],
<8>: [<10>, <7>, <6>, <11>, <12>, <13>, <5>],
<2>: [<10>, <6>, <0>, <3>, <13>],
<7>: [<11>, <12>, <13>, <4>, <5>, <8>],
<11>: [<7>, <1>, <6>, <3>, <5>, <8>],
<13>: [<7>, <0>, <12>, <3>, <4>, <8>, <2>],
<4>: [<7>, <1>, <6>, <0>, <12>, <13>, <5>],
<5>: [<7>, <1>, <6>, <11>, <4>, <8>],
<0>: [<9>, <1>, <6>, <13>, <4>, <2>],
<3>: [<9>, <6>, <11>, <13>, <2>],
<6>: [<1>, <0>, <11>, <12>, <3>, <4>, <5>, <8>, <2>]}","Node <10> is connected to nodes <9>, <1>, <12>, <8>, <2>.
Node <9> is connected to nodes <10>, <0>, <12>, <3>.
Node <1> is connected to nodes <10>, <6>, <0>, <11>, <4>, <5>.
Node <12> is connected to nodes <10>, <7>, <9>, <6>, <13>, <4>, <8>.
Node <8> is connected to nodes <10>, <7>, <6>, <11>, <12>, <13>, <5>.
Node <2> is connected to nodes <10>, <6>, <0>, <3>, <13>.
Node <7> is connected to nodes <11>, <12>, <13>, <4>, <5>, <8>.
Node <11> is connected to nodes <7>, <1>, <6>, <3>, <5>, <8>.
Node <13> is connected to nodes <7>, <0>, <12>, <3>, <4>, <8>, <2>.
Node <4> is connected to nodes <7>, <1>, <6>, <0>, <12>, <13>, <5>.
Node <5> is connected to nodes <7>, <1>, <6>, <11>, <4>, <8>.
Node <0> is connected to nodes <9>, <1>, <6>, <13>, <4>, <2>.
Node <3> is connected to nodes <9>, <6>, <11>, <13>, <2>.
Node <6> is connected to nodes <1>, <0>, <11>, <12>, <3>, <4>, <5>, <8>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,43,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <7>, <1>, <6>, <11>, <4>, <8>, <12>, <13>, <10>, <0>, <3>, <2>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<7>, <1>, <6>, <11>, <4>, <8>].
Visit node <7>. Unvisited neighbors of node <7> are [<12>, <13>].
Visit node <1>. Unvisited neighbors of node <1> are [<10>, <0>].
Visit node <6>. Unvisited neighbors of node <6> are [<3>, <2>].
Visit node <11>. 
Visit node <4>. 
Visit node <8>. 
Visit node <12>. Unvisited neighbors of node <12> are [<9>].
Visit node <13>. 
Visit node <10>. 
Visit node <0>. 
Visit node <3>. 
Visit node <2>. 
Visit node <9>. 
So the BFS traversal is ","('[[<5>, <7>, <1>, <6>, <11>, <4>, <8>, <0>, <3>, <2>, <12>, <13>, <9>, <10>], [<5>, <7>, <1>, <6>, <0>, <3>, <2>, <9>, <11>, <4>, <8>, <12>, <13>, <10>], [<5>, <12>, <9>, <2>, <0>, <13>, <7>, <8>, <4>, <1>, <3>, <10>, <11>, <6>], [<5>, <7>, <1>, <6>, <11>, <4>, <8>, <12>, <13>, <10>, <0>, <3>, <2>, <9>]]',)",3,253
BFS,"[(<9>, <12>), (<9>, <6>), (<6>, <1>), (<6>, <10>), (<4>, <13>), (<4>, <3>), (<4>, <0>), (<13>, <8>), (<0>, <2>), (<0>, <11>), (<8>, <10>), (<1>, <5>), (<5>, <7>), (<2>, <11>)]","{<9>: [<12>, <6>],
<12>: [<9>],
<6>: [<9>, <1>, <10>],
<4>: [<13>, <3>, <0>],
<13>: [<4>, <8>],
<3>: [<4>],
<0>: [<4>, <2>, <11>],
<8>: [<13>, <10>],
<1>: [<5>, <6>],
<5>: [<1>, <7>],
<7>: [<5>],
<2>: [<0>, <11>],
<11>: [<0>, <2>],
<10>: [<6>, <8>]}","Node <9> is connected to nodes <12>, <6>.
Node <12> is connected to node <9>.
Node <6> is connected to nodes <9>, <1>, <10>.
Node <4> is connected to nodes <13>, <3>, <0>.
Node <13> is connected to nodes <4>, <8>.
Node <3> is connected to node <4>.
Node <0> is connected to nodes <4>, <2>, <11>.
Node <8> is connected to nodes <13>, <10>.
Node <1> is connected to nodes <5>, <6>.
Node <5> is connected to nodes <1>, <7>.
Node <7> is connected to node <5>.
Node <2> is connected to nodes <0>, <11>.
Node <11> is connected to nodes <0>, <2>.
Node <10> is connected to nodes <6>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,14,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <1>, <7>, <6>, <9>, <10>, <12>, <8>, <13>, <4>, <3>, <0>, <2>, <11>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<1>, <7>].
Visit node <1>. Unvisited neighbors of node <1> are [<6>].
Visit node <7>. 
Visit node <6>. Unvisited neighbors of node <6> are [<9>, <10>].
Visit node <9>. Unvisited neighbors of node <9> are [<12>].
Visit node <10>. Unvisited neighbors of node <10> are [<8>].
Visit node <12>. 
Visit node <8>. Unvisited neighbors of node <8> are [<13>].
Visit node <13>. Unvisited neighbors of node <13> are [<4>].
Visit node <4>. Unvisited neighbors of node <4> are [<3>, <0>].
Visit node <3>. 
Visit node <0>. Unvisited neighbors of node <0> are [<2>, <11>].
Visit node <2>. 
Visit node <11>. 
So the BFS traversal is ","('[[<5>, <1>, <7>, <6>, <9>, <10>, <12>, <8>, <13>, <4>, <3>, <0>, <2>, <11>], [<5>, <1>, <7>, <6>, <3>, <0>, <2>, <11>, <9>, <10>, <12>, <8>, <13>, <4>], [<5>, <13>, <11>, <12>, <9>, <4>, <3>, <2>, <0>, <7>, <6>, <1>, <10>, <8>], [<5>, <1>, <7>, <6>, <9>, <10>, <12>, <13>, <8>, <0>, <11>, <2>, <4>, <3>]]',)",0,254
BFS,"[(<0>, <2>), (<0>, <3>), (<0>, <7>), (<0>, <10>), (<2>, <1>), (<2>, <6>), (<2>, <4>), (<3>, <6>), (<3>, <7>), (<3>, <4>), (<3>, <8>), (<7>, <4>), (<7>, <9>), (<10>, <1>), (<10>, <6>), (<10>, <9>), (<1>, <5>), (<1>, <6>), (<1>, <9>), (<6>, <8>), (<5>, <8>), (<9>, <8>)]","{<0>: [<2>, <3>, <7>, <10>],
<2>: [<0>, <1>, <6>, <4>],
<3>: [<0>, <6>, <7>, <4>, <8>],
<7>: [<0>, <3>, <4>, <9>],
<10>: [<0>, <1>, <6>, <9>],
<1>: [<2>, <5>, <6>, <9>, <10>],
<6>: [<2>, <1>, <3>, <8>, <10>],
<4>: [<2>, <3>, <7>],
<5>: [<1>, <8>],
<9>: [<1>, <7>, <10>, <8>],
<8>: [<5>, <6>, <3>, <9>]}","Node <0> is connected to nodes <2>, <3>, <7>, <10>.
Node <2> is connected to nodes <0>, <1>, <6>, <4>.
Node <3> is connected to nodes <0>, <6>, <7>, <4>, <8>.
Node <7> is connected to nodes <0>, <3>, <4>, <9>.
Node <10> is connected to nodes <0>, <1>, <6>, <9>.
Node <1> is connected to nodes <2>, <5>, <6>, <9>, <10>.
Node <6> is connected to nodes <2>, <1>, <3>, <8>, <10>.
Node <4> is connected to nodes <2>, <3>, <7>.
Node <5> is connected to nodes <1>, <8>.
Node <9> is connected to nodes <1>, <7>, <10>, <8>.
Node <8> is connected to nodes <5>, <6>, <3>, <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,22,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <1>, <7>, <10>, <8>, <2>, <5>, <6>, <0>, <3>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<1>, <7>, <10>, <8>].
Visit node <1>. Unvisited neighbors of node <1> are [<2>, <5>, <6>].
Visit node <7>. Unvisited neighbors of node <7> are [<0>, <3>, <4>].
Visit node <10>. 
Visit node <8>. 
Visit node <2>. 
Visit node <5>. 
Visit node <6>. 
Visit node <0>. 
Visit node <3>. 
Visit node <4>. 
So the BFS traversal is ","('[[<9>, <1>, <7>, <10>, <8>, <2>, <5>, <6>, <0>, <3>, <4>], [<9>, <1>, <7>, <10>, <8>, <6>, <0>, <3>, <5>, <4>, <2>], [<9>, <6>, <8>, <4>, <10>, <7>, <1>, <5>, <2>, <3>, <0>], [<9>, <1>, <7>, <0>, <3>, <4>, <10>, <8>, <2>, <5>, <6>]]',)",0,255
BFS,"[(<0>, <8>), (<0>, <6>), (<0>, <9>), (<0>, <10>), (<0>, <11>), (<0>, <3>), (<8>, <6>), (<8>, <11>), (<8>, <3>), (<6>, <2>), (<6>, <11>), (<6>, <0>), (<6>, <8>), (<9>, <5>), (<9>, <7>), (<9>, <6>), (<9>, <1>), (<10>, <4>), (<10>, <3>), (<10>, <0>), (<10>, <1>), (<10>, <9>), (<11>, <0>), (<11>, <6>), (<3>, <7>), (<3>, <8>), (<3>, <9>), (<3>, <11>), (<3>, <4>), (<7>, <10>), (<7>, <4>), (<4>, <3>), (<4>, <0>), (<4>, <1>), (<4>, <2>), (<4>, <5>), (<2>, <5>), (<2>, <11>), (<2>, <0>), (<1>, <2>), (<1>, <10>), (<1>, <4>), (<1>, <3>), (<5>, <4>), (<5>, <8>), (<5>, <9>)]","{<0>: [<8>, <6>, <9>, <10>, <11>, <3>],
<8>: [<6>, <11>, <3>],
<6>: [<2>, <11>, <0>, <8>],
<9>: [<5>, <7>, <6>, <1>],
<10>: [<4>, <3>, <0>, <1>, <9>],
<11>: [<0>, <6>],
<3>: [<7>, <8>, <9>, <11>, <4>],
<7>: [<10>, <4>],
<4>: [<3>, <0>, <1>, <2>, <5>],
<2>: [<5>, <11>, <0>],
<1>: [<2>, <10>, <4>, <3>],
<5>: [<4>, <8>, <9>]}","Node <0> is connected to nodes <8>, <6>, <9>, <10>, <11>, <3>.
Node <8> is connected to nodes <6>, <11>, <3>.
Node <6> is connected to nodes <2>, <11>, <0>, <8>.
Node <9> is connected to nodes <5>, <7>, <6>, <1>.
Node <10> is connected to nodes <4>, <3>, <0>, <1>, <9>.
Node <11> is connected to nodes <0>, <6>.
Node <3> is connected to nodes <7>, <8>, <9>, <11>, <4>.
Node <7> is connected to nodes <10>, <4>.
Node <4> is connected to nodes <3>, <0>, <1>, <2>, <5>.
Node <2> is connected to nodes <5>, <11>, <0>.
Node <1> is connected to nodes <2>, <10>, <4>, <3>.
Node <5> is connected to nodes <4>, <8>, <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,46,True,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <8>, <6>, <9>, <10>, <11>, <3>, <2>, <5>, <7>, <1>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<8>, <6>, <9>, <10>, <11>, <3>].
Visit node <8>. 
Visit node <6>. Unvisited neighbors of node <6> are [<2>].
Visit node <9>. Unvisited neighbors of node <9> are [<5>, <7>, <1>].
Visit node <10>. Unvisited neighbors of node <10> are [<4>].
Visit node <11>. 
Visit node <3>. 
Visit node <2>. 
Visit node <5>. 
Visit node <7>. 
Visit node <1>. 
Visit node <4>. 
So the BFS traversal is ","('[[<0>, <9>, <1>, <5>, <8>, <4>, <7>, <11>, <10>, <6>, <2>, <3>], [<0>, <8>, <6>, <9>, <5>, <7>, <1>, <4>, <10>, <11>, <3>, <2>], [<0>, <8>, <6>, <9>, <10>, <11>, <3>, <2>, <5>, <7>, <1>, <4>], [<0>, <8>, <6>, <9>, <10>, <11>, <4>, <1>, <2>, <5>, <3>, <7>]]',)",2,256
BFS,"[(<2>, <5>), (<2>, <1>), (<2>, <6>), (<2>, <10>), (<2>, <12>), (<2>, <8>), (<2>, <7>), (<2>, <14>), (<5>, <11>), (<5>, <3>), (<5>, <4>), (<10>, <13>), (<10>, <0>), (<10>, <9>)]","{<2>: [<5>, <1>, <6>, <10>, <12>, <8>, <7>, <14>],
<5>: [<2>, <11>, <3>, <4>],
<1>: [<2>],
<6>: [<2>],
<10>: [<2>, <13>, <0>, <9>],
<12>: [<2>],
<8>: [<2>],
<7>: [<2>],
<14>: [<2>],
<11>: [<5>],
<3>: [<5>],
<4>: [<5>],
<13>: [<10>],
<0>: [<10>],
<9>: [<10>]}","Node <2> is connected to nodes <5>, <1>, <6>, <10>, <12>, <8>, <7>, <14>.
Node <5> is connected to nodes <2>, <11>, <3>, <4>.
Node <1> is connected to node <2>.
Node <6> is connected to node <2>.
Node <10> is connected to nodes <2>, <13>, <0>, <9>.
Node <12> is connected to node <2>.
Node <8> is connected to node <2>.
Node <7> is connected to node <2>.
Node <14> is connected to node <2>.
Node <11> is connected to node <5>.
Node <3> is connected to node <5>.
Node <4> is connected to node <5>.
Node <13> is connected to node <10>.
Node <0> is connected to node <10>.
Node <9> is connected to node <10>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,14,False,"Start from node <11>, output a sequence of traversal in breadth-first search (BFS) order.","[<11>, <5>, <2>, <3>, <4>, <1>, <6>, <10>, <12>, <8>, <7>, <14>, <13>, <0>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <11>. Unvisited neighbors of node <11> are [<5>].
Visit node <5>. Unvisited neighbors of node <5> are [<2>, <3>, <4>].
Visit node <2>. Unvisited neighbors of node <2> are [<1>, <6>, <10>, <12>, <8>, <7>, <14>].
Visit node <3>. 
Visit node <4>. 
Visit node <1>. 
Visit node <6>. 
Visit node <10>. Unvisited neighbors of node <10> are [<13>, <0>, <9>].
Visit node <12>. 
Visit node <8>. 
Visit node <7>. 
Visit node <14>. 
Visit node <13>. 
Visit node <0>. 
Visit node <9>. 
So the BFS traversal is ","('[[<11>, <5>, <2>, <3>, <4>, <1>, <6>, <0>, <8>, <10>, <9>, <12>, <14>, <7>, <13>], [<11>, <5>, <2>, <3>, <4>, <1>, <6>, <10>, <12>, <8>, <7>, <14>, <13>, <0>, <9>], [<11>, <5>, <9>, <8>, <12>, <14>, <13>, <10>, <1>, <4>, <6>, <3>, <7>, <2>, <0>], [<11>, <5>, <2>, <3>, <4>, <7>, <14>, <13>, <0>, <9>, <1>, <6>, <10>, <12>, <8>]]',)",1,257
BFS,"[(<8>, <9>), (<8>, <0>), (<8>, <1>), (<8>, <7>), (<8>, <6>), (<8>, <11>), (<8>, <12>), (<9>, <7>), (<9>, <12>), (<0>, <6>), (<0>, <12>), (<1>, <6>), (<1>, <3>), (<1>, <9>), (<7>, <9>), (<7>, <1>), (<7>, <10>), (<6>, <4>), (<11>, <1>), (<11>, <10>), (<11>, <4>), (<12>, <0>), (<12>, <1>), (<12>, <2>), (<12>, <5>), (<12>, <11>), (<3>, <9>), (<3>, <1>), (<3>, <6>), (<3>, <11>), (<3>, <12>), (<3>, <8>), (<2>, <5>), (<2>, <12>), (<2>, <3>), (<5>, <10>), (<5>, <11>), (<5>, <2>), (<10>, <7>), (<10>, <9>), (<10>, <0>), (<4>, <11>), (<4>, <8>), (<4>, <9>), (<4>, <5>)]","{<8>: [<9>, <0>, <1>, <7>, <6>, <11>, <12>],
<9>: [<7>, <12>],
<0>: [<6>, <12>],
<1>: [<6>, <3>, <9>],
<7>: [<9>, <1>, <10>],
<6>: [<4>],
<11>: [<1>, <10>, <4>],
<12>: [<0>, <1>, <2>, <5>, <11>],
<3>: [<9>, <1>, <6>, <11>, <12>, <8>],
<2>: [<5>, <12>, <3>],
<5>: [<10>, <11>, <2>],
<10>: [<7>, <9>, <0>],
<4>: [<11>, <8>, <9>, <5>]}","Node <8> is connected to nodes <9>, <0>, <1>, <7>, <6>, <11>, <12>.
Node <9> is connected to nodes <7>, <12>.
Node <0> is connected to nodes <6>, <12>.
Node <1> is connected to nodes <6>, <3>, <9>.
Node <7> is connected to nodes <9>, <1>, <10>.
Node <6> is connected to node <4>.
Node <11> is connected to nodes <1>, <10>, <4>.
Node <12> is connected to nodes <0>, <1>, <2>, <5>, <11>.
Node <3> is connected to nodes <9>, <1>, <6>, <11>, <12>, <8>.
Node <2> is connected to nodes <5>, <12>, <3>.
Node <5> is connected to nodes <10>, <11>, <2>.
Node <10> is connected to nodes <7>, <9>, <0>.
Node <4> is connected to nodes <11>, <8>, <9>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,45,True,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <11>, <8>, <9>, <5>, <1>, <10>, <0>, <7>, <6>, <12>, <2>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<11>, <8>, <9>, <5>].
Visit node <11>. Unvisited neighbors of node <11> are [<1>, <10>].
Visit node <8>. Unvisited neighbors of node <8> are [<0>, <7>, <6>, <12>].
Visit node <9>. 
Visit node <5>. Unvisited neighbors of node <5> are [<2>].
Visit node <1>. Unvisited neighbors of node <1> are [<3>].
Visit node <10>. 
Visit node <0>. 
Visit node <7>. 
Visit node <6>. 
Visit node <12>. 
Visit node <2>. 
Visit node <3>. 
So the BFS traversal is ","('[[<4>, <5>, <10>, <8>, <9>, <1>, <0>, <7>, <2>, <12>, <6>, <3>, <11>], [<4>, <11>, <8>, <9>, <5>, <1>, <10>, <0>, <7>, <6>, <12>, <2>, <3>], [<4>, <11>, <8>, <9>, <6>, <12>, <2>, <3>, <5>, <1>, <10>, <0>, <7>], [<4>, <11>, <8>, <9>, <5>, <1>, <0>, <10>, <6>, <12>, <2>, <7>, <3>]]',)",1,258
BFS,"[(<4>, <5>), (<5>, <8>), (<5>, <10>), (<8>, <6>), (<8>, <0>), (<10>, <2>), (<1>, <2>), (<2>, <7>), (<2>, <9>), (<9>, <11>), (<3>, <11>), (<3>, <0>)]","{<4>: [<5>],
<5>: [<4>, <8>, <10>],
<8>: [<5>, <6>, <0>],
<10>: [<5>, <2>],
<1>: [<2>],
<2>: [<1>, <10>, <7>, <9>],
<7>: [<2>],
<9>: [<2>, <11>],
<3>: [<11>, <0>],
<11>: [<3>, <9>],
<0>: [<3>, <8>],
<6>: [<8>]}","Node <4> is connected to node <5>.
Node <5> is connected to nodes <4>, <8>, <10>.
Node <8> is connected to nodes <5>, <6>, <0>.
Node <10> is connected to nodes <5>, <2>.
Node <1> is connected to node <2>.
Node <2> is connected to nodes <1>, <10>, <7>, <9>.
Node <7> is connected to node <2>.
Node <9> is connected to nodes <2>, <11>.
Node <3> is connected to nodes <11>, <0>.
Node <11> is connected to nodes <3>, <9>.
Node <0> is connected to nodes <3>, <8>.
Node <6> is connected to node <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,12,False,"Start from node <11>, output a sequence of traversal in breadth-first search (BFS) order.","[<11>, <3>, <9>, <0>, <2>, <8>, <1>, <10>, <7>, <5>, <6>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <11>. Unvisited neighbors of node <11> are [<3>, <9>].
Visit node <3>. Unvisited neighbors of node <3> are [<0>].
Visit node <9>. Unvisited neighbors of node <9> are [<2>].
Visit node <0>. Unvisited neighbors of node <0> are [<8>].
Visit node <2>. Unvisited neighbors of node <2> are [<1>, <10>, <7>].
Visit node <8>. Unvisited neighbors of node <8> are [<5>, <6>].
Visit node <1>. 
Visit node <10>. 
Visit node <7>. 
Visit node <5>. Unvisited neighbors of node <5> are [<4>].
Visit node <6>. 
Visit node <4>. 
So the BFS traversal is ","('[[<11>, <3>, <9>, <0>, <2>, <8>, <4>, <10>, <6>, <7>, <5>, <1>], [<11>, <3>, <9>, <0>, <2>, <8>, <1>, <10>, <7>, <5>, <6>, <4>], [<11>, <3>, <9>, <0>, <7>, <5>, <6>, <4>, <2>, <8>, <1>, <10>], [<11>, <10>, <5>, <0>, <4>, <3>, <7>, <9>, <1>, <6>, <2>, <8>]]',)",1,259
BFS,"[(<10>, <0>), (<10>, <1>), (<10>, <12>), (<10>, <4>), (<10>, <5>), (<10>, <7>), (<10>, <3>), (<10>, <2>), (<10>, <11>), (<10>, <8>), (<0>, <9>), (<0>, <1>), (<0>, <12>), (<0>, <5>), (<0>, <7>), (<0>, <3>), (<0>, <2>), (<0>, <11>), (<0>, <8>), (<1>, <12>), (<1>, <5>), (<1>, <7>), (<1>, <3>), (<1>, <2>), (<1>, <6>), (<1>, <11>), (<1>, <8>), (<12>, <4>), (<12>, <7>), (<12>, <3>), (<12>, <2>), (<12>, <11>), (<12>, <8>), (<4>, <9>), (<4>, <5>), (<4>, <7>), (<4>, <3>), (<4>, <2>), (<4>, <6>), (<4>, <11>), (<4>, <8>), (<5>, <3>), (<5>, <2>), (<5>, <6>), (<5>, <11>), (<5>, <8>), (<7>, <9>), (<7>, <3>), (<7>, <2>), (<7>, <6>), (<7>, <11>), (<7>, <8>), (<3>, <9>), (<3>, <6>), (<2>, <9>), (<2>, <6>), (<2>, <11>), (<2>, <8>), (<11>, <6>), (<11>, <8>), (<8>, <9>), (<8>, <6>)]","{<10>: [<0>, <1>, <12>, <4>, <5>, <7>, <3>, <2>, <11>, <8>],
<0>: [<10>, <9>, <1>, <12>, <5>, <7>, <3>, <2>, <11>, <8>],
<1>: [<10>, <0>, <12>, <5>, <7>, <3>, <2>, <6>, <11>, <8>],
<12>: [<10>, <0>, <1>, <4>, <7>, <3>, <2>, <11>, <8>],
<4>: [<10>, <9>, <12>, <5>, <7>, <3>, <2>, <6>, <11>, <8>],
<5>: [<10>, <0>, <1>, <4>, <3>, <2>, <6>, <11>, <8>],
<7>: [<10>, <9>, <0>, <1>, <12>, <4>, <3>, <2>, <6>, <11>, <8>],
<3>: [<10>, <9>, <0>, <1>, <12>, <4>, <5>, <7>, <6>],
<2>: [<10>, <9>, <0>, <1>, <12>, <4>, <5>, <7>, <6>, <11>, <8>],
<11>: [<10>, <0>, <1>, <12>, <4>, <5>, <7>, <2>, <6>, <8>],
<8>: [<10>, <9>, <0>, <1>, <12>, <4>, <5>, <7>, <2>, <6>, <11>],
<9>: [<0>, <4>, <7>, <3>, <2>, <8>],
<6>: [<1>, <4>, <5>, <7>, <3>, <2>, <11>, <8>]}","Node <10> is connected to nodes <0>, <1>, <12>, <4>, <5>, <7>, <3>, <2>, <11>, <8>.
Node <0> is connected to nodes <10>, <9>, <1>, <12>, <5>, <7>, <3>, <2>, <11>, <8>.
Node <1> is connected to nodes <10>, <0>, <12>, <5>, <7>, <3>, <2>, <6>, <11>, <8>.
Node <12> is connected to nodes <10>, <0>, <1>, <4>, <7>, <3>, <2>, <11>, <8>.
Node <4> is connected to nodes <10>, <9>, <12>, <5>, <7>, <3>, <2>, <6>, <11>, <8>.
Node <5> is connected to nodes <10>, <0>, <1>, <4>, <3>, <2>, <6>, <11>, <8>.
Node <7> is connected to nodes <10>, <9>, <0>, <1>, <12>, <4>, <3>, <2>, <6>, <11>, <8>.
Node <3> is connected to nodes <10>, <9>, <0>, <1>, <12>, <4>, <5>, <7>, <6>.
Node <2> is connected to nodes <10>, <9>, <0>, <1>, <12>, <4>, <5>, <7>, <6>, <11>, <8>.
Node <11> is connected to nodes <10>, <0>, <1>, <12>, <4>, <5>, <7>, <2>, <6>, <8>.
Node <8> is connected to nodes <10>, <9>, <0>, <1>, <12>, <4>, <5>, <7>, <2>, <6>, <11>.
Node <9> is connected to nodes <0>, <4>, <7>, <3>, <2>, <8>.
Node <6> is connected to nodes <1>, <4>, <5>, <7>, <3>, <2>, <11>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,62,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <10>, <9>, <0>, <1>, <12>, <4>, <5>, <7>, <6>, <2>, <11>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<10>, <9>, <0>, <1>, <12>, <4>, <5>, <7>, <6>].
Visit node <10>. Unvisited neighbors of node <10> are [<2>, <11>, <8>].
Visit node <9>. 
Visit node <0>. 
Visit node <1>. 
Visit node <12>. 
Visit node <4>. 
Visit node <5>. 
Visit node <7>. 
Visit node <6>. 
Visit node <2>. 
Visit node <11>. 
Visit node <8>. 
So the BFS traversal is ","('[[<3>, <2>, <8>, <1>, <11>, <10>, <5>, <6>, <0>, <12>, <4>, <7>, <9>], [<3>, <10>, <9>, <0>, <6>, <2>, <11>, <8>, <1>, <12>, <4>, <5>, <7>], [<3>, <10>, <9>, <0>, <1>, <12>, <4>, <5>, <7>, <6>, <2>, <11>, <8>], [<3>, <10>, <9>, <0>, <1>, <12>, <11>, <8>, <5>, <2>, <6>, <4>, <7>]]',)",2,260
BFS,"[(<12>, <3>), (<12>, <4>), (<12>, <7>), (<12>, <1>), (<12>, <10>), (<12>, <9>), (<12>, <13>), (<12>, <11>), (<12>, <6>), (<3>, <4>), (<3>, <7>), (<3>, <2>), (<3>, <1>), (<3>, <14>), (<3>, <10>), (<3>, <8>), (<3>, <11>), (<3>, <6>), (<4>, <7>), (<4>, <1>), (<4>, <14>), (<4>, <10>), (<4>, <5>), (<4>, <13>), (<4>, <11>), (<4>, <0>), (<7>, <2>), (<7>, <9>), (<7>, <13>), (<7>, <11>), (<7>, <6>), (<7>, <0>), (<1>, <2>), (<1>, <5>), (<1>, <8>), (<1>, <13>), (<1>, <6>), (<1>, <0>), (<10>, <2>), (<10>, <9>), (<10>, <5>), (<10>, <13>), (<10>, <6>), (<10>, <0>), (<9>, <2>), (<9>, <5>), (<9>, <8>), (<9>, <13>), (<9>, <11>), (<9>, <6>), (<9>, <0>), (<13>, <2>), (<13>, <14>), (<13>, <5>), (<13>, <8>), (<13>, <11>), (<13>, <6>), (<11>, <2>), (<11>, <14>), (<11>, <5>), (<11>, <8>), (<11>, <6>), (<11>, <0>), (<6>, <2>), (<6>, <14>), (<6>, <5>), (<6>, <8>), (<6>, <0>), (<2>, <14>), (<2>, <5>), (<2>, <0>), (<14>, <5>), (<14>, <8>), (<8>, <0>), (<5>, <0>)]","{<12>: [<3>, <4>, <7>, <1>, <10>, <9>, <13>, <11>, <6>],
<3>: [<12>, <4>, <7>, <2>, <1>, <14>, <10>, <8>, <11>, <6>],
<4>: [<12>, <3>, <7>, <1>, <14>, <10>, <5>, <13>, <11>, <0>],
<7>: [<12>, <3>, <4>, <2>, <9>, <13>, <11>, <6>, <0>],
<1>: [<12>, <3>, <4>, <2>, <5>, <8>, <13>, <6>, <0>],
<10>: [<12>, <3>, <4>, <2>, <9>, <5>, <13>, <6>, <0>],
<9>: [<12>, <7>, <2>, <10>, <5>, <8>, <13>, <11>, <6>, <0>],
<13>: [<12>, <4>, <7>, <2>, <1>, <14>, <10>, <9>, <5>, <8>, <11>, <6>],
<11>: [<12>, <3>, <4>, <7>, <2>, <14>, <9>, <5>, <8>, <13>, <6>, <0>],
<6>: [<12>, <3>, <7>, <2>, <1>, <14>, <10>, <9>, <5>, <8>, <13>, <11>, <0>],
<2>: [<3>, <7>, <1>, <14>, <10>, <9>, <5>, <13>, <11>, <6>, <0>],
<14>: [<3>, <4>, <2>, <5>, <8>, <13>, <11>, <6>],
<8>: [<3>, <1>, <14>, <9>, <13>, <11>, <6>, <0>],
<5>: [<4>, <2>, <1>, <14>, <10>, <9>, <13>, <11>, <6>, <0>],
<0>: [<4>, <7>, <2>, <1>, <10>, <9>, <5>, <8>, <11>, <6>]}","Node <12> is connected to nodes <3>, <4>, <7>, <1>, <10>, <9>, <13>, <11>, <6>.
Node <3> is connected to nodes <12>, <4>, <7>, <2>, <1>, <14>, <10>, <8>, <11>, <6>.
Node <4> is connected to nodes <12>, <3>, <7>, <1>, <14>, <10>, <5>, <13>, <11>, <0>.
Node <7> is connected to nodes <12>, <3>, <4>, <2>, <9>, <13>, <11>, <6>, <0>.
Node <1> is connected to nodes <12>, <3>, <4>, <2>, <5>, <8>, <13>, <6>, <0>.
Node <10> is connected to nodes <12>, <3>, <4>, <2>, <9>, <5>, <13>, <6>, <0>.
Node <9> is connected to nodes <12>, <7>, <2>, <10>, <5>, <8>, <13>, <11>, <6>, <0>.
Node <13> is connected to nodes <12>, <4>, <7>, <2>, <1>, <14>, <10>, <9>, <5>, <8>, <11>, <6>.
Node <11> is connected to nodes <12>, <3>, <4>, <7>, <2>, <14>, <9>, <5>, <8>, <13>, <6>, <0>.
Node <6> is connected to nodes <12>, <3>, <7>, <2>, <1>, <14>, <10>, <9>, <5>, <8>, <13>, <11>, <0>.
Node <2> is connected to nodes <3>, <7>, <1>, <14>, <10>, <9>, <5>, <13>, <11>, <6>, <0>.
Node <14> is connected to nodes <3>, <4>, <2>, <5>, <8>, <13>, <11>, <6>.
Node <8> is connected to nodes <3>, <1>, <14>, <9>, <13>, <11>, <6>, <0>.
Node <5> is connected to nodes <4>, <2>, <1>, <14>, <10>, <9>, <13>, <11>, <6>, <0>.
Node <0> is connected to nodes <4>, <7>, <2>, <1>, <10>, <9>, <5>, <8>, <11>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,75,False,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <3>, <1>, <14>, <9>, <13>, <11>, <6>, <0>, <12>, <4>, <7>, <2>, <10>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<3>, <1>, <14>, <9>, <13>, <11>, <6>, <0>].
Visit node <3>. Unvisited neighbors of node <3> are [<12>, <4>, <7>, <2>, <10>].
Visit node <1>. Unvisited neighbors of node <1> are [<5>].
Visit node <14>. 
Visit node <9>. 
Visit node <13>. 
Visit node <11>. 
Visit node <6>. 
Visit node <0>. 
Visit node <12>. 
Visit node <4>. 
Visit node <7>. 
Visit node <2>. 
Visit node <10>. 
Visit node <5>. 
So the BFS traversal is ","('[[<8>, <3>, <1>, <14>, <9>, <4>, <7>, <2>, <10>, <5>, <13>, <11>, <6>, <0>, <12>], [<8>, <3>, <1>, <14>, <9>, <13>, <11>, <6>, <0>, <12>, <4>, <7>, <2>, <10>, <5>], [<8>, <3>, <1>, <14>, <9>, <13>, <11>, <7>, <0>, <2>, <4>, <5>, <10>, <6>, <12>], [<8>, <2>, <13>, <4>, <14>, <9>, <12>, <10>, <11>, <6>, <1>, <0>, <3>, <5>, <7>]]',)",1,261
BFS,"[(<7>, <8>), (<7>, <5>), (<7>, <6>), (<7>, <4>), (<8>, <0>), (<8>, <2>), (<8>, <3>), (<4>, <9>), (<0>, <1>)]","{<7>: [<8>, <5>, <6>, <4>],
<8>: [<7>, <0>, <2>, <3>],
<5>: [<7>],
<6>: [<7>],
<4>: [<7>, <9>],
<0>: [<8>, <1>],
<2>: [<8>],
<3>: [<8>],
<9>: [<4>],
<1>: [<0>]}","Node <7> is connected to nodes <8>, <5>, <6>, <4>.
Node <8> is connected to nodes <7>, <0>, <2>, <3>.
Node <5> is connected to node <7>.
Node <6> is connected to node <7>.
Node <4> is connected to nodes <7>, <9>.
Node <0> is connected to nodes <8>, <1>.
Node <2> is connected to node <8>.
Node <3> is connected to node <8>.
Node <9> is connected to node <4>.
Node <1> is connected to node <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]",10,9,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <7>, <8>, <6>, <4>, <0>, <2>, <3>, <9>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<7>].
Visit node <7>. Unvisited neighbors of node <7> are [<8>, <6>, <4>].
Visit node <8>. Unvisited neighbors of node <8> are [<0>, <2>, <3>].
Visit node <6>. 
Visit node <4>. Unvisited neighbors of node <4> are [<9>].
Visit node <0>. Unvisited neighbors of node <0> are [<1>].
Visit node <2>. 
Visit node <3>. 
Visit node <9>. 
Visit node <1>. 
So the BFS traversal is ","('[[<5>, <0>, <4>, <9>, <2>, <3>, <6>, <1>, <8>, <7>], [<5>, <7>, <8>, <3>, <9>, <1>, <6>, <4>, <0>, <2>], [<5>, <7>, <8>, <6>, <4>, <2>, <9>, <0>, <3>, <1>], [<5>, <7>, <8>, <6>, <4>, <0>, <2>, <3>, <9>, <1>]]',)",3,262
BFS,"[(<6>, <1>), (<1>, <5>), (<5>, <2>), (<3>, <7>), (<3>, <11>), (<3>, <4>), (<3>, <8>), (<7>, <10>), (<8>, <0>), (<10>, <2>), (<10>, <9>), (<10>, <0>)]","{<6>: [<1>],
<1>: [<6>, <5>],
<5>: [<1>, <2>],
<3>: [<7>, <11>, <4>, <8>],
<7>: [<3>, <10>],
<11>: [<3>],
<4>: [<3>],
<8>: [<3>, <0>],
<10>: [<7>, <2>, <9>, <0>],
<2>: [<10>, <5>],
<9>: [<10>],
<0>: [<10>, <8>]}","Node <6> is connected to node <1>.
Node <1> is connected to nodes <6>, <5>.
Node <5> is connected to nodes <1>, <2>.
Node <3> is connected to nodes <7>, <11>, <4>, <8>.
Node <7> is connected to nodes <3>, <10>.
Node <11> is connected to node <3>.
Node <4> is connected to node <3>.
Node <8> is connected to nodes <3>, <0>.
Node <10> is connected to nodes <7>, <2>, <9>, <0>.
Node <2> is connected to nodes <10>, <5>.
Node <9> is connected to node <10>.
Node <0> is connected to nodes <10>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,12,False,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <3>, <0>, <7>, <11>, <4>, <10>, <2>, <9>, <5>, <1>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<3>, <0>].
Visit node <3>. Unvisited neighbors of node <3> are [<7>, <11>, <4>].
Visit node <0>. Unvisited neighbors of node <0> are [<10>].
Visit node <7>. 
Visit node <11>. 
Visit node <4>. 
Visit node <10>. Unvisited neighbors of node <10> are [<2>, <9>].
Visit node <2>. Unvisited neighbors of node <2> are [<5>].
Visit node <9>. 
Visit node <5>. Unvisited neighbors of node <5> are [<1>].
Visit node <1>. Unvisited neighbors of node <1> are [<6>].
Visit node <6>. 
So the BFS traversal is ","('[[<8>, <3>, <0>, <7>, <11>, <4>, <10>, <2>, <9>, <5>, <1>, <6>], [<8>, <3>, <0>, <7>, <11>, <4>, <9>, <2>, <5>, <6>, <1>, <10>], [<8>, <3>, <0>, <7>, <9>, <5>, <1>, <6>, <11>, <4>, <10>, <2>], [<8>, <0>, <11>, <9>, <3>, <6>, <10>, <5>, <1>, <4>, <2>, <7>]]',)",0,263
BFS,"[(<7>, <9>), (<7>, <6>), (<7>, <0>), (<7>, <5>), (<7>, <3>), (<9>, <5>), (<9>, <2>), (<9>, <6>), (<9>, <8>), (<6>, <1>), (<6>, <5>), (<6>, <4>), (<6>, <2>), (<6>, <10>), (<6>, <0>), (<0>, <2>), (<5>, <8>), (<5>, <3>), (<5>, <4>), (<3>, <8>), (<3>, <1>), (<3>, <2>), (<8>, <1>), (<8>, <4>)]","{<7>: [<9>, <6>, <0>, <5>, <3>],
<9>: [<7>, <5>, <2>, <6>, <8>],
<6>: [<7>, <9>, <1>, <5>, <4>, <2>, <10>, <0>],
<0>: [<7>, <6>, <2>],
<5>: [<7>, <9>, <8>, <3>, <4>, <6>],
<3>: [<7>, <8>, <1>, <5>, <2>],
<2>: [<9>, <3>, <6>, <0>],
<8>: [<9>, <1>, <4>, <3>, <5>],
<1>: [<8>, <6>, <3>],
<4>: [<8>, <5>, <6>],
<10>: [<6>]}","Node <7> is connected to nodes <9>, <6>, <0>, <5>, <3>.
Node <9> is connected to nodes <7>, <5>, <2>, <6>, <8>.
Node <6> is connected to nodes <7>, <9>, <1>, <5>, <4>, <2>, <10>, <0>.
Node <0> is connected to nodes <7>, <6>, <2>.
Node <5> is connected to nodes <7>, <9>, <8>, <3>, <4>, <6>.
Node <3> is connected to nodes <7>, <8>, <1>, <5>, <2>.
Node <2> is connected to nodes <9>, <3>, <6>, <0>.
Node <8> is connected to nodes <9>, <1>, <4>, <3>, <5>.
Node <1> is connected to nodes <8>, <6>, <3>.
Node <4> is connected to nodes <8>, <5>, <6>.
Node <10> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,24,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <7>, <5>, <2>, <6>, <8>, <0>, <3>, <4>, <1>, <10>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<7>, <5>, <2>, <6>, <8>].
Visit node <7>. Unvisited neighbors of node <7> are [<0>, <3>].
Visit node <5>. Unvisited neighbors of node <5> are [<4>].
Visit node <2>. 
Visit node <6>. Unvisited neighbors of node <6> are [<1>, <10>].
Visit node <8>. 
Visit node <0>. 
Visit node <3>. 
Visit node <4>. 
Visit node <1>. 
Visit node <10>. 
So the BFS traversal is ","('[[<9>, <8>, <5>, <4>, <1>, <10>, <3>, <6>, <0>, <2>, <7>], [<9>, <7>, <5>, <2>, <6>, <0>, <3>, <8>, <10>, <1>, <4>], [<9>, <7>, <5>, <2>, <6>, <8>, <0>, <3>, <4>, <1>, <10>], [<9>, <7>, <5>, <4>, <1>, <10>, <2>, <6>, <8>, <0>, <3>]]',)",2,264
BFS,"[(<6>, <8>), (<6>, <3>), (<6>, <5>), (<6>, <12>), (<6>, <9>), (<6>, <0>), (<6>, <4>), (<8>, <5>), (<8>, <10>), (<3>, <5>), (<5>, <11>), (<5>, <2>), (<5>, <7>), (<5>, <4>), (<5>, <1>), (<5>, <0>), (<12>, <0>), (<9>, <7>), (<9>, <10>), (<4>, <11>), (<4>, <2>), (<4>, <1>)]","{<6>: [<8>, <3>, <5>, <12>, <9>, <0>, <4>],
<8>: [<6>, <5>, <10>],
<3>: [<6>, <5>],
<5>: [<6>, <8>, <11>, <2>, <7>, <4>, <1>, <3>, <0>],
<12>: [<6>, <0>],
<9>: [<6>, <7>, <10>],
<0>: [<6>, <5>, <12>],
<4>: [<6>, <5>, <11>, <2>, <1>],
<10>: [<8>, <9>],
<11>: [<5>, <4>],
<2>: [<5>, <4>],
<7>: [<5>, <9>],
<1>: [<5>, <4>]}","Node <6> is connected to nodes <8>, <3>, <5>, <12>, <9>, <0>, <4>.
Node <8> is connected to nodes <6>, <5>, <10>.
Node <3> is connected to nodes <6>, <5>.
Node <5> is connected to nodes <6>, <8>, <11>, <2>, <7>, <4>, <1>, <3>, <0>.
Node <12> is connected to nodes <6>, <0>.
Node <9> is connected to nodes <6>, <7>, <10>.
Node <0> is connected to nodes <6>, <5>, <12>.
Node <4> is connected to nodes <6>, <5>, <11>, <2>, <1>.
Node <10> is connected to nodes <8>, <9>.
Node <11> is connected to nodes <5>, <4>.
Node <2> is connected to nodes <5>, <4>.
Node <7> is connected to nodes <5>, <9>.
Node <1> is connected to nodes <5>, <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,22,False,"Start from node <12>, output a sequence of traversal in breadth-first search (BFS) order.","[<12>, <6>, <0>, <8>, <3>, <5>, <9>, <4>, <10>, <11>, <2>, <7>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <12>. Unvisited neighbors of node <12> are [<6>, <0>].
Visit node <6>. Unvisited neighbors of node <6> are [<8>, <3>, <5>, <9>, <4>].
Visit node <0>. 
Visit node <8>. Unvisited neighbors of node <8> are [<10>].
Visit node <3>. 
Visit node <5>. Unvisited neighbors of node <5> are [<11>, <2>, <7>, <1>].
Visit node <9>. 
Visit node <4>. 
Visit node <10>. 
Visit node <11>. 
Visit node <2>. 
Visit node <7>. 
Visit node <1>. 
So the BFS traversal is ","('[[<12>, <6>, <0>, <8>, <3>, <5>, <9>, <4>, <10>, <11>, <2>, <7>, <1>], [<12>, <6>, <0>, <8>, <11>, <2>, <7>, <1>, <3>, <5>, <9>, <4>, <10>], [<12>, <6>, <0>, <8>, <3>, <5>, <9>, <4>, <7>, <11>, <10>, <1>, <2>], [<12>, <9>, <3>, <11>, <8>, <2>, <5>, <0>, <6>, <10>, <1>, <7>, <4>]]',)",0,265
BFS,"[(<6>, <1>), (<6>, <7>), (<6>, <4>), (<6>, <2>), (<6>, <0>), (<1>, <2>), (<1>, <0>), (<1>, <3>), (<1>, <5>), (<7>, <3>), (<7>, <5>), (<4>, <2>), (<4>, <3>), (<2>, <0>), (<2>, <3>), (<2>, <5>), (<0>, <3>), (<3>, <5>)]","{<6>: [<1>, <7>, <4>, <2>, <0>],
<1>: [<6>, <2>, <0>, <3>, <5>],
<7>: [<6>, <3>, <5>],
<4>: [<6>, <2>, <3>],
<2>: [<6>, <1>, <4>, <0>, <3>, <5>],
<0>: [<6>, <1>, <2>, <3>],
<3>: [<1>, <7>, <4>, <2>, <0>, <5>],
<5>: [<1>, <7>, <2>, <3>]}","Node <6> is connected to nodes <1>, <7>, <4>, <2>, <0>.
Node <1> is connected to nodes <6>, <2>, <0>, <3>, <5>.
Node <7> is connected to nodes <6>, <3>, <5>.
Node <4> is connected to nodes <6>, <2>, <3>.
Node <2> is connected to nodes <6>, <1>, <4>, <0>, <3>, <5>.
Node <0> is connected to nodes <6>, <1>, <2>, <3>.
Node <3> is connected to nodes <1>, <7>, <4>, <2>, <0>, <5>.
Node <5> is connected to nodes <1>, <7>, <2>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,18,False,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <6>, <2>, <0>, <3>, <5>, <7>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<6>, <2>, <0>, <3>, <5>].
Visit node <6>. Unvisited neighbors of node <6> are [<7>, <4>].
Visit node <2>. 
Visit node <0>. 
Visit node <3>. 
Visit node <5>. 
Visit node <7>. 
Visit node <4>. 
So the BFS traversal is ","('[[<1>, <6>, <2>, <0>, <3>, <5>, <7>, <4>], [<1>, <6>, <2>, <0>, <4>, <5>, <7>, <3>], [<1>, <6>, <7>, <4>, <2>, <0>, <3>, <5>], [<1>, <3>, <5>, <7>, <2>, <6>, <4>, <0>]]',)",0,266
BFS,"[(<0>, <12>), (<0>, <4>), (<0>, <6>), (<0>, <9>), (<0>, <7>), (<12>, <13>), (<12>, <11>), (<12>, <4>), (<4>, <10>), (<4>, <13>), (<4>, <2>), (<6>, <1>), (<6>, <7>), (<6>, <5>), (<9>, <3>), (<9>, <5>), (<7>, <5>), (<7>, <13>), (<7>, <8>), (<13>, <1>), (<13>, <10>), (<11>, <5>), (<11>, <8>), (<11>, <2>), (<1>, <10>), (<1>, <3>), (<10>, <3>), (<8>, <2>)]","{<0>: [<12>, <4>, <6>, <9>, <7>],
<12>: [<0>, <13>, <11>, <4>],
<4>: [<0>, <12>, <10>, <13>, <2>],
<6>: [<0>, <1>, <7>, <5>],
<9>: [<0>, <3>, <5>],
<7>: [<0>, <6>, <5>, <13>, <8>],
<13>: [<12>, <1>, <10>, <4>, <7>],
<11>: [<12>, <5>, <8>, <2>],
<1>: [<10>, <6>, <3>, <13>],
<10>: [<1>, <3>, <13>, <4>],
<3>: [<1>, <10>, <9>],
<5>: [<6>, <11>, <7>, <9>],
<8>: [<11>, <7>, <2>],
<2>: [<11>, <4>, <8>]}","Node <0> is connected to nodes <12>, <4>, <6>, <9>, <7>.
Node <12> is connected to nodes <0>, <13>, <11>, <4>.
Node <4> is connected to nodes <0>, <12>, <10>, <13>, <2>.
Node <6> is connected to nodes <0>, <1>, <7>, <5>.
Node <9> is connected to nodes <0>, <3>, <5>.
Node <7> is connected to nodes <0>, <6>, <5>, <13>, <8>.
Node <13> is connected to nodes <12>, <1>, <10>, <4>, <7>.
Node <11> is connected to nodes <12>, <5>, <8>, <2>.
Node <1> is connected to nodes <10>, <6>, <3>, <13>.
Node <10> is connected to nodes <1>, <3>, <13>, <4>.
Node <3> is connected to nodes <1>, <10>, <9>.
Node <5> is connected to nodes <6>, <11>, <7>, <9>.
Node <8> is connected to nodes <11>, <7>, <2>.
Node <2> is connected to nodes <11>, <4>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,28,False,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <11>, <7>, <2>, <12>, <5>, <0>, <6>, <13>, <4>, <9>, <1>, <10>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<11>, <7>, <2>].
Visit node <11>. Unvisited neighbors of node <11> are [<12>, <5>].
Visit node <7>. Unvisited neighbors of node <7> are [<0>, <6>, <13>].
Visit node <2>. Unvisited neighbors of node <2> are [<4>].
Visit node <12>. 
Visit node <5>. Unvisited neighbors of node <5> are [<9>].
Visit node <0>. 
Visit node <6>. Unvisited neighbors of node <6> are [<1>].
Visit node <13>. Unvisited neighbors of node <13> are [<10>].
Visit node <4>. 
Visit node <9>. Unvisited neighbors of node <9> are [<3>].
Visit node <1>. 
Visit node <10>. 
Visit node <3>. 
So the BFS traversal is ","('[[<8>, <4>, <6>, <1>, <11>, <5>, <10>, <12>, <0>, <2>, <9>, <3>, <13>, <7>], [<8>, <11>, <7>, <2>, <12>, <5>, <0>, <3>, <13>, <4>, <6>, <9>, <10>, <1>], [<8>, <11>, <7>, <2>, <9>, <1>, <10>, <3>, <12>, <5>, <0>, <6>, <13>, <4>], [<8>, <11>, <7>, <2>, <12>, <5>, <0>, <6>, <13>, <4>, <9>, <1>, <10>, <3>]]',)",3,267
BFS,"[(<2>, <6>), (<2>, <7>), (<6>, <3>), (<6>, <1>), (<7>, <10>), (<5>, <9>), (<9>, <1>), (<9>, <7>), (<9>, <2>), (<9>, <0>), (<10>, <11>), (<10>, <4>), (<11>, <8>), (<4>, <2>), (<4>, <10>), (<4>, <6>), (<4>, <0>), (<4>, <8>), (<8>, <4>), (<8>, <3>), (<8>, <1>), (<3>, <10>), (<1>, <6>)]","{<2>: [<6>, <7>],
<6>: [<3>, <1>],
<7>: [<10>],
<5>: [<9>],
<9>: [<1>, <7>, <2>, <0>],
<10>: [<11>, <4>],
<11>: [<8>],
<4>: [<2>, <10>, <6>, <0>, <8>],
<8>: [<4>, <3>, <1>],
<3>: [<10>],
<1>: [<6>],
<0>: []}","Node <2> is connected to nodes <6>, <7>.
Node <6> is connected to nodes <3>, <1>.
Node <7> is connected to node <10>.
Node <5> is connected to node <9>.
Node <9> is connected to nodes <1>, <7>, <2>, <0>.
Node <10> is connected to nodes <11>, <4>.
Node <11> is connected to node <8>.
Node <4> is connected to nodes <2>, <10>, <6>, <0>, <8>.
Node <8> is connected to nodes <4>, <3>, <1>.
Node <3> is connected to node <10>.
Node <1> is connected to node <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,23,True,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <2>, <10>, <6>, <0>, <8>, <7>, <11>, <3>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<2>, <10>, <6>, <0>, <8>].
Visit node <2>. Unvisited neighbors of node <2> are [<7>].
Visit node <10>. Unvisited neighbors of node <10> are [<11>].
Visit node <6>. Unvisited neighbors of node <6> are [<3>, <1>].
Visit node <0>. 
Visit node <8>. 
Visit node <7>. 
Visit node <11>. 
Visit node <3>. 
Visit node <1>. 
So the BFS traversal is ","('[[<4>, <2>, <10>, <6>, <0>, <11>, <3>, <7>, <8>, <1>], [<4>, <2>, <10>, <6>, <0>, <8>, <7>, <11>, <3>, <1>], [<4>, <7>, <3>, <0>, <11>, <2>, <10>, <6>, <8>, <1>], [<4>, <2>, <10>, <11>, <3>, <1>, <6>, <0>, <8>, <7>]]',)",1,268
BFS,"[(<2>, <8>), (<2>, <10>), (<8>, <4>), (<8>, <5>), (<8>, <1>), (<8>, <3>), (<8>, <9>), (<10>, <0>), (<10>, <7>), (<3>, <6>)]","{<2>: [<8>, <10>],
<8>: [<2>, <4>, <5>, <1>, <3>, <9>],
<10>: [<2>, <0>, <7>],
<4>: [<8>],
<5>: [<8>],
<1>: [<8>],
<3>: [<8>, <6>],
<9>: [<8>],
<0>: [<10>],
<7>: [<10>],
<6>: [<3>]}","Node <2> is connected to nodes <8>, <10>.
Node <8> is connected to nodes <2>, <4>, <5>, <1>, <3>, <9>.
Node <10> is connected to nodes <2>, <0>, <7>.
Node <4> is connected to node <8>.
Node <5> is connected to node <8>.
Node <1> is connected to node <8>.
Node <3> is connected to nodes <8>, <6>.
Node <9> is connected to node <8>.
Node <0> is connected to node <10>.
Node <7> is connected to node <10>.
Node <6> is connected to node <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,10,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <10>, <2>, <0>, <8>, <4>, <5>, <1>, <3>, <9>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<10>].
Visit node <10>. Unvisited neighbors of node <10> are [<2>, <0>].
Visit node <2>. Unvisited neighbors of node <2> are [<8>].
Visit node <0>. 
Visit node <8>. Unvisited neighbors of node <8> are [<4>, <5>, <1>, <3>, <9>].
Visit node <4>. 
Visit node <5>. 
Visit node <1>. 
Visit node <3>. Unvisited neighbors of node <3> are [<6>].
Visit node <9>. 
Visit node <6>. 
So the BFS traversal is ","('[[<7>, <0>, <9>, <2>, <8>, <5>, <4>, <3>, <10>, <1>, <6>], [<7>, <10>, <2>, <0>, <8>, <5>, <4>, <1>, <6>, <3>, <9>], [<7>, <10>, <2>, <3>, <9>, <6>, <0>, <8>, <4>, <5>, <1>], [<7>, <10>, <2>, <0>, <8>, <4>, <5>, <1>, <3>, <9>, <6>]]',)",3,269
BFS,"[(<13>, <11>), (<13>, <0>), (<13>, <7>), (<11>, <6>), (<11>, <8>), (<11>, <4>), (<11>, <12>), (<11>, <3>), (<0>, <10>), (<0>, <5>), (<0>, <4>), (<7>, <10>), (<7>, <1>), (<7>, <5>), (<7>, <14>), (<7>, <2>), (<6>, <9>), (<9>, <4>), (<9>, <12>), (<9>, <2>), (<9>, <3>), (<10>, <4>), (<10>, <12>), (<4>, <12>), (<4>, <3>), (<12>, <1>), (<12>, <5>), (<8>, <14>), (<8>, <2>), (<3>, <1>), (<3>, <14>), (<1>, <5>)]","{<13>: [<11>, <0>, <7>],
<11>: [<13>, <6>, <8>, <4>, <12>, <3>],
<0>: [<13>, <10>, <5>, <4>],
<7>: [<13>, <10>, <1>, <5>, <14>, <2>],
<6>: [<11>, <9>],
<9>: [<6>, <4>, <12>, <2>, <3>],
<10>: [<0>, <4>, <7>, <12>],
<4>: [<10>, <11>, <0>, <12>, <9>, <3>],
<12>: [<10>, <11>, <1>, <5>, <4>, <9>],
<8>: [<11>, <14>, <2>],
<3>: [<11>, <1>, <4>, <14>, <9>],
<14>: [<8>, <7>, <3>],
<2>: [<8>, <7>, <9>],
<1>: [<5>, <7>, <12>, <3>],
<5>: [<1>, <0>, <7>, <12>]}","Node <13> is connected to nodes <11>, <0>, <7>.
Node <11> is connected to nodes <13>, <6>, <8>, <4>, <12>, <3>.
Node <0> is connected to nodes <13>, <10>, <5>, <4>.
Node <7> is connected to nodes <13>, <10>, <1>, <5>, <14>, <2>.
Node <6> is connected to nodes <11>, <9>.
Node <9> is connected to nodes <6>, <4>, <12>, <2>, <3>.
Node <10> is connected to nodes <0>, <4>, <7>, <12>.
Node <4> is connected to nodes <10>, <11>, <0>, <12>, <9>, <3>.
Node <12> is connected to nodes <10>, <11>, <1>, <5>, <4>, <9>.
Node <8> is connected to nodes <11>, <14>, <2>.
Node <3> is connected to nodes <11>, <1>, <4>, <14>, <9>.
Node <14> is connected to nodes <8>, <7>, <3>.
Node <2> is connected to nodes <8>, <7>, <9>.
Node <1> is connected to nodes <5>, <7>, <12>, <3>.
Node <5> is connected to nodes <1>, <0>, <7>, <12>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,32,False,"Start from node <14>, output a sequence of traversal in breadth-first search (BFS) order.","[<14>, <8>, <7>, <3>, <11>, <2>, <13>, <10>, <1>, <5>, <4>, <9>, <6>, <12>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <14>. Unvisited neighbors of node <14> are [<8>, <7>, <3>].
Visit node <8>. Unvisited neighbors of node <8> are [<11>, <2>].
Visit node <7>. Unvisited neighbors of node <7> are [<13>, <10>, <1>, <5>].
Visit node <3>. Unvisited neighbors of node <3> are [<4>, <9>].
Visit node <11>. Unvisited neighbors of node <11> are [<6>, <12>].
Visit node <2>. 
Visit node <13>. Unvisited neighbors of node <13> are [<0>].
Visit node <10>. 
Visit node <1>. 
Visit node <5>. 
Visit node <4>. 
Visit node <9>. 
Visit node <6>. 
Visit node <12>. 
Visit node <0>. 
So the BFS traversal is ","('[[<14>, <1>, <13>, <12>, <3>, <10>, <4>, <11>, <2>, <8>, <9>, <7>, <0>, <5>, <6>], [<14>, <8>, <7>, <3>, <11>, <2>, <13>, <9>, <10>, <5>, <12>, <1>, <4>, <0>, <6>], [<14>, <8>, <7>, <3>, <11>, <2>, <13>, <10>, <1>, <5>, <4>, <9>, <6>, <12>, <0>], [<14>, <8>, <7>, <3>, <11>, <4>, <9>, <6>, <12>, <0>, <2>, <13>, <10>, <1>, <5>]]',)",2,270
BFS,"[(<11>, <9>), (<11>, <7>), (<7>, <10>), (<7>, <11>), (<7>, <2>), (<7>, <3>), (<2>, <8>), (<2>, <0>), (<2>, <1>), (<0>, <7>), (<1>, <7>), (<1>, <9>), (<6>, <9>), (<6>, <0>), (<6>, <1>), (<5>, <8>), (<3>, <7>), (<3>, <5>), (<10>, <9>), (<10>, <5>), (<4>, <7>)]","{<11>: [<9>, <7>],
<9>: [],
<7>: [<10>, <11>, <2>, <3>],
<2>: [<8>, <0>, <1>],
<8>: [],
<0>: [<7>],
<1>: [<7>, <9>],
<6>: [<9>, <0>, <1>],
<5>: [<8>],
<3>: [<7>, <5>],
<10>: [<9>, <5>],
<4>: [<7>]}","Node <11> is connected to nodes <9>, <7>.
Node <7> is connected to nodes <10>, <11>, <2>, <3>.
Node <2> is connected to nodes <8>, <0>, <1>.
Node <0> is connected to node <7>.
Node <1> is connected to nodes <7>, <9>.
Node <6> is connected to nodes <9>, <0>, <1>.
Node <5> is connected to node <8>.
Node <3> is connected to nodes <7>, <5>.
Node <10> is connected to nodes <9>, <5>.
Node <4> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,21,True,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <8>, <0>, <1>, <7>, <9>, <10>, <11>, <3>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<8>, <0>, <1>].
Visit node <8>. 
Visit node <0>. Unvisited neighbors of node <0> are [<7>].
Visit node <1>. Unvisited neighbors of node <1> are [<9>].
Visit node <7>. Unvisited neighbors of node <7> are [<10>, <11>, <3>].
Visit node <9>. 
Visit node <10>. Unvisited neighbors of node <10> are [<5>].
Visit node <11>. 
Visit node <3>. 
Visit node <5>. 
So the BFS traversal is ","('[[<2>, <8>, <0>, <11>, <3>, <5>, <1>, <7>, <9>, <10>], [<2>, <8>, <0>, <1>, <7>, <3>, <5>, <9>, <11>, <10>], [<2>, <10>, <9>, <11>, <5>, <0>, <3>, <1>, <7>, <8>], [<2>, <8>, <0>, <1>, <7>, <9>, <10>, <11>, <3>, <5>]]',)",3,271
BFS,"[(<6>, <0>), (<6>, <7>), (<6>, <5>), (<6>, <3>), (<0>, <2>), (<0>, <8>), (<0>, <7>), (<0>, <4>), (<0>, <5>), (<7>, <2>), (<7>, <8>), (<5>, <1>), (<5>, <2>), (<5>, <4>), (<5>, <3>), (<3>, <2>), (<3>, <8>), (<3>, <4>), (<2>, <1>), (<2>, <8>), (<2>, <4>), (<8>, <4>), (<4>, <1>)]","{<6>: [<0>, <7>, <5>, <3>],
<0>: [<6>, <2>, <8>, <7>, <4>, <5>],
<7>: [<6>, <0>, <2>, <8>],
<5>: [<6>, <0>, <1>, <2>, <4>, <3>],
<3>: [<6>, <2>, <8>, <4>, <5>],
<2>: [<0>, <1>, <8>, <7>, <4>, <5>, <3>],
<8>: [<0>, <2>, <7>, <4>, <3>],
<4>: [<0>, <1>, <2>, <8>, <5>, <3>],
<1>: [<2>, <4>, <5>]}","Node <6> is connected to nodes <0>, <7>, <5>, <3>.
Node <0> is connected to nodes <6>, <2>, <8>, <7>, <4>, <5>.
Node <7> is connected to nodes <6>, <0>, <2>, <8>.
Node <5> is connected to nodes <6>, <0>, <1>, <2>, <4>, <3>.
Node <3> is connected to nodes <6>, <2>, <8>, <4>, <5>.
Node <2> is connected to nodes <0>, <1>, <8>, <7>, <4>, <5>, <3>.
Node <8> is connected to nodes <0>, <2>, <7>, <4>, <3>.
Node <4> is connected to nodes <0>, <1>, <2>, <8>, <5>, <3>.
Node <1> is connected to nodes <2>, <4>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,23,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <0>, <1>, <2>, <8>, <5>, <3>, <6>, <7>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<0>, <1>, <2>, <8>, <5>, <3>].
Visit node <0>. Unvisited neighbors of node <0> are [<6>, <7>].
Visit node <1>. 
Visit node <2>. 
Visit node <8>. 
Visit node <5>. 
Visit node <3>. 
Visit node <6>. 
Visit node <7>. 
So the BFS traversal is ","('[[<4>, <0>, <1>, <3>, <6>, <7>, <2>, <8>, <5>], [<4>, <0>, <1>, <2>, <8>, <5>, <3>, <6>, <7>], [<4>, <2>, <0>, <3>, <8>, <1>, <6>, <7>, <5>], [<4>, <0>, <1>, <2>, <8>, <6>, <7>, <5>, <3>]]',)",1,272
BFS,"[(<3>, <4>), (<3>, <12>), (<4>, <5>), (<12>, <13>), (<12>, <6>), (<12>, <8>), (<5>, <1>), (<1>, <10>), (<10>, <2>), (<2>, <6>), (<13>, <7>), (<8>, <0>), (<0>, <11>), (<9>, <11>)]","{<3>: [<4>, <12>],
<4>: [<3>, <5>],
<12>: [<3>, <13>, <6>, <8>],
<5>: [<4>, <1>],
<1>: [<5>, <10>],
<10>: [<2>, <1>],
<2>: [<10>, <6>],
<6>: [<2>, <12>],
<13>: [<12>, <7>],
<7>: [<13>],
<8>: [<12>, <0>],
<0>: [<8>, <11>],
<9>: [<11>],
<11>: [<9>, <0>]}","Node <3> is connected to nodes <4>, <12>.
Node <4> is connected to nodes <3>, <5>.
Node <12> is connected to nodes <3>, <13>, <6>, <8>.
Node <5> is connected to nodes <4>, <1>.
Node <1> is connected to nodes <5>, <10>.
Node <10> is connected to nodes <2>, <1>.
Node <2> is connected to nodes <10>, <6>.
Node <6> is connected to nodes <2>, <12>.
Node <13> is connected to nodes <12>, <7>.
Node <7> is connected to node <13>.
Node <8> is connected to nodes <12>, <0>.
Node <0> is connected to nodes <8>, <11>.
Node <9> is connected to node <11>.
Node <11> is connected to nodes <9>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,14,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <4>, <1>, <3>, <10>, <12>, <2>, <13>, <6>, <8>, <7>, <0>, <11>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<4>, <1>].
Visit node <4>. Unvisited neighbors of node <4> are [<3>].
Visit node <1>. Unvisited neighbors of node <1> are [<10>].
Visit node <3>. Unvisited neighbors of node <3> are [<12>].
Visit node <10>. Unvisited neighbors of node <10> are [<2>].
Visit node <12>. Unvisited neighbors of node <12> are [<13>, <6>, <8>].
Visit node <2>. 
Visit node <13>. Unvisited neighbors of node <13> are [<7>].
Visit node <6>. 
Visit node <8>. Unvisited neighbors of node <8> are [<0>].
Visit node <7>. 
Visit node <0>. Unvisited neighbors of node <0> are [<11>].
Visit node <11>. Unvisited neighbors of node <11> are [<9>].
Visit node <9>. 
So the BFS traversal is ","('[[<5>, <4>, <1>, <3>, <7>, <0>, <11>, <9>, <10>, <12>, <2>, <13>, <6>, <8>], [<5>, <4>, <1>, <3>, <10>, <12>, <2>, <0>, <7>, <8>, <11>, <13>, <6>, <9>], [<5>, <2>, <12>, <7>, <13>, <1>, <6>, <9>, <11>, <10>, <3>, <4>, <8>, <0>], [<5>, <4>, <1>, <3>, <10>, <12>, <2>, <13>, <6>, <8>, <7>, <0>, <11>, <9>]]',)",3,273
BFS,"[(<1>, <3>), (<1>, <5>), (<1>, <9>), (<3>, <4>), (<3>, <8>), (<5>, <14>), (<5>, <12>), (<5>, <7>), (<9>, <7>), (<9>, <2>), (<4>, <0>), (<4>, <1>), (<4>, <12>), (<8>, <5>), (<8>, <6>), (<8>, <4>), (<14>, <11>), (<14>, <7>), (<14>, <5>), (<14>, <3>), (<7>, <10>), (<7>, <8>), (<7>, <9>), (<7>, <12>), (<12>, <7>), (<12>, <4>), (<12>, <0>), (<12>, <9>), (<0>, <6>), (<10>, <13>), (<10>, <14>), (<10>, <11>), (<13>, <12>), (<6>, <14>), (<2>, <0>), (<2>, <14>), (<2>, <5>)]","{<1>: [<3>, <5>, <9>],
<3>: [<4>, <8>],
<5>: [<14>, <12>, <7>],
<9>: [<7>, <2>],
<4>: [<0>, <1>, <12>],
<8>: [<5>, <6>, <4>],
<14>: [<11>, <7>, <5>, <3>],
<11>: [],
<7>: [<10>, <8>, <9>, <12>],
<12>: [<7>, <4>, <0>, <9>],
<0>: [<6>],
<10>: [<13>, <14>, <11>],
<13>: [<12>],
<6>: [<14>],
<2>: [<0>, <14>, <5>]}","Node <1> is connected to nodes <3>, <5>, <9>.
Node <3> is connected to nodes <4>, <8>.
Node <5> is connected to nodes <14>, <12>, <7>.
Node <9> is connected to nodes <7>, <2>.
Node <4> is connected to nodes <0>, <1>, <12>.
Node <8> is connected to nodes <5>, <6>, <4>.
Node <14> is connected to nodes <11>, <7>, <5>, <3>.
Node <7> is connected to nodes <10>, <8>, <9>, <12>.
Node <12> is connected to nodes <7>, <4>, <0>, <9>.
Node <0> is connected to node <6>.
Node <10> is connected to nodes <13>, <14>, <11>.
Node <13> is connected to node <12>.
Node <6> is connected to node <14>.
Node <2> is connected to nodes <0>, <14>, <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,37,True,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <10>, <8>, <9>, <12>, <13>, <14>, <11>, <5>, <6>, <4>, <2>, <0>, <3>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<10>, <8>, <9>, <12>].
Visit node <10>. Unvisited neighbors of node <10> are [<13>, <14>, <11>].
Visit node <8>. Unvisited neighbors of node <8> are [<5>, <6>, <4>].
Visit node <9>. Unvisited neighbors of node <9> are [<2>].
Visit node <12>. Unvisited neighbors of node <12> are [<0>].
Visit node <13>. 
Visit node <14>. Unvisited neighbors of node <14> are [<3>].
Visit node <11>. 
Visit node <5>. 
Visit node <6>. 
Visit node <4>. Unvisited neighbors of node <4> are [<1>].
Visit node <2>. 
Visit node <0>. 
Visit node <3>. 
Visit node <1>. 
So the BFS traversal is ","('[[<7>, <10>, <8>, <9>, <12>, <13>, <14>, <1>, <5>, <2>, <3>, <6>, <4>, <0>, <11>], [<7>, <13>, <14>, <5>, <8>, <10>, <2>, <0>, <4>, <1>, <9>, <12>, <6>, <11>, <3>], [<7>, <10>, <8>, <9>, <12>, <4>, <2>, <0>, <3>, <1>, <13>, <14>, <11>, <5>, <6>], [<7>, <10>, <8>, <9>, <12>, <13>, <14>, <11>, <5>, <6>, <4>, <2>, <0>, <3>, <1>]]',)",3,274
BFS,"[(<8>, <2>), (<8>, <9>), (<8>, <5>), (<8>, <10>), (<2>, <5>), (<2>, <1>), (<9>, <5>), (<9>, <3>), (<9>, <0>), (<9>, <4>), (<5>, <3>), (<5>, <8>), (<5>, <2>), (<5>, <9>), (<5>, <6>), (<10>, <3>), (<10>, <0>), (<10>, <9>), (<10>, <6>), (<10>, <5>), (<0>, <1>), (<0>, <7>), (<0>, <10>), (<1>, <7>), (<1>, <9>), (<1>, <10>), (<1>, <3>), (<1>, <8>), (<7>, <9>), (<7>, <8>), (<7>, <4>), (<7>, <2>), (<4>, <1>), (<4>, <2>), (<4>, <7>), (<4>, <6>), (<4>, <3>), (<6>, <4>), (<6>, <1>), (<6>, <2>), (<6>, <7>), (<6>, <9>), (<3>, <0>), (<3>, <4>), (<3>, <2>), (<3>, <7>), (<3>, <6>), (<3>, <5>), (<3>, <10>)]","{<8>: [<2>, <9>, <5>, <10>],
<2>: [<5>, <1>],
<9>: [<5>, <3>, <0>, <4>],
<5>: [<3>, <8>, <2>, <9>, <6>],
<10>: [<3>, <0>, <9>, <6>, <5>],
<0>: [<1>, <7>, <10>],
<1>: [<7>, <9>, <10>, <3>, <8>],
<7>: [<9>, <8>, <4>, <2>],
<4>: [<1>, <2>, <7>, <6>, <3>],
<6>: [<4>, <1>, <2>, <7>, <9>],
<3>: [<0>, <4>, <2>, <7>, <6>, <5>, <10>]}","Node <8> is connected to nodes <2>, <9>, <5>, <10>.
Node <2> is connected to nodes <5>, <1>.
Node <9> is connected to nodes <5>, <3>, <0>, <4>.
Node <5> is connected to nodes <3>, <8>, <2>, <9>, <6>.
Node <10> is connected to nodes <3>, <0>, <9>, <6>, <5>.
Node <0> is connected to nodes <1>, <7>, <10>.
Node <1> is connected to nodes <7>, <9>, <10>, <3>, <8>.
Node <7> is connected to nodes <9>, <8>, <4>, <2>.
Node <4> is connected to nodes <1>, <2>, <7>, <6>, <3>.
Node <6> is connected to nodes <4>, <1>, <2>, <7>, <9>.
Node <3> is connected to nodes <0>, <4>, <2>, <7>, <6>, <5>, <10>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,49,True,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <1>, <2>, <7>, <6>, <3>, <9>, <10>, <8>, <5>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<1>, <2>, <7>, <6>, <3>].
Visit node <1>. Unvisited neighbors of node <1> are [<9>, <10>, <8>].
Visit node <2>. Unvisited neighbors of node <2> are [<5>].
Visit node <7>. 
Visit node <6>. 
Visit node <3>. Unvisited neighbors of node <3> are [<0>].
Visit node <9>. 
Visit node <10>. 
Visit node <8>. 
Visit node <5>. 
Visit node <0>. 
So the BFS traversal is ","('[[<4>, <1>, <2>, <8>, <5>, <0>, <7>, <6>, <3>, <9>, <10>], [<4>, <6>, <9>, <10>, <3>, <7>, <0>, <5>, <2>, <1>, <8>], [<4>, <1>, <2>, <7>, <6>, <10>, <3>, <8>, <9>, <5>, <0>], [<4>, <1>, <2>, <7>, <6>, <3>, <9>, <10>, <8>, <5>, <0>]]',)",3,275
BFS,"[(<0>, <1>), (<1>, <5>), (<1>, <0>), (<1>, <3>), (<1>, <7>), (<3>, <2>), (<3>, <4>), (<2>, <4>), (<6>, <7>), (<6>, <1>), (<7>, <2>), (<5>, <3>), (<5>, <8>), (<8>, <5>), (<8>, <2>), (<8>, <1>)]","{<0>: [<1>],
<1>: [<5>, <0>, <3>, <7>],
<3>: [<2>, <4>],
<2>: [<4>],
<4>: [],
<6>: [<7>, <1>],
<7>: [<2>],
<5>: [<3>, <8>],
<8>: [<5>, <2>, <1>]}","Node <0> is connected to node <1>.
Node <1> is connected to nodes <5>, <0>, <3>, <7>.
Node <3> is connected to nodes <2>, <4>.
Node <2> is connected to node <4>.
Node <6> is connected to nodes <7>, <1>.
Node <7> is connected to node <2>.
Node <5> is connected to nodes <3>, <8>.
Node <8> is connected to nodes <5>, <2>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,16,True,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <1>, <5>, <3>, <7>, <8>, <2>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<1>].
Visit node <1>. Unvisited neighbors of node <1> are [<5>, <3>, <7>].
Visit node <5>. Unvisited neighbors of node <5> are [<8>].
Visit node <3>. Unvisited neighbors of node <3> are [<2>, <4>].
Visit node <7>. 
Visit node <8>. 
Visit node <2>. 
Visit node <4>. 
So the BFS traversal is ","('[[<0>, <3>, <4>, <1>, <2>, <8>, <7>, <5>], [<0>, <1>, <2>, <4>, <5>, <3>, <7>, <8>], [<0>, <1>, <5>, <3>, <7>, <8>, <2>, <4>], [<0>, <1>, <5>, <3>, <7>, <2>, <4>, <8>]]',)",2,276
BFS,"[(<10>, <9>), (<10>, <8>), (<10>, <11>), (<10>, <5>), (<9>, <6>), (<9>, <1>), (<9>, <4>), (<8>, <11>), (<11>, <0>), (<11>, <5>), (<5>, <7>), (<5>, <11>), (<5>, <0>), (<6>, <8>), (<1>, <4>), (<4>, <7>), (<4>, <8>), (<4>, <3>), (<4>, <5>), (<3>, <2>), (<3>, <9>), (<2>, <0>), (<2>, <5>), (<2>, <7>), (<2>, <3>), (<2>, <11>), (<0>, <10>), (<0>, <9>), (<0>, <6>), (<0>, <2>), (<7>, <9>), (<7>, <6>)]","{<10>: [<9>, <8>, <11>, <5>],
<9>: [<6>, <1>, <4>],
<8>: [<11>],
<11>: [<0>, <5>],
<5>: [<7>, <11>, <0>],
<6>: [<8>],
<1>: [<4>],
<4>: [<7>, <8>, <3>, <5>],
<3>: [<2>, <9>],
<2>: [<0>, <5>, <7>, <3>, <11>],
<0>: [<10>, <9>, <6>, <2>],
<7>: [<9>, <6>]}","Node <10> is connected to nodes <9>, <8>, <11>, <5>.
Node <9> is connected to nodes <6>, <1>, <4>.
Node <8> is connected to node <11>.
Node <11> is connected to nodes <0>, <5>.
Node <5> is connected to nodes <7>, <11>, <0>.
Node <6> is connected to node <8>.
Node <1> is connected to node <4>.
Node <4> is connected to nodes <7>, <8>, <3>, <5>.
Node <3> is connected to nodes <2>, <9>.
Node <2> is connected to nodes <0>, <5>, <7>, <3>, <11>.
Node <0> is connected to nodes <10>, <9>, <6>, <2>.
Node <7> is connected to nodes <9>, <6>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,32,True,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <9>, <6>, <1>, <4>, <8>, <3>, <5>, <11>, <2>, <0>, <10>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<9>, <6>].
Visit node <9>. Unvisited neighbors of node <9> are [<1>, <4>].
Visit node <6>. Unvisited neighbors of node <6> are [<8>].
Visit node <1>. 
Visit node <4>. Unvisited neighbors of node <4> are [<3>, <5>].
Visit node <8>. Unvisited neighbors of node <8> are [<11>].
Visit node <3>. Unvisited neighbors of node <3> are [<2>].
Visit node <5>. Unvisited neighbors of node <5> are [<0>].
Visit node <11>. 
Visit node <2>. 
Visit node <0>. Unvisited neighbors of node <0> are [<10>].
Visit node <10>. 
So the BFS traversal is ","('[[<7>, <3>, <5>, <6>, <0>, <8>, <9>, <2>, <4>, <1>, <10>, <11>], [<7>, <9>, <6>, <1>, <4>, <8>, <3>, <5>, <11>, <2>, <0>, <10>], [<7>, <9>, <6>, <1>, <11>, <2>, <0>, <10>, <4>, <8>, <3>, <5>], [<7>, <9>, <6>, <1>, <4>, <8>, <0>, <11>, <2>, <3>, <10>, <5>]]',)",1,277
BFS,"[(<4>, <7>), (<4>, <1>), (<4>, <2>), (<4>, <0>), (<4>, <3>), (<7>, <6>), (<7>, <5>)]","{<4>: [<7>, <1>, <2>, <0>, <3>],
<7>: [<4>, <6>, <5>],
<1>: [<4>],
<2>: [<4>],
<0>: [<4>],
<3>: [<4>],
<6>: [<7>],
<5>: [<7>]}","Node <4> is connected to nodes <7>, <1>, <2>, <0>, <3>.
Node <7> is connected to nodes <4>, <6>, <5>.
Node <1> is connected to node <4>.
Node <2> is connected to node <4>.
Node <0> is connected to node <4>.
Node <3> is connected to node <4>.
Node <6> is connected to node <7>.
Node <5> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,7,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <7>, <4>, <5>, <1>, <2>, <0>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<7>].
Visit node <7>. Unvisited neighbors of node <7> are [<4>, <5>].
Visit node <4>. Unvisited neighbors of node <4> are [<1>, <2>, <0>, <3>].
Visit node <5>. 
Visit node <1>. 
Visit node <2>. 
Visit node <0>. 
Visit node <3>. 
So the BFS traversal is ","('[[<6>, <7>, <4>, <5>, <2>, <3>, <0>, <1>], [<6>, <0>, <1>, <5>, <4>, <3>, <7>, <2>], [<6>, <7>, <4>, <5>, <1>, <2>, <0>, <3>], [<6>, <7>, <0>, <3>, <4>, <5>, <1>, <2>]]',)",2,278
BFS,"[(<7>, <3>), (<7>, <6>), (<7>, <5>), (<7>, <0>), (<7>, <1>), (<3>, <6>), (<3>, <5>), (<3>, <8>), (<3>, <4>), (<6>, <5>), (<6>, <0>), (<6>, <8>), (<6>, <4>), (<6>, <2>), (<5>, <0>), (<5>, <8>), (<5>, <1>), (<5>, <4>), (<0>, <8>), (<0>, <1>), (<0>, <4>), (<0>, <2>), (<1>, <8>), (<1>, <4>), (<8>, <4>), (<8>, <2>)]","{<7>: [<3>, <6>, <5>, <0>, <1>],
<3>: [<7>, <6>, <5>, <8>, <4>],
<6>: [<7>, <3>, <5>, <0>, <8>, <4>, <2>],
<5>: [<7>, <3>, <6>, <0>, <8>, <1>, <4>],
<0>: [<7>, <6>, <5>, <8>, <1>, <4>, <2>],
<1>: [<7>, <5>, <0>, <8>, <4>],
<8>: [<3>, <6>, <5>, <0>, <1>, <4>, <2>],
<4>: [<3>, <6>, <5>, <0>, <8>, <1>],
<2>: [<6>, <0>, <8>]}","Node <7> is connected to nodes <3>, <6>, <5>, <0>, <1>.
Node <3> is connected to nodes <7>, <6>, <5>, <8>, <4>.
Node <6> is connected to nodes <7>, <3>, <5>, <0>, <8>, <4>, <2>.
Node <5> is connected to nodes <7>, <3>, <6>, <0>, <8>, <1>, <4>.
Node <0> is connected to nodes <7>, <6>, <5>, <8>, <1>, <4>, <2>.
Node <1> is connected to nodes <7>, <5>, <0>, <8>, <4>.
Node <8> is connected to nodes <3>, <6>, <5>, <0>, <1>, <4>, <2>.
Node <4> is connected to nodes <3>, <6>, <5>, <0>, <8>, <1>.
Node <2> is connected to nodes <6>, <0>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,26,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <7>, <3>, <6>, <0>, <8>, <1>, <4>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<7>, <3>, <6>, <0>, <8>, <1>, <4>].
Visit node <7>. 
Visit node <3>. 
Visit node <6>. Unvisited neighbors of node <6> are [<2>].
Visit node <0>. 
Visit node <8>. 
Visit node <1>. 
Visit node <4>. 
Visit node <2>. 
So the BFS traversal is ","('[[<5>, <6>, <8>, <7>, <4>, <2>, <1>, <3>, <0>], [<5>, <7>, <3>, <6>, <0>, <8>, <1>, <4>, <2>], [<5>, <7>, <3>, <6>, <2>, <1>, <0>, <4>, <8>], [<5>, <7>, <3>, <1>, <4>, <2>, <6>, <0>, <8>]]',)",1,279
BFS,"[(<9>, <8>), (<9>, <5>), (<9>, <10>), (<9>, <13>), (<8>, <2>), (<8>, <7>), (<8>, <11>), (<5>, <0>), (<5>, <1>), (<5>, <12>), (<10>, <14>), (<10>, <13>), (<13>, <2>), (<13>, <3>), (<13>, <12>), (<2>, <14>), (<2>, <11>), (<2>, <3>), (<14>, <1>), (<11>, <4>), (<11>, <3>), (<11>, <12>), (<3>, <1>), (<1>, <4>), (<1>, <12>), (<0>, <7>), (<0>, <6>), (<6>, <12>)]","{<9>: [<8>, <5>, <10>, <13>],
<8>: [<9>, <2>, <7>, <11>],
<5>: [<9>, <0>, <1>, <12>],
<10>: [<9>, <14>, <13>],
<13>: [<9>, <2>, <3>, <12>, <10>],
<2>: [<14>, <8>, <11>, <3>, <13>],
<14>: [<2>, <1>, <10>],
<11>: [<2>, <8>, <4>, <3>, <12>],
<3>: [<2>, <1>, <11>, <13>],
<1>: [<14>, <4>, <5>, <3>, <12>],
<0>: [<7>, <5>, <6>],
<7>: [<0>, <8>],
<6>: [<0>, <12>],
<4>: [<1>, <11>],
<12>: [<1>, <11>, <5>, <6>, <13>]}","Node <9> is connected to nodes <8>, <5>, <10>, <13>.
Node <8> is connected to nodes <9>, <2>, <7>, <11>.
Node <5> is connected to nodes <9>, <0>, <1>, <12>.
Node <10> is connected to nodes <9>, <14>, <13>.
Node <13> is connected to nodes <9>, <2>, <3>, <12>, <10>.
Node <2> is connected to nodes <14>, <8>, <11>, <3>, <13>.
Node <14> is connected to nodes <2>, <1>, <10>.
Node <11> is connected to nodes <2>, <8>, <4>, <3>, <12>.
Node <3> is connected to nodes <2>, <1>, <11>, <13>.
Node <1> is connected to nodes <14>, <4>, <5>, <3>, <12>.
Node <0> is connected to nodes <7>, <5>, <6>.
Node <7> is connected to nodes <0>, <8>.
Node <6> is connected to nodes <0>, <12>.
Node <4> is connected to nodes <1>, <11>.
Node <12> is connected to nodes <1>, <11>, <5>, <6>, <13>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,28,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <14>, <8>, <11>, <3>, <13>, <1>, <10>, <9>, <7>, <4>, <12>, <5>, <0>, <6>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<14>, <8>, <11>, <3>, <13>].
Visit node <14>. Unvisited neighbors of node <14> are [<1>, <10>].
Visit node <8>. Unvisited neighbors of node <8> are [<9>, <7>].
Visit node <11>. Unvisited neighbors of node <11> are [<4>, <12>].
Visit node <3>. 
Visit node <13>. 
Visit node <1>. Unvisited neighbors of node <1> are [<5>].
Visit node <10>. 
Visit node <9>. 
Visit node <7>. Unvisited neighbors of node <7> are [<0>].
Visit node <4>. 
Visit node <12>. Unvisited neighbors of node <12> are [<6>].
Visit node <5>. 
Visit node <0>. 
Visit node <6>. 
So the BFS traversal is ","('[[<2>, <9>, <3>, <11>, <7>, <14>, <0>, <4>, <1>, <13>, <12>, <5>, <8>, <6>, <10>], [<2>, <14>, <8>, <11>, <3>, <4>, <12>, <5>, <0>, <6>, <13>, <1>, <10>, <9>, <7>], [<2>, <14>, <8>, <11>, <3>, <13>, <1>, <10>, <9>, <7>, <4>, <12>, <5>, <0>, <6>], [<2>, <14>, <8>, <11>, <3>, <13>, <1>, <6>, <5>, <12>, <9>, <10>, <7>, <4>, <0>]]',)",2,280
BFS,"[(<0>, <5>), (<0>, <3>), (<5>, <1>), (<1>, <2>), (<1>, <7>), (<4>, <6>), (<4>, <7>), (<6>, <2>)]","{<0>: [<5>, <3>],
<5>: [<0>, <1>],
<3>: [<0>],
<1>: [<5>, <2>, <7>],
<4>: [<6>, <7>],
<6>: [<4>, <2>],
<7>: [<4>, <1>],
<2>: [<6>, <1>]}","Node <0> is connected to nodes <5>, <3>.
Node <5> is connected to nodes <0>, <1>.
Node <3> is connected to node <0>.
Node <1> is connected to nodes <5>, <2>, <7>.
Node <4> is connected to nodes <6>, <7>.
Node <6> is connected to nodes <4>, <2>.
Node <7> is connected to nodes <4>, <1>.
Node <2> is connected to nodes <6>, <1>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,8,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <5>, <3>, <1>, <2>, <7>, <6>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<5>, <3>].
Visit node <5>. Unvisited neighbors of node <5> are [<1>].
Visit node <3>. 
Visit node <1>. Unvisited neighbors of node <1> are [<2>, <7>].
Visit node <2>. Unvisited neighbors of node <2> are [<6>].
Visit node <7>. Unvisited neighbors of node <7> are [<4>].
Visit node <6>. 
Visit node <4>. 
So the BFS traversal is ","('[[<0>, <5>, <6>, <4>, <3>, <1>, <2>, <7>], [<0>, <5>, <3>, <1>, <2>, <4>, <6>, <7>], [<0>, <5>, <3>, <1>, <2>, <7>, <6>, <4>], [<0>, <7>, <4>, <6>, <3>, <1>, <5>, <2>]]',)",2,281
BFS,"[(<0>, <9>), (<0>, <2>), (<0>, <11>), (<0>, <10>), (<0>, <7>), (<0>, <8>), (<9>, <8>), (<2>, <3>), (<11>, <3>), (<11>, <1>), (<11>, <6>), (<11>, <10>), (<11>, <4>), (<10>, <3>), (<7>, <1>), (<7>, <5>), (<8>, <1>), (<8>, <6>), (<3>, <5>), (<5>, <1>), (<1>, <4>), (<4>, <6>)]","{<0>: [<9>, <2>, <11>, <10>, <7>, <8>],
<9>: [<0>, <8>],
<2>: [<0>, <3>],
<11>: [<0>, <3>, <1>, <6>, <10>, <4>],
<10>: [<0>, <3>, <11>],
<7>: [<0>, <1>, <5>],
<8>: [<0>, <9>, <1>, <6>],
<3>: [<2>, <11>, <5>, <10>],
<5>: [<3>, <1>, <7>],
<1>: [<11>, <5>, <4>, <7>, <8>],
<4>: [<1>, <11>, <6>],
<6>: [<11>, <4>, <8>]}","Node <0> is connected to nodes <9>, <2>, <11>, <10>, <7>, <8>.
Node <9> is connected to nodes <0>, <8>.
Node <2> is connected to nodes <0>, <3>.
Node <11> is connected to nodes <0>, <3>, <1>, <6>, <10>, <4>.
Node <10> is connected to nodes <0>, <3>, <11>.
Node <7> is connected to nodes <0>, <1>, <5>.
Node <8> is connected to nodes <0>, <9>, <1>, <6>.
Node <3> is connected to nodes <2>, <11>, <5>, <10>.
Node <5> is connected to nodes <3>, <1>, <7>.
Node <1> is connected to nodes <11>, <5>, <4>, <7>, <8>.
Node <4> is connected to nodes <1>, <11>, <6>.
Node <6> is connected to nodes <11>, <4>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,22,False,"Start from node <11>, output a sequence of traversal in breadth-first search (BFS) order.","[<11>, <0>, <3>, <1>, <6>, <10>, <4>, <9>, <2>, <7>, <8>, <5>]","Let's run breadth-first search (BFS) step by step.
Visit node <11>. Unvisited neighbors of node <11> are [<0>, <3>, <1>, <6>, <10>, <4>].
Visit node <0>. Unvisited neighbors of node <0> are [<9>, <2>, <7>, <8>].
Visit node <3>. Unvisited neighbors of node <3> are [<5>].
Visit node <1>. 
Visit node <6>. 
Visit node <10>. 
Visit node <4>. 
Visit node <9>. 
Visit node <2>. 
Visit node <7>. 
Visit node <8>. 
Visit node <5>. 
So the BFS traversal is ","('[[<11>, <10>, <4>, <7>, <9>, <2>, <8>, <0>, <3>, <5>, <1>, <6>], [<11>, <0>, <3>, <1>, <6>, <10>, <4>, <9>, <2>, <7>, <8>, <5>], [<11>, <0>, <3>, <1>, <6>, <10>, <7>, <2>, <5>, <4>, <8>, <9>], [<11>, <0>, <3>, <1>, <2>, <7>, <8>, <5>, <6>, <10>, <4>, <9>]]',)",1,282
BFS,"[(<4>, <1>), (<4>, <6>), (<4>, <7>), (<4>, <5>), (<4>, <2>), (<4>, <0>), (<1>, <0>), (<7>, <5>), (<7>, <3>), (<5>, <0>), (<5>, <8>), (<2>, <0>), (<2>, <3>), (<0>, <8>)]","{<4>: [<1>, <6>, <7>, <5>, <2>, <0>],
<1>: [<4>, <0>],
<6>: [<4>],
<7>: [<4>, <5>, <3>],
<5>: [<4>, <0>, <7>, <8>],
<2>: [<4>, <0>, <3>],
<0>: [<4>, <1>, <5>, <2>, <8>],
<8>: [<0>, <5>],
<3>: [<7>, <2>]}","Node <4> is connected to nodes <1>, <6>, <7>, <5>, <2>, <0>.
Node <1> is connected to nodes <4>, <0>.
Node <6> is connected to node <4>.
Node <7> is connected to nodes <4>, <5>, <3>.
Node <5> is connected to nodes <4>, <0>, <7>, <8>.
Node <2> is connected to nodes <4>, <0>, <3>.
Node <0> is connected to nodes <4>, <1>, <5>, <2>, <8>.
Node <8> is connected to nodes <0>, <5>.
Node <3> is connected to nodes <7>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,14,False,"Start from node <5>, output a sequence of traversal in breadth-first search (BFS) order.","[<5>, <4>, <0>, <7>, <8>, <1>, <6>, <2>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <5>. Unvisited neighbors of node <5> are [<4>, <0>, <7>, <8>].
Visit node <4>. Unvisited neighbors of node <4> are [<1>, <6>, <2>].
Visit node <0>. 
Visit node <7>. Unvisited neighbors of node <7> are [<3>].
Visit node <8>. 
Visit node <1>. 
Visit node <6>. 
Visit node <2>. 
Visit node <3>. 
So the BFS traversal is ","('[[<5>, <4>, <0>, <7>, <8>, <1>, <6>, <2>, <3>], [<5>, <4>, <0>, <6>, <2>, <3>, <7>, <8>, <1>], [<5>, <8>, <1>, <7>, <4>, <6>, <2>, <3>, <0>], [<5>, <4>, <0>, <7>, <6>, <2>, <3>, <1>, <8>]]',)",0,283
BFS,"[(<10>, <12>), (<10>, <0>), (<10>, <2>), (<10>, <5>), (<10>, <11>), (<10>, <8>), (<10>, <7>), (<10>, <3>), (<12>, <6>), (<12>, <9>), (<12>, <2>), (<12>, <5>), (<12>, <13>), (<12>, <8>), (<12>, <7>), (<12>, <4>), (<12>, <1>), (<12>, <3>), (<0>, <9>), (<0>, <2>), (<0>, <13>), (<0>, <11>), (<0>, <8>), (<0>, <7>), (<0>, <4>), (<0>, <1>), (<2>, <6>), (<2>, <9>), (<2>, <5>), (<2>, <13>), (<2>, <11>), (<2>, <8>), (<2>, <7>), (<2>, <4>), (<2>, <3>), (<5>, <6>), (<5>, <9>), (<5>, <11>), (<5>, <4>), (<5>, <1>), (<5>, <3>), (<11>, <6>), (<11>, <9>), (<11>, <13>), (<11>, <8>), (<11>, <7>), (<11>, <4>), (<11>, <1>), (<8>, <13>), (<8>, <7>), (<8>, <4>), (<8>, <1>), (<7>, <6>), (<7>, <9>), (<7>, <13>), (<7>, <1>), (<7>, <3>), (<3>, <9>), (<3>, <4>), (<3>, <1>), (<6>, <9>), (<6>, <13>), (<6>, <4>), (<9>, <4>), (<13>, <4>), (<13>, <1>), (<4>, <1>)]","{<10>: [<12>, <0>, <2>, <5>, <11>, <8>, <7>, <3>],
<12>: [<10>, <6>, <9>, <2>, <5>, <13>, <8>, <7>, <4>, <1>, <3>],
<0>: [<10>, <9>, <2>, <13>, <11>, <8>, <7>, <4>, <1>],
<2>: [<10>, <12>, <0>, <6>, <9>, <5>, <13>, <11>, <8>, <7>, <4>, <3>],
<5>: [<10>, <12>, <6>, <9>, <2>, <11>, <4>, <1>, <3>],
<11>: [<10>, <0>, <6>, <9>, <2>, <5>, <13>, <8>, <7>, <4>, <1>],
<8>: [<10>, <12>, <0>, <2>, <13>, <11>, <7>, <4>, <1>],
<7>: [<10>, <12>, <0>, <6>, <9>, <2>, <13>, <11>, <8>, <1>, <3>],
<3>: [<10>, <12>, <9>, <2>, <5>, <7>, <4>, <1>],
<6>: [<12>, <9>, <2>, <5>, <13>, <11>, <7>, <4>],
<9>: [<12>, <0>, <6>, <2>, <5>, <11>, <7>, <4>, <3>],
<13>: [<12>, <0>, <6>, <2>, <11>, <8>, <7>, <4>, <1>],
<4>: [<12>, <0>, <6>, <9>, <2>, <5>, <13>, <11>, <8>, <1>, <3>],
<1>: [<12>, <0>, <5>, <13>, <11>, <8>, <7>, <4>, <3>]}","Node <10> is connected to nodes <12>, <0>, <2>, <5>, <11>, <8>, <7>, <3>.
Node <12> is connected to nodes <10>, <6>, <9>, <2>, <5>, <13>, <8>, <7>, <4>, <1>, <3>.
Node <0> is connected to nodes <10>, <9>, <2>, <13>, <11>, <8>, <7>, <4>, <1>.
Node <2> is connected to nodes <10>, <12>, <0>, <6>, <9>, <5>, <13>, <11>, <8>, <7>, <4>, <3>.
Node <5> is connected to nodes <10>, <12>, <6>, <9>, <2>, <11>, <4>, <1>, <3>.
Node <11> is connected to nodes <10>, <0>, <6>, <9>, <2>, <5>, <13>, <8>, <7>, <4>, <1>.
Node <8> is connected to nodes <10>, <12>, <0>, <2>, <13>, <11>, <7>, <4>, <1>.
Node <7> is connected to nodes <10>, <12>, <0>, <6>, <9>, <2>, <13>, <11>, <8>, <1>, <3>.
Node <3> is connected to nodes <10>, <12>, <9>, <2>, <5>, <7>, <4>, <1>.
Node <6> is connected to nodes <12>, <9>, <2>, <5>, <13>, <11>, <7>, <4>.
Node <9> is connected to nodes <12>, <0>, <6>, <2>, <5>, <11>, <7>, <4>, <3>.
Node <13> is connected to nodes <12>, <0>, <6>, <2>, <11>, <8>, <7>, <4>, <1>.
Node <4> is connected to nodes <12>, <0>, <6>, <9>, <2>, <5>, <13>, <11>, <8>, <1>, <3>.
Node <1> is connected to nodes <12>, <0>, <5>, <13>, <11>, <8>, <7>, <4>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,67,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <12>, <9>, <2>, <5>, <13>, <11>, <7>, <4>, <10>, <8>, <1>, <3>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<12>, <9>, <2>, <5>, <13>, <11>, <7>, <4>].
Visit node <12>. Unvisited neighbors of node <12> are [<10>, <8>, <1>, <3>].
Visit node <9>. Unvisited neighbors of node <9> are [<0>].
Visit node <2>. 
Visit node <5>. 
Visit node <13>. 
Visit node <11>. 
Visit node <7>. 
Visit node <4>. 
Visit node <10>. 
Visit node <8>. 
Visit node <1>. 
Visit node <3>. 
Visit node <0>. 
So the BFS traversal is ","('[[<6>, <5>, <2>, <11>, <9>, <3>, <10>, <7>, <8>, <12>, <13>, <0>, <4>, <1>], [<6>, <12>, <9>, <2>, <5>, <13>, <11>, <4>, <7>, <0>, <1>, <8>, <3>, <10>], [<6>, <12>, <9>, <2>, <5>, <13>, <11>, <7>, <4>, <10>, <8>, <1>, <3>, <0>], [<6>, <12>, <9>, <2>, <8>, <1>, <3>, <0>, <5>, <13>, <11>, <7>, <4>, <10>]]',)",2,284
BFS,"[(<4>, <2>), (<4>, <6>), (<2>, <8>), (<6>, <5>), (<8>, <3>), (<5>, <0>), (<5>, <7>), (<3>, <1>), (<3>, <7>)]","{<4>: [<2>, <6>],
<2>: [<4>, <8>],
<6>: [<4>, <5>],
<8>: [<2>, <3>],
<5>: [<6>, <0>, <7>],
<3>: [<8>, <1>, <7>],
<1>: [<3>],
<7>: [<3>, <5>],
<0>: [<5>]}","Node <4> is connected to nodes <2>, <6>.
Node <2> is connected to nodes <4>, <8>.
Node <6> is connected to nodes <4>, <5>.
Node <8> is connected to nodes <2>, <3>.
Node <5> is connected to nodes <6>, <0>, <7>.
Node <3> is connected to nodes <8>, <1>, <7>.
Node <1> is connected to node <3>.
Node <7> is connected to nodes <3>, <5>.
Node <0> is connected to node <5>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <3>, <8>, <7>, <2>, <5>, <4>, <6>, <0>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<3>].
Visit node <3>. Unvisited neighbors of node <3> are [<8>, <7>].
Visit node <8>. Unvisited neighbors of node <8> are [<2>].
Visit node <7>. Unvisited neighbors of node <7> are [<5>].
Visit node <2>. Unvisited neighbors of node <2> are [<4>].
Visit node <5>. Unvisited neighbors of node <5> are [<6>, <0>].
Visit node <4>. 
Visit node <6>. 
Visit node <0>. 
So the BFS traversal is ","('[[<1>, <3>, <8>, <7>, <2>, <5>, <4>, <6>, <0>], [<1>, <3>, <8>, <4>, <6>, <0>, <7>, <2>, <5>], [<1>, <7>, <3>, <8>, <2>, <0>, <6>, <5>, <4>], [<1>, <3>, <8>, <7>, <4>, <2>, <0>, <6>, <5>]]',)",0,285
BFS,"[(<6>, <2>), (<6>, <5>), (<6>, <3>), (<2>, <1>), (<2>, <5>), (<2>, <3>), (<2>, <7>), (<5>, <4>), (<5>, <7>), (<3>, <4>), (<3>, <1>), (<3>, <0>), (<1>, <0>), (<1>, <7>), (<7>, <4>), (<4>, <0>)]","{<6>: [<2>, <5>, <3>],
<2>: [<6>, <1>, <5>, <3>, <7>],
<5>: [<6>, <2>, <4>, <7>],
<3>: [<6>, <2>, <4>, <1>, <0>],
<1>: [<2>, <3>, <0>, <7>],
<7>: [<2>, <4>, <1>, <5>],
<4>: [<5>, <3>, <0>, <7>],
<0>: [<4>, <1>, <3>]}","Node <6> is connected to nodes <2>, <5>, <3>.
Node <2> is connected to nodes <6>, <1>, <5>, <3>, <7>.
Node <5> is connected to nodes <6>, <2>, <4>, <7>.
Node <3> is connected to nodes <6>, <2>, <4>, <1>, <0>.
Node <1> is connected to nodes <2>, <3>, <0>, <7>.
Node <7> is connected to nodes <2>, <4>, <1>, <5>.
Node <4> is connected to nodes <5>, <3>, <0>, <7>.
Node <0> is connected to nodes <4>, <1>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]",8,16,False,"Start from node <1>, output a sequence of traversal in breadth-first search (BFS) order.","[<1>, <2>, <3>, <0>, <7>, <6>, <5>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <1>. Unvisited neighbors of node <1> are [<2>, <3>, <0>, <7>].
Visit node <2>. Unvisited neighbors of node <2> are [<6>, <5>].
Visit node <3>. Unvisited neighbors of node <3> are [<4>].
Visit node <0>. 
Visit node <7>. 
Visit node <6>. 
Visit node <5>. 
Visit node <4>. 
So the BFS traversal is ","('[[<1>, <2>, <3>, <0>, <7>, <6>, <5>, <4>], [<1>, <2>, <3>, <0>, <4>, <7>, <6>, <5>], [<1>, <5>, <0>, <7>, <2>, <4>, <3>, <6>], [<1>, <2>, <5>, <4>, <3>, <0>, <7>, <6>]]',)",0,286
BFS,"[(<9>, <3>), (<9>, <8>), (<9>, <2>), (<9>, <7>), (<9>, <1>), (<3>, <4>), (<3>, <11>), (<8>, <7>), (<8>, <10>), (<8>, <11>), (<8>, <5>), (<2>, <0>), (<7>, <10>), (<7>, <1>), (<7>, <5>), (<1>, <6>), (<1>, <0>), (<4>, <11>), (<11>, <10>), (<11>, <6>)]","{<9>: [<3>, <8>, <2>, <7>, <1>],
<3>: [<9>, <4>, <11>],
<8>: [<9>, <7>, <10>, <11>, <5>],
<2>: [<9>, <0>],
<7>: [<9>, <10>, <1>, <8>, <5>],
<1>: [<9>, <7>, <6>, <0>],
<4>: [<3>, <11>],
<11>: [<3>, <10>, <8>, <6>, <4>],
<10>: [<7>, <11>, <8>],
<5>: [<7>, <8>],
<6>: [<11>, <1>],
<0>: [<1>, <2>]}","Node <9> is connected to nodes <3>, <8>, <2>, <7>, <1>.
Node <3> is connected to nodes <9>, <4>, <11>.
Node <8> is connected to nodes <9>, <7>, <10>, <11>, <5>.
Node <2> is connected to nodes <9>, <0>.
Node <7> is connected to nodes <9>, <10>, <1>, <8>, <5>.
Node <1> is connected to nodes <9>, <7>, <6>, <0>.
Node <4> is connected to nodes <3>, <11>.
Node <11> is connected to nodes <3>, <10>, <8>, <6>, <4>.
Node <10> is connected to nodes <7>, <11>, <8>.
Node <5> is connected to nodes <7>, <8>.
Node <6> is connected to nodes <11>, <1>.
Node <0> is connected to nodes <1>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,20,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <11>, <1>, <3>, <10>, <8>, <4>, <9>, <7>, <0>, <5>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<11>, <1>].
Visit node <11>. Unvisited neighbors of node <11> are [<3>, <10>, <8>, <4>].
Visit node <1>. Unvisited neighbors of node <1> are [<9>, <7>, <0>].
Visit node <3>. 
Visit node <10>. 
Visit node <8>. Unvisited neighbors of node <8> are [<5>].
Visit node <4>. 
Visit node <9>. Unvisited neighbors of node <9> are [<2>].
Visit node <7>. 
Visit node <0>. 
Visit node <5>. 
Visit node <2>. 
So the BFS traversal is ","('[[<6>, <11>, <1>, <3>, <10>, <8>, <5>, <7>, <4>, <9>, <0>, <2>], [<6>, <11>, <1>, <3>, <10>, <8>, <4>, <9>, <7>, <0>, <5>, <2>], [<6>, <3>, <7>, <5>, <8>, <0>, <4>, <11>, <2>, <1>, <10>, <9>], [<6>, <11>, <1>, <3>, <7>, <0>, <5>, <2>, <10>, <8>, <4>, <9>]]',)",1,287
BFS,"[(<2>, <4>), (<2>, <7>), (<2>, <10>), (<4>, <3>), (<4>, <6>), (<7>, <9>), (<7>, <5>), (<7>, <1>), (<10>, <0>), (<10>, <5>), (<10>, <6>), (<3>, <0>), (<3>, <1>), (<3>, <6>), (<6>, <8>), (<6>, <0>), (<9>, <8>), (<9>, <11>), (<8>, <0>), (<11>, <0>), (<11>, <1>), (<11>, <5>), (<0>, <1>), (<1>, <5>)]","{<2>: [<4>, <7>, <10>],
<4>: [<2>, <3>, <6>],
<7>: [<2>, <9>, <5>, <1>],
<10>: [<2>, <0>, <5>, <6>],
<3>: [<4>, <0>, <1>, <6>],
<6>: [<4>, <8>, <3>, <0>, <10>],
<9>: [<8>, <11>, <7>],
<8>: [<9>, <6>, <0>],
<11>: [<9>, <0>, <1>, <5>],
<0>: [<8>, <3>, <11>, <1>, <10>, <6>],
<1>: [<3>, <0>, <11>, <5>, <7>],
<5>: [<11>, <10>, <1>, <7>]}","Node <2> is connected to nodes <4>, <7>, <10>.
Node <4> is connected to nodes <2>, <3>, <6>.
Node <7> is connected to nodes <2>, <9>, <5>, <1>.
Node <10> is connected to nodes <2>, <0>, <5>, <6>.
Node <3> is connected to nodes <4>, <0>, <1>, <6>.
Node <6> is connected to nodes <4>, <8>, <3>, <0>, <10>.
Node <9> is connected to nodes <8>, <11>, <7>.
Node <8> is connected to nodes <9>, <6>, <0>.
Node <11> is connected to nodes <9>, <0>, <1>, <5>.
Node <0> is connected to nodes <8>, <3>, <11>, <1>, <10>, <6>.
Node <1> is connected to nodes <3>, <0>, <11>, <5>, <7>.
Node <5> is connected to nodes <11>, <10>, <1>, <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,24,False,"Start from node <9>, output a sequence of traversal in breadth-first search (BFS) order.","[<9>, <8>, <11>, <7>, <6>, <0>, <1>, <5>, <2>, <4>, <3>, <10>]","Let's run breadth-first search (BFS) step by step.
Visit node <9>. Unvisited neighbors of node <9> are [<8>, <11>, <7>].
Visit node <8>. Unvisited neighbors of node <8> are [<6>, <0>].
Visit node <11>. Unvisited neighbors of node <11> are [<1>, <5>].
Visit node <7>. Unvisited neighbors of node <7> are [<2>].
Visit node <6>. Unvisited neighbors of node <6> are [<4>, <3>, <10>].
Visit node <0>. 
Visit node <1>. 
Visit node <5>. 
Visit node <2>. 
Visit node <4>. 
Visit node <3>. 
Visit node <10>. 
So the BFS traversal is ","('[[<9>, <8>, <11>, <7>, <6>, <0>, <1>, <5>, <2>, <4>, <3>, <10>], [<9>, <2>, <5>, <8>, <1>, <11>, <6>, <10>, <0>, <7>, <3>, <4>], [<9>, <8>, <11>, <7>, <2>, <4>, <3>, <10>, <6>, <0>, <1>, <5>], [<9>, <8>, <11>, <7>, <6>, <0>, <1>, <4>, <5>, <2>, <10>, <3>]]',)",0,288
BFS,"[(<7>, <1>), (<7>, <13>), (<7>, <12>), (<7>, <5>), (<7>, <11>), (<7>, <10>), (<7>, <4>), (<7>, <3>), (<1>, <4>), (<13>, <0>), (<13>, <9>), (<13>, <8>), (<12>, <9>), (<5>, <3>), (<5>, <2>), (<11>, <10>), (<10>, <8>), (<3>, <8>), (<3>, <2>), (<0>, <9>), (<9>, <8>), (<9>, <6>), (<8>, <6>), (<8>, <2>)]","{<7>: [<1>, <13>, <12>, <5>, <11>, <10>, <4>, <3>],
<1>: [<7>, <4>],
<13>: [<7>, <0>, <9>, <8>],
<12>: [<7>, <9>],
<5>: [<7>, <3>, <2>],
<11>: [<7>, <10>],
<10>: [<7>, <8>, <11>],
<4>: [<7>, <1>],
<3>: [<7>, <8>, <5>, <2>],
<0>: [<13>, <9>],
<9>: [<13>, <12>, <8>, <0>, <6>],
<8>: [<13>, <9>, <6>, <10>, <3>, <2>],
<6>: [<8>, <9>],
<2>: [<8>, <5>, <3>]}","Node <7> is connected to nodes <1>, <13>, <12>, <5>, <11>, <10>, <4>, <3>.
Node <1> is connected to nodes <7>, <4>.
Node <13> is connected to nodes <7>, <0>, <9>, <8>.
Node <12> is connected to nodes <7>, <9>.
Node <5> is connected to nodes <7>, <3>, <2>.
Node <11> is connected to nodes <7>, <10>.
Node <10> is connected to nodes <7>, <8>, <11>.
Node <4> is connected to nodes <7>, <1>.
Node <3> is connected to nodes <7>, <8>, <5>, <2>.
Node <0> is connected to nodes <13>, <9>.
Node <9> is connected to nodes <13>, <12>, <8>, <0>, <6>.
Node <8> is connected to nodes <13>, <9>, <6>, <10>, <3>, <2>.
Node <6> is connected to nodes <8>, <9>.
Node <2> is connected to nodes <8>, <5>, <3>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,24,False,"Start from node <8>, output a sequence of traversal in breadth-first search (BFS) order.","[<8>, <13>, <9>, <6>, <10>, <3>, <2>, <7>, <0>, <12>, <11>, <5>, <1>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <8>. Unvisited neighbors of node <8> are [<13>, <9>, <6>, <10>, <3>, <2>].
Visit node <13>. Unvisited neighbors of node <13> are [<7>, <0>].
Visit node <9>. Unvisited neighbors of node <9> are [<12>].
Visit node <6>. 
Visit node <10>. Unvisited neighbors of node <10> are [<11>].
Visit node <3>. Unvisited neighbors of node <3> are [<5>].
Visit node <2>. 
Visit node <7>. Unvisited neighbors of node <7> are [<1>, <4>].
Visit node <0>. 
Visit node <12>. 
Visit node <11>. 
Visit node <5>. 
Visit node <1>. 
Visit node <4>. 
So the BFS traversal is ","('[[<8>, <13>, <9>, <6>, <11>, <5>, <1>, <4>, <10>, <3>, <2>, <7>, <0>, <12>], [<8>, <11>, <2>, <6>, <9>, <13>, <1>, <5>, <4>, <7>, <12>, <3>, <10>, <0>], [<8>, <13>, <9>, <6>, <10>, <3>, <2>, <5>, <12>, <0>, <1>, <11>, <4>, <7>], [<8>, <13>, <9>, <6>, <10>, <3>, <2>, <7>, <0>, <12>, <11>, <5>, <1>, <4>]]',)",3,289
BFS,"[(<1>, <6>), (<1>, <2>), (<1>, <5>), (<1>, <3>), (<3>, <7>), (<0>, <4>), (<0>, <8>), (<8>, <7>)]","{<1>: [<6>, <2>, <5>, <3>],
<6>: [<1>],
<2>: [<1>],
<5>: [<1>],
<3>: [<1>, <7>],
<0>: [<4>, <8>],
<4>: [<0>],
<8>: [<0>, <7>],
<7>: [<3>, <8>]}","Node <1> is connected to nodes <6>, <2>, <5>, <3>.
Node <6> is connected to node <1>.
Node <2> is connected to node <1>.
Node <5> is connected to node <1>.
Node <3> is connected to nodes <1>, <7>.
Node <0> is connected to nodes <4>, <8>.
Node <4> is connected to node <0>.
Node <8> is connected to nodes <0>, <7>.
Node <7> is connected to nodes <3>, <8>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,8,False,"Start from node <3>, output a sequence of traversal in breadth-first search (BFS) order.","[<3>, <1>, <7>, <6>, <2>, <5>, <8>, <0>, <4>]","Let's run breadth-first search (BFS) step by step.
Visit node <3>. Unvisited neighbors of node <3> are [<1>, <7>].
Visit node <1>. Unvisited neighbors of node <1> are [<6>, <2>, <5>].
Visit node <7>. Unvisited neighbors of node <7> are [<8>].
Visit node <6>. 
Visit node <2>. 
Visit node <5>. 
Visit node <8>. Unvisited neighbors of node <8> are [<0>].
Visit node <0>. Unvisited neighbors of node <0> are [<4>].
Visit node <4>. 
So the BFS traversal is ","('[[<3>, <1>, <7>, <8>, <0>, <4>, <6>, <2>, <5>], [<3>, <1>, <7>, <6>, <0>, <5>, <8>, <4>, <2>], [<3>, <1>, <7>, <6>, <2>, <5>, <8>, <0>, <4>], [<3>, <8>, <7>, <1>, <0>, <6>, <4>, <5>, <2>]]',)",2,290
BFS,"[(<3>, <14>), (<3>, <4>), (<3>, <7>), (<14>, <0>), (<14>, <1>), (<14>, <10>), (<14>, <2>), (<14>, <12>), (<14>, <13>), (<4>, <9>), (<4>, <0>), (<7>, <3>), (<7>, <11>), (<7>, <14>), (<11>, <9>), (<11>, <4>), (<11>, <3>), (<9>, <4>), (<9>, <5>), (<9>, <8>), (<5>, <6>), (<5>, <1>), (<5>, <7>), (<6>, <4>), (<1>, <3>), (<1>, <14>), (<2>, <8>), (<2>, <9>), (<8>, <4>), (<8>, <6>), (<8>, <12>), (<8>, <13>), (<8>, <14>), (<12>, <8>), (<12>, <0>), (<12>, <7>), (<12>, <10>), (<0>, <9>), (<10>, <5>), (<10>, <13>), (<10>, <8>), (<13>, <14>)]","{<3>: [<14>, <4>, <7>],
<14>: [<0>, <1>, <10>, <2>, <12>, <13>],
<4>: [<9>, <0>],
<7>: [<3>, <11>, <14>],
<11>: [<9>, <4>, <3>],
<9>: [<4>, <5>, <8>],
<5>: [<6>, <1>, <7>],
<6>: [<4>],
<1>: [<3>, <14>],
<2>: [<8>, <9>],
<8>: [<4>, <6>, <12>, <13>, <14>],
<12>: [<8>, <0>, <7>, <10>],
<0>: [<9>],
<10>: [<5>, <13>, <8>],
<13>: [<14>]}","Node <3> is connected to nodes <14>, <4>, <7>.
Node <14> is connected to nodes <0>, <1>, <10>, <2>, <12>, <13>.
Node <4> is connected to nodes <9>, <0>.
Node <7> is connected to nodes <3>, <11>, <14>.
Node <11> is connected to nodes <9>, <4>, <3>.
Node <9> is connected to nodes <4>, <5>, <8>.
Node <5> is connected to nodes <6>, <1>, <7>.
Node <6> is connected to node <4>.
Node <1> is connected to nodes <3>, <14>.
Node <2> is connected to nodes <8>, <9>.
Node <8> is connected to nodes <4>, <6>, <12>, <13>, <14>.
Node <12> is connected to nodes <8>, <0>, <7>, <10>.
Node <0> is connected to node <9>.
Node <10> is connected to nodes <5>, <13>, <8>.
Node <13> is connected to node <14>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,42,True,"Start from node <13>, output a sequence of traversal in breadth-first search (BFS) order.","[<13>, <14>, <0>, <1>, <10>, <2>, <12>, <9>, <3>, <5>, <8>, <7>, <4>, <6>, <11>]","Let's run breadth-first search (BFS) step by step.
Visit node <13>. Unvisited neighbors of node <13> are [<14>].
Visit node <14>. Unvisited neighbors of node <14> are [<0>, <1>, <10>, <2>, <12>].
Visit node <0>. Unvisited neighbors of node <0> are [<9>].
Visit node <1>. Unvisited neighbors of node <1> are [<3>].
Visit node <10>. Unvisited neighbors of node <10> are [<5>, <8>].
Visit node <2>. 
Visit node <12>. Unvisited neighbors of node <12> are [<7>].
Visit node <9>. Unvisited neighbors of node <9> are [<4>].
Visit node <3>. 
Visit node <5>. Unvisited neighbors of node <5> are [<6>].
Visit node <8>. 
Visit node <7>. Unvisited neighbors of node <7> are [<11>].
Visit node <4>. 
Visit node <6>. 
Visit node <11>. 
So the BFS traversal is ","('[[<13>, <14>, <0>, <1>, <10>, <8>, <7>, <4>, <6>, <11>, <2>, <12>, <9>, <3>, <5>], [<13>, <14>, <0>, <1>, <10>, <2>, <12>, <9>, <3>, <5>, <8>, <7>, <4>, <6>, <11>], [<13>, <4>, <10>, <6>, <8>, <5>, <12>, <9>, <14>, <7>, <2>, <0>, <3>, <11>, <1>], [<13>, <14>, <0>, <1>, <10>, <2>, <12>, <5>, <11>, <9>, <6>, <3>, <4>, <7>, <8>]]',)",1,291
BFS,"[(<1>, <3>), (<1>, <0>), (<1>, <2>), (<1>, <8>), (<0>, <5>), (<0>, <4>), (<0>, <7>), (<4>, <6>)]","{<1>: [<3>, <0>, <2>, <8>],
<3>: [<1>],
<0>: [<1>, <5>, <4>, <7>],
<2>: [<1>],
<8>: [<1>],
<5>: [<0>],
<4>: [<0>, <6>],
<7>: [<0>],
<6>: [<4>]}","Node <1> is connected to nodes <3>, <0>, <2>, <8>.
Node <3> is connected to node <1>.
Node <0> is connected to nodes <1>, <5>, <4>, <7>.
Node <2> is connected to node <1>.
Node <8> is connected to node <1>.
Node <5> is connected to node <0>.
Node <4> is connected to nodes <0>, <6>.
Node <7> is connected to node <0>.
Node <6> is connected to node <4>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,8,False,"Start from node <4>, output a sequence of traversal in breadth-first search (BFS) order.","[<4>, <0>, <6>, <1>, <5>, <7>, <3>, <2>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <4>. Unvisited neighbors of node <4> are [<0>, <6>].
Visit node <0>. Unvisited neighbors of node <0> are [<1>, <5>, <7>].
Visit node <6>. 
Visit node <1>. Unvisited neighbors of node <1> are [<3>, <2>, <8>].
Visit node <5>. 
Visit node <7>. 
Visit node <3>. 
Visit node <2>. 
Visit node <8>. 
So the BFS traversal is ","('[[<4>, <1>, <6>, <8>, <3>, <0>, <5>, <7>, <2>], [<4>, <0>, <6>, <1>, <5>, <7>, <3>, <2>, <8>], [<4>, <0>, <6>, <3>, <2>, <8>, <1>, <5>, <7>], [<4>, <0>, <6>, <1>, <5>, <8>, <7>, <2>, <3>]]',)",1,292
BFS,"[(<10>, <11>), (<10>, <3>), (<10>, <9>), (<10>, <2>), (<10>, <6>), (<11>, <3>), (<11>, <7>), (<11>, <0>), (<11>, <5>), (<11>, <8>), (<11>, <12>), (<11>, <13>), (<3>, <9>), (<3>, <7>), (<3>, <4>), (<3>, <8>), (<3>, <2>), (<3>, <12>), (<3>, <13>), (<9>, <4>), (<9>, <8>), (<9>, <12>), (<9>, <1>), (<9>, <13>), (<2>, <7>), (<2>, <0>), (<2>, <8>), (<2>, <6>), (<2>, <12>), (<6>, <7>), (<6>, <5>), (<6>, <13>), (<7>, <4>), (<7>, <1>), (<0>, <4>), (<0>, <5>), (<0>, <8>), (<0>, <1>), (<5>, <4>), (<8>, <12>), (<12>, <13>), (<13>, <4>)]","{<10>: [<11>, <3>, <9>, <2>, <6>],
<11>: [<10>, <3>, <7>, <0>, <5>, <8>, <12>, <13>],
<3>: [<10>, <11>, <9>, <7>, <4>, <8>, <2>, <12>, <13>],
<9>: [<10>, <3>, <4>, <8>, <12>, <1>, <13>],
<2>: [<10>, <3>, <7>, <0>, <8>, <6>, <12>],
<6>: [<10>, <7>, <5>, <2>, <13>],
<7>: [<11>, <3>, <4>, <2>, <6>, <1>],
<0>: [<11>, <4>, <5>, <8>, <2>, <1>],
<5>: [<11>, <0>, <4>, <6>],
<8>: [<11>, <3>, <9>, <0>, <2>, <12>],
<12>: [<11>, <3>, <9>, <8>, <2>, <13>],
<13>: [<11>, <3>, <9>, <4>, <6>, <12>],
<4>: [<3>, <9>, <7>, <0>, <5>, <13>],
<1>: [<9>, <7>, <0>]}","Node <10> is connected to nodes <11>, <3>, <9>, <2>, <6>.
Node <11> is connected to nodes <10>, <3>, <7>, <0>, <5>, <8>, <12>, <13>.
Node <3> is connected to nodes <10>, <11>, <9>, <7>, <4>, <8>, <2>, <12>, <13>.
Node <9> is connected to nodes <10>, <3>, <4>, <8>, <12>, <1>, <13>.
Node <2> is connected to nodes <10>, <3>, <7>, <0>, <8>, <6>, <12>.
Node <6> is connected to nodes <10>, <7>, <5>, <2>, <13>.
Node <7> is connected to nodes <11>, <3>, <4>, <2>, <6>, <1>.
Node <0> is connected to nodes <11>, <4>, <5>, <8>, <2>, <1>.
Node <5> is connected to nodes <11>, <0>, <4>, <6>.
Node <8> is connected to nodes <11>, <3>, <9>, <0>, <2>, <12>.
Node <12> is connected to nodes <11>, <3>, <9>, <8>, <2>, <13>.
Node <13> is connected to nodes <11>, <3>, <9>, <4>, <6>, <12>.
Node <4> is connected to nodes <3>, <9>, <7>, <0>, <5>, <13>.
Node <1> is connected to nodes <9>, <7>, <0>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>]",14,42,False,"Start from node <6>, output a sequence of traversal in breadth-first search (BFS) order.","[<6>, <10>, <7>, <5>, <2>, <13>, <11>, <3>, <9>, <4>, <1>, <0>, <8>, <12>]","Let's run breadth-first search (BFS) step by step.
Visit node <6>. Unvisited neighbors of node <6> are [<10>, <7>, <5>, <2>, <13>].
Visit node <10>. Unvisited neighbors of node <10> are [<11>, <3>, <9>].
Visit node <7>. Unvisited neighbors of node <7> are [<4>, <1>].
Visit node <5>. Unvisited neighbors of node <5> are [<0>].
Visit node <2>. Unvisited neighbors of node <2> are [<8>, <12>].
Visit node <13>. 
Visit node <11>. 
Visit node <3>. 
Visit node <9>. 
Visit node <4>. 
Visit node <1>. 
Visit node <0>. 
Visit node <8>. 
Visit node <12>. 
So the BFS traversal is ","('[[<6>, <0>, <12>, <1>, <2>, <4>, <10>, <3>, <8>, <13>, <5>, <9>, <11>, <7>], [<6>, <10>, <7>, <5>, <2>, <13>, <11>, <3>, <9>, <4>, <1>, <0>, <8>, <12>], [<6>, <10>, <7>, <5>, <1>, <0>, <8>, <12>, <2>, <13>, <11>, <3>, <9>, <4>], [<6>, <10>, <7>, <5>, <2>, <13>, <11>, <3>, <8>, <12>, <4>, <1>, <0>, <9>]]',)",1,293
BFS,"[(<1>, <2>), (<1>, <4>), (<2>, <10>), (<4>, <6>), (<4>, <7>), (<10>, <8>), (<6>, <5>), (<6>, <3>), (<7>, <11>), (<5>, <8>), (<5>, <0>), (<3>, <9>)]","{<1>: [<2>, <4>],
<2>: [<1>, <10>],
<4>: [<1>, <6>, <7>],
<10>: [<2>, <8>],
<6>: [<4>, <5>, <3>],
<7>: [<4>, <11>],
<5>: [<6>, <8>, <0>],
<3>: [<6>, <9>],
<8>: [<10>, <5>],
<0>: [<5>],
<9>: [<3>],
<11>: [<7>]}","Node <1> is connected to nodes <2>, <4>.
Node <2> is connected to nodes <1>, <10>.
Node <4> is connected to nodes <1>, <6>, <7>.
Node <10> is connected to nodes <2>, <8>.
Node <6> is connected to nodes <4>, <5>, <3>.
Node <7> is connected to nodes <4>, <11>.
Node <5> is connected to nodes <6>, <8>, <0>.
Node <3> is connected to nodes <6>, <9>.
Node <8> is connected to nodes <10>, <5>.
Node <0> is connected to node <5>.
Node <9> is connected to node <3>.
Node <11> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>]",12,12,False,"Start from node <7>, output a sequence of traversal in breadth-first search (BFS) order.","[<7>, <4>, <11>, <1>, <6>, <2>, <5>, <3>, <10>, <8>, <0>, <9>]","Let's run breadth-first search (BFS) step by step.
Visit node <7>. Unvisited neighbors of node <7> are [<4>, <11>].
Visit node <4>. Unvisited neighbors of node <4> are [<1>, <6>].
Visit node <11>. 
Visit node <1>. Unvisited neighbors of node <1> are [<2>].
Visit node <6>. Unvisited neighbors of node <6> are [<5>, <3>].
Visit node <2>. Unvisited neighbors of node <2> are [<10>].
Visit node <5>. Unvisited neighbors of node <5> are [<8>, <0>].
Visit node <3>. Unvisited neighbors of node <3> are [<9>].
Visit node <10>. 
Visit node <8>. 
Visit node <0>. 
Visit node <9>. 
So the BFS traversal is ","('[[<7>, <4>, <11>, <1>, <10>, <8>, <0>, <9>, <6>, <2>, <5>, <3>], [<7>, <4>, <11>, <1>, <6>, <2>, <5>, <3>, <10>, <8>, <0>, <9>], [<7>, <3>, <8>, <4>, <10>, <6>, <1>, <5>, <11>, <9>, <0>, <2>], [<7>, <4>, <11>, <1>, <6>, <2>, <5>, <9>, <3>, <0>, <10>, <8>]]',)",1,294
BFS,"[(<4>, <2>), (<4>, <6>), (<4>, <5>), (<2>, <0>), (<2>, <7>), (<6>, <7>), (<0>, <3>), (<7>, <1>), (<8>, <3>)]","{<4>: [<2>, <6>, <5>],
<2>: [<4>, <0>, <7>],
<6>: [<4>, <7>],
<5>: [<4>],
<0>: [<2>, <3>],
<7>: [<2>, <6>, <1>],
<8>: [<3>],
<3>: [<8>, <0>],
<1>: [<7>]}","Node <4> is connected to nodes <2>, <6>, <5>.
Node <2> is connected to nodes <4>, <0>, <7>.
Node <6> is connected to nodes <4>, <7>.
Node <5> is connected to node <4>.
Node <0> is connected to nodes <2>, <3>.
Node <7> is connected to nodes <2>, <6>, <1>.
Node <8> is connected to node <3>.
Node <3> is connected to nodes <8>, <0>.
Node <1> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <4>, <0>, <7>, <6>, <5>, <3>, <1>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<4>, <0>, <7>].
Visit node <4>. Unvisited neighbors of node <4> are [<6>, <5>].
Visit node <0>. Unvisited neighbors of node <0> are [<3>].
Visit node <7>. Unvisited neighbors of node <7> are [<1>].
Visit node <6>. 
Visit node <5>. 
Visit node <3>. Unvisited neighbors of node <3> are [<8>].
Visit node <1>. 
Visit node <8>. 
So the BFS traversal is ","('[[<2>, <4>, <0>, <7>, <3>, <6>, <1>, <8>, <5>], [<2>, <4>, <0>, <7>, <6>, <5>, <3>, <1>, <8>], [<2>, <4>, <0>, <3>, <1>, <8>, <7>, <6>, <5>], [<2>, <6>, <5>, <1>, <3>, <8>, <7>, <4>, <0>]]',)",1,295
BFS,"[(<3>, <4>), (<3>, <8>), (<3>, <7>), (<7>, <6>), (<7>, <0>), (<5>, <1>), (<5>, <6>), (<1>, <2>), (<1>, <6>)]","{<3>: [<4>, <8>, <7>],
<4>: [<3>],
<8>: [<3>],
<7>: [<3>, <6>, <0>],
<5>: [<1>, <6>],
<1>: [<5>, <2>, <6>],
<6>: [<5>, <1>, <7>],
<2>: [<1>],
<0>: [<7>]}","Node <3> is connected to nodes <4>, <8>, <7>.
Node <4> is connected to node <3>.
Node <8> is connected to node <3>.
Node <7> is connected to nodes <3>, <6>, <0>.
Node <5> is connected to nodes <1>, <6>.
Node <1> is connected to nodes <5>, <2>, <6>.
Node <6> is connected to nodes <5>, <1>, <7>.
Node <2> is connected to node <1>.
Node <0> is connected to node <7>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]",9,9,False,"Start from node <2>, output a sequence of traversal in breadth-first search (BFS) order.","[<2>, <1>, <5>, <6>, <7>, <3>, <0>, <4>, <8>]","Let's run breadth-first search (BFS) step by step.
Visit node <2>. Unvisited neighbors of node <2> are [<1>].
Visit node <1>. Unvisited neighbors of node <1> are [<5>, <6>].
Visit node <5>. 
Visit node <6>. Unvisited neighbors of node <6> are [<7>].
Visit node <7>. Unvisited neighbors of node <7> are [<3>, <0>].
Visit node <3>. Unvisited neighbors of node <3> are [<4>, <8>].
Visit node <0>. 
Visit node <4>. 
Visit node <8>. 
So the BFS traversal is ","('[[<2>, <1>, <5>, <6>, <3>, <8>, <4>, <7>, <0>], [<2>, <1>, <5>, <6>, <7>, <3>, <0>, <4>, <8>], [<2>, <1>, <5>, <0>, <4>, <8>, <6>, <7>, <3>], [<2>, <4>, <3>, <0>, <5>, <6>, <8>, <7>, <1>]]',)",1,296
BFS,"[(<4>, <11>), (<4>, <5>), (<4>, <6>), (<4>, <12>), (<4>, <10>), (<4>, <1>), (<4>, <2>), (<4>, <9>), (<11>, <7>), (<11>, <6>), (<11>, <8>), (<5>, <10>), (<5>, <7>), (<5>, <9>), (<6>, <10>), (<6>, <9>), (<6>, <0>), (<6>, <12>), (<12>, <3>), (<12>, <8>), (<10>, <1>), (<10>, <0>), (<10>, <7>), (<10>, <3>), (<10>, <8>), (<1>, <9>), (<2>, <7>), (<2>, <9>), (<2>, <3>), (<9>, <7>), (<9>, <0>), (<9>, <8>), (<7>, <0>), (<8>, <0>), (<8>, <3>), (<0>, <3>)]","{<4>: [<11>, <5>, <6>, <12>, <10>, <1>, <2>, <9>],
<11>: [<4>, <7>, <6>, <8>],
<5>: [<4>, <10>, <7>, <9>],
<6>: [<4>, <11>, <10>, <9>, <0>, <12>],
<12>: [<4>, <6>, <3>, <8>],
<10>: [<4>, <1>, <0>, <7>, <6>, <3>, <8>, <5>],
<1>: [<4>, <10>, <9>],
<2>: [<4>, <7>, <9>, <3>],
<9>: [<4>, <1>, <5>, <7>, <0>, <6>, <8>, <2>],
<7>: [<11>, <10>, <5>, <9>, <0>, <2>],
<8>: [<11>, <10>, <9>, <0>, <12>, <3>],
<0>: [<10>, <7>, <9>, <8>, <3>, <6>],
<3>: [<10>, <0>, <12>, <8>, <2>]}","Node <4> is connected to nodes <11>, <5>, <6>, <12>, <10>, <1>, <2>, <9>.
Node <11> is connected to nodes <4>, <7>, <6>, <8>.
Node <5> is connected to nodes <4>, <10>, <7>, <9>.
Node <6> is connected to nodes <4>, <11>, <10>, <9>, <0>, <12>.
Node <12> is connected to nodes <4>, <6>, <3>, <8>.
Node <10> is connected to nodes <4>, <1>, <0>, <7>, <6>, <3>, <8>, <5>.
Node <1> is connected to nodes <4>, <10>, <9>.
Node <2> is connected to nodes <4>, <7>, <9>, <3>.
Node <9> is connected to nodes <4>, <1>, <5>, <7>, <0>, <6>, <8>, <2>.
Node <7> is connected to nodes <11>, <10>, <5>, <9>, <0>, <2>.
Node <8> is connected to nodes <11>, <10>, <9>, <0>, <12>, <3>.
Node <0> is connected to nodes <10>, <7>, <9>, <8>, <3>, <6>.
Node <3> is connected to nodes <10>, <0>, <12>, <8>, <2>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>]",13,36,False,"Start from node <11>, output a sequence of traversal in breadth-first search (BFS) order.","[<11>, <4>, <7>, <6>, <8>, <5>, <12>, <10>, <1>, <2>, <9>, <0>, <3>]","Let's run breadth-first search (BFS) step by step.
Visit node <11>. Unvisited neighbors of node <11> are [<4>, <7>, <6>, <8>].
Visit node <4>. Unvisited neighbors of node <4> are [<5>, <12>, <10>, <1>, <2>, <9>].
Visit node <7>. Unvisited neighbors of node <7> are [<0>].
Visit node <6>. 
Visit node <8>. Unvisited neighbors of node <8> are [<3>].
Visit node <5>. 
Visit node <12>. 
Visit node <10>. 
Visit node <1>. 
Visit node <2>. 
Visit node <9>. 
Visit node <0>. 
Visit node <3>. 
So the BFS traversal is ","('[[<11>, <4>, <7>, <6>, <8>, <5>, <12>, <10>, <1>, <2>, <9>, <0>, <3>], [<11>, <4>, <7>, <6>, <2>, <9>, <0>, <3>, <8>, <5>, <12>, <10>, <1>], [<11>, <4>, <7>, <6>, <8>, <5>, <10>, <0>, <1>, <9>, <3>, <12>, <2>], [<11>, <3>, <1>, <4>, <6>, <9>, <2>, <10>, <8>, <5>, <7>, <12>, <0>]]',)",0,297
BFS,"[(<7>, <5>), (<7>, <0>), (<7>, <6>), (<5>, <3>), (<5>, <1>), (<0>, <4>), (<0>, <9>), (<6>, <10>), (<3>, <4>), (<1>, <2>), (<9>, <8>)]","{<7>: [<5>, <0>, <6>],
<5>: [<7>, <3>, <1>],
<0>: [<7>, <4>, <9>],
<6>: [<7>, <10>],
<3>: [<5>, <4>],
<1>: [<5>, <2>],
<2>: [<1>],
<10>: [<6>],
<4>: [<0>, <3>],
<9>: [<0>, <8>],
<8>: [<9>]}","Node <7> is connected to nodes <5>, <0>, <6>.
Node <5> is connected to nodes <7>, <3>, <1>.
Node <0> is connected to nodes <7>, <4>, <9>.
Node <6> is connected to nodes <7>, <10>.
Node <3> is connected to nodes <5>, <4>.
Node <1> is connected to nodes <5>, <2>.
Node <2> is connected to node <1>.
Node <10> is connected to node <6>.
Node <4> is connected to nodes <0>, <3>.
Node <9> is connected to nodes <0>, <8>.
Node <8> is connected to node <9>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]",11,11,False,"Start from node <0>, output a sequence of traversal in breadth-first search (BFS) order.","[<0>, <7>, <4>, <9>, <5>, <6>, <3>, <8>, <1>, <10>, <2>]","Let's run breadth-first search (BFS) step by step.
Visit node <0>. Unvisited neighbors of node <0> are [<7>, <4>, <9>].
Visit node <7>. Unvisited neighbors of node <7> are [<5>, <6>].
Visit node <4>. Unvisited neighbors of node <4> are [<3>].
Visit node <9>. Unvisited neighbors of node <9> are [<8>].
Visit node <5>. Unvisited neighbors of node <5> are [<1>].
Visit node <6>. Unvisited neighbors of node <6> are [<10>].
Visit node <3>. 
Visit node <8>. 
Visit node <1>. Unvisited neighbors of node <1> are [<2>].
Visit node <10>. 
Visit node <2>. 
So the BFS traversal is ","('[[<0>, <9>, <6>, <1>, <2>, <7>, <4>, <10>, <5>, <3>, <8>], [<0>, <7>, <4>, <9>, <5>, <6>, <3>, <8>, <1>, <10>, <2>], [<0>, <7>, <4>, <1>, <10>, <2>, <9>, <5>, <6>, <3>, <8>], [<0>, <7>, <4>, <9>, <5>, <8>, <6>, <1>, <3>, <2>, <10>]]',)",1,298
BFS,"[(<10>, <6>), (<10>, <13>), (<10>, <9>), (<10>, <0>), (<10>, <14>), (<9>, <4>), (<9>, <8>), (<9>, <5>), (<0>, <2>), (<0>, <7>), (<0>, <3>), (<0>, <12>), (<14>, <11>), (<11>, <1>)]","{<10>: [<6>, <13>, <9>, <0>, <14>],
<6>: [<10>],
<13>: [<10>],
<9>: [<10>, <4>, <8>, <5>],
<0>: [<10>, <2>, <7>, <3>, <12>],
<14>: [<10>, <11>],
<2>: [<0>],
<7>: [<0>],
<3>: [<0>],
<12>: [<0>],
<4>: [<9>],
<8>: [<9>],
<5>: [<9>],
<11>: [<1>, <14>],
<1>: [<11>]}","Node <10> is connected to nodes <6>, <13>, <9>, <0>, <14>.
Node <6> is connected to node <10>.
Node <13> is connected to node <10>.
Node <9> is connected to nodes <10>, <4>, <8>, <5>.
Node <0> is connected to nodes <10>, <2>, <7>, <3>, <12>.
Node <14> is connected to nodes <10>, <11>.
Node <2> is connected to node <0>.
Node <7> is connected to node <0>.
Node <3> is connected to node <0>.
Node <12> is connected to node <0>.
Node <4> is connected to node <9>.
Node <8> is connected to node <9>.
Node <5> is connected to node <9>.
Node <11> is connected to nodes <1>, <14>.
Node <1> is connected to node <11>.","[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]",15,14,False,"Start from node <10>, output a sequence of traversal in breadth-first search (BFS) order.","[<10>, <6>, <13>, <9>, <0>, <14>, <4>, <8>, <5>, <2>, <7>, <3>, <12>, <11>, <1>]","Let's run breadth-first search (BFS) step by step.
Visit node <10>. Unvisited neighbors of node <10> are [<6>, <13>, <9>, <0>, <14>].
Visit node <6>. 
Visit node <13>. 
Visit node <9>. Unvisited neighbors of node <9> are [<4>, <8>, <5>].
Visit node <0>. Unvisited neighbors of node <0> are [<2>, <7>, <3>, <12>].
Visit node <14>. Unvisited neighbors of node <14> are [<11>].
Visit node <4>. 
Visit node <8>. 
Visit node <5>. 
Visit node <2>. 
Visit node <7>. 
Visit node <3>. 
Visit node <12>. 
Visit node <11>. Unvisited neighbors of node <11> are [<1>].
Visit node <1>. 
So the BFS traversal is ","('[[<10>, <9>, <2>, <8>, <3>, <12>, <4>, <11>, <7>, <0>, <6>, <1>, <5>, <14>, <13>], [<10>, <6>, <13>, <9>, <0>, <14>, <4>, <8>, <3>, <7>, <5>, <2>, <12>, <1>, <11>], [<10>, <6>, <13>, <9>, <0>, <7>, <3>, <12>, <11>, <1>, <14>, <4>, <8>, <5>, <2>], [<10>, <6>, <13>, <9>, <0>, <14>, <4>, <8>, <5>, <2>, <7>, <3>, <12>, <11>, <1>]]',)",3,299
