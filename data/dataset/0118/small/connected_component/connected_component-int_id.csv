task,graph,graph_adj,graph_nl,nodes,num_nodes,num_edges,directed,question,answer,steps,cc_node_ratio,id
connected_component,"[(6, 2), (2, 6), (2, 5), (3, 4), (3, 5), (3, 7), (3, 6), (5, 0), (5, 3), (7, 1), (7, 3), (7, 4), (0, 6), (0, 7), (1, 3), (1, 7)]","{6: [2],
2: [6, 5],
3: [4, 5, 7, 6],
4: [],
5: [0, 3],
7: [1, 3, 4],
0: [6, 7],
1: [3, 7]}","Node 6 is connected to node 2.
Node 2 is connected to nodes 6, 5.
Node 3 is connected to nodes 4, 5, 7, 6.
Node 5 is connected to nodes 0, 3.
Node 7 is connected to nodes 1, 3, 4.
Node 0 is connected to nodes 6, 7.
Node 1 is connected to nodes 3, 7.","[0, 1, 2, 3, 4, 5, 6, 7]",8,16,True,Find the strongly connected component containing node 1. ,"[7, 2, 6, 0, 5, 3, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 7.
Search from node 7.
Node 1 is a root node, find a new strongly connected component: [7, 2, 6, 0, 5, 3, 1].
So the strongly connected component containing node 1 is ",0.875,0
connected_component,"[(1, 2), (1, 7), (1, 6), (1, 4), (2, 9), (2, 8), (2, 1), (7, 0), (7, 1), (6, 4), (6, 5), (9, 3), (9, 8), (9, 4), (8, 4), (0, 7), (3, 6), (3, 1), (5, 4), (5, 2), (5, 3)]","{1: [2, 7, 6, 4],
2: [9, 8, 1],
7: [0, 1],
6: [4, 5],
4: [],
9: [3, 8, 4],
8: [4],
0: [7],
3: [6, 1],
5: [4, 2, 3]}","Node 1 is connected to nodes 2, 7, 6, 4.
Node 2 is connected to nodes 9, 8, 1.
Node 7 is connected to nodes 0, 1.
Node 6 is connected to nodes 4, 5.
Node 9 is connected to nodes 3, 8, 4.
Node 8 is connected to node 4.
Node 0 is connected to node 7.
Node 3 is connected to nodes 6, 1.
Node 5 is connected to nodes 4, 2, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,21,True,Find the strongly connected component containing node 6. ,"[0, 7, 1, 3, 9, 2, 5, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 0.
Search from node 0.
Node 6 is a root node, find a new strongly connected component: [0, 7, 1, 3, 9, 2, 5, 6].
So the strongly connected component containing node 6 is ",0.8,1
connected_component,"[(6, 8), (6, 7), (8, 4), (7, 8), (5, 3), (5, 1), (5, 2), (5, 6), (3, 4), (3, 6), (3, 5), (1, 6), (1, 5), (1, 8), (2, 5), (4, 5), (4, 3), (0, 8), (0, 3), (0, 4), (0, 2)]","{6: [8, 7],
8: [4],
7: [8],
5: [3, 1, 2, 6],
3: [4, 6, 5],
1: [6, 5, 8],
2: [5],
4: [5, 3],
0: [8, 3, 4, 2]}","Node 6 is connected to nodes 8, 7.
Node 8 is connected to node 4.
Node 7 is connected to node 8.
Node 5 is connected to nodes 3, 1, 2, 6.
Node 3 is connected to nodes 4, 6, 5.
Node 1 is connected to nodes 6, 5, 8.
Node 2 is connected to node 5.
Node 4 is connected to nodes 5, 3.
Node 0 is connected to nodes 8, 3, 4, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,21,True,Find the strongly connected component containing node 0. ,[0],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Node 8 is a root node, find a new strongly connected component: [2, 7, 6, 1, 5, 3, 4, 8].
Node 0 is a root node, find a new strongly connected component: [0].
So the strongly connected component containing node 0 is ",0.1111111111111111,2
connected_component,"[(10, 7), (10, 14), (10, 13), (10, 4), (10, 11), (7, 13), (7, 11), (7, 6), (7, 1), (14, 8), (14, 0), (13, 6), (13, 7), (13, 0), (4, 11), (4, 6), (4, 1), (4, 8), (4, 5), (11, 5), (11, 4), (2, 6), (2, 0), (2, 13), (2, 4), (6, 5), (6, 11), (6, 10), (0, 14), (0, 13), (5, 1), (5, 9), (1, 0), (1, 13), (1, 4), (3, 14), (3, 4), (3, 11), (3, 10), (8, 0), (8, 14), (8, 13), (8, 6), (8, 1), (8, 7), (12, 4), (12, 11), (12, 2), (12, 1), (9, 6)]","{10: [7, 14, 13, 4, 11],
7: [13, 11, 6, 1],
14: [8, 0],
13: [6, 7, 0],
4: [11, 6, 1, 8, 5],
11: [5, 4],
2: [6, 0, 13, 4],
6: [5, 11, 10],
0: [14, 13],
5: [1, 9],
1: [0, 13, 4],
3: [14, 4, 11, 10],
8: [0, 14, 13, 6, 1, 7],
12: [4, 11, 2, 1],
9: [6]}","Node 10 is connected to nodes 7, 14, 13, 4, 11.
Node 7 is connected to nodes 13, 11, 6, 1.
Node 14 is connected to nodes 8, 0.
Node 13 is connected to nodes 6, 7, 0.
Node 4 is connected to nodes 11, 6, 1, 8, 5.
Node 11 is connected to nodes 5, 4.
Node 2 is connected to nodes 6, 0, 13, 4.
Node 6 is connected to nodes 5, 11, 10.
Node 0 is connected to nodes 14, 13.
Node 5 is connected to nodes 1, 9.
Node 1 is connected to nodes 0, 13, 4.
Node 3 is connected to nodes 14, 4, 11, 10.
Node 8 is connected to nodes 0, 14, 13, 6, 1, 7.
Node 12 is connected to nodes 4, 11, 2, 1.
Node 9 is connected to node 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,50,True,Find the strongly connected component containing node 14. ,"[7, 11, 9, 5, 1, 4, 10, 6, 13, 0, 8, 14]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 14.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 7.
Search from node 7.
Node 14 is a root node, find a new strongly connected component: [7, 11, 9, 5, 1, 4, 10, 6, 13, 0, 8, 14].
So the strongly connected component containing node 14 is ",0.8,3
connected_component,"[(8, 0), (8, 5), (8, 6), (6, 5), (1, 4), (1, 0), (1, 8), (4, 2), (4, 3), (2, 5), (2, 8), (2, 4), (2, 0), (3, 7), (3, 9), (3, 4), (7, 5), (9, 8), (9, 1), (9, 4), (9, 2), (9, 7)]","{8: [0, 5, 6],
0: [],
5: [],
6: [5],
1: [4, 0, 8],
4: [2, 3],
2: [5, 8, 4, 0],
3: [7, 9, 4],
7: [5],
9: [8, 1, 4, 2, 7]}","Node 8 is connected to nodes 0, 5, 6.
Node 6 is connected to node 5.
Node 1 is connected to nodes 4, 0, 8.
Node 4 is connected to nodes 2, 3.
Node 2 is connected to nodes 5, 8, 4, 0.
Node 3 is connected to nodes 7, 9, 4.
Node 7 is connected to node 5.
Node 9 is connected to nodes 8, 1, 4, 2, 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,22,True,Find the strongly connected component containing node 5. ,[5],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
So the strongly connected component containing node 5 is ",0.1,4
connected_component,"[(6, 1), (6, 2), (6, 3), (6, 0), (1, 3), (2, 9), (3, 1), (0, 9), (0, 2), (14, 12), (14, 3), (14, 8), (14, 6), (12, 4), (12, 3), (12, 13), (12, 11), (10, 7), (7, 3), (7, 11), (7, 6), (11, 9), (4, 9), (4, 14), (13, 0), (13, 10), (5, 14), (9, 13), (9, 6), (9, 14)]","{6: [1, 2, 3, 0],
1: [3],
2: [9],
3: [1],
0: [9, 2],
14: [12, 3, 8, 6],
12: [4, 3, 13, 11],
8: [],
10: [7],
7: [3, 11, 6],
11: [9],
4: [9, 14],
13: [0, 10],
5: [14],
9: [13, 6, 14]}","Node 6 is connected to nodes 1, 2, 3, 0.
Node 1 is connected to node 3.
Node 2 is connected to node 9.
Node 3 is connected to node 1.
Node 0 is connected to nodes 9, 2.
Node 14 is connected to nodes 12, 3, 8, 6.
Node 12 is connected to nodes 4, 3, 13, 11.
Node 10 is connected to node 7.
Node 7 is connected to nodes 3, 11, 6.
Node 11 is connected to node 9.
Node 4 is connected to nodes 9, 14.
Node 13 is connected to nodes 0, 10.
Node 5 is connected to node 14.
Node 9 is connected to nodes 13, 6, 14.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,30,True,Find the strongly connected component containing node 13. ,"[7, 10, 4, 11, 12, 14, 2, 6, 9, 0, 13]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 13.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Node 1 is a root node, find a new strongly connected component: [3, 1].
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 14.
Search from node 14.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 7.
Search from node 7.
Node 13 is a root node, find a new strongly connected component: [7, 10, 4, 11, 12, 14, 2, 6, 9, 0, 13].
So the strongly connected component containing node 13 is ",0.7333333333333333,5
connected_component,"[(7, 3), (7, 1), (7, 0), (3, 2), (3, 7), (1, 2), (1, 7), (0, 2), (0, 1), (8, 6), (8, 3), (8, 0), (6, 2), (6, 8), (2, 5), (5, 2), (5, 7), (5, 6), (4, 7), (4, 8), (4, 2)]","{7: [3, 1, 0],
3: [2, 7],
1: [2, 7],
0: [2, 1],
8: [6, 3, 0],
6: [2, 8],
2: [5],
5: [2, 7, 6],
4: [7, 8, 2]}","Node 7 is connected to nodes 3, 1, 0.
Node 3 is connected to nodes 2, 7.
Node 1 is connected to nodes 2, 7.
Node 0 is connected to nodes 2, 1.
Node 8 is connected to nodes 6, 3, 0.
Node 6 is connected to nodes 2, 8.
Node 2 is connected to node 5.
Node 5 is connected to nodes 2, 7, 6.
Node 4 is connected to nodes 7, 8, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,21,True,Find the strongly connected component containing node 2. ,"[3, 7, 1, 0, 8, 6, 5, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 3.
Search from node 3.
Node 2 is a root node, find a new strongly connected component: [3, 7, 1, 0, 8, 6, 5, 2].
So the strongly connected component containing node 2 is ",0.8888888888888888,6
connected_component,"[(10, 2), (10, 7), (10, 0), (10, 11), (2, 7), (2, 6), (2, 11), (2, 10), (7, 5), (7, 6), (7, 10), (7, 2), (0, 11), (0, 1), (0, 8), (11, 2), (11, 7), (6, 2), (6, 9), (9, 2), (5, 6), (5, 11), (1, 3), (1, 5), (1, 6), (3, 5), (3, 6), (3, 9), (3, 1), (3, 0), (8, 11), (8, 9), (4, 0)]","{10: [2, 7, 0, 11],
2: [7, 6, 11, 10],
7: [5, 6, 10, 2],
0: [11, 1, 8],
11: [2, 7],
6: [2, 9],
9: [2],
5: [6, 11],
1: [3, 5, 6],
3: [5, 6, 9, 1, 0],
8: [11, 9],
4: [0]}","Node 10 is connected to nodes 2, 7, 0, 11.
Node 2 is connected to nodes 7, 6, 11, 10.
Node 7 is connected to nodes 5, 6, 10, 2.
Node 0 is connected to nodes 11, 1, 8.
Node 11 is connected to nodes 2, 7.
Node 6 is connected to nodes 2, 9.
Node 9 is connected to node 2.
Node 5 is connected to nodes 6, 11.
Node 1 is connected to nodes 3, 5, 6.
Node 3 is connected to nodes 5, 6, 9, 1, 0.
Node 8 is connected to nodes 11, 9.
Node 4 is connected to node 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,33,True,Find the strongly connected component containing node 4. ,[4],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Node 0 is a root node, find a new strongly connected component: [3, 1, 6, 5, 7, 11, 10, 2, 9, 8, 0].
Node 4 is a root node, find a new strongly connected component: [4].
So the strongly connected component containing node 4 is ",0.0833333333333333,7
connected_component,"[(6, 5), (5, 0), (5, 9), (0, 9), (10, 11), (10, 1), (11, 7), (1, 2), (1, 4), (7, 3), (3, 2), (4, 8)]","{6: [5],
5: [6, 0, 9],
0: [5, 9],
9: [5, 0],
10: [11, 1],
11: [10, 7],
1: [10, 2, 4],
7: [11, 3],
3: [7, 2],
2: [3, 1],
4: [8, 1],
8: [4]}","Node 6 is connected to node 5.
Node 5 is connected to nodes 6, 0, 9.
Node 0 is connected to nodes 5, 9.
Node 9 is connected to nodes 5, 0.
Node 10 is connected to nodes 11, 1.
Node 11 is connected to nodes 10, 7.
Node 1 is connected to nodes 10, 2, 4.
Node 7 is connected to nodes 11, 3.
Node 3 is connected to nodes 7, 2.
Node 2 is connected to nodes 3, 1.
Node 4 is connected to nodes 8, 1.
Node 8 is connected to node 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,12,False,Find the connected component containing node 6. ,"[6, 5, 9, 0]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 6, add it to the connected component. The current connected component is [6].
Visit node 5, add it to the connected component. The current connected component is [6, 5].
Visit node 9, add it to the connected component. The current connected component is [6, 5, 9].
Visit node 0, add it to the connected component. The current connected component is [6, 5, 9, 0].
Thus, the connected component containing node 6 is ",0.3333333333333333,8
connected_component,"[(4, 5), (4, 2), (4, 1), (4, 9), (5, 3), (5, 0), (5, 9), (2, 10), (2, 0), (2, 9), (1, 6), (1, 9), (9, 8), (9, 10), (9, 0), (9, 7), (3, 7), (3, 10), (0, 6), (0, 8), (6, 10), (10, 8), (10, 7), (7, 8)]","{4: [5, 2, 1, 9],
5: [4, 3, 0, 9],
2: [4, 10, 0, 9],
1: [4, 6, 9],
9: [4, 5, 1, 8, 10, 0, 7, 2],
3: [5, 7, 10],
0: [5, 6, 8, 2, 9],
6: [1, 10, 0],
10: [6, 3, 8, 7, 2, 9],
7: [3, 8, 10, 9],
8: [10, 0, 7, 9]}","Node 4 is connected to nodes 5, 2, 1, 9.
Node 5 is connected to nodes 4, 3, 0, 9.
Node 2 is connected to nodes 4, 10, 0, 9.
Node 1 is connected to nodes 4, 6, 9.
Node 9 is connected to nodes 4, 5, 1, 8, 10, 0, 7, 2.
Node 3 is connected to nodes 5, 7, 10.
Node 0 is connected to nodes 5, 6, 8, 2, 9.
Node 6 is connected to nodes 1, 10, 0.
Node 10 is connected to nodes 6, 3, 8, 7, 2, 9.
Node 7 is connected to nodes 3, 8, 10, 9.
Node 8 is connected to nodes 10, 0, 7, 9.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,24,False,Find the connected component containing node 1. ,"[1, 6, 10, 9, 8, 7, 3, 5, 4, 2, 0]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 1, add it to the connected component. The current connected component is [1].
Visit node 6, add it to the connected component. The current connected component is [1, 6].
Visit node 10, add it to the connected component. The current connected component is [1, 6, 10].
Visit node 9, add it to the connected component. The current connected component is [1, 6, 10, 9].
Visit node 8, add it to the connected component. The current connected component is [1, 6, 10, 9, 8].
Visit node 7, add it to the connected component. The current connected component is [1, 6, 10, 9, 8, 7].
Visit node 3, add it to the connected component. The current connected component is [1, 6, 10, 9, 8, 7, 3].
Visit node 5, add it to the connected component. The current connected component is [1, 6, 10, 9, 8, 7, 3, 5].
Visit node 4, add it to the connected component. The current connected component is [1, 6, 10, 9, 8, 7, 3, 5, 4].
Visit node 2, add it to the connected component. The current connected component is [1, 6, 10, 9, 8, 7, 3, 5, 4, 2].
Visit node 0, add it to the connected component. The current connected component is [1, 6, 10, 9, 8, 7, 3, 5, 4, 2, 0].
Thus, the connected component containing node 1 is ",1.0,9
connected_component,"[(4, 5), (4, 11), (4, 9), (5, 9), (11, 3), (6, 2), (6, 8), (8, 1), (8, 7), (1, 0), (7, 0), (7, 10)]","{4: [5, 11, 9],
5: [4, 9],
11: [4, 3],
9: [4, 5],
3: [11],
6: [2, 8],
2: [6],
8: [6, 1, 7],
1: [8, 0],
7: [8, 0, 10],
0: [7, 1],
10: [7]}","Node 4 is connected to nodes 5, 11, 9.
Node 5 is connected to nodes 4, 9.
Node 11 is connected to nodes 4, 3.
Node 9 is connected to nodes 4, 5.
Node 3 is connected to node 11.
Node 6 is connected to nodes 2, 8.
Node 2 is connected to node 6.
Node 8 is connected to nodes 6, 1, 7.
Node 1 is connected to nodes 8, 0.
Node 7 is connected to nodes 8, 0, 10.
Node 0 is connected to nodes 7, 1.
Node 10 is connected to node 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,12,False,Find the connected component containing node 9. ,"[9, 5, 4, 11, 3]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 9, add it to the connected component. The current connected component is [9].
Visit node 5, add it to the connected component. The current connected component is [9, 5].
Visit node 4, add it to the connected component. The current connected component is [9, 5, 4].
Visit node 11, add it to the connected component. The current connected component is [9, 5, 4, 11].
Visit node 3, add it to the connected component. The current connected component is [9, 5, 4, 11, 3].
Thus, the connected component containing node 9 is ",0.4166666666666667,10
connected_component,"[(4, 0), (4, 7), (0, 7), (0, 5), (0, 2), (0, 3), (7, 1), (7, 5), (7, 3), (5, 3), (5, 6), (5, 0), (5, 1), (2, 1), (3, 6), (3, 7), (3, 2), (1, 2), (1, 6), (1, 0), (6, 0), (6, 5), (6, 3)]","{4: [0, 7],
0: [7, 5, 2, 3],
7: [1, 5, 3],
5: [3, 6, 0, 1],
2: [1],
3: [6, 7, 2],
1: [2, 6, 0],
6: [0, 5, 3]}","Node 4 is connected to nodes 0, 7.
Node 0 is connected to nodes 7, 5, 2, 3.
Node 7 is connected to nodes 1, 5, 3.
Node 5 is connected to nodes 3, 6, 0, 1.
Node 2 is connected to node 1.
Node 3 is connected to nodes 6, 7, 2.
Node 1 is connected to nodes 2, 6, 0.
Node 6 is connected to nodes 0, 5, 3.","[0, 1, 2, 3, 4, 5, 6, 7]",8,23,True,Find the strongly connected component containing node 5. ,"[7, 3, 6, 1, 2, 0, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Node 5 is a root node, find a new strongly connected component: [7, 3, 6, 1, 2, 0, 5].
So the strongly connected component containing node 5 is ",0.875,11
connected_component,"[(3, 2), (3, 9), (3, 7), (3, 5), (2, 6), (2, 10), (2, 7), (2, 5), (7, 3), (7, 1), (5, 8), (5, 0), (6, 9), (6, 1), (6, 7), (6, 13), (10, 2), (1, 13), (1, 4), (1, 5), (1, 3), (1, 6), (1, 11), (13, 9), (11, 10), (11, 6), (12, 10), (12, 1), (12, 3), (12, 2), (12, 6), (4, 6), (4, 9), (4, 8), (8, 1), (0, 2), (0, 1), (0, 8)]","{3: [2, 9, 7, 5],
2: [6, 10, 7, 5],
9: [],
7: [3, 1],
5: [8, 0],
6: [9, 1, 7, 13],
10: [2],
1: [13, 4, 5, 3, 6, 11],
13: [9],
11: [10, 6],
12: [10, 1, 3, 2, 6],
4: [6, 9, 8],
8: [1],
0: [2, 1, 8]}","Node 3 is connected to nodes 2, 9, 7, 5.
Node 2 is connected to nodes 6, 10, 7, 5.
Node 7 is connected to nodes 3, 1.
Node 5 is connected to nodes 8, 0.
Node 6 is connected to nodes 9, 1, 7, 13.
Node 10 is connected to node 2.
Node 1 is connected to nodes 13, 4, 5, 3, 6, 11.
Node 13 is connected to node 9.
Node 11 is connected to nodes 10, 6.
Node 12 is connected to nodes 10, 1, 3, 2, 6.
Node 4 is connected to nodes 6, 9, 8.
Node 8 is connected to node 1.
Node 0 is connected to nodes 2, 1, 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,38,True,Find the strongly connected component containing node 8. ,"[11, 4, 7, 6, 0, 5, 10, 2, 3, 1, 8]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 13.
Search from node 13.
Node 13 is a root node, find a new strongly connected component: [13].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 11.
Search from node 11.
Node 8 is a root node, find a new strongly connected component: [11, 4, 7, 6, 0, 5, 10, 2, 3, 1, 8].
So the strongly connected component containing node 8 is ",0.7857142857142857,12
connected_component,"[(8, 7), (8, 4), (8, 6), (7, 3), (7, 8), (7, 0), (6, 1), (5, 0), (5, 8), (0, 7), (0, 4), (2, 7), (2, 6), (3, 2), (3, 0), (1, 3), (1, 4), (1, 7)]","{8: [7, 4, 6],
7: [3, 8, 0],
4: [],
6: [1],
5: [0, 8],
0: [7, 4],
2: [7, 6],
3: [2, 0],
1: [3, 4, 7]}","Node 8 is connected to nodes 7, 4, 6.
Node 7 is connected to nodes 3, 8, 0.
Node 6 is connected to node 1.
Node 5 is connected to nodes 0, 8.
Node 0 is connected to nodes 7, 4.
Node 2 is connected to nodes 7, 6.
Node 3 is connected to nodes 2, 0.
Node 1 is connected to nodes 3, 4, 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,18,True,Find the strongly connected component containing node 2. ,"[8, 7, 0, 3, 1, 6, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 8.
Search from node 8.
Node 2 is a root node, find a new strongly connected component: [8, 7, 0, 3, 1, 6, 2].
So the strongly connected component containing node 2 is ",0.7777777777777778,13
connected_component,"[(4, 6), (4, 7), (6, 3), (7, 6), (7, 0), (3, 7), (3, 4), (2, 4), (0, 7), (0, 3), (0, 6), (5, 4), (5, 2), (1, 4), (1, 2), (1, 5)]","{4: [6, 7],
6: [3],
7: [6, 0],
3: [7, 4],
2: [4],
0: [7, 3, 6],
5: [4, 2],
1: [4, 2, 5]}","Node 4 is connected to nodes 6, 7.
Node 6 is connected to node 3.
Node 7 is connected to nodes 6, 0.
Node 3 is connected to nodes 7, 4.
Node 2 is connected to node 4.
Node 0 is connected to nodes 7, 3, 6.
Node 5 is connected to nodes 4, 2.
Node 1 is connected to nodes 4, 2, 5.","[0, 1, 2, 3, 4, 5, 6, 7]",8,16,True,Find the strongly connected component containing node 6. ,"[0, 7, 4, 3, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 0.
Search from node 0.
Node 6 is a root node, find a new strongly connected component: [0, 7, 4, 3, 6].
So the strongly connected component containing node 6 is ",0.625,14
connected_component,"[(0, 3), (0, 1), (0, 6), (3, 1), (3, 8), (1, 6), (1, 4), (1, 14), (6, 11), (6, 14), (6, 7), (8, 10), (8, 13), (8, 2), (10, 4), (10, 3), (10, 5), (13, 3), (13, 7), (13, 9), (13, 5), (12, 9), (12, 11), (9, 8), (11, 3), (11, 13), (4, 10), (14, 8), (14, 13), (14, 4), (7, 4), (7, 1), (5, 14), (5, 9)]","{0: [3, 1, 6],
3: [1, 8],
1: [6, 4, 14],
6: [11, 14, 7],
8: [10, 13, 2],
10: [4, 3, 5],
13: [3, 7, 9, 5],
2: [],
12: [9, 11],
9: [8],
11: [3, 13],
4: [10],
14: [8, 13, 4],
7: [4, 1],
5: [14, 9]}","Node 0 is connected to nodes 3, 1, 6.
Node 3 is connected to nodes 1, 8.
Node 1 is connected to nodes 6, 4, 14.
Node 6 is connected to nodes 11, 14, 7.
Node 8 is connected to nodes 10, 13, 2.
Node 10 is connected to nodes 4, 3, 5.
Node 13 is connected to nodes 3, 7, 9, 5.
Node 12 is connected to nodes 9, 11.
Node 9 is connected to node 8.
Node 11 is connected to nodes 3, 13.
Node 4 is connected to node 10.
Node 14 is connected to nodes 8, 13, 4.
Node 7 is connected to nodes 4, 1.
Node 5 is connected to nodes 14, 9.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,34,True,Find the strongly connected component containing node 1. ,"[11, 6, 7, 14, 5, 9, 13, 8, 3, 10, 4, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 14.
Search from node 14.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 11.
Search from node 11.
Node 1 is a root node, find a new strongly connected component: [11, 6, 7, 14, 5, 9, 13, 8, 3, 10, 4, 1].
So the strongly connected component containing node 1 is ",0.8,15
connected_component,"[(4, 0), (4, 3), (4, 5), (4, 6), (0, 2), (0, 1), (0, 4), (5, 1), (5, 3), (6, 2), (6, 3), (6, 5), (6, 7), (2, 5), (1, 2), (7, 6), (7, 2), (7, 5)]","{4: [0, 3, 5, 6],
0: [2, 1, 4],
3: [],
5: [1, 3],
6: [2, 3, 5, 7],
2: [5],
1: [2],
7: [6, 2, 5]}","Node 4 is connected to nodes 0, 3, 5, 6.
Node 0 is connected to nodes 2, 1, 4.
Node 5 is connected to nodes 1, 3.
Node 6 is connected to nodes 2, 3, 5, 7.
Node 2 is connected to node 5.
Node 1 is connected to node 2.
Node 7 is connected to nodes 6, 2, 5.","[0, 1, 2, 3, 4, 5, 6, 7]",8,18,True,Find the strongly connected component containing node 5. ,"[2, 1, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Node 5 is a root node, find a new strongly connected component: [2, 1, 5].
So the strongly connected component containing node 5 is ",0.375,16
connected_component,"[(5, 8), (5, 1), (8, 6), (8, 10), (8, 3), (8, 13), (1, 9), (1, 10), (1, 11), (1, 0), (1, 12), (1, 2), (1, 7), (10, 6), (10, 5), (6, 5), (6, 12), (0, 3), (0, 8), (12, 4), (13, 6), (13, 1), (13, 4), (13, 5), (13, 10), (2, 1), (2, 10), (2, 12), (7, 1), (7, 4), (9, 11), (9, 8), (9, 7), (9, 1)]","{5: [8, 1],
8: [6, 10, 3, 13],
1: [9, 10, 11, 0, 12, 2, 7],
10: [6, 5],
6: [5, 12],
0: [3, 8],
3: [],
12: [4],
4: [],
13: [6, 1, 4, 5, 10],
2: [1, 10, 12],
7: [1, 4],
9: [11, 8, 7, 1],
11: []}","Node 5 is connected to nodes 8, 1.
Node 8 is connected to nodes 6, 10, 3, 13.
Node 1 is connected to nodes 9, 10, 11, 0, 12, 2, 7.
Node 10 is connected to nodes 6, 5.
Node 6 is connected to nodes 5, 12.
Node 0 is connected to nodes 3, 8.
Node 12 is connected to node 4.
Node 13 is connected to nodes 6, 1, 4, 5, 10.
Node 2 is connected to nodes 1, 10, 12.
Node 7 is connected to nodes 1, 4.
Node 9 is connected to nodes 11, 8, 7, 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,34,True,Find the strongly connected component containing node 4. ,[4],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
So the strongly connected component containing node 4 is ",0.0714285714285714,17
connected_component,"[(0, 9), (0, 8), (9, 5), (9, 4), (9, 0), (9, 6), (8, 7), (8, 2), (10, 9), (6, 9), (6, 5), (6, 0), (5, 4), (5, 10), (11, 1), (11, 0), (11, 6), (1, 3), (1, 0), (1, 5), (2, 8), (2, 0), (2, 10), (4, 5), (7, 1), (7, 2), (7, 9)]","{0: [9, 8],
9: [5, 4, 0, 6],
8: [7, 2],
10: [9],
6: [9, 5, 0],
5: [4, 10],
11: [1, 0, 6],
1: [3, 0, 5],
2: [8, 0, 10],
4: [5],
7: [1, 2, 9],
3: []}","Node 0 is connected to nodes 9, 8.
Node 9 is connected to nodes 5, 4, 0, 6.
Node 8 is connected to nodes 7, 2.
Node 10 is connected to node 9.
Node 6 is connected to nodes 9, 5, 0.
Node 5 is connected to nodes 4, 10.
Node 11 is connected to nodes 1, 0, 6.
Node 1 is connected to nodes 3, 0, 5.
Node 2 is connected to nodes 8, 0, 10.
Node 4 is connected to node 5.
Node 7 is connected to nodes 1, 2, 9.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,27,True,Find the strongly connected component containing node 1. ,"[7, 6, 5, 4, 9, 10, 2, 8, 0, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Node 1 is a root node, find a new strongly connected component: [7, 6, 5, 4, 9, 10, 2, 8, 0, 1].
So the strongly connected component containing node 1 is ",0.8333333333333334,18
connected_component,"[(6, 4), (6, 11), (6, 13), (4, 13), (4, 5), (4, 3), (11, 13), (11, 12), (11, 1), (11, 2), (13, 10), (13, 6), (3, 4), (3, 9), (3, 14), (3, 5), (3, 6), (9, 0), (9, 4), (9, 1), (14, 5), (14, 12), (14, 9), (5, 6), (5, 0), (5, 12), (5, 1), (5, 2), (0, 11), (0, 9), (0, 7), (0, 5), (0, 3), (7, 6), (7, 4), (7, 11), (7, 1), (7, 9), (7, 2), (12, 5), (12, 3), (12, 8), (12, 13), (1, 14), (1, 6), (1, 3), (1, 4), (1, 8), (1, 13), (1, 12), (2, 7), (2, 6), (2, 3), (2, 11), (2, 10), (8, 9), (8, 3), (8, 0), (8, 11), (10, 7), (10, 14), (10, 6), (10, 11), (10, 12)]","{6: [4, 11, 13],
4: [13, 5, 3],
11: [13, 12, 1, 2],
13: [10, 6],
3: [4, 9, 14, 5, 6],
9: [0, 4, 1],
14: [5, 12, 9],
5: [6, 0, 12, 1, 2],
0: [11, 9, 7, 5, 3],
7: [6, 4, 11, 1, 9, 2],
12: [5, 3, 8, 13],
1: [14, 6, 3, 4, 8, 13, 12],
2: [7, 6, 3, 11, 10],
8: [9, 3, 0, 11],
10: [7, 14, 6, 11, 12]}","Node 6 is connected to nodes 4, 11, 13.
Node 4 is connected to nodes 13, 5, 3.
Node 11 is connected to nodes 13, 12, 1, 2.
Node 13 is connected to nodes 10, 6.
Node 3 is connected to nodes 4, 9, 14, 5, 6.
Node 9 is connected to nodes 0, 4, 1.
Node 14 is connected to nodes 5, 12, 9.
Node 5 is connected to nodes 6, 0, 12, 1, 2.
Node 0 is connected to nodes 11, 9, 7, 5, 3.
Node 7 is connected to nodes 6, 4, 11, 1, 9, 2.
Node 12 is connected to nodes 5, 3, 8, 13.
Node 1 is connected to nodes 14, 6, 3, 4, 8, 13, 12.
Node 2 is connected to nodes 7, 6, 3, 11, 10.
Node 8 is connected to nodes 9, 3, 0, 11.
Node 10 is connected to nodes 7, 14, 6, 11, 12.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,64,True,Find the strongly connected component containing node 7. ,"[14, 8, 12, 10, 13, 6, 2, 11, 9, 0, 5, 4, 3, 1, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 14.
Search from node 14.
Node 7 is a root node, find a new strongly connected component: [14, 8, 12, 10, 13, 6, 2, 11, 9, 0, 5, 4, 3, 1, 7].
So the strongly connected component containing node 7 is ",1.0,19
connected_component,"[(9, 3), (9, 6), (3, 6), (3, 1), (3, 9), (6, 1), (6, 7), (6, 8), (0, 4), (0, 8), (0, 6), (0, 1), (4, 3), (4, 8), (4, 6), (4, 1), (4, 9), (4, 0), (8, 1), (8, 9), (8, 0), (8, 5), (1, 9), (1, 4), (5, 4), (5, 8), (5, 6), (7, 3), (7, 1), (7, 5), (2, 1), (2, 7), (2, 3)]","{9: [3, 6],
3: [6, 1, 9],
6: [1, 7, 8],
0: [4, 8, 6, 1],
4: [3, 8, 6, 1, 9, 0],
8: [1, 9, 0, 5],
1: [9, 4],
5: [4, 8, 6],
7: [3, 1, 5],
2: [1, 7, 3]}","Node 9 is connected to nodes 3, 6.
Node 3 is connected to nodes 6, 1, 9.
Node 6 is connected to nodes 1, 7, 8.
Node 0 is connected to nodes 4, 8, 6, 1.
Node 4 is connected to nodes 3, 8, 6, 1, 9, 0.
Node 8 is connected to nodes 1, 9, 0, 5.
Node 1 is connected to nodes 9, 4.
Node 5 is connected to nodes 4, 8, 6.
Node 7 is connected to nodes 3, 1, 5.
Node 2 is connected to nodes 1, 7, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,33,True,Find the strongly connected component containing node 9. ,"[7, 6, 5, 8, 0, 4, 1, 3, 9]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 9.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Node 9 is a root node, find a new strongly connected component: [7, 6, 5, 8, 0, 4, 1, 3, 9].
So the strongly connected component containing node 9 is ",0.9,20
connected_component,"[(4, 10), (4, 1), (10, 2), (1, 9), (1, 8), (7, 8), (7, 13), (8, 5), (13, 7), (13, 6), (0, 10), (0, 13), (0, 12), (12, 5), (12, 13), (5, 14), (5, 8), (14, 1), (14, 13), (14, 11), (6, 1), (11, 14), (11, 1), (11, 12), (2, 11), (2, 5), (3, 7), (3, 12)]","{4: [10, 1],
10: [2],
1: [9, 8],
7: [8, 13],
8: [5],
13: [7, 6],
0: [10, 13, 12],
12: [5, 13],
5: [14, 8],
14: [1, 13, 11],
6: [1],
11: [14, 1, 12],
2: [11, 5],
9: [],
3: [7, 12]}","Node 4 is connected to nodes 10, 1.
Node 10 is connected to node 2.
Node 1 is connected to nodes 9, 8.
Node 7 is connected to nodes 8, 13.
Node 8 is connected to node 5.
Node 13 is connected to nodes 7, 6.
Node 0 is connected to nodes 10, 13, 12.
Node 12 is connected to nodes 5, 13.
Node 5 is connected to nodes 14, 8.
Node 14 is connected to nodes 1, 13, 11.
Node 6 is connected to node 1.
Node 11 is connected to nodes 14, 1, 12.
Node 2 is connected to nodes 11, 5.
Node 3 is connected to nodes 7, 12.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,28,True,Find the strongly connected component containing node 7. ,"[6, 13, 12, 11, 1, 14, 5, 8, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 14.
Search from node 14.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 6.
Search from node 6.
Node 7 is a root node, find a new strongly connected component: [6, 13, 12, 11, 1, 14, 5, 8, 7].
So the strongly connected component containing node 7 is ",0.6,21
connected_component,"[(10, 4), (10, 6), (4, 1), (1, 2), (1, 5), (3, 7), (3, 8), (7, 11), (7, 8), (7, 0), (0, 9), (2, 5)]","{10: [4, 6],
4: [10, 1],
6: [10],
1: [4, 2, 5],
3: [7, 8],
7: [3, 11, 8, 0],
8: [3, 7],
11: [7],
0: [7, 9],
2: [1, 5],
5: [1, 2],
9: [0]}","Node 10 is connected to nodes 4, 6.
Node 4 is connected to nodes 10, 1.
Node 6 is connected to node 10.
Node 1 is connected to nodes 4, 2, 5.
Node 3 is connected to nodes 7, 8.
Node 7 is connected to nodes 3, 11, 8, 0.
Node 8 is connected to nodes 3, 7.
Node 11 is connected to node 7.
Node 0 is connected to nodes 7, 9.
Node 2 is connected to nodes 1, 5.
Node 5 is connected to nodes 1, 2.
Node 9 is connected to node 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,12,False,Find the connected component containing node 9. ,"[9, 0, 7, 11, 3, 8]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 9, add it to the connected component. The current connected component is [9].
Visit node 0, add it to the connected component. The current connected component is [9, 0].
Visit node 7, add it to the connected component. The current connected component is [9, 0, 7].
Visit node 11, add it to the connected component. The current connected component is [9, 0, 7, 11].
Visit node 3, add it to the connected component. The current connected component is [9, 0, 7, 11, 3].
Visit node 8, add it to the connected component. The current connected component is [9, 0, 7, 11, 3, 8].
Thus, the connected component containing node 9 is ",0.5,22
connected_component,"[(1, 8), (1, 0), (1, 5), (8, 5), (7, 6), (7, 4), (6, 3), (4, 2), (3, 2)]","{1: [8, 0, 5],
8: [1, 5],
0: [1],
5: [1, 8],
7: [6, 4],
6: [7, 3],
4: [7, 2],
3: [6, 2],
2: [4, 3]}","Node 1 is connected to nodes 8, 0, 5.
Node 8 is connected to nodes 1, 5.
Node 0 is connected to node 1.
Node 5 is connected to nodes 1, 8.
Node 7 is connected to nodes 6, 4.
Node 6 is connected to nodes 7, 3.
Node 4 is connected to nodes 7, 2.
Node 3 is connected to nodes 6, 2.
Node 2 is connected to nodes 4, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,9,False,Find the connected component containing node 3. ,"[3, 6, 7, 4, 2]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 3, add it to the connected component. The current connected component is [3].
Visit node 6, add it to the connected component. The current connected component is [3, 6].
Visit node 7, add it to the connected component. The current connected component is [3, 6, 7].
Visit node 4, add it to the connected component. The current connected component is [3, 6, 7, 4].
Visit node 2, add it to the connected component. The current connected component is [3, 6, 7, 4, 2].
Thus, the connected component containing node 3 is ",0.5555555555555556,23
connected_component,"[(2, 6), (2, 0), (2, 7), (2, 4), (6, 0), (6, 7), (6, 2), (6, 1), (0, 1), (0, 6), (7, 6), (7, 0), (4, 1), (4, 3), (4, 7), (1, 3), (1, 0), (1, 4), (1, 5), (3, 0), (3, 7), (3, 4), (3, 5), (3, 2), (3, 1)]","{2: [6, 0, 7, 4],
6: [0, 7, 2, 1],
0: [1, 6],
7: [6, 0],
4: [1, 3, 7],
1: [3, 0, 4, 5],
3: [0, 7, 4, 5, 2, 1],
5: []}","Node 2 is connected to nodes 6, 0, 7, 4.
Node 6 is connected to nodes 0, 7, 2, 1.
Node 0 is connected to nodes 1, 6.
Node 7 is connected to nodes 6, 0.
Node 4 is connected to nodes 1, 3, 7.
Node 1 is connected to nodes 3, 0, 4, 5.
Node 3 is connected to nodes 0, 7, 4, 5, 2, 1.","[0, 1, 2, 3, 4, 5, 6, 7]",8,25,True,Find the strongly connected component containing node 2. ,"[6, 7, 4, 3, 1, 0, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Node 2 is a root node, find a new strongly connected component: [6, 7, 4, 3, 1, 0, 2].
So the strongly connected component containing node 2 is ",0.875,24
connected_component,"[(12, 1), (1, 11), (1, 2), (11, 13), (11, 10), (11, 9), (13, 4), (13, 10), (13, 6), (13, 11), (10, 2), (10, 3), (10, 7), (9, 5), (9, 0), (9, 3), (8, 4), (8, 2), (8, 9), (8, 7), (8, 11), (2, 6), (2, 3), (2, 13), (7, 5), (7, 1), (6, 0), (6, 12), (6, 8), (6, 10), (5, 7), (5, 13), (0, 7), (0, 13)]","{12: [1],
1: [11, 2],
11: [13, 10, 9],
13: [4, 10, 6, 11],
10: [2, 3, 7],
9: [5, 0, 3],
8: [4, 2, 9, 7, 11],
4: [],
2: [6, 3, 13],
7: [5, 1],
6: [0, 12, 8, 10],
3: [],
5: [7, 13],
0: [7, 13]}","Node 12 is connected to node 1.
Node 1 is connected to nodes 11, 2.
Node 11 is connected to nodes 13, 10, 9.
Node 13 is connected to nodes 4, 10, 6, 11.
Node 10 is connected to nodes 2, 3, 7.
Node 9 is connected to nodes 5, 0, 3.
Node 8 is connected to nodes 4, 2, 9, 7, 11.
Node 2 is connected to nodes 6, 3, 13.
Node 7 is connected to nodes 5, 1.
Node 6 is connected to nodes 0, 12, 8, 10.
Node 5 is connected to nodes 7, 13.
Node 0 is connected to nodes 7, 13.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,34,True,Find the strongly connected component containing node 8. ,"[12, 6, 5, 0, 9, 11, 1, 7, 10, 13, 2, 8]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 12.
Search from node 12.
Node 8 is a root node, find a new strongly connected component: [12, 6, 5, 0, 9, 11, 1, 7, 10, 13, 2, 8].
So the strongly connected component containing node 8 is ",0.8571428571428571,25
connected_component,"[(6, 0), (0, 2), (5, 9), (5, 8), (5, 7), (9, 6), (9, 5), (8, 0), (8, 9), (7, 6), (7, 1), (7, 9), (3, 7), (3, 6), (3, 5), (1, 0), (1, 9), (1, 2), (1, 7), (1, 5), (1, 3), (2, 3), (2, 1), (4, 1)]","{6: [0],
0: [2],
5: [9, 8, 7],
9: [6, 5],
8: [0, 9],
7: [6, 1, 9],
3: [7, 6, 5],
1: [0, 9, 2, 7, 5, 3],
2: [3, 1],
4: [1]}","Node 6 is connected to node 0.
Node 0 is connected to node 2.
Node 5 is connected to nodes 9, 8, 7.
Node 9 is connected to nodes 6, 5.
Node 8 is connected to nodes 0, 9.
Node 7 is connected to nodes 6, 1, 9.
Node 3 is connected to nodes 7, 6, 5.
Node 1 is connected to nodes 0, 9, 2, 7, 5, 3.
Node 2 is connected to nodes 3, 1.
Node 4 is connected to node 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,24,True,Find the strongly connected component containing node 2. ,"[7, 6, 9, 8, 5, 3, 0, 1, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Node 2 is a root node, find a new strongly connected component: [7, 6, 9, 8, 5, 3, 0, 1, 2].
So the strongly connected component containing node 2 is ",0.9,26
connected_component,"[(5, 6), (6, 7), (2, 3), (3, 0), (1, 9), (1, 7), (7, 5), (7, 2), (7, 8), (7, 6), (8, 7), (8, 1), (0, 1), (0, 9), (4, 0), (4, 6)]","{5: [6],
6: [7],
2: [3],
3: [0],
1: [9, 7],
9: [],
7: [5, 2, 8, 6],
8: [7, 1],
0: [1, 9],
4: [0, 6]}","Node 5 is connected to node 6.
Node 6 is connected to node 7.
Node 2 is connected to node 3.
Node 3 is connected to node 0.
Node 1 is connected to nodes 9, 7.
Node 7 is connected to nodes 5, 2, 8, 6.
Node 8 is connected to nodes 7, 1.
Node 0 is connected to nodes 1, 9.
Node 4 is connected to nodes 0, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,16,True,Find the strongly connected component containing node 0. ,"[6, 5, 3, 2, 8, 7, 1, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Node 0 is a root node, find a new strongly connected component: [6, 5, 3, 2, 8, 7, 1, 0].
So the strongly connected component containing node 0 is ",0.8,27
connected_component,"[(9, 1), (9, 7), (9, 4), (9, 8), (1, 6), (7, 3), (7, 2), (4, 7), (8, 4), (6, 8), (3, 7), (3, 8), (3, 6), (2, 9), (2, 4), (0, 6), (5, 3)]","{9: [1, 7, 4, 8],
1: [6],
7: [3, 2],
4: [7],
8: [4],
6: [8],
3: [7, 8, 6],
2: [9, 4],
0: [6],
5: [3]}","Node 9 is connected to nodes 1, 7, 4, 8.
Node 1 is connected to node 6.
Node 7 is connected to nodes 3, 2.
Node 4 is connected to node 7.
Node 8 is connected to node 4.
Node 6 is connected to node 8.
Node 3 is connected to nodes 7, 8, 6.
Node 2 is connected to nodes 9, 4.
Node 0 is connected to node 6.
Node 5 is connected to node 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,17,True,Find the strongly connected component containing node 3. ,"[6, 1, 9, 2, 7, 4, 8, 3]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Node 3 is a root node, find a new strongly connected component: [6, 1, 9, 2, 7, 4, 8, 3].
So the strongly connected component containing node 3 is ",0.8,28
connected_component,"[(8, 9), (8, 6), (8, 0), (8, 5), (8, 2), (8, 4), (8, 3), (2, 1), (2, 10), (3, 7)]","{8: [9, 6, 0, 5, 2, 4, 3],
9: [8],
6: [8],
0: [8],
5: [8],
2: [8, 1, 10],
4: [8],
3: [8, 7],
1: [2],
10: [2],
7: [3]}","Node 8 is connected to nodes 9, 6, 0, 5, 2, 4, 3.
Node 9 is connected to node 8.
Node 6 is connected to node 8.
Node 0 is connected to node 8.
Node 5 is connected to node 8.
Node 2 is connected to nodes 8, 1, 10.
Node 4 is connected to node 8.
Node 3 is connected to nodes 8, 7.
Node 1 is connected to node 2.
Node 10 is connected to node 2.
Node 7 is connected to node 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,10,False,Find the connected component containing node 5. ,"[5, 8, 9, 6, 4, 3, 7, 2, 10, 1, 0]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 5, add it to the connected component. The current connected component is [5].
Visit node 8, add it to the connected component. The current connected component is [5, 8].
Visit node 9, add it to the connected component. The current connected component is [5, 8, 9].
Visit node 6, add it to the connected component. The current connected component is [5, 8, 9, 6].
Visit node 4, add it to the connected component. The current connected component is [5, 8, 9, 6, 4].
Visit node 3, add it to the connected component. The current connected component is [5, 8, 9, 6, 4, 3].
Visit node 7, add it to the connected component. The current connected component is [5, 8, 9, 6, 4, 3, 7].
Visit node 2, add it to the connected component. The current connected component is [5, 8, 9, 6, 4, 3, 7, 2].
Visit node 10, add it to the connected component. The current connected component is [5, 8, 9, 6, 4, 3, 7, 2, 10].
Visit node 1, add it to the connected component. The current connected component is [5, 8, 9, 6, 4, 3, 7, 2, 10, 1].
Visit node 0, add it to the connected component. The current connected component is [5, 8, 9, 6, 4, 3, 7, 2, 10, 1, 0].
Thus, the connected component containing node 5 is ",1.0,29
connected_component,"[(14, 2), (14, 8), (14, 6), (14, 1), (2, 8), (2, 9), (2, 6), (2, 14), (6, 5), (6, 12), (1, 13), (1, 6), (7, 2), (7, 3), (3, 6), (9, 6), (9, 1), (9, 4), (9, 14), (10, 5), (10, 9), (5, 7), (5, 0), (4, 2), (11, 13), (13, 12), (13, 3), (13, 6)]","{14: [2, 8, 6, 1],
2: [8, 9, 6, 14],
8: [],
6: [5, 12],
1: [13, 6],
7: [2, 3],
3: [6],
9: [6, 1, 4, 14],
10: [5, 9],
5: [7, 0],
0: [],
4: [2],
11: [13],
13: [12, 3, 6],
12: []}","Node 14 is connected to nodes 2, 8, 6, 1.
Node 2 is connected to nodes 8, 9, 6, 14.
Node 6 is connected to nodes 5, 12.
Node 1 is connected to nodes 13, 6.
Node 7 is connected to nodes 2, 3.
Node 3 is connected to node 6.
Node 9 is connected to nodes 6, 1, 4, 14.
Node 10 is connected to nodes 5, 9.
Node 5 is connected to nodes 7, 0.
Node 4 is connected to node 2.
Node 11 is connected to node 13.
Node 13 is connected to nodes 12, 3, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,28,True,Find the strongly connected component containing node 10. ,[10],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 10.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 12.
Search from node 12.
Node 12 is a root node, find a new strongly connected component: [12].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 14.
Search from node 14.
Visit neighbor node 4.
Search from node 4.
Node 9 is a root node, find a new strongly connected component: [4, 14, 2, 7, 5, 6, 3, 13, 1, 9].
Node 10 is a root node, find a new strongly connected component: [10].
So the strongly connected component containing node 10 is ",0.0666666666666666,30
connected_component,"[(3, 9), (3, 4), (9, 0), (9, 7), (9, 1), (0, 2), (0, 8), (7, 1), (7, 5), (1, 6), (1, 3), (1, 9), (2, 8), (2, 5), (2, 3), (8, 5), (8, 4), (8, 7), (5, 3), (5, 0), (6, 5), (6, 0), (6, 2), (6, 1)]","{3: [9, 4],
9: [0, 7, 1],
4: [],
0: [2, 8],
7: [1, 5],
1: [6, 3, 9],
2: [8, 5, 3],
8: [5, 4, 7],
5: [3, 0],
6: [5, 0, 2, 1]}","Node 3 is connected to nodes 9, 4.
Node 9 is connected to nodes 0, 7, 1.
Node 0 is connected to nodes 2, 8.
Node 7 is connected to nodes 1, 5.
Node 1 is connected to nodes 6, 3, 9.
Node 2 is connected to nodes 8, 5, 3.
Node 8 is connected to nodes 5, 4, 7.
Node 5 is connected to nodes 3, 0.
Node 6 is connected to nodes 5, 0, 2, 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,24,True,Find the strongly connected component containing node 2. ,"[7, 6, 1, 9, 3, 0, 5, 8, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Node 2 is a root node, find a new strongly connected component: [7, 6, 1, 9, 3, 0, 5, 8, 2].
So the strongly connected component containing node 2 is ",0.9,31
connected_component,"[(9, 6), (9, 5), (9, 2), (9, 7), (9, 0), (6, 5), (6, 10), (6, 7), (2, 7), (2, 0), (7, 8), (0, 5), (0, 7), (4, 11), (4, 0), (11, 0), (11, 9), (3, 6), (3, 11), (3, 10), (3, 2), (3, 9), (10, 0), (10, 12), (10, 4), (10, 6), (10, 1), (8, 1), (8, 12), (8, 9), (8, 6), (1, 10), (1, 7), (1, 12), (1, 9), (1, 4), (1, 8), (12, 8)]","{9: [6, 5, 2, 7, 0],
6: [5, 10, 7],
5: [],
2: [7, 0],
7: [8],
0: [5, 7],
4: [11, 0],
11: [0, 9],
3: [6, 11, 10, 2, 9],
10: [0, 12, 4, 6, 1],
8: [1, 12, 9, 6],
1: [10, 7, 12, 9, 4, 8],
12: [8]}","Node 9 is connected to nodes 6, 5, 2, 7, 0.
Node 6 is connected to nodes 5, 10, 7.
Node 2 is connected to nodes 7, 0.
Node 7 is connected to node 8.
Node 0 is connected to nodes 5, 7.
Node 4 is connected to nodes 11, 0.
Node 11 is connected to nodes 0, 9.
Node 3 is connected to nodes 6, 11, 10, 2, 9.
Node 10 is connected to nodes 0, 12, 4, 6, 1.
Node 8 is connected to nodes 1, 12, 9, 6.
Node 1 is connected to nodes 10, 7, 12, 9, 4, 8.
Node 12 is connected to node 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,38,True,Find the strongly connected component containing node 8. ,"[12, 10, 6, 2, 9, 11, 7, 0, 4, 1, 8]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 12.
Search from node 12.
Node 8 is a root node, find a new strongly connected component: [12, 10, 6, 2, 9, 11, 7, 0, 4, 1, 8].
So the strongly connected component containing node 8 is ",0.8461538461538461,32
connected_component,"[(7, 0), (7, 6), (0, 1), (6, 1), (6, 4), (5, 2), (5, 8), (2, 3), (8, 3)]","{7: [0, 6],
0: [7, 1],
6: [7, 1, 4],
1: [0, 6],
5: [2, 8],
2: [5, 3],
8: [5, 3],
3: [2, 8],
4: [6]}","Node 7 is connected to nodes 0, 6.
Node 0 is connected to nodes 7, 1.
Node 6 is connected to nodes 7, 1, 4.
Node 1 is connected to nodes 0, 6.
Node 5 is connected to nodes 2, 8.
Node 2 is connected to nodes 5, 3.
Node 8 is connected to nodes 5, 3.
Node 3 is connected to nodes 2, 8.
Node 4 is connected to node 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,9,False,Find the connected component containing node 8. ,"[8, 5, 2, 3]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 8, add it to the connected component. The current connected component is [8].
Visit node 5, add it to the connected component. The current connected component is [8, 5].
Visit node 2, add it to the connected component. The current connected component is [8, 5, 2].
Visit node 3, add it to the connected component. The current connected component is [8, 5, 2, 3].
Thus, the connected component containing node 8 is ",0.4444444444444444,33
connected_component,"[(7, 5), (7, 6), (7, 3), (7, 0), (6, 4), (6, 5), (3, 2), (3, 1), (3, 6), (0, 2), (0, 1), (0, 3), (4, 2), (4, 6), (2, 4), (2, 3)]","{7: [5, 6, 3, 0],
5: [],
6: [4, 5],
3: [2, 1, 6],
0: [2, 1, 3],
4: [2, 6],
2: [4, 3],
1: []}","Node 7 is connected to nodes 5, 6, 3, 0.
Node 6 is connected to nodes 4, 5.
Node 3 is connected to nodes 2, 1, 6.
Node 0 is connected to nodes 2, 1, 3.
Node 4 is connected to nodes 2, 6.
Node 2 is connected to nodes 4, 3.","[0, 1, 2, 3, 4, 5, 6, 7]",8,16,True,Find the strongly connected component containing node 4. ,"[6, 3, 2, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Node 4 is a root node, find a new strongly connected component: [6, 3, 2, 4].
So the strongly connected component containing node 4 is ",0.5,34
connected_component,"[(6, 3), (6, 0), (3, 0), (7, 2), (7, 1), (2, 8), (1, 5), (8, 4), (5, 4)]","{6: [3, 0],
3: [6, 0],
0: [6, 3],
7: [2, 1],
2: [7, 8],
1: [7, 5],
8: [2, 4],
5: [1, 4],
4: [5, 8]}","Node 6 is connected to nodes 3, 0.
Node 3 is connected to nodes 6, 0.
Node 0 is connected to nodes 6, 3.
Node 7 is connected to nodes 2, 1.
Node 2 is connected to nodes 7, 8.
Node 1 is connected to nodes 7, 5.
Node 8 is connected to nodes 2, 4.
Node 5 is connected to nodes 1, 4.
Node 4 is connected to nodes 5, 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,9,False,Find the connected component containing node 7. ,"[7, 2, 8, 4, 5, 1]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 7, add it to the connected component. The current connected component is [7].
Visit node 2, add it to the connected component. The current connected component is [7, 2].
Visit node 8, add it to the connected component. The current connected component is [7, 2, 8].
Visit node 4, add it to the connected component. The current connected component is [7, 2, 8, 4].
Visit node 5, add it to the connected component. The current connected component is [7, 2, 8, 4, 5].
Visit node 1, add it to the connected component. The current connected component is [7, 2, 8, 4, 5, 1].
Thus, the connected component containing node 7 is ",0.6666666666666666,35
connected_component,"[(6, 12), (10, 9), (10, 2), (10, 0), (10, 11), (9, 12), (9, 4), (2, 11), (0, 12), (0, 11), (0, 3), (0, 2), (11, 9), (4, 10), (3, 9), (3, 2), (3, 0), (3, 12), (3, 14), (3, 10), (3, 4), (14, 11), (14, 3), (13, 1), (13, 12), (13, 9), (1, 7), (5, 14), (5, 4), (5, 13), (8, 6), (8, 12)]","{6: [12],
12: [],
10: [9, 2, 0, 11],
9: [12, 4],
2: [11],
0: [12, 11, 3, 2],
11: [9],
4: [10],
3: [9, 2, 0, 12, 14, 10, 4],
14: [11, 3],
13: [1, 12, 9],
1: [7],
7: [],
5: [14, 4, 13],
8: [6, 12]}","Node 6 is connected to node 12.
Node 10 is connected to nodes 9, 2, 0, 11.
Node 9 is connected to nodes 12, 4.
Node 2 is connected to node 11.
Node 0 is connected to nodes 12, 11, 3, 2.
Node 11 is connected to node 9.
Node 4 is connected to node 10.
Node 3 is connected to nodes 9, 2, 0, 12, 14, 10, 4.
Node 14 is connected to nodes 11, 3.
Node 13 is connected to nodes 1, 12, 9.
Node 1 is connected to node 7.
Node 5 is connected to nodes 14, 4, 13.
Node 8 is connected to nodes 6, 12.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,32,True,Find the strongly connected component containing node 0. ,"[14, 10, 4, 9, 11, 2, 3, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 12.
Search from node 12.
Node 12 is a root node, find a new strongly connected component: [12].
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 14.
Search from node 14.
Node 0 is a root node, find a new strongly connected component: [14, 10, 4, 9, 11, 2, 3, 0].
So the strongly connected component containing node 0 is ",0.5333333333333333,36
connected_component,"[(1, 5), (5, 7), (5, 4), (7, 3), (4, 3), (4, 5), (4, 9), (4, 2), (0, 6), (0, 1), (0, 5), (6, 9), (6, 8), (8, 2), (8, 1), (8, 0), (2, 4), (2, 3), (2, 7), (9, 3), (9, 6)]","{1: [5],
5: [7, 4],
7: [3],
4: [3, 5, 9, 2],
0: [6, 1, 5],
6: [9, 8],
3: [],
8: [2, 1, 0],
2: [4, 3, 7],
9: [3, 6]}","Node 1 is connected to node 5.
Node 5 is connected to nodes 7, 4.
Node 7 is connected to node 3.
Node 4 is connected to nodes 3, 5, 9, 2.
Node 0 is connected to nodes 6, 1, 5.
Node 6 is connected to nodes 9, 8.
Node 8 is connected to nodes 2, 1, 0.
Node 2 is connected to nodes 4, 3, 7.
Node 9 is connected to nodes 3, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,21,True,Find the strongly connected component containing node 6. ,"[2, 9, 4, 5, 1, 0, 8, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 7.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
Node 6 is a root node, find a new strongly connected component: [2, 9, 4, 5, 1, 0, 8, 6].
So the strongly connected component containing node 6 is ",0.8,37
connected_component,"[(11, 0), (11, 2), (0, 4), (2, 10), (2, 13), (2, 8), (3, 2), (4, 9), (9, 1), (1, 6), (6, 10), (6, 11), (10, 13), (10, 8), (10, 12), (13, 4), (13, 8), (13, 9), (13, 14), (8, 2), (8, 5), (5, 10), (5, 13), (5, 12), (14, 12), (14, 9), (7, 1), (7, 2), (7, 10), (7, 4)]","{11: [0, 2],
0: [4],
2: [10, 13, 8],
3: [2],
4: [9],
9: [1],
1: [6],
6: [10, 11],
10: [13, 8, 12],
13: [4, 8, 9, 14],
8: [2, 5],
5: [10, 13, 12],
12: [],
14: [12, 9],
7: [1, 2, 10, 4]}","Node 11 is connected to nodes 0, 2.
Node 0 is connected to node 4.
Node 2 is connected to nodes 10, 13, 8.
Node 3 is connected to node 2.
Node 4 is connected to node 9.
Node 9 is connected to node 1.
Node 1 is connected to node 6.
Node 6 is connected to nodes 10, 11.
Node 10 is connected to nodes 13, 8, 12.
Node 13 is connected to nodes 4, 8, 9, 14.
Node 8 is connected to nodes 2, 5.
Node 5 is connected to nodes 10, 13, 12.
Node 14 is connected to nodes 12, 9.
Node 7 is connected to nodes 1, 2, 10, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,30,True,Find the strongly connected component containing node 6. ,"[0, 11, 5, 14, 4, 1, 9, 13, 2, 8, 10, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 14.
Search from node 14.
Visit neighbor node 12.
Search from node 12.
Node 12 is a root node, find a new strongly connected component: [12].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 0.
Search from node 0.
Node 6 is a root node, find a new strongly connected component: [0, 11, 5, 14, 4, 1, 9, 13, 2, 8, 10, 6].
So the strongly connected component containing node 6 is ",0.8,38
connected_component,"[(2, 10), (2, 8), (10, 8), (10, 2), (10, 6), (8, 5), (8, 2), (8, 0), (8, 6), (0, 1), (1, 0), (1, 9), (1, 5), (9, 6), (9, 3), (9, 4), (9, 7), (9, 0), (6, 10), (6, 3), (6, 4), (6, 8), (6, 7), (3, 8), (4, 5), (4, 2), (4, 0), (4, 9), (4, 3), (7, 1), (7, 5), (5, 7)]","{2: [10, 8],
10: [8, 2, 6],
8: [5, 2, 0, 6],
0: [1],
1: [0, 9, 5],
9: [6, 3, 4, 7, 0],
6: [10, 3, 4, 8, 7],
3: [8],
4: [5, 2, 0, 9, 3],
7: [1, 5],
5: [7]}","Node 2 is connected to nodes 10, 8.
Node 10 is connected to nodes 8, 2, 6.
Node 8 is connected to nodes 5, 2, 0, 6.
Node 0 is connected to node 1.
Node 1 is connected to nodes 0, 9, 5.
Node 9 is connected to nodes 6, 3, 4, 7, 0.
Node 6 is connected to nodes 10, 3, 4, 8, 7.
Node 3 is connected to node 8.
Node 4 is connected to nodes 5, 2, 0, 9, 3.
Node 7 is connected to nodes 1, 5.
Node 5 is connected to node 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,32,True,Find the strongly connected component containing node 6. ,"[7, 5, 10, 2, 4, 9, 1, 0, 8, 3, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 7.
Search from node 7.
Node 6 is a root node, find a new strongly connected component: [7, 5, 10, 2, 4, 9, 1, 0, 8, 3, 6].
So the strongly connected component containing node 6 is ",1.0,39
connected_component,"[(10, 3), (10, 9), (3, 7), (9, 5), (7, 8), (4, 6), (4, 11), (6, 11), (8, 5), (5, 0), (0, 1), (1, 2)]","{10: [3, 9],
3: [10, 7],
9: [10, 5],
7: [3, 8],
4: [6, 11],
6: [4, 11],
11: [4, 6],
8: [7, 5],
5: [9, 8, 0],
0: [5, 1],
1: [0, 2],
2: [1]}","Node 10 is connected to nodes 3, 9.
Node 3 is connected to nodes 10, 7.
Node 9 is connected to nodes 10, 5.
Node 7 is connected to nodes 3, 8.
Node 4 is connected to nodes 6, 11.
Node 6 is connected to nodes 4, 11.
Node 11 is connected to nodes 4, 6.
Node 8 is connected to nodes 7, 5.
Node 5 is connected to nodes 9, 8, 0.
Node 0 is connected to nodes 5, 1.
Node 1 is connected to nodes 0, 2.
Node 2 is connected to node 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,12,False,Find the connected component containing node 9. ,"[9, 5, 0, 1, 2, 8, 7, 3, 10]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 9, add it to the connected component. The current connected component is [9].
Visit node 5, add it to the connected component. The current connected component is [9, 5].
Visit node 0, add it to the connected component. The current connected component is [9, 5, 0].
Visit node 1, add it to the connected component. The current connected component is [9, 5, 0, 1].
Visit node 2, add it to the connected component. The current connected component is [9, 5, 0, 1, 2].
Visit node 8, add it to the connected component. The current connected component is [9, 5, 0, 1, 2, 8].
Visit node 7, add it to the connected component. The current connected component is [9, 5, 0, 1, 2, 8, 7].
Visit node 3, add it to the connected component. The current connected component is [9, 5, 0, 1, 2, 8, 7, 3].
Visit node 10, add it to the connected component. The current connected component is [9, 5, 0, 1, 2, 8, 7, 3, 10].
Thus, the connected component containing node 9 is ",0.75,40
connected_component,"[(4, 6), (4, 0), (0, 2), (0, 8), (9, 1), (9, 3), (1, 3), (1, 7), (3, 2), (3, 5), (3, 8), (3, 7), (2, 4), (2, 3), (5, 0), (5, 6), (5, 3), (8, 0), (8, 2), (8, 5)]","{4: [6, 0],
6: [],
0: [2, 8],
9: [1, 3],
1: [3, 7],
3: [2, 5, 8, 7],
7: [],
2: [4, 3],
5: [0, 6, 3],
8: [0, 2, 5]}","Node 4 is connected to nodes 6, 0.
Node 0 is connected to nodes 2, 8.
Node 9 is connected to nodes 1, 3.
Node 1 is connected to nodes 3, 7.
Node 3 is connected to nodes 2, 5, 8, 7.
Node 2 is connected to nodes 4, 3.
Node 5 is connected to nodes 0, 6, 3.
Node 8 is connected to nodes 0, 2, 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,20,True,Find the strongly connected component containing node 3. ,"[5, 4, 2, 0, 8, 3]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 7.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
Node 3 is a root node, find a new strongly connected component: [5, 4, 2, 0, 8, 3].
So the strongly connected component containing node 3 is ",0.6,41
connected_component,"[(2, 0), (2, 6), (2, 1), (0, 5), (0, 8), (6, 11), (6, 3), (6, 4), (6, 8), (1, 11), (1, 9), (1, 7), (5, 1), (8, 9), (3, 8), (3, 6), (9, 10), (10, 1), (7, 6), (7, 9), (4, 10), (4, 0), (4, 3)]","{2: [0, 6, 1],
0: [5, 8],
6: [11, 3, 4, 8],
1: [11, 9, 7],
5: [1],
8: [9],
3: [8, 6],
9: [10],
10: [1],
7: [6, 9],
4: [10, 0, 3],
11: []}","Node 2 is connected to nodes 0, 6, 1.
Node 0 is connected to nodes 5, 8.
Node 6 is connected to nodes 11, 3, 4, 8.
Node 1 is connected to nodes 11, 9, 7.
Node 5 is connected to node 1.
Node 8 is connected to node 9.
Node 3 is connected to nodes 8, 6.
Node 9 is connected to node 10.
Node 10 is connected to node 1.
Node 7 is connected to nodes 6, 9.
Node 4 is connected to nodes 10, 0, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,23,True,Find the strongly connected component containing node 9. ,"[5, 0, 4, 8, 3, 6, 7, 1, 10, 9]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 9.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 11.
Search from node 11.
Node 11 is a root node, find a new strongly connected component: [11].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Node 9 is a root node, find a new strongly connected component: [5, 0, 4, 8, 3, 6, 7, 1, 10, 9].
So the strongly connected component containing node 9 is ",0.8333333333333334,42
connected_component,"[(12, 8), (8, 10), (6, 4), (4, 2), (4, 0), (3, 7), (3, 10), (3, 12), (3, 6), (10, 5), (10, 2), (10, 12), (10, 7), (0, 12), (5, 9), (1, 5), (1, 7), (9, 12), (9, 6), (9, 7), (11, 8), (11, 2), (11, 12), (11, 0)]","{12: [8],
8: [10],
6: [4],
4: [2, 0],
3: [7, 10, 12, 6],
7: [],
10: [5, 2, 12, 7],
0: [12],
5: [9],
2: [],
1: [5, 7],
9: [12, 6, 7],
11: [8, 2, 12, 0]}","Node 12 is connected to node 8.
Node 8 is connected to node 10.
Node 6 is connected to node 4.
Node 4 is connected to nodes 2, 0.
Node 3 is connected to nodes 7, 10, 12, 6.
Node 10 is connected to nodes 5, 2, 12, 7.
Node 0 is connected to node 12.
Node 5 is connected to node 9.
Node 1 is connected to nodes 5, 7.
Node 9 is connected to nodes 12, 6, 7.
Node 11 is connected to nodes 8, 2, 12, 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,24,True,Find the strongly connected component containing node 11. ,[11],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 11.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 7.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
Node 8 is a root node, find a new strongly connected component: [0, 4, 6, 9, 5, 12, 10, 8].
Node 11 is a root node, find a new strongly connected component: [11].
So the strongly connected component containing node 11 is ",0.0769230769230769,43
connected_component,"[(3, 2), (2, 5), (2, 0), (10, 0), (10, 12), (10, 7), (0, 13), (0, 5), (0, 6), (12, 13), (7, 11), (7, 6), (7, 2), (7, 5), (7, 9), (6, 3), (5, 4), (5, 12), (8, 5), (8, 6), (4, 7), (4, 5), (1, 0), (9, 0), (11, 2), (11, 13), (11, 7)]","{3: [2],
2: [5, 0],
10: [0, 12, 7],
0: [13, 5, 6],
12: [13],
7: [11, 6, 2, 5, 9],
6: [3],
13: [],
5: [4, 12],
8: [5, 6],
4: [7, 5],
1: [0],
9: [0],
11: [2, 13, 7]}","Node 3 is connected to node 2.
Node 2 is connected to nodes 5, 0.
Node 10 is connected to nodes 0, 12, 7.
Node 0 is connected to nodes 13, 5, 6.
Node 12 is connected to node 13.
Node 7 is connected to nodes 11, 6, 2, 5, 9.
Node 6 is connected to node 3.
Node 5 is connected to nodes 4, 12.
Node 8 is connected to nodes 5, 6.
Node 4 is connected to nodes 7, 5.
Node 1 is connected to node 0.
Node 9 is connected to node 0.
Node 11 is connected to nodes 2, 13, 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,27,True,Find the strongly connected component containing node 12. ,[12],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 12.
Visit neighbor node 13.
Search from node 13.
Node 13 is a root node, find a new strongly connected component: [13].
Node 12 is a root node, find a new strongly connected component: [12].
So the strongly connected component containing node 12 is ",0.0714285714285714,44
connected_component,"[(6, 0), (0, 3), (3, 5), (3, 0), (3, 6), (5, 7), (5, 3), (7, 0), (1, 6), (2, 0), (2, 4), (2, 7)]","{6: [0],
0: [3],
3: [5, 0, 6],
5: [7, 3],
7: [0],
1: [6],
2: [0, 4, 7],
4: []}","Node 6 is connected to node 0.
Node 0 is connected to node 3.
Node 3 is connected to nodes 5, 0, 6.
Node 5 is connected to nodes 7, 3.
Node 7 is connected to node 0.
Node 1 is connected to node 6.
Node 2 is connected to nodes 0, 4, 7.","[0, 1, 2, 3, 4, 5, 6, 7]",8,12,True,Find the strongly connected component containing node 1. ,[1],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 7.
Search from node 7.
Node 6 is a root node, find a new strongly connected component: [7, 5, 3, 0, 6].
Node 1 is a root node, find a new strongly connected component: [1].
So the strongly connected component containing node 1 is ",0.125,45
connected_component,"[(7, 10), (10, 6), (10, 5), (6, 0), (6, 7), (0, 10), (0, 4), (5, 3), (5, 11), (5, 2), (5, 10), (5, 7), (5, 6), (3, 10), (3, 5), (3, 4), (11, 6), (2, 6), (2, 9), (8, 11), (8, 9), (8, 6), (8, 5), (9, 3), (9, 11), (4, 11), (4, 0), (4, 7), (1, 7), (1, 8)]","{7: [10],
10: [6, 5],
6: [0, 7],
0: [10, 4],
5: [3, 11, 2, 10, 7, 6],
3: [10, 5, 4],
11: [6],
2: [6, 9],
8: [11, 9, 6, 5],
9: [3, 11],
4: [11, 0, 7],
1: [7, 8]}","Node 7 is connected to node 10.
Node 10 is connected to nodes 6, 5.
Node 6 is connected to nodes 0, 7.
Node 0 is connected to nodes 10, 4.
Node 5 is connected to nodes 3, 11, 2, 10, 7, 6.
Node 3 is connected to nodes 10, 5, 4.
Node 11 is connected to node 6.
Node 2 is connected to nodes 6, 9.
Node 8 is connected to nodes 11, 9, 6, 5.
Node 9 is connected to nodes 3, 11.
Node 4 is connected to nodes 11, 0, 7.
Node 1 is connected to nodes 7, 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,30,True,Find the strongly connected component containing node 11. ,"[7, 4, 3, 9, 2, 5, 10, 0, 6, 11]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 11.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Node 11 is a root node, find a new strongly connected component: [7, 4, 3, 9, 2, 5, 10, 0, 6, 11].
So the strongly connected component containing node 11 is ",0.8333333333333334,46
connected_component,"[(2, 13), (2, 4), (13, 12), (13, 6), (13, 4), (13, 9), (4, 0), (4, 6), (3, 0), (3, 1), (3, 2), (0, 13), (0, 3), (0, 14), (14, 8), (14, 3), (11, 2), (9, 6), (6, 0), (5, 8), (5, 1), (12, 6), (12, 1), (12, 0), (12, 10), (7, 10)]","{2: [13, 4],
13: [12, 6, 4, 9],
4: [0, 6],
3: [0, 1, 2],
0: [13, 3, 14],
1: [],
14: [8, 3],
8: [],
11: [2],
9: [6],
6: [0],
5: [8, 1],
12: [6, 1, 0, 10],
10: [],
7: [10]}","Node 2 is connected to nodes 13, 4.
Node 13 is connected to nodes 12, 6, 4, 9.
Node 4 is connected to nodes 0, 6.
Node 3 is connected to nodes 0, 1, 2.
Node 0 is connected to nodes 13, 3, 14.
Node 14 is connected to nodes 8, 3.
Node 11 is connected to node 2.
Node 9 is connected to node 6.
Node 6 is connected to node 0.
Node 5 is connected to nodes 8, 1.
Node 12 is connected to nodes 6, 1, 0, 10.
Node 7 is connected to node 10.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,26,True,Find the strongly connected component containing node 11. ,[11],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 11.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 10.
Search from node 10.
Node 10 is a root node, find a new strongly connected component: [10].
Visit neighbor node 14.
Search from node 14.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Node 2 is a root node, find a new strongly connected component: [14, 12, 6, 9, 13, 3, 0, 4, 2].
Node 11 is a root node, find a new strongly connected component: [11].
So the strongly connected component containing node 11 is ",0.0666666666666666,47
connected_component,"[(9, 0), (9, 7), (9, 3), (9, 2), (0, 3), (7, 9), (3, 9), (3, 5), (3, 8), (3, 7), (2, 0), (5, 2), (8, 2), (6, 4), (6, 7), (4, 5), (4, 8), (4, 1), (4, 3)]","{9: [0, 7, 3, 2],
0: [3],
7: [9],
3: [9, 5, 8, 7],
2: [0],
5: [2],
8: [2],
6: [4, 7],
4: [5, 8, 1, 3],
1: []}","Node 9 is connected to nodes 0, 7, 3, 2.
Node 0 is connected to node 3.
Node 7 is connected to node 9.
Node 3 is connected to nodes 9, 5, 8, 7.
Node 2 is connected to node 0.
Node 5 is connected to node 2.
Node 8 is connected to node 2.
Node 6 is connected to nodes 4, 7.
Node 4 is connected to nodes 5, 8, 1, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,19,True,Find the strongly connected component containing node 1. ,[1],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
So the strongly connected component containing node 1 is ",0.1,48
connected_component,"[(5, 8), (5, 2), (5, 0), (5, 1), (5, 4), (5, 3), (8, 7), (8, 10), (8, 4), (8, 9), (8, 6), (2, 7), (2, 1), (2, 4), (2, 6), (0, 10), (0, 1), (0, 4), (0, 3), (0, 6), (1, 10), (1, 4), (1, 3), (1, 6), (4, 7), (4, 3), (4, 6), (3, 10), (3, 9), (7, 10), (7, 9), (10, 6)]","{5: [8, 2, 0, 1, 4, 3],
8: [5, 7, 10, 4, 9, 6],
2: [5, 7, 1, 4, 6],
0: [5, 10, 1, 4, 3, 6],
1: [5, 2, 10, 0, 4, 3, 6],
4: [5, 8, 7, 2, 0, 1, 3, 6],
3: [5, 10, 0, 1, 4, 9],
7: [8, 2, 10, 4, 9],
10: [8, 7, 0, 1, 3, 6],
9: [8, 7, 3],
6: [8, 2, 10, 0, 1, 4]}","Node 5 is connected to nodes 8, 2, 0, 1, 4, 3.
Node 8 is connected to nodes 5, 7, 10, 4, 9, 6.
Node 2 is connected to nodes 5, 7, 1, 4, 6.
Node 0 is connected to nodes 5, 10, 1, 4, 3, 6.
Node 1 is connected to nodes 5, 2, 10, 0, 4, 3, 6.
Node 4 is connected to nodes 5, 8, 7, 2, 0, 1, 3, 6.
Node 3 is connected to nodes 5, 10, 0, 1, 4, 9.
Node 7 is connected to nodes 8, 2, 10, 4, 9.
Node 10 is connected to nodes 8, 7, 0, 1, 3, 6.
Node 9 is connected to nodes 8, 7, 3.
Node 6 is connected to nodes 8, 2, 10, 0, 1, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,32,False,Find the connected component containing node 4. ,"[4, 8, 10, 7, 2, 6, 1, 5, 3, 9, 0]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 4, add it to the connected component. The current connected component is [4].
Visit node 8, add it to the connected component. The current connected component is [4, 8].
Visit node 10, add it to the connected component. The current connected component is [4, 8, 10].
Visit node 7, add it to the connected component. The current connected component is [4, 8, 10, 7].
Visit node 2, add it to the connected component. The current connected component is [4, 8, 10, 7, 2].
Visit node 6, add it to the connected component. The current connected component is [4, 8, 10, 7, 2, 6].
Visit node 1, add it to the connected component. The current connected component is [4, 8, 10, 7, 2, 6, 1].
Visit node 5, add it to the connected component. The current connected component is [4, 8, 10, 7, 2, 6, 1, 5].
Visit node 3, add it to the connected component. The current connected component is [4, 8, 10, 7, 2, 6, 1, 5, 3].
Visit node 9, add it to the connected component. The current connected component is [4, 8, 10, 7, 2, 6, 1, 5, 3, 9].
Visit node 0, add it to the connected component. The current connected component is [4, 8, 10, 7, 2, 6, 1, 5, 3, 9, 0].
Thus, the connected component containing node 4 is ",1.0,49
connected_component,"[(6, 5), (6, 7), (5, 7), (5, 4), (5, 6), (5, 3), (7, 4), (7, 0), (7, 6), (7, 3), (7, 5), (3, 7), (4, 0), (4, 5), (4, 7), (0, 5), (0, 7), (1, 0), (1, 6), (1, 3), (1, 5), (1, 4), (2, 6), (2, 3), (2, 1)]","{6: [5, 7],
5: [7, 4, 6, 3],
7: [4, 0, 6, 3, 5],
3: [7],
4: [0, 5, 7],
0: [5, 7],
1: [0, 6, 3, 5, 4],
2: [6, 3, 1]}","Node 6 is connected to nodes 5, 7.
Node 5 is connected to nodes 7, 4, 6, 3.
Node 7 is connected to nodes 4, 0, 6, 3, 5.
Node 3 is connected to node 7.
Node 4 is connected to nodes 0, 5, 7.
Node 0 is connected to nodes 5, 7.
Node 1 is connected to nodes 0, 6, 3, 5, 4.
Node 2 is connected to nodes 6, 3, 1.","[0, 1, 2, 3, 4, 5, 6, 7]",8,25,True,Find the strongly connected component containing node 4. ,"[6, 7, 3, 5, 0, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Node 4 is a root node, find a new strongly connected component: [6, 7, 3, 5, 0, 4].
So the strongly connected component containing node 4 is ",0.75,50
connected_component,"[(1, 8), (8, 4), (8, 3), (0, 1), (5, 6), (5, 1), (6, 0), (6, 7), (4, 8), (4, 1), (7, 2), (7, 3), (7, 4), (2, 3), (2, 6), (2, 0), (2, 5)]","{1: [8],
8: [4, 3],
0: [1],
5: [6, 1],
6: [0, 7],
4: [8, 1],
7: [2, 3, 4],
2: [3, 6, 0, 5],
3: []}","Node 1 is connected to node 8.
Node 8 is connected to nodes 4, 3.
Node 0 is connected to node 1.
Node 5 is connected to nodes 6, 1.
Node 6 is connected to nodes 0, 7.
Node 4 is connected to nodes 8, 1.
Node 7 is connected to nodes 2, 3, 4.
Node 2 is connected to nodes 3, 6, 0, 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,17,True,Find the strongly connected component containing node 2. ,"[7, 6, 5, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 4.
Search from node 4.
Node 1 is a root node, find a new strongly connected component: [4, 8, 1].
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Node 2 is a root node, find a new strongly connected component: [7, 6, 5, 2].
So the strongly connected component containing node 2 is ",0.4444444444444444,51
connected_component,"[(1, 8), (1, 11), (1, 3), (8, 2), (8, 0), (8, 3), (8, 10), (11, 9), (11, 1), (11, 8), (3, 10), (3, 12), (3, 5), (3, 1), (3, 2), (2, 12), (2, 5), (2, 4), (2, 11), (0, 3), (0, 12), (0, 7), (0, 11), (10, 13), (10, 12), (10, 8), (10, 7), (10, 11), (10, 9), (10, 2), (7, 11), (7, 2), (7, 1), (7, 8), (4, 13), (4, 5), (4, 1), (4, 7), (13, 8), (5, 11), (5, 3), (5, 10), (5, 13), (9, 0), (9, 5), (12, 9), (12, 0), (6, 13), (6, 5), (6, 7)]","{1: [8, 11, 3],
8: [2, 0, 3, 10],
11: [9, 1, 8],
3: [10, 12, 5, 1, 2],
2: [12, 5, 4, 11],
0: [3, 12, 7, 11],
10: [13, 12, 8, 7, 11, 9, 2],
7: [11, 2, 1, 8],
4: [13, 5, 1, 7],
13: [8],
5: [11, 3, 10, 13],
9: [0, 5],
12: [9, 0],
6: [13, 5, 7]}","Node 1 is connected to nodes 8, 11, 3.
Node 8 is connected to nodes 2, 0, 3, 10.
Node 11 is connected to nodes 9, 1, 8.
Node 3 is connected to nodes 10, 12, 5, 1, 2.
Node 2 is connected to nodes 12, 5, 4, 11.
Node 0 is connected to nodes 3, 12, 7, 11.
Node 10 is connected to nodes 13, 12, 8, 7, 11, 9, 2.
Node 7 is connected to nodes 11, 2, 1, 8.
Node 4 is connected to nodes 13, 5, 1, 7.
Node 13 is connected to node 8.
Node 5 is connected to nodes 11, 3, 10, 13.
Node 9 is connected to nodes 0, 5.
Node 12 is connected to nodes 9, 0.
Node 6 is connected to nodes 13, 5, 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,50,True,Find the strongly connected component containing node 6. ,[6],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 10.
Search from node 10.
Node 5 is a root node, find a new strongly connected component: [10, 13, 4, 2, 7, 12, 9, 11, 0, 8, 1, 3, 5].
Node 6 is a root node, find a new strongly connected component: [6].
So the strongly connected component containing node 6 is ",0.0714285714285714,52
connected_component,"[(4, 10), (4, 0), (0, 4), (7, 2), (7, 1), (2, 6), (2, 7), (1, 4), (6, 10), (6, 7), (6, 9), (6, 2), (6, 1), (6, 8), (5, 9), (3, 4), (3, 7), (8, 6), (8, 4), (8, 9), (8, 2), (8, 0)]","{4: [10, 0],
10: [],
0: [4],
7: [2, 1],
2: [6, 7],
1: [4],
6: [10, 7, 9, 2, 1, 8],
5: [9],
9: [],
3: [4, 7],
8: [6, 4, 9, 2, 0]}","Node 4 is connected to nodes 10, 0.
Node 0 is connected to node 4.
Node 7 is connected to nodes 2, 1.
Node 2 is connected to nodes 6, 7.
Node 1 is connected to node 4.
Node 6 is connected to nodes 10, 7, 9, 2, 1, 8.
Node 5 is connected to node 9.
Node 3 is connected to nodes 4, 7.
Node 8 is connected to nodes 6, 4, 9, 2, 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,22,True,Find the strongly connected component containing node 10. ,[10],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 10.
Node 10 is a root node, find a new strongly connected component: [10].
So the strongly connected component containing node 10 is ",0.0909090909090909,53
connected_component,"[(3, 2), (2, 7), (2, 3), (2, 5), (0, 6), (6, 0), (6, 5), (6, 1), (6, 9), (6, 7), (5, 9), (5, 3), (9, 8), (9, 7), (9, 4), (1, 4), (4, 0)]","{3: [2],
2: [7, 3, 5],
0: [6],
6: [0, 5, 1, 9, 7],
5: [9, 3],
9: [8, 7, 4],
1: [4],
4: [0],
7: [],
8: []}","Node 3 is connected to node 2.
Node 2 is connected to nodes 7, 3, 5.
Node 0 is connected to node 6.
Node 6 is connected to nodes 0, 5, 1, 9, 7.
Node 5 is connected to nodes 9, 3.
Node 9 is connected to nodes 8, 7, 4.
Node 1 is connected to node 4.
Node 4 is connected to node 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,17,True,Find the strongly connected component containing node 7. ,[7],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
So the strongly connected component containing node 7 is ",0.1,54
connected_component,"[(0, 3), (0, 2), (0, 1), (3, 9), (3, 5), (3, 8), (1, 6), (1, 0), (1, 8), (9, 6), (9, 8), (9, 2), (9, 7), (5, 2), (5, 7), (7, 6), (6, 3), (6, 1), (4, 1), (4, 8), (4, 7)]","{0: [3, 2, 1],
3: [9, 5, 8],
2: [],
1: [6, 0, 8],
9: [6, 8, 2, 7],
5: [2, 7],
8: [],
7: [6],
6: [3, 1],
4: [1, 8, 7]}","Node 0 is connected to nodes 3, 2, 1.
Node 3 is connected to nodes 9, 5, 8.
Node 1 is connected to nodes 6, 0, 8.
Node 9 is connected to nodes 6, 8, 2, 7.
Node 5 is connected to nodes 2, 7.
Node 7 is connected to node 6.
Node 6 is connected to nodes 3, 1.
Node 4 is connected to nodes 1, 8, 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,21,True,Find the strongly connected component containing node 4. ,[4],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Node 1 is a root node, find a new strongly connected component: [5, 7, 6, 9, 3, 0, 1].
Node 4 is a root node, find a new strongly connected component: [4].
So the strongly connected component containing node 4 is ",0.1,55
connected_component,"[(5, 6), (6, 2), (6, 3), (6, 7), (7, 1), (7, 4), (1, 2), (1, 7), (4, 2), (4, 3), (0, 4), (0, 3), (0, 7), (2, 5), (2, 7), (2, 1), (2, 4), (2, 6)]","{5: [6],
6: [2, 3, 7],
7: [1, 4],
1: [2, 7],
4: [2, 3],
0: [4, 3, 7],
3: [],
2: [5, 7, 1, 4, 6]}","Node 5 is connected to node 6.
Node 6 is connected to nodes 2, 3, 7.
Node 7 is connected to nodes 1, 4.
Node 1 is connected to nodes 2, 7.
Node 4 is connected to nodes 2, 3.
Node 0 is connected to nodes 4, 3, 7.
Node 2 is connected to nodes 5, 7, 1, 4, 6.","[0, 1, 2, 3, 4, 5, 6, 7]",8,18,True,Find the strongly connected component containing node 4. ,"[6, 5, 7, 1, 2, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Node 4 is a root node, find a new strongly connected component: [6, 5, 7, 1, 2, 4].
So the strongly connected component containing node 4 is ",0.75,56
connected_component,"[(9, 2), (9, 4), (9, 8), (2, 7), (2, 8), (2, 9), (4, 6), (4, 7), (4, 5), (4, 9), (8, 2), (8, 4), (8, 6), (8, 5), (3, 4), (3, 7), (3, 5), (7, 5), (7, 8), (7, 3), (7, 2), (7, 4), (5, 3), (5, 4), (0, 7), (0, 1), (0, 9), (0, 2), (1, 5), (1, 3), (6, 1), (6, 3), (6, 2), (6, 4)]","{9: [2, 4, 8],
2: [7, 8, 9],
4: [6, 7, 5, 9],
8: [2, 4, 6, 5],
3: [4, 7, 5],
7: [5, 8, 3, 2, 4],
5: [3, 4],
0: [7, 1, 9, 2],
1: [5, 3],
6: [1, 3, 2, 4]}","Node 9 is connected to nodes 2, 4, 8.
Node 2 is connected to nodes 7, 8, 9.
Node 4 is connected to nodes 6, 7, 5, 9.
Node 8 is connected to nodes 2, 4, 6, 5.
Node 3 is connected to nodes 4, 7, 5.
Node 7 is connected to nodes 5, 8, 3, 2, 4.
Node 5 is connected to nodes 3, 4.
Node 0 is connected to nodes 7, 1, 9, 2.
Node 1 is connected to nodes 5, 3.
Node 6 is connected to nodes 1, 3, 2, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,34,True,Find the strongly connected component containing node 2. ,"[1, 6, 7, 3, 5, 9, 4, 8, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Node 2 is a root node, find a new strongly connected component: [1, 6, 7, 3, 5, 9, 4, 8, 2].
So the strongly connected component containing node 2 is ",0.9,57
connected_component,"[(5, 8), (5, 6), (5, 7), (7, 2), (7, 3), (7, 1), (2, 6), (2, 7), (2, 5), (4, 1), (4, 7), (4, 5), (4, 8), (1, 6), (1, 5), (3, 1), (3, 0), (0, 5), (0, 8), (0, 2), (0, 3), (0, 6)]","{5: [8, 6, 7],
8: [],
6: [],
7: [2, 3, 1],
2: [6, 7, 5],
4: [1, 7, 5, 8],
1: [6, 5],
3: [1, 0],
0: [5, 8, 2, 3, 6]}","Node 5 is connected to nodes 8, 6, 7.
Node 7 is connected to nodes 2, 3, 1.
Node 2 is connected to nodes 6, 7, 5.
Node 4 is connected to nodes 1, 7, 5, 8.
Node 1 is connected to nodes 6, 5.
Node 3 is connected to nodes 1, 0.
Node 0 is connected to nodes 5, 8, 2, 3, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,22,True,Find the strongly connected component containing node 0. ,"[3, 1, 7, 5, 2, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Node 0 is a root node, find a new strongly connected component: [3, 1, 7, 5, 2, 0].
So the strongly connected component containing node 0 is ",0.6666666666666666,58
connected_component,"[(6, 9), (6, 3), (6, 7), (6, 1), (6, 4), (9, 3), (3, 11), (3, 7), (7, 1), (7, 5), (7, 2), (7, 8), (1, 5), (1, 2), (1, 8), (1, 10), (4, 5), (11, 8), (8, 0), (2, 0)]","{6: [9, 3, 7, 1, 4],
9: [6, 3],
3: [6, 9, 11, 7],
7: [6, 3, 1, 5, 2, 8],
1: [6, 5, 2, 8, 7, 10],
4: [6, 5],
11: [3, 8],
8: [11, 1, 0, 7],
5: [1, 4, 7],
2: [1, 0, 7],
10: [1],
0: [2, 8]}","Node 6 is connected to nodes 9, 3, 7, 1, 4.
Node 9 is connected to nodes 6, 3.
Node 3 is connected to nodes 6, 9, 11, 7.
Node 7 is connected to nodes 6, 3, 1, 5, 2, 8.
Node 1 is connected to nodes 6, 5, 2, 8, 7, 10.
Node 4 is connected to nodes 6, 5.
Node 11 is connected to nodes 3, 8.
Node 8 is connected to nodes 11, 1, 0, 7.
Node 5 is connected to nodes 1, 4, 7.
Node 2 is connected to nodes 1, 0, 7.
Node 10 is connected to node 1.
Node 0 is connected to nodes 2, 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,20,False,Find the connected component containing node 8. ,"[8, 7, 6, 9, 3, 11, 4, 5, 1, 10, 2, 0]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 8, add it to the connected component. The current connected component is [8].
Visit node 7, add it to the connected component. The current connected component is [8, 7].
Visit node 6, add it to the connected component. The current connected component is [8, 7, 6].
Visit node 9, add it to the connected component. The current connected component is [8, 7, 6, 9].
Visit node 3, add it to the connected component. The current connected component is [8, 7, 6, 9, 3].
Visit node 11, add it to the connected component. The current connected component is [8, 7, 6, 9, 3, 11].
Visit node 4, add it to the connected component. The current connected component is [8, 7, 6, 9, 3, 11, 4].
Visit node 5, add it to the connected component. The current connected component is [8, 7, 6, 9, 3, 11, 4, 5].
Visit node 1, add it to the connected component. The current connected component is [8, 7, 6, 9, 3, 11, 4, 5, 1].
Visit node 10, add it to the connected component. The current connected component is [8, 7, 6, 9, 3, 11, 4, 5, 1, 10].
Visit node 2, add it to the connected component. The current connected component is [8, 7, 6, 9, 3, 11, 4, 5, 1, 10, 2].
Visit node 0, add it to the connected component. The current connected component is [8, 7, 6, 9, 3, 11, 4, 5, 1, 10, 2, 0].
Thus, the connected component containing node 8 is ",1.0,59
connected_component,"[(10, 4), (10, 5), (10, 2), (10, 11), (4, 8), (4, 1), (4, 9), (4, 6), (5, 2), (5, 10), (5, 8), (2, 11), (2, 0), (11, 9), (11, 10), (11, 5), (8, 5), (8, 2), (8, 11), (8, 1), (8, 10), (1, 4), (9, 0), (9, 11), (9, 1), (6, 10), (6, 4), (6, 11), (0, 8), (0, 5), (0, 9), (0, 6), (3, 1), (3, 4), (3, 5), (7, 8), (7, 11)]","{10: [4, 5, 2, 11],
4: [8, 1, 9, 6],
5: [2, 10, 8],
2: [11, 0],
11: [9, 10, 5],
8: [5, 2, 11, 1, 10],
1: [4],
9: [0, 11, 1],
6: [10, 4, 11],
0: [8, 5, 9, 6],
3: [1, 4, 5],
7: [8, 11]}","Node 10 is connected to nodes 4, 5, 2, 11.
Node 4 is connected to nodes 8, 1, 9, 6.
Node 5 is connected to nodes 2, 10, 8.
Node 2 is connected to nodes 11, 0.
Node 11 is connected to nodes 9, 10, 5.
Node 8 is connected to nodes 5, 2, 11, 1, 10.
Node 1 is connected to node 4.
Node 9 is connected to nodes 0, 11, 1.
Node 6 is connected to nodes 10, 4, 11.
Node 0 is connected to nodes 8, 5, 9, 6.
Node 3 is connected to nodes 1, 4, 5.
Node 7 is connected to nodes 8, 11.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,37,True,Find the strongly connected component containing node 11. ,"[5, 2, 10, 6, 4, 1, 8, 0, 9, 11]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 11.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 5.
Search from node 5.
Node 11 is a root node, find a new strongly connected component: [5, 2, 10, 6, 4, 1, 8, 0, 9, 11].
So the strongly connected component containing node 11 is ",0.8333333333333334,60
connected_component,"[(4, 8), (4, 7), (4, 3), (8, 0), (8, 4), (7, 2), (7, 8), (3, 0), (1, 7), (1, 5), (5, 2), (0, 2), (0, 5), (0, 7), (2, 5), (2, 3), (2, 1), (2, 8), (6, 5), (6, 1), (6, 0)]","{4: [8, 7, 3],
8: [0, 4],
7: [2, 8],
3: [0],
1: [7, 5],
5: [2],
0: [2, 5, 7],
2: [5, 3, 1, 8],
6: [5, 1, 0]}","Node 4 is connected to nodes 8, 7, 3.
Node 8 is connected to nodes 0, 4.
Node 7 is connected to nodes 2, 8.
Node 3 is connected to node 0.
Node 1 is connected to nodes 7, 5.
Node 5 is connected to node 2.
Node 0 is connected to nodes 2, 5, 7.
Node 2 is connected to nodes 5, 3, 1, 8.
Node 6 is connected to nodes 5, 1, 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,21,True,Find the strongly connected component containing node 5. ,"[1, 3, 4, 7, 0, 8, 2, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Node 5 is a root node, find a new strongly connected component: [1, 3, 4, 7, 0, 8, 2, 5].
So the strongly connected component containing node 5 is ",0.8888888888888888,61
connected_component,"[(1, 8), (1, 3), (8, 3), (8, 5), (8, 2), (3, 7), (2, 4), (2, 3), (2, 1), (4, 3), (4, 7), (4, 1), (4, 8), (5, 0), (5, 4), (5, 9), (6, 4), (6, 9), (6, 0), (9, 3), (0, 2), (7, 3)]","{1: [8, 3],
8: [3, 5, 2],
3: [7],
2: [4, 3, 1],
4: [3, 7, 1, 8],
5: [0, 4, 9],
6: [4, 9, 0],
9: [3],
0: [2],
7: [3]}","Node 1 is connected to nodes 8, 3.
Node 8 is connected to nodes 3, 5, 2.
Node 3 is connected to node 7.
Node 2 is connected to nodes 4, 3, 1.
Node 4 is connected to nodes 3, 7, 1, 8.
Node 5 is connected to nodes 0, 4, 9.
Node 6 is connected to nodes 4, 9, 0.
Node 9 is connected to node 3.
Node 0 is connected to node 2.
Node 7 is connected to node 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,22,True,Find the strongly connected component containing node 1. ,"[0, 5, 4, 2, 8, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Node 3 is a root node, find a new strongly connected component: [7, 3].
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Node 1 is a root node, find a new strongly connected component: [0, 5, 4, 2, 8, 1].
So the strongly connected component containing node 1 is ",0.6,62
connected_component,"[(1, 12), (1, 7), (1, 3), (12, 6), (12, 0), (7, 3), (7, 4), (7, 10), (7, 5), (3, 11), (3, 4), (3, 10), (3, 7), (4, 5), (4, 11), (5, 4), (10, 12), (10, 11), (10, 4), (2, 0), (2, 8), (2, 9), (2, 1), (2, 4), (2, 10), (0, 6), (0, 11), (8, 4), (8, 6), (9, 7), (9, 3), (6, 5), (6, 2)]","{1: [12, 7, 3],
12: [6, 0],
7: [3, 4, 10, 5],
3: [11, 4, 10, 7],
4: [5, 11],
5: [4],
11: [],
10: [12, 11, 4],
2: [0, 8, 9, 1, 4, 10],
0: [6, 11],
8: [4, 6],
9: [7, 3],
6: [5, 2]}","Node 1 is connected to nodes 12, 7, 3.
Node 12 is connected to nodes 6, 0.
Node 7 is connected to nodes 3, 4, 10, 5.
Node 3 is connected to nodes 11, 4, 10, 7.
Node 4 is connected to nodes 5, 11.
Node 5 is connected to node 4.
Node 10 is connected to nodes 12, 11, 4.
Node 2 is connected to nodes 0, 8, 9, 1, 4, 10.
Node 0 is connected to nodes 6, 11.
Node 8 is connected to nodes 4, 6.
Node 9 is connected to nodes 7, 3.
Node 6 is connected to nodes 5, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,33,True,Find the strongly connected component containing node 5. ,"[4, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 11.
Search from node 11.
Node 11 is a root node, find a new strongly connected component: [11].
Node 5 is a root node, find a new strongly connected component: [4, 5].
So the strongly connected component containing node 5 is ",0.1538461538461538,63
connected_component,"[(5, 4), (5, 2), (4, 11), (2, 6), (11, 6), (11, 1), (11, 10), (11, 9), (8, 3), (8, 10), (3, 6), (3, 1), (10, 8), (10, 1), (6, 1), (6, 10), (6, 4), (1, 0), (7, 8), (7, 6), (0, 4), (0, 6), (0, 3), (9, 8)]","{5: [4, 2],
4: [11],
2: [6],
11: [6, 1, 10, 9],
8: [3, 10],
3: [6, 1],
10: [8, 1],
6: [1, 10, 4],
1: [0],
7: [8, 6],
0: [4, 6, 3],
9: [8]}","Node 5 is connected to nodes 4, 2.
Node 4 is connected to node 11.
Node 2 is connected to node 6.
Node 11 is connected to nodes 6, 1, 10, 9.
Node 8 is connected to nodes 3, 10.
Node 3 is connected to nodes 6, 1.
Node 10 is connected to nodes 8, 1.
Node 6 is connected to nodes 1, 10, 4.
Node 1 is connected to node 0.
Node 7 is connected to nodes 8, 6.
Node 0 is connected to nodes 4, 6, 3.
Node 9 is connected to node 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,24,True,Find the strongly connected component containing node 6. ,"[9, 8, 10, 11, 4, 3, 0, 1, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 9.
Search from node 9.
Node 6 is a root node, find a new strongly connected component: [9, 8, 10, 11, 4, 3, 0, 1, 6].
So the strongly connected component containing node 6 is ",0.75,64
connected_component,"[(3, 6), (6, 4), (4, 3), (4, 6), (1, 2), (1, 4), (1, 5), (1, 6), (2, 7), (5, 3), (7, 1), (7, 2), (0, 2), (0, 4)]","{3: [6],
6: [4],
4: [3, 6],
1: [2, 4, 5, 6],
2: [7],
5: [3],
7: [1, 2],
0: [2, 4]}","Node 3 is connected to node 6.
Node 6 is connected to node 4.
Node 4 is connected to nodes 3, 6.
Node 1 is connected to nodes 2, 4, 5, 6.
Node 2 is connected to node 7.
Node 5 is connected to node 3.
Node 7 is connected to nodes 1, 2.
Node 0 is connected to nodes 2, 4.","[0, 1, 2, 3, 4, 5, 6, 7]",8,14,True,Find the strongly connected component containing node 2. ,"[1, 7, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 6.
Search from node 6.
Node 4 is a root node, find a new strongly connected component: [6, 3, 4].
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Node 2 is a root node, find a new strongly connected component: [1, 7, 2].
So the strongly connected component containing node 2 is ",0.375,65
connected_component,"[(9, 2), (9, 4), (2, 13), (2, 12), (4, 2), (5, 1), (5, 10), (1, 9), (1, 0), (0, 7), (11, 13), (13, 5), (13, 11), (3, 10), (3, 7), (6, 8), (6, 9), (6, 1), (8, 10), (8, 11), (8, 4)]","{9: [2, 4],
2: [13, 12],
4: [2],
5: [1, 10],
1: [9, 0],
10: [],
0: [7],
7: [],
11: [13],
13: [5, 11],
12: [],
3: [10, 7],
6: [8, 9, 1],
8: [10, 11, 4]}","Node 9 is connected to nodes 2, 4.
Node 2 is connected to nodes 13, 12.
Node 4 is connected to node 2.
Node 5 is connected to nodes 1, 10.
Node 1 is connected to nodes 9, 0.
Node 0 is connected to node 7.
Node 11 is connected to node 13.
Node 13 is connected to nodes 5, 11.
Node 3 is connected to nodes 10, 7.
Node 6 is connected to nodes 8, 9, 1.
Node 8 is connected to nodes 10, 11, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,21,True,Find the strongly connected component containing node 9. ,"[4, 1, 5, 11, 13, 2, 9]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 9.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 12.
Search from node 12.
Node 12 is a root node, find a new strongly connected component: [12].
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 7.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 10.
Search from node 10.
Node 10 is a root node, find a new strongly connected component: [10].
Visit neighbor node 4.
Search from node 4.
Node 9 is a root node, find a new strongly connected component: [4, 1, 5, 11, 13, 2, 9].
So the strongly connected component containing node 9 is ",0.5,66
connected_component,"[(7, 2), (7, 0), (2, 6), (2, 8), (0, 6), (0, 8), (5, 0), (5, 6), (5, 3), (6, 7), (6, 5), (8, 5), (4, 6), (4, 1), (4, 7), (1, 5), (1, 8), (1, 0)]","{7: [2, 0],
2: [6, 8],
0: [6, 8],
5: [0, 6, 3],
6: [7, 5],
3: [],
8: [5],
4: [6, 1, 7],
1: [5, 8, 0]}","Node 7 is connected to nodes 2, 0.
Node 2 is connected to nodes 6, 8.
Node 0 is connected to nodes 6, 8.
Node 5 is connected to nodes 0, 6, 3.
Node 6 is connected to nodes 7, 5.
Node 8 is connected to node 5.
Node 4 is connected to nodes 6, 1, 7.
Node 1 is connected to nodes 5, 8, 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,18,True,Find the strongly connected component containing node 6. ,"[2, 7, 8, 0, 5, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Node 6 is a root node, find a new strongly connected component: [2, 7, 8, 0, 5, 6].
So the strongly connected component containing node 6 is ",0.6666666666666666,67
connected_component,"[(11, 1), (11, 3), (1, 5), (1, 7), (1, 3), (1, 11), (3, 10), (14, 10), (14, 0), (14, 11), (10, 3), (10, 8), (0, 7), (8, 4), (8, 14), (4, 3), (5, 4), (5, 0), (5, 1), (13, 12), (12, 11), (12, 13), (2, 6), (2, 12), (2, 5), (6, 4), (6, 0), (6, 9), (9, 8), (9, 2), (9, 0)]","{11: [1, 3],
1: [5, 7, 3, 11],
3: [10],
14: [10, 0, 11],
10: [3, 8],
0: [7],
8: [4, 14],
4: [3],
5: [4, 0, 1],
7: [],
13: [12],
12: [11, 13],
2: [6, 12, 5],
6: [4, 0, 9],
9: [8, 2, 0]}","Node 11 is connected to nodes 1, 3.
Node 1 is connected to nodes 5, 7, 3, 11.
Node 3 is connected to node 10.
Node 14 is connected to nodes 10, 0, 11.
Node 10 is connected to nodes 3, 8.
Node 0 is connected to node 7.
Node 8 is connected to nodes 4, 14.
Node 4 is connected to node 3.
Node 5 is connected to nodes 4, 0, 1.
Node 13 is connected to node 12.
Node 12 is connected to nodes 11, 13.
Node 2 is connected to nodes 6, 12, 5.
Node 6 is connected to nodes 4, 0, 9.
Node 9 is connected to nodes 8, 2, 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,31,True,Find the strongly connected component containing node 11. ,"[5, 14, 4, 8, 10, 3, 1, 11]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 11.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 14.
Search from node 14.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 7.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 5.
Search from node 5.
Node 11 is a root node, find a new strongly connected component: [5, 14, 4, 8, 10, 3, 1, 11].
So the strongly connected component containing node 11 is ",0.5333333333333333,68
connected_component,"[(4, 0), (4, 6), (4, 3), (4, 8), (0, 3), (0, 7), (0, 4), (6, 3), (6, 2), (6, 4), (6, 0), (3, 2), (3, 0), (8, 4), (1, 6), (1, 3), (1, 8), (1, 7), (1, 5), (1, 4), (7, 5), (7, 2), (7, 0), (7, 3), (5, 4), (5, 8), (2, 0)]","{4: [0, 6, 3, 8],
0: [3, 7, 4],
6: [3, 2, 4, 0],
3: [2, 0],
8: [4],
1: [6, 3, 8, 7, 5, 4],
7: [5, 2, 0, 3],
5: [4, 8],
2: [0]}","Node 4 is connected to nodes 0, 6, 3, 8.
Node 0 is connected to nodes 3, 7, 4.
Node 6 is connected to nodes 3, 2, 4, 0.
Node 3 is connected to nodes 2, 0.
Node 8 is connected to node 4.
Node 1 is connected to nodes 6, 3, 8, 7, 5, 4.
Node 7 is connected to nodes 5, 2, 0, 3.
Node 5 is connected to nodes 4, 8.
Node 2 is connected to node 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,27,True,Find the strongly connected component containing node 2. ,"[5, 7, 6, 8, 4, 3, 0, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Node 2 is a root node, find a new strongly connected component: [5, 7, 6, 8, 4, 3, 0, 2].
So the strongly connected component containing node 2 is ",0.8888888888888888,69
connected_component,"[(1, 11), (1, 12), (1, 7), (1, 9), (1, 6), (1, 3), (1, 5), (1, 8), (1, 2), (1, 10), (1, 4), (1, 13), (11, 7), (11, 0), (11, 6), (11, 5), (11, 2), (11, 10), (11, 13), (12, 7), (12, 0), (12, 5), (12, 2), (12, 10), (12, 4), (12, 13), (7, 0), (7, 6), (7, 3), (7, 5), (7, 8), (7, 10), (7, 13), (9, 6), (9, 3), (9, 5), (9, 8), (9, 2), (9, 10), (9, 4), (9, 13), (6, 0), (6, 3), (6, 5), (6, 8), (6, 2), (6, 10), (6, 4), (6, 13), (3, 0), (3, 5), (3, 8), (3, 2), (3, 10), (3, 4), (5, 0), (5, 8), (5, 2), (5, 10), (5, 4), (5, 13), (8, 0), (8, 10), (8, 4), (2, 0), (2, 4), (2, 13), (4, 0), (4, 13), (13, 0)]","{1: [11, 12, 7, 9, 6, 3, 5, 8, 2, 10, 4, 13],
11: [1, 7, 0, 6, 5, 2, 10, 13],
12: [1, 7, 0, 5, 2, 10, 4, 13],
7: [1, 11, 12, 0, 6, 3, 5, 8, 10, 13],
9: [1, 6, 3, 5, 8, 2, 10, 4, 13],
6: [1, 11, 7, 9, 0, 3, 5, 8, 2, 10, 4, 13],
3: [1, 7, 9, 0, 6, 5, 8, 2, 10, 4],
5: [1, 11, 12, 7, 9, 0, 6, 3, 8, 2, 10, 4, 13],
8: [1, 7, 9, 0, 6, 3, 5, 10, 4],
2: [1, 11, 12, 9, 0, 6, 3, 5, 4, 13],
10: [1, 11, 12, 7, 9, 6, 3, 5, 8],
4: [1, 12, 9, 0, 6, 3, 5, 8, 2, 13],
13: [1, 11, 12, 7, 9, 0, 6, 5, 2, 4],
0: [11, 12, 7, 6, 3, 5, 8, 2, 4, 13]}","Node 1 is connected to nodes 11, 12, 7, 9, 6, 3, 5, 8, 2, 10, 4, 13.
Node 11 is connected to nodes 1, 7, 0, 6, 5, 2, 10, 13.
Node 12 is connected to nodes 1, 7, 0, 5, 2, 10, 4, 13.
Node 7 is connected to nodes 1, 11, 12, 0, 6, 3, 5, 8, 10, 13.
Node 9 is connected to nodes 1, 6, 3, 5, 8, 2, 10, 4, 13.
Node 6 is connected to nodes 1, 11, 7, 9, 0, 3, 5, 8, 2, 10, 4, 13.
Node 3 is connected to nodes 1, 7, 9, 0, 6, 5, 8, 2, 10, 4.
Node 5 is connected to nodes 1, 11, 12, 7, 9, 0, 6, 3, 8, 2, 10, 4, 13.
Node 8 is connected to nodes 1, 7, 9, 0, 6, 3, 5, 10, 4.
Node 2 is connected to nodes 1, 11, 12, 9, 0, 6, 3, 5, 4, 13.
Node 10 is connected to nodes 1, 11, 12, 7, 9, 6, 3, 5, 8.
Node 4 is connected to nodes 1, 12, 9, 0, 6, 3, 5, 8, 2, 13.
Node 13 is connected to nodes 1, 11, 12, 7, 9, 0, 6, 5, 2, 4.
Node 0 is connected to nodes 11, 12, 7, 6, 3, 5, 8, 2, 4, 13.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,70,False,Find the connected component containing node 1. ,"[1, 13, 12, 10, 11, 7, 8, 9, 6, 5, 4, 3, 2, 0]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 1, add it to the connected component. The current connected component is [1].
Visit node 13, add it to the connected component. The current connected component is [1, 13].
Visit node 12, add it to the connected component. The current connected component is [1, 13, 12].
Visit node 10, add it to the connected component. The current connected component is [1, 13, 12, 10].
Visit node 11, add it to the connected component. The current connected component is [1, 13, 12, 10, 11].
Visit node 7, add it to the connected component. The current connected component is [1, 13, 12, 10, 11, 7].
Visit node 8, add it to the connected component. The current connected component is [1, 13, 12, 10, 11, 7, 8].
Visit node 9, add it to the connected component. The current connected component is [1, 13, 12, 10, 11, 7, 8, 9].
Visit node 6, add it to the connected component. The current connected component is [1, 13, 12, 10, 11, 7, 8, 9, 6].
Visit node 5, add it to the connected component. The current connected component is [1, 13, 12, 10, 11, 7, 8, 9, 6, 5].
Visit node 4, add it to the connected component. The current connected component is [1, 13, 12, 10, 11, 7, 8, 9, 6, 5, 4].
Visit node 3, add it to the connected component. The current connected component is [1, 13, 12, 10, 11, 7, 8, 9, 6, 5, 4, 3].
Visit node 2, add it to the connected component. The current connected component is [1, 13, 12, 10, 11, 7, 8, 9, 6, 5, 4, 3, 2].
Visit node 0, add it to the connected component. The current connected component is [1, 13, 12, 10, 11, 7, 8, 9, 6, 5, 4, 3, 2, 0].
Thus, the connected component containing node 1 is ",1.0,70
connected_component,"[(1, 0), (1, 8), (0, 11), (0, 4), (0, 10), (8, 10), (8, 4), (10, 5), (10, 11), (10, 3), (5, 12), (5, 0), (5, 2), (5, 1), (3, 5), (3, 12), (7, 3), (7, 6), (6, 9), (6, 2), (12, 4), (12, 1), (12, 10), (12, 7), (2, 3), (2, 10), (2, 9), (4, 8)]","{1: [0, 8],
0: [11, 4, 10],
8: [10, 4],
10: [5, 11, 3],
5: [12, 0, 2, 1],
11: [],
3: [5, 12],
7: [3, 6],
6: [9, 2],
12: [4, 1, 10, 7],
2: [3, 10, 9],
4: [8],
9: []}","Node 1 is connected to nodes 0, 8.
Node 0 is connected to nodes 11, 4, 10.
Node 8 is connected to nodes 10, 4.
Node 10 is connected to nodes 5, 11, 3.
Node 5 is connected to nodes 12, 0, 2, 1.
Node 3 is connected to nodes 5, 12.
Node 7 is connected to nodes 3, 6.
Node 6 is connected to nodes 9, 2.
Node 12 is connected to nodes 4, 1, 10, 7.
Node 2 is connected to nodes 3, 10, 9.
Node 4 is connected to node 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,28,True,Find the strongly connected component containing node 8. ,"[5, 2, 6, 7, 4, 0, 1, 12, 3, 10, 8]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 11.
Search from node 11.
Node 11 is a root node, find a new strongly connected component: [11].
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 5.
Search from node 5.
Node 8 is a root node, find a new strongly connected component: [5, 2, 6, 7, 4, 0, 1, 12, 3, 10, 8].
So the strongly connected component containing node 8 is ",0.8461538461538461,71
connected_component,"[(5, 4), (5, 7), (4, 3), (4, 7), (7, 5), (3, 2), (3, 10), (3, 7), (0, 11), (0, 7), (11, 0), (11, 3), (11, 2), (11, 6), (2, 6), (2, 11), (2, 4), (2, 0), (10, 6), (10, 7), (10, 8), (1, 8), (1, 11), (1, 9), (8, 11), (9, 5), (9, 0), (9, 10), (9, 6), (9, 11), (6, 11), (6, 4), (6, 0), (6, 2)]","{5: [4, 7],
4: [3, 7],
7: [5],
3: [2, 10, 7],
0: [11, 7],
11: [0, 3, 2, 6],
2: [6, 11, 4, 0],
10: [6, 7, 8],
1: [8, 11, 9],
8: [11],
9: [5, 0, 10, 6, 11],
6: [11, 4, 0, 2]}","Node 5 is connected to nodes 4, 7.
Node 4 is connected to nodes 3, 7.
Node 7 is connected to node 5.
Node 3 is connected to nodes 2, 10, 7.
Node 0 is connected to nodes 11, 7.
Node 11 is connected to nodes 0, 3, 2, 6.
Node 2 is connected to nodes 6, 11, 4, 0.
Node 10 is connected to nodes 6, 7, 8.
Node 1 is connected to nodes 8, 11, 9.
Node 8 is connected to node 11.
Node 9 is connected to nodes 5, 0, 10, 6, 11.
Node 6 is connected to nodes 11, 4, 0, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,34,True,Find the strongly connected component containing node 7. ,"[8, 10, 6, 11, 0, 2, 3, 4, 5, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 8.
Search from node 8.
Node 7 is a root node, find a new strongly connected component: [8, 10, 6, 11, 0, 2, 3, 4, 5, 7].
So the strongly connected component containing node 7 is ",0.8333333333333334,72
connected_component,"[(1, 14), (1, 7), (14, 0), (14, 1), (14, 3), (14, 6), (7, 14), (7, 0), (7, 2), (12, 13), (12, 14), (12, 0), (12, 2), (13, 1), (13, 5), (0, 7), (0, 6), (2, 7), (2, 1), (2, 12), (2, 11), (2, 9), (2, 14), (2, 0), (10, 8), (10, 4), (10, 0), (10, 1), (8, 13), (8, 11), (4, 2), (4, 12), (4, 13), (5, 1), (3, 11), (3, 7), (3, 1), (3, 12), (3, 5), (11, 7), (6, 9), (6, 12), (9, 3), (9, 6)]","{1: [14, 7],
14: [0, 1, 3, 6],
7: [14, 0, 2],
12: [13, 14, 0, 2],
13: [1, 5],
0: [7, 6],
2: [7, 1, 12, 11, 9, 14, 0],
10: [8, 4, 0, 1],
8: [13, 11],
4: [2, 12, 13],
5: [1],
3: [11, 7, 1, 12, 5],
11: [7],
6: [9, 12],
9: [3, 6]}","Node 1 is connected to nodes 14, 7.
Node 14 is connected to nodes 0, 1, 3, 6.
Node 7 is connected to nodes 14, 0, 2.
Node 12 is connected to nodes 13, 14, 0, 2.
Node 13 is connected to nodes 1, 5.
Node 0 is connected to nodes 7, 6.
Node 2 is connected to nodes 7, 1, 12, 11, 9, 14, 0.
Node 10 is connected to nodes 8, 4, 0, 1.
Node 8 is connected to nodes 13, 11.
Node 4 is connected to nodes 2, 12, 13.
Node 5 is connected to node 1.
Node 3 is connected to nodes 11, 7, 1, 12, 5.
Node 11 is connected to node 7.
Node 6 is connected to nodes 9, 12.
Node 9 is connected to nodes 3, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,44,True,Find the strongly connected component containing node 9. ,"[5, 13, 11, 7, 2, 12, 6, 0, 14, 1, 3, 9]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 9.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 14.
Search from node 14.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 5.
Search from node 5.
Node 9 is a root node, find a new strongly connected component: [5, 13, 11, 7, 2, 12, 6, 0, 14, 1, 3, 9].
So the strongly connected component containing node 9 is ",0.8,73
connected_component,"[(8, 14), (14, 1), (14, 10), (14, 11), (13, 2), (13, 3), (2, 1), (2, 10), (10, 9), (10, 14), (10, 6), (9, 1), (6, 14), (11, 2), (11, 6), (11, 0), (11, 13), (7, 5), (7, 4), (5, 10), (4, 10), (4, 12), (4, 3), (4, 6), (12, 9), (12, 6), (12, 8), (12, 10), (1, 5)]","{8: [14],
14: [1, 10, 11],
13: [2, 3],
2: [1, 10],
3: [],
10: [9, 14, 6],
9: [1],
6: [14],
11: [2, 6, 0, 13],
0: [],
7: [5, 4],
5: [10],
4: [10, 12, 3, 6],
12: [9, 6, 8, 10],
1: [5]}","Node 8 is connected to node 14.
Node 14 is connected to nodes 1, 10, 11.
Node 13 is connected to nodes 2, 3.
Node 2 is connected to nodes 1, 10.
Node 10 is connected to nodes 9, 14, 6.
Node 9 is connected to node 1.
Node 6 is connected to node 14.
Node 11 is connected to nodes 2, 6, 0, 13.
Node 7 is connected to nodes 5, 4.
Node 5 is connected to node 10.
Node 4 is connected to nodes 10, 12, 3, 6.
Node 12 is connected to nodes 9, 6, 8, 10.
Node 1 is connected to node 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,29,True,Find the strongly connected component containing node 6. ,"[13, 2, 11, 9, 10, 5, 1, 14, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 14.
Search from node 14.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Node 6 is a root node, find a new strongly connected component: [13, 2, 11, 9, 10, 5, 1, 14, 6].
So the strongly connected component containing node 6 is ",0.6,74
connected_component,"[(5, 1), (5, 3), (5, 2), (5, 9), (1, 3), (1, 0), (1, 6), (1, 2), (1, 5), (1, 10), (1, 11), (3, 9), (2, 4), (2, 0), (8, 7), (8, 3), (7, 1), (7, 4), (7, 0), (7, 8), (7, 10), (10, 11), (10, 8), (11, 6), (6, 5), (6, 1), (6, 4), (4, 3), (4, 6), (4, 10), (0, 5), (0, 8), (0, 4)]","{5: [1, 3, 2, 9],
1: [3, 0, 6, 2, 5, 10, 11],
3: [9],
2: [4, 0],
9: [],
8: [7, 3],
7: [1, 4, 0, 8, 10],
10: [11, 8],
11: [6],
6: [5, 1, 4],
4: [3, 6, 10],
0: [5, 8, 4]}","Node 5 is connected to nodes 1, 3, 2, 9.
Node 1 is connected to nodes 3, 0, 6, 2, 5, 10, 11.
Node 3 is connected to node 9.
Node 2 is connected to nodes 4, 0.
Node 8 is connected to nodes 7, 3.
Node 7 is connected to nodes 1, 4, 0, 8, 10.
Node 10 is connected to nodes 11, 8.
Node 11 is connected to node 6.
Node 6 is connected to nodes 5, 1, 4.
Node 4 is connected to nodes 3, 6, 10.
Node 0 is connected to nodes 5, 8, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,33,True,Find the strongly connected component containing node 6. ,"[2, 5, 11, 10, 4, 7, 8, 0, 1, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 2.
Search from node 2.
Node 6 is a root node, find a new strongly connected component: [2, 5, 11, 10, 4, 7, 8, 0, 1, 6].
So the strongly connected component containing node 6 is ",0.8333333333333334,75
connected_component,"[(0, 1), (0, 8), (1, 6), (1, 5), (1, 7), (1, 0), (8, 3), (6, 4), (5, 7), (5, 2), (5, 1), (7, 2), (7, 1), (7, 4), (2, 3), (2, 5), (2, 7)]","{0: [1, 8],
1: [6, 5, 7, 0],
8: [3],
6: [4],
5: [7, 2, 1],
7: [2, 1, 4],
3: [],
4: [],
2: [3, 5, 7]}","Node 0 is connected to nodes 1, 8.
Node 1 is connected to nodes 6, 5, 7, 0.
Node 8 is connected to node 3.
Node 6 is connected to node 4.
Node 5 is connected to nodes 7, 2, 1.
Node 7 is connected to nodes 2, 1, 4.
Node 2 is connected to nodes 3, 5, 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,17,True,Find the strongly connected component containing node 4. ,[4],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
So the strongly connected component containing node 4 is ",0.1111111111111111,76
connected_component,"[(7, 1), (7, 12), (12, 0), (12, 3), (13, 1), (13, 4), (13, 8), (13, 12), (13, 10), (13, 7), (4, 3), (4, 7), (4, 11), (8, 7), (8, 9), (10, 7), (10, 13), (6, 9), (6, 3), (6, 8), (9, 0), (9, 8), (0, 10), (0, 6), (0, 1), (0, 4), (11, 13), (11, 1), (2, 7), (5, 6), (5, 2), (5, 8)]","{7: [1, 12],
1: [],
12: [0, 3],
13: [1, 4, 8, 12, 10, 7],
4: [3, 7, 11],
8: [7, 9],
10: [7, 13],
6: [9, 3, 8],
9: [0, 8],
3: [],
0: [10, 6, 1, 4],
11: [13, 1],
2: [7],
5: [6, 2, 8]}","Node 7 is connected to nodes 1, 12.
Node 12 is connected to nodes 0, 3.
Node 13 is connected to nodes 1, 4, 8, 12, 10, 7.
Node 4 is connected to nodes 3, 7, 11.
Node 8 is connected to nodes 7, 9.
Node 10 is connected to nodes 7, 13.
Node 6 is connected to nodes 9, 3, 8.
Node 9 is connected to nodes 0, 8.
Node 0 is connected to nodes 10, 6, 1, 4.
Node 11 is connected to nodes 13, 1.
Node 2 is connected to node 7.
Node 5 is connected to nodes 6, 2, 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,32,True,Find the strongly connected component containing node 4. ,"[9, 8, 6, 10, 0, 12, 7, 13, 11, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 1.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Node 4 is a root node, find a new strongly connected component: [9, 8, 6, 10, 0, 12, 7, 13, 11, 4].
So the strongly connected component containing node 4 is ",0.7142857142857143,77
connected_component,"[(11, 6), (6, 4), (6, 0), (4, 8), (0, 10), (3, 5), (3, 9), (5, 7), (9, 7), (1, 2), (2, 10), (10, 8)]","{11: [6],
6: [11, 4, 0],
4: [6, 8],
0: [6, 10],
3: [5, 9],
5: [3, 7],
9: [3, 7],
7: [5, 9],
1: [2],
2: [1, 10],
10: [2, 0, 8],
8: [4, 10]}","Node 11 is connected to node 6.
Node 6 is connected to nodes 11, 4, 0.
Node 4 is connected to nodes 6, 8.
Node 0 is connected to nodes 6, 10.
Node 3 is connected to nodes 5, 9.
Node 5 is connected to nodes 3, 7.
Node 9 is connected to nodes 3, 7.
Node 7 is connected to nodes 5, 9.
Node 1 is connected to node 2.
Node 2 is connected to nodes 1, 10.
Node 10 is connected to nodes 2, 0, 8.
Node 8 is connected to nodes 4, 10.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,12,False,Find the connected component containing node 2. ,"[2, 10, 8, 4, 6, 11, 0, 1]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 2, add it to the connected component. The current connected component is [2].
Visit node 10, add it to the connected component. The current connected component is [2, 10].
Visit node 8, add it to the connected component. The current connected component is [2, 10, 8].
Visit node 4, add it to the connected component. The current connected component is [2, 10, 8, 4].
Visit node 6, add it to the connected component. The current connected component is [2, 10, 8, 4, 6].
Visit node 11, add it to the connected component. The current connected component is [2, 10, 8, 4, 6, 11].
Visit node 0, add it to the connected component. The current connected component is [2, 10, 8, 4, 6, 11, 0].
Visit node 1, add it to the connected component. The current connected component is [2, 10, 8, 4, 6, 11, 0, 1].
Thus, the connected component containing node 2 is ",0.6666666666666666,78
connected_component,"[(8, 0), (8, 9), (8, 5), (8, 2), (8, 7), (8, 3), (8, 4), (3, 1), (3, 6), (4, 10)]","{8: [0, 9, 5, 2, 7, 3, 4],
0: [8],
9: [8],
5: [8],
2: [8],
7: [8],
3: [8, 1, 6],
4: [8, 10],
1: [3],
6: [3],
10: [4]}","Node 8 is connected to nodes 0, 9, 5, 2, 7, 3, 4.
Node 0 is connected to node 8.
Node 9 is connected to node 8.
Node 5 is connected to node 8.
Node 2 is connected to node 8.
Node 7 is connected to node 8.
Node 3 is connected to nodes 8, 1, 6.
Node 4 is connected to nodes 8, 10.
Node 1 is connected to node 3.
Node 6 is connected to node 3.
Node 10 is connected to node 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,10,False,Find the connected component containing node 10. ,"[10, 4, 8, 9, 7, 5, 3, 6, 1, 2, 0]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 10, add it to the connected component. The current connected component is [10].
Visit node 4, add it to the connected component. The current connected component is [10, 4].
Visit node 8, add it to the connected component. The current connected component is [10, 4, 8].
Visit node 9, add it to the connected component. The current connected component is [10, 4, 8, 9].
Visit node 7, add it to the connected component. The current connected component is [10, 4, 8, 9, 7].
Visit node 5, add it to the connected component. The current connected component is [10, 4, 8, 9, 7, 5].
Visit node 3, add it to the connected component. The current connected component is [10, 4, 8, 9, 7, 5, 3].
Visit node 6, add it to the connected component. The current connected component is [10, 4, 8, 9, 7, 5, 3, 6].
Visit node 1, add it to the connected component. The current connected component is [10, 4, 8, 9, 7, 5, 3, 6, 1].
Visit node 2, add it to the connected component. The current connected component is [10, 4, 8, 9, 7, 5, 3, 6, 1, 2].
Visit node 0, add it to the connected component. The current connected component is [10, 4, 8, 9, 7, 5, 3, 6, 1, 2, 0].
Thus, the connected component containing node 10 is ",1.0,79
connected_component,"[(13, 9), (13, 2), (9, 6), (9, 7), (2, 9), (2, 0), (2, 11), (3, 10), (3, 5), (3, 4), (10, 1), (5, 12), (5, 8), (7, 5), (7, 13), (12, 13), (6, 13), (6, 1), (0, 1), (0, 5), (11, 4), (11, 7), (11, 5)]","{13: [9, 2],
9: [6, 7],
2: [9, 0, 11],
3: [10, 5, 4],
10: [1],
5: [12, 8],
4: [],
1: [],
7: [5, 13],
12: [13],
8: [],
6: [13, 1],
0: [1, 5],
11: [4, 7, 5]}","Node 13 is connected to nodes 9, 2.
Node 9 is connected to nodes 6, 7.
Node 2 is connected to nodes 9, 0, 11.
Node 3 is connected to nodes 10, 5, 4.
Node 10 is connected to node 1.
Node 5 is connected to nodes 12, 8.
Node 7 is connected to nodes 5, 13.
Node 12 is connected to node 13.
Node 6 is connected to nodes 13, 1.
Node 0 is connected to nodes 1, 5.
Node 11 is connected to nodes 4, 7, 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,23,True,Find the strongly connected component containing node 1. ,[1],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
So the strongly connected component containing node 1 is ",0.0714285714285714,80
connected_component,"[(3, 7), (3, 8), (3, 2), (7, 6), (7, 3), (7, 1), (8, 3), (8, 6), (8, 0), (1, 7), (6, 8), (6, 5), (6, 3), (5, 7), (5, 6), (5, 4), (5, 2), (0, 8), (0, 7), (4, 2), (4, 5), (4, 7), (4, 6)]","{3: [7, 8, 2],
7: [6, 3, 1],
8: [3, 6, 0],
2: [],
1: [7],
6: [8, 5, 3],
5: [7, 6, 4, 2],
0: [8, 7],
4: [2, 5, 7, 6]}","Node 3 is connected to nodes 7, 8, 2.
Node 7 is connected to nodes 6, 3, 1.
Node 8 is connected to nodes 3, 6, 0.
Node 1 is connected to node 7.
Node 6 is connected to nodes 8, 5, 3.
Node 5 is connected to nodes 7, 6, 4, 2.
Node 0 is connected to nodes 8, 7.
Node 4 is connected to nodes 2, 5, 7, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,23,True,Find the strongly connected component containing node 3. ,"[4, 5, 6, 1, 7, 0, 8, 3]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 4.
Search from node 4.
Node 3 is a root node, find a new strongly connected component: [4, 5, 6, 1, 7, 0, 8, 3].
So the strongly connected component containing node 3 is ",0.8888888888888888,81
connected_component,"[(3, 10), (3, 8), (3, 1), (3, 7), (3, 9), (3, 6), (3, 4), (3, 0), (10, 2), (10, 1), (10, 5), (10, 3), (8, 9), (8, 5), (8, 0), (1, 0), (1, 3), (1, 10), (1, 8), (7, 9), (7, 5), (7, 6), (7, 0), (9, 6), (9, 4), (9, 10), (9, 2), (9, 8), (6, 4), (6, 3), (6, 8), (4, 3), (4, 10), (4, 8), (4, 1), (4, 5), (0, 10), (0, 1), (0, 7), (0, 9), (0, 5), (0, 4), (2, 8), (2, 7), (2, 9), (2, 6)]","{3: [10, 8, 1, 7, 9, 6, 4, 0],
10: [2, 1, 5, 3],
8: [9, 5, 0],
1: [0, 3, 10, 8],
7: [9, 5, 6, 0],
9: [6, 4, 10, 2, 8],
6: [4, 3, 8],
4: [3, 10, 8, 1, 5],
0: [10, 1, 7, 9, 5, 4],
2: [8, 7, 9, 6],
5: []}","Node 3 is connected to nodes 10, 8, 1, 7, 9, 6, 4, 0.
Node 10 is connected to nodes 2, 1, 5, 3.
Node 8 is connected to nodes 9, 5, 0.
Node 1 is connected to nodes 0, 3, 10, 8.
Node 7 is connected to nodes 9, 5, 6, 0.
Node 9 is connected to nodes 6, 4, 10, 2, 8.
Node 6 is connected to nodes 4, 3, 8.
Node 4 is connected to nodes 3, 10, 8, 1, 5.
Node 0 is connected to nodes 10, 1, 7, 9, 5, 4.
Node 2 is connected to nodes 8, 7, 9, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,46,True,Find the strongly connected component containing node 5. ,[5],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
So the strongly connected component containing node 5 is ",0.0909090909090909,82
connected_component,"[(0, 1), (0, 8), (0, 4), (1, 2), (8, 4), (8, 0), (8, 3), (8, 7), (8, 9), (4, 1), (4, 3), (4, 2), (4, 9), (4, 8), (4, 6), (2, 1), (3, 2), (3, 7), (3, 9), (3, 6), (3, 1), (7, 9), (7, 6), (7, 0), (7, 3), (9, 5), (9, 4), (9, 1), (9, 3), (6, 4), (6, 1), (6, 3), (6, 9), (6, 5), (5, 6), (5, 4), (5, 3)]","{0: [1, 8, 4],
1: [2],
8: [4, 0, 3, 7, 9],
4: [1, 3, 2, 9, 8, 6],
2: [1],
3: [2, 7, 9, 6, 1],
7: [9, 6, 0, 3],
9: [5, 4, 1, 3],
6: [4, 1, 3, 9, 5],
5: [6, 4, 3]}","Node 0 is connected to nodes 1, 8, 4.
Node 1 is connected to node 2.
Node 8 is connected to nodes 4, 0, 3, 7, 9.
Node 4 is connected to nodes 1, 3, 2, 9, 8, 6.
Node 2 is connected to node 1.
Node 3 is connected to nodes 2, 7, 9, 6, 1.
Node 7 is connected to nodes 9, 6, 0, 3.
Node 9 is connected to nodes 5, 4, 1, 3.
Node 6 is connected to nodes 4, 1, 3, 9, 5.
Node 5 is connected to nodes 6, 4, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,37,True,Find the strongly connected component containing node 3. ,"[5, 9, 7, 0, 8, 4, 6, 3]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 2.
Search from node 2.
Node 1 is a root node, find a new strongly connected component: [2, 1].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 5.
Search from node 5.
Node 3 is a root node, find a new strongly connected component: [5, 9, 7, 0, 8, 4, 6, 3].
So the strongly connected component containing node 3 is ",0.8,83
connected_component,"[(0, 6), (0, 7), (6, 7), (6, 4), (6, 2), (6, 5), (7, 4), (7, 1), (1, 6), (2, 3), (3, 5), (5, 1), (4, 5)]","{0: [6, 7],
6: [7, 4, 2, 5],
7: [4, 1],
1: [6],
2: [3],
3: [5],
5: [1],
4: [5]}","Node 0 is connected to nodes 6, 7.
Node 6 is connected to nodes 7, 4, 2, 5.
Node 7 is connected to nodes 4, 1.
Node 1 is connected to node 6.
Node 2 is connected to node 3.
Node 3 is connected to node 5.
Node 5 is connected to node 1.
Node 4 is connected to node 5.","[0, 1, 2, 3, 4, 5, 6, 7]",8,13,True,Find the strongly connected component containing node 6. ,"[7, 4, 1, 5, 3, 2, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Node 6 is a root node, find a new strongly connected component: [7, 4, 1, 5, 3, 2, 6].
So the strongly connected component containing node 6 is ",0.875,84
connected_component,"[(2, 1), (1, 7), (3, 5), (5, 1), (5, 2), (5, 6), (7, 5), (7, 8), (7, 0), (8, 0), (8, 3), (0, 6), (4, 6), (4, 7)]","{2: [1],
1: [7],
3: [5],
5: [1, 2, 6],
7: [5, 8, 0],
8: [0, 3],
0: [6],
4: [6, 7],
6: []}","Node 2 is connected to node 1.
Node 1 is connected to node 7.
Node 3 is connected to node 5.
Node 5 is connected to nodes 1, 2, 6.
Node 7 is connected to nodes 5, 8, 0.
Node 8 is connected to nodes 0, 3.
Node 0 is connected to node 6.
Node 4 is connected to nodes 6, 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,14,True,Find the strongly connected component containing node 1. ,"[2, 5, 3, 8, 7, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 2.
Search from node 2.
Node 1 is a root node, find a new strongly connected component: [2, 5, 3, 8, 7, 1].
So the strongly connected component containing node 1 is ",0.6666666666666666,85
connected_component,"[(0, 6), (0, 11), (6, 12), (6, 7), (12, 2), (7, 2), (14, 10), (14, 9), (10, 3), (9, 5), (3, 5), (3, 8), (5, 1), (5, 13), (8, 4)]","{0: [6, 11],
6: [0, 12, 7],
11: [0],
12: [6, 2],
7: [6, 2],
2: [12, 7],
14: [10, 9],
10: [14, 3],
9: [14, 5],
3: [10, 5, 8],
5: [3, 9, 1, 13],
8: [3, 4],
1: [5],
13: [5],
4: [8]}","Node 0 is connected to nodes 6, 11.
Node 6 is connected to nodes 0, 12, 7.
Node 11 is connected to node 0.
Node 12 is connected to nodes 6, 2.
Node 7 is connected to nodes 6, 2.
Node 2 is connected to nodes 12, 7.
Node 14 is connected to nodes 10, 9.
Node 10 is connected to nodes 14, 3.
Node 9 is connected to nodes 14, 5.
Node 3 is connected to nodes 10, 5, 8.
Node 5 is connected to nodes 3, 9, 1, 13.
Node 8 is connected to nodes 3, 4.
Node 1 is connected to node 5.
Node 13 is connected to node 5.
Node 4 is connected to node 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,15,False,Find the connected component containing node 4. ,"[4, 8, 3, 5, 1, 13, 9, 14, 10]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 4, add it to the connected component. The current connected component is [4].
Visit node 8, add it to the connected component. The current connected component is [4, 8].
Visit node 3, add it to the connected component. The current connected component is [4, 8, 3].
Visit node 5, add it to the connected component. The current connected component is [4, 8, 3, 5].
Visit node 1, add it to the connected component. The current connected component is [4, 8, 3, 5, 1].
Visit node 13, add it to the connected component. The current connected component is [4, 8, 3, 5, 1, 13].
Visit node 9, add it to the connected component. The current connected component is [4, 8, 3, 5, 1, 13, 9].
Visit node 14, add it to the connected component. The current connected component is [4, 8, 3, 5, 1, 13, 9, 14].
Visit node 10, add it to the connected component. The current connected component is [4, 8, 3, 5, 1, 13, 9, 14, 10].
Thus, the connected component containing node 4 is ",0.6,86
connected_component,"[(2, 4), (2, 0), (2, 6), (4, 12), (0, 12), (6, 13), (12, 3), (7, 13), (11, 9), (11, 10), (9, 5), (10, 5), (3, 1), (1, 8)]","{2: [4, 0, 6],
4: [2, 12],
0: [2, 12],
6: [2, 13],
12: [4, 3, 0],
7: [13],
13: [7, 6],
11: [9, 10],
9: [11, 5],
10: [11, 5],
5: [9, 10],
3: [12, 1],
1: [3, 8],
8: [1]}","Node 2 is connected to nodes 4, 0, 6.
Node 4 is connected to nodes 2, 12.
Node 0 is connected to nodes 2, 12.
Node 6 is connected to nodes 2, 13.
Node 12 is connected to nodes 4, 3, 0.
Node 7 is connected to node 13.
Node 13 is connected to nodes 7, 6.
Node 11 is connected to nodes 9, 10.
Node 9 is connected to nodes 11, 5.
Node 10 is connected to nodes 11, 5.
Node 5 is connected to nodes 9, 10.
Node 3 is connected to nodes 12, 1.
Node 1 is connected to nodes 3, 8.
Node 8 is connected to node 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,14,False,Find the connected component containing node 3. ,"[3, 12, 4, 2, 6, 13, 7, 0, 1, 8]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 3, add it to the connected component. The current connected component is [3].
Visit node 12, add it to the connected component. The current connected component is [3, 12].
Visit node 4, add it to the connected component. The current connected component is [3, 12, 4].
Visit node 2, add it to the connected component. The current connected component is [3, 12, 4, 2].
Visit node 6, add it to the connected component. The current connected component is [3, 12, 4, 2, 6].
Visit node 13, add it to the connected component. The current connected component is [3, 12, 4, 2, 6, 13].
Visit node 7, add it to the connected component. The current connected component is [3, 12, 4, 2, 6, 13, 7].
Visit node 0, add it to the connected component. The current connected component is [3, 12, 4, 2, 6, 13, 7, 0].
Visit node 1, add it to the connected component. The current connected component is [3, 12, 4, 2, 6, 13, 7, 0, 1].
Visit node 8, add it to the connected component. The current connected component is [3, 12, 4, 2, 6, 13, 7, 0, 1, 8].
Thus, the connected component containing node 3 is ",0.7142857142857143,87
connected_component,"[(9, 6), (6, 1), (6, 4), (6, 0), (6, 9), (10, 7), (10, 0), (10, 9), (7, 9), (7, 10), (7, 13), (0, 12), (13, 12), (12, 6), (12, 8), (12, 10), (8, 13), (8, 11), (8, 1), (8, 2), (1, 2), (1, 3), (1, 10), (1, 6), (4, 9), (2, 11), (3, 5), (3, 4), (3, 0), (3, 7), (3, 2), (5, 0), (5, 10)]","{9: [6],
6: [1, 4, 0, 9],
10: [7, 0, 9],
7: [9, 10, 13],
0: [12],
13: [12],
12: [6, 8, 10],
8: [13, 11, 1, 2],
1: [2, 3, 10, 6],
4: [9],
2: [11],
3: [5, 4, 0, 7, 2],
11: [],
5: [0, 10]}","Node 9 is connected to node 6.
Node 6 is connected to nodes 1, 4, 0, 9.
Node 10 is connected to nodes 7, 0, 9.
Node 7 is connected to nodes 9, 10, 13.
Node 0 is connected to node 12.
Node 13 is connected to node 12.
Node 12 is connected to nodes 6, 8, 10.
Node 8 is connected to nodes 13, 11, 1, 2.
Node 1 is connected to nodes 2, 3, 10, 6.
Node 4 is connected to node 9.
Node 2 is connected to node 11.
Node 3 is connected to nodes 5, 4, 0, 7, 2.
Node 5 is connected to nodes 0, 10.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,33,True,Find the strongly connected component containing node 3. ,"[5, 13, 7, 4, 6, 9, 10, 1, 8, 12, 0, 3]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 11.
Search from node 11.
Node 11 is a root node, find a new strongly connected component: [11].
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 5.
Search from node 5.
Node 3 is a root node, find a new strongly connected component: [5, 13, 7, 4, 6, 9, 10, 1, 8, 12, 0, 3].
So the strongly connected component containing node 3 is ",0.8571428571428571,88
connected_component,"[(8, 7), (7, 8), (0, 2), (0, 9), (2, 5), (2, 1), (9, 0), (9, 3), (9, 1), (9, 2), (3, 4), (3, 6), (4, 2), (4, 7), (6, 10), (6, 7), (11, 0), (1, 2), (1, 5), (1, 11), (5, 9), (5, 0), (10, 1)]","{8: [7],
7: [8],
0: [2, 9],
2: [5, 1],
9: [0, 3, 1, 2],
3: [4, 6],
4: [2, 7],
6: [10, 7],
11: [0],
1: [2, 5, 11],
5: [9, 0],
10: [1]}","Node 8 is connected to node 7.
Node 7 is connected to node 8.
Node 0 is connected to nodes 2, 9.
Node 2 is connected to nodes 5, 1.
Node 9 is connected to nodes 0, 3, 1, 2.
Node 3 is connected to nodes 4, 6.
Node 4 is connected to nodes 2, 7.
Node 6 is connected to nodes 10, 7.
Node 11 is connected to node 0.
Node 1 is connected to nodes 2, 5, 11.
Node 5 is connected to nodes 9, 0.
Node 10 is connected to node 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,23,True,Find the strongly connected component containing node 1. ,"[11, 10, 6, 4, 3, 9, 0, 5, 2, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 8.
Search from node 8.
Node 7 is a root node, find a new strongly connected component: [8, 7].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 11.
Search from node 11.
Node 1 is a root node, find a new strongly connected component: [11, 10, 6, 4, 3, 9, 0, 5, 2, 1].
So the strongly connected component containing node 1 is ",0.8333333333333334,89
connected_component,"[(2, 7), (2, 3), (2, 0), (2, 6), (2, 4), (7, 3), (7, 0), (7, 1), (7, 4), (3, 5), (3, 0), (3, 4), (0, 6), (0, 4), (6, 5), (6, 4), (4, 5), (4, 1), (1, 5)]","{2: [7, 3, 0, 6, 4],
7: [2, 3, 0, 1, 4],
3: [2, 7, 5, 0, 4],
0: [2, 7, 3, 6, 4],
6: [2, 5, 0, 4],
4: [2, 7, 5, 3, 0, 6, 1],
1: [7, 5, 4],
5: [3, 6, 1, 4]}","Node 2 is connected to nodes 7, 3, 0, 6, 4.
Node 7 is connected to nodes 2, 3, 0, 1, 4.
Node 3 is connected to nodes 2, 7, 5, 0, 4.
Node 0 is connected to nodes 2, 7, 3, 6, 4.
Node 6 is connected to nodes 2, 5, 0, 4.
Node 4 is connected to nodes 2, 7, 5, 3, 0, 6, 1.
Node 1 is connected to nodes 7, 5, 4.
Node 5 is connected to nodes 3, 6, 1, 4.","[0, 1, 2, 3, 4, 5, 6, 7]",8,19,False,Find the connected component containing node 2. ,"[2, 7, 4, 6, 5, 3, 0, 1]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 2, add it to the connected component. The current connected component is [2].
Visit node 7, add it to the connected component. The current connected component is [2, 7].
Visit node 4, add it to the connected component. The current connected component is [2, 7, 4].
Visit node 6, add it to the connected component. The current connected component is [2, 7, 4, 6].
Visit node 5, add it to the connected component. The current connected component is [2, 7, 4, 6, 5].
Visit node 3, add it to the connected component. The current connected component is [2, 7, 4, 6, 5, 3].
Visit node 0, add it to the connected component. The current connected component is [2, 7, 4, 6, 5, 3, 0].
Visit node 1, add it to the connected component. The current connected component is [2, 7, 4, 6, 5, 3, 0, 1].
Thus, the connected component containing node 2 is ",1.0,90
connected_component,"[(5, 1), (5, 4), (1, 3), (1, 10), (1, 8), (4, 10), (4, 2), (2, 1), (2, 3), (2, 4), (3, 10), (3, 9), (10, 3), (10, 0), (8, 9), (8, 0), (6, 0), (6, 10), (6, 7), (6, 5), (7, 2), (7, 4), (7, 0), (7, 10), (7, 8)]","{5: [1, 4],
1: [3, 10, 8],
4: [10, 2],
2: [1, 3, 4],
3: [10, 9],
10: [3, 0],
8: [9, 0],
6: [0, 10, 7, 5],
0: [],
7: [2, 4, 0, 10, 8],
9: []}","Node 5 is connected to nodes 1, 4.
Node 1 is connected to nodes 3, 10, 8.
Node 4 is connected to nodes 10, 2.
Node 2 is connected to nodes 1, 3, 4.
Node 3 is connected to nodes 10, 9.
Node 10 is connected to nodes 3, 0.
Node 8 is connected to nodes 9, 0.
Node 6 is connected to nodes 0, 10, 7, 5.
Node 7 is connected to nodes 2, 4, 0, 10, 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,25,True,Find the strongly connected component containing node 9. ,[9],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
So the strongly connected component containing node 9 is ",0.0909090909090909,91
connected_component,"[(2, 1), (2, 9), (1, 6), (1, 8), (1, 7), (1, 11), (6, 7), (8, 10), (12, 0), (12, 4), (0, 4), (4, 3), (5, 3)]","{2: [1, 9],
1: [2, 6, 8, 7, 11],
9: [2],
6: [1, 7],
8: [1, 10],
7: [1, 6],
11: [1],
12: [0, 4],
0: [12, 4],
4: [12, 0, 3],
5: [3],
3: [5, 4],
10: [8]}","Node 2 is connected to nodes 1, 9.
Node 1 is connected to nodes 2, 6, 8, 7, 11.
Node 9 is connected to node 2.
Node 6 is connected to nodes 1, 7.
Node 8 is connected to nodes 1, 10.
Node 7 is connected to nodes 1, 6.
Node 11 is connected to node 1.
Node 12 is connected to nodes 0, 4.
Node 0 is connected to nodes 12, 4.
Node 4 is connected to nodes 12, 0, 3.
Node 5 is connected to node 3.
Node 3 is connected to nodes 5, 4.
Node 10 is connected to node 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,13,False,Find the connected component containing node 11. ,"[11, 1, 7, 6, 2, 9, 8, 10]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 11, add it to the connected component. The current connected component is [11].
Visit node 1, add it to the connected component. The current connected component is [11, 1].
Visit node 7, add it to the connected component. The current connected component is [11, 1, 7].
Visit node 6, add it to the connected component. The current connected component is [11, 1, 7, 6].
Visit node 2, add it to the connected component. The current connected component is [11, 1, 7, 6, 2].
Visit node 9, add it to the connected component. The current connected component is [11, 1, 7, 6, 2, 9].
Visit node 8, add it to the connected component. The current connected component is [11, 1, 7, 6, 2, 9, 8].
Visit node 10, add it to the connected component. The current connected component is [11, 1, 7, 6, 2, 9, 8, 10].
Thus, the connected component containing node 11 is ",0.6153846153846154,92
connected_component,"[(3, 1), (3, 0), (1, 9), (1, 3), (1, 4), (0, 1), (2, 1), (5, 10), (5, 7), (5, 4), (5, 9), (5, 11), (10, 7), (10, 9), (7, 1), (7, 6), (7, 2), (7, 10), (4, 11), (4, 6), (4, 3), (4, 7), (9, 11), (9, 6), (9, 7), (9, 4), (11, 0), (11, 2), (11, 4), (6, 2), (8, 0), (8, 10)]","{3: [1, 0],
1: [9, 3, 4],
0: [1],
2: [1],
5: [10, 7, 4, 9, 11],
10: [7, 9],
7: [1, 6, 2, 10],
4: [11, 6, 3, 7],
9: [11, 6, 7, 4],
11: [0, 2, 4],
6: [2],
8: [0, 10]}","Node 3 is connected to nodes 1, 0.
Node 1 is connected to nodes 9, 3, 4.
Node 0 is connected to node 1.
Node 2 is connected to node 1.
Node 5 is connected to nodes 10, 7, 4, 9, 11.
Node 10 is connected to nodes 7, 9.
Node 7 is connected to nodes 1, 6, 2, 10.
Node 4 is connected to nodes 11, 6, 3, 7.
Node 9 is connected to nodes 11, 6, 7, 4.
Node 11 is connected to nodes 0, 2, 4.
Node 6 is connected to node 2.
Node 8 is connected to nodes 0, 10.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,32,True,Find the strongly connected component containing node 10. ,"[7, 2, 6, 4, 3, 1, 0, 11, 9, 10]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 10.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 7.
Search from node 7.
Node 10 is a root node, find a new strongly connected component: [7, 2, 6, 4, 3, 1, 0, 11, 9, 10].
So the strongly connected component containing node 10 is ",0.8333333333333334,93
connected_component,"[(1, 3), (3, 12), (3, 8), (7, 13), (7, 4), (13, 0), (13, 8), (4, 5), (4, 2), (4, 13), (4, 12), (8, 1), (8, 7), (2, 13), (2, 3), (2, 4), (2, 1), (0, 2), (6, 3), (6, 10), (6, 5), (6, 7), (6, 2), (6, 13), (10, 4), (10, 7), (10, 9), (5, 1), (5, 2), (5, 13), (5, 3), (5, 12), (9, 5), (9, 2), (9, 13), (9, 0), (12, 7), (12, 8), (12, 3), (11, 12)]","{1: [3],
3: [12, 8],
7: [13, 4],
13: [0, 8],
4: [5, 2, 13, 12],
8: [1, 7],
2: [13, 3, 4, 1],
0: [2],
6: [3, 10, 5, 7, 2, 13],
10: [4, 7, 9],
5: [1, 2, 13, 3, 12],
9: [5, 2, 13, 0],
12: [7, 8, 3],
11: [12]}","Node 1 is connected to node 3.
Node 3 is connected to nodes 12, 8.
Node 7 is connected to nodes 13, 4.
Node 13 is connected to nodes 0, 8.
Node 4 is connected to nodes 5, 2, 13, 12.
Node 8 is connected to nodes 1, 7.
Node 2 is connected to nodes 13, 3, 4, 1.
Node 0 is connected to node 2.
Node 6 is connected to nodes 3, 10, 5, 7, 2, 13.
Node 10 is connected to nodes 4, 7, 9.
Node 5 is connected to nodes 1, 2, 13, 3, 12.
Node 9 is connected to nodes 5, 2, 13, 0.
Node 12 is connected to nodes 7, 8, 3.
Node 11 is connected to node 12.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,40,True,Find the strongly connected component containing node 3. ,"[5, 12, 0, 13, 2, 4, 7, 1, 8, 3]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 5.
Search from node 5.
Node 3 is a root node, find a new strongly connected component: [5, 12, 0, 13, 2, 4, 7, 1, 8, 3].
So the strongly connected component containing node 3 is ",0.7142857142857143,94
connected_component,"[(6, 4), (4, 5), (5, 0), (5, 2), (5, 8), (5, 1), (8, 2), (1, 8), (7, 0), (7, 6), (0, 3), (0, 7), (3, 6), (3, 5), (3, 9), (9, 6)]","{6: [4],
4: [5],
5: [0, 2, 8, 1],
8: [2],
2: [],
1: [8],
7: [0, 6],
0: [3, 7],
3: [6, 5, 9],
9: [6]}","Node 6 is connected to node 4.
Node 4 is connected to node 5.
Node 5 is connected to nodes 0, 2, 8, 1.
Node 8 is connected to node 2.
Node 1 is connected to node 8.
Node 7 is connected to nodes 0, 6.
Node 0 is connected to nodes 3, 7.
Node 3 is connected to nodes 6, 5, 9.
Node 9 is connected to node 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,16,True,Find the strongly connected component containing node 6. ,"[7, 9, 3, 0, 5, 4, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 1.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
Node 6 is a root node, find a new strongly connected component: [7, 9, 3, 0, 5, 4, 6].
So the strongly connected component containing node 6 is ",0.7,95
connected_component,"[(2, 5), (2, 8), (5, 7), (5, 6), (0, 4), (0, 5), (0, 3), (0, 8), (0, 2), (4, 8), (4, 2), (4, 0), (3, 2), (3, 5), (6, 7), (6, 3), (6, 2), (7, 8), (7, 2), (7, 6), (7, 4), (1, 6)]","{2: [5, 8],
5: [7, 6],
8: [],
0: [4, 5, 3, 8, 2],
4: [8, 2, 0],
3: [2, 5],
6: [7, 3, 2],
7: [8, 2, 6, 4],
1: [6]}","Node 2 is connected to nodes 5, 8.
Node 5 is connected to nodes 7, 6.
Node 0 is connected to nodes 4, 5, 3, 8, 2.
Node 4 is connected to nodes 8, 2, 0.
Node 3 is connected to nodes 2, 5.
Node 6 is connected to nodes 7, 3, 2.
Node 7 is connected to nodes 8, 2, 6, 4.
Node 1 is connected to node 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,22,True,Find the strongly connected component containing node 4. ,"[7, 3, 6, 5, 2, 0, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Node 4 is a root node, find a new strongly connected component: [7, 3, 6, 5, 2, 0, 4].
So the strongly connected component containing node 4 is ",0.7777777777777778,96
connected_component,"[(1, 0), (0, 4), (0, 3), (0, 8), (0, 10), (8, 2), (8, 3), (2, 0), (2, 7), (7, 5), (7, 8), (7, 2), (7, 3), (10, 8), (4, 7), (4, 8), (6, 4), (9, 4), (5, 1), (5, 8), (5, 9)]","{1: [0],
0: [4, 3, 8, 10],
8: [2, 3],
2: [0, 7],
3: [],
7: [5, 8, 2, 3],
10: [8],
4: [7, 8],
6: [4],
9: [4],
5: [1, 8, 9]}","Node 1 is connected to node 0.
Node 0 is connected to nodes 4, 3, 8, 10.
Node 8 is connected to nodes 2, 3.
Node 2 is connected to nodes 0, 7.
Node 7 is connected to nodes 5, 8, 2, 3.
Node 10 is connected to node 8.
Node 4 is connected to nodes 7, 8.
Node 6 is connected to node 4.
Node 9 is connected to node 4.
Node 5 is connected to nodes 1, 8, 9.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,21,True,Find the strongly connected component containing node 6. ,[6],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 9.
Search from node 9.
Node 4 is a root node, find a new strongly connected component: [9, 1, 5, 7, 10, 0, 2, 8, 4].
Node 6 is a root node, find a new strongly connected component: [6].
So the strongly connected component containing node 6 is ",0.0909090909090909,97
connected_component,"[(6, 7), (6, 5), (6, 1), (7, 5), (7, 1), (5, 3), (1, 2), (1, 0), (1, 3), (0, 5), (3, 1), (3, 5), (3, 4), (4, 1), (4, 7), (4, 0), (4, 5)]","{6: [7, 5, 1],
7: [5, 1],
5: [3],
1: [2, 0, 3],
0: [5],
3: [1, 5, 4],
4: [1, 7, 0, 5],
2: []}","Node 6 is connected to nodes 7, 5, 1.
Node 7 is connected to nodes 5, 1.
Node 5 is connected to node 3.
Node 1 is connected to nodes 2, 0, 3.
Node 0 is connected to node 5.
Node 3 is connected to nodes 1, 5, 4.
Node 4 is connected to nodes 1, 7, 0, 5.","[0, 1, 2, 3, 4, 5, 6, 7]",8,17,True,Find the strongly connected component containing node 6. ,[6],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Node 1 is a root node, find a new strongly connected component: [7, 4, 3, 5, 0, 1].
Node 6 is a root node, find a new strongly connected component: [6].
So the strongly connected component containing node 6 is ",0.125,98
connected_component,"[(6, 10), (6, 11), (6, 3), (6, 0), (6, 9), (10, 7), (10, 11), (10, 2), (10, 4), (10, 0), (10, 5), (10, 9), (10, 8), (11, 3), (11, 4), (11, 0), (11, 9), (11, 1), (3, 0), (3, 5), (3, 9), (3, 1), (0, 7), (0, 4), (0, 5), (0, 8), (9, 2), (9, 4), (9, 8), (7, 2), (7, 4), (7, 8), (2, 4), (2, 1), (4, 5), (4, 1), (8, 5), (8, 1), (5, 1)]","{6: [10, 11, 3, 0, 9],
10: [6, 7, 11, 2, 4, 0, 5, 9, 8],
11: [6, 10, 3, 4, 0, 9, 1],
3: [6, 11, 0, 5, 9, 1],
0: [6, 7, 10, 11, 3, 4, 5, 8],
9: [6, 10, 11, 2, 3, 4, 8],
7: [10, 2, 4, 0, 8],
2: [7, 10, 4, 9, 1],
4: [7, 10, 11, 2, 0, 5, 9, 1],
8: [7, 10, 0, 5, 9, 1],
5: [10, 3, 4, 0, 1, 8],
1: [11, 2, 3, 4, 5, 8]}","Node 6 is connected to nodes 10, 11, 3, 0, 9.
Node 10 is connected to nodes 6, 7, 11, 2, 4, 0, 5, 9, 8.
Node 11 is connected to nodes 6, 10, 3, 4, 0, 9, 1.
Node 3 is connected to nodes 6, 11, 0, 5, 9, 1.
Node 0 is connected to nodes 6, 7, 10, 11, 3, 4, 5, 8.
Node 9 is connected to nodes 6, 10, 11, 2, 3, 4, 8.
Node 7 is connected to nodes 10, 2, 4, 0, 8.
Node 2 is connected to nodes 7, 10, 4, 9, 1.
Node 4 is connected to nodes 7, 10, 11, 2, 0, 5, 9, 1.
Node 8 is connected to nodes 7, 10, 0, 5, 9, 1.
Node 5 is connected to nodes 10, 3, 4, 0, 1, 8.
Node 1 is connected to nodes 11, 2, 3, 4, 5, 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,39,False,Find the connected component containing node 3. ,"[3, 11, 10, 9, 6, 0, 7, 4, 5, 1, 2, 8]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 3, add it to the connected component. The current connected component is [3].
Visit node 11, add it to the connected component. The current connected component is [3, 11].
Visit node 10, add it to the connected component. The current connected component is [3, 11, 10].
Visit node 9, add it to the connected component. The current connected component is [3, 11, 10, 9].
Visit node 6, add it to the connected component. The current connected component is [3, 11, 10, 9, 6].
Visit node 0, add it to the connected component. The current connected component is [3, 11, 10, 9, 6, 0].
Visit node 7, add it to the connected component. The current connected component is [3, 11, 10, 9, 6, 0, 7].
Visit node 4, add it to the connected component. The current connected component is [3, 11, 10, 9, 6, 0, 7, 4].
Visit node 5, add it to the connected component. The current connected component is [3, 11, 10, 9, 6, 0, 7, 4, 5].
Visit node 1, add it to the connected component. The current connected component is [3, 11, 10, 9, 6, 0, 7, 4, 5, 1].
Visit node 2, add it to the connected component. The current connected component is [3, 11, 10, 9, 6, 0, 7, 4, 5, 1, 2].
Visit node 8, add it to the connected component. The current connected component is [3, 11, 10, 9, 6, 0, 7, 4, 5, 1, 2, 8].
Thus, the connected component containing node 3 is ",1.0,99
connected_component,"[(8, 5), (8, 7), (8, 1), (5, 1), (7, 6), (7, 2), (1, 6), (1, 3), (6, 4), (2, 1), (2, 8), (4, 5), (3, 4), (3, 0), (0, 5), (0, 3), (0, 4), (0, 1)]","{8: [5, 7, 1],
5: [1],
7: [6, 2],
1: [6, 3],
6: [4],
2: [1, 8],
4: [5],
3: [4, 0],
0: [5, 3, 4, 1]}","Node 8 is connected to nodes 5, 7, 1.
Node 5 is connected to node 1.
Node 7 is connected to nodes 6, 2.
Node 1 is connected to nodes 6, 3.
Node 6 is connected to node 4.
Node 2 is connected to nodes 1, 8.
Node 4 is connected to node 5.
Node 3 is connected to nodes 4, 0.
Node 0 is connected to nodes 5, 3, 4, 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,18,True,Find the strongly connected component containing node 8. ,"[2, 7, 8]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Node 1 is a root node, find a new strongly connected component: [6, 5, 4, 0, 3, 1].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Node 8 is a root node, find a new strongly connected component: [2, 7, 8].
So the strongly connected component containing node 8 is ",0.3333333333333333,100
connected_component,"[(0, 11), (0, 9), (11, 10), (11, 2), (9, 5), (9, 0), (4, 10), (10, 6), (1, 7), (7, 9), (7, 11), (8, 9), (5, 4), (6, 3), (6, 1), (6, 11), (6, 5), (3, 4), (3, 2)]","{0: [11, 9],
11: [10, 2],
9: [5, 0],
4: [10],
10: [6],
1: [7],
7: [9, 11],
2: [],
8: [9],
5: [4],
6: [3, 1, 11, 5],
3: [4, 2]}","Node 0 is connected to nodes 11, 9.
Node 11 is connected to nodes 10, 2.
Node 9 is connected to nodes 5, 0.
Node 4 is connected to node 10.
Node 10 is connected to node 6.
Node 1 is connected to node 7.
Node 7 is connected to nodes 9, 11.
Node 8 is connected to node 9.
Node 5 is connected to node 4.
Node 6 is connected to nodes 3, 1, 11, 5.
Node 3 is connected to nodes 4, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,19,True,Find the strongly connected component containing node 10. ,"[3, 4, 5, 0, 9, 7, 1, 11, 6, 10]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 10.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Node 10 is a root node, find a new strongly connected component: [3, 4, 5, 0, 9, 7, 1, 11, 6, 10].
So the strongly connected component containing node 10 is ",0.8333333333333334,101
connected_component,"[(12, 0), (0, 14), (0, 6), (14, 13), (14, 8), (6, 11), (6, 1), (13, 10), (8, 9), (9, 1), (11, 2), (7, 4), (7, 3), (4, 5), (3, 5)]","{12: [0],
0: [12, 14, 6],
14: [0, 13, 8],
6: [0, 11, 1],
13: [14, 10],
10: [13],
8: [14, 9],
9: [8, 1],
11: [6, 2],
1: [6, 9],
2: [11],
7: [4, 3],
4: [7, 5],
3: [7, 5],
5: [4, 3]}","Node 12 is connected to node 0.
Node 0 is connected to nodes 12, 14, 6.
Node 14 is connected to nodes 0, 13, 8.
Node 6 is connected to nodes 0, 11, 1.
Node 13 is connected to nodes 14, 10.
Node 10 is connected to node 13.
Node 8 is connected to nodes 14, 9.
Node 9 is connected to nodes 8, 1.
Node 11 is connected to nodes 6, 2.
Node 1 is connected to nodes 6, 9.
Node 2 is connected to node 11.
Node 7 is connected to nodes 4, 3.
Node 4 is connected to nodes 7, 5.
Node 3 is connected to nodes 7, 5.
Node 5 is connected to nodes 4, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,15,False,Find the connected component containing node 7. ,"[7, 4, 5, 3]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 7, add it to the connected component. The current connected component is [7].
Visit node 4, add it to the connected component. The current connected component is [7, 4].
Visit node 5, add it to the connected component. The current connected component is [7, 4, 5].
Visit node 3, add it to the connected component. The current connected component is [7, 4, 5, 3].
Thus, the connected component containing node 7 is ",0.2666666666666666,102
connected_component,"[(2, 5), (2, 3), (2, 9), (2, 7), (2, 1), (3, 1), (3, 2), (9, 7), (7, 10), (7, 4), (7, 6), (1, 10), (1, 6), (4, 0), (4, 10), (4, 2), (4, 5), (0, 8), (0, 5), (0, 3), (8, 7), (6, 9), (6, 11), (6, 1), (11, 9)]","{2: [5, 3, 9, 7, 1],
5: [],
3: [1, 2],
9: [7],
7: [10, 4, 6],
1: [10, 6],
4: [0, 10, 2, 5],
0: [8, 5, 3],
10: [],
8: [7],
6: [9, 11, 1],
11: [9]}","Node 2 is connected to nodes 5, 3, 9, 7, 1.
Node 3 is connected to nodes 1, 2.
Node 9 is connected to node 7.
Node 7 is connected to nodes 10, 4, 6.
Node 1 is connected to nodes 10, 6.
Node 4 is connected to nodes 0, 10, 2, 5.
Node 0 is connected to nodes 8, 5, 3.
Node 8 is connected to node 7.
Node 6 is connected to nodes 9, 11, 1.
Node 11 is connected to node 9.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,25,True,Find the strongly connected component containing node 0. ,"[3, 11, 9, 6, 1, 2, 4, 7, 8, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 10.
Search from node 10.
Node 10 is a root node, find a new strongly connected component: [10].
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Node 0 is a root node, find a new strongly connected component: [3, 11, 9, 6, 1, 2, 4, 7, 8, 0].
So the strongly connected component containing node 0 is ",0.8333333333333334,103
connected_component,"[(4, 6), (4, 5), (4, 7), (6, 5), (6, 3), (6, 7), (5, 4), (5, 1), (5, 2), (7, 4), (7, 1), (7, 6), (7, 2), (7, 3), (1, 6), (1, 2), (1, 5), (1, 3), (1, 7), (1, 4), (2, 3), (2, 6), (3, 2), (3, 5), (0, 5), (0, 1)]","{4: [6, 5, 7],
6: [5, 3, 7],
5: [4, 1, 2],
7: [4, 1, 6, 2, 3],
1: [6, 2, 5, 3, 7, 4],
2: [3, 6],
3: [2, 5],
0: [5, 1]}","Node 4 is connected to nodes 6, 5, 7.
Node 6 is connected to nodes 5, 3, 7.
Node 5 is connected to nodes 4, 1, 2.
Node 7 is connected to nodes 4, 1, 6, 2, 3.
Node 1 is connected to nodes 6, 2, 5, 3, 7, 4.
Node 2 is connected to nodes 3, 6.
Node 3 is connected to nodes 2, 5.
Node 0 is connected to nodes 5, 1.","[0, 1, 2, 3, 4, 5, 6, 7]",8,26,True,Find the strongly connected component containing node 3. ,"[7, 4, 1, 5, 6, 2, 3]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Node 3 is a root node, find a new strongly connected component: [7, 4, 1, 5, 6, 2, 3].
So the strongly connected component containing node 3 is ",0.875,104
connected_component,"[(4, 1), (4, 14), (4, 11), (14, 10), (14, 13), (11, 4), (3, 7), (3, 0), (7, 5), (7, 13), (7, 2), (0, 5), (9, 1), (9, 7), (9, 0), (13, 14), (13, 9), (2, 6), (2, 4), (2, 3), (2, 13), (5, 9), (5, 12), (5, 8), (5, 6), (10, 3), (10, 12), (8, 2), (8, 7)]","{4: [1, 14, 11],
1: [],
14: [10, 13],
11: [4],
3: [7, 0],
7: [5, 13, 2],
0: [5],
9: [1, 7, 0],
13: [14, 9],
2: [6, 4, 3, 13],
6: [],
5: [9, 12, 8, 6],
10: [3, 12],
8: [2, 7],
12: []}","Node 4 is connected to nodes 1, 14, 11.
Node 14 is connected to nodes 10, 13.
Node 11 is connected to node 4.
Node 3 is connected to nodes 7, 0.
Node 7 is connected to nodes 5, 13, 2.
Node 0 is connected to node 5.
Node 9 is connected to nodes 1, 7, 0.
Node 13 is connected to nodes 14, 9.
Node 2 is connected to nodes 6, 4, 3, 13.
Node 5 is connected to nodes 9, 12, 8, 6.
Node 10 is connected to nodes 3, 12.
Node 8 is connected to nodes 2, 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,29,True,Find the strongly connected component containing node 1. ,[1],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
So the strongly connected component containing node 1 is ",0.0666666666666666,105
connected_component,"[(5, 4), (5, 3), (5, 2), (5, 1), (4, 3), (4, 1), (3, 2), (3, 6), (3, 8), (2, 7), (2, 4), (1, 6), (1, 7), (1, 8), (1, 4), (6, 3), (8, 5), (8, 4), (7, 3), (0, 5), (0, 4)]","{5: [4, 3, 2, 1],
4: [3, 1],
3: [2, 6, 8],
2: [7, 4],
1: [6, 7, 8, 4],
6: [3],
8: [5, 4],
7: [3],
0: [5, 4]}","Node 5 is connected to nodes 4, 3, 2, 1.
Node 4 is connected to nodes 3, 1.
Node 3 is connected to nodes 2, 6, 8.
Node 2 is connected to nodes 7, 4.
Node 1 is connected to nodes 6, 7, 8, 4.
Node 6 is connected to node 3.
Node 8 is connected to nodes 5, 4.
Node 7 is connected to node 3.
Node 0 is connected to nodes 5, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,21,True,Find the strongly connected component containing node 3. ,"[2, 5, 7, 6, 1, 4, 8, 3]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 2.
Search from node 2.
Node 3 is a root node, find a new strongly connected component: [2, 5, 7, 6, 1, 4, 8, 3].
So the strongly connected component containing node 3 is ",0.8888888888888888,106
connected_component,"[(5, 9), (2, 6), (2, 3), (2, 1), (6, 10), (6, 7), (3, 7), (1, 7), (10, 8), (10, 9), (7, 3), (7, 9), (8, 0), (8, 1), (8, 5), (8, 4), (8, 7), (8, 3), (4, 7), (4, 5), (4, 6), (0, 1), (0, 5), (0, 6)]","{5: [9],
9: [],
2: [6, 3, 1],
6: [10, 7],
3: [7],
1: [7],
10: [8, 9],
7: [3, 9],
8: [0, 1, 5, 4, 7, 3],
4: [7, 5, 6],
0: [1, 5, 6]}","Node 5 is connected to node 9.
Node 2 is connected to nodes 6, 3, 1.
Node 6 is connected to nodes 10, 7.
Node 3 is connected to node 7.
Node 1 is connected to node 7.
Node 10 is connected to nodes 8, 9.
Node 7 is connected to nodes 3, 9.
Node 8 is connected to nodes 0, 1, 5, 4, 7, 3.
Node 4 is connected to nodes 7, 5, 6.
Node 0 is connected to nodes 1, 5, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,24,True,Find the strongly connected component containing node 4. ,"[0, 8, 10, 6, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Node 5 is a root node, find a new strongly connected component: [5].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 3.
Search from node 3.
Node 7 is a root node, find a new strongly connected component: [3, 7].
Node 1 is a root node, find a new strongly connected component: [1].
Node 4 is a root node, find a new strongly connected component: [0, 8, 10, 6, 4].
So the strongly connected component containing node 4 is ",0.4545454545454545,107
connected_component,"[(0, 9), (0, 5), (9, 5), (9, 1), (9, 4), (5, 6), (5, 1), (8, 2), (8, 3), (2, 1), (2, 4), (4, 3), (1, 7), (6, 8), (6, 5), (7, 9), (7, 6)]","{0: [9, 5],
9: [5, 1, 4],
5: [6, 1],
8: [2, 3],
2: [1, 4],
3: [],
4: [3],
1: [7],
6: [8, 5],
7: [9, 6]}","Node 0 is connected to nodes 9, 5.
Node 9 is connected to nodes 5, 1, 4.
Node 5 is connected to nodes 6, 1.
Node 8 is connected to nodes 2, 3.
Node 2 is connected to nodes 1, 4.
Node 4 is connected to node 3.
Node 1 is connected to node 7.
Node 6 is connected to nodes 8, 5.
Node 7 is connected to nodes 9, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,17,True,Find the strongly connected component containing node 7. ,"[2, 8, 6, 5, 1, 9, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Node 4 is a root node, find a new strongly connected component: [4].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Node 7 is a root node, find a new strongly connected component: [2, 8, 6, 5, 1, 9, 7].
So the strongly connected component containing node 7 is ",0.7,108
connected_component,"[(2, 8), (2, 6), (2, 0), (8, 3), (8, 11), (8, 6), (8, 1), (8, 7), (8, 9), (6, 1), (6, 0), (6, 4), (6, 3), (6, 11), (0, 4), (0, 2), (0, 5), (0, 10), (5, 10), (5, 9), (5, 1), (5, 7), (10, 8), (10, 11), (10, 5), (9, 8), (9, 11), (9, 6), (9, 7), (9, 4), (9, 2), (9, 5), (9, 10), (1, 4), (1, 2), (7, 0), (7, 4), (7, 8), (7, 11), (11, 1), (4, 5), (4, 3), (4, 1), (4, 7), (3, 11)]","{2: [8, 6, 0],
8: [3, 11, 6, 1, 7, 9],
6: [1, 0, 4, 3, 11],
0: [4, 2, 5, 10],
5: [10, 9, 1, 7],
10: [8, 11, 5],
9: [8, 11, 6, 7, 4, 2, 5, 10],
1: [4, 2],
7: [0, 4, 8, 11],
11: [1],
4: [5, 3, 1, 7],
3: [11]}","Node 2 is connected to nodes 8, 6, 0.
Node 8 is connected to nodes 3, 11, 6, 1, 7, 9.
Node 6 is connected to nodes 1, 0, 4, 3, 11.
Node 0 is connected to nodes 4, 2, 5, 10.
Node 5 is connected to nodes 10, 9, 1, 7.
Node 10 is connected to nodes 8, 11, 5.
Node 9 is connected to nodes 8, 11, 6, 7, 4, 2, 5, 10.
Node 1 is connected to nodes 4, 2.
Node 7 is connected to nodes 0, 4, 8, 11.
Node 11 is connected to node 1.
Node 4 is connected to nodes 5, 3, 1, 7.
Node 3 is connected to node 11.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,45,True,Find the strongly connected component containing node 8. ,"[6, 7, 3, 4, 9, 5, 11, 10, 0, 2, 1, 8]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Node 8 is a root node, find a new strongly connected component: [6, 7, 3, 4, 9, 5, 11, 10, 0, 2, 1, 8].
So the strongly connected component containing node 8 is ",1.0,109
connected_component,"[(4, 3), (4, 8), (3, 2), (3, 1), (8, 7), (8, 1), (6, 1), (6, 3), (6, 2), (1, 5), (1, 7), (1, 4), (2, 5), (2, 1), (5, 6), (5, 3), (5, 8), (7, 6), (7, 5), (0, 5)]","{4: [3, 8],
3: [2, 1],
8: [7, 1],
6: [1, 3, 2],
1: [5, 7, 4],
2: [5, 1],
5: [6, 3, 8],
7: [6, 5],
0: [5]}","Node 4 is connected to nodes 3, 8.
Node 3 is connected to nodes 2, 1.
Node 8 is connected to nodes 7, 1.
Node 6 is connected to nodes 1, 3, 2.
Node 1 is connected to nodes 5, 7, 4.
Node 2 is connected to nodes 5, 1.
Node 5 is connected to nodes 6, 3, 8.
Node 7 is connected to nodes 6, 5.
Node 0 is connected to node 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,20,True,Find the strongly connected component containing node 1. ,"[6, 2, 3, 5, 7, 8, 4, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 6.
Search from node 6.
Node 1 is a root node, find a new strongly connected component: [6, 2, 3, 5, 7, 8, 4, 1].
So the strongly connected component containing node 1 is ",0.8888888888888888,110
connected_component,"[(8, 7), (7, 2), (7, 5), (7, 8), (2, 7), (5, 8), (5, 6), (6, 0), (6, 8), (1, 3), (1, 7), (1, 2), (3, 0), (3, 4), (3, 1)]","{8: [7],
7: [2, 5, 8],
2: [7],
5: [8, 6],
6: [0, 8],
0: [],
1: [3, 7, 2],
3: [0, 4, 1],
4: []}","Node 8 is connected to node 7.
Node 7 is connected to nodes 2, 5, 8.
Node 2 is connected to node 7.
Node 5 is connected to nodes 8, 6.
Node 6 is connected to nodes 0, 8.
Node 1 is connected to nodes 3, 7, 2.
Node 3 is connected to nodes 0, 4, 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,15,True,Find the strongly connected component containing node 7. ,"[6, 5, 2, 8, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Node 7 is a root node, find a new strongly connected component: [6, 5, 2, 8, 7].
So the strongly connected component containing node 7 is ",0.5555555555555556,111
connected_component,"[(7, 0), (7, 4), (4, 3), (4, 1), (8, 3), (8, 5), (8, 1), (3, 5), (3, 4), (3, 7), (5, 1), (5, 0), (1, 7), (1, 3), (2, 4), (2, 8), (2, 3), (2, 1), (6, 3), (6, 1), (6, 4)]","{7: [0, 4],
0: [],
4: [3, 1],
8: [3, 5, 1],
3: [5, 4, 7],
5: [1, 0],
1: [7, 3],
2: [4, 8, 3, 1],
6: [3, 1, 4]}","Node 7 is connected to nodes 0, 4.
Node 4 is connected to nodes 3, 1.
Node 8 is connected to nodes 3, 5, 1.
Node 3 is connected to nodes 5, 4, 7.
Node 5 is connected to nodes 1, 0.
Node 1 is connected to nodes 7, 3.
Node 2 is connected to nodes 4, 8, 3, 1.
Node 6 is connected to nodes 3, 1, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,21,True,Find the strongly connected component containing node 2. ,[2],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 7.
Search from node 7.
Node 1 is a root node, find a new strongly connected component: [7, 5, 4, 3, 1].
Node 8 is a root node, find a new strongly connected component: [8].
Node 2 is a root node, find a new strongly connected component: [2].
So the strongly connected component containing node 2 is ",0.1111111111111111,112
connected_component,"[(6, 7), (7, 4), (7, 5), (4, 0), (0, 7), (5, 1), (1, 7), (1, 0), (1, 5), (1, 2), (2, 7), (3, 0), (3, 6)]","{6: [7],
7: [4, 5],
4: [0],
0: [7],
5: [1],
1: [7, 0, 5, 2],
2: [7],
3: [0, 6]}","Node 6 is connected to node 7.
Node 7 is connected to nodes 4, 5.
Node 4 is connected to node 0.
Node 0 is connected to node 7.
Node 5 is connected to node 1.
Node 1 is connected to nodes 7, 0, 5, 2.
Node 2 is connected to node 7.
Node 3 is connected to nodes 0, 6.","[0, 1, 2, 3, 4, 5, 6, 7]",8,13,True,Find the strongly connected component containing node 6. ,[6],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 2.
Search from node 2.
Node 7 is a root node, find a new strongly connected component: [2, 1, 5, 0, 4, 7].
Node 6 is a root node, find a new strongly connected component: [6].
So the strongly connected component containing node 6 is ",0.125,113
connected_component,"[(11, 14), (11, 2), (11, 0), (14, 13), (14, 9), (14, 2), (2, 8), (2, 6), (2, 14), (2, 9), (2, 1), (0, 14), (0, 9), (0, 4), (13, 9), (13, 1), (13, 10), (13, 5), (13, 12), (9, 10), (9, 14), (1, 13), (1, 4), (10, 2), (5, 14), (5, 1), (5, 10), (5, 2), (12, 13), (7, 1), (7, 2), (7, 3), (7, 11), (7, 14), (7, 9), (3, 0), (3, 6), (3, 9), (3, 8), (3, 12), (4, 11), (4, 14), (8, 5), (8, 11), (8, 14), (8, 13), (6, 13), (6, 12)]","{11: [14, 2, 0],
14: [13, 9, 2],
2: [8, 6, 14, 9, 1],
0: [14, 9, 4],
13: [9, 1, 10, 5, 12],
9: [10, 14],
1: [13, 4],
10: [2],
5: [14, 1, 10, 2],
12: [13],
7: [1, 2, 3, 11, 14, 9],
3: [0, 6, 9, 8, 12],
4: [11, 14],
8: [5, 11, 14, 13],
6: [13, 12]}","Node 11 is connected to nodes 14, 2, 0.
Node 14 is connected to nodes 13, 9, 2.
Node 2 is connected to nodes 8, 6, 14, 9, 1.
Node 0 is connected to nodes 14, 9, 4.
Node 13 is connected to nodes 9, 1, 10, 5, 12.
Node 9 is connected to nodes 10, 14.
Node 1 is connected to nodes 13, 4.
Node 10 is connected to node 2.
Node 5 is connected to nodes 14, 1, 10, 2.
Node 12 is connected to node 13.
Node 7 is connected to nodes 1, 2, 3, 11, 14, 9.
Node 3 is connected to nodes 0, 6, 9, 8, 12.
Node 4 is connected to nodes 11, 14.
Node 8 is connected to nodes 5, 11, 14, 13.
Node 6 is connected to nodes 13, 12.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,48,True,Find the strongly connected component containing node 11. ,"[8, 6, 12, 5, 13, 14, 4, 1, 2, 10, 9, 0, 11]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 11.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 14.
Search from node 14.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 8.
Search from node 8.
Node 11 is a root node, find a new strongly connected component: [8, 6, 12, 5, 13, 14, 4, 1, 2, 10, 9, 0, 11].
So the strongly connected component containing node 11 is ",0.8666666666666667,114
connected_component,"[(8, 1), (8, 3), (8, 12), (8, 2), (1, 3), (1, 12), (12, 7), (2, 4), (2, 10), (0, 5), (5, 9), (6, 10), (10, 8), (7, 9), (7, 0), (7, 6), (11, 12), (11, 8), (4, 11)]","{8: [1, 3, 12, 2],
1: [3, 12],
3: [],
12: [7],
2: [4, 10],
0: [5],
5: [9],
9: [],
6: [10],
10: [8],
7: [9, 0, 6],
11: [12, 8],
4: [11]}","Node 8 is connected to nodes 1, 3, 12, 2.
Node 1 is connected to nodes 3, 12.
Node 12 is connected to node 7.
Node 2 is connected to nodes 4, 10.
Node 0 is connected to node 5.
Node 5 is connected to node 9.
Node 6 is connected to node 10.
Node 10 is connected to node 8.
Node 7 is connected to nodes 9, 0, 6.
Node 11 is connected to nodes 12, 8.
Node 4 is connected to node 11.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,19,True,Find the strongly connected component containing node 7. ,"[11, 4, 2, 12, 1, 8, 10, 6, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Node 5 is a root node, find a new strongly connected component: [5].
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 11.
Search from node 11.
Node 7 is a root node, find a new strongly connected component: [11, 4, 2, 12, 1, 8, 10, 6, 7].
So the strongly connected component containing node 7 is ",0.6923076923076923,115
connected_component,"[(5, 7), (5, 0), (7, 10), (7, 4), (0, 2), (4, 1), (1, 2), (8, 3), (8, 9), (8, 6), (3, 9)]","{5: [7, 0],
7: [5, 10, 4],
0: [5, 2],
10: [7],
4: [7, 1],
1: [4, 2],
2: [1, 0],
8: [3, 9, 6],
3: [8, 9],
9: [8, 3],
6: [8]}","Node 5 is connected to nodes 7, 0.
Node 7 is connected to nodes 5, 10, 4.
Node 0 is connected to nodes 5, 2.
Node 10 is connected to node 7.
Node 4 is connected to nodes 7, 1.
Node 1 is connected to nodes 4, 2.
Node 2 is connected to nodes 1, 0.
Node 8 is connected to nodes 3, 9, 6.
Node 3 is connected to nodes 8, 9.
Node 9 is connected to nodes 8, 3.
Node 6 is connected to node 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,11,False,Find the connected component containing node 9. ,"[9, 3, 8, 6]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 9, add it to the connected component. The current connected component is [9].
Visit node 3, add it to the connected component. The current connected component is [9, 3].
Visit node 8, add it to the connected component. The current connected component is [9, 3, 8].
Visit node 6, add it to the connected component. The current connected component is [9, 3, 8, 6].
Thus, the connected component containing node 9 is ",0.3636363636363636,116
connected_component,"[(4, 2), (4, 6), (4, 5), (4, 9), (2, 1), (2, 5), (6, 1), (6, 9), (6, 8), (5, 8), (5, 0), (9, 8), (9, 2), (9, 0), (3, 2), (3, 6), (3, 0), (1, 4), (1, 3), (8, 6), (8, 9), (8, 7), (7, 8), (7, 2), (7, 5), (7, 9)]","{4: [2, 6, 5, 9],
2: [1, 5],
6: [1, 9, 8],
5: [8, 0],
9: [8, 2, 0],
3: [2, 6, 0],
0: [],
1: [4, 3],
8: [6, 9, 7],
7: [8, 2, 5, 9]}","Node 4 is connected to nodes 2, 6, 5, 9.
Node 2 is connected to nodes 1, 5.
Node 6 is connected to nodes 1, 9, 8.
Node 5 is connected to nodes 8, 0.
Node 9 is connected to nodes 8, 2, 0.
Node 3 is connected to nodes 2, 6, 0.
Node 1 is connected to nodes 4, 3.
Node 8 is connected to nodes 6, 9, 7.
Node 7 is connected to nodes 8, 2, 5, 9.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,26,True,Find the strongly connected component containing node 7. ,"[5, 4, 6, 3, 1, 2, 9, 8, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Node 7 is a root node, find a new strongly connected component: [5, 4, 6, 3, 1, 2, 9, 8, 7].
So the strongly connected component containing node 7 is ",0.9,117
connected_component,"[(5, 7), (5, 9), (5, 0), (5, 2), (5, 8), (7, 1), (9, 4), (2, 6), (2, 9), (2, 0), (8, 5), (8, 7), (8, 0), (3, 9), (3, 4), (3, 5), (4, 5), (4, 1), (4, 0), (1, 0), (1, 9), (6, 2), (6, 3)]","{5: [7, 9, 0, 2, 8],
7: [1],
9: [4],
0: [],
2: [6, 9, 0],
8: [5, 7, 0],
3: [9, 4, 5],
4: [5, 1, 0],
1: [0, 9],
6: [2, 3]}","Node 5 is connected to nodes 7, 9, 0, 2, 8.
Node 7 is connected to node 1.
Node 9 is connected to node 4.
Node 2 is connected to nodes 6, 9, 0.
Node 8 is connected to nodes 5, 7, 0.
Node 3 is connected to nodes 9, 4, 5.
Node 4 is connected to nodes 5, 1, 0.
Node 1 is connected to nodes 0, 9.
Node 6 is connected to nodes 2, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,23,True,Find the strongly connected component containing node 5. ,"[8, 7, 3, 6, 1, 4, 9, 2, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 8.
Search from node 8.
Node 5 is a root node, find a new strongly connected component: [8, 7, 3, 6, 1, 4, 9, 2, 5].
So the strongly connected component containing node 5 is ",0.9,118
connected_component,"[(13, 1), (13, 8), (13, 9), (13, 4), (13, 6), (13, 5), (13, 11), (13, 2), (13, 12), (13, 0), (1, 8), (1, 9), (1, 4), (1, 6), (1, 7), (1, 5), (1, 11), (1, 10), (1, 2), (1, 12), (1, 0), (8, 3), (8, 4), (8, 7), (8, 5), (8, 11), (8, 10), (8, 12), (8, 0), (8, 14), (9, 3), (9, 4), (9, 5), (9, 10), (9, 2), (9, 12), (9, 0), (4, 3), (4, 6), (4, 7), (4, 11), (4, 10), (4, 2), (4, 0), (6, 3), (6, 7), (6, 5), (6, 11), (6, 10), (6, 2), (6, 12), (6, 0), (6, 14), (5, 3), (5, 11), (5, 12), (5, 0), (11, 3), (11, 10), (11, 2), (11, 14), (2, 3), (2, 7), (2, 10), (2, 12), (2, 14), (12, 3), (12, 7), (12, 10), (12, 0), (12, 14), (0, 3), (0, 7), (0, 10), (7, 10), (7, 14), (10, 3)]","{13: [1, 8, 9, 4, 6, 5, 11, 2, 12, 0],
1: [13, 8, 9, 4, 6, 7, 5, 11, 10, 2, 12, 0],
8: [13, 1, 3, 4, 7, 5, 11, 10, 12, 0, 14],
9: [13, 1, 3, 4, 5, 10, 2, 12, 0],
4: [13, 1, 8, 9, 3, 6, 7, 11, 10, 2, 0],
6: [13, 1, 3, 4, 7, 5, 11, 10, 2, 12, 0, 14],
5: [13, 1, 8, 9, 3, 6, 11, 12, 0],
11: [13, 1, 8, 3, 4, 6, 5, 10, 2, 14],
2: [13, 1, 9, 3, 4, 6, 7, 11, 10, 12, 14],
12: [13, 1, 8, 9, 3, 6, 7, 5, 10, 2, 0, 14],
0: [13, 1, 8, 9, 3, 4, 6, 7, 5, 10, 12],
7: [1, 8, 4, 6, 10, 2, 12, 0, 14],
10: [1, 8, 9, 3, 4, 6, 7, 11, 2, 12, 0],
3: [8, 9, 4, 6, 5, 11, 10, 2, 12, 0],
14: [8, 6, 7, 11, 2, 12]}","Node 13 is connected to nodes 1, 8, 9, 4, 6, 5, 11, 2, 12, 0.
Node 1 is connected to nodes 13, 8, 9, 4, 6, 7, 5, 11, 10, 2, 12, 0.
Node 8 is connected to nodes 13, 1, 3, 4, 7, 5, 11, 10, 12, 0, 14.
Node 9 is connected to nodes 13, 1, 3, 4, 5, 10, 2, 12, 0.
Node 4 is connected to nodes 13, 1, 8, 9, 3, 6, 7, 11, 10, 2, 0.
Node 6 is connected to nodes 13, 1, 3, 4, 7, 5, 11, 10, 2, 12, 0, 14.
Node 5 is connected to nodes 13, 1, 8, 9, 3, 6, 11, 12, 0.
Node 11 is connected to nodes 13, 1, 8, 3, 4, 6, 5, 10, 2, 14.
Node 2 is connected to nodes 13, 1, 9, 3, 4, 6, 7, 11, 10, 12, 14.
Node 12 is connected to nodes 13, 1, 8, 9, 3, 6, 7, 5, 10, 2, 0, 14.
Node 0 is connected to nodes 13, 1, 8, 9, 3, 4, 6, 7, 5, 10, 12.
Node 7 is connected to nodes 1, 8, 4, 6, 10, 2, 12, 0, 14.
Node 10 is connected to nodes 1, 8, 9, 3, 4, 6, 7, 11, 2, 12, 0.
Node 3 is connected to nodes 8, 9, 4, 6, 5, 11, 10, 2, 12, 0.
Node 14 is connected to nodes 8, 6, 7, 11, 2, 12.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,77,False,Find the connected component containing node 0. ,"[0, 13, 12, 14, 11, 10, 9, 5, 6, 7, 4, 3, 2, 1, 8]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 0, add it to the connected component. The current connected component is [0].
Visit node 13, add it to the connected component. The current connected component is [0, 13].
Visit node 12, add it to the connected component. The current connected component is [0, 13, 12].
Visit node 14, add it to the connected component. The current connected component is [0, 13, 12, 14].
Visit node 11, add it to the connected component. The current connected component is [0, 13, 12, 14, 11].
Visit node 10, add it to the connected component. The current connected component is [0, 13, 12, 14, 11, 10].
Visit node 9, add it to the connected component. The current connected component is [0, 13, 12, 14, 11, 10, 9].
Visit node 5, add it to the connected component. The current connected component is [0, 13, 12, 14, 11, 10, 9, 5].
Visit node 6, add it to the connected component. The current connected component is [0, 13, 12, 14, 11, 10, 9, 5, 6].
Visit node 7, add it to the connected component. The current connected component is [0, 13, 12, 14, 11, 10, 9, 5, 6, 7].
Visit node 4, add it to the connected component. The current connected component is [0, 13, 12, 14, 11, 10, 9, 5, 6, 7, 4].
Visit node 3, add it to the connected component. The current connected component is [0, 13, 12, 14, 11, 10, 9, 5, 6, 7, 4, 3].
Visit node 2, add it to the connected component. The current connected component is [0, 13, 12, 14, 11, 10, 9, 5, 6, 7, 4, 3, 2].
Visit node 1, add it to the connected component. The current connected component is [0, 13, 12, 14, 11, 10, 9, 5, 6, 7, 4, 3, 2, 1].
Visit node 8, add it to the connected component. The current connected component is [0, 13, 12, 14, 11, 10, 9, 5, 6, 7, 4, 3, 2, 1, 8].
Thus, the connected component containing node 0 is ",1.0,119
connected_component,"[(9, 6), (9, 2), (9, 0), (6, 2), (6, 3), (6, 9), (2, 0), (2, 9), (0, 5), (0, 6), (1, 6), (1, 5), (1, 8), (1, 9), (5, 3), (5, 8), (5, 4), (5, 9), (5, 6), (8, 4), (8, 1), (7, 0), (7, 5), (7, 8), (7, 4), (7, 1), (4, 6), (3, 6), (3, 5)]","{9: [6, 2, 0],
6: [2, 3, 9],
2: [0, 9],
0: [5, 6],
1: [6, 5, 8, 9],
5: [3, 8, 4, 9, 6],
8: [4, 1],
7: [0, 5, 8, 4, 1],
4: [6],
3: [6, 5]}","Node 9 is connected to nodes 6, 2, 0.
Node 6 is connected to nodes 2, 3, 9.
Node 2 is connected to nodes 0, 9.
Node 0 is connected to nodes 5, 6.
Node 1 is connected to nodes 6, 5, 8, 9.
Node 5 is connected to nodes 3, 8, 4, 9, 6.
Node 8 is connected to nodes 4, 1.
Node 7 is connected to nodes 0, 5, 8, 4, 1.
Node 4 is connected to node 6.
Node 3 is connected to nodes 6, 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,29,True,Find the strongly connected component containing node 4. ,"[2, 1, 8, 3, 5, 0, 9, 6, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 2.
Search from node 2.
Node 4 is a root node, find a new strongly connected component: [2, 1, 8, 3, 5, 0, 9, 6, 4].
So the strongly connected component containing node 4 is ",0.9,120
connected_component,"[(7, 6), (7, 3), (7, 1), (6, 3), (6, 0), (3, 1), (3, 5), (3, 0), (3, 2), (3, 8), (3, 6), (0, 8), (0, 7), (0, 6), (0, 4), (5, 6), (5, 4), (2, 3), (2, 4), (2, 1), (2, 0), (8, 6), (8, 2), (4, 5), (4, 2), (4, 8), (4, 3)]","{7: [6, 3, 1],
6: [3, 0],
3: [1, 5, 0, 2, 8, 6],
1: [],
0: [8, 7, 6, 4],
5: [6, 4],
2: [3, 4, 1, 0],
8: [6, 2],
4: [5, 2, 8, 3]}","Node 7 is connected to nodes 6, 3, 1.
Node 6 is connected to nodes 3, 0.
Node 3 is connected to nodes 1, 5, 0, 2, 8, 6.
Node 0 is connected to nodes 8, 7, 6, 4.
Node 5 is connected to nodes 6, 4.
Node 2 is connected to nodes 3, 4, 1, 0.
Node 8 is connected to nodes 6, 2.
Node 4 is connected to nodes 5, 2, 8, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,27,True,Find the strongly connected component containing node 1. ,[1],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
So the strongly connected component containing node 1 is ",0.1111111111111111,121
connected_component,"[(2, 3), (3, 12), (3, 11), (9, 10), (9, 5), (10, 4), (10, 1), (10, 0), (5, 2), (5, 4), (12, 3), (12, 6), (6, 10), (6, 11), (0, 10), (0, 4), (0, 8), (4, 12), (11, 0), (7, 12), (7, 11)]","{2: [3],
3: [12, 11],
9: [10, 5],
10: [4, 1, 0],
5: [2, 4],
12: [3, 6],
6: [10, 11],
0: [10, 4, 8],
4: [12],
8: [],
1: [],
11: [0],
7: [12, 11]}","Node 2 is connected to node 3.
Node 3 is connected to nodes 12, 11.
Node 9 is connected to nodes 10, 5.
Node 10 is connected to nodes 4, 1, 0.
Node 5 is connected to nodes 2, 4.
Node 12 is connected to nodes 3, 6.
Node 6 is connected to nodes 10, 11.
Node 0 is connected to nodes 10, 4, 8.
Node 4 is connected to node 12.
Node 11 is connected to node 0.
Node 7 is connected to nodes 12, 11.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,21,True,Find the strongly connected component containing node 1. ,[1],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
So the strongly connected component containing node 1 is ",0.0769230769230769,122
connected_component,"[(8, 6), (8, 2), (8, 11), (8, 10), (6, 1), (11, 0), (10, 3), (5, 2), (5, 10), (5, 8), (12, 8), (1, 6), (1, 11), (7, 6), (7, 10), (9, 6), (9, 12), (0, 1), (0, 7), (0, 9), (0, 4), (0, 3), (4, 9), (3, 0), (3, 1), (3, 9), (3, 6)]","{8: [6, 2, 11, 10],
6: [1],
2: [],
11: [0],
10: [3],
5: [2, 10, 8],
12: [8],
1: [6, 11],
7: [6, 10],
9: [6, 12],
0: [1, 7, 9, 4, 3],
4: [9],
3: [0, 1, 9, 6]}","Node 8 is connected to nodes 6, 2, 11, 10.
Node 6 is connected to node 1.
Node 11 is connected to node 0.
Node 10 is connected to node 3.
Node 5 is connected to nodes 2, 10, 8.
Node 12 is connected to node 8.
Node 1 is connected to nodes 6, 11.
Node 7 is connected to nodes 6, 10.
Node 9 is connected to nodes 6, 12.
Node 0 is connected to nodes 1, 7, 9, 4, 3.
Node 4 is connected to node 9.
Node 3 is connected to nodes 0, 1, 9, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,27,True,Find the strongly connected component containing node 5. ,[5],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Node 8 is a root node, find a new strongly connected component: [7, 12, 9, 4, 6, 11, 1, 0, 3, 10, 8].
Node 5 is a root node, find a new strongly connected component: [5].
So the strongly connected component containing node 5 is ",0.0769230769230769,123
connected_component,"[(0, 8), (0, 4), (0, 6), (0, 3), (0, 7), (8, 0), (4, 6), (6, 2), (3, 2), (7, 2), (7, 1), (7, 4), (1, 5), (1, 7), (1, 0), (5, 3), (5, 1), (9, 3)]","{0: [8, 4, 6, 3, 7],
8: [0],
4: [6],
6: [2],
3: [2],
7: [2, 1, 4],
1: [5, 7, 0],
5: [3, 1],
9: [3],
2: []}","Node 0 is connected to nodes 8, 4, 6, 3, 7.
Node 8 is connected to node 0.
Node 4 is connected to node 6.
Node 6 is connected to node 2.
Node 3 is connected to node 2.
Node 7 is connected to nodes 2, 1, 4.
Node 1 is connected to nodes 5, 7, 0.
Node 5 is connected to nodes 3, 1.
Node 9 is connected to node 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,18,True,Find the strongly connected component containing node 6. ,[6],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Node 6 is a root node, find a new strongly connected component: [6].
So the strongly connected component containing node 6 is ",0.1,124
connected_component,"[(3, 8), (8, 3), (8, 1), (8, 4), (5, 4), (4, 8), (4, 6), (4, 3), (7, 8), (7, 3), (0, 8), (0, 3), (1, 4), (1, 8), (6, 3), (6, 0), (2, 6)]","{3: [8],
8: [3, 1, 4],
5: [4],
4: [8, 6, 3],
7: [8, 3],
0: [8, 3],
1: [4, 8],
6: [3, 0],
2: [6]}","Node 3 is connected to node 8.
Node 8 is connected to nodes 3, 1, 4.
Node 5 is connected to node 4.
Node 4 is connected to nodes 8, 6, 3.
Node 7 is connected to nodes 8, 3.
Node 0 is connected to nodes 8, 3.
Node 1 is connected to nodes 4, 8.
Node 6 is connected to nodes 3, 0.
Node 2 is connected to node 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,17,True,Find the strongly connected component containing node 7. ,[7],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 0.
Search from node 0.
Node 8 is a root node, find a new strongly connected component: [0, 6, 3, 4, 1, 8].
Node 7 is a root node, find a new strongly connected component: [7].
So the strongly connected component containing node 7 is ",0.1111111111111111,125
connected_component,"[(3, 6), (3, 9), (6, 9), (9, 10), (2, 0), (2, 5), (0, 4), (5, 8), (4, 7), (4, 1), (1, 8)]","{3: [6, 9],
6: [3, 9],
9: [3, 6, 10],
2: [0, 5],
0: [2, 4],
5: [2, 8],
4: [0, 7, 1],
7: [4],
1: [4, 8],
8: [5, 1],
10: [9]}","Node 3 is connected to nodes 6, 9.
Node 6 is connected to nodes 3, 9.
Node 9 is connected to nodes 3, 6, 10.
Node 2 is connected to nodes 0, 5.
Node 0 is connected to nodes 2, 4.
Node 5 is connected to nodes 2, 8.
Node 4 is connected to nodes 0, 7, 1.
Node 7 is connected to node 4.
Node 1 is connected to nodes 4, 8.
Node 8 is connected to nodes 5, 1.
Node 10 is connected to node 9.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,11,False,Find the connected component containing node 7. ,"[7, 4, 1, 8, 5, 2, 0]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 7, add it to the connected component. The current connected component is [7].
Visit node 4, add it to the connected component. The current connected component is [7, 4].
Visit node 1, add it to the connected component. The current connected component is [7, 4, 1].
Visit node 8, add it to the connected component. The current connected component is [7, 4, 1, 8].
Visit node 5, add it to the connected component. The current connected component is [7, 4, 1, 8, 5].
Visit node 2, add it to the connected component. The current connected component is [7, 4, 1, 8, 5, 2].
Visit node 0, add it to the connected component. The current connected component is [7, 4, 1, 8, 5, 2, 0].
Thus, the connected component containing node 7 is ",0.6363636363636364,126
connected_component,"[(6, 1), (6, 2), (6, 7), (1, 2), (1, 3), (1, 0), (1, 6), (2, 4), (7, 0), (7, 5), (7, 4), (4, 7), (4, 5), (3, 0), (3, 4), (3, 2), (0, 1), (0, 3)]","{6: [1, 2, 7],
1: [2, 3, 0, 6],
2: [4],
7: [0, 5, 4],
4: [7, 5],
5: [],
3: [0, 4, 2],
0: [1, 3]}","Node 6 is connected to nodes 1, 2, 7.
Node 1 is connected to nodes 2, 3, 0, 6.
Node 2 is connected to node 4.
Node 7 is connected to nodes 0, 5, 4.
Node 4 is connected to nodes 7, 5.
Node 3 is connected to nodes 0, 4, 2.
Node 0 is connected to nodes 1, 3.","[0, 1, 2, 3, 4, 5, 6, 7]",8,18,True,Find the strongly connected component containing node 6. ,"[7, 4, 2, 3, 0, 1, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Visit neighbor node 7.
Search from node 7.
Node 6 is a root node, find a new strongly connected component: [7, 4, 2, 3, 0, 1, 6].
So the strongly connected component containing node 6 is ",0.875,127
connected_component,"[(6, 2), (6, 5), (6, 4), (2, 1), (5, 7), (5, 1), (5, 8), (4, 8), (8, 4), (3, 7), (3, 8), (3, 4), (0, 5)]","{6: [2, 5, 4],
2: [1],
5: [7, 1, 8],
4: [8],
1: [],
8: [4],
7: [],
3: [7, 8, 4],
0: [5]}","Node 6 is connected to nodes 2, 5, 4.
Node 2 is connected to node 1.
Node 5 is connected to nodes 7, 1, 8.
Node 4 is connected to node 8.
Node 8 is connected to node 4.
Node 3 is connected to nodes 7, 8, 4.
Node 0 is connected to node 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,13,True,Find the strongly connected component containing node 3. ,[3],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Node 8 is a root node, find a new strongly connected component: [4, 8].
Visit neighbor node 7.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
Node 3 is a root node, find a new strongly connected component: [3].
So the strongly connected component containing node 3 is ",0.1111111111111111,128
connected_component,"[(8, 10), (8, 4), (8, 9), (8, 0), (8, 3), (8, 1), (8, 6), (10, 4), (10, 0), (10, 3), (10, 1), (10, 5), (4, 9), (4, 7), (4, 0), (4, 2), (9, 0), (9, 6), (9, 2), (9, 5), (0, 3), (0, 6), (0, 5), (3, 7), (3, 1), (3, 6), (3, 2), (3, 5), (1, 7), (1, 2), (1, 5), (6, 7), (6, 5), (5, 2)]","{8: [10, 4, 9, 0, 3, 1, 6],
10: [8, 4, 0, 3, 1, 5],
4: [8, 10, 9, 7, 0, 2],
9: [8, 4, 0, 6, 2, 5],
0: [8, 10, 4, 9, 3, 6, 5],
3: [8, 10, 7, 0, 1, 6, 2, 5],
1: [8, 10, 7, 3, 2, 5],
6: [8, 9, 7, 0, 3, 5],
5: [10, 9, 0, 3, 1, 6, 2],
7: [4, 3, 1, 6],
2: [4, 9, 3, 1, 5]}","Node 8 is connected to nodes 10, 4, 9, 0, 3, 1, 6.
Node 10 is connected to nodes 8, 4, 0, 3, 1, 5.
Node 4 is connected to nodes 8, 10, 9, 7, 0, 2.
Node 9 is connected to nodes 8, 4, 0, 6, 2, 5.
Node 0 is connected to nodes 8, 10, 4, 9, 3, 6, 5.
Node 3 is connected to nodes 8, 10, 7, 0, 1, 6, 2, 5.
Node 1 is connected to nodes 8, 10, 7, 3, 2, 5.
Node 6 is connected to nodes 8, 9, 7, 0, 3, 5.
Node 5 is connected to nodes 10, 9, 0, 3, 1, 6, 2.
Node 7 is connected to nodes 4, 3, 1, 6.
Node 2 is connected to nodes 4, 9, 3, 1, 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,34,False,Find the connected component containing node 7. ,"[7, 6, 9, 8, 10, 5, 3, 2, 4, 0, 1]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 7, add it to the connected component. The current connected component is [7].
Visit node 6, add it to the connected component. The current connected component is [7, 6].
Visit node 9, add it to the connected component. The current connected component is [7, 6, 9].
Visit node 8, add it to the connected component. The current connected component is [7, 6, 9, 8].
Visit node 10, add it to the connected component. The current connected component is [7, 6, 9, 8, 10].
Visit node 5, add it to the connected component. The current connected component is [7, 6, 9, 8, 10, 5].
Visit node 3, add it to the connected component. The current connected component is [7, 6, 9, 8, 10, 5, 3].
Visit node 2, add it to the connected component. The current connected component is [7, 6, 9, 8, 10, 5, 3, 2].
Visit node 4, add it to the connected component. The current connected component is [7, 6, 9, 8, 10, 5, 3, 2, 4].
Visit node 0, add it to the connected component. The current connected component is [7, 6, 9, 8, 10, 5, 3, 2, 4, 0].
Visit node 1, add it to the connected component. The current connected component is [7, 6, 9, 8, 10, 5, 3, 2, 4, 0, 1].
Thus, the connected component containing node 7 is ",1.0,129
connected_component,"[(14, 11), (14, 0), (14, 9), (0, 2), (0, 3), (9, 10), (9, 5), (12, 8), (12, 0), (12, 3), (12, 13), (8, 6), (8, 12), (3, 12), (13, 2), (10, 11), (4, 7), (7, 10), (6, 1), (6, 9), (6, 4), (1, 9), (5, 13)]","{14: [11, 0, 9],
11: [],
0: [2, 3],
9: [10, 5],
12: [8, 0, 3, 13],
8: [6, 12],
3: [12],
13: [2],
10: [11],
4: [7],
7: [10],
6: [1, 9, 4],
1: [9],
2: [],
5: [13]}","Node 14 is connected to nodes 11, 0, 9.
Node 0 is connected to nodes 2, 3.
Node 9 is connected to nodes 10, 5.
Node 12 is connected to nodes 8, 0, 3, 13.
Node 8 is connected to nodes 6, 12.
Node 3 is connected to node 12.
Node 13 is connected to node 2.
Node 10 is connected to node 11.
Node 4 is connected to node 7.
Node 7 is connected to node 10.
Node 6 is connected to nodes 1, 9, 4.
Node 1 is connected to node 9.
Node 5 is connected to node 13.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,23,True,Find the strongly connected component containing node 5. ,[5],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Node 13 is a root node, find a new strongly connected component: [13].
Node 5 is a root node, find a new strongly connected component: [5].
So the strongly connected component containing node 5 is ",0.0666666666666666,130
connected_component,"[(9, 12), (9, 6), (6, 7), (6, 12), (6, 4), (7, 1), (1, 3), (1, 5), (13, 3), (3, 9), (3, 11), (4, 8), (4, 10), (4, 1), (8, 5), (8, 6), (8, 9), (8, 7), (10, 3), (10, 6), (2, 7), (5, 12), (5, 10), (5, 3), (11, 8), (0, 6), (0, 11)]","{9: [12, 6],
12: [],
6: [7, 12, 4],
7: [1],
1: [3, 5],
13: [3],
3: [9, 11],
4: [8, 10, 1],
8: [5, 6, 9, 7],
10: [3, 6],
2: [7],
5: [12, 10, 3],
11: [8],
0: [6, 11]}","Node 9 is connected to nodes 12, 6.
Node 6 is connected to nodes 7, 12, 4.
Node 7 is connected to node 1.
Node 1 is connected to nodes 3, 5.
Node 13 is connected to node 3.
Node 3 is connected to nodes 9, 11.
Node 4 is connected to nodes 8, 10, 1.
Node 8 is connected to nodes 5, 6, 9, 7.
Node 10 is connected to nodes 3, 6.
Node 2 is connected to node 7.
Node 5 is connected to nodes 12, 10, 3.
Node 11 is connected to node 8.
Node 0 is connected to nodes 6, 11.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,27,True,Find the strongly connected component containing node 11. ,"[7, 10, 5, 3, 1, 4, 6, 9, 8, 11]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 11.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 12.
Search from node 12.
Node 12 is a root node, find a new strongly connected component: [12].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 7.
Search from node 7.
Node 11 is a root node, find a new strongly connected component: [7, 10, 5, 3, 1, 4, 6, 9, 8, 11].
So the strongly connected component containing node 11 is ",0.7142857142857143,131
connected_component,"[(8, 4), (8, 7), (8, 0), (8, 6), (8, 3), (4, 5), (4, 6), (4, 1), (0, 2), (0, 3), (0, 8), (0, 7), (6, 1), (6, 3), (6, 5), (6, 7), (5, 7), (5, 6), (5, 3), (5, 4), (1, 2), (1, 3), (1, 4), (1, 7), (1, 0), (1, 6), (2, 3), (2, 8), (2, 4)]","{8: [4, 7, 0, 6, 3],
4: [5, 6, 1],
7: [],
0: [2, 3, 8, 7],
6: [1, 3, 5, 7],
3: [],
5: [7, 6, 3, 4],
1: [2, 3, 4, 7, 0, 6],
2: [3, 8, 4]}","Node 8 is connected to nodes 4, 7, 0, 6, 3.
Node 4 is connected to nodes 5, 6, 1.
Node 0 is connected to nodes 2, 3, 8, 7.
Node 6 is connected to nodes 1, 3, 5, 7.
Node 5 is connected to nodes 7, 6, 3, 4.
Node 1 is connected to nodes 2, 3, 4, 7, 0, 6.
Node 2 is connected to nodes 3, 8, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,29,True,Find the strongly connected component containing node 5. ,"[2, 6, 8, 0, 1, 4, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
Visit neighbor node 2.
Search from node 2.
Node 5 is a root node, find a new strongly connected component: [2, 6, 8, 0, 1, 4, 5].
So the strongly connected component containing node 5 is ",0.7777777777777778,132
connected_component,"[(3, 8), (3, 9), (3, 5), (8, 9), (8, 5), (8, 3), (9, 6), (9, 4), (9, 2), (5, 4), (5, 8), (6, 2), (6, 5), (2, 6), (2, 4), (4, 3), (4, 6), (0, 4), (0, 8), (7, 6), (7, 8), (7, 2), (7, 0), (1, 3), (1, 8), (1, 2), (1, 9)]","{3: [8, 9, 5],
8: [9, 5, 3],
9: [6, 4, 2],
5: [4, 8],
6: [2, 5],
2: [6, 4],
4: [3, 6],
0: [4, 8],
7: [6, 8, 2, 0],
1: [3, 8, 2, 9]}","Node 3 is connected to nodes 8, 9, 5.
Node 8 is connected to nodes 9, 5, 3.
Node 9 is connected to nodes 6, 4, 2.
Node 5 is connected to nodes 4, 8.
Node 6 is connected to nodes 2, 5.
Node 2 is connected to nodes 6, 4.
Node 4 is connected to nodes 3, 6.
Node 0 is connected to nodes 4, 8.
Node 7 is connected to nodes 6, 8, 2, 0.
Node 1 is connected to nodes 3, 8, 2, 9.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,27,True,Find the strongly connected component containing node 0. ,[0],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Node 8 is a root node, find a new strongly connected component: [6, 5, 3, 4, 2, 9, 8].
Node 0 is a root node, find a new strongly connected component: [0].
So the strongly connected component containing node 0 is ",0.1,133
connected_component,"[(10, 7), (7, 10), (7, 9), (7, 8), (6, 3), (6, 11), (6, 8), (3, 7), (11, 5), (11, 2), (11, 9), (8, 6), (8, 3), (4, 3), (9, 7), (5, 2), (5, 10), (5, 4), (5, 3), (2, 9), (2, 5), (0, 8), (0, 3), (0, 11), (1, 10), (1, 11)]","{10: [7],
7: [10, 9, 8],
6: [3, 11, 8],
3: [7],
11: [5, 2, 9],
8: [6, 3],
4: [3],
9: [7],
5: [2, 10, 4, 3],
2: [9, 5],
0: [8, 3, 11],
1: [10, 11]}","Node 10 is connected to node 7.
Node 7 is connected to nodes 10, 9, 8.
Node 6 is connected to nodes 3, 11, 8.
Node 3 is connected to node 7.
Node 11 is connected to nodes 5, 2, 9.
Node 8 is connected to nodes 6, 3.
Node 4 is connected to node 3.
Node 9 is connected to node 7.
Node 5 is connected to nodes 2, 10, 4, 3.
Node 2 is connected to nodes 9, 5.
Node 0 is connected to nodes 8, 3, 11.
Node 1 is connected to nodes 10, 11.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,26,True,Find the strongly connected component containing node 0. ,[0],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 4.
Search from node 4.
Node 8 is a root node, find a new strongly connected component: [4, 5, 2, 11, 6, 10, 9, 7, 3, 8].
Node 0 is a root node, find a new strongly connected component: [0].
So the strongly connected component containing node 0 is ",0.0833333333333333,134
connected_component,"[(9, 6), (9, 10), (9, 1), (6, 1), (1, 7), (7, 5), (7, 6), (5, 2), (5, 0), (8, 11), (3, 2), (2, 9), (2, 6), (2, 10), (0, 11), (0, 10), (0, 3), (0, 5), (4, 11), (4, 10), (4, 5)]","{9: [6, 10, 1],
6: [1],
10: [],
1: [7],
7: [5, 6],
5: [2, 0],
8: [11],
11: [],
3: [2],
2: [9, 6, 10],
0: [11, 10, 3, 5],
4: [11, 10, 5]}","Node 9 is connected to nodes 6, 10, 1.
Node 6 is connected to node 1.
Node 1 is connected to node 7.
Node 7 is connected to nodes 5, 6.
Node 5 is connected to nodes 2, 0.
Node 8 is connected to node 11.
Node 3 is connected to node 2.
Node 2 is connected to nodes 9, 6, 10.
Node 0 is connected to nodes 11, 10, 3, 5.
Node 4 is connected to nodes 11, 10, 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,21,True,Find the strongly connected component containing node 9. ,"[6, 2, 3, 0, 5, 7, 1, 9]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 9.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 10.
Search from node 10.
Node 10 is a root node, find a new strongly connected component: [10].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 11.
Search from node 11.
Node 11 is a root node, find a new strongly connected component: [11].
Node 9 is a root node, find a new strongly connected component: [6, 2, 3, 0, 5, 7, 1, 9].
So the strongly connected component containing node 9 is ",0.6666666666666666,135
connected_component,"[(8, 7), (8, 10), (7, 1), (7, 6), (1, 6), (1, 9), (4, 0), (4, 2), (4, 5), (0, 3), (2, 3), (2, 11)]","{8: [7, 10],
7: [8, 1, 6],
10: [8],
1: [7, 6, 9],
6: [7, 1],
4: [0, 2, 5],
0: [4, 3],
2: [4, 3, 11],
5: [4],
3: [0, 2],
9: [1],
11: [2]}","Node 8 is connected to nodes 7, 10.
Node 7 is connected to nodes 8, 1, 6.
Node 10 is connected to node 8.
Node 1 is connected to nodes 7, 6, 9.
Node 6 is connected to nodes 7, 1.
Node 4 is connected to nodes 0, 2, 5.
Node 0 is connected to nodes 4, 3.
Node 2 is connected to nodes 4, 3, 11.
Node 5 is connected to node 4.
Node 3 is connected to nodes 0, 2.
Node 9 is connected to node 1.
Node 11 is connected to node 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,12,False,Find the connected component containing node 3. ,"[3, 2, 4, 5, 0, 11]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 3, add it to the connected component. The current connected component is [3].
Visit node 2, add it to the connected component. The current connected component is [3, 2].
Visit node 4, add it to the connected component. The current connected component is [3, 2, 4].
Visit node 5, add it to the connected component. The current connected component is [3, 2, 4, 5].
Visit node 0, add it to the connected component. The current connected component is [3, 2, 4, 5, 0].
Visit node 11, add it to the connected component. The current connected component is [3, 2, 4, 5, 0, 11].
Thus, the connected component containing node 3 is ",0.5,136
connected_component,"[(7, 4), (7, 0), (7, 6), (4, 6), (0, 8), (6, 1), (2, 3), (3, 1), (11, 5), (11, 10), (5, 9), (10, 9)]","{7: [4, 0, 6],
4: [7, 6],
0: [7, 8],
6: [7, 4, 1],
2: [3],
3: [2, 1],
1: [3, 6],
11: [5, 10],
5: [11, 9],
10: [11, 9],
9: [5, 10],
8: [0]}","Node 7 is connected to nodes 4, 0, 6.
Node 4 is connected to nodes 7, 6.
Node 0 is connected to nodes 7, 8.
Node 6 is connected to nodes 7, 4, 1.
Node 2 is connected to node 3.
Node 3 is connected to nodes 2, 1.
Node 1 is connected to nodes 3, 6.
Node 11 is connected to nodes 5, 10.
Node 5 is connected to nodes 11, 9.
Node 10 is connected to nodes 11, 9.
Node 9 is connected to nodes 5, 10.
Node 8 is connected to node 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,12,False,Find the connected component containing node 0. ,"[0, 7, 6, 4, 1, 3, 2, 8]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 0, add it to the connected component. The current connected component is [0].
Visit node 7, add it to the connected component. The current connected component is [0, 7].
Visit node 6, add it to the connected component. The current connected component is [0, 7, 6].
Visit node 4, add it to the connected component. The current connected component is [0, 7, 6, 4].
Visit node 1, add it to the connected component. The current connected component is [0, 7, 6, 4, 1].
Visit node 3, add it to the connected component. The current connected component is [0, 7, 6, 4, 1, 3].
Visit node 2, add it to the connected component. The current connected component is [0, 7, 6, 4, 1, 3, 2].
Visit node 8, add it to the connected component. The current connected component is [0, 7, 6, 4, 1, 3, 2, 8].
Thus, the connected component containing node 0 is ",0.6666666666666666,137
connected_component,"[(1, 9), (1, 5), (1, 0), (1, 4), (9, 4), (9, 3), (5, 8), (5, 2), (5, 1), (0, 8), (0, 6), (4, 2), (4, 5), (8, 3), (8, 2), (8, 6), (2, 9), (2, 8), (2, 4), (2, 7), (7, 3), (7, 5), (7, 8), (7, 4)]","{1: [9, 5, 0, 4],
9: [4, 3],
5: [8, 2, 1],
0: [8, 6],
4: [2, 5],
3: [],
8: [3, 2, 6],
2: [9, 8, 4, 7],
6: [],
7: [3, 5, 8, 4]}","Node 1 is connected to nodes 9, 5, 0, 4.
Node 9 is connected to nodes 4, 3.
Node 5 is connected to nodes 8, 2, 1.
Node 0 is connected to nodes 8, 6.
Node 4 is connected to nodes 2, 5.
Node 8 is connected to nodes 3, 2, 6.
Node 2 is connected to nodes 9, 8, 4, 7.
Node 7 is connected to nodes 3, 5, 8, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,24,True,Find the strongly connected component containing node 7. ,"[0, 1, 5, 4, 9, 2, 8, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Node 7 is a root node, find a new strongly connected component: [0, 1, 5, 4, 9, 2, 8, 7].
So the strongly connected component containing node 7 is ",0.8,138
connected_component,"[(12, 6), (12, 5), (12, 1), (6, 4), (1, 6), (10, 0), (3, 5), (3, 12), (7, 6), (7, 1), (2, 8), (2, 3), (9, 4), (9, 8), (9, 2), (4, 1), (4, 12), (11, 3), (11, 0)]","{12: [6, 5, 1],
6: [4],
5: [],
1: [6],
10: [0],
0: [],
3: [5, 12],
7: [6, 1],
2: [8, 3],
8: [],
9: [4, 8, 2],
4: [1, 12],
11: [3, 0]}","Node 12 is connected to nodes 6, 5, 1.
Node 6 is connected to node 4.
Node 1 is connected to node 6.
Node 10 is connected to node 0.
Node 3 is connected to nodes 5, 12.
Node 7 is connected to nodes 6, 1.
Node 2 is connected to nodes 8, 3.
Node 9 is connected to nodes 4, 8, 2.
Node 4 is connected to nodes 1, 12.
Node 11 is connected to nodes 3, 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,19,True,Find the strongly connected component containing node 3. ,[3],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Node 12 is a root node, find a new strongly connected component: [4, 6, 1, 12].
Node 3 is a root node, find a new strongly connected component: [3].
So the strongly connected component containing node 3 is ",0.0769230769230769,139
connected_component,"[(3, 5), (3, 2), (5, 8), (5, 0), (5, 4), (5, 9), (5, 6), (2, 8), (2, 7), (2, 4), (2, 9), (2, 6), (8, 0), (8, 1), (8, 7), (8, 9), (8, 6), (0, 1), (0, 4), (7, 6), (9, 6)]","{3: [5, 2],
5: [3, 8, 0, 4, 9, 6],
2: [3, 8, 7, 4, 9, 6],
8: [0, 1, 7, 9, 5, 6, 2],
0: [8, 1, 4, 5],
1: [8, 0],
7: [8, 6, 2],
9: [8, 5, 6, 2],
6: [8, 7, 9, 5, 2],
4: [0, 5, 2]}","Node 3 is connected to nodes 5, 2.
Node 5 is connected to nodes 3, 8, 0, 4, 9, 6.
Node 2 is connected to nodes 3, 8, 7, 4, 9, 6.
Node 8 is connected to nodes 0, 1, 7, 9, 5, 6, 2.
Node 0 is connected to nodes 8, 1, 4, 5.
Node 1 is connected to nodes 8, 0.
Node 7 is connected to nodes 8, 6, 2.
Node 9 is connected to nodes 8, 5, 6, 2.
Node 6 is connected to nodes 8, 7, 9, 5, 2.
Node 4 is connected to nodes 0, 5, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,21,False,Find the connected component containing node 3. ,"[3, 5, 9, 6, 7, 2, 4, 0, 1, 8]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 3, add it to the connected component. The current connected component is [3].
Visit node 5, add it to the connected component. The current connected component is [3, 5].
Visit node 9, add it to the connected component. The current connected component is [3, 5, 9].
Visit node 6, add it to the connected component. The current connected component is [3, 5, 9, 6].
Visit node 7, add it to the connected component. The current connected component is [3, 5, 9, 6, 7].
Visit node 2, add it to the connected component. The current connected component is [3, 5, 9, 6, 7, 2].
Visit node 4, add it to the connected component. The current connected component is [3, 5, 9, 6, 7, 2, 4].
Visit node 0, add it to the connected component. The current connected component is [3, 5, 9, 6, 7, 2, 4, 0].
Visit node 1, add it to the connected component. The current connected component is [3, 5, 9, 6, 7, 2, 4, 0, 1].
Visit node 8, add it to the connected component. The current connected component is [3, 5, 9, 6, 7, 2, 4, 0, 1, 8].
Thus, the connected component containing node 3 is ",1.0,140
connected_component,"[(8, 3), (3, 5), (3, 8), (3, 7), (7, 0), (7, 5), (7, 4), (7, 6), (0, 4), (0, 6), (0, 7), (0, 3), (0, 1), (5, 4), (5, 8), (5, 6), (5, 7), (4, 8), (4, 6), (1, 0), (1, 2), (1, 6), (2, 8), (2, 0)]","{8: [3],
3: [5, 8, 7],
7: [0, 5, 4, 6],
0: [4, 6, 7, 3, 1],
5: [4, 8, 6, 7],
4: [8, 6],
6: [],
1: [0, 2, 6],
2: [8, 0]}","Node 8 is connected to node 3.
Node 3 is connected to nodes 5, 8, 7.
Node 7 is connected to nodes 0, 5, 4, 6.
Node 0 is connected to nodes 4, 6, 7, 3, 1.
Node 5 is connected to nodes 4, 8, 6, 7.
Node 4 is connected to nodes 8, 6.
Node 1 is connected to nodes 0, 2, 6.
Node 2 is connected to nodes 8, 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,24,True,Find the strongly connected component containing node 1. ,"[2, 7, 4, 5, 8, 3, 0, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Node 1 is a root node, find a new strongly connected component: [2, 7, 4, 5, 8, 3, 0, 1].
So the strongly connected component containing node 1 is ",0.8888888888888888,141
connected_component,"[(6, 8), (6, 5), (6, 3), (6, 1), (5, 3), (3, 2), (3, 6), (1, 4), (1, 0), (1, 7), (2, 0), (2, 6), (2, 7), (2, 5), (4, 5), (4, 2)]","{6: [8, 5, 3, 1],
8: [],
5: [3],
3: [2, 6],
1: [4, 0, 7],
2: [0, 6, 7, 5],
4: [5, 2],
0: [],
7: []}","Node 6 is connected to nodes 8, 5, 3, 1.
Node 5 is connected to node 3.
Node 3 is connected to nodes 2, 6.
Node 1 is connected to nodes 4, 0, 7.
Node 2 is connected to nodes 0, 6, 7, 5.
Node 4 is connected to nodes 5, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,16,True,Find the strongly connected component containing node 6. ,"[3, 5, 2, 4, 1, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
Node 6 is a root node, find a new strongly connected component: [3, 5, 2, 4, 1, 6].
So the strongly connected component containing node 6 is ",0.6666666666666666,142
connected_component,"[(2, 5), (2, 4), (2, 6), (2, 1), (5, 4), (6, 0), (6, 2), (1, 3), (1, 5), (1, 4), (1, 8), (8, 1), (8, 0), (8, 3), (8, 5), (8, 4), (0, 2), (0, 6), (3, 2), (7, 2), (7, 8)]","{2: [5, 4, 6, 1],
5: [4],
4: [],
6: [0, 2],
1: [3, 5, 4, 8],
8: [1, 0, 3, 5, 4],
0: [2, 6],
3: [2],
7: [2, 8]}","Node 2 is connected to nodes 5, 4, 6, 1.
Node 5 is connected to node 4.
Node 6 is connected to nodes 0, 2.
Node 1 is connected to nodes 3, 5, 4, 8.
Node 8 is connected to nodes 1, 0, 3, 5, 4.
Node 0 is connected to nodes 2, 6.
Node 3 is connected to node 2.
Node 7 is connected to nodes 2, 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,21,True,Find the strongly connected component containing node 3. ,"[6, 0, 8, 1, 2, 3]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Node 3 is a root node, find a new strongly connected component: [6, 0, 8, 1, 2, 3].
So the strongly connected component containing node 3 is ",0.6666666666666666,143
connected_component,"[(7, 8), (7, 6), (7, 5), (7, 3), (7, 12), (8, 2), (8, 5), (8, 4), (6, 10), (6, 4), (5, 3), (5, 7), (5, 8), (3, 14), (3, 6), (12, 9), (12, 11), (12, 1), (12, 6), (4, 5), (4, 9), (9, 2), (9, 6), (13, 14), (13, 7), (14, 5), (14, 12), (14, 0), (14, 1), (14, 2), (2, 11), (11, 7), (11, 14), (11, 12), (1, 8), (10, 8), (10, 6), (10, 12)]","{7: [8, 6, 5, 3, 12],
8: [2, 5, 4],
6: [10, 4],
5: [3, 7, 8],
3: [14, 6],
12: [9, 11, 1, 6],
4: [5, 9],
9: [2, 6],
13: [14, 7],
14: [5, 12, 0, 1, 2],
2: [11],
11: [7, 14, 12],
0: [],
1: [8],
10: [8, 6, 12]}","Node 7 is connected to nodes 8, 6, 5, 3, 12.
Node 8 is connected to nodes 2, 5, 4.
Node 6 is connected to nodes 10, 4.
Node 5 is connected to nodes 3, 7, 8.
Node 3 is connected to nodes 14, 6.
Node 12 is connected to nodes 9, 11, 1, 6.
Node 4 is connected to nodes 5, 9.
Node 9 is connected to nodes 2, 6.
Node 13 is connected to nodes 14, 7.
Node 14 is connected to nodes 5, 12, 0, 1, 2.
Node 2 is connected to node 11.
Node 11 is connected to nodes 7, 14, 12.
Node 1 is connected to node 8.
Node 10 is connected to nodes 8, 6, 12.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,38,True,Find the strongly connected component containing node 4. ,"[7, 10, 6, 14, 3, 5, 8, 1, 12, 11, 2, 9, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 14.
Search from node 14.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 7.
Search from node 7.
Node 4 is a root node, find a new strongly connected component: [7, 10, 6, 14, 3, 5, 8, 1, 12, 11, 2, 9, 4].
So the strongly connected component containing node 4 is ",0.8666666666666667,144
connected_component,"[(5, 6), (5, 7), (5, 1), (6, 7), (6, 1), (6, 0), (6, 9), (7, 0), (7, 10), (7, 5), (1, 3), (0, 2), (0, 10), (0, 6), (0, 1), (9, 1), (9, 0), (8, 7), (8, 0), (10, 5), (10, 3), (10, 2), (10, 4), (3, 2), (3, 5), (3, 1), (3, 0), (2, 4), (2, 5), (2, 7), (2, 3), (4, 5), (4, 6), (4, 7), (4, 2)]","{5: [6, 7, 1],
6: [7, 1, 0, 9],
7: [0, 10, 5],
1: [3],
0: [2, 10, 6, 1],
9: [1, 0],
8: [7, 0],
10: [5, 3, 2, 4],
3: [2, 5, 1, 0],
2: [4, 5, 7, 3],
4: [5, 6, 7, 2]}","Node 5 is connected to nodes 6, 7, 1.
Node 6 is connected to nodes 7, 1, 0, 9.
Node 7 is connected to nodes 0, 10, 5.
Node 1 is connected to node 3.
Node 0 is connected to nodes 2, 10, 6, 1.
Node 9 is connected to nodes 1, 0.
Node 8 is connected to nodes 7, 0.
Node 10 is connected to nodes 5, 3, 2, 4.
Node 3 is connected to nodes 2, 5, 1, 0.
Node 2 is connected to nodes 4, 5, 7, 3.
Node 4 is connected to nodes 5, 6, 7, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,35,True,Find the strongly connected component containing node 8. ,[8],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 10.
Search from node 10.
Node 0 is a root node, find a new strongly connected component: [10, 7, 9, 6, 5, 4, 2, 3, 1, 0].
Node 8 is a root node, find a new strongly connected component: [8].
So the strongly connected component containing node 8 is ",0.0909090909090909,145
connected_component,"[(1, 8), (1, 6), (1, 3), (8, 4), (6, 1), (6, 8), (6, 2), (5, 6), (5, 0), (5, 1), (0, 6), (7, 2), (7, 6), (2, 4), (2, 5), (4, 1), (4, 5)]","{1: [8, 6, 3],
8: [4],
6: [1, 8, 2],
3: [],
5: [6, 0, 1],
0: [6],
7: [2, 6],
2: [4, 5],
4: [1, 5]}","Node 1 is connected to nodes 8, 6, 3.
Node 8 is connected to node 4.
Node 6 is connected to nodes 1, 8, 2.
Node 5 is connected to nodes 6, 0, 1.
Node 0 is connected to node 6.
Node 7 is connected to nodes 2, 6.
Node 2 is connected to nodes 4, 5.
Node 4 is connected to nodes 1, 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,17,True,Find the strongly connected component containing node 6. ,"[2, 0, 5, 1, 4, 8, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 2.
Search from node 2.
Node 6 is a root node, find a new strongly connected component: [2, 0, 5, 1, 4, 8, 6].
So the strongly connected component containing node 6 is ",0.7777777777777778,146
connected_component,"[(1, 3), (1, 4), (1, 6), (3, 4), (3, 5), (3, 2), (3, 0), (3, 8), (6, 5), (6, 8), (5, 8), (5, 1), (5, 7), (2, 8), (2, 4), (2, 6), (0, 8), (0, 2), (8, 1), (8, 3), (8, 7), (8, 5), (8, 2), (7, 0), (7, 3)]","{1: [3, 4, 6],
3: [4, 5, 2, 0, 8],
4: [],
6: [5, 8],
5: [8, 1, 7],
2: [8, 4, 6],
0: [8, 2],
8: [1, 3, 7, 5, 2],
7: [0, 3]}","Node 1 is connected to nodes 3, 4, 6.
Node 3 is connected to nodes 4, 5, 2, 0, 8.
Node 6 is connected to nodes 5, 8.
Node 5 is connected to nodes 8, 1, 7.
Node 2 is connected to nodes 8, 4, 6.
Node 0 is connected to nodes 8, 2.
Node 8 is connected to nodes 1, 3, 7, 5, 2.
Node 7 is connected to nodes 0, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,25,True,Find the strongly connected component containing node 7. ,"[5, 6, 2, 3, 1, 8, 0, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 5.
Search from node 5.
Node 7 is a root node, find a new strongly connected component: [5, 6, 2, 3, 1, 8, 0, 7].
So the strongly connected component containing node 7 is ",0.8888888888888888,147
connected_component,"[(3, 7), (3, 0), (3, 2), (7, 0), (5, 4), (5, 6), (4, 1), (6, 1)]","{3: [7, 0, 2],
7: [3, 0],
0: [3, 7],
2: [3],
5: [4, 6],
4: [5, 1],
6: [5, 1],
1: [4, 6]}","Node 3 is connected to nodes 7, 0, 2.
Node 7 is connected to nodes 3, 0.
Node 0 is connected to nodes 3, 7.
Node 2 is connected to node 3.
Node 5 is connected to nodes 4, 6.
Node 4 is connected to nodes 5, 1.
Node 6 is connected to nodes 5, 1.
Node 1 is connected to nodes 4, 6.","[0, 1, 2, 3, 4, 5, 6, 7]",8,8,False,Find the connected component containing node 1. ,"[1, 6, 5, 4]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 1, add it to the connected component. The current connected component is [1].
Visit node 6, add it to the connected component. The current connected component is [1, 6].
Visit node 5, add it to the connected component. The current connected component is [1, 6, 5].
Visit node 4, add it to the connected component. The current connected component is [1, 6, 5, 4].
Thus, the connected component containing node 1 is ",0.5,148
connected_component,"[(4, 3), (4, 2), (4, 10), (4, 12), (4, 11), (4, 8), (3, 9), (3, 10), (3, 8), (3, 4), (3, 5), (3, 6), (2, 10), (2, 12), (2, 0), (2, 4), (2, 7), (10, 1), (12, 11), (12, 7), (12, 3), (12, 10), (11, 8), (11, 5), (11, 9), (11, 0), (8, 7), (8, 6), (8, 9), (8, 0), (5, 7), (5, 2), (5, 9), (5, 10), (5, 12), (5, 4), (7, 6), (7, 2), (7, 9), (7, 10), (7, 0), (7, 8), (9, 12), (9, 8), (9, 4), (9, 5), (9, 7), (9, 2), (6, 2), (6, 4), (0, 4), (0, 5), (0, 3), (0, 1), (1, 12), (1, 0), (1, 8), (1, 3)]","{4: [3, 2, 10, 12, 11, 8],
3: [9, 10, 8, 4, 5, 6],
2: [10, 12, 0, 4, 7],
10: [1],
12: [11, 7, 3, 10],
11: [8, 5, 9, 0],
8: [7, 6, 9, 0],
5: [7, 2, 9, 10, 12, 4],
7: [6, 2, 9, 10, 0, 8],
9: [12, 8, 4, 5, 7, 2],
6: [2, 4],
0: [4, 5, 3, 1],
1: [12, 0, 8, 3]}","Node 4 is connected to nodes 3, 2, 10, 12, 11, 8.
Node 3 is connected to nodes 9, 10, 8, 4, 5, 6.
Node 2 is connected to nodes 10, 12, 0, 4, 7.
Node 10 is connected to node 1.
Node 12 is connected to nodes 11, 7, 3, 10.
Node 11 is connected to nodes 8, 5, 9, 0.
Node 8 is connected to nodes 7, 6, 9, 0.
Node 5 is connected to nodes 7, 2, 9, 10, 12, 4.
Node 7 is connected to nodes 6, 2, 9, 10, 0, 8.
Node 9 is connected to nodes 12, 8, 4, 5, 7, 2.
Node 6 is connected to nodes 2, 4.
Node 0 is connected to nodes 4, 5, 3, 1.
Node 1 is connected to nodes 12, 0, 8, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,58,True,Find the strongly connected component containing node 8. ,"[11, 12, 10, 5, 9, 6, 7, 2, 4, 3, 1, 0, 8]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 11.
Search from node 11.
Node 8 is a root node, find a new strongly connected component: [11, 12, 10, 5, 9, 6, 7, 2, 4, 3, 1, 0, 8].
So the strongly connected component containing node 8 is ",1.0,149
connected_component,"[(1, 3), (1, 2), (1, 8), (3, 4), (2, 4), (4, 7), (4, 8), (6, 0), (6, 1), (0, 3), (0, 8), (5, 0), (5, 1), (5, 2), (7, 4)]","{1: [3, 2, 8],
3: [4],
2: [4],
8: [],
4: [7, 8],
6: [0, 1],
0: [3, 8],
5: [0, 1, 2],
7: [4]}","Node 1 is connected to nodes 3, 2, 8.
Node 3 is connected to node 4.
Node 2 is connected to node 4.
Node 4 is connected to nodes 7, 8.
Node 6 is connected to nodes 0, 1.
Node 0 is connected to nodes 3, 8.
Node 5 is connected to nodes 0, 1, 2.
Node 7 is connected to node 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,15,True,Find the strongly connected component containing node 3. ,[3],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 7.
Search from node 7.
Node 4 is a root node, find a new strongly connected component: [7, 4].
Node 3 is a root node, find a new strongly connected component: [3].
So the strongly connected component containing node 3 is ",0.1111111111111111,150
connected_component,"[(0, 5), (0, 6), (0, 7), (5, 1), (5, 3), (5, 0), (6, 7), (6, 3), (6, 0), (1, 5), (3, 6), (3, 4), (4, 5), (4, 6), (4, 2)]","{0: [5, 6, 7],
5: [1, 3, 0],
6: [7, 3, 0],
7: [],
1: [5],
3: [6, 4],
4: [5, 6, 2],
2: []}","Node 0 is connected to nodes 5, 6, 7.
Node 5 is connected to nodes 1, 3, 0.
Node 6 is connected to nodes 7, 3, 0.
Node 1 is connected to node 5.
Node 3 is connected to nodes 6, 4.
Node 4 is connected to nodes 5, 6, 2.","[0, 1, 2, 3, 4, 5, 6, 7]",8,15,True,Find the strongly connected component containing node 5. ,"[1, 4, 3, 6, 0, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 7.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
Visit neighbor node 1.
Search from node 1.
Node 5 is a root node, find a new strongly connected component: [1, 4, 3, 6, 0, 5].
So the strongly connected component containing node 5 is ",0.75,151
connected_component,"[(8, 6), (8, 7), (8, 1), (8, 3), (8, 4), (6, 7), (6, 4), (6, 8), (7, 2), (7, 8), (7, 9), (1, 3), (1, 2), (1, 5), (3, 8), (3, 6), (4, 1), (4, 3), (9, 7), (9, 3), (9, 8), (2, 5), (2, 1), (2, 0), (2, 8), (0, 3), (0, 7), (0, 2)]","{8: [6, 7, 1, 3, 4],
6: [7, 4, 8],
7: [2, 8, 9],
1: [3, 2, 5],
3: [8, 6],
4: [1, 3],
9: [7, 3, 8],
2: [5, 1, 0, 8],
5: [],
0: [3, 7, 2]}","Node 8 is connected to nodes 6, 7, 1, 3, 4.
Node 6 is connected to nodes 7, 4, 8.
Node 7 is connected to nodes 2, 8, 9.
Node 1 is connected to nodes 3, 2, 5.
Node 3 is connected to nodes 8, 6.
Node 4 is connected to nodes 1, 3.
Node 9 is connected to nodes 7, 3, 8.
Node 2 is connected to nodes 5, 1, 0, 8.
Node 0 is connected to nodes 3, 7, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,28,True,Find the strongly connected component containing node 7. ,"[9, 4, 6, 3, 0, 2, 1, 8, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Visit neighbor node 9.
Search from node 9.
Node 7 is a root node, find a new strongly connected component: [9, 4, 6, 3, 0, 2, 1, 8, 7].
So the strongly connected component containing node 7 is ",0.9,152
connected_component,"[(6, 3), (3, 5), (5, 7), (5, 2), (7, 1), (2, 1), (4, 0), (4, 8), (0, 8)]","{6: [3],
3: [6, 5],
5: [3, 7, 2],
7: [5, 1],
2: [5, 1],
1: [7, 2],
4: [0, 8],
0: [4, 8],
8: [4, 0]}","Node 6 is connected to node 3.
Node 3 is connected to nodes 6, 5.
Node 5 is connected to nodes 3, 7, 2.
Node 7 is connected to nodes 5, 1.
Node 2 is connected to nodes 5, 1.
Node 1 is connected to nodes 7, 2.
Node 4 is connected to nodes 0, 8.
Node 0 is connected to nodes 4, 8.
Node 8 is connected to nodes 4, 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,9,False,Find the connected component containing node 3. ,"[3, 6, 5, 7, 1, 2]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 3, add it to the connected component. The current connected component is [3].
Visit node 6, add it to the connected component. The current connected component is [3, 6].
Visit node 5, add it to the connected component. The current connected component is [3, 6, 5].
Visit node 7, add it to the connected component. The current connected component is [3, 6, 5, 7].
Visit node 1, add it to the connected component. The current connected component is [3, 6, 5, 7, 1].
Visit node 2, add it to the connected component. The current connected component is [3, 6, 5, 7, 1, 2].
Thus, the connected component containing node 3 is ",0.6666666666666666,153
connected_component,"[(11, 3), (11, 7), (3, 5), (3, 6), (3, 2), (3, 9), (7, 4), (7, 9), (7, 11), (7, 0), (7, 5), (5, 1), (5, 11), (6, 4), (6, 2), (6, 11), (6, 3), (6, 0), (2, 9), (2, 8), (9, 3), (9, 8), (9, 6), (0, 10), (0, 2), (0, 3), (10, 6), (10, 0), (8, 7), (8, 2), (8, 11)]","{11: [3, 7],
3: [5, 6, 2, 9],
7: [4, 9, 11, 0, 5],
5: [1, 11],
6: [4, 2, 11, 3, 0],
2: [9, 8],
9: [3, 8, 6],
0: [10, 2, 3],
10: [6, 0],
1: [],
8: [7, 2, 11],
4: []}","Node 11 is connected to nodes 3, 7.
Node 3 is connected to nodes 5, 6, 2, 9.
Node 7 is connected to nodes 4, 9, 11, 0, 5.
Node 5 is connected to nodes 1, 11.
Node 6 is connected to nodes 4, 2, 11, 3, 0.
Node 2 is connected to nodes 9, 8.
Node 9 is connected to nodes 3, 8, 6.
Node 0 is connected to nodes 10, 2, 3.
Node 10 is connected to nodes 6, 0.
Node 8 is connected to nodes 7, 2, 11.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,31,True,Find the strongly connected component containing node 0. ,"[10, 6, 5, 7, 11, 2, 8, 9, 3, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 1.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 10.
Search from node 10.
Node 0 is a root node, find a new strongly connected component: [10, 6, 5, 7, 11, 2, 8, 9, 3, 0].
So the strongly connected component containing node 0 is ",0.8333333333333334,154
connected_component,"[(6, 5), (6, 0), (5, 2), (5, 1), (5, 6), (0, 2), (0, 1), (7, 1), (1, 6), (1, 5), (1, 4), (2, 7), (4, 6), (4, 0), (3, 0), (3, 4)]","{6: [5, 0],
5: [2, 1, 6],
0: [2, 1],
7: [1],
1: [6, 5, 4],
2: [7],
4: [6, 0],
3: [0, 4]}","Node 6 is connected to nodes 5, 0.
Node 5 is connected to nodes 2, 1, 6.
Node 0 is connected to nodes 2, 1.
Node 7 is connected to node 1.
Node 1 is connected to nodes 6, 5, 4.
Node 2 is connected to node 7.
Node 4 is connected to nodes 6, 0.
Node 3 is connected to nodes 0, 4.","[0, 1, 2, 3, 4, 5, 6, 7]",8,16,True,Find the strongly connected component containing node 3. ,[3],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 7.
Search from node 7.
Node 0 is a root node, find a new strongly connected component: [7, 2, 5, 6, 4, 1, 0].
Node 3 is a root node, find a new strongly connected component: [3].
So the strongly connected component containing node 3 is ",0.125,155
connected_component,"[(5, 11), (5, 8), (5, 12), (8, 9), (8, 7), (8, 10), (8, 4), (12, 0), (1, 3), (1, 0), (3, 9), (0, 3), (0, 7), (13, 10), (13, 9), (13, 2), (13, 12), (10, 2), (10, 0), (10, 13), (9, 3), (2, 5), (2, 13), (2, 3), (4, 11), (4, 13), (6, 13)]","{5: [11, 8, 12],
11: [],
8: [9, 7, 10, 4],
12: [0],
1: [3, 0],
3: [9],
0: [3, 7],
13: [10, 9, 2, 12],
10: [2, 0, 13],
9: [3],
2: [5, 13, 3],
4: [11, 13],
7: [],
6: [13]}","Node 5 is connected to nodes 11, 8, 12.
Node 8 is connected to nodes 9, 7, 10, 4.
Node 12 is connected to node 0.
Node 1 is connected to nodes 3, 0.
Node 3 is connected to node 9.
Node 0 is connected to nodes 3, 7.
Node 13 is connected to nodes 10, 9, 2, 12.
Node 10 is connected to nodes 2, 0, 13.
Node 9 is connected to node 3.
Node 2 is connected to nodes 5, 13, 3.
Node 4 is connected to nodes 11, 13.
Node 6 is connected to node 13.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,27,True,Find the strongly connected component containing node 11. ,[11],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 11.
Node 11 is a root node, find a new strongly connected component: [11].
So the strongly connected component containing node 11 is ",0.0714285714285714,156
connected_component,"[(3, 1), (1, 6), (1, 5), (1, 3), (6, 4), (6, 1), (4, 3), (4, 5), (4, 2), (2, 5), (7, 4), (7, 0), (7, 2), (0, 4)]","{3: [1],
1: [6, 5, 3],
6: [4, 1],
5: [],
4: [3, 5, 2],
2: [5],
7: [4, 0, 2],
0: [4]}","Node 3 is connected to node 1.
Node 1 is connected to nodes 6, 5, 3.
Node 6 is connected to nodes 4, 1.
Node 4 is connected to nodes 3, 5, 2.
Node 2 is connected to node 5.
Node 7 is connected to nodes 4, 0, 2.
Node 0 is connected to node 4.","[0, 1, 2, 3, 4, 5, 6, 7]",8,14,True,Find the strongly connected component containing node 7. ,[7],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Node 4 is a root node, find a new strongly connected component: [6, 1, 3, 4].
Node 0 is a root node, find a new strongly connected component: [0].
Node 7 is a root node, find a new strongly connected component: [7].
So the strongly connected component containing node 7 is ",0.125,157
connected_component,"[(1, 6), (1, 5), (1, 7), (6, 2), (5, 2), (5, 3), (5, 0), (7, 6), (7, 2), (7, 4), (2, 0), (2, 1), (0, 1), (0, 2), (4, 6), (3, 6), (8, 7)]","{1: [6, 5, 7],
6: [2],
5: [2, 3, 0],
7: [6, 2, 4],
2: [0, 1],
0: [1, 2],
4: [6],
3: [6],
8: [7]}","Node 1 is connected to nodes 6, 5, 7.
Node 6 is connected to node 2.
Node 5 is connected to nodes 2, 3, 0.
Node 7 is connected to nodes 6, 2, 4.
Node 2 is connected to nodes 0, 1.
Node 0 is connected to nodes 1, 2.
Node 4 is connected to node 6.
Node 3 is connected to node 6.
Node 8 is connected to node 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,17,True,Find the strongly connected component containing node 4. ,"[7, 3, 5, 1, 0, 2, 6, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Node 4 is a root node, find a new strongly connected component: [7, 3, 5, 1, 0, 2, 6, 4].
So the strongly connected component containing node 4 is ",0.8888888888888888,158
connected_component,"[(0, 6), (0, 2), (6, 3), (6, 4), (6, 2), (6, 1), (2, 1), (2, 5), (7, 1), (7, 0), (3, 5), (3, 2), (3, 1), (3, 6), (4, 1), (4, 7), (5, 2), (5, 0)]","{0: [6, 2],
6: [3, 4, 2, 1],
2: [1, 5],
7: [1, 0],
1: [],
3: [5, 2, 1, 6],
4: [1, 7],
5: [2, 0]}","Node 0 is connected to nodes 6, 2.
Node 6 is connected to nodes 3, 4, 2, 1.
Node 2 is connected to nodes 1, 5.
Node 7 is connected to nodes 1, 0.
Node 3 is connected to nodes 5, 2, 1, 6.
Node 4 is connected to nodes 1, 7.
Node 5 is connected to nodes 2, 0.","[0, 1, 2, 3, 4, 5, 6, 7]",8,18,True,Find the strongly connected component containing node 0. ,"[7, 4, 3, 6, 5, 2, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Node 0 is a root node, find a new strongly connected component: [7, 4, 3, 6, 5, 2, 0].
So the strongly connected component containing node 0 is ",0.875,159
connected_component,"[(7, 0), (7, 5), (7, 2), (0, 4), (0, 3), (0, 11), (0, 8), (5, 12), (5, 8), (5, 6), (2, 10), (2, 1), (2, 6), (4, 10), (4, 9), (4, 12), (4, 8), (4, 1), (3, 11), (3, 8), (3, 6), (11, 12), (11, 1), (8, 1), (10, 9), (9, 6)]","{7: [0, 5, 2],
0: [7, 4, 3, 11, 8],
5: [7, 12, 8, 6],
2: [7, 10, 1, 6],
4: [0, 10, 9, 12, 8, 1],
3: [0, 11, 8, 6],
11: [0, 12, 3, 1],
8: [0, 1, 5, 3, 4],
10: [9, 2, 4],
9: [10, 4, 6],
6: [9, 5, 2, 3],
12: [11, 5, 4],
1: [11, 8, 2, 4]}","Node 7 is connected to nodes 0, 5, 2.
Node 0 is connected to nodes 7, 4, 3, 11, 8.
Node 5 is connected to nodes 7, 12, 8, 6.
Node 2 is connected to nodes 7, 10, 1, 6.
Node 4 is connected to nodes 0, 10, 9, 12, 8, 1.
Node 3 is connected to nodes 0, 11, 8, 6.
Node 11 is connected to nodes 0, 12, 3, 1.
Node 8 is connected to nodes 0, 1, 5, 3, 4.
Node 10 is connected to nodes 9, 2, 4.
Node 9 is connected to nodes 10, 4, 6.
Node 6 is connected to nodes 9, 5, 2, 3.
Node 12 is connected to nodes 11, 5, 4.
Node 1 is connected to nodes 11, 8, 2, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,26,False,Find the connected component containing node 0. ,"[0, 11, 12, 5, 7, 2, 6, 3, 8, 4, 9, 10, 1]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 0, add it to the connected component. The current connected component is [0].
Visit node 11, add it to the connected component. The current connected component is [0, 11].
Visit node 12, add it to the connected component. The current connected component is [0, 11, 12].
Visit node 5, add it to the connected component. The current connected component is [0, 11, 12, 5].
Visit node 7, add it to the connected component. The current connected component is [0, 11, 12, 5, 7].
Visit node 2, add it to the connected component. The current connected component is [0, 11, 12, 5, 7, 2].
Visit node 6, add it to the connected component. The current connected component is [0, 11, 12, 5, 7, 2, 6].
Visit node 3, add it to the connected component. The current connected component is [0, 11, 12, 5, 7, 2, 6, 3].
Visit node 8, add it to the connected component. The current connected component is [0, 11, 12, 5, 7, 2, 6, 3, 8].
Visit node 4, add it to the connected component. The current connected component is [0, 11, 12, 5, 7, 2, 6, 3, 8, 4].
Visit node 9, add it to the connected component. The current connected component is [0, 11, 12, 5, 7, 2, 6, 3, 8, 4, 9].
Visit node 10, add it to the connected component. The current connected component is [0, 11, 12, 5, 7, 2, 6, 3, 8, 4, 9, 10].
Visit node 1, add it to the connected component. The current connected component is [0, 11, 12, 5, 7, 2, 6, 3, 8, 4, 9, 10, 1].
Thus, the connected component containing node 0 is ",1.0,160
connected_component,"[(4, 8), (8, 4), (8, 1), (8, 6), (7, 0), (0, 8), (1, 5), (5, 4), (5, 6), (2, 6), (2, 5), (2, 8), (2, 4), (6, 1), (6, 2), (3, 6)]","{4: [8],
8: [4, 1, 6],
7: [0],
0: [8],
1: [5],
5: [4, 6],
2: [6, 5, 8, 4],
6: [1, 2],
3: [6]}","Node 4 is connected to node 8.
Node 8 is connected to nodes 4, 1, 6.
Node 7 is connected to node 0.
Node 0 is connected to node 8.
Node 1 is connected to node 5.
Node 5 is connected to nodes 4, 6.
Node 2 is connected to nodes 6, 5, 8, 4.
Node 6 is connected to nodes 1, 2.
Node 3 is connected to node 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,16,True,Find the strongly connected component containing node 6. ,"[2, 8, 4, 5, 1, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Node 6 is a root node, find a new strongly connected component: [2, 8, 4, 5, 1, 6].
So the strongly connected component containing node 6 is ",0.6666666666666666,161
connected_component,"[(6, 3), (6, 4), (3, 4), (0, 5), (0, 9), (0, 8), (5, 7), (8, 2), (7, 2), (2, 1)]","{6: [3, 4],
3: [6, 4],
4: [6, 3],
0: [5, 9, 8],
5: [0, 7],
9: [0],
8: [0, 2],
7: [5, 2],
2: [7, 1, 8],
1: [2]}","Node 6 is connected to nodes 3, 4.
Node 3 is connected to nodes 6, 4.
Node 4 is connected to nodes 6, 3.
Node 0 is connected to nodes 5, 9, 8.
Node 5 is connected to nodes 0, 7.
Node 9 is connected to node 0.
Node 8 is connected to nodes 0, 2.
Node 7 is connected to nodes 5, 2.
Node 2 is connected to nodes 7, 1, 8.
Node 1 is connected to node 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,10,False,Find the connected component containing node 8. ,"[8, 2, 7, 5, 0, 9, 1]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 8, add it to the connected component. The current connected component is [8].
Visit node 2, add it to the connected component. The current connected component is [8, 2].
Visit node 7, add it to the connected component. The current connected component is [8, 2, 7].
Visit node 5, add it to the connected component. The current connected component is [8, 2, 7, 5].
Visit node 0, add it to the connected component. The current connected component is [8, 2, 7, 5, 0].
Visit node 9, add it to the connected component. The current connected component is [8, 2, 7, 5, 0, 9].
Visit node 1, add it to the connected component. The current connected component is [8, 2, 7, 5, 0, 9, 1].
Thus, the connected component containing node 8 is ",0.7,162
connected_component,"[(1, 6), (1, 0), (6, 7), (2, 3), (2, 5), (2, 0), (3, 5), (5, 2), (5, 3), (5, 6), (7, 5), (7, 0), (7, 4), (7, 2)]","{1: [6, 0],
6: [7],
0: [],
2: [3, 5, 0],
3: [5],
5: [2, 3, 6],
7: [5, 0, 4, 2],
4: []}","Node 1 is connected to nodes 6, 0.
Node 6 is connected to node 7.
Node 2 is connected to nodes 3, 5, 0.
Node 3 is connected to node 5.
Node 5 is connected to nodes 2, 3, 6.
Node 7 is connected to nodes 5, 0, 4, 2.","[0, 1, 2, 3, 4, 5, 6, 7]",8,14,True,Find the strongly connected component containing node 6. ,"[5, 3, 2, 7, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Node 6 is a root node, find a new strongly connected component: [5, 3, 2, 7, 6].
So the strongly connected component containing node 6 is ",0.625,163
connected_component,"[(3, 0), (3, 5), (3, 8), (3, 2), (3, 1), (3, 12), (0, 2), (0, 12), (5, 4), (5, 7), (5, 2), (8, 4), (8, 11), (8, 2), (2, 1), (2, 6), (1, 3), (1, 0), (1, 5), (1, 10), (1, 11), (1, 7), (12, 3), (12, 0), (12, 11), (12, 1), (9, 5), (9, 8), (9, 7), (9, 1), (7, 1), (7, 5), (7, 8), (4, 10), (4, 2), (4, 6), (4, 0), (4, 8), (11, 6), (11, 3), (11, 5), (11, 10), (10, 11), (10, 2), (10, 6), (10, 12), (10, 8), (6, 3), (6, 4), (13, 7), (13, 6), (13, 3), (13, 9), (13, 0), (13, 5), (13, 4)]","{3: [0, 5, 8, 2, 1, 12],
0: [2, 12],
5: [4, 7, 2],
8: [4, 11, 2],
2: [1, 6],
1: [3, 0, 5, 10, 11, 7],
12: [3, 0, 11, 1],
9: [5, 8, 7, 1],
7: [1, 5, 8],
4: [10, 2, 6, 0, 8],
11: [6, 3, 5, 10],
10: [11, 2, 6, 12, 8],
6: [3, 4],
13: [7, 6, 3, 9, 0, 5, 4]}","Node 3 is connected to nodes 0, 5, 8, 2, 1, 12.
Node 0 is connected to nodes 2, 12.
Node 5 is connected to nodes 4, 7, 2.
Node 8 is connected to nodes 4, 11, 2.
Node 2 is connected to nodes 1, 6.
Node 1 is connected to nodes 3, 0, 5, 10, 11, 7.
Node 12 is connected to nodes 3, 0, 11, 1.
Node 9 is connected to nodes 5, 8, 7, 1.
Node 7 is connected to nodes 1, 5, 8.
Node 4 is connected to nodes 10, 2, 6, 0, 8.
Node 11 is connected to nodes 6, 3, 5, 10.
Node 10 is connected to nodes 11, 2, 6, 12, 8.
Node 6 is connected to nodes 3, 4.
Node 13 is connected to nodes 7, 6, 3, 9, 0, 5, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,56,True,Find the strongly connected component containing node 5. ,"[7, 4, 8, 3, 6, 10, 11, 12, 0, 1, 2, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Node 5 is a root node, find a new strongly connected component: [7, 4, 8, 3, 6, 10, 11, 12, 0, 1, 2, 5].
So the strongly connected component containing node 5 is ",0.8571428571428571,164
connected_component,"[(7, 2), (7, 6), (2, 6), (2, 1), (2, 3), (2, 0), (2, 4), (1, 4), (1, 7), (4, 9), (4, 2), (4, 8), (4, 0), (3, 10), (3, 6), (10, 7), (10, 1), (5, 6), (8, 6), (0, 4), (0, 9), (0, 6), (0, 3), (0, 5), (0, 8), (9, 2), (9, 6), (9, 4)]","{7: [2, 6],
2: [6, 1, 3, 0, 4],
6: [],
1: [4, 7],
4: [9, 2, 8, 0],
3: [10, 6],
10: [7, 1],
5: [6],
8: [6],
0: [4, 9, 6, 3, 5, 8],
9: [2, 6, 4]}","Node 7 is connected to nodes 2, 6.
Node 2 is connected to nodes 6, 1, 3, 0, 4.
Node 1 is connected to nodes 4, 7.
Node 4 is connected to nodes 9, 2, 8, 0.
Node 3 is connected to nodes 10, 6.
Node 10 is connected to nodes 7, 1.
Node 5 is connected to node 6.
Node 8 is connected to node 6.
Node 0 is connected to nodes 4, 9, 6, 3, 5, 8.
Node 9 is connected to nodes 2, 6, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,28,True,Find the strongly connected component containing node 0. ,"[7, 2, 9, 4, 1, 10, 3, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Node 0 is a root node, find a new strongly connected component: [7, 2, 9, 4, 1, 10, 3, 0].
So the strongly connected component containing node 0 is ",0.7272727272727273,165
connected_component,"[(3, 13), (13, 5), (13, 7), (13, 3), (13, 12), (12, 8), (12, 2), (12, 0), (12, 5), (12, 7), (8, 13), (2, 5), (2, 3), (0, 7), (0, 2), (5, 7), (5, 14), (7, 11), (7, 0), (7, 9), (1, 2), (1, 0), (1, 5), (1, 10), (10, 14), (10, 6), (10, 5), (11, 7), (4, 0), (4, 14), (4, 3), (4, 8), (6, 12), (6, 11), (9, 10), (9, 3), (9, 1), (9, 13)]","{3: [13],
13: [5, 7, 3, 12],
12: [8, 2, 0, 5, 7],
8: [13],
2: [5, 3],
0: [7, 2],
5: [7, 14],
7: [11, 0, 9],
1: [2, 0, 5, 10],
10: [14, 6, 5],
11: [7],
4: [0, 14, 3, 8],
14: [],
6: [12, 11],
9: [10, 3, 1, 13]}","Node 3 is connected to node 13.
Node 13 is connected to nodes 5, 7, 3, 12.
Node 12 is connected to nodes 8, 2, 0, 5, 7.
Node 8 is connected to node 13.
Node 2 is connected to nodes 5, 3.
Node 0 is connected to nodes 7, 2.
Node 5 is connected to nodes 7, 14.
Node 7 is connected to nodes 11, 0, 9.
Node 1 is connected to nodes 2, 0, 5, 10.
Node 10 is connected to nodes 14, 6, 5.
Node 11 is connected to node 7.
Node 4 is connected to nodes 0, 14, 3, 8.
Node 6 is connected to nodes 12, 11.
Node 9 is connected to nodes 10, 3, 1, 13.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,38,True,Find the strongly connected component containing node 6. ,"[10, 1, 9, 8, 5, 12, 13, 3, 2, 0, 7, 11, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 14.
Search from node 14.
Node 14 is a root node, find a new strongly connected component: [14].
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 10.
Search from node 10.
Node 6 is a root node, find a new strongly connected component: [10, 1, 9, 8, 5, 12, 13, 3, 2, 0, 7, 11, 6].
So the strongly connected component containing node 6 is ",0.8666666666666667,166
connected_component,"[(12, 0), (12, 5), (12, 2), (12, 11), (0, 13), (0, 2), (0, 9), (0, 10), (5, 11), (5, 6), (5, 3), (2, 7), (2, 13), (7, 13), (7, 3), (7, 5), (7, 12), (13, 10), (13, 6), (3, 11), (3, 7), (4, 1), (4, 11), (1, 3), (1, 5), (1, 10), (1, 12), (1, 13), (6, 9), (9, 13), (9, 5), (10, 11), (8, 6), (8, 1), (8, 5)]","{12: [0, 5, 2, 11],
0: [13, 2, 9, 10],
5: [11, 6, 3],
2: [7, 13],
11: [],
7: [13, 3, 5, 12],
13: [10, 6],
3: [11, 7],
4: [1, 11],
1: [3, 5, 10, 12, 13],
6: [9],
9: [13, 5],
10: [11],
8: [6, 1, 5]}","Node 12 is connected to nodes 0, 5, 2, 11.
Node 0 is connected to nodes 13, 2, 9, 10.
Node 5 is connected to nodes 11, 6, 3.
Node 2 is connected to nodes 7, 13.
Node 7 is connected to nodes 13, 3, 5, 12.
Node 13 is connected to nodes 10, 6.
Node 3 is connected to nodes 11, 7.
Node 4 is connected to nodes 1, 11.
Node 1 is connected to nodes 3, 5, 10, 12, 13.
Node 6 is connected to node 9.
Node 9 is connected to nodes 13, 5.
Node 10 is connected to node 11.
Node 8 is connected to nodes 6, 1, 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,35,True,Find the strongly connected component containing node 0. ,"[6, 13, 2, 12, 7, 3, 5, 9, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 11.
Search from node 11.
Node 11 is a root node, find a new strongly connected component: [11].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 10.
Search from node 10.
Node 10 is a root node, find a new strongly connected component: [10].
Visit neighbor node 6.
Search from node 6.
Node 0 is a root node, find a new strongly connected component: [6, 13, 2, 12, 7, 3, 5, 9, 0].
So the strongly connected component containing node 0 is ",0.6428571428571429,167
connected_component,"[(12, 7), (12, 5), (7, 0), (7, 6), (7, 14), (7, 10), (7, 9), (5, 2), (1, 7), (1, 3), (3, 1), (3, 7), (8, 4), (8, 1), (0, 8), (6, 14), (6, 10), (6, 13), (6, 8), (10, 2), (10, 11), (9, 12), (9, 8), (9, 10), (13, 0), (13, 14), (13, 3), (13, 10), (11, 4), (2, 8), (2, 0)]","{12: [7, 5],
7: [0, 6, 14, 10, 9],
5: [2],
1: [7, 3],
3: [1, 7],
8: [4, 1],
4: [],
0: [8],
6: [14, 10, 13, 8],
14: [],
10: [2, 11],
9: [12, 8, 10],
13: [0, 14, 3, 10],
11: [4],
2: [8, 0]}","Node 12 is connected to nodes 7, 5.
Node 7 is connected to nodes 0, 6, 14, 10, 9.
Node 5 is connected to node 2.
Node 1 is connected to nodes 7, 3.
Node 3 is connected to nodes 1, 7.
Node 8 is connected to nodes 4, 1.
Node 0 is connected to node 8.
Node 6 is connected to nodes 14, 10, 13, 8.
Node 10 is connected to nodes 2, 11.
Node 9 is connected to nodes 12, 8, 10.
Node 13 is connected to nodes 0, 14, 3, 10.
Node 11 is connected to node 4.
Node 2 is connected to nodes 8, 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,31,True,Find the strongly connected component containing node 0. ,"[5, 12, 9, 13, 2, 10, 6, 7, 3, 1, 8, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Node 11 is a root node, find a new strongly connected component: [11].
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 14.
Search from node 14.
Node 14 is a root node, find a new strongly connected component: [14].
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 5.
Search from node 5.
Node 0 is a root node, find a new strongly connected component: [5, 12, 9, 13, 2, 10, 6, 7, 3, 1, 8, 0].
So the strongly connected component containing node 0 is ",0.8,168
connected_component,"[(9, 10), (9, 8), (8, 3), (8, 0), (8, 4), (8, 5), (3, 11), (3, 7), (3, 2), (11, 6), (11, 1), (11, 13), (4, 12)]","{9: [10, 8],
10: [9],
8: [9, 3, 0, 4, 5],
3: [11, 7, 8, 2],
11: [3, 6, 1, 13],
7: [3],
2: [3],
6: [11],
1: [11],
13: [11],
0: [8],
4: [8, 12],
5: [8],
12: [4]}","Node 9 is connected to nodes 10, 8.
Node 10 is connected to node 9.
Node 8 is connected to nodes 9, 3, 0, 4, 5.
Node 3 is connected to nodes 11, 7, 8, 2.
Node 11 is connected to nodes 3, 6, 1, 13.
Node 7 is connected to node 3.
Node 2 is connected to node 3.
Node 6 is connected to node 11.
Node 1 is connected to node 11.
Node 13 is connected to node 11.
Node 0 is connected to node 8.
Node 4 is connected to nodes 8, 12.
Node 5 is connected to node 8.
Node 12 is connected to node 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,13,False,Find the connected component containing node 5. ,"[5, 8, 4, 12, 3, 7, 11, 6, 13, 1, 2, 9, 10, 0]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 5, add it to the connected component. The current connected component is [5].
Visit node 8, add it to the connected component. The current connected component is [5, 8].
Visit node 4, add it to the connected component. The current connected component is [5, 8, 4].
Visit node 12, add it to the connected component. The current connected component is [5, 8, 4, 12].
Visit node 3, add it to the connected component. The current connected component is [5, 8, 4, 12, 3].
Visit node 7, add it to the connected component. The current connected component is [5, 8, 4, 12, 3, 7].
Visit node 11, add it to the connected component. The current connected component is [5, 8, 4, 12, 3, 7, 11].
Visit node 6, add it to the connected component. The current connected component is [5, 8, 4, 12, 3, 7, 11, 6].
Visit node 13, add it to the connected component. The current connected component is [5, 8, 4, 12, 3, 7, 11, 6, 13].
Visit node 1, add it to the connected component. The current connected component is [5, 8, 4, 12, 3, 7, 11, 6, 13, 1].
Visit node 2, add it to the connected component. The current connected component is [5, 8, 4, 12, 3, 7, 11, 6, 13, 1, 2].
Visit node 9, add it to the connected component. The current connected component is [5, 8, 4, 12, 3, 7, 11, 6, 13, 1, 2, 9].
Visit node 10, add it to the connected component. The current connected component is [5, 8, 4, 12, 3, 7, 11, 6, 13, 1, 2, 9, 10].
Visit node 0, add it to the connected component. The current connected component is [5, 8, 4, 12, 3, 7, 11, 6, 13, 1, 2, 9, 10, 0].
Thus, the connected component containing node 5 is ",1.0,169
connected_component,"[(7, 13), (7, 10), (7, 2), (7, 0), (7, 12), (13, 3), (13, 10), (13, 12), (13, 7), (13, 4), (13, 9), (10, 12), (10, 4), (10, 9), (10, 6), (10, 8), (2, 13), (2, 6), (2, 3), (2, 8), (2, 11), (0, 9), (0, 3), (0, 11), (12, 3), (12, 11), (12, 10), (12, 2), (4, 3), (4, 11), (3, 11), (3, 2), (3, 0), (3, 5), (3, 9), (3, 1), (11, 13), (11, 6), (11, 8), (1, 13), (1, 9), (6, 3), (6, 0), (6, 12), (6, 13), (5, 12), (5, 4), (5, 1), (5, 13), (5, 8), (5, 11), (8, 11), (8, 10), (8, 2), (8, 4), (8, 13)]","{7: [13, 10, 2, 0, 12],
13: [3, 10, 12, 7, 4, 9],
10: [12, 4, 9, 6, 8],
2: [13, 6, 3, 8, 11],
0: [9, 3, 11],
12: [3, 11, 10, 2],
4: [3, 11],
3: [11, 2, 0, 5, 9, 1],
11: [13, 6, 8],
1: [13, 9],
9: [],
6: [3, 0, 12, 13],
5: [12, 4, 1, 13, 8, 11],
8: [11, 10, 2, 4, 13]}","Node 7 is connected to nodes 13, 10, 2, 0, 12.
Node 13 is connected to nodes 3, 10, 12, 7, 4, 9.
Node 10 is connected to nodes 12, 4, 9, 6, 8.
Node 2 is connected to nodes 13, 6, 3, 8, 11.
Node 0 is connected to nodes 9, 3, 11.
Node 12 is connected to nodes 3, 11, 10, 2.
Node 4 is connected to nodes 3, 11.
Node 3 is connected to nodes 11, 2, 0, 5, 9, 1.
Node 11 is connected to nodes 13, 6, 8.
Node 1 is connected to nodes 13, 9.
Node 6 is connected to nodes 3, 0, 12, 13.
Node 5 is connected to nodes 12, 4, 1, 13, 8, 11.
Node 8 is connected to nodes 11, 10, 2, 4, 13.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,56,True,Find the strongly connected component containing node 9. ,[9],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
So the strongly connected component containing node 9 is ",0.0714285714285714,170
connected_component,"[(3, 0), (3, 8), (0, 5), (0, 2), (0, 10), (0, 7), (8, 10), (8, 7), (8, 5), (8, 2), (7, 9), (7, 1), (7, 2), (7, 8), (1, 8), (1, 0), (2, 6), (2, 7), (4, 1), (4, 8), (5, 6), (5, 8), (5, 10), (10, 2), (6, 2)]","{3: [0, 8],
0: [5, 2, 10, 7],
8: [10, 7, 5, 2],
7: [9, 1, 2, 8],
9: [],
1: [8, 0],
2: [6, 7],
4: [1, 8],
5: [6, 8, 10],
10: [2],
6: [2]}","Node 3 is connected to nodes 0, 8.
Node 0 is connected to nodes 5, 2, 10, 7.
Node 8 is connected to nodes 10, 7, 5, 2.
Node 7 is connected to nodes 9, 1, 2, 8.
Node 1 is connected to nodes 8, 0.
Node 2 is connected to nodes 6, 7.
Node 4 is connected to nodes 1, 8.
Node 5 is connected to nodes 6, 8, 10.
Node 10 is connected to node 2.
Node 6 is connected to node 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,25,True,Find the strongly connected component containing node 3. ,[3],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Visit neighbor node 1.
Search from node 1.
Node 0 is a root node, find a new strongly connected component: [1, 5, 10, 8, 7, 6, 2, 0].
Node 3 is a root node, find a new strongly connected component: [3].
So the strongly connected component containing node 3 is ",0.0909090909090909,171
connected_component,"[(8, 1), (8, 3), (1, 7), (1, 6), (3, 0), (7, 6), (2, 4), (2, 5), (4, 5)]","{8: [1, 3],
1: [8, 7, 6],
3: [8, 0],
7: [1, 6],
6: [1, 7],
2: [4, 5],
4: [2, 5],
5: [2, 4],
0: [3]}","Node 8 is connected to nodes 1, 3.
Node 1 is connected to nodes 8, 7, 6.
Node 3 is connected to nodes 8, 0.
Node 7 is connected to nodes 1, 6.
Node 6 is connected to nodes 1, 7.
Node 2 is connected to nodes 4, 5.
Node 4 is connected to nodes 2, 5.
Node 5 is connected to nodes 2, 4.
Node 0 is connected to node 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,9,False,Find the connected component containing node 3. ,"[3, 0, 8, 1, 7, 6]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 3, add it to the connected component. The current connected component is [3].
Visit node 0, add it to the connected component. The current connected component is [3, 0].
Visit node 8, add it to the connected component. The current connected component is [3, 0, 8].
Visit node 1, add it to the connected component. The current connected component is [3, 0, 8, 1].
Visit node 7, add it to the connected component. The current connected component is [3, 0, 8, 1, 7].
Visit node 6, add it to the connected component. The current connected component is [3, 0, 8, 1, 7, 6].
Thus, the connected component containing node 3 is ",0.6666666666666666,172
connected_component,"[(5, 7), (5, 4), (5, 0), (7, 4), (7, 1), (7, 6), (7, 2), (4, 8), (0, 7), (0, 1), (1, 8), (1, 5), (1, 3), (1, 4), (6, 8), (6, 0), (6, 4), (3, 1), (3, 0), (8, 3), (8, 4)]","{5: [7, 4, 0],
7: [4, 1, 6, 2],
4: [8],
0: [7, 1],
1: [8, 5, 3, 4],
6: [8, 0, 4],
2: [],
3: [1, 0],
8: [3, 4]}","Node 5 is connected to nodes 7, 4, 0.
Node 7 is connected to nodes 4, 1, 6, 2.
Node 4 is connected to node 8.
Node 0 is connected to nodes 7, 1.
Node 1 is connected to nodes 8, 5, 3, 4.
Node 6 is connected to nodes 8, 0, 4.
Node 3 is connected to nodes 1, 0.
Node 8 is connected to nodes 3, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,21,True,Find the strongly connected component containing node 5. ,"[6, 7, 4, 3, 8, 1, 0, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 6.
Search from node 6.
Node 5 is a root node, find a new strongly connected component: [6, 7, 4, 3, 8, 1, 0, 5].
So the strongly connected component containing node 5 is ",0.8888888888888888,173
connected_component,"[(1, 2), (1, 3), (1, 11), (2, 9), (3, 4), (3, 6), (3, 5), (11, 3), (7, 4), (4, 6), (6, 7), (9, 5), (9, 1), (5, 3), (5, 6), (10, 0), (10, 6), (10, 9), (0, 11), (0, 7), (0, 10), (8, 5)]","{1: [2, 3, 11],
2: [9],
3: [4, 6, 5],
11: [3],
7: [4],
4: [6],
6: [7],
9: [5, 1],
5: [3, 6],
10: [0, 6, 9],
0: [11, 7, 10],
8: [5]}","Node 1 is connected to nodes 2, 3, 11.
Node 2 is connected to node 9.
Node 3 is connected to nodes 4, 6, 5.
Node 11 is connected to node 3.
Node 7 is connected to node 4.
Node 4 is connected to node 6.
Node 6 is connected to node 7.
Node 9 is connected to nodes 5, 1.
Node 5 is connected to nodes 3, 6.
Node 10 is connected to nodes 0, 6, 9.
Node 0 is connected to nodes 11, 7, 10.
Node 8 is connected to node 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,22,True,Find the strongly connected component containing node 2. ,"[1, 9, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Node 4 is a root node, find a new strongly connected component: [7, 6, 4].
Visit neighbor node 5.
Search from node 5.
Node 3 is a root node, find a new strongly connected component: [5, 3].
Node 11 is a root node, find a new strongly connected component: [11].
Node 2 is a root node, find a new strongly connected component: [1, 9, 2].
So the strongly connected component containing node 2 is ",0.25,174
connected_component,"[(7, 5), (7, 6), (7, 4), (5, 1), (5, 4), (6, 1), (6, 4), (6, 7), (6, 2), (4, 6), (4, 0), (4, 1), (2, 6), (2, 5), (0, 1), (0, 7), (0, 5), (0, 2), (3, 1), (3, 7), (3, 6)]","{7: [5, 6, 4],
5: [1, 4],
6: [1, 4, 7, 2],
4: [6, 0, 1],
1: [],
2: [6, 5],
0: [1, 7, 5, 2],
3: [1, 7, 6]}","Node 7 is connected to nodes 5, 6, 4.
Node 5 is connected to nodes 1, 4.
Node 6 is connected to nodes 1, 4, 7, 2.
Node 4 is connected to nodes 6, 0, 1.
Node 2 is connected to nodes 6, 5.
Node 0 is connected to nodes 1, 7, 5, 2.
Node 3 is connected to nodes 1, 7, 6.","[0, 1, 2, 3, 4, 5, 6, 7]",8,21,True,Find the strongly connected component containing node 7. ,"[6, 5, 2, 0, 4, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Node 7 is a root node, find a new strongly connected component: [6, 5, 2, 0, 4, 7].
So the strongly connected component containing node 7 is ",0.75,175
connected_component,"[(11, 0), (11, 9), (11, 2), (0, 4), (9, 5), (9, 0), (2, 1), (2, 5), (2, 7), (1, 12), (1, 13), (12, 10), (12, 5), (12, 4), (13, 2), (13, 6), (13, 10), (5, 10), (5, 11), (10, 1), (10, 12), (4, 1), (4, 6), (4, 5), (8, 13), (3, 6), (3, 13), (7, 5), (7, 10), (7, 13)]","{11: [0, 9, 2],
0: [4],
9: [5, 0],
2: [1, 5, 7],
1: [12, 13],
12: [10, 5, 4],
13: [2, 6, 10],
5: [10, 11],
10: [1, 12],
4: [1, 6, 5],
6: [],
8: [13],
3: [6, 13],
7: [5, 10, 13]}","Node 11 is connected to nodes 0, 9, 2.
Node 0 is connected to node 4.
Node 9 is connected to nodes 5, 0.
Node 2 is connected to nodes 1, 5, 7.
Node 1 is connected to nodes 12, 13.
Node 12 is connected to nodes 10, 5, 4.
Node 13 is connected to nodes 2, 6, 10.
Node 5 is connected to nodes 10, 11.
Node 10 is connected to nodes 1, 12.
Node 4 is connected to nodes 1, 6, 5.
Node 8 is connected to node 13.
Node 3 is connected to nodes 6, 13.
Node 7 is connected to nodes 5, 10, 13.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,30,True,Find the strongly connected component containing node 0. ,"[13, 7, 2, 9, 11, 5, 10, 12, 1, 4, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Node 0 is a root node, find a new strongly connected component: [13, 7, 2, 9, 11, 5, 10, 12, 1, 4, 0].
So the strongly connected component containing node 0 is ",0.7857142857142857,176
connected_component,"[(2, 9), (2, 3), (9, 2), (9, 4), (3, 4), (3, 9), (10, 1), (10, 9), (10, 6), (10, 7), (6, 4), (6, 11), (7, 3), (7, 11), (4, 11), (11, 7), (11, 2), (8, 7), (0, 9), (0, 5), (0, 3), (0, 4), (0, 11), (5, 6)]","{2: [9, 3],
9: [2, 4],
3: [4, 9],
10: [1, 9, 6, 7],
1: [],
6: [4, 11],
7: [3, 11],
4: [11],
11: [7, 2],
8: [7],
0: [9, 5, 3, 4, 11],
5: [6]}","Node 2 is connected to nodes 9, 3.
Node 9 is connected to nodes 2, 4.
Node 3 is connected to nodes 4, 9.
Node 10 is connected to nodes 1, 9, 6, 7.
Node 6 is connected to nodes 4, 11.
Node 7 is connected to nodes 3, 11.
Node 4 is connected to node 11.
Node 11 is connected to nodes 7, 2.
Node 8 is connected to node 7.
Node 0 is connected to nodes 9, 5, 3, 4, 11.
Node 5 is connected to node 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,24,True,Find the strongly connected component containing node 7. ,"[3, 4, 9, 2, 11, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Node 7 is a root node, find a new strongly connected component: [3, 4, 9, 2, 11, 7].
So the strongly connected component containing node 7 is ",0.5,177
connected_component,"[(4, 6), (4, 0), (6, 3), (6, 8), (6, 7), (6, 0), (6, 1), (0, 1), (0, 4), (0, 7), (3, 0), (3, 6), (8, 7), (8, 4), (8, 6), (7, 0), (7, 1), (7, 2), (7, 3), (7, 5), (1, 2), (1, 4), (1, 6), (1, 3), (1, 8), (1, 7), (1, 0), (5, 1), (5, 4), (5, 3)]","{4: [6, 0],
6: [3, 8, 7, 0, 1],
0: [1, 4, 7],
3: [0, 6],
8: [7, 4, 6],
7: [0, 1, 2, 3, 5],
1: [2, 4, 6, 3, 8, 7, 0],
5: [1, 4, 3],
2: []}","Node 4 is connected to nodes 6, 0.
Node 6 is connected to nodes 3, 8, 7, 0, 1.
Node 0 is connected to nodes 1, 4, 7.
Node 3 is connected to nodes 0, 6.
Node 8 is connected to nodes 7, 4, 6.
Node 7 is connected to nodes 0, 1, 2, 3, 5.
Node 1 is connected to nodes 2, 4, 6, 3, 8, 7, 0.
Node 5 is connected to nodes 1, 4, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,30,True,Find the strongly connected component containing node 1. ,"[8, 5, 7, 3, 6, 4, 0, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 8.
Search from node 8.
Node 1 is a root node, find a new strongly connected component: [8, 5, 7, 3, 6, 4, 0, 1].
So the strongly connected component containing node 1 is ",0.8888888888888888,178
connected_component,"[(4, 0), (4, 2), (0, 10), (0, 1), (0, 7), (0, 8), (0, 11), (0, 12), (2, 1), (2, 4), (12, 13), (13, 9), (13, 2), (13, 6), (10, 9), (10, 1), (10, 7), (10, 12), (10, 2), (10, 6), (1, 10), (7, 14), (7, 6), (7, 10), (8, 10), (11, 12), (11, 7), (6, 13), (6, 8), (9, 3), (9, 12), (9, 2), (9, 6), (9, 10), (9, 13), (3, 12), (3, 5), (3, 8), (5, 1), (5, 14), (5, 11), (5, 0), (5, 13), (14, 0)]","{4: [0, 2],
0: [10, 1, 7, 8, 11, 12],
2: [1, 4],
12: [13],
13: [9, 2, 6],
10: [9, 1, 7, 12, 2, 6],
1: [10],
7: [14, 6, 10],
8: [10],
11: [12, 7],
6: [13, 8],
9: [3, 12, 2, 6, 10, 13],
3: [12, 5, 8],
5: [1, 14, 11, 0, 13],
14: [0]}","Node 4 is connected to nodes 0, 2.
Node 0 is connected to nodes 10, 1, 7, 8, 11, 12.
Node 2 is connected to nodes 1, 4.
Node 12 is connected to node 13.
Node 13 is connected to nodes 9, 2, 6.
Node 10 is connected to nodes 9, 1, 7, 12, 2, 6.
Node 1 is connected to node 10.
Node 7 is connected to nodes 14, 6, 10.
Node 8 is connected to node 10.
Node 11 is connected to nodes 12, 7.
Node 6 is connected to nodes 13, 8.
Node 9 is connected to nodes 3, 12, 2, 6, 10, 13.
Node 3 is connected to nodes 12, 5, 8.
Node 5 is connected to nodes 1, 14, 11, 0, 13.
Node 14 is connected to node 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,44,True,Find the strongly connected component containing node 13. ,"[5, 3, 4, 12, 11, 0, 14, 7, 8, 6, 10, 1, 2, 9, 13]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 13.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 14.
Search from node 14.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Node 13 is a root node, find a new strongly connected component: [5, 3, 4, 12, 11, 0, 14, 7, 8, 6, 10, 1, 2, 9, 13].
So the strongly connected component containing node 13 is ",1.0,179
connected_component,"[(8, 1), (1, 0), (1, 11), (0, 4), (0, 3), (0, 1), (11, 12), (4, 11), (4, 1), (4, 10), (4, 9), (4, 7), (3, 4), (3, 11), (10, 3), (9, 7), (9, 12), (9, 6), (9, 1), (9, 10), (7, 11), (12, 6), (6, 3), (6, 9), (6, 12), (2, 8), (5, 7)]","{8: [1],
1: [0, 11],
0: [4, 3, 1],
11: [12],
4: [11, 1, 10, 9, 7],
3: [4, 11],
10: [3],
9: [7, 12, 6, 1, 10],
7: [11],
12: [6],
6: [3, 9, 12],
2: [8],
5: [7]}","Node 8 is connected to node 1.
Node 1 is connected to nodes 0, 11.
Node 0 is connected to nodes 4, 3, 1.
Node 11 is connected to node 12.
Node 4 is connected to nodes 11, 1, 10, 9, 7.
Node 3 is connected to nodes 4, 11.
Node 10 is connected to node 3.
Node 9 is connected to nodes 7, 12, 6, 1, 10.
Node 7 is connected to node 11.
Node 12 is connected to node 6.
Node 6 is connected to nodes 3, 9, 12.
Node 2 is connected to node 8.
Node 5 is connected to node 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,27,True,Find the strongly connected component containing node 9. ,"[10, 7, 4, 6, 12, 11, 3, 0, 1, 9]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 9.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 10.
Search from node 10.
Node 9 is a root node, find a new strongly connected component: [10, 7, 4, 6, 12, 11, 3, 0, 1, 9].
So the strongly connected component containing node 9 is ",0.7692307692307693,180
connected_component,"[(5, 1), (5, 2), (1, 6), (1, 5), (1, 8), (2, 6), (2, 5), (2, 4), (3, 4), (3, 8), (3, 2), (3, 5), (4, 1), (4, 5), (8, 6), (8, 7), (8, 3), (8, 4), (6, 1), (7, 0), (7, 1)]","{5: [1, 2],
1: [6, 5, 8],
2: [6, 5, 4],
3: [4, 8, 2, 5],
4: [1, 5],
8: [6, 7, 3, 4],
6: [1],
7: [0, 1],
0: []}","Node 5 is connected to nodes 1, 2.
Node 1 is connected to nodes 6, 5, 8.
Node 2 is connected to nodes 6, 5, 4.
Node 3 is connected to nodes 4, 8, 2, 5.
Node 4 is connected to nodes 1, 5.
Node 8 is connected to nodes 6, 7, 3, 4.
Node 6 is connected to node 1.
Node 7 is connected to nodes 0, 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,21,True,Find the strongly connected component containing node 4. ,"[7, 6, 5, 2, 3, 8, 1, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Node 4 is a root node, find a new strongly connected component: [7, 6, 5, 2, 3, 8, 1, 4].
So the strongly connected component containing node 4 is ",0.8888888888888888,181
connected_component,"[(2, 9), (2, 4), (9, 13), (9, 11), (4, 7), (13, 1), (13, 2), (12, 6), (12, 5), (6, 10), (6, 1), (6, 11), (6, 3), (5, 1), (5, 11), (5, 8), (5, 9), (3, 6), (3, 7), (3, 5), (3, 12), (7, 2), (7, 12), (10, 13), (10, 7), (1, 5), (0, 7), (8, 3), (8, 13)]","{2: [9, 4],
9: [13, 11],
4: [7],
13: [1, 2],
11: [],
12: [6, 5],
6: [10, 1, 11, 3],
5: [1, 11, 8, 9],
3: [6, 7, 5, 12],
7: [2, 12],
10: [13, 7],
1: [5],
0: [7],
8: [3, 13]}","Node 2 is connected to nodes 9, 4.
Node 9 is connected to nodes 13, 11.
Node 4 is connected to node 7.
Node 13 is connected to nodes 1, 2.
Node 12 is connected to nodes 6, 5.
Node 6 is connected to nodes 10, 1, 11, 3.
Node 5 is connected to nodes 1, 11, 8, 9.
Node 3 is connected to nodes 6, 7, 5, 12.
Node 7 is connected to nodes 2, 12.
Node 10 is connected to nodes 13, 7.
Node 1 is connected to node 5.
Node 0 is connected to node 7.
Node 8 is connected to nodes 3, 13.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,29,True,Find the strongly connected component containing node 13. ,"[4, 9, 2, 7, 10, 6, 12, 3, 8, 5, 1, 13]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 13.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 11.
Search from node 11.
Node 11 is a root node, find a new strongly connected component: [11].
Visit neighbor node 4.
Search from node 4.
Node 13 is a root node, find a new strongly connected component: [4, 9, 2, 7, 10, 6, 12, 3, 8, 5, 1, 13].
So the strongly connected component containing node 13 is ",0.8571428571428571,182
connected_component,"[(4, 7), (7, 1), (5, 6), (5, 2), (5, 1), (5, 3), (6, 0), (2, 3), (3, 7), (3, 1), (0, 2), (0, 5)]","{4: [7],
7: [1],
1: [],
5: [6, 2, 1, 3],
6: [0],
2: [3],
3: [7, 1],
0: [2, 5]}","Node 4 is connected to node 7.
Node 7 is connected to node 1.
Node 5 is connected to nodes 6, 2, 1, 3.
Node 6 is connected to node 0.
Node 2 is connected to node 3.
Node 3 is connected to nodes 7, 1.
Node 0 is connected to nodes 2, 5.","[0, 1, 2, 3, 4, 5, 6, 7]",8,12,True,Find the strongly connected component containing node 3. ,[3],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
Visit neighbor node 7.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
Node 3 is a root node, find a new strongly connected component: [3].
So the strongly connected component containing node 3 is ",0.125,183
connected_component,"[(4, 5), (4, 6), (6, 7), (6, 3), (0, 5), (0, 4), (8, 1), (8, 5), (1, 4), (1, 0), (3, 6), (3, 8), (3, 1), (7, 1), (7, 6), (7, 2), (2, 7), (2, 4), (2, 5), (2, 3), (2, 6)]","{4: [5, 6],
5: [],
6: [7, 3],
0: [5, 4],
8: [1, 5],
1: [4, 0],
3: [6, 8, 1],
7: [1, 6, 2],
2: [7, 4, 5, 3, 6]}","Node 4 is connected to nodes 5, 6.
Node 6 is connected to nodes 7, 3.
Node 0 is connected to nodes 5, 4.
Node 8 is connected to nodes 1, 5.
Node 1 is connected to nodes 4, 0.
Node 3 is connected to nodes 6, 8, 1.
Node 7 is connected to nodes 1, 6, 2.
Node 2 is connected to nodes 7, 4, 5, 3, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,21,True,Find the strongly connected component containing node 2. ,"[7, 6, 4, 0, 1, 8, 3, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Node 2 is a root node, find a new strongly connected component: [7, 6, 4, 0, 1, 8, 3, 2].
So the strongly connected component containing node 2 is ",0.8888888888888888,184
connected_component,"[(5, 11), (5, 12), (5, 0), (11, 7), (11, 14), (11, 13), (12, 10), (12, 13), (0, 4), (0, 9), (6, 3), (3, 6), (8, 9), (8, 6), (4, 8), (13, 10), (13, 8), (10, 5), (10, 2), (7, 10), (7, 6), (14, 5), (14, 4), (14, 10), (2, 9), (2, 4), (1, 0)]","{5: [11, 12, 0],
11: [7, 14, 13],
12: [10, 13],
0: [4, 9],
6: [3],
3: [6],
8: [9, 6],
9: [],
4: [8],
13: [10, 8],
10: [5, 2],
7: [10, 6],
14: [5, 4, 10],
2: [9, 4],
1: [0]}","Node 5 is connected to nodes 11, 12, 0.
Node 11 is connected to nodes 7, 14, 13.
Node 12 is connected to nodes 10, 13.
Node 0 is connected to nodes 4, 9.
Node 6 is connected to node 3.
Node 3 is connected to node 6.
Node 8 is connected to nodes 9, 6.
Node 4 is connected to node 8.
Node 13 is connected to nodes 10, 8.
Node 10 is connected to nodes 5, 2.
Node 7 is connected to nodes 10, 6.
Node 14 is connected to nodes 5, 4, 10.
Node 2 is connected to nodes 9, 4.
Node 1 is connected to node 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,27,True,Find the strongly connected component containing node 2. ,[2],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Node 6 is a root node, find a new strongly connected component: [3, 6].
Node 8 is a root node, find a new strongly connected component: [8].
Node 4 is a root node, find a new strongly connected component: [4].
Node 2 is a root node, find a new strongly connected component: [2].
So the strongly connected component containing node 2 is ",0.0666666666666666,185
connected_component,"[(7, 2), (7, 0), (2, 8), (2, 7), (2, 3), (0, 1), (0, 8), (0, 4), (1, 6), (6, 8), (5, 0), (8, 4), (4, 1), (4, 5), (4, 6), (4, 8)]","{7: [2, 0],
2: [8, 7, 3],
0: [1, 8, 4],
1: [6],
6: [8],
5: [0],
8: [4],
3: [],
4: [1, 5, 6, 8]}","Node 7 is connected to nodes 2, 0.
Node 2 is connected to nodes 8, 7, 3.
Node 0 is connected to nodes 1, 8, 4.
Node 1 is connected to node 6.
Node 6 is connected to node 8.
Node 5 is connected to node 0.
Node 8 is connected to node 4.
Node 4 is connected to nodes 1, 5, 6, 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,16,True,Find the strongly connected component containing node 5. ,"[6, 1, 4, 8, 0, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Node 5 is a root node, find a new strongly connected component: [6, 1, 4, 8, 0, 5].
So the strongly connected component containing node 5 is ",0.6666666666666666,186
connected_component,"[(4, 10), (10, 9), (10, 7), (9, 3), (9, 6), (7, 8), (7, 4), (7, 9), (3, 5), (3, 0), (3, 2), (6, 4), (6, 1), (6, 11), (8, 6), (8, 4), (5, 8), (5, 7), (1, 9), (2, 4), (2, 5), (2, 0)]","{4: [10],
10: [9, 7],
9: [3, 6],
7: [8, 4, 9],
3: [5, 0, 2],
6: [4, 1, 11],
8: [6, 4],
5: [8, 7],
1: [9],
2: [4, 5, 0],
0: [],
11: []}","Node 4 is connected to node 10.
Node 10 is connected to nodes 9, 7.
Node 9 is connected to nodes 3, 6.
Node 7 is connected to nodes 8, 4, 9.
Node 3 is connected to nodes 5, 0, 2.
Node 6 is connected to nodes 4, 1, 11.
Node 8 is connected to nodes 6, 4.
Node 5 is connected to nodes 8, 7.
Node 1 is connected to node 9.
Node 2 is connected to nodes 4, 5, 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,22,True,Find the strongly connected component containing node 0. ,[0],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
So the strongly connected component containing node 0 is ",0.0833333333333333,187
connected_component,"[(7, 1), (7, 2), (1, 4), (2, 3), (2, 0), (5, 2), (5, 6), (5, 4), (6, 3), (4, 2), (8, 1), (8, 3), (8, 0), (8, 4), (8, 7), (3, 0), (3, 8), (0, 6), (0, 8)]","{7: [1, 2],
1: [4],
2: [3, 0],
5: [2, 6, 4],
6: [3],
4: [2],
8: [1, 3, 0, 4, 7],
3: [0, 8],
0: [6, 8]}","Node 7 is connected to nodes 1, 2.
Node 1 is connected to node 4.
Node 2 is connected to nodes 3, 0.
Node 5 is connected to nodes 2, 6, 4.
Node 6 is connected to node 3.
Node 4 is connected to node 2.
Node 8 is connected to nodes 1, 3, 0, 4, 7.
Node 3 is connected to nodes 0, 8.
Node 0 is connected to nodes 6, 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,19,True,Find the strongly connected component containing node 1. ,"[6, 7, 3, 8, 0, 2, 4, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Node 1 is a root node, find a new strongly connected component: [6, 7, 3, 8, 0, 2, 4, 1].
So the strongly connected component containing node 1 is ",0.8888888888888888,188
connected_component,"[(2, 7), (2, 1), (2, 6), (2, 10), (2, 11), (2, 4), (2, 12), (7, 5), (7, 1), (7, 6), (7, 10), (7, 0), (1, 9), (1, 11), (1, 12), (1, 3), (6, 5), (6, 10), (6, 4), (6, 0), (10, 5), (10, 0), (11, 5), (11, 8), (11, 0), (11, 12), (4, 5), (4, 8), (4, 0), (4, 12), (12, 9), (12, 0), (5, 8), (5, 0), (5, 3), (8, 9), (0, 9)]","{2: [7, 1, 6, 10, 11, 4, 12],
7: [2, 5, 1, 6, 10, 0],
1: [2, 7, 9, 11, 12, 3],
6: [2, 5, 7, 10, 4, 0],
10: [2, 5, 7, 6, 0],
11: [2, 5, 1, 8, 0, 12],
4: [2, 5, 6, 8, 0, 12],
12: [2, 1, 9, 11, 4, 0],
5: [7, 6, 8, 10, 11, 4, 0, 3],
8: [5, 9, 11, 4],
0: [5, 7, 9, 6, 10, 11, 4, 12],
3: [5, 1],
9: [1, 8, 0, 12]}","Node 2 is connected to nodes 7, 1, 6, 10, 11, 4, 12.
Node 7 is connected to nodes 2, 5, 1, 6, 10, 0.
Node 1 is connected to nodes 2, 7, 9, 11, 12, 3.
Node 6 is connected to nodes 2, 5, 7, 10, 4, 0.
Node 10 is connected to nodes 2, 5, 7, 6, 0.
Node 11 is connected to nodes 2, 5, 1, 8, 0, 12.
Node 4 is connected to nodes 2, 5, 6, 8, 0, 12.
Node 12 is connected to nodes 2, 1, 9, 11, 4, 0.
Node 5 is connected to nodes 7, 6, 8, 10, 11, 4, 0, 3.
Node 8 is connected to nodes 5, 9, 11, 4.
Node 0 is connected to nodes 5, 7, 9, 6, 10, 11, 4, 12.
Node 3 is connected to nodes 5, 1.
Node 9 is connected to nodes 1, 8, 0, 12.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,37,False,Find the connected component containing node 1. ,"[1, 12, 11, 5, 10, 7, 6, 4, 2, 8, 9, 0, 3]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 1, add it to the connected component. The current connected component is [1].
Visit node 12, add it to the connected component. The current connected component is [1, 12].
Visit node 11, add it to the connected component. The current connected component is [1, 12, 11].
Visit node 5, add it to the connected component. The current connected component is [1, 12, 11, 5].
Visit node 10, add it to the connected component. The current connected component is [1, 12, 11, 5, 10].
Visit node 7, add it to the connected component. The current connected component is [1, 12, 11, 5, 10, 7].
Visit node 6, add it to the connected component. The current connected component is [1, 12, 11, 5, 10, 7, 6].
Visit node 4, add it to the connected component. The current connected component is [1, 12, 11, 5, 10, 7, 6, 4].
Visit node 2, add it to the connected component. The current connected component is [1, 12, 11, 5, 10, 7, 6, 4, 2].
Visit node 8, add it to the connected component. The current connected component is [1, 12, 11, 5, 10, 7, 6, 4, 2, 8].
Visit node 9, add it to the connected component. The current connected component is [1, 12, 11, 5, 10, 7, 6, 4, 2, 8, 9].
Visit node 0, add it to the connected component. The current connected component is [1, 12, 11, 5, 10, 7, 6, 4, 2, 8, 9, 0].
Visit node 3, add it to the connected component. The current connected component is [1, 12, 11, 5, 10, 7, 6, 4, 2, 8, 9, 0, 3].
Thus, the connected component containing node 1 is ",1.0,189
connected_component,"[(3, 6), (3, 7), (3, 4), (6, 7), (7, 4), (7, 2), (7, 0), (7, 6), (5, 6), (5, 7), (5, 3), (1, 0), (1, 5), (0, 6), (0, 7), (0, 1)]","{3: [6, 7, 4],
6: [7],
7: [4, 2, 0, 6],
4: [],
5: [6, 7, 3],
1: [0, 5],
0: [6, 7, 1],
2: []}","Node 3 is connected to nodes 6, 7, 4.
Node 6 is connected to node 7.
Node 7 is connected to nodes 4, 2, 0, 6.
Node 5 is connected to nodes 6, 7, 3.
Node 1 is connected to nodes 0, 5.
Node 0 is connected to nodes 6, 7, 1.","[0, 1, 2, 3, 4, 5, 6, 7]",8,16,True,Find the strongly connected component containing node 1. ,"[3, 5, 7, 6, 0, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 3.
Search from node 3.
Node 1 is a root node, find a new strongly connected component: [3, 5, 7, 6, 0, 1].
So the strongly connected component containing node 1 is ",0.75,190
connected_component,"[(2, 0), (2, 6), (0, 3), (0, 9), (6, 1), (7, 9), (7, 0), (7, 8), (7, 6), (7, 2), (9, 0), (9, 8), (9, 4), (9, 5), (9, 6), (9, 2), (8, 4), (4, 7), (3, 1), (3, 4), (1, 3)]","{2: [0, 6],
0: [3, 9],
6: [1],
7: [9, 0, 8, 6, 2],
9: [0, 8, 4, 5, 6, 2],
8: [4],
4: [7],
5: [],
3: [1, 4],
1: [3]}","Node 2 is connected to nodes 0, 6.
Node 0 is connected to nodes 3, 9.
Node 6 is connected to node 1.
Node 7 is connected to nodes 9, 0, 8, 6, 2.
Node 9 is connected to nodes 0, 8, 4, 5, 6, 2.
Node 8 is connected to node 4.
Node 4 is connected to node 7.
Node 3 is connected to nodes 1, 4.
Node 1 is connected to node 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,21,True,Find the strongly connected component containing node 8. ,"[3, 1, 6, 2, 9, 0, 7, 4, 8]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Node 8 is a root node, find a new strongly connected component: [3, 1, 6, 2, 9, 0, 7, 4, 8].
So the strongly connected component containing node 8 is ",0.9,191
connected_component,"[(7, 6), (7, 8), (6, 3), (8, 0), (3, 0), (5, 4), (5, 2), (4, 2), (2, 1)]","{7: [6, 8],
6: [7, 3],
8: [7, 0],
3: [6, 0],
0: [3, 8],
5: [4, 2],
4: [5, 2],
2: [5, 4, 1],
1: [2]}","Node 7 is connected to nodes 6, 8.
Node 6 is connected to nodes 7, 3.
Node 8 is connected to nodes 7, 0.
Node 3 is connected to nodes 6, 0.
Node 0 is connected to nodes 3, 8.
Node 5 is connected to nodes 4, 2.
Node 4 is connected to nodes 5, 2.
Node 2 is connected to nodes 5, 4, 1.
Node 1 is connected to node 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,9,False,Find the connected component containing node 4. ,"[4, 5, 2, 1]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 4, add it to the connected component. The current connected component is [4].
Visit node 5, add it to the connected component. The current connected component is [4, 5].
Visit node 2, add it to the connected component. The current connected component is [4, 5, 2].
Visit node 1, add it to the connected component. The current connected component is [4, 5, 2, 1].
Thus, the connected component containing node 4 is ",0.4444444444444444,192
connected_component,"[(8, 0), (8, 5), (8, 6), (8, 2), (5, 7), (5, 4), (6, 3), (6, 0), (6, 5), (2, 3), (2, 5), (2, 6), (1, 0), (1, 5), (1, 7), (1, 3), (7, 3), (3, 1), (3, 0), (3, 2), (4, 2), (4, 3)]","{8: [0, 5, 6, 2],
0: [],
5: [7, 4],
6: [3, 0, 5],
2: [3, 5, 6],
1: [0, 5, 7, 3],
7: [3],
3: [1, 0, 2],
4: [2, 3]}","Node 8 is connected to nodes 0, 5, 6, 2.
Node 5 is connected to nodes 7, 4.
Node 6 is connected to nodes 3, 0, 5.
Node 2 is connected to nodes 3, 5, 6.
Node 1 is connected to nodes 0, 5, 7, 3.
Node 7 is connected to node 3.
Node 3 is connected to nodes 1, 0, 2.
Node 4 is connected to nodes 2, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,22,True,Find the strongly connected component containing node 8. ,[8],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Node 2 is a root node, find a new strongly connected component: [6, 7, 4, 5, 1, 3, 2].
Node 8 is a root node, find a new strongly connected component: [8].
So the strongly connected component containing node 8 is ",0.1111111111111111,193
connected_component,"[(4, 2), (12, 3), (12, 7), (3, 11), (7, 11), (7, 12), (10, 9), (11, 0), (11, 2), (11, 7), (6, 9), (6, 4), (1, 7), (1, 9), (1, 12), (5, 6), (5, 1), (8, 4), (8, 10), (8, 7), (0, 4)]","{4: [2],
2: [],
12: [3, 7],
3: [11],
7: [11, 12],
10: [9],
9: [],
11: [0, 2, 7],
6: [9, 4],
1: [7, 9, 12],
5: [6, 1],
8: [4, 10, 7],
0: [4]}","Node 4 is connected to node 2.
Node 12 is connected to nodes 3, 7.
Node 3 is connected to node 11.
Node 7 is connected to nodes 11, 12.
Node 10 is connected to node 9.
Node 11 is connected to nodes 0, 2, 7.
Node 6 is connected to nodes 9, 4.
Node 1 is connected to nodes 7, 9, 12.
Node 5 is connected to nodes 6, 1.
Node 8 is connected to nodes 4, 10, 7.
Node 0 is connected to node 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,21,True,Find the strongly connected component containing node 7. ,"[3, 12, 11, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Node 4 is a root node, find a new strongly connected component: [4].
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 3.
Search from node 3.
Node 7 is a root node, find a new strongly connected component: [3, 12, 11, 7].
So the strongly connected component containing node 7 is ",0.3076923076923077,194
connected_component,"[(0, 4), (0, 8), (4, 7), (7, 1), (7, 6), (7, 5), (5, 6), (6, 4), (6, 1), (9, 7), (9, 6), (1, 0), (3, 4), (2, 1)]","{0: [4, 8],
4: [7],
8: [],
7: [1, 6, 5],
5: [6],
6: [4, 1],
9: [7, 6],
1: [0],
3: [4],
2: [1]}","Node 0 is connected to nodes 4, 8.
Node 4 is connected to node 7.
Node 7 is connected to nodes 1, 6, 5.
Node 5 is connected to node 6.
Node 6 is connected to nodes 4, 1.
Node 9 is connected to nodes 7, 6.
Node 1 is connected to node 0.
Node 3 is connected to node 4.
Node 2 is connected to node 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,14,True,Find the strongly connected component containing node 0. ,"[6, 5, 1, 7, 4, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Node 0 is a root node, find a new strongly connected component: [6, 5, 1, 7, 4, 0].
So the strongly connected component containing node 0 is ",0.6,195
connected_component,"[(0, 7), (0, 8), (0, 2), (0, 4), (7, 6), (7, 4), (8, 3), (8, 4), (8, 7), (8, 5), (2, 3), (2, 7), (4, 7), (6, 4), (6, 8), (6, 2), (5, 2), (5, 4), (1, 3), (1, 0), (1, 7), (1, 5), (3, 0), (3, 8), (3, 2)]","{0: [7, 8, 2, 4],
7: [6, 4],
8: [3, 4, 7, 5],
2: [3, 7],
4: [7],
6: [4, 8, 2],
5: [2, 4],
1: [3, 0, 7, 5],
3: [0, 8, 2]}","Node 0 is connected to nodes 7, 8, 2, 4.
Node 7 is connected to nodes 6, 4.
Node 8 is connected to nodes 3, 4, 7, 5.
Node 2 is connected to nodes 3, 7.
Node 4 is connected to node 7.
Node 6 is connected to nodes 4, 8, 2.
Node 5 is connected to nodes 2, 4.
Node 1 is connected to nodes 3, 0, 7, 5.
Node 3 is connected to nodes 0, 8, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,25,True,Find the strongly connected component containing node 2. ,"[5, 6, 7, 4, 8, 0, 3, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 5.
Search from node 5.
Node 2 is a root node, find a new strongly connected component: [5, 6, 7, 4, 8, 0, 3, 2].
So the strongly connected component containing node 2 is ",0.8888888888888888,196
connected_component,"[(2, 9), (2, 1), (9, 5), (9, 3), (1, 0), (1, 6), (1, 5), (7, 3), (3, 10), (3, 0), (3, 6), (3, 5), (6, 4), (6, 0), (5, 10), (5, 2), (5, 6), (5, 9), (11, 1), (8, 0), (8, 4), (8, 1)]","{2: [9, 1],
9: [5, 3],
1: [0, 6, 5],
7: [3],
3: [10, 0, 6, 5],
6: [4, 0],
4: [],
0: [],
5: [10, 2, 6, 9],
11: [1],
10: [],
8: [0, 4, 1]}","Node 2 is connected to nodes 9, 1.
Node 9 is connected to nodes 5, 3.
Node 1 is connected to nodes 0, 6, 5.
Node 7 is connected to node 3.
Node 3 is connected to nodes 10, 0, 6, 5.
Node 6 is connected to nodes 4, 0.
Node 5 is connected to nodes 10, 2, 6, 9.
Node 11 is connected to node 1.
Node 8 is connected to nodes 0, 4, 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,22,True,Find the strongly connected component containing node 11. ,[11],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 11.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 10.
Search from node 10.
Node 10 is a root node, find a new strongly connected component: [10].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Node 6 is a root node, find a new strongly connected component: [6].
Visit neighbor node 2.
Search from node 2.
Node 1 is a root node, find a new strongly connected component: [2, 3, 9, 5, 1].
Node 11 is a root node, find a new strongly connected component: [11].
So the strongly connected component containing node 11 is ",0.0833333333333333,197
connected_component,"[(5, 1), (5, 3), (5, 4), (1, 4), (3, 5), (3, 1), (3, 7), (3, 6), (4, 2), (4, 1), (4, 11), (10, 1), (10, 9), (10, 4), (10, 0), (0, 7), (7, 5), (7, 1), (11, 3), (11, 4), (11, 5), (6, 9), (8, 0), (2, 9), (2, 3)]","{5: [1, 3, 4],
1: [4],
3: [5, 1, 7, 6],
4: [2, 1, 11],
10: [1, 9, 4, 0],
9: [],
0: [7],
7: [5, 1],
11: [3, 4, 5],
6: [9],
8: [0],
2: [9, 3]}","Node 5 is connected to nodes 1, 3, 4.
Node 1 is connected to node 4.
Node 3 is connected to nodes 5, 1, 7, 6.
Node 4 is connected to nodes 2, 1, 11.
Node 10 is connected to nodes 1, 9, 4, 0.
Node 0 is connected to node 7.
Node 7 is connected to nodes 5, 1.
Node 11 is connected to nodes 3, 4, 5.
Node 6 is connected to node 9.
Node 8 is connected to node 0.
Node 2 is connected to nodes 9, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,25,True,Find the strongly connected component containing node 8. ,[8],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Visit neighbor node 11.
Search from node 11.
Node 7 is a root node, find a new strongly connected component: [11, 5, 3, 2, 4, 1, 7].
Node 0 is a root node, find a new strongly connected component: [0].
Node 8 is a root node, find a new strongly connected component: [8].
So the strongly connected component containing node 8 is ",0.0833333333333333,198
connected_component,"[(10, 12), (10, 4), (10, 6), (10, 11), (10, 2), (10, 8), (10, 7), (10, 5), (10, 0), (10, 9), (12, 3), (12, 5), (12, 9), (4, 0), (4, 2), (4, 7), (4, 1), (6, 0), (6, 2), (6, 11), (11, 0), (11, 2), (11, 8), (11, 9), (11, 1), (11, 5), (2, 0), (2, 3), (8, 7), (7, 3), (7, 1), (7, 5), (5, 1), (0, 3), (0, 1), (9, 3)]","{10: [12, 4, 6, 11, 2, 8, 7, 5, 0, 9],
12: [10, 3, 5, 9],
4: [10, 0, 2, 7, 1],
6: [10, 0, 2, 11],
11: [10, 0, 6, 2, 8, 9, 1, 5],
2: [10, 0, 6, 3, 11, 4],
8: [10, 11, 7],
7: [10, 3, 8, 4, 1, 5],
5: [10, 12, 11, 1, 7],
0: [10, 6, 3, 1, 4, 11, 2],
9: [10, 12, 3, 11],
3: [12, 0, 7, 2, 9],
1: [0, 11, 4, 5, 7]}","Node 10 is connected to nodes 12, 4, 6, 11, 2, 8, 7, 5, 0, 9.
Node 12 is connected to nodes 10, 3, 5, 9.
Node 4 is connected to nodes 10, 0, 2, 7, 1.
Node 6 is connected to nodes 10, 0, 2, 11.
Node 11 is connected to nodes 10, 0, 6, 2, 8, 9, 1, 5.
Node 2 is connected to nodes 10, 0, 6, 3, 11, 4.
Node 8 is connected to nodes 10, 11, 7.
Node 7 is connected to nodes 10, 3, 8, 4, 1, 5.
Node 5 is connected to nodes 10, 12, 11, 1, 7.
Node 0 is connected to nodes 10, 6, 3, 1, 4, 11, 2.
Node 9 is connected to nodes 10, 12, 3, 11.
Node 3 is connected to nodes 12, 0, 7, 2, 9.
Node 1 is connected to nodes 0, 11, 4, 5, 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,36,False,Find the connected component containing node 7. ,"[7, 10, 12, 5, 11, 9, 3, 2, 6, 0, 4, 1, 8]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 7, add it to the connected component. The current connected component is [7].
Visit node 10, add it to the connected component. The current connected component is [7, 10].
Visit node 12, add it to the connected component. The current connected component is [7, 10, 12].
Visit node 5, add it to the connected component. The current connected component is [7, 10, 12, 5].
Visit node 11, add it to the connected component. The current connected component is [7, 10, 12, 5, 11].
Visit node 9, add it to the connected component. The current connected component is [7, 10, 12, 5, 11, 9].
Visit node 3, add it to the connected component. The current connected component is [7, 10, 12, 5, 11, 9, 3].
Visit node 2, add it to the connected component. The current connected component is [7, 10, 12, 5, 11, 9, 3, 2].
Visit node 6, add it to the connected component. The current connected component is [7, 10, 12, 5, 11, 9, 3, 2, 6].
Visit node 0, add it to the connected component. The current connected component is [7, 10, 12, 5, 11, 9, 3, 2, 6, 0].
Visit node 4, add it to the connected component. The current connected component is [7, 10, 12, 5, 11, 9, 3, 2, 6, 0, 4].
Visit node 1, add it to the connected component. The current connected component is [7, 10, 12, 5, 11, 9, 3, 2, 6, 0, 4, 1].
Visit node 8, add it to the connected component. The current connected component is [7, 10, 12, 5, 11, 9, 3, 2, 6, 0, 4, 1, 8].
Thus, the connected component containing node 7 is ",1.0,199
connected_component,"[(7, 3), (7, 2), (7, 6), (3, 7), (6, 5), (6, 2), (4, 6), (5, 0), (5, 7), (0, 7), (0, 2), (0, 5), (1, 7), (1, 4)]","{7: [3, 2, 6],
3: [7],
2: [],
6: [5, 2],
4: [6],
5: [0, 7],
0: [7, 2, 5],
1: [7, 4]}","Node 7 is connected to nodes 3, 2, 6.
Node 3 is connected to node 7.
Node 6 is connected to nodes 5, 2.
Node 4 is connected to node 6.
Node 5 is connected to nodes 0, 7.
Node 0 is connected to nodes 7, 2, 5.
Node 1 is connected to nodes 7, 4.","[0, 1, 2, 3, 4, 5, 6, 7]",8,14,True,Find the strongly connected component containing node 2. ,[2],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
So the strongly connected component containing node 2 is ",0.125,200
connected_component,"[(3, 2), (3, 0), (3, 4), (3, 6), (2, 4), (2, 1), (2, 6), (0, 7), (0, 2), (4, 1), (4, 6), (4, 2), (6, 2), (5, 2), (5, 1), (5, 7), (5, 3), (1, 7), (1, 6)]","{3: [2, 0, 4, 6],
2: [4, 1, 6],
0: [7, 2],
4: [1, 6, 2],
6: [2],
5: [2, 1, 7, 3],
1: [7, 6],
7: []}","Node 3 is connected to nodes 2, 0, 4, 6.
Node 2 is connected to nodes 4, 1, 6.
Node 0 is connected to nodes 7, 2.
Node 4 is connected to nodes 1, 6, 2.
Node 6 is connected to node 2.
Node 5 is connected to nodes 2, 1, 7, 3.
Node 1 is connected to nodes 7, 6.","[0, 1, 2, 3, 4, 5, 6, 7]",8,19,True,Find the strongly connected component containing node 6. ,"[4, 1, 2, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 7.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
Visit neighbor node 4.
Search from node 4.
Node 6 is a root node, find a new strongly connected component: [4, 1, 2, 6].
So the strongly connected component containing node 6 is ",0.5,201
connected_component,"[(7, 4), (7, 5), (7, 2), (7, 3), (7, 0), (4, 1), (4, 2), (2, 8), (2, 0), (2, 9), (3, 0), (3, 4), (3, 2), (0, 4), (0, 2), (1, 8), (1, 3), (6, 8), (6, 3), (6, 7), (6, 4), (8, 1)]","{7: [4, 5, 2, 3, 0],
4: [1, 2],
5: [],
2: [8, 0, 9],
3: [0, 4, 2],
0: [4, 2],
1: [8, 3],
6: [8, 3, 7, 4],
8: [1],
9: []}","Node 7 is connected to nodes 4, 5, 2, 3, 0.
Node 4 is connected to nodes 1, 2.
Node 2 is connected to nodes 8, 0, 9.
Node 3 is connected to nodes 0, 4, 2.
Node 0 is connected to nodes 4, 2.
Node 1 is connected to nodes 8, 3.
Node 6 is connected to nodes 8, 3, 7, 4.
Node 8 is connected to node 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,22,True,Find the strongly connected component containing node 2. ,"[4, 0, 3, 1, 8, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Node 2 is a root node, find a new strongly connected component: [4, 0, 3, 1, 8, 2].
So the strongly connected component containing node 2 is ",0.6,202
connected_component,"[(5, 0), (5, 10), (10, 9), (10, 2), (10, 8), (11, 12), (11, 2), (12, 3), (2, 8), (2, 5), (2, 11), (9, 7), (9, 12), (7, 6), (7, 1), (6, 5), (6, 9), (6, 12), (1, 3), (1, 5), (1, 11), (1, 9), (1, 8), (3, 10), (3, 11), (3, 7), (3, 6), (8, 3), (8, 9), (4, 10), (4, 2), (4, 1), (4, 3)]","{5: [0, 10],
0: [],
10: [9, 2, 8],
11: [12, 2],
12: [3],
2: [8, 5, 11],
9: [7, 12],
7: [6, 1],
6: [5, 9, 12],
1: [3, 5, 11, 9, 8],
3: [10, 11, 7, 6],
8: [3, 9],
4: [10, 2, 1, 3]}","Node 5 is connected to nodes 0, 10.
Node 10 is connected to nodes 9, 2, 8.
Node 11 is connected to nodes 12, 2.
Node 12 is connected to node 3.
Node 2 is connected to nodes 8, 5, 11.
Node 9 is connected to nodes 7, 12.
Node 7 is connected to nodes 6, 1.
Node 6 is connected to nodes 5, 9, 12.
Node 1 is connected to nodes 3, 5, 11, 9, 8.
Node 3 is connected to nodes 10, 11, 7, 6.
Node 8 is connected to nodes 3, 9.
Node 4 is connected to nodes 10, 2, 1, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,33,True,Find the strongly connected component containing node 2. ,"[1, 7, 5, 6, 11, 10, 3, 12, 9, 8, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 1.
Search from node 1.
Node 2 is a root node, find a new strongly connected component: [1, 7, 5, 6, 11, 10, 3, 12, 9, 8, 2].
So the strongly connected component containing node 2 is ",0.8461538461538461,203
connected_component,"[(10, 9), (9, 2), (9, 6), (2, 6), (6, 8), (8, 3), (5, 1), (5, 0), (1, 4), (0, 4), (4, 11), (11, 7)]","{10: [9],
9: [10, 2, 6],
2: [9, 6],
6: [9, 2, 8],
8: [6, 3],
5: [1, 0],
1: [5, 4],
0: [5, 4],
4: [1, 11, 0],
11: [4, 7],
7: [11],
3: [8]}","Node 10 is connected to node 9.
Node 9 is connected to nodes 10, 2, 6.
Node 2 is connected to nodes 9, 6.
Node 6 is connected to nodes 9, 2, 8.
Node 8 is connected to nodes 6, 3.
Node 5 is connected to nodes 1, 0.
Node 1 is connected to nodes 5, 4.
Node 0 is connected to nodes 5, 4.
Node 4 is connected to nodes 1, 11, 0.
Node 11 is connected to nodes 4, 7.
Node 7 is connected to node 11.
Node 3 is connected to node 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,12,False,Find the connected component containing node 0. ,"[0, 5, 1, 4, 11, 7]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 0, add it to the connected component. The current connected component is [0].
Visit node 5, add it to the connected component. The current connected component is [0, 5].
Visit node 1, add it to the connected component. The current connected component is [0, 5, 1].
Visit node 4, add it to the connected component. The current connected component is [0, 5, 1, 4].
Visit node 11, add it to the connected component. The current connected component is [0, 5, 1, 4, 11].
Visit node 7, add it to the connected component. The current connected component is [0, 5, 1, 4, 11, 7].
Thus, the connected component containing node 0 is ",0.5,204
connected_component,"[(6, 3), (6, 1), (6, 4), (3, 5), (3, 0), (1, 5), (4, 2), (4, 5), (4, 7), (4, 1), (5, 0), (5, 7), (0, 3), (2, 5), (2, 4), (8, 5), (8, 7), (8, 2), (7, 1), (7, 3), (7, 2)]","{6: [3, 1, 4],
3: [5, 0],
1: [5],
4: [2, 5, 7, 1],
5: [0, 7],
0: [3],
2: [5, 4],
8: [5, 7, 2],
7: [1, 3, 2]}","Node 6 is connected to nodes 3, 1, 4.
Node 3 is connected to nodes 5, 0.
Node 1 is connected to node 5.
Node 4 is connected to nodes 2, 5, 7, 1.
Node 5 is connected to nodes 0, 7.
Node 0 is connected to node 3.
Node 2 is connected to nodes 5, 4.
Node 8 is connected to nodes 5, 7, 2.
Node 7 is connected to nodes 1, 3, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,21,True,Find the strongly connected component containing node 0. ,"[4, 2, 1, 7, 5, 3, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Node 0 is a root node, find a new strongly connected component: [4, 2, 1, 7, 5, 3, 0].
So the strongly connected component containing node 0 is ",0.7777777777777778,205
connected_component,"[(12, 4), (12, 8), (4, 13), (8, 0), (13, 0), (10, 11), (10, 3), (11, 2), (3, 2), (1, 9), (1, 5), (9, 7), (5, 6), (7, 6)]","{12: [4, 8],
4: [12, 13],
8: [12, 0],
13: [4, 0],
0: [13, 8],
10: [11, 3],
11: [10, 2],
3: [10, 2],
2: [11, 3],
1: [9, 5],
9: [1, 7],
5: [1, 6],
7: [9, 6],
6: [5, 7]}","Node 12 is connected to nodes 4, 8.
Node 4 is connected to nodes 12, 13.
Node 8 is connected to nodes 12, 0.
Node 13 is connected to nodes 4, 0.
Node 0 is connected to nodes 13, 8.
Node 10 is connected to nodes 11, 3.
Node 11 is connected to nodes 10, 2.
Node 3 is connected to nodes 10, 2.
Node 2 is connected to nodes 11, 3.
Node 1 is connected to nodes 9, 5.
Node 9 is connected to nodes 1, 7.
Node 5 is connected to nodes 1, 6.
Node 7 is connected to nodes 9, 6.
Node 6 is connected to nodes 5, 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,14,False,Find the connected component containing node 10. ,"[10, 3, 2, 11]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 10, add it to the connected component. The current connected component is [10].
Visit node 3, add it to the connected component. The current connected component is [10, 3].
Visit node 2, add it to the connected component. The current connected component is [10, 3, 2].
Visit node 11, add it to the connected component. The current connected component is [10, 3, 2, 11].
Thus, the connected component containing node 10 is ",0.2857142857142857,206
connected_component,"[(0, 3), (0, 1), (3, 6), (3, 0), (3, 5), (1, 0), (1, 2), (1, 5), (1, 3), (2, 5), (2, 6), (5, 7), (5, 0), (6, 0), (6, 3), (6, 1), (7, 1), (4, 1), (4, 6), (4, 2)]","{0: [3, 1],
3: [6, 0, 5],
1: [0, 2, 5, 3],
2: [5, 6],
5: [7, 0],
6: [0, 3, 1],
7: [1],
4: [1, 6, 2]}","Node 0 is connected to nodes 3, 1.
Node 3 is connected to nodes 6, 0, 5.
Node 1 is connected to nodes 0, 2, 5, 3.
Node 2 is connected to nodes 5, 6.
Node 5 is connected to nodes 7, 0.
Node 6 is connected to nodes 0, 3, 1.
Node 7 is connected to node 1.
Node 4 is connected to nodes 1, 6, 2.","[0, 1, 2, 3, 4, 5, 6, 7]",8,20,True,Find the strongly connected component containing node 4. ,[4],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 2.
Search from node 2.
Node 1 is a root node, find a new strongly connected component: [2, 6, 7, 5, 3, 0, 1].
Node 4 is a root node, find a new strongly connected component: [4].
So the strongly connected component containing node 4 is ",0.125,207
connected_component,"[(2, 0), (2, 4), (2, 7), (0, 7), (0, 6), (4, 2), (4, 8), (7, 4), (1, 3), (3, 2), (3, 8), (8, 0), (8, 7), (8, 2), (5, 7), (6, 3), (6, 5)]","{2: [0, 4, 7],
0: [7, 6],
4: [2, 8],
7: [4],
1: [3],
3: [2, 8],
8: [0, 7, 2],
5: [7],
6: [3, 5]}","Node 2 is connected to nodes 0, 4, 7.
Node 0 is connected to nodes 7, 6.
Node 4 is connected to nodes 2, 8.
Node 7 is connected to node 4.
Node 1 is connected to node 3.
Node 3 is connected to nodes 2, 8.
Node 8 is connected to nodes 0, 7, 2.
Node 5 is connected to node 7.
Node 6 is connected to nodes 3, 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,17,True,Find the strongly connected component containing node 8. ,"[5, 7, 4, 2, 3, 6, 0, 8]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Node 8 is a root node, find a new strongly connected component: [5, 7, 4, 2, 3, 6, 0, 8].
So the strongly connected component containing node 8 is ",0.8888888888888888,208
connected_component,"[(7, 9), (7, 8), (7, 3), (7, 0), (7, 5), (7, 1), (7, 2), (9, 10), (9, 12), (8, 12), (8, 13), (8, 0), (8, 11), (8, 2), (8, 6), (8, 3), (3, 4), (3, 6), (5, 10), (5, 13), (1, 11), (12, 13), (13, 11), (6, 4)]","{7: [9, 8, 3, 0, 5, 1, 2],
9: [7, 10, 12],
8: [7, 12, 13, 0, 11, 2, 6, 3],
3: [7, 8, 4, 6],
0: [7, 8],
5: [7, 10, 13],
1: [7, 11],
2: [7, 8],
10: [9, 5],
12: [9, 8, 13],
13: [5, 8, 12, 11],
11: [8, 13, 1],
6: [8, 3, 4],
4: [3, 6]}","Node 7 is connected to nodes 9, 8, 3, 0, 5, 1, 2.
Node 9 is connected to nodes 7, 10, 12.
Node 8 is connected to nodes 7, 12, 13, 0, 11, 2, 6, 3.
Node 3 is connected to nodes 7, 8, 4, 6.
Node 0 is connected to nodes 7, 8.
Node 5 is connected to nodes 7, 10, 13.
Node 1 is connected to nodes 7, 11.
Node 2 is connected to nodes 7, 8.
Node 10 is connected to nodes 9, 5.
Node 12 is connected to nodes 9, 8, 13.
Node 13 is connected to nodes 5, 8, 12, 11.
Node 11 is connected to nodes 8, 13, 1.
Node 6 is connected to nodes 8, 3, 4.
Node 4 is connected to nodes 3, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,24,False,Find the connected component containing node 13. ,"[13, 5, 7, 9, 12, 8, 11, 1, 6, 4, 3, 2, 0, 10]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 13, add it to the connected component. The current connected component is [13].
Visit node 5, add it to the connected component. The current connected component is [13, 5].
Visit node 7, add it to the connected component. The current connected component is [13, 5, 7].
Visit node 9, add it to the connected component. The current connected component is [13, 5, 7, 9].
Visit node 12, add it to the connected component. The current connected component is [13, 5, 7, 9, 12].
Visit node 8, add it to the connected component. The current connected component is [13, 5, 7, 9, 12, 8].
Visit node 11, add it to the connected component. The current connected component is [13, 5, 7, 9, 12, 8, 11].
Visit node 1, add it to the connected component. The current connected component is [13, 5, 7, 9, 12, 8, 11, 1].
Visit node 6, add it to the connected component. The current connected component is [13, 5, 7, 9, 12, 8, 11, 1, 6].
Visit node 4, add it to the connected component. The current connected component is [13, 5, 7, 9, 12, 8, 11, 1, 6, 4].
Visit node 3, add it to the connected component. The current connected component is [13, 5, 7, 9, 12, 8, 11, 1, 6, 4, 3].
Visit node 2, add it to the connected component. The current connected component is [13, 5, 7, 9, 12, 8, 11, 1, 6, 4, 3, 2].
Visit node 0, add it to the connected component. The current connected component is [13, 5, 7, 9, 12, 8, 11, 1, 6, 4, 3, 2, 0].
Visit node 10, add it to the connected component. The current connected component is [13, 5, 7, 9, 12, 8, 11, 1, 6, 4, 3, 2, 0, 10].
Thus, the connected component containing node 13 is ",1.0,209
connected_component,"[(8, 2), (8, 6), (2, 9), (2, 0), (6, 4), (9, 1), (1, 6), (1, 8), (1, 2), (4, 7), (4, 10), (7, 10), (7, 11), (7, 5), (7, 8), (7, 4), (7, 12), (10, 8), (10, 2), (10, 9), (10, 1), (12, 7), (12, 2), (3, 7), (3, 11), (3, 9), (11, 8), (11, 9), (11, 6), (5, 12)]","{8: [2, 6],
2: [9, 0],
6: [4],
9: [1],
0: [],
1: [6, 8, 2],
4: [7, 10],
7: [10, 11, 5, 8, 4, 12],
10: [8, 2, 9, 1],
12: [7, 2],
3: [7, 11, 9],
11: [8, 9, 6],
5: [12]}","Node 8 is connected to nodes 2, 6.
Node 2 is connected to nodes 9, 0.
Node 6 is connected to node 4.
Node 9 is connected to node 1.
Node 1 is connected to nodes 6, 8, 2.
Node 4 is connected to nodes 7, 10.
Node 7 is connected to nodes 10, 11, 5, 8, 4, 12.
Node 10 is connected to nodes 8, 2, 9, 1.
Node 12 is connected to nodes 7, 2.
Node 3 is connected to nodes 7, 11, 9.
Node 11 is connected to nodes 8, 9, 6.
Node 5 is connected to node 12.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,30,True,Find the strongly connected component containing node 12. ,"[11, 5, 7, 10, 4, 6, 8, 1, 9, 2, 12]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 12.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 11.
Search from node 11.
Node 12 is a root node, find a new strongly connected component: [11, 5, 7, 10, 4, 6, 8, 1, 9, 2, 12].
So the strongly connected component containing node 12 is ",0.8461538461538461,210
connected_component,"[(0, 7), (0, 6), (7, 11), (6, 4), (6, 1), (11, 14), (14, 2), (8, 3), (3, 10), (3, 12), (10, 12), (5, 2), (5, 9), (9, 13), (4, 1)]","{0: [7, 6],
7: [0, 11],
6: [0, 4, 1],
11: [7, 14],
14: [11, 2],
8: [3],
3: [8, 10, 12],
10: [3, 12],
12: [3, 10],
5: [2, 9],
2: [5, 14],
9: [5, 13],
13: [9],
4: [6, 1],
1: [6, 4]}","Node 0 is connected to nodes 7, 6.
Node 7 is connected to nodes 0, 11.
Node 6 is connected to nodes 0, 4, 1.
Node 11 is connected to nodes 7, 14.
Node 14 is connected to nodes 11, 2.
Node 8 is connected to node 3.
Node 3 is connected to nodes 8, 10, 12.
Node 10 is connected to nodes 3, 12.
Node 12 is connected to nodes 3, 10.
Node 5 is connected to nodes 2, 9.
Node 2 is connected to nodes 5, 14.
Node 9 is connected to nodes 5, 13.
Node 13 is connected to node 9.
Node 4 is connected to nodes 6, 1.
Node 1 is connected to nodes 6, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,15,False,Find the connected component containing node 9. ,"[9, 13, 5, 2, 14, 11, 7, 0, 6, 4, 1]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 9, add it to the connected component. The current connected component is [9].
Visit node 13, add it to the connected component. The current connected component is [9, 13].
Visit node 5, add it to the connected component. The current connected component is [9, 13, 5].
Visit node 2, add it to the connected component. The current connected component is [9, 13, 5, 2].
Visit node 14, add it to the connected component. The current connected component is [9, 13, 5, 2, 14].
Visit node 11, add it to the connected component. The current connected component is [9, 13, 5, 2, 14, 11].
Visit node 7, add it to the connected component. The current connected component is [9, 13, 5, 2, 14, 11, 7].
Visit node 0, add it to the connected component. The current connected component is [9, 13, 5, 2, 14, 11, 7, 0].
Visit node 6, add it to the connected component. The current connected component is [9, 13, 5, 2, 14, 11, 7, 0, 6].
Visit node 4, add it to the connected component. The current connected component is [9, 13, 5, 2, 14, 11, 7, 0, 6, 4].
Visit node 1, add it to the connected component. The current connected component is [9, 13, 5, 2, 14, 11, 7, 0, 6, 4, 1].
Thus, the connected component containing node 9 is ",0.7333333333333333,211
connected_component,"[(6, 1), (6, 8), (1, 8), (1, 4), (8, 7), (5, 0), (0, 3), (0, 1), (0, 7), (10, 7), (10, 2), (10, 4), (7, 2), (7, 4), (7, 10), (7, 1), (2, 0), (3, 4), (3, 8), (3, 11), (11, 9), (11, 6), (9, 10), (9, 1)]","{6: [1, 8],
1: [8, 4],
8: [7],
5: [0],
0: [3, 1, 7],
10: [7, 2, 4],
7: [2, 4, 10, 1],
2: [0],
4: [],
3: [4, 8, 11],
11: [9, 6],
9: [10, 1]}","Node 6 is connected to nodes 1, 8.
Node 1 is connected to nodes 8, 4.
Node 8 is connected to node 7.
Node 5 is connected to node 0.
Node 0 is connected to nodes 3, 1, 7.
Node 10 is connected to nodes 7, 2, 4.
Node 7 is connected to nodes 2, 4, 10, 1.
Node 2 is connected to node 0.
Node 3 is connected to nodes 4, 8, 11.
Node 11 is connected to nodes 9, 6.
Node 9 is connected to nodes 10, 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,24,True,Find the strongly connected component containing node 2. ,"[6, 9, 11, 3, 10, 7, 8, 1, 0, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 6.
Search from node 6.
Node 2 is a root node, find a new strongly connected component: [6, 9, 11, 3, 10, 7, 8, 1, 0, 2].
So the strongly connected component containing node 2 is ",0.8333333333333334,212
connected_component,"[(3, 6), (3, 2), (3, 5), (6, 1), (6, 7), (6, 5), (6, 0), (5, 4), (5, 0), (5, 7), (1, 7), (1, 4), (7, 5), (4, 3), (4, 5)]","{3: [6, 2, 5],
6: [1, 7, 5, 0],
2: [],
5: [4, 0, 7],
1: [7, 4],
7: [5],
0: [],
4: [3, 5]}","Node 3 is connected to nodes 6, 2, 5.
Node 6 is connected to nodes 1, 7, 5, 0.
Node 5 is connected to nodes 4, 0, 7.
Node 1 is connected to nodes 7, 4.
Node 7 is connected to node 5.
Node 4 is connected to nodes 3, 5.","[0, 1, 2, 3, 4, 5, 6, 7]",8,15,True,Find the strongly connected component containing node 4. ,"[1, 6, 7, 5, 3, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Node 4 is a root node, find a new strongly connected component: [1, 6, 7, 5, 3, 4].
So the strongly connected component containing node 4 is ",0.75,213
connected_component,"[(0, 8), (4, 7), (4, 6), (4, 9), (7, 0), (7, 4), (6, 4), (6, 2), (6, 7), (9, 7), (5, 7), (5, 6), (1, 2), (1, 5), (2, 7), (2, 9), (2, 3), (2, 5), (3, 4), (3, 1), (3, 2)]","{0: [8],
8: [],
4: [7, 6, 9],
7: [0, 4],
6: [4, 2, 7],
9: [7],
5: [7, 6],
1: [2, 5],
2: [7, 9, 3, 5],
3: [4, 1, 2]}","Node 0 is connected to node 8.
Node 4 is connected to nodes 7, 6, 9.
Node 7 is connected to nodes 0, 4.
Node 6 is connected to nodes 4, 2, 7.
Node 9 is connected to node 7.
Node 5 is connected to nodes 7, 6.
Node 1 is connected to nodes 2, 5.
Node 2 is connected to nodes 7, 9, 3, 5.
Node 3 is connected to nodes 4, 1, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,21,True,Find the strongly connected component containing node 7. ,"[5, 1, 3, 2, 6, 9, 4, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 5.
Search from node 5.
Node 7 is a root node, find a new strongly connected component: [5, 1, 3, 2, 6, 9, 4, 7].
So the strongly connected component containing node 7 is ",0.8,214
connected_component,"[(6, 2), (2, 3), (2, 1), (7, 1), (1, 2), (1, 8), (3, 4), (3, 1), (3, 6), (3, 2), (3, 8), (9, 3), (9, 5), (5, 1), (5, 6), (5, 4), (8, 5), (8, 7), (8, 2), (0, 3), (0, 4), (4, 5), (4, 1), (4, 6)]","{6: [2],
2: [3, 1],
7: [1],
1: [2, 8],
3: [4, 1, 6, 2, 8],
9: [3, 5],
5: [1, 6, 4],
8: [5, 7, 2],
0: [3, 4],
4: [5, 1, 6]}","Node 6 is connected to node 2.
Node 2 is connected to nodes 3, 1.
Node 7 is connected to node 1.
Node 1 is connected to nodes 2, 8.
Node 3 is connected to nodes 4, 1, 6, 2, 8.
Node 9 is connected to nodes 3, 5.
Node 5 is connected to nodes 1, 6, 4.
Node 8 is connected to nodes 5, 7, 2.
Node 0 is connected to nodes 3, 4.
Node 4 is connected to nodes 5, 1, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,24,True,Find the strongly connected component containing node 4. ,"[7, 5, 6, 3, 2, 8, 1, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 7.
Search from node 7.
Node 4 is a root node, find a new strongly connected component: [7, 5, 6, 3, 2, 8, 1, 4].
So the strongly connected component containing node 4 is ",0.8,215
connected_component,"[(5, 8), (5, 1), (8, 1), (8, 3), (8, 2), (8, 6), (1, 3), (1, 2), (1, 5), (1, 0), (1, 7), (0, 4), (4, 0), (7, 1), (7, 3), (7, 5), (7, 0), (3, 4), (3, 6), (3, 7), (3, 8), (2, 5), (2, 8), (2, 1), (2, 3), (6, 5), (6, 0), (6, 8)]","{5: [8, 1],
8: [1, 3, 2, 6],
1: [3, 2, 5, 0, 7],
0: [4],
4: [0],
7: [1, 3, 5, 0],
3: [4, 6, 7, 8],
2: [5, 8, 1, 3],
6: [5, 0, 8]}","Node 5 is connected to nodes 8, 1.
Node 8 is connected to nodes 1, 3, 2, 6.
Node 1 is connected to nodes 3, 2, 5, 0, 7.
Node 0 is connected to node 4.
Node 4 is connected to node 0.
Node 7 is connected to nodes 1, 3, 5, 0.
Node 3 is connected to nodes 4, 6, 7, 8.
Node 2 is connected to nodes 5, 8, 1, 3.
Node 6 is connected to nodes 5, 0, 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,28,True,Find the strongly connected component containing node 4. ,"[0, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 0.
Search from node 0.
Node 4 is a root node, find a new strongly connected component: [0, 4].
So the strongly connected component containing node 4 is ",0.2222222222222222,216
connected_component,"[(0, 4), (0, 8), (0, 3), (4, 1), (4, 8), (4, 3), (4, 2), (8, 5), (3, 4), (3, 5), (3, 1), (3, 8), (1, 8), (1, 3), (1, 2), (1, 0), (1, 4), (1, 5), (2, 4), (2, 6), (2, 3), (6, 1), (6, 7), (6, 3), (6, 2), (7, 3), (7, 0)]","{0: [4, 8, 3],
4: [1, 8, 3, 2],
8: [5],
3: [4, 5, 1, 8],
1: [8, 3, 2, 0, 4, 5],
2: [4, 6, 3],
6: [1, 7, 3, 2],
7: [3, 0],
5: []}","Node 0 is connected to nodes 4, 8, 3.
Node 4 is connected to nodes 1, 8, 3, 2.
Node 8 is connected to node 5.
Node 3 is connected to nodes 4, 5, 1, 8.
Node 1 is connected to nodes 8, 3, 2, 0, 4, 5.
Node 2 is connected to nodes 4, 6, 3.
Node 6 is connected to nodes 1, 7, 3, 2.
Node 7 is connected to nodes 3, 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,27,True,Find the strongly connected component containing node 0. ,"[7, 6, 4, 2, 1, 3, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Node 0 is a root node, find a new strongly connected component: [7, 6, 4, 2, 1, 3, 0].
So the strongly connected component containing node 0 is ",0.7777777777777778,217
connected_component,"[(6, 0), (6, 5), (0, 7), (0, 8), (5, 1), (5, 6), (3, 0), (3, 8), (3, 1), (3, 6), (8, 1), (8, 4), (2, 4), (7, 6), (7, 9), (7, 5), (10, 5), (10, 2), (10, 0)]","{6: [0, 5],
0: [7, 8],
5: [1, 6],
3: [0, 8, 1, 6],
8: [1, 4],
1: [],
2: [4],
4: [],
7: [6, 9, 5],
10: [5, 2, 0],
9: []}","Node 6 is connected to nodes 0, 5.
Node 0 is connected to nodes 7, 8.
Node 5 is connected to nodes 1, 6.
Node 3 is connected to nodes 0, 8, 1, 6.
Node 8 is connected to nodes 1, 4.
Node 2 is connected to node 4.
Node 7 is connected to nodes 6, 9, 5.
Node 10 is connected to nodes 5, 2, 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,19,True,Find the strongly connected component containing node 9. ,[9],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
So the strongly connected component containing node 9 is ",0.0909090909090909,218
connected_component,"[(6, 4), (6, 0), (4, 7), (4, 0), (4, 3), (0, 6), (0, 4), (0, 2), (5, 7), (5, 2), (7, 2), (7, 3), (2, 0), (2, 3), (2, 7), (2, 1), (3, 2), (3, 0), (1, 6), (1, 4), (1, 7)]","{6: [4, 0],
4: [7, 0, 3],
0: [6, 4, 2],
5: [7, 2],
7: [2, 3],
2: [0, 3, 7, 1],
3: [2, 0],
1: [6, 4, 7]}","Node 6 is connected to nodes 4, 0.
Node 4 is connected to nodes 7, 0, 3.
Node 0 is connected to nodes 6, 4, 2.
Node 5 is connected to nodes 7, 2.
Node 7 is connected to nodes 2, 3.
Node 2 is connected to nodes 0, 3, 7, 1.
Node 3 is connected to nodes 2, 0.
Node 1 is connected to nodes 6, 4, 7.","[0, 1, 2, 3, 4, 5, 6, 7]",8,21,True,Find the strongly connected component containing node 7. ,"[1, 6, 3, 4, 0, 2, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Node 7 is a root node, find a new strongly connected component: [1, 6, 3, 4, 0, 2, 7].
So the strongly connected component containing node 7 is ",0.875,219
connected_component,"[(9, 6), (9, 4), (9, 8), (6, 0), (6, 3), (6, 7), (6, 5), (4, 0), (4, 8), (4, 3), (4, 9), (4, 2), (4, 1), (8, 5), (8, 9), (8, 6), (2, 6), (2, 3), (2, 7), (3, 9), (3, 2), (3, 4), (3, 0), (7, 5), (7, 9), (7, 8), (0, 3), (0, 7), (0, 6), (0, 1), (0, 4), (5, 8), (5, 3), (5, 7), (1, 8), (1, 7), (1, 5), (1, 2)]","{9: [6, 4, 8],
6: [0, 3, 7, 5],
4: [0, 8, 3, 9, 2, 1],
8: [5, 9, 6],
2: [6, 3, 7],
3: [9, 2, 4, 0],
7: [5, 9, 8],
0: [3, 7, 6, 1, 4],
5: [8, 3, 7],
1: [8, 7, 5, 2]}","Node 9 is connected to nodes 6, 4, 8.
Node 6 is connected to nodes 0, 3, 7, 5.
Node 4 is connected to nodes 0, 8, 3, 9, 2, 1.
Node 8 is connected to nodes 5, 9, 6.
Node 2 is connected to nodes 6, 3, 7.
Node 3 is connected to nodes 9, 2, 4, 0.
Node 7 is connected to nodes 5, 9, 8.
Node 0 is connected to nodes 3, 7, 6, 1, 4.
Node 5 is connected to nodes 8, 3, 7.
Node 1 is connected to nodes 8, 7, 5, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,38,True,Find the strongly connected component containing node 9. ,"[4, 7, 6, 2, 1, 0, 3, 5, 8, 9]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 9.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 4.
Search from node 4.
Node 9 is a root node, find a new strongly connected component: [4, 7, 6, 2, 1, 0, 3, 5, 8, 9].
So the strongly connected component containing node 9 is ",1.0,220
connected_component,"[(3, 2), (4, 2), (4, 5), (4, 6), (4, 3), (5, 1), (5, 4), (5, 2), (6, 3), (6, 4), (6, 2), (6, 5), (6, 0), (7, 0), (7, 6), (0, 6), (0, 1), (0, 2), (0, 7), (0, 5), (1, 3), (1, 2), (1, 5), (1, 6)]","{3: [2],
2: [],
4: [2, 5, 6, 3],
5: [1, 4, 2],
6: [3, 4, 2, 5, 0],
7: [0, 6],
0: [6, 1, 2, 7, 5],
1: [3, 2, 5, 6]}","Node 3 is connected to node 2.
Node 4 is connected to nodes 2, 5, 6, 3.
Node 5 is connected to nodes 1, 4, 2.
Node 6 is connected to nodes 3, 4, 2, 5, 0.
Node 7 is connected to nodes 0, 6.
Node 0 is connected to nodes 6, 1, 2, 7, 5.
Node 1 is connected to nodes 3, 2, 5, 6.","[0, 1, 2, 3, 4, 5, 6, 7]",8,24,True,Find the strongly connected component containing node 0. ,"[7, 6, 4, 5, 1, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Node 0 is a root node, find a new strongly connected component: [7, 6, 4, 5, 1, 0].
So the strongly connected component containing node 0 is ",0.75,221
connected_component,"[(9, 8), (9, 0), (8, 7), (0, 8), (0, 1), (3, 7), (3, 6), (3, 8), (3, 2), (3, 9), (7, 10), (2, 7), (2, 6), (5, 8), (5, 4), (5, 1), (1, 5), (1, 4), (10, 3), (10, 4), (10, 1)]","{9: [8, 0],
8: [7],
0: [8, 1],
3: [7, 6, 8, 2, 9],
7: [10],
6: [],
2: [7, 6],
5: [8, 4, 1],
4: [],
1: [5, 4],
10: [3, 4, 1]}","Node 9 is connected to nodes 8, 0.
Node 8 is connected to node 7.
Node 0 is connected to nodes 8, 1.
Node 3 is connected to nodes 7, 6, 8, 2, 9.
Node 7 is connected to node 10.
Node 2 is connected to nodes 7, 6.
Node 5 is connected to nodes 8, 4, 1.
Node 1 is connected to nodes 5, 4.
Node 10 is connected to nodes 3, 4, 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,21,True,Find the strongly connected component containing node 5. ,"[0, 9, 2, 3, 1, 10, 7, 8, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 0.
Search from node 0.
Node 5 is a root node, find a new strongly connected component: [0, 9, 2, 3, 1, 10, 7, 8, 5].
So the strongly connected component containing node 5 is ",0.8181818181818182,222
connected_component,"[(4, 0), (0, 1), (0, 7), (0, 5), (1, 7), (1, 0), (1, 11), (7, 2), (7, 0), (7, 12), (11, 1), (11, 6), (11, 5), (6, 4), (6, 11), (8, 1), (8, 6), (8, 2), (8, 4), (8, 0), (2, 3), (9, 11), (12, 7), (3, 10), (3, 0), (3, 7), (10, 8)]","{4: [0],
0: [1, 7, 5],
1: [7, 0, 11],
7: [2, 0, 12],
5: [],
11: [1, 6, 5],
6: [4, 11],
8: [1, 6, 2, 4, 0],
2: [3],
9: [11],
12: [7],
3: [10, 0, 7],
10: [8]}","Node 4 is connected to node 0.
Node 0 is connected to nodes 1, 7, 5.
Node 1 is connected to nodes 7, 0, 11.
Node 7 is connected to nodes 2, 0, 12.
Node 11 is connected to nodes 1, 6, 5.
Node 6 is connected to nodes 4, 11.
Node 8 is connected to nodes 1, 6, 2, 4, 0.
Node 2 is connected to node 3.
Node 9 is connected to node 11.
Node 12 is connected to node 7.
Node 3 is connected to nodes 10, 0, 7.
Node 10 is connected to node 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,27,True,Find the strongly connected component containing node 1. ,"[12, 11, 6, 4, 8, 10, 3, 2, 7, 0, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 12.
Search from node 12.
Node 1 is a root node, find a new strongly connected component: [12, 11, 6, 4, 8, 10, 3, 2, 7, 0, 1].
So the strongly connected component containing node 1 is ",0.8461538461538461,223
connected_component,"[(8, 12), (12, 6), (5, 0), (5, 12), (0, 8), (3, 1), (3, 7), (3, 9), (3, 4), (1, 7), (7, 6), (7, 0), (7, 1), (9, 7), (4, 3), (13, 7), (13, 2), (2, 11), (10, 8), (10, 5), (10, 1), (11, 8), (11, 7), (11, 9), (11, 6)]","{8: [12],
12: [6],
5: [0, 12],
0: [8],
3: [1, 7, 9, 4],
1: [7],
7: [6, 0, 1],
9: [7],
4: [3],
13: [7, 2],
2: [11],
6: [],
10: [8, 5, 1],
11: [8, 7, 9, 6]}","Node 8 is connected to node 12.
Node 12 is connected to node 6.
Node 5 is connected to nodes 0, 12.
Node 0 is connected to node 8.
Node 3 is connected to nodes 1, 7, 9, 4.
Node 1 is connected to node 7.
Node 7 is connected to nodes 6, 0, 1.
Node 9 is connected to node 7.
Node 4 is connected to node 3.
Node 13 is connected to nodes 7, 2.
Node 2 is connected to node 11.
Node 10 is connected to nodes 8, 5, 1.
Node 11 is connected to nodes 8, 7, 9, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,25,True,Find the strongly connected component containing node 13. ,[13],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 13.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Node 12 is a root node, find a new strongly connected component: [12].
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 1.
Search from node 1.
Node 7 is a root node, find a new strongly connected component: [1, 7].
Node 9 is a root node, find a new strongly connected component: [9].
Node 11 is a root node, find a new strongly connected component: [11].
Node 2 is a root node, find a new strongly connected component: [2].
Node 13 is a root node, find a new strongly connected component: [13].
So the strongly connected component containing node 13 is ",0.0714285714285714,224
connected_component,"[(6, 5), (6, 3), (5, 0), (3, 5), (3, 1), (3, 10), (4, 10), (4, 8), (4, 3), (10, 5), (8, 7), (8, 2), (0, 6), (1, 7), (1, 0), (1, 9), (1, 6), (9, 1), (9, 10), (9, 2), (2, 8), (2, 3)]","{6: [5, 3],
5: [0],
3: [5, 1, 10],
4: [10, 8, 3],
10: [5],
8: [7, 2],
0: [6],
1: [7, 0, 9, 6],
7: [],
9: [1, 10, 2],
2: [8, 3]}","Node 6 is connected to nodes 5, 3.
Node 5 is connected to node 0.
Node 3 is connected to nodes 5, 1, 10.
Node 4 is connected to nodes 10, 8, 3.
Node 10 is connected to node 5.
Node 8 is connected to nodes 7, 2.
Node 0 is connected to node 6.
Node 1 is connected to nodes 7, 0, 9, 6.
Node 9 is connected to nodes 1, 10, 2.
Node 2 is connected to nodes 8, 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,22,True,Find the strongly connected component containing node 10. ,"[8, 2, 9, 1, 3, 6, 0, 5, 10]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 10.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 7.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
Node 10 is a root node, find a new strongly connected component: [8, 2, 9, 1, 3, 6, 0, 5, 10].
So the strongly connected component containing node 10 is ",0.8181818181818182,225
connected_component,"[(5, 1), (2, 7), (2, 1), (2, 4), (2, 3), (7, 6), (7, 4), (7, 5), (4, 7), (0, 7), (0, 2), (6, 3), (6, 2), (6, 7)]","{5: [1],
1: [],
2: [7, 1, 4, 3],
7: [6, 4, 5],
4: [7],
3: [],
0: [7, 2],
6: [3, 2, 7]}","Node 5 is connected to node 1.
Node 2 is connected to nodes 7, 1, 4, 3.
Node 7 is connected to nodes 6, 4, 5.
Node 4 is connected to node 7.
Node 0 is connected to nodes 7, 2.
Node 6 is connected to nodes 3, 2, 7.","[0, 1, 2, 3, 4, 5, 6, 7]",8,14,True,Find the strongly connected component containing node 1. ,[1],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
So the strongly connected component containing node 1 is ",0.125,226
connected_component,"[(0, 7), (0, 12), (0, 9), (7, 10), (7, 9), (7, 8), (7, 5), (7, 0), (12, 5), (12, 0), (12, 10), (9, 7), (9, 4), (6, 11), (6, 1), (6, 10), (6, 4), (6, 9), (1, 10), (1, 5), (1, 0), (1, 6), (1, 7), (10, 12), (10, 8), (10, 5), (10, 7), (4, 8), (4, 5), (4, 1), (8, 5), (8, 4), (5, 8), (2, 12), (2, 9), (2, 5), (3, 12)]","{0: [7, 12, 9],
7: [10, 9, 8, 5, 0],
12: [5, 0, 10],
9: [7, 4],
6: [11, 1, 10, 4, 9],
11: [],
1: [10, 5, 0, 6, 7],
10: [12, 8, 5, 7],
4: [8, 5, 1],
8: [5, 4],
5: [8],
2: [12, 9, 5],
3: [12]}","Node 0 is connected to nodes 7, 12, 9.
Node 7 is connected to nodes 10, 9, 8, 5, 0.
Node 12 is connected to nodes 5, 0, 10.
Node 9 is connected to nodes 7, 4.
Node 6 is connected to nodes 11, 1, 10, 4, 9.
Node 1 is connected to nodes 10, 5, 0, 6, 7.
Node 10 is connected to nodes 12, 8, 5, 7.
Node 4 is connected to nodes 8, 5, 1.
Node 8 is connected to nodes 5, 4.
Node 5 is connected to node 8.
Node 2 is connected to nodes 12, 9, 5.
Node 3 is connected to node 12.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,37,True,Find the strongly connected component containing node 5. ,"[6, 12, 10, 7, 9, 0, 1, 4, 8, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 11.
Search from node 11.
Node 11 is a root node, find a new strongly connected component: [11].
Node 5 is a root node, find a new strongly connected component: [6, 12, 10, 7, 9, 0, 1, 4, 8, 5].
So the strongly connected component containing node 5 is ",0.7692307692307693,227
connected_component,"[(10, 1), (10, 3), (1, 10), (1, 0), (1, 4), (3, 7), (3, 8), (8, 0), (8, 7), (8, 6), (0, 5), (0, 3), (0, 2), (7, 10), (7, 9), (7, 1), (6, 2), (6, 5), (5, 9), (4, 5), (4, 3), (4, 7), (4, 10)]","{10: [1, 3],
1: [10, 0, 4],
3: [7, 8],
8: [0, 7, 6],
0: [5, 3, 2],
7: [10, 9, 1],
6: [2, 5],
5: [9],
2: [],
4: [5, 3, 7, 10],
9: []}","Node 10 is connected to nodes 1, 3.
Node 1 is connected to nodes 10, 0, 4.
Node 3 is connected to nodes 7, 8.
Node 8 is connected to nodes 0, 7, 6.
Node 0 is connected to nodes 5, 3, 2.
Node 7 is connected to nodes 10, 9, 1.
Node 6 is connected to nodes 2, 5.
Node 5 is connected to node 9.
Node 4 is connected to nodes 5, 3, 7, 10.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,23,True,Find the strongly connected component containing node 7. ,"[4, 8, 3, 0, 1, 10, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Node 6 is a root node, find a new strongly connected component: [6].
Visit neighbor node 4.
Search from node 4.
Node 7 is a root node, find a new strongly connected component: [4, 8, 3, 0, 1, 10, 7].
So the strongly connected component containing node 7 is ",0.6363636363636364,228
connected_component,"[(6, 0), (6, 1), (6, 9), (6, 2), (6, 7), (6, 4), (6, 5), (0, 1), (0, 3), (0, 9), (0, 8), (0, 2), (0, 7), (0, 5), (1, 9), (1, 2), (1, 10), (1, 4), (9, 3), (9, 8), (9, 2), (9, 7), (9, 10), (9, 4), (2, 3), (2, 8), (2, 4), (2, 5), (7, 3), (7, 8), (7, 10), (7, 4), (7, 5), (4, 3), (4, 8), (4, 10), (4, 5), (5, 3), (5, 8), (3, 8), (3, 10), (8, 10)]","{6: [0, 1, 9, 2, 7, 4, 5],
0: [6, 1, 3, 9, 8, 2, 7, 5],
1: [6, 0, 9, 2, 10, 4],
9: [6, 0, 1, 3, 8, 2, 7, 10, 4],
2: [6, 0, 1, 3, 9, 8, 4, 5],
7: [6, 0, 3, 9, 8, 10, 4, 5],
4: [6, 1, 3, 9, 8, 2, 7, 10, 5],
5: [6, 0, 3, 8, 2, 7, 4],
3: [0, 9, 8, 2, 7, 10, 4, 5],
8: [0, 3, 9, 2, 7, 10, 4, 5],
10: [1, 3, 9, 8, 7, 4]}","Node 6 is connected to nodes 0, 1, 9, 2, 7, 4, 5.
Node 0 is connected to nodes 6, 1, 3, 9, 8, 2, 7, 5.
Node 1 is connected to nodes 6, 0, 9, 2, 10, 4.
Node 9 is connected to nodes 6, 0, 1, 3, 8, 2, 7, 10, 4.
Node 2 is connected to nodes 6, 0, 1, 3, 9, 8, 4, 5.
Node 7 is connected to nodes 6, 0, 3, 9, 8, 10, 4, 5.
Node 4 is connected to nodes 6, 1, 3, 9, 8, 2, 7, 10, 5.
Node 5 is connected to nodes 6, 0, 3, 8, 2, 7, 4.
Node 3 is connected to nodes 0, 9, 8, 2, 7, 10, 4, 5.
Node 8 is connected to nodes 0, 3, 9, 2, 7, 10, 4, 5.
Node 10 is connected to nodes 1, 3, 9, 8, 7, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,42,False,Find the connected component containing node 4. ,"[4, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 4, add it to the connected component. The current connected component is [4].
Visit node 10, add it to the connected component. The current connected component is [4, 10].
Visit node 9, add it to the connected component. The current connected component is [4, 10, 9].
Visit node 8, add it to the connected component. The current connected component is [4, 10, 9, 8].
Visit node 7, add it to the connected component. The current connected component is [4, 10, 9, 8, 7].
Visit node 6, add it to the connected component. The current connected component is [4, 10, 9, 8, 7, 6].
Visit node 5, add it to the connected component. The current connected component is [4, 10, 9, 8, 7, 6, 5].
Visit node 3, add it to the connected component. The current connected component is [4, 10, 9, 8, 7, 6, 5, 3].
Visit node 2, add it to the connected component. The current connected component is [4, 10, 9, 8, 7, 6, 5, 3, 2].
Visit node 1, add it to the connected component. The current connected component is [4, 10, 9, 8, 7, 6, 5, 3, 2, 1].
Visit node 0, add it to the connected component. The current connected component is [4, 10, 9, 8, 7, 6, 5, 3, 2, 1, 0].
Thus, the connected component containing node 4 is ",1.0,229
connected_component,"[(11, 10), (11, 14), (14, 8), (14, 4), (2, 5), (2, 11), (5, 1), (6, 9), (9, 2), (9, 4), (12, 5), (12, 3), (12, 9), (0, 1), (1, 11), (1, 12), (1, 0), (13, 14), (13, 2), (13, 12), (7, 14), (7, 10), (4, 3), (4, 11), (4, 12), (8, 12)]","{11: [10, 14],
10: [],
14: [8, 4],
2: [5, 11],
5: [1],
6: [9],
9: [2, 4],
12: [5, 3, 9],
3: [],
0: [1],
1: [11, 12, 0],
13: [14, 2, 12],
7: [14, 10],
4: [3, 11, 12],
8: [12]}","Node 11 is connected to nodes 10, 14.
Node 14 is connected to nodes 8, 4.
Node 2 is connected to nodes 5, 11.
Node 5 is connected to node 1.
Node 6 is connected to node 9.
Node 9 is connected to nodes 2, 4.
Node 12 is connected to nodes 5, 3, 9.
Node 0 is connected to node 1.
Node 1 is connected to nodes 11, 12, 0.
Node 13 is connected to nodes 14, 2, 12.
Node 7 is connected to nodes 14, 10.
Node 4 is connected to nodes 3, 11, 12.
Node 8 is connected to node 12.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,26,True,Find the strongly connected component containing node 10. ,[10],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 10.
Node 10 is a root node, find a new strongly connected component: [10].
So the strongly connected component containing node 10 is ",0.0666666666666666,230
connected_component,"[(7, 3), (7, 2), (7, 5), (3, 4), (2, 3), (5, 6), (5, 8), (5, 1), (5, 3), (5, 2), (4, 2), (4, 5), (1, 2), (1, 4), (6, 5), (8, 0)]","{7: [3, 2, 5],
3: [4],
2: [3],
5: [6, 8, 1, 3, 2],
4: [2, 5],
1: [2, 4],
6: [5],
8: [0],
0: []}","Node 7 is connected to nodes 3, 2, 5.
Node 3 is connected to node 4.
Node 2 is connected to node 3.
Node 5 is connected to nodes 6, 8, 1, 3, 2.
Node 4 is connected to nodes 2, 5.
Node 1 is connected to nodes 2, 4.
Node 6 is connected to node 5.
Node 8 is connected to node 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,16,True,Find the strongly connected component containing node 5. ,"[6, 4, 3, 2, 1, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Node 8 is a root node, find a new strongly connected component: [8].
Node 5 is a root node, find a new strongly connected component: [6, 4, 3, 2, 1, 5].
So the strongly connected component containing node 5 is ",0.6666666666666666,231
connected_component,"[(3, 4), (4, 2), (8, 0), (8, 5), (8, 6), (8, 7), (0, 4), (0, 3), (5, 7), (5, 4), (5, 3), (5, 8), (6, 2), (7, 3), (7, 5), (2, 1), (2, 8)]","{3: [4],
4: [2],
8: [0, 5, 6, 7],
0: [4, 3],
5: [7, 4, 3, 8],
6: [2],
7: [3, 5],
2: [1, 8],
1: []}","Node 3 is connected to node 4.
Node 4 is connected to node 2.
Node 8 is connected to nodes 0, 5, 6, 7.
Node 0 is connected to nodes 4, 3.
Node 5 is connected to nodes 7, 4, 3, 8.
Node 6 is connected to node 2.
Node 7 is connected to nodes 3, 5.
Node 2 is connected to nodes 1, 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,17,True,Find the strongly connected component containing node 7. ,"[6, 5, 0, 8, 2, 4, 3, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
Node 7 is a root node, find a new strongly connected component: [6, 5, 0, 8, 2, 4, 3, 7].
So the strongly connected component containing node 7 is ",0.8888888888888888,232
connected_component,"[(0, 1), (0, 5), (5, 0), (5, 3), (5, 1), (5, 6), (5, 7), (3, 1), (6, 2), (6, 3), (2, 6), (2, 7), (2, 4), (7, 4), (4, 3), (4, 1)]","{0: [1, 5],
1: [],
5: [0, 3, 1, 6, 7],
3: [1],
6: [2, 3],
2: [6, 7, 4],
7: [4],
4: [3, 1]}","Node 0 is connected to nodes 1, 5.
Node 5 is connected to nodes 0, 3, 1, 6, 7.
Node 3 is connected to node 1.
Node 6 is connected to nodes 2, 3.
Node 2 is connected to nodes 6, 7, 4.
Node 7 is connected to node 4.
Node 4 is connected to nodes 3, 1.","[0, 1, 2, 3, 4, 5, 6, 7]",8,16,True,Find the strongly connected component containing node 0. ,"[5, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Visit neighbor node 7.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
Node 6 is a root node, find a new strongly connected component: [2, 6].
Node 0 is a root node, find a new strongly connected component: [5, 0].
So the strongly connected component containing node 0 is ",0.25,233
connected_component,"[(12, 9), (12, 6), (12, 8), (9, 1), (8, 7), (1, 14), (13, 11), (13, 10), (11, 4), (10, 0), (10, 5), (4, 3), (14, 2), (2, 7), (3, 5)]","{12: [9, 6, 8],
9: [12, 1],
6: [12],
8: [12, 7],
1: [9, 14],
13: [11, 10],
11: [13, 4],
10: [13, 0, 5],
4: [11, 3],
14: [1, 2],
2: [14, 7],
7: [2, 8],
3: [4, 5],
5: [3, 10],
0: [10]}","Node 12 is connected to nodes 9, 6, 8.
Node 9 is connected to nodes 12, 1.
Node 6 is connected to node 12.
Node 8 is connected to nodes 12, 7.
Node 1 is connected to nodes 9, 14.
Node 13 is connected to nodes 11, 10.
Node 11 is connected to nodes 13, 4.
Node 10 is connected to nodes 13, 0, 5.
Node 4 is connected to nodes 11, 3.
Node 14 is connected to nodes 1, 2.
Node 2 is connected to nodes 14, 7.
Node 7 is connected to nodes 2, 8.
Node 3 is connected to nodes 4, 5.
Node 5 is connected to nodes 3, 10.
Node 0 is connected to node 10.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,15,False,Find the connected component containing node 12. ,"[12, 6, 9, 1, 14, 2, 7, 8]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 12, add it to the connected component. The current connected component is [12].
Visit node 6, add it to the connected component. The current connected component is [12, 6].
Visit node 9, add it to the connected component. The current connected component is [12, 6, 9].
Visit node 1, add it to the connected component. The current connected component is [12, 6, 9, 1].
Visit node 14, add it to the connected component. The current connected component is [12, 6, 9, 1, 14].
Visit node 2, add it to the connected component. The current connected component is [12, 6, 9, 1, 14, 2].
Visit node 7, add it to the connected component. The current connected component is [12, 6, 9, 1, 14, 2, 7].
Visit node 8, add it to the connected component. The current connected component is [12, 6, 9, 1, 14, 2, 7, 8].
Thus, the connected component containing node 12 is ",0.5333333333333333,234
connected_component,"[(4, 5), (4, 7), (7, 2), (7, 0), (7, 10), (0, 7), (0, 6), (0, 8), (0, 2), (0, 4), (6, 2), (6, 9), (6, 0), (6, 5), (8, 4), (3, 7), (3, 8), (3, 9), (3, 4), (9, 4), (10, 7), (10, 0), (1, 2), (1, 6)]","{4: [5, 7],
5: [],
7: [2, 0, 10],
0: [7, 6, 8, 2, 4],
6: [2, 9, 0, 5],
8: [4],
2: [],
3: [7, 8, 9, 4],
9: [4],
10: [7, 0],
1: [2, 6]}","Node 4 is connected to nodes 5, 7.
Node 7 is connected to nodes 2, 0, 10.
Node 0 is connected to nodes 7, 6, 8, 2, 4.
Node 6 is connected to nodes 2, 9, 0, 5.
Node 8 is connected to node 4.
Node 3 is connected to nodes 7, 8, 9, 4.
Node 9 is connected to node 4.
Node 10 is connected to nodes 7, 0.
Node 1 is connected to nodes 2, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,24,True,Find the strongly connected component containing node 6. ,"[9, 8, 10, 7, 4, 0, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 9.
Search from node 9.
Node 6 is a root node, find a new strongly connected component: [9, 8, 10, 7, 4, 0, 6].
So the strongly connected component containing node 6 is ",0.6363636363636364,235
connected_component,"[(4, 1), (4, 13), (4, 12), (4, 2), (1, 0), (13, 5), (13, 14), (12, 11), (12, 9), (12, 8), (2, 7), (2, 14), (2, 0), (0, 13), (0, 12), (5, 6), (5, 3), (5, 8), (5, 4), (5, 1), (5, 12), (14, 6), (14, 7), (9, 3), (9, 1), (9, 13), (9, 10), (8, 12), (6, 5), (6, 2), (3, 4), (3, 0), (3, 13), (3, 2), (7, 12), (10, 11)]","{4: [1, 13, 12, 2],
1: [0],
13: [5, 14],
12: [11, 9, 8],
2: [7, 14, 0],
0: [13, 12],
5: [6, 3, 8, 4, 1, 12],
14: [6, 7],
11: [],
9: [3, 1, 13, 10],
8: [12],
6: [5, 2],
3: [4, 0, 13, 2],
7: [12],
10: [11]}","Node 4 is connected to nodes 1, 13, 12, 2.
Node 1 is connected to node 0.
Node 13 is connected to nodes 5, 14.
Node 12 is connected to nodes 11, 9, 8.
Node 2 is connected to nodes 7, 14, 0.
Node 0 is connected to nodes 13, 12.
Node 5 is connected to nodes 6, 3, 8, 4, 1, 12.
Node 14 is connected to nodes 6, 7.
Node 9 is connected to nodes 3, 1, 13, 10.
Node 8 is connected to node 12.
Node 6 is connected to nodes 5, 2.
Node 3 is connected to nodes 4, 0, 13, 2.
Node 7 is connected to node 12.
Node 10 is connected to node 11.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,36,True,Find the strongly connected component containing node 11. ,[11],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 11.
Node 11 is a root node, find a new strongly connected component: [11].
So the strongly connected component containing node 11 is ",0.0666666666666666,236
connected_component,"[(7, 11), (11, 2), (11, 9), (6, 11), (6, 3), (6, 9), (6, 10), (6, 7), (3, 4), (3, 6), (3, 11), (9, 10), (9, 7), (9, 6), (9, 8), (9, 11), (9, 2), (9, 4), (9, 0), (8, 5), (8, 3), (8, 4), (8, 9), (8, 7), (4, 9), (2, 3), (2, 10), (2, 7), (2, 6), (2, 8), (1, 5), (1, 4), (1, 0), (1, 9), (1, 10), (1, 7), (0, 9), (0, 5), (0, 2)]","{7: [11],
11: [2, 9],
6: [11, 3, 9, 10, 7],
3: [4, 6, 11],
9: [10, 7, 6, 8, 11, 2, 4, 0],
10: [],
8: [5, 3, 4, 9, 7],
5: [],
4: [9],
2: [3, 10, 7, 6, 8],
1: [5, 4, 0, 9, 10, 7],
0: [9, 5, 2]}","Node 7 is connected to node 11.
Node 11 is connected to nodes 2, 9.
Node 6 is connected to nodes 11, 3, 9, 10, 7.
Node 3 is connected to nodes 4, 6, 11.
Node 9 is connected to nodes 10, 7, 6, 8, 11, 2, 4, 0.
Node 8 is connected to nodes 5, 3, 4, 9, 7.
Node 4 is connected to node 9.
Node 2 is connected to nodes 3, 10, 7, 6, 8.
Node 1 is connected to nodes 5, 4, 0, 9, 10, 7.
Node 0 is connected to nodes 9, 5, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,39,True,Find the strongly connected component containing node 1. ,[1],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 10.
Search from node 10.
Node 10 is a root node, find a new strongly connected component: [10].
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Node 0 is a root node, find a new strongly connected component: [8, 7, 6, 4, 11, 3, 2, 9, 0].
Node 1 is a root node, find a new strongly connected component: [1].
So the strongly connected component containing node 1 is ",0.0833333333333333,237
connected_component,"[(3, 0), (3, 4), (3, 2), (0, 4), (0, 2), (0, 1), (0, 6), (4, 2), (4, 3), (4, 6), (4, 0), (2, 3), (2, 4), (7, 6), (7, 0), (7, 4), (7, 5), (7, 1), (7, 3), (6, 2), (6, 1), (6, 3), (5, 3), (5, 0), (1, 4)]","{3: [0, 4, 2],
0: [4, 2, 1, 6],
4: [2, 3, 6, 0],
2: [3, 4],
7: [6, 0, 4, 5, 1, 3],
6: [2, 1, 3],
5: [3, 0],
1: [4]}","Node 3 is connected to nodes 0, 4, 2.
Node 0 is connected to nodes 4, 2, 1, 6.
Node 4 is connected to nodes 2, 3, 6, 0.
Node 2 is connected to nodes 3, 4.
Node 7 is connected to nodes 6, 0, 4, 5, 1, 3.
Node 6 is connected to nodes 2, 1, 3.
Node 5 is connected to nodes 3, 0.
Node 1 is connected to node 4.","[0, 1, 2, 3, 4, 5, 6, 7]",8,25,True,Find the strongly connected component containing node 5. ,[5],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 6.
Search from node 6.
Node 0 is a root node, find a new strongly connected component: [6, 3, 2, 4, 1, 0].
Node 5 is a root node, find a new strongly connected component: [5].
So the strongly connected component containing node 5 is ",0.125,238
connected_component,"[(6, 3), (6, 7), (6, 0), (3, 6), (7, 0), (7, 5), (7, 6), (0, 2), (0, 11), (0, 6), (0, 7), (0, 9), (1, 2), (1, 6), (2, 5), (2, 4), (5, 6), (5, 1), (5, 8), (9, 6), (11, 10), (11, 1), (11, 7), (11, 0), (4, 2), (4, 8), (4, 1), (4, 9), (4, 0), (8, 0), (8, 2), (10, 3), (10, 0), (10, 8)]","{6: [3, 7, 0],
3: [6],
7: [0, 5, 6],
0: [2, 11, 6, 7, 9],
1: [2, 6],
2: [5, 4],
5: [6, 1, 8],
9: [6],
11: [10, 1, 7, 0],
4: [2, 8, 1, 9, 0],
8: [0, 2],
10: [3, 0, 8]}","Node 6 is connected to nodes 3, 7, 0.
Node 3 is connected to node 6.
Node 7 is connected to nodes 0, 5, 6.
Node 0 is connected to nodes 2, 11, 6, 7, 9.
Node 1 is connected to nodes 2, 6.
Node 2 is connected to nodes 5, 4.
Node 5 is connected to nodes 6, 1, 8.
Node 9 is connected to node 6.
Node 11 is connected to nodes 10, 1, 7, 0.
Node 4 is connected to nodes 2, 8, 1, 9, 0.
Node 8 is connected to nodes 0, 2.
Node 10 is connected to nodes 3, 0, 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,34,True,Find the strongly connected component containing node 11. ,"[10, 9, 8, 5, 7, 3, 6, 1, 4, 2, 0, 11]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 11.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 10.
Search from node 10.
Node 11 is a root node, find a new strongly connected component: [10, 9, 8, 5, 7, 3, 6, 1, 4, 2, 0, 11].
So the strongly connected component containing node 11 is ",1.0,239
connected_component,"[(7, 5), (5, 7), (8, 1), (8, 0), (8, 2), (8, 7), (1, 0), (1, 8), (0, 4), (2, 1), (2, 6), (2, 0), (4, 6), (4, 10), (4, 1), (6, 10), (6, 8), (10, 3), (10, 5), (9, 11), (9, 12), (9, 3), (9, 1), (9, 6), (11, 10), (11, 7), (11, 4), (3, 9)]","{7: [5],
5: [7],
8: [1, 0, 2, 7],
1: [0, 8],
0: [4],
2: [1, 6, 0],
4: [6, 10, 1],
6: [10, 8],
10: [3, 5],
9: [11, 12, 3, 1, 6],
11: [10, 7, 4],
12: [],
3: [9]}","Node 7 is connected to node 5.
Node 5 is connected to node 7.
Node 8 is connected to nodes 1, 0, 2, 7.
Node 1 is connected to nodes 0, 8.
Node 0 is connected to node 4.
Node 2 is connected to nodes 1, 6, 0.
Node 4 is connected to nodes 6, 10, 1.
Node 6 is connected to nodes 10, 8.
Node 10 is connected to nodes 3, 5.
Node 9 is connected to nodes 11, 12, 3, 1, 6.
Node 11 is connected to nodes 10, 7, 4.
Node 3 is connected to node 9.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,28,True,Find the strongly connected component containing node 4. ,"[11, 9, 3, 10, 6, 2, 8, 0, 1, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Node 7 is a root node, find a new strongly connected component: [5, 7].
Visit neighbor node 12.
Search from node 12.
Node 12 is a root node, find a new strongly connected component: [12].
Node 4 is a root node, find a new strongly connected component: [11, 9, 3, 10, 6, 2, 8, 0, 1, 4].
So the strongly connected component containing node 4 is ",0.7692307692307693,240
connected_component,"[(3, 0), (0, 6), (0, 1), (0, 8), (0, 11), (8, 9), (8, 6), (8, 5), (9, 6), (9, 1), (9, 3), (5, 11), (7, 11), (7, 8), (11, 9), (11, 2), (2, 3), (2, 0), (2, 9), (1, 4), (10, 0), (4, 5), (4, 11), (4, 0), (4, 6)]","{3: [0],
0: [6, 1, 8, 11],
8: [9, 6, 5],
9: [6, 1, 3],
6: [],
5: [11],
7: [11, 8],
11: [9, 2],
2: [3, 0, 9],
1: [4],
10: [0],
4: [5, 11, 0, 6]}","Node 3 is connected to node 0.
Node 0 is connected to nodes 6, 1, 8, 11.
Node 8 is connected to nodes 9, 6, 5.
Node 9 is connected to nodes 6, 1, 3.
Node 5 is connected to node 11.
Node 7 is connected to nodes 11, 8.
Node 11 is connected to nodes 9, 2.
Node 2 is connected to nodes 3, 0, 9.
Node 1 is connected to node 4.
Node 10 is connected to node 0.
Node 4 is connected to nodes 5, 11, 0, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,25,True,Find the strongly connected component containing node 4. ,"[2, 11, 5, 3, 1, 9, 8, 0, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 2.
Search from node 2.
Node 4 is a root node, find a new strongly connected component: [2, 11, 5, 3, 1, 9, 8, 0, 4].
So the strongly connected component containing node 4 is ",0.75,241
connected_component,"[(7, 2), (7, 0), (7, 4), (7, 8), (2, 1), (2, 0), (2, 8), (0, 8), (0, 7), (0, 2), (4, 8), (4, 7), (4, 2), (4, 0), (8, 6), (8, 2), (8, 1), (8, 0), (8, 3), (1, 3), (1, 2), (5, 4), (5, 8), (3, 8), (3, 7), (3, 2), (3, 5), (3, 1)]","{7: [2, 0, 4, 8],
2: [1, 0, 8],
0: [8, 7, 2],
4: [8, 7, 2, 0],
8: [6, 2, 1, 0, 3],
1: [3, 2],
5: [4, 8],
3: [8, 7, 2, 5, 1],
6: []}","Node 7 is connected to nodes 2, 0, 4, 8.
Node 2 is connected to nodes 1, 0, 8.
Node 0 is connected to nodes 8, 7, 2.
Node 4 is connected to nodes 8, 7, 2, 0.
Node 8 is connected to nodes 6, 2, 1, 0, 3.
Node 1 is connected to nodes 3, 2.
Node 5 is connected to nodes 4, 8.
Node 3 is connected to nodes 8, 7, 2, 5, 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,28,True,Find the strongly connected component containing node 4. ,"[7, 5, 3, 1, 2, 0, 8, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Node 4 is a root node, find a new strongly connected component: [7, 5, 3, 1, 2, 0, 8, 4].
So the strongly connected component containing node 4 is ",0.8888888888888888,242
connected_component,"[(8, 2), (8, 5), (8, 6), (2, 1), (2, 5), (2, 3), (2, 8), (5, 9), (5, 2), (5, 4), (5, 1), (6, 4), (9, 0), (0, 3), (0, 4), (1, 7), (1, 4), (3, 7), (4, 3)]","{8: [2, 5, 6],
2: [1, 5, 3, 8],
5: [9, 2, 4, 1],
6: [4],
9: [0],
0: [3, 4],
1: [7, 4],
3: [7],
4: [3],
7: []}","Node 8 is connected to nodes 2, 5, 6.
Node 2 is connected to nodes 1, 5, 3, 8.
Node 5 is connected to nodes 9, 2, 4, 1.
Node 6 is connected to node 4.
Node 9 is connected to node 0.
Node 0 is connected to nodes 3, 4.
Node 1 is connected to nodes 7, 4.
Node 3 is connected to node 7.
Node 4 is connected to node 3.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,19,True,Find the strongly connected component containing node 5. ,"[8, 2, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Node 0 is a root node, find a new strongly connected component: [0].
Node 9 is a root node, find a new strongly connected component: [9].
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Visit neighbor node 1.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
Node 5 is a root node, find a new strongly connected component: [8, 2, 5].
So the strongly connected component containing node 5 is ",0.3,243
connected_component,"[(9, 7), (9, 8), (9, 3), (9, 4), (7, 6), (7, 2), (7, 1), (7, 9), (8, 3), (8, 2), (3, 0), (3, 6), (3, 2), (3, 1), (3, 8), (4, 0), (4, 5), (6, 5), (2, 8), (1, 8), (1, 7), (1, 5), (5, 6), (0, 9), (0, 7), (0, 6)]","{9: [7, 8, 3, 4],
7: [6, 2, 1, 9],
8: [3, 2],
3: [0, 6, 2, 1, 8],
4: [0, 5],
6: [5],
2: [8],
1: [8, 7, 5],
5: [6],
0: [9, 7, 6]}","Node 9 is connected to nodes 7, 8, 3, 4.
Node 7 is connected to nodes 6, 2, 1, 9.
Node 8 is connected to nodes 3, 2.
Node 3 is connected to nodes 0, 6, 2, 1, 8.
Node 4 is connected to nodes 0, 5.
Node 6 is connected to node 5.
Node 2 is connected to node 8.
Node 1 is connected to nodes 8, 7, 5.
Node 5 is connected to node 6.
Node 0 is connected to nodes 9, 7, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,26,True,Find the strongly connected component containing node 8. ,"[1, 7, 4, 9, 0, 3, 2, 8]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 6.
Search from node 6.
Node 5 is a root node, find a new strongly connected component: [6, 5].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 1.
Search from node 1.
Node 8 is a root node, find a new strongly connected component: [1, 7, 4, 9, 0, 3, 2, 8].
So the strongly connected component containing node 8 is ",0.8,244
connected_component,"[(7, 0), (7, 6), (7, 8), (0, 8), (6, 8), (6, 5), (6, 1), (8, 7), (8, 5), (5, 7), (4, 2), (4, 8), (4, 7), (2, 1), (2, 4), (3, 8), (3, 0), (3, 5), (3, 6), (3, 2)]","{7: [0, 6, 8],
0: [8],
6: [8, 5, 1],
8: [7, 5],
5: [7],
1: [],
4: [2, 8, 7],
2: [1, 4],
3: [8, 0, 5, 6, 2]}","Node 7 is connected to nodes 0, 6, 8.
Node 0 is connected to node 8.
Node 6 is connected to nodes 8, 5, 1.
Node 8 is connected to nodes 7, 5.
Node 5 is connected to node 7.
Node 4 is connected to nodes 2, 8, 7.
Node 2 is connected to nodes 1, 4.
Node 3 is connected to nodes 8, 0, 5, 6, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,20,True,Find the strongly connected component containing node 0. ,"[6, 7, 5, 8, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
Node 0 is a root node, find a new strongly connected component: [6, 7, 5, 8, 0].
So the strongly connected component containing node 0 is ",0.5555555555555556,245
connected_component,"[(6, 11), (11, 1), (11, 10), (11, 2), (11, 7), (7, 1), (7, 12), (7, 3), (7, 9), (7, 8), (7, 6), (1, 0), (1, 8), (1, 11), (3, 4), (3, 2), (3, 1), (9, 11), (9, 5), (9, 10), (8, 7), (8, 12), (8, 0), (8, 5), (10, 2), (10, 8), (10, 6), (10, 12), (10, 0), (2, 11), (2, 0), (0, 1), (4, 8), (4, 0), (5, 10), (5, 7)]","{6: [11],
11: [1, 10, 2, 7],
7: [1, 12, 3, 9, 8, 6],
1: [0, 8, 11],
12: [],
3: [4, 2, 1],
9: [11, 5, 10],
8: [7, 12, 0, 5],
10: [2, 8, 6, 12, 0],
2: [11, 0],
0: [1],
4: [8, 0],
5: [10, 7]}","Node 6 is connected to node 11.
Node 11 is connected to nodes 1, 10, 2, 7.
Node 7 is connected to nodes 1, 12, 3, 9, 8, 6.
Node 1 is connected to nodes 0, 8, 11.
Node 3 is connected to nodes 4, 2, 1.
Node 9 is connected to nodes 11, 5, 10.
Node 8 is connected to nodes 7, 12, 0, 5.
Node 10 is connected to nodes 2, 8, 6, 12, 0.
Node 2 is connected to nodes 11, 0.
Node 0 is connected to node 1.
Node 4 is connected to nodes 8, 0.
Node 5 is connected to nodes 10, 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,36,True,Find the strongly connected component containing node 12. ,[12],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 12.
Node 12 is a root node, find a new strongly connected component: [12].
So the strongly connected component containing node 12 is ",0.0769230769230769,246
connected_component,"[(1, 5), (5, 8), (5, 3), (5, 6), (8, 3), (3, 2), (3, 8), (6, 7), (7, 6), (7, 2), (7, 1), (7, 8), (4, 3), (4, 2), (0, 8), (0, 7), (0, 6)]","{1: [5],
5: [8, 3, 6],
8: [3],
3: [2, 8],
6: [7],
7: [6, 2, 1, 8],
2: [],
4: [3, 2],
0: [8, 7, 6]}","Node 1 is connected to node 5.
Node 5 is connected to nodes 8, 3, 6.
Node 8 is connected to node 3.
Node 3 is connected to nodes 2, 8.
Node 6 is connected to node 7.
Node 7 is connected to nodes 6, 2, 1, 8.
Node 4 is connected to nodes 3, 2.
Node 0 is connected to nodes 8, 7, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,17,True,Find the strongly connected component containing node 8. ,"[3, 8]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Node 8 is a root node, find a new strongly connected component: [3, 8].
So the strongly connected component containing node 8 is ",0.2222222222222222,247
connected_component,"[(1, 5), (5, 9), (5, 0), (5, 1), (9, 7), (9, 5), (0, 7), (7, 1), (7, 9), (7, 3), (4, 9), (2, 9), (2, 0), (8, 2), (10, 5), (10, 9), (3, 6), (3, 1), (3, 4), (3, 2), (6, 0)]","{1: [5],
5: [9, 0, 1],
9: [7, 5],
0: [7],
7: [1, 9, 3],
4: [9],
2: [9, 0],
8: [2],
10: [5, 9],
3: [6, 1, 4, 2],
6: [0]}","Node 1 is connected to node 5.
Node 5 is connected to nodes 9, 0, 1.
Node 9 is connected to nodes 7, 5.
Node 0 is connected to node 7.
Node 7 is connected to nodes 1, 9, 3.
Node 4 is connected to node 9.
Node 2 is connected to nodes 9, 0.
Node 8 is connected to node 2.
Node 10 is connected to nodes 5, 9.
Node 3 is connected to nodes 6, 1, 4, 2.
Node 6 is connected to node 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,21,True,Find the strongly connected component containing node 1. ,"[6, 4, 9, 2, 3, 7, 0, 5, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Node 1 is a root node, find a new strongly connected component: [6, 4, 9, 2, 3, 7, 0, 5, 1].
So the strongly connected component containing node 1 is ",0.8181818181818182,248
connected_component,"[(9, 2), (2, 11), (2, 7), (2, 6), (11, 8), (11, 2), (11, 3), (11, 5), (11, 4), (8, 1), (8, 4), (8, 11), (3, 1), (3, 8), (3, 6), (3, 2), (4, 0), (4, 7), (4, 2), (0, 7), (0, 6), (0, 9), (7, 6), (7, 2), (7, 10), (6, 5), (6, 10), (6, 11), (6, 0), (6, 8), (1, 4), (10, 8), (10, 7), (10, 6), (12, 10), (12, 4)]","{9: [2],
2: [11, 7, 6],
11: [8, 2, 3, 5, 4],
8: [1, 4, 11],
3: [1, 8, 6, 2],
5: [],
4: [0, 7, 2],
0: [7, 6, 9],
7: [6, 2, 10],
6: [5, 10, 11, 0, 8],
1: [4],
10: [8, 7, 6],
12: [10, 4]}","Node 9 is connected to node 2.
Node 2 is connected to nodes 11, 7, 6.
Node 11 is connected to nodes 8, 2, 3, 5, 4.
Node 8 is connected to nodes 1, 4, 11.
Node 3 is connected to nodes 1, 8, 6, 2.
Node 4 is connected to nodes 0, 7, 2.
Node 0 is connected to nodes 7, 6, 9.
Node 7 is connected to nodes 6, 2, 10.
Node 6 is connected to nodes 5, 10, 11, 0, 8.
Node 1 is connected to node 4.
Node 10 is connected to nodes 8, 7, 6.
Node 12 is connected to nodes 10, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,36,True,Find the strongly connected component containing node 1. ,"[7, 10, 6, 8, 3, 11, 2, 9, 0, 4, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 7.
Search from node 7.
Node 1 is a root node, find a new strongly connected component: [7, 10, 6, 8, 3, 11, 2, 9, 0, 4, 1].
So the strongly connected component containing node 1 is ",0.8461538461538461,249
connected_component,"[(9, 6), (9, 4), (9, 1), (4, 7), (1, 7), (7, 0), (8, 3), (8, 2), (3, 2), (2, 5)]","{9: [6, 4, 1],
6: [9],
4: [9, 7],
1: [9, 7],
7: [4, 0, 1],
8: [3, 2],
3: [8, 2],
2: [8, 3, 5],
0: [7],
5: [2]}","Node 9 is connected to nodes 6, 4, 1.
Node 6 is connected to node 9.
Node 4 is connected to nodes 9, 7.
Node 1 is connected to nodes 9, 7.
Node 7 is connected to nodes 4, 0, 1.
Node 8 is connected to nodes 3, 2.
Node 3 is connected to nodes 8, 2.
Node 2 is connected to nodes 8, 3, 5.
Node 0 is connected to node 7.
Node 5 is connected to node 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,10,False,Find the connected component containing node 2. ,"[2, 5, 3, 8]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 2, add it to the connected component. The current connected component is [2].
Visit node 5, add it to the connected component. The current connected component is [2, 5].
Visit node 3, add it to the connected component. The current connected component is [2, 5, 3].
Visit node 8, add it to the connected component. The current connected component is [2, 5, 3, 8].
Thus, the connected component containing node 2 is ",0.4,250
connected_component,"[(7, 1), (7, 3), (7, 2), (1, 8), (1, 4), (1, 6), (1, 12), (1, 14), (3, 6), (3, 12), (3, 5), (2, 9), (2, 8), (8, 13), (8, 0), (4, 14), (4, 13), (4, 5), (4, 10), (4, 11), (6, 13), (6, 10), (6, 5), (12, 9), (14, 0), (0, 9), (0, 13), (13, 9), (13, 10), (10, 11)]","{7: [1, 3, 2],
1: [7, 8, 4, 6, 12, 14],
3: [7, 6, 12, 5],
2: [7, 9, 8],
8: [1, 2, 13, 0],
4: [1, 14, 13, 5, 10, 11],
6: [1, 3, 13, 10, 5],
12: [1, 3, 9],
14: [1, 4, 0],
0: [14, 9, 13, 8],
13: [4, 6, 9, 8, 0, 10],
5: [4, 3, 6],
10: [4, 6, 13, 11],
11: [4, 10],
9: [2, 12, 0, 13]}","Node 7 is connected to nodes 1, 3, 2.
Node 1 is connected to nodes 7, 8, 4, 6, 12, 14.
Node 3 is connected to nodes 7, 6, 12, 5.
Node 2 is connected to nodes 7, 9, 8.
Node 8 is connected to nodes 1, 2, 13, 0.
Node 4 is connected to nodes 1, 14, 13, 5, 10, 11.
Node 6 is connected to nodes 1, 3, 13, 10, 5.
Node 12 is connected to nodes 1, 3, 9.
Node 14 is connected to nodes 1, 4, 0.
Node 0 is connected to nodes 14, 9, 13, 8.
Node 13 is connected to nodes 4, 6, 9, 8, 0, 10.
Node 5 is connected to nodes 4, 3, 6.
Node 10 is connected to nodes 4, 6, 13, 11.
Node 11 is connected to nodes 4, 10.
Node 9 is connected to nodes 2, 12, 0, 13.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,30,False,Find the connected component containing node 11. ,"[11, 4, 14, 1, 7, 3, 6, 5, 13, 9, 12, 2, 8, 0, 10]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 11, add it to the connected component. The current connected component is [11].
Visit node 4, add it to the connected component. The current connected component is [11, 4].
Visit node 14, add it to the connected component. The current connected component is [11, 4, 14].
Visit node 1, add it to the connected component. The current connected component is [11, 4, 14, 1].
Visit node 7, add it to the connected component. The current connected component is [11, 4, 14, 1, 7].
Visit node 3, add it to the connected component. The current connected component is [11, 4, 14, 1, 7, 3].
Visit node 6, add it to the connected component. The current connected component is [11, 4, 14, 1, 7, 3, 6].
Visit node 5, add it to the connected component. The current connected component is [11, 4, 14, 1, 7, 3, 6, 5].
Visit node 13, add it to the connected component. The current connected component is [11, 4, 14, 1, 7, 3, 6, 5, 13].
Visit node 9, add it to the connected component. The current connected component is [11, 4, 14, 1, 7, 3, 6, 5, 13, 9].
Visit node 12, add it to the connected component. The current connected component is [11, 4, 14, 1, 7, 3, 6, 5, 13, 9, 12].
Visit node 2, add it to the connected component. The current connected component is [11, 4, 14, 1, 7, 3, 6, 5, 13, 9, 12, 2].
Visit node 8, add it to the connected component. The current connected component is [11, 4, 14, 1, 7, 3, 6, 5, 13, 9, 12, 2, 8].
Visit node 0, add it to the connected component. The current connected component is [11, 4, 14, 1, 7, 3, 6, 5, 13, 9, 12, 2, 8, 0].
Visit node 10, add it to the connected component. The current connected component is [11, 4, 14, 1, 7, 3, 6, 5, 13, 9, 12, 2, 8, 0, 10].
Thus, the connected component containing node 11 is ",1.0,251
connected_component,"[(8, 2), (8, 3), (8, 1), (8, 0), (2, 6), (2, 3), (2, 5), (1, 0), (1, 8), (1, 6), (1, 3), (1, 4), (0, 7), (0, 6), (0, 4), (0, 1), (0, 5), (6, 1), (6, 0), (6, 8), (6, 2), (5, 0), (5, 2), (5, 6), (5, 4), (7, 6), (7, 0), (4, 5), (4, 2), (4, 6)]","{8: [2, 3, 1, 0],
2: [6, 3, 5],
3: [],
1: [0, 8, 6, 3, 4],
0: [7, 6, 4, 1, 5],
6: [1, 0, 8, 2],
5: [0, 2, 6, 4],
7: [6, 0],
4: [5, 2, 6]}","Node 8 is connected to nodes 2, 3, 1, 0.
Node 2 is connected to nodes 6, 3, 5.
Node 1 is connected to nodes 0, 8, 6, 3, 4.
Node 0 is connected to nodes 7, 6, 4, 1, 5.
Node 6 is connected to nodes 1, 0, 8, 2.
Node 5 is connected to nodes 0, 2, 6, 4.
Node 7 is connected to nodes 6, 0.
Node 4 is connected to nodes 5, 2, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,30,True,Find the strongly connected component containing node 4. ,"[7, 8, 6, 1, 0, 5, 2, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 7.
Search from node 7.
Node 4 is a root node, find a new strongly connected component: [7, 8, 6, 1, 0, 5, 2, 4].
So the strongly connected component containing node 4 is ",0.8888888888888888,252
connected_component,"[(5, 3), (5, 4), (3, 4), (3, 0), (3, 1), (4, 7), (4, 2), (1, 2), (0, 3), (8, 1), (8, 3), (7, 0), (7, 1), (7, 4), (6, 0), (6, 5), (6, 2), (6, 4)]","{5: [3, 4],
3: [4, 0, 1],
4: [7, 2],
1: [2],
2: [],
0: [3],
8: [1, 3],
7: [0, 1, 4],
6: [0, 5, 2, 4]}","Node 5 is connected to nodes 3, 4.
Node 3 is connected to nodes 4, 0, 1.
Node 4 is connected to nodes 7, 2.
Node 1 is connected to node 2.
Node 0 is connected to node 3.
Node 8 is connected to nodes 1, 3.
Node 7 is connected to nodes 0, 1, 4.
Node 6 is connected to nodes 0, 5, 2, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,18,True,Find the strongly connected component containing node 2. ,[2],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
So the strongly connected component containing node 2 is ",0.1111111111111111,253
connected_component,"[(0, 3), (0, 8), (0, 9), (0, 10), (8, 9), (8, 10), (8, 6), (10, 3), (10, 5), (10, 8), (10, 12), (1, 11), (1, 0), (11, 0), (11, 2), (4, 8), (4, 12), (12, 3), (12, 7), (12, 5), (7, 12), (7, 11), (2, 10), (2, 0), (2, 1), (2, 3), (5, 12), (5, 11)]","{0: [3, 8, 9, 10],
3: [],
8: [9, 10, 6],
9: [],
10: [3, 5, 8, 12],
1: [11, 0],
11: [0, 2],
4: [8, 12],
12: [3, 7, 5],
7: [12, 11],
2: [10, 0, 1, 3],
5: [12, 11],
6: []}","Node 0 is connected to nodes 3, 8, 9, 10.
Node 8 is connected to nodes 9, 10, 6.
Node 10 is connected to nodes 3, 5, 8, 12.
Node 1 is connected to nodes 11, 0.
Node 11 is connected to nodes 0, 2.
Node 4 is connected to nodes 8, 12.
Node 12 is connected to nodes 3, 7, 5.
Node 7 is connected to nodes 12, 11.
Node 2 is connected to nodes 10, 0, 1, 3.
Node 5 is connected to nodes 12, 11.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,28,True,Find the strongly connected component containing node 5. ,"[1, 2, 7, 12, 10, 8, 0, 11, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Node 5 is a root node, find a new strongly connected component: [1, 2, 7, 12, 10, 8, 0, 11, 5].
So the strongly connected component containing node 5 is ",0.6923076923076923,254
connected_component,"[(0, 2), (0, 4), (0, 9), (2, 6), (2, 9), (4, 1), (4, 7), (4, 5), (4, 3), (9, 0), (9, 8), (6, 0), (5, 8), (3, 1), (3, 8), (3, 5), (1, 0), (1, 2), (7, 5), (7, 3), (7, 1)]","{0: [2, 4, 9],
2: [6, 9],
4: [1, 7, 5, 3],
9: [0, 8],
6: [0],
5: [8],
8: [],
3: [1, 8, 5],
1: [0, 2],
7: [5, 3, 1]}","Node 0 is connected to nodes 2, 4, 9.
Node 2 is connected to nodes 6, 9.
Node 4 is connected to nodes 1, 7, 5, 3.
Node 9 is connected to nodes 0, 8.
Node 6 is connected to node 0.
Node 5 is connected to node 8.
Node 3 is connected to nodes 1, 8, 5.
Node 1 is connected to nodes 0, 2.
Node 7 is connected to nodes 5, 3, 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,21,True,Find the strongly connected component containing node 5. ,[5],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Node 5 is a root node, find a new strongly connected component: [5].
So the strongly connected component containing node 5 is ",0.1,255
connected_component,"[(8, 7), (7, 6), (7, 4), (1, 5), (1, 3), (1, 4), (1, 2), (4, 3), (2, 5), (2, 0), (6, 5), (6, 0), (0, 7), (0, 8), (0, 1), (0, 5)]","{8: [7],
7: [6, 4],
1: [5, 3, 4, 2],
5: [],
3: [],
4: [3],
2: [5, 0],
6: [5, 0],
0: [7, 8, 1, 5]}","Node 8 is connected to node 7.
Node 7 is connected to nodes 6, 4.
Node 1 is connected to nodes 5, 3, 4, 2.
Node 4 is connected to node 3.
Node 2 is connected to nodes 5, 0.
Node 6 is connected to nodes 5, 0.
Node 0 is connected to nodes 7, 8, 1, 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,16,True,Find the strongly connected component containing node 8. ,"[2, 1, 0, 6, 7, 8]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Node 4 is a root node, find a new strongly connected component: [4].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Node 8 is a root node, find a new strongly connected component: [2, 1, 0, 6, 7, 8].
So the strongly connected component containing node 8 is ",0.6666666666666666,256
connected_component,"[(6, 9), (6, 1), (6, 2), (1, 4), (1, 7), (1, 2), (0, 8), (0, 5), (8, 10), (8, 3), (5, 3)]","{6: [9, 1, 2],
9: [6],
1: [6, 4, 7, 2],
2: [6, 1],
0: [8, 5],
8: [0, 10, 3],
5: [0, 3],
10: [8],
3: [8, 5],
4: [1],
7: [1]}","Node 6 is connected to nodes 9, 1, 2.
Node 9 is connected to node 6.
Node 1 is connected to nodes 6, 4, 7, 2.
Node 2 is connected to nodes 6, 1.
Node 0 is connected to nodes 8, 5.
Node 8 is connected to nodes 0, 10, 3.
Node 5 is connected to nodes 0, 3.
Node 10 is connected to node 8.
Node 3 is connected to nodes 8, 5.
Node 4 is connected to node 1.
Node 7 is connected to node 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,11,False,Find the connected component containing node 8. ,"[8, 3, 5, 0, 10]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 8, add it to the connected component. The current connected component is [8].
Visit node 3, add it to the connected component. The current connected component is [8, 3].
Visit node 5, add it to the connected component. The current connected component is [8, 3, 5].
Visit node 0, add it to the connected component. The current connected component is [8, 3, 5, 0].
Visit node 10, add it to the connected component. The current connected component is [8, 3, 5, 0, 10].
Thus, the connected component containing node 8 is ",0.4545454545454545,257
connected_component,"[(1, 5), (1, 7), (7, 1), (0, 2), (2, 1), (2, 5), (2, 7), (8, 5), (8, 4), (8, 0), (4, 6), (4, 8), (4, 7), (9, 4), (9, 6), (9, 2), (9, 1), (6, 1), (6, 9), (3, 4)]","{1: [5, 7],
5: [],
7: [1],
0: [2],
2: [1, 5, 7],
8: [5, 4, 0],
4: [6, 8, 7],
9: [4, 6, 2, 1],
6: [1, 9],
3: [4]}","Node 1 is connected to nodes 5, 7.
Node 7 is connected to node 1.
Node 0 is connected to node 2.
Node 2 is connected to nodes 1, 5, 7.
Node 8 is connected to nodes 5, 4, 0.
Node 4 is connected to nodes 6, 8, 7.
Node 9 is connected to nodes 4, 6, 2, 1.
Node 6 is connected to nodes 1, 9.
Node 3 is connected to node 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,20,True,Find the strongly connected component containing node 6. ,"[8, 4, 9, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Visit neighbor node 7.
Search from node 7.
Node 1 is a root node, find a new strongly connected component: [7, 1].
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Node 6 is a root node, find a new strongly connected component: [8, 4, 9, 6].
So the strongly connected component containing node 6 is ",0.4,258
connected_component,"[(7, 2), (7, 9), (7, 8), (7, 3), (7, 5), (7, 0), (7, 1), (2, 9), (2, 4), (2, 0), (2, 6), (2, 1), (9, 8), (9, 3), (9, 5), (9, 0), (9, 6), (9, 1), (8, 3), (8, 4), (8, 0), (3, 4), (3, 5), (3, 0), (3, 1), (5, 4), (5, 0), (5, 6), (5, 1), (0, 6), (0, 1), (1, 4), (1, 6), (4, 6)]","{7: [2, 9, 8, 3, 5, 0, 1],
2: [7, 9, 4, 0, 6, 1],
9: [7, 2, 8, 3, 5, 0, 6, 1],
8: [7, 9, 3, 4, 0],
3: [7, 9, 8, 4, 5, 0, 1],
5: [7, 9, 3, 4, 0, 6, 1],
0: [7, 2, 9, 8, 3, 5, 6, 1],
1: [7, 2, 9, 3, 4, 5, 0, 6],
4: [2, 8, 3, 5, 6, 1],
6: [2, 9, 4, 5, 0, 1]}","Node 7 is connected to nodes 2, 9, 8, 3, 5, 0, 1.
Node 2 is connected to nodes 7, 9, 4, 0, 6, 1.
Node 9 is connected to nodes 7, 2, 8, 3, 5, 0, 6, 1.
Node 8 is connected to nodes 7, 9, 3, 4, 0.
Node 3 is connected to nodes 7, 9, 8, 4, 5, 0, 1.
Node 5 is connected to nodes 7, 9, 3, 4, 0, 6, 1.
Node 0 is connected to nodes 7, 2, 9, 8, 3, 5, 6, 1.
Node 1 is connected to nodes 7, 2, 9, 3, 4, 5, 0, 6.
Node 4 is connected to nodes 2, 8, 3, 5, 6, 1.
Node 6 is connected to nodes 2, 9, 4, 5, 0, 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,34,False,Find the connected component containing node 9. ,"[9, 8, 7, 5, 6, 4, 3, 1, 2, 0]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 9, add it to the connected component. The current connected component is [9].
Visit node 8, add it to the connected component. The current connected component is [9, 8].
Visit node 7, add it to the connected component. The current connected component is [9, 8, 7].
Visit node 5, add it to the connected component. The current connected component is [9, 8, 7, 5].
Visit node 6, add it to the connected component. The current connected component is [9, 8, 7, 5, 6].
Visit node 4, add it to the connected component. The current connected component is [9, 8, 7, 5, 6, 4].
Visit node 3, add it to the connected component. The current connected component is [9, 8, 7, 5, 6, 4, 3].
Visit node 1, add it to the connected component. The current connected component is [9, 8, 7, 5, 6, 4, 3, 1].
Visit node 2, add it to the connected component. The current connected component is [9, 8, 7, 5, 6, 4, 3, 1, 2].
Visit node 0, add it to the connected component. The current connected component is [9, 8, 7, 5, 6, 4, 3, 1, 2, 0].
Thus, the connected component containing node 9 is ",1.0,259
connected_component,"[(3, 2), (3, 1), (1, 3), (1, 4), (6, 0), (6, 7), (6, 4), (6, 3), (0, 7), (0, 4), (0, 1), (0, 5), (7, 6), (7, 5), (4, 1), (5, 2), (5, 3)]","{3: [2, 1],
2: [],
1: [3, 4],
6: [0, 7, 4, 3],
0: [7, 4, 1, 5],
7: [6, 5],
4: [1],
5: [2, 3]}","Node 3 is connected to nodes 2, 1.
Node 1 is connected to nodes 3, 4.
Node 6 is connected to nodes 0, 7, 4, 3.
Node 0 is connected to nodes 7, 4, 1, 5.
Node 7 is connected to nodes 6, 5.
Node 4 is connected to node 1.
Node 5 is connected to nodes 2, 3.","[0, 1, 2, 3, 4, 5, 6, 7]",8,17,True,Find the strongly connected component containing node 1. ,"[4, 3, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 4.
Search from node 4.
Node 1 is a root node, find a new strongly connected component: [4, 3, 1].
So the strongly connected component containing node 1 is ",0.375,260
connected_component,"[(9, 6), (9, 4), (6, 5), (6, 10), (6, 2), (6, 1), (6, 9), (4, 6), (4, 0), (5, 7), (5, 1), (10, 7), (10, 5), (1, 9), (1, 8), (1, 4), (7, 9), (0, 3), (0, 1), (0, 9), (3, 2), (3, 7)]","{9: [6, 4],
6: [5, 10, 2, 1, 9],
4: [6, 0],
5: [7, 1],
10: [7, 5],
2: [],
1: [9, 8, 4],
7: [9],
0: [3, 1, 9],
3: [2, 7],
8: []}","Node 9 is connected to nodes 6, 4.
Node 6 is connected to nodes 5, 10, 2, 1, 9.
Node 4 is connected to nodes 6, 0.
Node 5 is connected to nodes 7, 1.
Node 10 is connected to nodes 7, 5.
Node 1 is connected to nodes 9, 8, 4.
Node 7 is connected to node 9.
Node 0 is connected to nodes 3, 1, 9.
Node 3 is connected to nodes 2, 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,22,True,Find the strongly connected component containing node 1. ,"[10, 5, 6, 7, 3, 0, 4, 9, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 10.
Search from node 10.
Node 1 is a root node, find a new strongly connected component: [10, 5, 6, 7, 3, 0, 4, 9, 1].
So the strongly connected component containing node 1 is ",0.8181818181818182,261
connected_component,"[(3, 1), (3, 0), (1, 0), (0, 4), (5, 1), (5, 0), (5, 3), (6, 0), (6, 4), (4, 3), (4, 6), (8, 7), (8, 2), (8, 5), (8, 0), (7, 3), (7, 8), (2, 3), (2, 5)]","{3: [1, 0],
1: [0],
0: [4],
5: [1, 0, 3],
6: [0, 4],
4: [3, 6],
8: [7, 2, 5, 0],
7: [3, 8],
2: [3, 5]}","Node 3 is connected to nodes 1, 0.
Node 1 is connected to node 0.
Node 0 is connected to node 4.
Node 5 is connected to nodes 1, 0, 3.
Node 6 is connected to nodes 0, 4.
Node 4 is connected to nodes 3, 6.
Node 8 is connected to nodes 7, 2, 5, 0.
Node 7 is connected to nodes 3, 8.
Node 2 is connected to nodes 3, 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,19,True,Find the strongly connected component containing node 4. ,"[6, 1, 0, 3, 4]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Node 4 is a root node, find a new strongly connected component: [6, 1, 0, 3, 4].
So the strongly connected component containing node 4 is ",0.5555555555555556,262
connected_component,"[(3, 2), (3, 6), (2, 0), (2, 4), (2, 5), (5, 0), (5, 1), (5, 7), (0, 7), (1, 4), (1, 6), (1, 3), (7, 5), (4, 6), (4, 7), (4, 3)]","{3: [2, 6],
2: [0, 4, 5],
6: [],
5: [0, 1, 7],
0: [7],
1: [4, 6, 3],
7: [5],
4: [6, 7, 3]}","Node 3 is connected to nodes 2, 6.
Node 2 is connected to nodes 0, 4, 5.
Node 5 is connected to nodes 0, 1, 7.
Node 0 is connected to node 7.
Node 1 is connected to nodes 4, 6, 3.
Node 7 is connected to node 5.
Node 4 is connected to nodes 6, 7, 3.","[0, 1, 2, 3, 4, 5, 6, 7]",8,16,True,Find the strongly connected component containing node 7. ,"[4, 2, 3, 1, 0, 5, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Node 7 is a root node, find a new strongly connected component: [4, 2, 3, 1, 0, 5, 7].
So the strongly connected component containing node 7 is ",0.875,263
connected_component,"[(9, 0), (0, 9), (0, 1), (1, 0), (1, 7), (1, 3), (1, 9), (7, 6), (3, 8), (3, 0), (3, 7), (5, 8), (5, 6), (5, 4), (8, 2)]","{9: [0],
0: [9, 1],
1: [0, 7, 3, 9],
7: [6],
3: [8, 0, 7],
6: [],
5: [8, 6, 4],
8: [2],
4: [],
2: []}","Node 9 is connected to node 0.
Node 0 is connected to nodes 9, 1.
Node 1 is connected to nodes 0, 7, 3, 9.
Node 7 is connected to node 6.
Node 3 is connected to nodes 8, 0, 7.
Node 5 is connected to nodes 8, 6, 4.
Node 8 is connected to node 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,15,True,Find the strongly connected component containing node 9. ,"[3, 1, 0, 9]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 9.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Node 7 is a root node, find a new strongly connected component: [7].
Node 9 is a root node, find a new strongly connected component: [3, 1, 0, 9].
So the strongly connected component containing node 9 is ",0.4,264
connected_component,"[(2, 10), (2, 8), (10, 3), (8, 3), (6, 0), (6, 9), (6, 7), (0, 4), (7, 1), (7, 5), (4, 5)]","{2: [10, 8],
10: [2, 3],
8: [2, 3],
3: [10, 8],
6: [0, 9, 7],
0: [6, 4],
9: [6],
7: [6, 1, 5],
4: [0, 5],
5: [4, 7],
1: [7]}","Node 2 is connected to nodes 10, 8.
Node 10 is connected to nodes 2, 3.
Node 8 is connected to nodes 2, 3.
Node 3 is connected to nodes 10, 8.
Node 6 is connected to nodes 0, 9, 7.
Node 0 is connected to nodes 6, 4.
Node 9 is connected to node 6.
Node 7 is connected to nodes 6, 1, 5.
Node 4 is connected to nodes 0, 5.
Node 5 is connected to nodes 4, 7.
Node 1 is connected to node 7.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]",11,11,False,Find the connected component containing node 8. ,"[8, 3, 10, 2]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 8, add it to the connected component. The current connected component is [8].
Visit node 3, add it to the connected component. The current connected component is [8, 3].
Visit node 10, add it to the connected component. The current connected component is [8, 3, 10].
Visit node 2, add it to the connected component. The current connected component is [8, 3, 10, 2].
Thus, the connected component containing node 8 is ",0.3636363636363636,265
connected_component,"[(3, 13), (13, 11), (1, 11), (1, 12), (11, 5), (12, 7), (12, 1), (12, 11), (8, 3), (8, 5), (7, 3), (7, 13), (6, 2), (2, 3), (2, 8), (2, 6), (2, 4), (2, 9), (4, 1), (4, 12), (10, 5), (0, 9), (9, 3), (9, 11), (9, 6), (9, 10)]","{3: [13],
13: [11],
1: [11, 12],
11: [5],
12: [7, 1, 11],
8: [3, 5],
5: [],
7: [3, 13],
6: [2],
2: [3, 8, 6, 4, 9],
4: [1, 12],
10: [5],
0: [9],
9: [3, 11, 6, 10]}","Node 3 is connected to node 13.
Node 13 is connected to node 11.
Node 1 is connected to nodes 11, 12.
Node 11 is connected to node 5.
Node 12 is connected to nodes 7, 1, 11.
Node 8 is connected to nodes 3, 5.
Node 7 is connected to nodes 3, 13.
Node 6 is connected to node 2.
Node 2 is connected to nodes 3, 8, 6, 4, 9.
Node 4 is connected to nodes 1, 12.
Node 10 is connected to node 5.
Node 0 is connected to node 9.
Node 9 is connected to nodes 3, 11, 6, 10.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,26,True,Find the strongly connected component containing node 3. ,[3],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Node 11 is a root node, find a new strongly connected component: [11].
Node 13 is a root node, find a new strongly connected component: [13].
Node 3 is a root node, find a new strongly connected component: [3].
So the strongly connected component containing node 3 is ",0.0714285714285714,266
connected_component,"[(0, 4), (0, 5), (5, 0), (5, 4), (1, 2), (1, 7), (2, 7), (2, 4), (2, 6), (7, 6), (7, 5), (7, 0), (6, 0), (6, 1), (3, 7), (3, 6)]","{0: [4, 5],
4: [],
5: [0, 4],
1: [2, 7],
2: [7, 4, 6],
7: [6, 5, 0],
6: [0, 1],
3: [7, 6]}","Node 0 is connected to nodes 4, 5.
Node 5 is connected to nodes 0, 4.
Node 1 is connected to nodes 2, 7.
Node 2 is connected to nodes 7, 4, 6.
Node 7 is connected to nodes 6, 5, 0.
Node 6 is connected to nodes 0, 1.
Node 3 is connected to nodes 7, 6.","[0, 1, 2, 3, 4, 5, 6, 7]",8,16,True,Find the strongly connected component containing node 2. ,"[7, 1, 6, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Node 0 is a root node, find a new strongly connected component: [5, 0].
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 7.
Search from node 7.
Node 2 is a root node, find a new strongly connected component: [7, 1, 6, 2].
So the strongly connected component containing node 2 is ",0.5,267
connected_component,"[(1, 4), (1, 5), (1, 3), (1, 6), (4, 3), (4, 7), (4, 2), (4, 6), (4, 1), (5, 3), (5, 2), (3, 7), (3, 2), (3, 6), (3, 1), (6, 4), (6, 5), (6, 7), (6, 2), (7, 2), (7, 1), (7, 4), (2, 4), (2, 3), (0, 2), (0, 1), (0, 3)]","{1: [4, 5, 3, 6],
4: [3, 7, 2, 6, 1],
5: [3, 2],
3: [7, 2, 6, 1],
6: [4, 5, 7, 2],
7: [2, 1, 4],
2: [4, 3],
0: [2, 1, 3]}","Node 1 is connected to nodes 4, 5, 3, 6.
Node 4 is connected to nodes 3, 7, 2, 6, 1.
Node 5 is connected to nodes 3, 2.
Node 3 is connected to nodes 7, 2, 6, 1.
Node 6 is connected to nodes 4, 5, 7, 2.
Node 7 is connected to nodes 2, 1, 4.
Node 2 is connected to nodes 4, 3.
Node 0 is connected to nodes 2, 1, 3.","[0, 1, 2, 3, 4, 5, 6, 7]",8,27,True,Find the strongly connected component containing node 2. ,"[7, 5, 6, 4, 1, 3, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 7.
Search from node 7.
Node 2 is a root node, find a new strongly connected component: [7, 5, 6, 4, 1, 3, 2].
So the strongly connected component containing node 2 is ",0.875,268
connected_component,"[(4, 3), (4, 1), (4, 2), (4, 9), (4, 5), (4, 0), (3, 7), (3, 6), (1, 10), (9, 11), (9, 12), (12, 8)]","{4: [3, 1, 2, 9, 5, 0],
3: [4, 7, 6],
1: [4, 10],
2: [4],
9: [4, 11, 12],
5: [4],
0: [4],
7: [3],
6: [3],
10: [1],
11: [9],
12: [9, 8],
8: [12]}","Node 4 is connected to nodes 3, 1, 2, 9, 5, 0.
Node 3 is connected to nodes 4, 7, 6.
Node 1 is connected to nodes 4, 10.
Node 2 is connected to node 4.
Node 9 is connected to nodes 4, 11, 12.
Node 5 is connected to node 4.
Node 0 is connected to node 4.
Node 7 is connected to node 3.
Node 6 is connected to node 3.
Node 10 is connected to node 1.
Node 11 is connected to node 9.
Node 12 is connected to nodes 9, 8.
Node 8 is connected to node 12.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,12,False,Find the connected component containing node 11. ,"[11, 9, 12, 8, 4, 5, 3, 7, 6, 2, 1, 10, 0]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 11, add it to the connected component. The current connected component is [11].
Visit node 9, add it to the connected component. The current connected component is [11, 9].
Visit node 12, add it to the connected component. The current connected component is [11, 9, 12].
Visit node 8, add it to the connected component. The current connected component is [11, 9, 12, 8].
Visit node 4, add it to the connected component. The current connected component is [11, 9, 12, 8, 4].
Visit node 5, add it to the connected component. The current connected component is [11, 9, 12, 8, 4, 5].
Visit node 3, add it to the connected component. The current connected component is [11, 9, 12, 8, 4, 5, 3].
Visit node 7, add it to the connected component. The current connected component is [11, 9, 12, 8, 4, 5, 3, 7].
Visit node 6, add it to the connected component. The current connected component is [11, 9, 12, 8, 4, 5, 3, 7, 6].
Visit node 2, add it to the connected component. The current connected component is [11, 9, 12, 8, 4, 5, 3, 7, 6, 2].
Visit node 1, add it to the connected component. The current connected component is [11, 9, 12, 8, 4, 5, 3, 7, 6, 2, 1].
Visit node 10, add it to the connected component. The current connected component is [11, 9, 12, 8, 4, 5, 3, 7, 6, 2, 1, 10].
Visit node 0, add it to the connected component. The current connected component is [11, 9, 12, 8, 4, 5, 3, 7, 6, 2, 1, 10, 0].
Thus, the connected component containing node 11 is ",1.0,269
connected_component,"[(1, 10), (10, 12), (12, 8), (12, 7), (12, 3), (8, 6), (8, 3), (8, 4), (8, 2), (7, 0), (7, 5), (7, 2), (3, 9), (4, 9), (5, 3), (5, 9), (2, 0), (2, 5), (0, 9), (0, 5), (0, 6), (0, 7), (6, 3), (6, 8), (11, 0), (11, 10)]","{1: [10],
10: [12],
12: [8, 7, 3],
8: [6, 3, 4, 2],
7: [0, 5, 2],
3: [9],
4: [9],
9: [],
5: [3, 9],
2: [0, 5],
0: [9, 5, 6, 7],
6: [3, 8],
11: [0, 10]}","Node 1 is connected to node 10.
Node 10 is connected to node 12.
Node 12 is connected to nodes 8, 7, 3.
Node 8 is connected to nodes 6, 3, 4, 2.
Node 7 is connected to nodes 0, 5, 2.
Node 3 is connected to node 9.
Node 4 is connected to node 9.
Node 5 is connected to nodes 3, 9.
Node 2 is connected to nodes 0, 5.
Node 0 is connected to nodes 9, 5, 6, 7.
Node 6 is connected to nodes 3, 8.
Node 11 is connected to nodes 0, 10.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,26,True,Find the strongly connected component containing node 9. ,[9],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
So the strongly connected component containing node 9 is ",0.0769230769230769,270
connected_component,"[(8, 5), (8, 7), (5, 4), (7, 11), (11, 6), (11, 12), (12, 7), (12, 3), (12, 6), (12, 5), (4, 5), (3, 8), (3, 10), (3, 13), (0, 13), (13, 4), (10, 1), (10, 11), (10, 5), (10, 0), (1, 8), (1, 2), (9, 3), (9, 6), (9, 10), (2, 4), (2, 10), (2, 9)]","{8: [5, 7],
5: [4],
7: [11],
11: [6, 12],
6: [],
12: [7, 3, 6, 5],
4: [5],
3: [8, 10, 13],
0: [13],
13: [4],
10: [1, 11, 5, 0],
1: [8, 2],
9: [3, 6, 10],
2: [4, 10, 9]}","Node 8 is connected to nodes 5, 7.
Node 5 is connected to node 4.
Node 7 is connected to node 11.
Node 11 is connected to nodes 6, 12.
Node 12 is connected to nodes 7, 3, 6, 5.
Node 4 is connected to node 5.
Node 3 is connected to nodes 8, 10, 13.
Node 0 is connected to node 13.
Node 13 is connected to node 4.
Node 10 is connected to nodes 1, 11, 5, 0.
Node 1 is connected to nodes 8, 2.
Node 9 is connected to nodes 3, 6, 10.
Node 2 is connected to nodes 4, 10, 9.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,28,True,Find the strongly connected component containing node 11. ,"[9, 2, 1, 10, 7, 8, 3, 12, 11]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 11.
Visit neighbor node 12.
Search from node 12.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 4.
Search from node 4.
Node 5 is a root node, find a new strongly connected component: [4, 5].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 13.
Search from node 13.
Node 13 is a root node, find a new strongly connected component: [13].
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Node 11 is a root node, find a new strongly connected component: [9, 2, 1, 10, 7, 8, 3, 12, 11].
So the strongly connected component containing node 11 is ",0.6428571428571429,271
connected_component,"[(7, 3), (7, 8), (7, 9), (7, 1), (3, 11), (3, 7), (8, 9), (9, 6), (6, 9), (11, 5), (11, 9), (11, 7), (4, 7), (10, 9), (10, 6), (0, 2), (2, 9), (2, 1)]","{7: [3, 8, 9, 1],
3: [11, 7],
8: [9],
9: [6],
1: [],
6: [9],
11: [5, 9, 7],
4: [7],
10: [9, 6],
0: [2],
2: [9, 1],
5: []}","Node 7 is connected to nodes 3, 8, 9, 1.
Node 3 is connected to nodes 11, 7.
Node 8 is connected to node 9.
Node 9 is connected to node 6.
Node 6 is connected to node 9.
Node 11 is connected to nodes 5, 9, 7.
Node 4 is connected to node 7.
Node 10 is connected to nodes 9, 6.
Node 0 is connected to node 2.
Node 2 is connected to nodes 9, 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,18,True,Find the strongly connected component containing node 8. ,[8],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 6.
Search from node 6.
Node 9 is a root node, find a new strongly connected component: [6, 9].
Node 8 is a root node, find a new strongly connected component: [8].
So the strongly connected component containing node 8 is ",0.0833333333333333,272
connected_component,"[(3, 8), (3, 11), (8, 2), (11, 0), (2, 4), (12, 7), (12, 0), (7, 0), (6, 13), (6, 9), (13, 5), (9, 1), (9, 10), (5, 10)]","{3: [8, 11],
8: [3, 2],
11: [3, 0],
2: [8, 4],
12: [7, 0],
7: [12, 0],
0: [12, 7, 11],
6: [13, 9],
13: [6, 5],
9: [6, 1, 10],
5: [13, 10],
4: [2],
1: [9],
10: [9, 5]}","Node 3 is connected to nodes 8, 11.
Node 8 is connected to nodes 3, 2.
Node 11 is connected to nodes 3, 0.
Node 2 is connected to nodes 8, 4.
Node 12 is connected to nodes 7, 0.
Node 7 is connected to nodes 12, 0.
Node 0 is connected to nodes 12, 7, 11.
Node 6 is connected to nodes 13, 9.
Node 13 is connected to nodes 6, 5.
Node 9 is connected to nodes 6, 1, 10.
Node 5 is connected to nodes 13, 10.
Node 4 is connected to node 2.
Node 1 is connected to node 9.
Node 10 is connected to nodes 9, 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,14,False,Find the connected component containing node 12. ,"[12, 7, 0, 11, 3, 8, 2, 4]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 12, add it to the connected component. The current connected component is [12].
Visit node 7, add it to the connected component. The current connected component is [12, 7].
Visit node 0, add it to the connected component. The current connected component is [12, 7, 0].
Visit node 11, add it to the connected component. The current connected component is [12, 7, 0, 11].
Visit node 3, add it to the connected component. The current connected component is [12, 7, 0, 11, 3].
Visit node 8, add it to the connected component. The current connected component is [12, 7, 0, 11, 3, 8].
Visit node 2, add it to the connected component. The current connected component is [12, 7, 0, 11, 3, 8, 2].
Visit node 4, add it to the connected component. The current connected component is [12, 7, 0, 11, 3, 8, 2, 4].
Thus, the connected component containing node 12 is ",0.5714285714285714,273
connected_component,"[(7, 0), (7, 1), (0, 4), (0, 7), (0, 2), (1, 10), (10, 6), (10, 11), (10, 0), (10, 4), (10, 8), (6, 0), (6, 7), (11, 3), (4, 3), (4, 11), (4, 0), (8, 7), (8, 4), (3, 2), (3, 8), (2, 1), (9, 8), (9, 11), (5, 11)]","{7: [0, 1],
0: [4, 7, 2],
1: [10],
10: [6, 11, 0, 4, 8],
6: [0, 7],
11: [3],
4: [3, 11, 0],
8: [7, 4],
3: [2, 8],
2: [1],
9: [8, 11],
5: [11]}","Node 7 is connected to nodes 0, 1.
Node 0 is connected to nodes 4, 7, 2.
Node 1 is connected to node 10.
Node 10 is connected to nodes 6, 11, 0, 4, 8.
Node 6 is connected to nodes 0, 7.
Node 11 is connected to node 3.
Node 4 is connected to nodes 3, 11, 0.
Node 8 is connected to nodes 7, 4.
Node 3 is connected to nodes 2, 8.
Node 2 is connected to node 1.
Node 9 is connected to nodes 8, 11.
Node 5 is connected to node 11.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,25,True,Find the strongly connected component containing node 2. ,"[6, 7, 8, 3, 11, 4, 0, 10, 1, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 6.
Search from node 6.
Node 2 is a root node, find a new strongly connected component: [6, 7, 8, 3, 11, 4, 0, 10, 1, 2].
So the strongly connected component containing node 2 is ",0.8333333333333334,274
connected_component,"[(5, 4), (4, 5), (4, 7), (4, 0), (7, 1), (1, 6), (1, 8), (1, 7), (1, 0), (0, 1), (0, 6), (0, 3), (0, 2), (0, 5), (0, 7), (6, 3), (6, 2), (6, 7), (3, 2), (3, 7), (2, 7), (2, 0), (2, 6), (2, 3), (2, 4), (2, 8), (8, 5), (8, 7), (8, 0), (8, 1), (8, 3), (9, 2), (9, 5), (9, 4)]","{5: [4],
4: [5, 7, 0],
7: [1],
1: [6, 8, 7, 0],
0: [1, 6, 3, 2, 5, 7],
6: [3, 2, 7],
3: [2, 7],
2: [7, 0, 6, 3, 4, 8],
8: [5, 7, 0, 1, 3],
9: [2, 5, 4]}","Node 5 is connected to node 4.
Node 4 is connected to nodes 5, 7, 0.
Node 7 is connected to node 1.
Node 1 is connected to nodes 6, 8, 7, 0.
Node 0 is connected to nodes 1, 6, 3, 2, 5, 7.
Node 6 is connected to nodes 3, 2, 7.
Node 3 is connected to nodes 2, 7.
Node 2 is connected to nodes 7, 0, 6, 3, 4, 8.
Node 8 is connected to nodes 5, 7, 0, 1, 3.
Node 9 is connected to nodes 2, 5, 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,34,True,Find the strongly connected component containing node 8. ,"[5, 4, 7, 3, 2, 6, 1, 0, 8]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 8.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Node 8 is a root node, find a new strongly connected component: [5, 4, 7, 3, 2, 6, 1, 0, 8].
So the strongly connected component containing node 8 is ",0.9,275
connected_component,"[(3, 11), (3, 1), (11, 2), (11, 6), (1, 9), (1, 0), (1, 10), (1, 6), (1, 11), (5, 4), (5, 7), (5, 11), (5, 9), (5, 12), (4, 11), (4, 1), (4, 10), (7, 5), (9, 0), (9, 2), (12, 9), (12, 0), (10, 6), (10, 9), (8, 1), (8, 10), (2, 0), (2, 11), (6, 2), (6, 10), (0, 10), (0, 7), (0, 1)]","{3: [11, 1],
11: [2, 6],
1: [9, 0, 10, 6, 11],
5: [4, 7, 11, 9, 12],
4: [11, 1, 10],
7: [5],
9: [0, 2],
12: [9, 0],
10: [6, 9],
8: [1, 10],
2: [0, 11],
6: [2, 10],
0: [10, 7, 1]}","Node 3 is connected to nodes 11, 1.
Node 11 is connected to nodes 2, 6.
Node 1 is connected to nodes 9, 0, 10, 6, 11.
Node 5 is connected to nodes 4, 7, 11, 9, 12.
Node 4 is connected to nodes 11, 1, 10.
Node 7 is connected to node 5.
Node 9 is connected to nodes 0, 2.
Node 12 is connected to nodes 9, 0.
Node 10 is connected to nodes 6, 9.
Node 8 is connected to nodes 1, 10.
Node 2 is connected to nodes 0, 11.
Node 6 is connected to nodes 2, 10.
Node 0 is connected to nodes 10, 7, 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,33,True,Find the strongly connected component containing node 11. ,"[12, 4, 5, 7, 9, 10, 6, 1, 0, 2, 11]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 11.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 12.
Search from node 12.
Node 11 is a root node, find a new strongly connected component: [12, 4, 5, 7, 9, 10, 6, 1, 0, 2, 11].
So the strongly connected component containing node 11 is ",0.8461538461538461,276
connected_component,"[(11, 0), (11, 14), (11, 7), (0, 8), (0, 2), (0, 6), (14, 12), (14, 2), (14, 6), (7, 13), (7, 5), (7, 14), (2, 8), (4, 5), (4, 9), (5, 1), (5, 2), (5, 4), (9, 14), (9, 7), (9, 12), (9, 8), (9, 2), (1, 2), (1, 4), (1, 9), (13, 12), (10, 0), (10, 9), (3, 5), (3, 14), (3, 1)]","{11: [0, 14, 7],
0: [8, 2, 6],
14: [12, 2, 6],
7: [13, 5, 14],
2: [8],
8: [],
4: [5, 9],
5: [1, 2, 4],
9: [14, 7, 12, 8, 2],
1: [2, 4, 9],
6: [],
12: [],
13: [12],
10: [0, 9],
3: [5, 14, 1]}","Node 11 is connected to nodes 0, 14, 7.
Node 0 is connected to nodes 8, 2, 6.
Node 14 is connected to nodes 12, 2, 6.
Node 7 is connected to nodes 13, 5, 14.
Node 2 is connected to node 8.
Node 4 is connected to nodes 5, 9.
Node 5 is connected to nodes 1, 2, 4.
Node 9 is connected to nodes 14, 7, 12, 8, 2.
Node 1 is connected to nodes 2, 4, 9.
Node 13 is connected to node 12.
Node 10 is connected to nodes 0, 9.
Node 3 is connected to nodes 5, 14, 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,32,True,Find the strongly connected component containing node 1. ,"[4, 5, 7, 9, 1]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 1.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 12.
Search from node 12.
Node 12 is a root node, find a new strongly connected component: [12].
Node 13 is a root node, find a new strongly connected component: [13].
Visit neighbor node 14.
Search from node 14.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Node 14 is a root node, find a new strongly connected component: [14].
Node 1 is a root node, find a new strongly connected component: [4, 5, 7, 9, 1].
So the strongly connected component containing node 1 is ",0.3333333333333333,277
connected_component,"[(0, 4), (4, 12), (4, 7), (8, 3), (3, 5), (12, 4), (7, 8), (1, 3), (2, 10), (2, 3), (10, 2), (6, 7), (6, 3), (9, 3), (9, 2), (9, 6), (9, 10), (5, 2), (5, 3), (11, 1), (11, 2)]","{0: [4],
4: [12, 7],
8: [3],
3: [5],
12: [4],
7: [8],
1: [3],
2: [10, 3],
10: [2],
6: [7, 3],
9: [3, 2, 6, 10],
5: [2, 3],
11: [1, 2]}","Node 0 is connected to node 4.
Node 4 is connected to nodes 12, 7.
Node 8 is connected to node 3.
Node 3 is connected to node 5.
Node 12 is connected to node 4.
Node 7 is connected to node 8.
Node 1 is connected to node 3.
Node 2 is connected to nodes 10, 3.
Node 10 is connected to node 2.
Node 6 is connected to nodes 7, 3.
Node 9 is connected to nodes 3, 2, 6, 10.
Node 5 is connected to nodes 2, 3.
Node 11 is connected to nodes 1, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,21,True,Find the strongly connected component containing node 5. ,"[3, 10, 2, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 3.
Search from node 3.
Node 5 is a root node, find a new strongly connected component: [3, 10, 2, 5].
So the strongly connected component containing node 5 is ",0.3076923076923077,278
connected_component,"[(0, 1), (0, 7), (0, 8), (0, 5), (0, 9), (0, 4), (0, 12), (0, 6), (1, 8), (1, 10), (1, 9), (1, 3), (1, 12), (1, 6), (1, 13), (1, 2), (7, 8), (7, 10), (7, 9), (7, 4), (7, 12), (7, 13), (8, 10), (8, 5), (8, 9), (8, 4), (8, 6), (8, 13), (8, 2), (5, 10), (5, 9), (5, 3), (5, 4), (5, 12), (5, 6), (5, 13), (5, 2), (9, 10), (9, 4), (9, 12), (9, 11), (9, 6), (9, 13), (9, 2), (4, 10), (4, 3), (4, 12), (4, 11), (4, 13), (4, 2), (12, 10), (12, 3), (12, 11), (12, 6), (12, 13), (6, 10), (6, 3), (6, 13), (6, 2), (10, 3), (10, 11), (10, 13), (3, 11), (3, 2), (13, 11), (13, 2), (2, 11)]","{0: [1, 7, 8, 5, 9, 4, 12, 6],
1: [0, 8, 10, 9, 3, 12, 6, 13, 2],
7: [0, 8, 10, 9, 4, 12, 13],
8: [0, 1, 7, 10, 5, 9, 4, 6, 13, 2],
5: [0, 8, 10, 9, 3, 4, 12, 6, 13, 2],
9: [0, 1, 7, 8, 10, 5, 4, 12, 11, 6, 13, 2],
4: [0, 7, 8, 10, 5, 9, 3, 12, 11, 13, 2],
12: [0, 1, 7, 10, 5, 9, 3, 4, 11, 6, 13],
6: [0, 1, 8, 10, 5, 9, 3, 12, 13, 2],
10: [1, 7, 8, 5, 9, 3, 4, 12, 11, 6, 13],
3: [1, 10, 5, 4, 12, 11, 6, 2],
13: [1, 7, 8, 10, 5, 9, 4, 12, 11, 6, 2],
2: [1, 8, 5, 9, 3, 4, 11, 6, 13],
11: [10, 9, 3, 4, 12, 13, 2]}","Node 0 is connected to nodes 1, 7, 8, 5, 9, 4, 12, 6.
Node 1 is connected to nodes 0, 8, 10, 9, 3, 12, 6, 13, 2.
Node 7 is connected to nodes 0, 8, 10, 9, 4, 12, 13.
Node 8 is connected to nodes 0, 1, 7, 10, 5, 9, 4, 6, 13, 2.
Node 5 is connected to nodes 0, 8, 10, 9, 3, 4, 12, 6, 13, 2.
Node 9 is connected to nodes 0, 1, 7, 8, 10, 5, 4, 12, 11, 6, 13, 2.
Node 4 is connected to nodes 0, 7, 8, 10, 5, 9, 3, 12, 11, 13, 2.
Node 12 is connected to nodes 0, 1, 7, 10, 5, 9, 3, 4, 11, 6, 13.
Node 6 is connected to nodes 0, 1, 8, 10, 5, 9, 3, 12, 13, 2.
Node 10 is connected to nodes 1, 7, 8, 5, 9, 3, 4, 12, 11, 6, 13.
Node 3 is connected to nodes 1, 10, 5, 4, 12, 11, 6, 2.
Node 13 is connected to nodes 1, 7, 8, 10, 5, 9, 4, 12, 11, 6, 2.
Node 2 is connected to nodes 1, 8, 5, 9, 3, 4, 11, 6, 13.
Node 11 is connected to nodes 10, 9, 3, 4, 12, 13, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,67,False,Find the connected component containing node 11. ,"[11, 13, 12, 10, 9, 8, 7, 4, 5, 6, 3, 2, 1, 0]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 11, add it to the connected component. The current connected component is [11].
Visit node 13, add it to the connected component. The current connected component is [11, 13].
Visit node 12, add it to the connected component. The current connected component is [11, 13, 12].
Visit node 10, add it to the connected component. The current connected component is [11, 13, 12, 10].
Visit node 9, add it to the connected component. The current connected component is [11, 13, 12, 10, 9].
Visit node 8, add it to the connected component. The current connected component is [11, 13, 12, 10, 9, 8].
Visit node 7, add it to the connected component. The current connected component is [11, 13, 12, 10, 9, 8, 7].
Visit node 4, add it to the connected component. The current connected component is [11, 13, 12, 10, 9, 8, 7, 4].
Visit node 5, add it to the connected component. The current connected component is [11, 13, 12, 10, 9, 8, 7, 4, 5].
Visit node 6, add it to the connected component. The current connected component is [11, 13, 12, 10, 9, 8, 7, 4, 5, 6].
Visit node 3, add it to the connected component. The current connected component is [11, 13, 12, 10, 9, 8, 7, 4, 5, 6, 3].
Visit node 2, add it to the connected component. The current connected component is [11, 13, 12, 10, 9, 8, 7, 4, 5, 6, 3, 2].
Visit node 1, add it to the connected component. The current connected component is [11, 13, 12, 10, 9, 8, 7, 4, 5, 6, 3, 2, 1].
Visit node 0, add it to the connected component. The current connected component is [11, 13, 12, 10, 9, 8, 7, 4, 5, 6, 3, 2, 1, 0].
Thus, the connected component containing node 11 is ",1.0,279
connected_component,"[(11, 8), (11, 10), (11, 4), (8, 4), (10, 7), (4, 0), (5, 3), (5, 9), (3, 12), (3, 13), (12, 2), (13, 1), (6, 2), (6, 1)]","{11: [8, 10, 4],
8: [11, 4],
10: [11, 7],
4: [11, 8, 0],
5: [3, 9],
3: [5, 12, 13],
9: [5],
12: [3, 2],
13: [3, 1],
7: [10],
6: [2, 1],
2: [6, 12],
1: [6, 13],
0: [4]}","Node 11 is connected to nodes 8, 10, 4.
Node 8 is connected to nodes 11, 4.
Node 10 is connected to nodes 11, 7.
Node 4 is connected to nodes 11, 8, 0.
Node 5 is connected to nodes 3, 9.
Node 3 is connected to nodes 5, 12, 13.
Node 9 is connected to node 5.
Node 12 is connected to nodes 3, 2.
Node 13 is connected to nodes 3, 1.
Node 7 is connected to node 10.
Node 6 is connected to nodes 2, 1.
Node 2 is connected to nodes 6, 12.
Node 1 is connected to nodes 6, 13.
Node 0 is connected to node 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,14,False,Find the connected component containing node 8. ,"[8, 4, 11, 10, 7, 0]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 8, add it to the connected component. The current connected component is [8].
Visit node 4, add it to the connected component. The current connected component is [8, 4].
Visit node 11, add it to the connected component. The current connected component is [8, 4, 11].
Visit node 10, add it to the connected component. The current connected component is [8, 4, 11, 10].
Visit node 7, add it to the connected component. The current connected component is [8, 4, 11, 10, 7].
Visit node 0, add it to the connected component. The current connected component is [8, 4, 11, 10, 7, 0].
Thus, the connected component containing node 8 is ",0.4285714285714285,280
connected_component,"[(3, 0), (0, 1), (0, 3), (0, 5), (0, 7), (4, 7), (4, 2), (4, 1), (4, 3), (7, 0), (7, 6), (7, 3), (2, 6), (2, 4), (2, 5), (1, 3), (1, 0), (6, 4), (6, 0), (6, 1)]","{3: [0],
0: [1, 3, 5, 7],
4: [7, 2, 1, 3],
7: [0, 6, 3],
2: [6, 4, 5],
1: [3, 0],
6: [4, 0, 1],
5: []}","Node 3 is connected to node 0.
Node 0 is connected to nodes 1, 3, 5, 7.
Node 4 is connected to nodes 7, 2, 1, 3.
Node 7 is connected to nodes 0, 6, 3.
Node 2 is connected to nodes 6, 4, 5.
Node 1 is connected to nodes 3, 0.
Node 6 is connected to nodes 4, 0, 1.","[0, 1, 2, 3, 4, 5, 6, 7]",8,20,True,Find the strongly connected component containing node 7. ,"[2, 4, 6, 3, 1, 0, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 2.
Search from node 2.
Node 7 is a root node, find a new strongly connected component: [2, 4, 6, 3, 1, 0, 7].
So the strongly connected component containing node 7 is ",0.875,281
connected_component,"[(11, 3), (11, 6), (3, 10), (3, 5), (3, 8), (3, 11), (6, 7), (6, 9), (6, 0), (6, 2), (10, 11), (10, 3), (10, 7), (5, 8), (5, 2), (5, 11), (5, 6), (5, 10), (5, 0), (8, 4), (12, 7), (12, 0), (7, 9), (7, 0), (7, 2), (7, 6), (0, 1), (0, 9), (9, 0), (9, 5), (9, 6), (2, 1), (2, 5), (4, 9), (4, 8)]","{11: [3, 6],
3: [10, 5, 8, 11],
6: [7, 9, 0, 2],
10: [11, 3, 7],
5: [8, 2, 11, 6, 10, 0],
8: [4],
12: [7, 0],
7: [9, 0, 2, 6],
0: [1, 9],
9: [0, 5, 6],
2: [1, 5],
4: [9, 8],
1: []}","Node 11 is connected to nodes 3, 6.
Node 3 is connected to nodes 10, 5, 8, 11.
Node 6 is connected to nodes 7, 9, 0, 2.
Node 10 is connected to nodes 11, 3, 7.
Node 5 is connected to nodes 8, 2, 11, 6, 10, 0.
Node 8 is connected to node 4.
Node 12 is connected to nodes 7, 0.
Node 7 is connected to nodes 9, 0, 2, 6.
Node 0 is connected to nodes 1, 9.
Node 9 is connected to nodes 0, 5, 6.
Node 2 is connected to nodes 1, 5.
Node 4 is connected to nodes 9, 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,35,True,Find the strongly connected component containing node 6. ,"[7, 11, 3, 10, 4, 8, 2, 5, 9, 0, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 1.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 7.
Search from node 7.
Node 6 is a root node, find a new strongly connected component: [7, 11, 3, 10, 4, 8, 2, 5, 9, 0, 6].
So the strongly connected component containing node 6 is ",0.8461538461538461,282
connected_component,"[(13, 5), (5, 9), (2, 5), (2, 4), (4, 14), (4, 10), (9, 3), (14, 0), (14, 8), (14, 9), (14, 12), (14, 2), (0, 3), (3, 6), (3, 11), (11, 1), (11, 10), (11, 9), (11, 12), (11, 5), (1, 10), (1, 4), (1, 13), (1, 14), (1, 0), (1, 8), (10, 14), (6, 13), (6, 11), (6, 4), (7, 4)]","{13: [5],
5: [9],
2: [5, 4],
4: [14, 10],
9: [3],
14: [0, 8, 9, 12, 2],
0: [3],
8: [],
12: [],
3: [6, 11],
11: [1, 10, 9, 12, 5],
1: [10, 4, 13, 14, 0, 8],
10: [14],
6: [13, 11, 4],
7: [4]}","Node 13 is connected to node 5.
Node 5 is connected to node 9.
Node 2 is connected to nodes 5, 4.
Node 4 is connected to nodes 14, 10.
Node 9 is connected to node 3.
Node 14 is connected to nodes 0, 8, 9, 12, 2.
Node 0 is connected to node 3.
Node 3 is connected to nodes 6, 11.
Node 11 is connected to nodes 1, 10, 9, 12, 5.
Node 1 is connected to nodes 10, 4, 13, 14, 0, 8.
Node 10 is connected to node 14.
Node 6 is connected to nodes 13, 11, 4.
Node 7 is connected to node 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]",15,31,True,Find the strongly connected component containing node 11. ,"[13, 9, 5, 2, 14, 10, 4, 6, 3, 0, 1, 11]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 11.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 14.
Search from node 14.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 12.
Search from node 12.
Node 12 is a root node, find a new strongly connected component: [12].
Visit neighbor node 13.
Search from node 13.
Node 11 is a root node, find a new strongly connected component: [13, 9, 5, 2, 14, 10, 4, 6, 3, 0, 1, 11].
So the strongly connected component containing node 11 is ",0.8,283
connected_component,"[(12, 7), (7, 0), (5, 13), (13, 12), (13, 3), (11, 1), (1, 5), (1, 6), (3, 10), (10, 9), (4, 10), (2, 8), (2, 7), (2, 6), (2, 3), (8, 7), (8, 0), (9, 6)]","{12: [7],
7: [0],
5: [13],
13: [12, 3],
11: [1],
1: [5, 6],
0: [],
3: [10],
10: [9],
4: [10],
2: [8, 7, 6, 3],
8: [7, 0],
6: [],
9: [6]}","Node 12 is connected to node 7.
Node 7 is connected to node 0.
Node 5 is connected to node 13.
Node 13 is connected to nodes 12, 3.
Node 11 is connected to node 1.
Node 1 is connected to nodes 5, 6.
Node 3 is connected to node 10.
Node 10 is connected to node 9.
Node 4 is connected to node 10.
Node 2 is connected to nodes 8, 7, 6, 3.
Node 8 is connected to nodes 7, 0.
Node 9 is connected to node 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,18,True,Find the strongly connected component containing node 10. ,[10],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 10.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Node 9 is a root node, find a new strongly connected component: [9].
Node 10 is a root node, find a new strongly connected component: [10].
So the strongly connected component containing node 10 is ",0.0714285714285714,284
connected_component,"[(2, 1), (1, 6), (1, 12), (1, 4), (1, 5), (1, 3), (6, 8), (6, 9), (6, 1), (12, 0), (12, 11), (12, 2), (0, 2), (0, 8), (0, 4), (11, 8), (11, 9), (4, 0), (4, 8), (5, 11), (7, 0), (10, 9), (10, 0), (3, 4), (3, 5)]","{2: [1],
1: [6, 12, 4, 5, 3],
6: [8, 9, 1],
8: [],
9: [],
12: [0, 11, 2],
0: [2, 8, 4],
11: [8, 9],
4: [0, 8],
5: [11],
7: [0],
10: [9, 0],
3: [4, 5]}","Node 2 is connected to node 1.
Node 1 is connected to nodes 6, 12, 4, 5, 3.
Node 6 is connected to nodes 8, 9, 1.
Node 12 is connected to nodes 0, 11, 2.
Node 0 is connected to nodes 2, 8, 4.
Node 11 is connected to nodes 8, 9.
Node 4 is connected to nodes 0, 8.
Node 5 is connected to node 11.
Node 7 is connected to node 0.
Node 10 is connected to nodes 9, 0.
Node 3 is connected to nodes 4, 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,25,True,Find the strongly connected component containing node 5. ,[5],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Node 11 is a root node, find a new strongly connected component: [11].
Node 5 is a root node, find a new strongly connected component: [5].
So the strongly connected component containing node 5 is ",0.0769230769230769,285
connected_component,"[(1, 0), (1, 7), (1, 4), (1, 5), (7, 1), (7, 0), (4, 0), (5, 8), (8, 0), (8, 4), (8, 5), (6, 3), (6, 5), (3, 6), (3, 4), (3, 2), (2, 8), (2, 6)]","{1: [0, 7, 4, 5],
0: [],
7: [1, 0],
4: [0],
5: [8],
8: [0, 4, 5],
6: [3, 5],
3: [6, 4, 2],
2: [8, 6]}","Node 1 is connected to nodes 0, 7, 4, 5.
Node 7 is connected to nodes 1, 0.
Node 4 is connected to node 0.
Node 5 is connected to node 8.
Node 8 is connected to nodes 0, 4, 5.
Node 6 is connected to nodes 3, 5.
Node 3 is connected to nodes 6, 4, 2.
Node 2 is connected to nodes 8, 6.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,18,True,Find the strongly connected component containing node 0. ,[0],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
So the strongly connected component containing node 0 is ",0.1111111111111111,286
connected_component,"[(0, 10), (0, 2), (10, 7), (10, 1), (2, 9), (2, 3), (2, 8), (2, 7), (5, 11), (5, 1), (5, 7), (5, 4), (5, 2), (11, 3), (11, 6), (11, 7), (11, 4), (1, 10), (1, 5), (1, 11), (7, 2), (7, 9), (7, 0), (7, 3), (7, 8), (4, 1), (6, 7), (8, 7), (8, 2)]","{0: [10, 2],
10: [7, 1],
2: [9, 3, 8, 7],
5: [11, 1, 7, 4, 2],
11: [3, 6, 7, 4],
1: [10, 5, 11],
7: [2, 9, 0, 3, 8],
4: [1],
3: [],
6: [7],
8: [7, 2],
9: []}","Node 0 is connected to nodes 10, 2.
Node 10 is connected to nodes 7, 1.
Node 2 is connected to nodes 9, 3, 8, 7.
Node 5 is connected to nodes 11, 1, 7, 4, 2.
Node 11 is connected to nodes 3, 6, 7, 4.
Node 1 is connected to nodes 10, 5, 11.
Node 7 is connected to nodes 2, 9, 0, 3, 8.
Node 4 is connected to node 1.
Node 6 is connected to node 7.
Node 8 is connected to nodes 7, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,29,True,Find the strongly connected component containing node 0. ,"[5, 8, 2, 7, 6, 4, 11, 1, 10, 0]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 0.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Visit neighbor node 5.
Search from node 5.
Node 0 is a root node, find a new strongly connected component: [5, 8, 2, 7, 6, 4, 11, 1, 10, 0].
So the strongly connected component containing node 0 is ",0.8333333333333334,287
connected_component,"[(3, 8), (3, 0), (3, 4), (8, 4), (0, 9), (4, 5), (4, 7), (2, 11), (2, 6), (11, 6), (11, 1), (6, 10)]","{3: [8, 0, 4],
8: [3, 4],
0: [3, 9],
4: [3, 8, 5, 7],
2: [11, 6],
11: [2, 6, 1],
6: [2, 11, 10],
1: [11],
10: [6],
9: [0],
5: [4],
7: [4]}","Node 3 is connected to nodes 8, 0, 4.
Node 8 is connected to nodes 3, 4.
Node 0 is connected to nodes 3, 9.
Node 4 is connected to nodes 3, 8, 5, 7.
Node 2 is connected to nodes 11, 6.
Node 11 is connected to nodes 2, 6, 1.
Node 6 is connected to nodes 2, 11, 10.
Node 1 is connected to node 11.
Node 10 is connected to node 6.
Node 9 is connected to node 0.
Node 5 is connected to node 4.
Node 7 is connected to node 4.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,12,False,Find the connected component containing node 10. ,"[10, 6, 11, 2, 1]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 10, add it to the connected component. The current connected component is [10].
Visit node 6, add it to the connected component. The current connected component is [10, 6].
Visit node 11, add it to the connected component. The current connected component is [10, 6, 11].
Visit node 2, add it to the connected component. The current connected component is [10, 6, 11, 2].
Visit node 1, add it to the connected component. The current connected component is [10, 6, 11, 2, 1].
Thus, the connected component containing node 10 is ",0.4166666666666667,288
connected_component,"[(6, 5), (6, 3), (6, 7), (5, 7), (5, 4), (3, 2), (3, 7), (3, 0), (7, 2), (7, 1), (7, 0), (4, 2)]","{6: [5, 3, 7],
5: [6, 7, 4],
3: [6, 2, 7, 0],
7: [6, 5, 3, 2, 1, 0],
4: [5, 2],
2: [3, 4, 7],
0: [3, 7],
1: [7]}","Node 6 is connected to nodes 5, 3, 7.
Node 5 is connected to nodes 6, 7, 4.
Node 3 is connected to nodes 6, 2, 7, 0.
Node 7 is connected to nodes 6, 5, 3, 2, 1, 0.
Node 4 is connected to nodes 5, 2.
Node 2 is connected to nodes 3, 4, 7.
Node 0 is connected to nodes 3, 7.
Node 1 is connected to node 7.","[0, 1, 2, 3, 4, 5, 6, 7]",8,12,False,Find the connected component containing node 0. ,"[0, 7, 6, 5, 4, 2, 3, 1]","Let's find the connected component step by step, and we can use Depth-First Search.
Visit node 0, add it to the connected component. The current connected component is [0].
Visit node 7, add it to the connected component. The current connected component is [0, 7].
Visit node 6, add it to the connected component. The current connected component is [0, 7, 6].
Visit node 5, add it to the connected component. The current connected component is [0, 7, 6, 5].
Visit node 4, add it to the connected component. The current connected component is [0, 7, 6, 5, 4].
Visit node 2, add it to the connected component. The current connected component is [0, 7, 6, 5, 4, 2].
Visit node 3, add it to the connected component. The current connected component is [0, 7, 6, 5, 4, 2, 3].
Visit node 1, add it to the connected component. The current connected component is [0, 7, 6, 5, 4, 2, 3, 1].
Thus, the connected component containing node 0 is ",1.0,289
connected_component,"[(0, 6), (0, 5), (6, 10), (6, 4), (6, 8), (6, 13), (9, 6), (8, 2), (2, 9), (2, 1), (2, 6), (11, 13), (11, 7), (11, 5), (11, 9), (13, 5), (13, 2), (13, 11), (7, 6), (7, 5), (1, 13), (1, 6), (1, 10), (10, 8), (10, 1), (10, 6), (10, 3), (4, 0), (4, 6), (4, 3), (3, 2), (3, 0), (3, 7), (12, 2), (12, 11), (12, 5)]","{0: [6, 5],
6: [10, 4, 8, 13],
5: [],
9: [6],
8: [2],
2: [9, 1, 6],
11: [13, 7, 5, 9],
13: [5, 2, 11],
7: [6, 5],
1: [13, 6, 10],
10: [8, 1, 6, 3],
4: [0, 6, 3],
3: [2, 0, 7],
12: [2, 11, 5]}","Node 0 is connected to nodes 6, 5.
Node 6 is connected to nodes 10, 4, 8, 13.
Node 9 is connected to node 6.
Node 8 is connected to node 2.
Node 2 is connected to nodes 9, 1, 6.
Node 11 is connected to nodes 13, 7, 5, 9.
Node 13 is connected to nodes 5, 2, 11.
Node 7 is connected to nodes 6, 5.
Node 1 is connected to nodes 13, 6, 10.
Node 10 is connected to nodes 8, 1, 6, 3.
Node 4 is connected to nodes 0, 6, 3.
Node 3 is connected to nodes 2, 0, 7.
Node 12 is connected to nodes 2, 11, 5.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,36,True,Find the strongly connected component containing node 9. ,"[4, 11, 13, 7, 0, 3, 10, 1, 2, 8, 6, 9]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 9.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 13.
Search from node 13.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 4.
Search from node 4.
Node 9 is a root node, find a new strongly connected component: [4, 11, 13, 7, 0, 3, 10, 1, 2, 8, 6, 9].
So the strongly connected component containing node 9 is ",0.8571428571428571,290
connected_component,"[(0, 5), (5, 4), (1, 4), (4, 0), (6, 3), (6, 2), (3, 1), (3, 6), (7, 2), (7, 0), (7, 5), (7, 6)]","{0: [5],
5: [4],
1: [4],
4: [0],
6: [3, 2],
3: [1, 6],
2: [],
7: [2, 0, 5, 6]}","Node 0 is connected to node 5.
Node 5 is connected to node 4.
Node 1 is connected to node 4.
Node 4 is connected to node 0.
Node 6 is connected to nodes 3, 2.
Node 3 is connected to nodes 1, 6.
Node 7 is connected to nodes 2, 0, 5, 6.","[0, 1, 2, 3, 4, 5, 6, 7]",8,12,True,Find the strongly connected component containing node 7. ,[7],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 4.
Search from node 4.
Node 0 is a root node, find a new strongly connected component: [4, 5, 0].
Visit neighbor node 2.
Search from node 2.
Node 2 is a root node, find a new strongly connected component: [2].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 1.
Search from node 1.
Node 1 is a root node, find a new strongly connected component: [1].
Node 6 is a root node, find a new strongly connected component: [3, 6].
Node 7 is a root node, find a new strongly connected component: [7].
So the strongly connected component containing node 7 is ",0.125,291
connected_component,"[(4, 3), (7, 3), (7, 6), (7, 9), (7, 8), (6, 11), (6, 3), (9, 2), (9, 7), (8, 4), (8, 5), (8, 10), (1, 6), (1, 0), (11, 9), (11, 2), (11, 1), (5, 1), (2, 7), (2, 6), (2, 0)]","{4: [3],
3: [],
7: [3, 6, 9, 8],
6: [11, 3],
9: [2, 7],
8: [4, 5, 10],
1: [6, 0],
0: [],
11: [9, 2, 1],
5: [1],
2: [7, 6, 0],
10: []}","Node 4 is connected to node 3.
Node 7 is connected to nodes 3, 6, 9, 8.
Node 6 is connected to nodes 11, 3.
Node 9 is connected to nodes 2, 7.
Node 8 is connected to nodes 4, 5, 10.
Node 1 is connected to nodes 6, 0.
Node 11 is connected to nodes 9, 2, 1.
Node 5 is connected to node 1.
Node 2 is connected to nodes 7, 6, 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]",12,21,True,Find the strongly connected component containing node 5. ,"[8, 7, 2, 9, 11, 6, 1, 5]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 5.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 3.
Search from node 3.
Node 3 is a root node, find a new strongly connected component: [3].
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 7.
Search from node 7.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 10.
Search from node 10.
Node 10 is a root node, find a new strongly connected component: [10].
Visit neighbor node 4.
Search from node 4.
Node 4 is a root node, find a new strongly connected component: [4].
Node 5 is a root node, find a new strongly connected component: [8, 7, 2, 9, 11, 6, 1, 5].
So the strongly connected component containing node 5 is ",0.6666666666666666,292
connected_component,"[(6, 4), (6, 2), (6, 1), (4, 3), (2, 9), (1, 2), (1, 9), (3, 9), (3, 1), (3, 4), (0, 5), (5, 6), (5, 7), (5, 3), (5, 9), (5, 1), (9, 6), (9, 4), (9, 0), (7, 1), (7, 5), (8, 2), (8, 1)]","{6: [4, 2, 1],
4: [3],
2: [9],
1: [2, 9],
3: [9, 1, 4],
0: [5],
5: [6, 7, 3, 9, 1],
9: [6, 4, 0],
7: [1, 5],
8: [2, 1]}","Node 6 is connected to nodes 4, 2, 1.
Node 4 is connected to node 3.
Node 2 is connected to node 9.
Node 1 is connected to nodes 2, 9.
Node 3 is connected to nodes 9, 1, 4.
Node 0 is connected to node 5.
Node 5 is connected to nodes 6, 7, 3, 9, 1.
Node 9 is connected to nodes 6, 4, 0.
Node 7 is connected to nodes 1, 5.
Node 8 is connected to nodes 2, 1.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,23,True,Find the strongly connected component containing node 2. ,"[7, 6, 4, 3, 1, 5, 0, 9, 2]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 7.
Search from node 7.
Node 2 is a root node, find a new strongly connected component: [7, 6, 4, 3, 1, 5, 0, 9, 2].
So the strongly connected component containing node 2 is ",0.9,293
connected_component,"[(0, 2), (0, 6), (0, 5), (0, 7), (2, 5), (2, 8), (6, 1), (6, 4), (5, 7), (5, 0), (5, 9), (7, 8), (4, 9), (4, 5), (4, 2), (1, 7), (1, 2), (3, 1), (3, 2)]","{0: [2, 6, 5, 7],
2: [5, 8],
6: [1, 4],
5: [7, 0, 9],
7: [8],
8: [],
4: [9, 5, 2],
9: [],
1: [7, 2],
3: [1, 2]}","Node 0 is connected to nodes 2, 6, 5, 7.
Node 2 is connected to nodes 5, 8.
Node 6 is connected to nodes 1, 4.
Node 5 is connected to nodes 7, 0, 9.
Node 7 is connected to node 8.
Node 4 is connected to nodes 9, 5, 2.
Node 1 is connected to nodes 7, 2.
Node 3 is connected to nodes 1, 2.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9]",10,19,True,Find the strongly connected component containing node 6. ,"[4, 0, 5, 2, 1, 6]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 8.
Search from node 8.
Node 8 is a root node, find a new strongly connected component: [8].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 7.
Search from node 7.
Node 7 is a root node, find a new strongly connected component: [7].
Visit neighbor node 9.
Search from node 9.
Node 9 is a root node, find a new strongly connected component: [9].
Visit neighbor node 4.
Search from node 4.
Node 6 is a root node, find a new strongly connected component: [4, 0, 5, 2, 1, 6].
So the strongly connected component containing node 6 is ",0.6,294
connected_component,"[(12, 4), (4, 3), (3, 2), (2, 1), (0, 2), (7, 1), (7, 12), (1, 6), (1, 2), (1, 4), (8, 10), (8, 11), (10, 0), (10, 7), (10, 5), (11, 12), (11, 0), (5, 9), (5, 1), (5, 3), (9, 1), (9, 0), (6, 10)]","{12: [4],
4: [3],
3: [2],
2: [1],
0: [2],
7: [1, 12],
1: [6, 2, 4],
8: [10, 11],
10: [0, 7, 5],
11: [12, 0],
5: [9, 1, 3],
9: [1, 0],
6: [10]}","Node 12 is connected to node 4.
Node 4 is connected to node 3.
Node 3 is connected to node 2.
Node 2 is connected to node 1.
Node 0 is connected to node 2.
Node 7 is connected to nodes 1, 12.
Node 1 is connected to nodes 6, 2, 4.
Node 8 is connected to nodes 10, 11.
Node 10 is connected to nodes 0, 7, 5.
Node 11 is connected to nodes 12, 0.
Node 5 is connected to nodes 9, 1, 3.
Node 9 is connected to nodes 1, 0.
Node 6 is connected to node 10.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]",13,23,True,Find the strongly connected component containing node 12. ,"[7, 9, 5, 0, 10, 6, 1, 2, 3, 4, 12]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 12.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 3.
Search from node 3.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 7.
Search from node 7.
Node 12 is a root node, find a new strongly connected component: [7, 9, 5, 0, 10, 6, 1, 2, 3, 4, 12].
So the strongly connected component containing node 12 is ",0.8461538461538461,295
connected_component,"[(5, 3), (5, 4), (3, 5), (3, 6), (6, 3), (6, 4), (6, 5), (7, 3), (7, 1), (7, 5), (7, 6), (1, 5), (2, 0)]","{5: [3, 4],
3: [5, 6],
4: [],
6: [3, 4, 5],
7: [3, 1, 5, 6],
1: [5],
2: [0],
0: []}","Node 5 is connected to nodes 3, 4.
Node 3 is connected to nodes 5, 6.
Node 6 is connected to nodes 3, 4, 5.
Node 7 is connected to nodes 3, 1, 5, 6.
Node 1 is connected to node 5.
Node 2 is connected to node 0.","[0, 1, 2, 3, 4, 5, 6, 7]",8,13,True,Find the strongly connected component containing node 2. ,[2],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 2.
Visit neighbor node 0.
Search from node 0.
Node 0 is a root node, find a new strongly connected component: [0].
Node 2 is a root node, find a new strongly connected component: [2].
So the strongly connected component containing node 2 is ",0.125,296
connected_component,"[(4, 2), (2, 6), (7, 0), (7, 2), (0, 8), (8, 5), (8, 1), (1, 7), (3, 4), (3, 0)]","{4: [2],
2: [6],
7: [0, 2],
0: [8],
8: [5, 1],
1: [7],
5: [],
6: [],
3: [4, 0]}","Node 4 is connected to node 2.
Node 2 is connected to node 6.
Node 7 is connected to nodes 0, 2.
Node 0 is connected to node 8.
Node 8 is connected to nodes 5, 1.
Node 1 is connected to node 7.
Node 3 is connected to nodes 4, 0.","[0, 1, 2, 3, 4, 5, 6, 7, 8]",9,10,True,Find the strongly connected component containing node 7. ,"[1, 8, 0, 7]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 7.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 5.
Search from node 5.
Node 5 is a root node, find a new strongly connected component: [5].
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 6.
Search from node 6.
Node 6 is a root node, find a new strongly connected component: [6].
Node 2 is a root node, find a new strongly connected component: [2].
Node 7 is a root node, find a new strongly connected component: [1, 8, 0, 7].
So the strongly connected component containing node 7 is ",0.4444444444444444,297
connected_component,"[(4, 5), (5, 4), (7, 2), (7, 3), (7, 0), (2, 4), (3, 2), (6, 2), (1, 6), (1, 2)]","{4: [5],
5: [4],
7: [2, 3, 0],
2: [4],
3: [2],
0: [],
6: [2],
1: [6, 2]}","Node 4 is connected to node 5.
Node 5 is connected to node 4.
Node 7 is connected to nodes 2, 3, 0.
Node 2 is connected to node 4.
Node 3 is connected to node 2.
Node 6 is connected to node 2.
Node 1 is connected to nodes 6, 2.","[0, 1, 2, 3, 4, 5, 6, 7]",8,10,True,Find the strongly connected component containing node 6. ,[6],"Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 6.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 5.
Search from node 5.
Node 4 is a root node, find a new strongly connected component: [5, 4].
Node 2 is a root node, find a new strongly connected component: [2].
Node 6 is a root node, find a new strongly connected component: [6].
So the strongly connected component containing node 6 is ",0.125,298
connected_component,"[(4, 1), (4, 6), (1, 13), (1, 9), (1, 10), (1, 8), (6, 2), (11, 1), (11, 3), (11, 2), (11, 9), (11, 5), (11, 0), (11, 7), (3, 9), (2, 4), (2, 3), (9, 0), (9, 3), (5, 10), (5, 6), (0, 7), (0, 11), (7, 0), (10, 1), (10, 3), (10, 2), (10, 4), (8, 1), (8, 10), (12, 2), (12, 10), (12, 8)]","{4: [1, 6],
1: [13, 9, 10, 8],
6: [2],
11: [1, 3, 2, 9, 5, 0, 7],
3: [9],
2: [4, 3],
9: [0, 3],
5: [10, 6],
0: [7, 11],
7: [0],
10: [1, 3, 2, 4],
8: [1, 10],
13: [],
12: [2, 10, 8]}","Node 4 is connected to nodes 1, 6.
Node 1 is connected to nodes 13, 9, 10, 8.
Node 6 is connected to node 2.
Node 11 is connected to nodes 1, 3, 2, 9, 5, 0, 7.
Node 3 is connected to node 9.
Node 2 is connected to nodes 4, 3.
Node 9 is connected to nodes 0, 3.
Node 5 is connected to nodes 10, 6.
Node 0 is connected to nodes 7, 11.
Node 7 is connected to node 0.
Node 10 is connected to nodes 1, 3, 2, 4.
Node 8 is connected to nodes 1, 10.
Node 12 is connected to nodes 2, 10, 8.","[0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]",14,33,True,Find the strongly connected component containing node 3. ,"[7, 5, 6, 4, 2, 10, 8, 1, 11, 0, 9, 3]","Let's find the strongly connected component step by step, and we can use the Tarjan algorithm.
Search from node 3.
Visit neighbor node 9.
Search from node 9.
Visit neighbor node 0.
Search from node 0.
Visit neighbor node 11.
Search from node 11.
Visit neighbor node 1.
Search from node 1.
Visit neighbor node 8.
Search from node 8.
Visit neighbor node 10.
Search from node 10.
Visit neighbor node 2.
Search from node 2.
Visit neighbor node 4.
Search from node 4.
Visit neighbor node 6.
Search from node 6.
Visit neighbor node 13.
Search from node 13.
Node 13 is a root node, find a new strongly connected component: [13].
Visit neighbor node 5.
Search from node 5.
Visit neighbor node 7.
Search from node 7.
Node 3 is a root node, find a new strongly connected component: [7, 5, 6, 4, 2, 10, 8, 1, 11, 0, 9, 3].
So the strongly connected component containing node 3 is ",0.8571428571428571,299
