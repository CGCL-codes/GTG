task,graph,graph_adj,graph_nl,nodes,num_nodes,num_edges,directed,question,answer,steps,n1,n2,id
bipartite,"[(LXU, QQA), (LXU, XBL), (LXU, QOE), (NWZ, QQA), (NWZ, XBL), (NWZ, FPU), (VRM, QQA), (VRM, FPU), (ZEN, CHR), (ZEN, TSY), (ZEN, XBL), (ZEN, QOE)]","{LXU: [QQA, XBL, QOE],
NWZ: [QQA, XBL, FPU],
VRM: [QQA, FPU],
ZEN: [CHR, TSY, XBL, QOE],
CHR: [ZEN],
QQA: [LXU, NWZ, VRM],
TSY: [ZEN],
XBL: [LXU, NWZ, ZEN],
FPU: [NWZ, VRM],
QOE: [LXU, ZEN]}","Node LXU is connected to nodes QQA, XBL, QOE.
Node NWZ is connected to nodes QQA, XBL, FPU.
Node VRM is connected to nodes QQA, FPU.
Node ZEN is connected to nodes CHR, TSY, XBL, QOE.
Node CHR is connected to node ZEN.
Node QQA is connected to nodes LXU, NWZ, VRM.
Node TSY is connected to node ZEN.
Node XBL is connected to nodes LXU, NWZ, ZEN.
Node FPU is connected to nodes NWZ, VRM.
Node QOE is connected to nodes LXU, ZEN.","[LXU, NWZ, VRM, ZEN, CHR, QQA, TSY, XBL, FPU, QOE]",10,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LXU NWZ VRM ZEN.
Nodes set 2 contains: CHR QQA TSY XBL FPU QOE.","[(LXU, QOE), (NWZ, XBL), (VRM, QQA), (ZEN, CHR)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LXU. Updated matching: {QQA: LXU}.
Search from node NWZ. Updated matching: {QQA: NWZ, XBL: LXU}.
Search from node VRM. Updated matching: {QQA: VRM, XBL: NWZ, QOE: LXU}.
Search from node ZEN. Updated matching: {QQA: VRM, XBL: NWZ, QOE: LXU, CHR: ZEN}.
So the maximum matching is ",4,6,0
bipartite,"[(JTP, AEV), (JTP, RJC), (JTP, JWF), (JTP, RRW), (QXT, URJ), (QXT, RJC), (QXT, RRW), (PET, AEV), (PET, RJC), (PET, JWF), (PET, AHJ), (LIT, CIY), (AGU, URJ), (AGU, CIY), (AGU, RRW)]","{JTP: [AEV, RJC, JWF, RRW],
QXT: [URJ, RJC, RRW],
PET: [AEV, RJC, JWF, AHJ],
LIT: [CIY],
AGU: [URJ, CIY, RRW],
AEV: [JTP, PET],
URJ: [QXT, AGU],
RJC: [JTP, QXT, PET],
CIY: [LIT, AGU],
JWF: [JTP, PET],
AHJ: [PET],
RRW: [JTP, QXT, AGU]}","Node JTP is connected to nodes AEV, RJC, JWF, RRW.
Node QXT is connected to nodes URJ, RJC, RRW.
Node PET is connected to nodes AEV, RJC, JWF, AHJ.
Node LIT is connected to node CIY.
Node AGU is connected to nodes URJ, CIY, RRW.
Node AEV is connected to nodes JTP, PET.
Node URJ is connected to nodes QXT, AGU.
Node RJC is connected to nodes JTP, QXT, PET.
Node CIY is connected to nodes LIT, AGU.
Node JWF is connected to nodes JTP, PET.
Node AHJ is connected to node PET.
Node RRW is connected to nodes JTP, QXT, AGU.","[JTP, QXT, PET, LIT, AGU, AEV, URJ, RJC, CIY, JWF, AHJ, RRW]",12,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JTP QXT PET LIT AGU.
Nodes set 2 contains: AEV URJ RJC CIY JWF AHJ RRW.","[(JTP, AEV), (QXT, RJC), (PET, JWF), (LIT, CIY), (AGU, URJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JTP. Updated matching: {AEV: JTP}.
Search from node QXT. Updated matching: {AEV: JTP, URJ: QXT}.
Search from node PET. Updated matching: {AEV: PET, URJ: QXT, RJC: JTP}.
Search from node LIT. Updated matching: {AEV: PET, URJ: QXT, RJC: JTP, CIY: LIT}.
Search from node AGU. Updated matching: {AEV: JTP, URJ: AGU, RJC: QXT, CIY: LIT, JWF: PET}.
So the maximum matching is ",5,7,1
bipartite,"[(GZM, FWF), (GZM, DAD), (GZM, MPS), (OOC, FWF), (OOC, SMU), (OOC, MPS), (OOC, WJW), (UIQ, FWF), (UIQ, SMU), (UIQ, MPS), (UIQ, WJW)]","{GZM: [FWF, DAD, MPS],
OOC: [FWF, SMU, MPS, WJW],
UIQ: [FWF, SMU, MPS, WJW],
FWF: [GZM, OOC, UIQ],
DAD: [GZM],
SMU: [OOC, UIQ],
MPS: [GZM, OOC, UIQ],
WJW: [OOC, UIQ]}","Node GZM is connected to nodes FWF, DAD, MPS.
Node OOC is connected to nodes FWF, SMU, MPS, WJW.
Node UIQ is connected to nodes FWF, SMU, MPS, WJW.
Node FWF is connected to nodes GZM, OOC, UIQ.
Node DAD is connected to node GZM.
Node SMU is connected to nodes OOC, UIQ.
Node MPS is connected to nodes GZM, OOC, UIQ.
Node WJW is connected to nodes OOC, UIQ.","[GZM, OOC, UIQ, FWF, DAD, SMU, MPS, WJW]",8,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GZM OOC UIQ.
Nodes set 2 contains: FWF DAD SMU MPS WJW.","[(GZM, DAD), (OOC, SMU), (UIQ, FWF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GZM. Updated matching: {FWF: GZM}.
Search from node OOC. Updated matching: {FWF: OOC, DAD: GZM}.
Search from node UIQ. Updated matching: {FWF: UIQ, DAD: GZM, SMU: OOC}.
So the maximum matching is ",3,5,2
bipartite,"[(ZCQ, MYI), (PER, CUF), (PER, IRZ), (PER, ZAG), (KNY, SWR), (KNY, CUF), (KNY, LDM), (YAK, CUF), (YAK, MYI), (YAK, ZAG), (YFL, HGR), (YFL, IRZ), (PLA, MYI)]","{ZCQ: [MYI],
PER: [CUF, IRZ, ZAG],
KNY: [SWR, CUF, LDM],
YAK: [CUF, MYI, ZAG],
YFL: [HGR, IRZ],
PLA: [MYI],
SWR: [KNY],
CUF: [PER, KNY, YAK],
HGR: [YFL],
MYI: [ZCQ, YAK, PLA],
IRZ: [PER, YFL],
ZAG: [PER, YAK],
LDM: [KNY]}","Node ZCQ is connected to node MYI.
Node PER is connected to nodes CUF, IRZ, ZAG.
Node KNY is connected to nodes SWR, CUF, LDM.
Node YAK is connected to nodes CUF, MYI, ZAG.
Node YFL is connected to nodes HGR, IRZ.
Node PLA is connected to node MYI.
Node SWR is connected to node KNY.
Node CUF is connected to nodes PER, KNY, YAK.
Node HGR is connected to node YFL.
Node MYI is connected to nodes ZCQ, YAK, PLA.
Node IRZ is connected to nodes PER, YFL.
Node ZAG is connected to nodes PER, YAK.
Node LDM is connected to node KNY.","[ZCQ, PER, KNY, YAK, YFL, PLA, SWR, CUF, HGR, MYI, IRZ, ZAG, LDM]",13,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZCQ PER KNY YAK YFL PLA.
Nodes set 2 contains: SWR CUF HGR MYI IRZ ZAG LDM.","[(ZCQ, MYI), (PER, IRZ), (KNY, SWR), (YAK, CUF), (YFL, HGR)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZCQ. Updated matching: {MYI: ZCQ}.
Search from node PER. Updated matching: {MYI: ZCQ, CUF: PER}.
Search from node KNY. Updated matching: {MYI: ZCQ, CUF: PER, SWR: KNY}.
Search from node YAK. Updated matching: {MYI: ZCQ, CUF: YAK, SWR: KNY, IRZ: PER}.
Search from node YFL. Updated matching: {MYI: ZCQ, CUF: YAK, SWR: KNY, IRZ: PER, HGR: YFL}.
Search from node PLA. Updated matching: {MYI: ZCQ, CUF: YAK, SWR: KNY, IRZ: PER, HGR: YFL}.
So the maximum matching is ",6,7,3
bipartite,"[(VNZ, ZPG), (VNZ, XBK), (VNZ, WWE), (VNZ, LLT), (VNZ, MJI), (FXX, XBK), (FXX, LLT), (FXX, BVG), (FXX, ANI), (XDK, LLT), (XDK, VCX), (XDK, ANI), (XDK, FII), (ONB, ZPG), (ONB, LLT), (ONB, MJI), (ONB, ANI), (NOH, OET), (NOH, ZPG), (NOH, LLT)]","{VNZ: [ZPG, XBK, WWE, LLT, MJI],
FXX: [XBK, LLT, BVG, ANI],
XDK: [LLT, VCX, ANI, FII],
ONB: [ZPG, LLT, MJI, ANI],
NOH: [OET, ZPG, LLT],
OET: [NOH],
ZPG: [VNZ, ONB, NOH],
XBK: [VNZ, FXX],
WWE: [VNZ],
LLT: [VNZ, FXX, XDK, ONB, NOH],
BVG: [FXX],
MJI: [VNZ, ONB],
VCX: [XDK],
ANI: [FXX, XDK, ONB],
FII: [XDK]}","Node VNZ is connected to nodes ZPG, XBK, WWE, LLT, MJI.
Node FXX is connected to nodes XBK, LLT, BVG, ANI.
Node XDK is connected to nodes LLT, VCX, ANI, FII.
Node ONB is connected to nodes ZPG, LLT, MJI, ANI.
Node NOH is connected to nodes OET, ZPG, LLT.
Node OET is connected to node NOH.
Node ZPG is connected to nodes VNZ, ONB, NOH.
Node XBK is connected to nodes VNZ, FXX.
Node WWE is connected to node VNZ.
Node LLT is connected to nodes VNZ, FXX, XDK, ONB, NOH.
Node BVG is connected to node FXX.
Node MJI is connected to nodes VNZ, ONB.
Node VCX is connected to node XDK.
Node ANI is connected to nodes FXX, XDK, ONB.
Node FII is connected to node XDK.","[VNZ, FXX, XDK, ONB, NOH, OET, ZPG, XBK, WWE, LLT, BVG, MJI, VCX, ANI, FII]",15,20,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VNZ FXX XDK ONB NOH.
Nodes set 2 contains: OET ZPG XBK WWE LLT BVG MJI VCX ANI FII.","[(VNZ, XBK), (FXX, LLT), (XDK, VCX), (ONB, ZPG), (NOH, OET)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VNZ. Updated matching: {ZPG: VNZ}.
Search from node FXX. Updated matching: {ZPG: VNZ, XBK: FXX}.
Search from node XDK. Updated matching: {ZPG: VNZ, XBK: FXX, LLT: XDK}.
Search from node ONB. Updated matching: {ZPG: ONB, XBK: VNZ, LLT: FXX, VCX: XDK}.
Search from node NOH. Updated matching: {ZPG: ONB, XBK: VNZ, LLT: FXX, VCX: XDK, OET: NOH}.
So the maximum matching is ",5,10,4
bipartite,"[(QOQ, AVC), (QOQ, SZW), (QOQ, TFD), (VVW, SPY), (VVW, NLD), (VVW, AVC), (VVW, QML), (YJP, NLD), (YJP, PIK), (YJP, WUZ), (NNC, EUD), (NNC, PIK), (GIG, SPY), (GIG, WUZ), (GIG, TFD)]","{QOQ: [AVC, SZW, TFD],
VVW: [SPY, NLD, AVC, QML],
YJP: [NLD, PIK, WUZ],
NNC: [EUD, PIK],
GIG: [SPY, WUZ, TFD],
EUD: [NNC],
SPY: [VVW, GIG],
NLD: [VVW, YJP],
AVC: [QOQ, VVW],
SZW: [QOQ],
PIK: [YJP, NNC],
QML: [VVW],
WUZ: [YJP, GIG],
TFD: [QOQ, GIG]}","Node QOQ is connected to nodes AVC, SZW, TFD.
Node VVW is connected to nodes SPY, NLD, AVC, QML.
Node YJP is connected to nodes NLD, PIK, WUZ.
Node NNC is connected to nodes EUD, PIK.
Node GIG is connected to nodes SPY, WUZ, TFD.
Node EUD is connected to node NNC.
Node SPY is connected to nodes VVW, GIG.
Node NLD is connected to nodes VVW, YJP.
Node AVC is connected to nodes QOQ, VVW.
Node SZW is connected to node QOQ.
Node PIK is connected to nodes YJP, NNC.
Node QML is connected to node VVW.
Node WUZ is connected to nodes YJP, GIG.
Node TFD is connected to nodes QOQ, GIG.","[QOQ, VVW, YJP, NNC, GIG, EUD, SPY, NLD, AVC, SZW, PIK, QML, WUZ, TFD]",14,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QOQ VVW YJP NNC GIG.
Nodes set 2 contains: EUD SPY NLD AVC SZW PIK QML WUZ TFD.","[(QOQ, AVC), (VVW, NLD), (YJP, PIK), (NNC, EUD), (GIG, SPY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QOQ. Updated matching: {AVC: QOQ}.
Search from node VVW. Updated matching: {AVC: QOQ, SPY: VVW}.
Search from node YJP. Updated matching: {AVC: QOQ, SPY: VVW, NLD: YJP}.
Search from node NNC. Updated matching: {AVC: QOQ, SPY: VVW, NLD: YJP, EUD: NNC}.
Search from node GIG. Updated matching: {AVC: QOQ, SPY: GIG, NLD: VVW, EUD: NNC, PIK: YJP}.
So the maximum matching is ",5,9,5
bipartite,"[(DUJ, TGQ), (DUJ, QUP), (QWC, TGQ), (QWC, CLP), (QWC, MIW), (QWC, AEQ), (AWT, BPR), (AWT, TGQ), (AWT, AEQ)]","{DUJ: [TGQ, QUP],
QWC: [TGQ, CLP, MIW, AEQ],
AWT: [BPR, TGQ, AEQ],
BPR: [AWT],
TGQ: [DUJ, QWC, AWT],
CLP: [QWC],
QUP: [DUJ],
MIW: [QWC],
AEQ: [QWC, AWT]}","Node DUJ is connected to nodes TGQ, QUP.
Node QWC is connected to nodes TGQ, CLP, MIW, AEQ.
Node AWT is connected to nodes BPR, TGQ, AEQ.
Node BPR is connected to node AWT.
Node TGQ is connected to nodes DUJ, QWC, AWT.
Node CLP is connected to node QWC.
Node QUP is connected to node DUJ.
Node MIW is connected to node QWC.
Node AEQ is connected to nodes QWC, AWT.","[DUJ, QWC, AWT, BPR, TGQ, CLP, QUP, MIW, AEQ]",9,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DUJ QWC AWT.
Nodes set 2 contains: BPR TGQ CLP QUP MIW AEQ.","[(DUJ, QUP), (QWC, TGQ), (AWT, BPR)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DUJ. Updated matching: {TGQ: DUJ}.
Search from node QWC. Updated matching: {TGQ: QWC, QUP: DUJ}.
Search from node AWT. Updated matching: {TGQ: QWC, QUP: DUJ, BPR: AWT}.
So the maximum matching is ",3,6,6
bipartite,"[(AOV, MWP), (AOV, RXC), (AOV, EEH), (WWW, RXC), (WWW, VUV), (WWW, EEH), (ETP, PNI), (ETP, RXC), (ETP, EEH), (NZD, VUV)]","{AOV: [MWP, RXC, EEH],
WWW: [RXC, VUV, EEH],
ETP: [PNI, RXC, EEH],
NZD: [VUV],
MWP: [AOV],
PNI: [ETP],
RXC: [AOV, WWW, ETP],
VUV: [WWW, NZD],
EEH: [AOV, WWW, ETP]}","Node AOV is connected to nodes MWP, RXC, EEH.
Node WWW is connected to nodes RXC, VUV, EEH.
Node ETP is connected to nodes PNI, RXC, EEH.
Node NZD is connected to node VUV.
Node MWP is connected to node AOV.
Node PNI is connected to node ETP.
Node RXC is connected to nodes AOV, WWW, ETP.
Node VUV is connected to nodes WWW, NZD.
Node EEH is connected to nodes AOV, WWW, ETP.","[AOV, WWW, ETP, NZD, MWP, PNI, RXC, VUV, EEH]",9,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: AOV WWW ETP NZD.
Nodes set 2 contains: MWP PNI RXC VUV EEH.","[(AOV, MWP), (WWW, RXC), (ETP, PNI), (NZD, VUV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node AOV. Updated matching: {MWP: AOV}.
Search from node WWW. Updated matching: {MWP: AOV, RXC: WWW}.
Search from node ETP. Updated matching: {MWP: AOV, RXC: WWW, PNI: ETP}.
Search from node NZD. Updated matching: {MWP: AOV, RXC: WWW, PNI: ETP, VUV: NZD}.
So the maximum matching is ",4,5,7
bipartite,"[(QZI, XXJ), (QZI, TCI), (QZI, EXR), (QZI, ZVX), (EKP, RTJ), (ZZY, CCS), (ZZY, XXJ), (ZZY, ZVX), (UTF, TUM), (UTF, XBF), (UTF, EXR), (UTF, WCX), (PVG, CCS), (PVG, FYC), (PVG, RTJ), (PVG, EXR)]","{QZI: [XXJ, TCI, EXR, ZVX],
EKP: [RTJ],
ZZY: [CCS, XXJ, ZVX],
UTF: [TUM, XBF, EXR, WCX],
PVG: [CCS, FYC, RTJ, EXR],
CCS: [ZZY, PVG],
FYC: [PVG],
TUM: [UTF],
XXJ: [QZI, ZZY],
RTJ: [EKP, PVG],
TCI: [QZI],
XBF: [UTF],
EXR: [QZI, UTF, PVG],
ZVX: [QZI, ZZY],
WCX: [UTF]}","Node QZI is connected to nodes XXJ, TCI, EXR, ZVX.
Node EKP is connected to node RTJ.
Node ZZY is connected to nodes CCS, XXJ, ZVX.
Node UTF is connected to nodes TUM, XBF, EXR, WCX.
Node PVG is connected to nodes CCS, FYC, RTJ, EXR.
Node CCS is connected to nodes ZZY, PVG.
Node FYC is connected to node PVG.
Node TUM is connected to node UTF.
Node XXJ is connected to nodes QZI, ZZY.
Node RTJ is connected to nodes EKP, PVG.
Node TCI is connected to node QZI.
Node XBF is connected to node UTF.
Node EXR is connected to nodes QZI, UTF, PVG.
Node ZVX is connected to nodes QZI, ZZY.
Node WCX is connected to node UTF.","[QZI, EKP, ZZY, UTF, PVG, CCS, FYC, TUM, XXJ, RTJ, TCI, XBF, EXR, ZVX, WCX]",15,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QZI EKP ZZY UTF PVG.
Nodes set 2 contains: CCS FYC TUM XXJ RTJ TCI XBF EXR ZVX WCX.","[(QZI, TCI), (EKP, RTJ), (ZZY, XXJ), (UTF, TUM), (PVG, CCS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QZI. Updated matching: {XXJ: QZI}.
Search from node EKP. Updated matching: {XXJ: QZI, RTJ: EKP}.
Search from node ZZY. Updated matching: {XXJ: QZI, RTJ: EKP, CCS: ZZY}.
Search from node UTF. Updated matching: {XXJ: QZI, RTJ: EKP, CCS: ZZY, TUM: UTF}.
Search from node PVG. Updated matching: {XXJ: ZZY, RTJ: EKP, CCS: PVG, TUM: UTF, TCI: QZI}.
So the maximum matching is ",5,10,8
bipartite,"[(TGX, CYW), (TGX, HPA), (TGX, FEV), (TGX, KAB), (WYH, HPA), (WYH, FEV), (WYH, GTJ), (UNQ, ZOF), (UNQ, FEV), (OIC, CYW), (OIC, LEX), (OIC, ZOF), (OIC, FEV)]","{TGX: [CYW, HPA, FEV, KAB],
WYH: [HPA, FEV, GTJ],
UNQ: [ZOF, FEV],
OIC: [CYW, LEX, ZOF, FEV],
CYW: [TGX, OIC],
LEX: [OIC],
ZOF: [UNQ, OIC],
HPA: [TGX, WYH],
FEV: [TGX, WYH, UNQ, OIC],
GTJ: [WYH],
KAB: [TGX]}","Node TGX is connected to nodes CYW, HPA, FEV, KAB.
Node WYH is connected to nodes HPA, FEV, GTJ.
Node UNQ is connected to nodes ZOF, FEV.
Node OIC is connected to nodes CYW, LEX, ZOF, FEV.
Node CYW is connected to nodes TGX, OIC.
Node LEX is connected to node OIC.
Node ZOF is connected to nodes UNQ, OIC.
Node HPA is connected to nodes TGX, WYH.
Node FEV is connected to nodes TGX, WYH, UNQ, OIC.
Node GTJ is connected to node WYH.
Node KAB is connected to node TGX.","[TGX, WYH, UNQ, OIC, CYW, LEX, ZOF, HPA, FEV, GTJ, KAB]",11,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TGX WYH UNQ OIC.
Nodes set 2 contains: CYW LEX ZOF HPA FEV GTJ KAB.","[(TGX, HPA), (WYH, FEV), (UNQ, ZOF), (OIC, CYW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TGX. Updated matching: {CYW: TGX}.
Search from node WYH. Updated matching: {CYW: TGX, HPA: WYH}.
Search from node UNQ. Updated matching: {CYW: TGX, HPA: WYH, ZOF: UNQ}.
Search from node OIC. Updated matching: {CYW: OIC, HPA: TGX, ZOF: UNQ, FEV: WYH}.
So the maximum matching is ",4,7,9
bipartite,"[(CQP, BFC), (CQP, JLQ), (CQP, FLV), (WFS, BBZ), (WFS, UOU), (WFS, NEN), (FAF, JLQ), (FAF, NEN), (PAP, BBZ), (PAP, BFC), (PAP, JLQ), (PAP, NEN)]","{CQP: [BFC, JLQ, FLV],
WFS: [BBZ, UOU, NEN],
FAF: [JLQ, NEN],
PAP: [BBZ, BFC, JLQ, NEN],
BBZ: [WFS, PAP],
UOU: [WFS],
BFC: [CQP, PAP],
JLQ: [CQP, FAF, PAP],
NEN: [WFS, FAF, PAP],
FLV: [CQP]}","Node CQP is connected to nodes BFC, JLQ, FLV.
Node WFS is connected to nodes BBZ, UOU, NEN.
Node FAF is connected to nodes JLQ, NEN.
Node PAP is connected to nodes BBZ, BFC, JLQ, NEN.
Node BBZ is connected to nodes WFS, PAP.
Node UOU is connected to node WFS.
Node BFC is connected to nodes CQP, PAP.
Node JLQ is connected to nodes CQP, FAF, PAP.
Node NEN is connected to nodes WFS, FAF, PAP.
Node FLV is connected to node CQP.","[CQP, WFS, FAF, PAP, BBZ, UOU, BFC, JLQ, NEN, FLV]",10,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CQP WFS FAF PAP.
Nodes set 2 contains: BBZ UOU BFC JLQ NEN FLV.","[(CQP, BFC), (WFS, UOU), (FAF, JLQ), (PAP, BBZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CQP. Updated matching: {BFC: CQP}.
Search from node WFS. Updated matching: {BFC: CQP, BBZ: WFS}.
Search from node FAF. Updated matching: {BFC: CQP, BBZ: WFS, JLQ: FAF}.
Search from node PAP. Updated matching: {BFC: CQP, BBZ: PAP, JLQ: FAF, UOU: WFS}.
So the maximum matching is ",4,6,10
bipartite,"[(AOX, XWR), (AOX, BDJ), (AOX, EVH), (AOX, FZD), (IDK, YYI), (IDK, PZZ), (IDK, WSK), (QQY, YYI), (QQY, GEI), (QQY, BDJ), (QQY, PJO), (TRH, WSK), (TRH, FZD)]","{AOX: [XWR, BDJ, EVH, FZD],
IDK: [YYI, PZZ, WSK],
QQY: [YYI, GEI, BDJ, PJO],
TRH: [WSK, FZD],
YYI: [IDK, QQY],
GEI: [QQY],
XWR: [AOX],
PZZ: [IDK],
BDJ: [AOX, QQY],
WSK: [IDK, TRH],
PJO: [QQY],
EVH: [AOX],
FZD: [AOX, TRH]}","Node AOX is connected to nodes XWR, BDJ, EVH, FZD.
Node IDK is connected to nodes YYI, PZZ, WSK.
Node QQY is connected to nodes YYI, GEI, BDJ, PJO.
Node TRH is connected to nodes WSK, FZD.
Node YYI is connected to nodes IDK, QQY.
Node GEI is connected to node QQY.
Node XWR is connected to node AOX.
Node PZZ is connected to node IDK.
Node BDJ is connected to nodes AOX, QQY.
Node WSK is connected to nodes IDK, TRH.
Node PJO is connected to node QQY.
Node EVH is connected to node AOX.
Node FZD is connected to nodes AOX, TRH.","[AOX, IDK, QQY, TRH, YYI, GEI, XWR, PZZ, BDJ, WSK, PJO, EVH, FZD]",13,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: AOX IDK QQY TRH.
Nodes set 2 contains: YYI GEI XWR PZZ BDJ WSK PJO EVH FZD.","[(AOX, XWR), (IDK, PZZ), (QQY, YYI), (TRH, WSK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node AOX. Updated matching: {XWR: AOX}.
Search from node IDK. Updated matching: {XWR: AOX, YYI: IDK}.
Search from node QQY. Updated matching: {XWR: AOX, YYI: QQY, PZZ: IDK}.
Search from node TRH. Updated matching: {XWR: AOX, YYI: QQY, PZZ: IDK, WSK: TRH}.
So the maximum matching is ",4,9,11
bipartite,"[(LOE, LVM), (XUZ, UCE), (XUZ, LVM), (ZZO, UCE), (ZZO, FHI), (ZZO, OSW), (ZZO, LVM), (JFC, NMF), (JFC, FHI), (JFC, JBG), (JFC, OSW), (EQB, NMF), (EQB, FHI)]","{LOE: [LVM],
XUZ: [UCE, LVM],
ZZO: [UCE, FHI, OSW, LVM],
JFC: [NMF, FHI, JBG, OSW],
EQB: [NMF, FHI],
UCE: [XUZ, ZZO],
NMF: [JFC, EQB],
FHI: [ZZO, JFC, EQB],
JBG: [JFC],
OSW: [ZZO, JFC],
LVM: [LOE, XUZ, ZZO]}","Node LOE is connected to node LVM.
Node XUZ is connected to nodes UCE, LVM.
Node ZZO is connected to nodes UCE, FHI, OSW, LVM.
Node JFC is connected to nodes NMF, FHI, JBG, OSW.
Node EQB is connected to nodes NMF, FHI.
Node UCE is connected to nodes XUZ, ZZO.
Node NMF is connected to nodes JFC, EQB.
Node FHI is connected to nodes ZZO, JFC, EQB.
Node JBG is connected to node JFC.
Node OSW is connected to nodes ZZO, JFC.
Node LVM is connected to nodes LOE, XUZ, ZZO.","[LOE, XUZ, ZZO, JFC, EQB, UCE, NMF, FHI, JBG, OSW, LVM]",11,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LOE XUZ ZZO JFC EQB.
Nodes set 2 contains: UCE NMF FHI JBG OSW LVM.","[(LOE, LVM), (XUZ, UCE), (ZZO, OSW), (JFC, FHI), (EQB, NMF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LOE. Updated matching: {LVM: LOE}.
Search from node XUZ. Updated matching: {LVM: LOE, UCE: XUZ}.
Search from node ZZO. Updated matching: {LVM: LOE, UCE: XUZ, FHI: ZZO}.
Search from node JFC. Updated matching: {LVM: LOE, UCE: XUZ, FHI: ZZO, NMF: JFC}.
Search from node EQB. Updated matching: {LVM: LOE, UCE: XUZ, FHI: JFC, NMF: EQB, OSW: ZZO}.
So the maximum matching is ",5,6,12
bipartite,"[(RQR, OLM), (RQR, ESG), (CQG, GBW), (CQG, OLM), (CQG, KXT), (CQG, TYJ), (JIK, RDQ), (JIK, AGJ), (JIK, SWI), (GAC, RDQ), (GAC, KXT), (PNC, OLM), (PNC, ESG)]","{RQR: [OLM, ESG],
CQG: [GBW, OLM, KXT, TYJ],
JIK: [RDQ, AGJ, SWI],
GAC: [RDQ, KXT],
PNC: [OLM, ESG],
GBW: [CQG],
RDQ: [JIK, GAC],
AGJ: [JIK],
OLM: [RQR, CQG, PNC],
KXT: [CQG, GAC],
SWI: [JIK],
TYJ: [CQG],
ESG: [RQR, PNC]}","Node RQR is connected to nodes OLM, ESG.
Node CQG is connected to nodes GBW, OLM, KXT, TYJ.
Node JIK is connected to nodes RDQ, AGJ, SWI.
Node GAC is connected to nodes RDQ, KXT.
Node PNC is connected to nodes OLM, ESG.
Node GBW is connected to node CQG.
Node RDQ is connected to nodes JIK, GAC.
Node AGJ is connected to node JIK.
Node OLM is connected to nodes RQR, CQG, PNC.
Node KXT is connected to nodes CQG, GAC.
Node SWI is connected to node JIK.
Node TYJ is connected to node CQG.
Node ESG is connected to nodes RQR, PNC.","[RQR, CQG, JIK, GAC, PNC, GBW, RDQ, AGJ, OLM, KXT, SWI, TYJ, ESG]",13,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RQR CQG JIK GAC PNC.
Nodes set 2 contains: GBW RDQ AGJ OLM KXT SWI TYJ ESG.","[(RQR, ESG), (CQG, GBW), (JIK, AGJ), (GAC, RDQ), (PNC, OLM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RQR. Updated matching: {OLM: RQR}.
Search from node CQG. Updated matching: {OLM: RQR, GBW: CQG}.
Search from node JIK. Updated matching: {OLM: RQR, GBW: CQG, RDQ: JIK}.
Search from node GAC. Updated matching: {OLM: RQR, GBW: CQG, RDQ: GAC, AGJ: JIK}.
Search from node PNC. Updated matching: {OLM: PNC, GBW: CQG, RDQ: GAC, AGJ: JIK, ESG: RQR}.
So the maximum matching is ",5,8,13
bipartite,"[(MCZ, MMD), (MCZ, ZFZ), (DHR, QUS), (DHR, MMD), (DHR, QFK), (DHR, ZFZ), (XHY, IDE), (XHY, AZK), (RGU, SQO), (RGU, MMD), (RGU, IDE), (RGU, NUI), (RGU, AZK), (NDP, SQO), (NDP, ZFZ), (NDP, NUI), (NDP, PRI), (HMH, SQO), (HMH, MMD), (HMH, IDE), (HMH, ZFZ), (HMH, AZK)]","{MCZ: [MMD, ZFZ],
DHR: [QUS, MMD, QFK, ZFZ],
XHY: [IDE, AZK],
RGU: [SQO, MMD, IDE, NUI, AZK],
NDP: [SQO, ZFZ, NUI, PRI],
HMH: [SQO, MMD, IDE, ZFZ, AZK],
QUS: [DHR],
SQO: [RGU, NDP, HMH],
MMD: [MCZ, DHR, RGU, HMH],
IDE: [XHY, RGU, HMH],
QFK: [DHR],
ZFZ: [MCZ, DHR, NDP, HMH],
NUI: [RGU, NDP],
AZK: [XHY, RGU, HMH],
PRI: [NDP]}","Node MCZ is connected to nodes MMD, ZFZ.
Node DHR is connected to nodes QUS, MMD, QFK, ZFZ.
Node XHY is connected to nodes IDE, AZK.
Node RGU is connected to nodes SQO, MMD, IDE, NUI, AZK.
Node NDP is connected to nodes SQO, ZFZ, NUI, PRI.
Node HMH is connected to nodes SQO, MMD, IDE, ZFZ, AZK.
Node QUS is connected to node DHR.
Node SQO is connected to nodes RGU, NDP, HMH.
Node MMD is connected to nodes MCZ, DHR, RGU, HMH.
Node IDE is connected to nodes XHY, RGU, HMH.
Node QFK is connected to node DHR.
Node ZFZ is connected to nodes MCZ, DHR, NDP, HMH.
Node NUI is connected to nodes RGU, NDP.
Node AZK is connected to nodes XHY, RGU, HMH.
Node PRI is connected to node NDP.","[MCZ, DHR, XHY, RGU, NDP, HMH, QUS, SQO, MMD, IDE, QFK, ZFZ, NUI, AZK, PRI]",15,22,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MCZ DHR XHY RGU NDP HMH.
Nodes set 2 contains: QUS SQO MMD IDE QFK ZFZ NUI AZK PRI.","[(MCZ, MMD), (DHR, QUS), (XHY, AZK), (RGU, IDE), (NDP, ZFZ), (HMH, SQO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MCZ. Updated matching: {MMD: MCZ}.
Search from node DHR. Updated matching: {MMD: MCZ, QUS: DHR}.
Search from node XHY. Updated matching: {MMD: MCZ, QUS: DHR, IDE: XHY}.
Search from node RGU. Updated matching: {MMD: MCZ, QUS: DHR, IDE: XHY, SQO: RGU}.
Search from node NDP. Updated matching: {MMD: RGU, QUS: DHR, IDE: XHY, SQO: NDP, ZFZ: MCZ}.
Search from node HMH. Updated matching: {MMD: MCZ, QUS: DHR, IDE: RGU, SQO: HMH, ZFZ: NDP, AZK: XHY}.
So the maximum matching is ",6,9,14
bipartite,"[(GMI, WRS), (GMI, XMT), (GMI, DQN), (GMI, CDC), (GMI, NJG), (UGG, CFX), (UGG, DQN), (UGG, VKR), (UGG, TBH), (QRH, CFX), (QRH, WRS), (QRH, VKR), (QRH, CDC)]","{GMI: [WRS, XMT, DQN, CDC, NJG],
UGG: [CFX, DQN, VKR, TBH],
QRH: [CFX, WRS, VKR, CDC],
CFX: [UGG, QRH],
WRS: [GMI, QRH],
XMT: [GMI],
DQN: [GMI, UGG],
VKR: [UGG, QRH],
CDC: [GMI, QRH],
TBH: [UGG],
NJG: [GMI]}","Node GMI is connected to nodes WRS, XMT, DQN, CDC, NJG.
Node UGG is connected to nodes CFX, DQN, VKR, TBH.
Node QRH is connected to nodes CFX, WRS, VKR, CDC.
Node CFX is connected to nodes UGG, QRH.
Node WRS is connected to nodes GMI, QRH.
Node XMT is connected to node GMI.
Node DQN is connected to nodes GMI, UGG.
Node VKR is connected to nodes UGG, QRH.
Node CDC is connected to nodes GMI, QRH.
Node TBH is connected to node UGG.
Node NJG is connected to node GMI.","[GMI, UGG, QRH, CFX, WRS, XMT, DQN, VKR, CDC, TBH, NJG]",11,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GMI UGG QRH.
Nodes set 2 contains: CFX WRS XMT DQN VKR CDC TBH NJG.","[(GMI, WRS), (UGG, DQN), (QRH, CFX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GMI. Updated matching: {WRS: GMI}.
Search from node UGG. Updated matching: {WRS: GMI, CFX: UGG}.
Search from node QRH. Updated matching: {WRS: GMI, CFX: QRH, DQN: UGG}.
So the maximum matching is ",3,8,15
bipartite,"[(RVP, EUX), (RVP, VEC), (RVP, LKK), (ITL, UGH), (AJK, EUX), (AJK, DJF), (AJK, LKK), (AJK, XCF), (UAP, EUX), (UAP, VEC), (UAP, UGH), (UAP, XCF), (WGY, EUX), (WGY, DJF), (WGY, UGH), (WGY, ANV), (ZFR, DVG), (ZFR, EUX), (ZFR, DJF), (ZFR, UGH), (ZFR, LKK), (ZFR, XCF)]","{RVP: [EUX, VEC, LKK],
ITL: [UGH],
AJK: [EUX, DJF, LKK, XCF],
UAP: [EUX, VEC, UGH, XCF],
WGY: [EUX, DJF, UGH, ANV],
ZFR: [DVG, EUX, DJF, UGH, LKK, XCF],
DVG: [ZFR],
EUX: [RVP, AJK, UAP, WGY, ZFR],
DJF: [AJK, WGY, ZFR],
VEC: [RVP, UAP],
UGH: [ITL, UAP, WGY, ZFR],
LKK: [RVP, AJK, ZFR],
XCF: [AJK, UAP, ZFR],
ANV: [WGY]}","Node RVP is connected to nodes EUX, VEC, LKK.
Node ITL is connected to node UGH.
Node AJK is connected to nodes EUX, DJF, LKK, XCF.
Node UAP is connected to nodes EUX, VEC, UGH, XCF.
Node WGY is connected to nodes EUX, DJF, UGH, ANV.
Node ZFR is connected to nodes DVG, EUX, DJF, UGH, LKK, XCF.
Node DVG is connected to node ZFR.
Node EUX is connected to nodes RVP, AJK, UAP, WGY, ZFR.
Node DJF is connected to nodes AJK, WGY, ZFR.
Node VEC is connected to nodes RVP, UAP.
Node UGH is connected to nodes ITL, UAP, WGY, ZFR.
Node LKK is connected to nodes RVP, AJK, ZFR.
Node XCF is connected to nodes AJK, UAP, ZFR.
Node ANV is connected to node WGY.","[RVP, ITL, AJK, UAP, WGY, ZFR, DVG, EUX, DJF, VEC, UGH, LKK, XCF, ANV]",14,22,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RVP ITL AJK UAP WGY ZFR.
Nodes set 2 contains: DVG EUX DJF VEC UGH LKK XCF ANV.","[(RVP, LKK), (ITL, UGH), (AJK, DJF), (UAP, VEC), (WGY, EUX), (ZFR, DVG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RVP. Updated matching: {EUX: RVP}.
Search from node ITL. Updated matching: {EUX: RVP, UGH: ITL}.
Search from node AJK. Updated matching: {EUX: AJK, UGH: ITL, VEC: RVP}.
Search from node UAP. Updated matching: {EUX: UAP, UGH: ITL, VEC: RVP, DJF: AJK}.
Search from node WGY. Updated matching: {EUX: WGY, UGH: ITL, VEC: UAP, DJF: AJK, LKK: RVP}.
Search from node ZFR. Updated matching: {EUX: WGY, UGH: ITL, VEC: UAP, DJF: AJK, LKK: RVP, DVG: ZFR}.
So the maximum matching is ",6,8,16
bipartite,"[(TDC, XZB), (CAA, OZB), (CAA, JER), (PQM, OZB), (PQM, UXN), (PQM, HIT), (PQM, SHH), (EAW, OZB), (EAW, XZB), (EAW, SHH), (EAW, TEA)]","{TDC: [XZB],
CAA: [OZB, JER],
PQM: [OZB, UXN, HIT, SHH],
EAW: [OZB, XZB, SHH, TEA],
OZB: [CAA, PQM, EAW],
XZB: [TDC, EAW],
UXN: [PQM],
JER: [CAA],
HIT: [PQM],
SHH: [PQM, EAW],
TEA: [EAW]}","Node TDC is connected to node XZB.
Node CAA is connected to nodes OZB, JER.
Node PQM is connected to nodes OZB, UXN, HIT, SHH.
Node EAW is connected to nodes OZB, XZB, SHH, TEA.
Node OZB is connected to nodes CAA, PQM, EAW.
Node XZB is connected to nodes TDC, EAW.
Node UXN is connected to node PQM.
Node JER is connected to node CAA.
Node HIT is connected to node PQM.
Node SHH is connected to nodes PQM, EAW.
Node TEA is connected to node EAW.","[TDC, CAA, PQM, EAW, OZB, XZB, UXN, JER, HIT, SHH, TEA]",11,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TDC CAA PQM EAW.
Nodes set 2 contains: OZB XZB UXN JER HIT SHH TEA.","[(TDC, XZB), (CAA, JER), (PQM, UXN), (EAW, OZB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TDC. Updated matching: {XZB: TDC}.
Search from node CAA. Updated matching: {XZB: TDC, OZB: CAA}.
Search from node PQM. Updated matching: {XZB: TDC, OZB: PQM, JER: CAA}.
Search from node EAW. Updated matching: {XZB: TDC, OZB: EAW, JER: CAA, UXN: PQM}.
So the maximum matching is ",4,7,17
bipartite,"[(NVD, NCR), (NVD, GXV), (NVD, VYU), (NVD, VYX), (HOI, NCR), (HOI, VYU), (HOI, CBM), (HOI, VYX), (UCB, NCR), (UCB, XLD), (UCB, GXV), (UCB, SUN), (UCB, VYU), (UCB, VYX), (OYU, XLD), (OYU, VYU), (DAM, NCR), (DAM, TSK), (DAM, VYU), (DAM, CBM), (BBY, NCR), (BBY, TSK), (BBY, GXV), (BBY, VYU), (BBY, VYX), (RLO, TSK), (RLO, GXV), (RLO, SUN), (RLO, VYU), (RLO, VYX)]","{NVD: [NCR, GXV, VYU, VYX],
HOI: [NCR, VYU, CBM, VYX],
UCB: [NCR, XLD, GXV, SUN, VYU, VYX],
OYU: [XLD, VYU],
DAM: [NCR, TSK, VYU, CBM],
BBY: [NCR, TSK, GXV, VYU, VYX],
RLO: [TSK, GXV, SUN, VYU, VYX],
NCR: [NVD, HOI, UCB, DAM, BBY],
XLD: [UCB, OYU],
TSK: [DAM, BBY, RLO],
GXV: [NVD, UCB, BBY, RLO],
SUN: [UCB, RLO],
VYU: [NVD, HOI, UCB, OYU, DAM, BBY, RLO],
CBM: [HOI, DAM],
VYX: [NVD, HOI, UCB, BBY, RLO]}","Node NVD is connected to nodes NCR, GXV, VYU, VYX.
Node HOI is connected to nodes NCR, VYU, CBM, VYX.
Node UCB is connected to nodes NCR, XLD, GXV, SUN, VYU, VYX.
Node OYU is connected to nodes XLD, VYU.
Node DAM is connected to nodes NCR, TSK, VYU, CBM.
Node BBY is connected to nodes NCR, TSK, GXV, VYU, VYX.
Node RLO is connected to nodes TSK, GXV, SUN, VYU, VYX.
Node NCR is connected to nodes NVD, HOI, UCB, DAM, BBY.
Node XLD is connected to nodes UCB, OYU.
Node TSK is connected to nodes DAM, BBY, RLO.
Node GXV is connected to nodes NVD, UCB, BBY, RLO.
Node SUN is connected to nodes UCB, RLO.
Node VYU is connected to nodes NVD, HOI, UCB, OYU, DAM, BBY, RLO.
Node CBM is connected to nodes HOI, DAM.
Node VYX is connected to nodes NVD, HOI, UCB, BBY, RLO.","[NVD, HOI, UCB, OYU, DAM, BBY, RLO, NCR, XLD, TSK, GXV, SUN, VYU, CBM, VYX]",15,30,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NVD HOI UCB OYU DAM BBY RLO.
Nodes set 2 contains: NCR XLD TSK GXV SUN VYU CBM VYX.","[(NVD, VYU), (HOI, CBM), (UCB, SUN), (OYU, XLD), (DAM, NCR), (BBY, GXV), (RLO, TSK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NVD. Updated matching: {NCR: NVD}.
Search from node HOI. Updated matching: {NCR: HOI, GXV: NVD}.
Search from node UCB. Updated matching: {NCR: UCB, GXV: NVD, VYU: HOI}.
Search from node OYU. Updated matching: {NCR: UCB, GXV: NVD, VYU: HOI, XLD: OYU}.
Search from node DAM. Updated matching: {NCR: DAM, GXV: NVD, VYU: OYU, XLD: UCB, CBM: HOI}.
Search from node BBY. Updated matching: {NCR: BBY, GXV: NVD, VYU: OYU, XLD: UCB, CBM: HOI, TSK: DAM}.
Search from node RLO. Updated matching: {NCR: DAM, GXV: BBY, VYU: NVD, XLD: OYU, CBM: HOI, TSK: RLO, SUN: UCB}.
So the maximum matching is ",7,8,18
bipartite,"[(NAU, EJR), (NAU, ETZ), (NAU, SHA), (KRS, SEN), (KRS, ETZ), (KRS, SII), (KRS, SHA), (LWB, ZZP), (LWB, EJR), (LWB, UIH), (JVX, SII), (JVX, MVG)]","{NAU: [EJR, ETZ, SHA],
KRS: [SEN, ETZ, SII, SHA],
LWB: [ZZP, EJR, UIH],
JVX: [SII, MVG],
SEN: [KRS],
ZZP: [LWB],
EJR: [NAU, LWB],
ETZ: [NAU, KRS],
UIH: [LWB],
SII: [KRS, JVX],
MVG: [JVX],
SHA: [NAU, KRS]}","Node NAU is connected to nodes EJR, ETZ, SHA.
Node KRS is connected to nodes SEN, ETZ, SII, SHA.
Node LWB is connected to nodes ZZP, EJR, UIH.
Node JVX is connected to nodes SII, MVG.
Node SEN is connected to node KRS.
Node ZZP is connected to node LWB.
Node EJR is connected to nodes NAU, LWB.
Node ETZ is connected to nodes NAU, KRS.
Node UIH is connected to node LWB.
Node SII is connected to nodes KRS, JVX.
Node MVG is connected to node JVX.
Node SHA is connected to nodes NAU, KRS.","[NAU, KRS, LWB, JVX, SEN, ZZP, EJR, ETZ, UIH, SII, MVG, SHA]",12,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NAU KRS LWB JVX.
Nodes set 2 contains: SEN ZZP EJR ETZ UIH SII MVG SHA.","[(NAU, EJR), (KRS, SEN), (LWB, ZZP), (JVX, SII)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NAU. Updated matching: {EJR: NAU}.
Search from node KRS. Updated matching: {EJR: NAU, SEN: KRS}.
Search from node LWB. Updated matching: {EJR: NAU, SEN: KRS, ZZP: LWB}.
Search from node JVX. Updated matching: {EJR: NAU, SEN: KRS, ZZP: LWB, SII: JVX}.
So the maximum matching is ",4,8,19
bipartite,"[(LQG, AAQ), (LQG, SSZ), (LQG, WTI), (LQG, IOS), (LQG, WWI), (ELD, LBF), (ELD, WTE), (ELD, WWI), (GJX, AAQ), (GJX, SSZ), (GJX, LBF), (GJX, IOS), (GJX, NPX), (FKT, WWI), (NBE, LBF), (NBE, IOS), (NBE, WWI), (BVP, SSZ), (BVP, LBF), (BVP, NPX)]","{LQG: [AAQ, SSZ, WTI, IOS, WWI],
ELD: [LBF, WTE, WWI],
GJX: [AAQ, SSZ, LBF, IOS, NPX],
FKT: [WWI],
NBE: [LBF, IOS, WWI],
BVP: [SSZ, LBF, NPX],
AAQ: [LQG, GJX],
SSZ: [LQG, GJX, BVP],
WTI: [LQG],
LBF: [ELD, GJX, NBE, BVP],
IOS: [LQG, GJX, NBE],
NPX: [GJX, BVP],
WTE: [ELD],
WWI: [LQG, ELD, FKT, NBE]}","Node LQG is connected to nodes AAQ, SSZ, WTI, IOS, WWI.
Node ELD is connected to nodes LBF, WTE, WWI.
Node GJX is connected to nodes AAQ, SSZ, LBF, IOS, NPX.
Node FKT is connected to node WWI.
Node NBE is connected to nodes LBF, IOS, WWI.
Node BVP is connected to nodes SSZ, LBF, NPX.
Node AAQ is connected to nodes LQG, GJX.
Node SSZ is connected to nodes LQG, GJX, BVP.
Node WTI is connected to node LQG.
Node LBF is connected to nodes ELD, GJX, NBE, BVP.
Node IOS is connected to nodes LQG, GJX, NBE.
Node NPX is connected to nodes GJX, BVP.
Node WTE is connected to node ELD.
Node WWI is connected to nodes LQG, ELD, FKT, NBE.","[LQG, ELD, GJX, FKT, NBE, BVP, AAQ, SSZ, WTI, LBF, IOS, NPX, WTE, WWI]",14,20,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LQG ELD GJX FKT NBE BVP.
Nodes set 2 contains: AAQ SSZ WTI LBF IOS NPX WTE WWI.","[(LQG, AAQ), (ELD, WTE), (GJX, LBF), (FKT, WWI), (NBE, IOS), (BVP, SSZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LQG. Updated matching: {AAQ: LQG}.
Search from node ELD. Updated matching: {AAQ: LQG, LBF: ELD}.
Search from node GJX. Updated matching: {AAQ: GJX, LBF: ELD, SSZ: LQG}.
Search from node FKT. Updated matching: {AAQ: GJX, LBF: ELD, SSZ: LQG, WWI: FKT}.
Search from node NBE. Updated matching: {AAQ: GJX, LBF: NBE, SSZ: LQG, WWI: FKT, WTE: ELD}.
Search from node BVP. Updated matching: {AAQ: LQG, LBF: GJX, SSZ: BVP, WWI: FKT, WTE: ELD, IOS: NBE}.
So the maximum matching is ",6,8,20
bipartite,"[(HOF, DHW), (HOF, WNS), (HOF, IVZ), (HOF, FNA), (HOF, MUP), (HOF, WLA), (HXE, DHW), (HXE, IAO), (HZU, DHW), (HZU, IAO), (HZU, WLA), (RZQ, IVZ), (RZQ, MUP), (VXM, DHW), (VXM, WNS), (VXM, MUP), (VXM, IAO), (OAF, INT), (OAF, IVZ), (OAF, FNA), (OAF, MUP), (OAF, IAO)]","{HOF: [DHW, WNS, IVZ, FNA, MUP, WLA],
HXE: [DHW, IAO],
HZU: [DHW, IAO, WLA],
RZQ: [IVZ, MUP],
VXM: [DHW, WNS, MUP, IAO],
OAF: [INT, IVZ, FNA, MUP, IAO],
DHW: [HOF, HXE, HZU, VXM],
INT: [OAF],
WNS: [HOF, VXM],
IVZ: [HOF, RZQ, OAF],
FNA: [HOF, OAF],
MUP: [HOF, RZQ, VXM, OAF],
IAO: [HXE, HZU, VXM, OAF],
WLA: [HOF, HZU]}","Node HOF is connected to nodes DHW, WNS, IVZ, FNA, MUP, WLA.
Node HXE is connected to nodes DHW, IAO.
Node HZU is connected to nodes DHW, IAO, WLA.
Node RZQ is connected to nodes IVZ, MUP.
Node VXM is connected to nodes DHW, WNS, MUP, IAO.
Node OAF is connected to nodes INT, IVZ, FNA, MUP, IAO.
Node DHW is connected to nodes HOF, HXE, HZU, VXM.
Node INT is connected to node OAF.
Node WNS is connected to nodes HOF, VXM.
Node IVZ is connected to nodes HOF, RZQ, OAF.
Node FNA is connected to nodes HOF, OAF.
Node MUP is connected to nodes HOF, RZQ, VXM, OAF.
Node IAO is connected to nodes HXE, HZU, VXM, OAF.
Node WLA is connected to nodes HOF, HZU.","[HOF, HXE, HZU, RZQ, VXM, OAF, DHW, INT, WNS, IVZ, FNA, MUP, IAO, WLA]",14,22,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HOF HXE HZU RZQ VXM OAF.
Nodes set 2 contains: DHW INT WNS IVZ FNA MUP IAO WLA.","[(HOF, WNS), (HXE, IAO), (HZU, WLA), (RZQ, IVZ), (VXM, DHW), (OAF, INT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HOF. Updated matching: {DHW: HOF}.
Search from node HXE. Updated matching: {DHW: HXE, WNS: HOF}.
Search from node HZU. Updated matching: {DHW: HZU, WNS: HOF, IAO: HXE}.
Search from node RZQ. Updated matching: {DHW: HZU, WNS: HOF, IAO: HXE, IVZ: RZQ}.
Search from node VXM. Updated matching: {DHW: VXM, WNS: HOF, IAO: HXE, IVZ: RZQ, WLA: HZU}.
Search from node OAF. Updated matching: {DHW: VXM, WNS: HOF, IAO: HXE, IVZ: RZQ, WLA: HZU, INT: OAF}.
So the maximum matching is ",6,8,21
bipartite,"[(HTE, IDY), (HTE, JYL), (JHP, CKI), (JHP, NXZ), (JHP, ROL), (JHP, JYL), (JHP, CVW), (TCA, UMI), (TCA, CVW)]","{HTE: [IDY, JYL],
JHP: [CKI, NXZ, ROL, JYL, CVW],
TCA: [UMI, CVW],
IDY: [HTE],
CKI: [JHP],
UMI: [TCA],
NXZ: [JHP],
ROL: [JHP],
JYL: [HTE, JHP],
CVW: [JHP, TCA]}","Node HTE is connected to nodes IDY, JYL.
Node JHP is connected to nodes CKI, NXZ, ROL, JYL, CVW.
Node TCA is connected to nodes UMI, CVW.
Node IDY is connected to node HTE.
Node CKI is connected to node JHP.
Node UMI is connected to node TCA.
Node NXZ is connected to node JHP.
Node ROL is connected to node JHP.
Node JYL is connected to nodes HTE, JHP.
Node CVW is connected to nodes JHP, TCA.","[HTE, JHP, TCA, IDY, CKI, UMI, NXZ, ROL, JYL, CVW]",10,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HTE JHP TCA.
Nodes set 2 contains: IDY CKI UMI NXZ ROL JYL CVW.","[(HTE, IDY), (JHP, CKI), (TCA, UMI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HTE. Updated matching: {IDY: HTE}.
Search from node JHP. Updated matching: {IDY: HTE, CKI: JHP}.
Search from node TCA. Updated matching: {IDY: HTE, CKI: JHP, UMI: TCA}.
So the maximum matching is ",3,7,22
bipartite,"[(ZPW, ESD), (ZPW, CDM), (ZPW, CXW), (ZPW, JDC), (RCM, CDM), (RCM, VZJ), (RCM, CXW), (RCM, TGF), (RCM, JDC), (BPF, TGF)]","{ZPW: [ESD, CDM, CXW, JDC],
RCM: [CDM, VZJ, CXW, TGF, JDC],
BPF: [TGF],
ESD: [ZPW],
CDM: [ZPW, RCM],
VZJ: [RCM],
CXW: [ZPW, RCM],
TGF: [RCM, BPF],
JDC: [ZPW, RCM]}","Node ZPW is connected to nodes ESD, CDM, CXW, JDC.
Node RCM is connected to nodes CDM, VZJ, CXW, TGF, JDC.
Node BPF is connected to node TGF.
Node ESD is connected to node ZPW.
Node CDM is connected to nodes ZPW, RCM.
Node VZJ is connected to node RCM.
Node CXW is connected to nodes ZPW, RCM.
Node TGF is connected to nodes RCM, BPF.
Node JDC is connected to nodes ZPW, RCM.","[ZPW, RCM, BPF, ESD, CDM, VZJ, CXW, TGF, JDC]",9,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZPW RCM BPF.
Nodes set 2 contains: ESD CDM VZJ CXW TGF JDC.","[(ZPW, ESD), (RCM, CDM), (BPF, TGF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZPW. Updated matching: {ESD: ZPW}.
Search from node RCM. Updated matching: {ESD: ZPW, CDM: RCM}.
Search from node BPF. Updated matching: {ESD: ZPW, CDM: RCM, TGF: BPF}.
So the maximum matching is ",3,6,23
bipartite,"[(ZMK, JEV), (ZMK, IWN), (ZMK, AEM), (GYE, JEV), (GYE, LJZ), (FHY, JEV), (FHY, IWN), (FHY, BUH)]","{ZMK: [JEV, IWN, AEM],
GYE: [JEV, LJZ],
FHY: [JEV, IWN, BUH],
JEV: [ZMK, GYE, FHY],
IWN: [ZMK, FHY],
BUH: [FHY],
AEM: [ZMK],
LJZ: [GYE]}","Node ZMK is connected to nodes JEV, IWN, AEM.
Node GYE is connected to nodes JEV, LJZ.
Node FHY is connected to nodes JEV, IWN, BUH.
Node JEV is connected to nodes ZMK, GYE, FHY.
Node IWN is connected to nodes ZMK, FHY.
Node BUH is connected to node FHY.
Node AEM is connected to node ZMK.
Node LJZ is connected to node GYE.","[ZMK, GYE, FHY, JEV, IWN, BUH, AEM, LJZ]",8,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZMK GYE FHY.
Nodes set 2 contains: JEV IWN BUH AEM LJZ.","[(ZMK, IWN), (GYE, LJZ), (FHY, JEV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZMK. Updated matching: {JEV: ZMK}.
Search from node GYE. Updated matching: {JEV: GYE, IWN: ZMK}.
Search from node FHY. Updated matching: {JEV: FHY, IWN: ZMK, LJZ: GYE}.
So the maximum matching is ",3,5,24
bipartite,"[(YNH, HWB), (YNH, AGM), (YNH, CMX), (SSV, OEE), (SSV, CMX), (SSV, FVX), (LOM, AGM), (LOM, FVX)]","{YNH: [HWB, AGM, CMX],
SSV: [OEE, CMX, FVX],
LOM: [AGM, FVX],
OEE: [SSV],
HWB: [YNH],
AGM: [YNH, LOM],
CMX: [YNH, SSV],
FVX: [SSV, LOM]}","Node YNH is connected to nodes HWB, AGM, CMX.
Node SSV is connected to nodes OEE, CMX, FVX.
Node LOM is connected to nodes AGM, FVX.
Node OEE is connected to node SSV.
Node HWB is connected to node YNH.
Node AGM is connected to nodes YNH, LOM.
Node CMX is connected to nodes YNH, SSV.
Node FVX is connected to nodes SSV, LOM.","[YNH, SSV, LOM, OEE, HWB, AGM, CMX, FVX]",8,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YNH SSV LOM.
Nodes set 2 contains: OEE HWB AGM CMX FVX.","[(YNH, HWB), (SSV, OEE), (LOM, AGM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YNH. Updated matching: {HWB: YNH}.
Search from node SSV. Updated matching: {HWB: YNH, OEE: SSV}.
Search from node LOM. Updated matching: {HWB: YNH, OEE: SSV, AGM: LOM}.
So the maximum matching is ",3,5,25
bipartite,"[(AJH, GDI), (AJH, ZSH), (AJH, ZYF), (AJH, TWT), (ONJ, XRQ), (ONJ, ZSH), (ONJ, VEN), (ONJ, VMJ), (ONJ, KYS)]","{AJH: [GDI, ZSH, ZYF, TWT],
ONJ: [XRQ, ZSH, VEN, VMJ, KYS],
XRQ: [ONJ],
GDI: [AJH],
ZSH: [AJH, ONJ],
ZYF: [AJH],
VEN: [ONJ],
TWT: [AJH],
VMJ: [ONJ],
KYS: [ONJ]}","Node AJH is connected to nodes GDI, ZSH, ZYF, TWT.
Node ONJ is connected to nodes XRQ, ZSH, VEN, VMJ, KYS.
Node XRQ is connected to node ONJ.
Node GDI is connected to node AJH.
Node ZSH is connected to nodes AJH, ONJ.
Node ZYF is connected to node AJH.
Node VEN is connected to node ONJ.
Node TWT is connected to node AJH.
Node VMJ is connected to node ONJ.
Node KYS is connected to node ONJ.","[AJH, ONJ, XRQ, GDI, ZSH, ZYF, VEN, TWT, VMJ, KYS]",10,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: AJH ONJ.
Nodes set 2 contains: XRQ GDI ZSH ZYF VEN TWT VMJ KYS.","[(AJH, GDI), (ONJ, XRQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node AJH. Updated matching: {GDI: AJH}.
Search from node ONJ. Updated matching: {GDI: AJH, XRQ: ONJ}.
So the maximum matching is ",2,8,26
bipartite,"[(WJD, YWF), (WJD, EVZ), (WJD, ORB), (WJD, VIH), (WJD, MHB), (WJD, DKQ), (TNC, YWF), (UQD, PDG), (UQD, DKQ), (UFI, EVZ), (UFI, VIH), (UFI, ZSR)]","{WJD: [YWF, EVZ, ORB, VIH, MHB, DKQ],
TNC: [YWF],
UQD: [PDG, DKQ],
UFI: [EVZ, VIH, ZSR],
YWF: [WJD, TNC],
EVZ: [WJD, UFI],
ORB: [WJD],
VIH: [WJD, UFI],
MHB: [WJD],
PDG: [UQD],
DKQ: [WJD, UQD],
ZSR: [UFI]}","Node WJD is connected to nodes YWF, EVZ, ORB, VIH, MHB, DKQ.
Node TNC is connected to node YWF.
Node UQD is connected to nodes PDG, DKQ.
Node UFI is connected to nodes EVZ, VIH, ZSR.
Node YWF is connected to nodes WJD, TNC.
Node EVZ is connected to nodes WJD, UFI.
Node ORB is connected to node WJD.
Node VIH is connected to nodes WJD, UFI.
Node MHB is connected to node WJD.
Node PDG is connected to node UQD.
Node DKQ is connected to nodes WJD, UQD.
Node ZSR is connected to node UFI.","[WJD, TNC, UQD, UFI, YWF, EVZ, ORB, VIH, MHB, PDG, DKQ, ZSR]",12,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WJD TNC UQD UFI.
Nodes set 2 contains: YWF EVZ ORB VIH MHB PDG DKQ ZSR.","[(WJD, ORB), (TNC, YWF), (UQD, PDG), (UFI, EVZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WJD. Updated matching: {YWF: WJD}.
Search from node TNC. Updated matching: {YWF: TNC, EVZ: WJD}.
Search from node UQD. Updated matching: {YWF: TNC, EVZ: WJD, PDG: UQD}.
Search from node UFI. Updated matching: {YWF: TNC, EVZ: UFI, PDG: UQD, ORB: WJD}.
So the maximum matching is ",4,8,27
bipartite,"[(GKS, XGM), (GKS, HFK), (GKS, CVB), (IHS, UWA), (IHS, SWW), (IHS, CVB), (MHX, UWA)]","{GKS: [XGM, HFK, CVB],
IHS: [UWA, SWW, CVB],
MHX: [UWA],
XGM: [GKS],
UWA: [IHS, MHX],
HFK: [GKS],
SWW: [IHS],
CVB: [GKS, IHS]}","Node GKS is connected to nodes XGM, HFK, CVB.
Node IHS is connected to nodes UWA, SWW, CVB.
Node MHX is connected to node UWA.
Node XGM is connected to node GKS.
Node UWA is connected to nodes IHS, MHX.
Node HFK is connected to node GKS.
Node SWW is connected to node IHS.
Node CVB is connected to nodes GKS, IHS.","[GKS, IHS, MHX, XGM, UWA, HFK, SWW, CVB]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GKS IHS MHX.
Nodes set 2 contains: XGM UWA HFK SWW CVB.","[(GKS, XGM), (IHS, SWW), (MHX, UWA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GKS. Updated matching: {XGM: GKS}.
Search from node IHS. Updated matching: {XGM: GKS, UWA: IHS}.
Search from node MHX. Updated matching: {XGM: GKS, UWA: MHX, SWW: IHS}.
So the maximum matching is ",3,5,28
bipartite,"[(TGT, AVE), (TGT, LYV), (TGT, CMX), (SAD, FPB), (SAD, VHH), (SAD, AVE), (SAD, KIW), (SAD, SUL), (UQL, FPB), (UQL, VHH), (UQL, AVE), (UQL, SUL), (UQL, CMX), (SIT, FPB), (SIT, WQR), (SIT, FBF), (SIT, LYV), (SIT, SUL), (STQ, VHH), (STQ, FBF), (STQ, LYV), (STQ, SUL), (STQ, ASR)]","{TGT: [AVE, LYV, CMX],
SAD: [FPB, VHH, AVE, KIW, SUL],
UQL: [FPB, VHH, AVE, SUL, CMX],
SIT: [FPB, WQR, FBF, LYV, SUL],
STQ: [VHH, FBF, LYV, SUL, ASR],
FPB: [SAD, UQL, SIT],
WQR: [SIT],
VHH: [SAD, UQL, STQ],
FBF: [SIT, STQ],
AVE: [TGT, SAD, UQL],
KIW: [SAD],
LYV: [TGT, SIT, STQ],
SUL: [SAD, UQL, SIT, STQ],
CMX: [TGT, UQL],
ASR: [STQ]}","Node TGT is connected to nodes AVE, LYV, CMX.
Node SAD is connected to nodes FPB, VHH, AVE, KIW, SUL.
Node UQL is connected to nodes FPB, VHH, AVE, SUL, CMX.
Node SIT is connected to nodes FPB, WQR, FBF, LYV, SUL.
Node STQ is connected to nodes VHH, FBF, LYV, SUL, ASR.
Node FPB is connected to nodes SAD, UQL, SIT.
Node WQR is connected to node SIT.
Node VHH is connected to nodes SAD, UQL, STQ.
Node FBF is connected to nodes SIT, STQ.
Node AVE is connected to nodes TGT, SAD, UQL.
Node KIW is connected to node SAD.
Node LYV is connected to nodes TGT, SIT, STQ.
Node SUL is connected to nodes SAD, UQL, SIT, STQ.
Node CMX is connected to nodes TGT, UQL.
Node ASR is connected to node STQ.","[TGT, SAD, UQL, SIT, STQ, FPB, WQR, VHH, FBF, AVE, KIW, LYV, SUL, CMX, ASR]",15,23,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TGT SAD UQL SIT STQ.
Nodes set 2 contains: FPB WQR VHH FBF AVE KIW LYV SUL CMX ASR.","[(TGT, LYV), (SAD, AVE), (UQL, FPB), (SIT, WQR), (STQ, VHH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TGT. Updated matching: {AVE: TGT}.
Search from node SAD. Updated matching: {AVE: TGT, FPB: SAD}.
Search from node UQL. Updated matching: {AVE: TGT, FPB: UQL, VHH: SAD}.
Search from node SIT. Updated matching: {AVE: SAD, FPB: SIT, VHH: UQL, LYV: TGT}.
Search from node STQ. Updated matching: {AVE: SAD, FPB: UQL, VHH: STQ, LYV: TGT, WQR: SIT}.
So the maximum matching is ",5,10,29
bipartite,"[(YYO, WJH), (YYO, GSO), (YYO, IIP), (YYO, PQY), (YYO, ICR), (IAG, YNE), (IAG, WJH), (IAG, IIP), (IAG, ZVH), (IAG, JXL), (IAG, ICR), (XCB, YNE), (XCB, IIP), (GOX, YNE), (GOX, GSO), (GOX, ZVH), (GOX, ICR)]","{YYO: [WJH, GSO, IIP, PQY, ICR],
IAG: [YNE, WJH, IIP, ZVH, JXL, ICR],
XCB: [YNE, IIP],
GOX: [YNE, GSO, ZVH, ICR],
YNE: [IAG, XCB, GOX],
WJH: [YYO, IAG],
GSO: [YYO, GOX],
IIP: [YYO, IAG, XCB],
ZVH: [IAG, GOX],
PQY: [YYO],
JXL: [IAG],
ICR: [YYO, IAG, GOX]}","Node YYO is connected to nodes WJH, GSO, IIP, PQY, ICR.
Node IAG is connected to nodes YNE, WJH, IIP, ZVH, JXL, ICR.
Node XCB is connected to nodes YNE, IIP.
Node GOX is connected to nodes YNE, GSO, ZVH, ICR.
Node YNE is connected to nodes IAG, XCB, GOX.
Node WJH is connected to nodes YYO, IAG.
Node GSO is connected to nodes YYO, GOX.
Node IIP is connected to nodes YYO, IAG, XCB.
Node ZVH is connected to nodes IAG, GOX.
Node PQY is connected to node YYO.
Node JXL is connected to node IAG.
Node ICR is connected to nodes YYO, IAG, GOX.","[YYO, IAG, XCB, GOX, YNE, WJH, GSO, IIP, ZVH, PQY, JXL, ICR]",12,17,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YYO IAG XCB GOX.
Nodes set 2 contains: YNE WJH GSO IIP ZVH PQY JXL ICR.","[(YYO, GSO), (IAG, WJH), (XCB, IIP), (GOX, YNE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YYO. Updated matching: {WJH: YYO}.
Search from node IAG. Updated matching: {WJH: YYO, YNE: IAG}.
Search from node XCB. Updated matching: {WJH: IAG, YNE: XCB, GSO: YYO}.
Search from node GOX. Updated matching: {WJH: IAG, YNE: GOX, GSO: YYO, IIP: XCB}.
So the maximum matching is ",4,8,30
bipartite,"[(PJY, AKV), (PJY, BCK), (PJY, VFD), (PJY, CWD), (PJY, EEI), (PJY, OHE), (PJY, XSY), (CTS, KLY), (CTS, EEI), (CTS, OHE), (QQN, VFD), (QQN, OHE), (QQN, ZAE), (VOV, LHC), (VOV, KLY), (VOV, BCK), (VOV, CWD), (VOV, OHE), (EUI, KLY), (EUI, VFD), (EUI, CWD), (EUI, EEI), (EUI, OHE), (EUI, XSY), (EUI, ZAE)]","{PJY: [AKV, BCK, VFD, CWD, EEI, OHE, XSY],
CTS: [KLY, EEI, OHE],
QQN: [VFD, OHE, ZAE],
VOV: [LHC, KLY, BCK, CWD, OHE],
EUI: [KLY, VFD, CWD, EEI, OHE, XSY, ZAE],
AKV: [PJY],
LHC: [VOV],
KLY: [CTS, VOV, EUI],
BCK: [PJY, VOV],
VFD: [PJY, QQN, EUI],
CWD: [PJY, VOV, EUI],
EEI: [PJY, CTS, EUI],
OHE: [PJY, CTS, QQN, VOV, EUI],
XSY: [PJY, EUI],
ZAE: [QQN, EUI]}","Node PJY is connected to nodes AKV, BCK, VFD, CWD, EEI, OHE, XSY.
Node CTS is connected to nodes KLY, EEI, OHE.
Node QQN is connected to nodes VFD, OHE, ZAE.
Node VOV is connected to nodes LHC, KLY, BCK, CWD, OHE.
Node EUI is connected to nodes KLY, VFD, CWD, EEI, OHE, XSY, ZAE.
Node AKV is connected to node PJY.
Node LHC is connected to node VOV.
Node KLY is connected to nodes CTS, VOV, EUI.
Node BCK is connected to nodes PJY, VOV.
Node VFD is connected to nodes PJY, QQN, EUI.
Node CWD is connected to nodes PJY, VOV, EUI.
Node EEI is connected to nodes PJY, CTS, EUI.
Node OHE is connected to nodes PJY, CTS, QQN, VOV, EUI.
Node XSY is connected to nodes PJY, EUI.
Node ZAE is connected to nodes QQN, EUI.","[PJY, CTS, QQN, VOV, EUI, AKV, LHC, KLY, BCK, VFD, CWD, EEI, OHE, XSY, ZAE]",15,25,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PJY CTS QQN VOV EUI.
Nodes set 2 contains: AKV LHC KLY BCK VFD CWD EEI OHE XSY ZAE.","[(PJY, AKV), (CTS, EEI), (QQN, VFD), (VOV, LHC), (EUI, KLY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PJY. Updated matching: {AKV: PJY}.
Search from node CTS. Updated matching: {AKV: PJY, KLY: CTS}.
Search from node QQN. Updated matching: {AKV: PJY, KLY: CTS, VFD: QQN}.
Search from node VOV. Updated matching: {AKV: PJY, KLY: CTS, VFD: QQN, LHC: VOV}.
Search from node EUI. Updated matching: {AKV: PJY, KLY: EUI, VFD: QQN, LHC: VOV, EEI: CTS}.
So the maximum matching is ",5,10,31
bipartite,"[(VDI, CEM), (VDI, HVB), (JHP, OYE), (JHP, HVB), (JHP, ZLA), (HCX, THS), (HCX, OYE), (HCX, ZLA)]","{VDI: [CEM, HVB],
JHP: [OYE, HVB, ZLA],
HCX: [THS, OYE, ZLA],
THS: [HCX],
OYE: [JHP, HCX],
CEM: [VDI],
HVB: [VDI, JHP],
ZLA: [JHP, HCX]}","Node VDI is connected to nodes CEM, HVB.
Node JHP is connected to nodes OYE, HVB, ZLA.
Node HCX is connected to nodes THS, OYE, ZLA.
Node THS is connected to node HCX.
Node OYE is connected to nodes JHP, HCX.
Node CEM is connected to node VDI.
Node HVB is connected to nodes VDI, JHP.
Node ZLA is connected to nodes JHP, HCX.","[VDI, JHP, HCX, THS, OYE, CEM, HVB, ZLA]",8,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VDI JHP HCX.
Nodes set 2 contains: THS OYE CEM HVB ZLA.","[(VDI, CEM), (JHP, OYE), (HCX, THS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VDI. Updated matching: {CEM: VDI}.
Search from node JHP. Updated matching: {CEM: VDI, OYE: JHP}.
Search from node HCX. Updated matching: {CEM: VDI, OYE: JHP, THS: HCX}.
So the maximum matching is ",3,5,32
bipartite,"[(ZCD, GPF), (ZCD, RYL), (ZCD, BDO), (ZCD, ZZQ), (LKK, GPF), (LKK, NDH), (LKK, DBN), (PBN, GPF), (PBN, RYL), (PBN, DBN), (PBN, BDO)]","{ZCD: [GPF, RYL, BDO, ZZQ],
LKK: [GPF, NDH, DBN],
PBN: [GPF, RYL, DBN, BDO],
GPF: [ZCD, LKK, PBN],
NDH: [LKK],
RYL: [ZCD, PBN],
DBN: [LKK, PBN],
BDO: [ZCD, PBN],
ZZQ: [ZCD]}","Node ZCD is connected to nodes GPF, RYL, BDO, ZZQ.
Node LKK is connected to nodes GPF, NDH, DBN.
Node PBN is connected to nodes GPF, RYL, DBN, BDO.
Node GPF is connected to nodes ZCD, LKK, PBN.
Node NDH is connected to node LKK.
Node RYL is connected to nodes ZCD, PBN.
Node DBN is connected to nodes LKK, PBN.
Node BDO is connected to nodes ZCD, PBN.
Node ZZQ is connected to node ZCD.","[ZCD, LKK, PBN, GPF, NDH, RYL, DBN, BDO, ZZQ]",9,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZCD LKK PBN.
Nodes set 2 contains: GPF NDH RYL DBN BDO ZZQ.","[(ZCD, RYL), (LKK, NDH), (PBN, GPF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZCD. Updated matching: {GPF: ZCD}.
Search from node LKK. Updated matching: {GPF: LKK, RYL: ZCD}.
Search from node PBN. Updated matching: {GPF: PBN, RYL: ZCD, NDH: LKK}.
So the maximum matching is ",3,6,33
bipartite,"[(EFE, DPZ), (GXQ, POV), (GXQ, GXG), (GXQ, BEB), (GXQ, OLC), (RTE, EJR), (RTE, OQE), (RTE, OLC), (VPQ, OQE), (VPQ, GXG), (VPQ, DPZ), (VPQ, VYC), (BHU, OQE), (BHU, GXG), (BHU, DPZ), (BHU, OLC)]","{EFE: [DPZ],
GXQ: [POV, GXG, BEB, OLC],
RTE: [EJR, OQE, OLC],
VPQ: [OQE, GXG, DPZ, VYC],
BHU: [OQE, GXG, DPZ, OLC],
POV: [GXQ],
EJR: [RTE],
OQE: [RTE, VPQ, BHU],
GXG: [GXQ, VPQ, BHU],
BEB: [GXQ],
DPZ: [EFE, VPQ, BHU],
VYC: [VPQ],
OLC: [GXQ, RTE, BHU]}","Node EFE is connected to node DPZ.
Node GXQ is connected to nodes POV, GXG, BEB, OLC.
Node RTE is connected to nodes EJR, OQE, OLC.
Node VPQ is connected to nodes OQE, GXG, DPZ, VYC.
Node BHU is connected to nodes OQE, GXG, DPZ, OLC.
Node POV is connected to node GXQ.
Node EJR is connected to node RTE.
Node OQE is connected to nodes RTE, VPQ, BHU.
Node GXG is connected to nodes GXQ, VPQ, BHU.
Node BEB is connected to node GXQ.
Node DPZ is connected to nodes EFE, VPQ, BHU.
Node VYC is connected to node VPQ.
Node OLC is connected to nodes GXQ, RTE, BHU.","[EFE, GXQ, RTE, VPQ, BHU, POV, EJR, OQE, GXG, BEB, DPZ, VYC, OLC]",13,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: EFE GXQ RTE VPQ BHU.
Nodes set 2 contains: POV EJR OQE GXG BEB DPZ VYC OLC.","[(EFE, DPZ), (GXQ, POV), (RTE, EJR), (VPQ, GXG), (BHU, OQE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node EFE. Updated matching: {DPZ: EFE}.
Search from node GXQ. Updated matching: {DPZ: EFE, POV: GXQ}.
Search from node RTE. Updated matching: {DPZ: EFE, POV: GXQ, EJR: RTE}.
Search from node VPQ. Updated matching: {DPZ: EFE, POV: GXQ, EJR: RTE, OQE: VPQ}.
Search from node BHU. Updated matching: {DPZ: EFE, POV: GXQ, EJR: RTE, OQE: BHU, GXG: VPQ}.
So the maximum matching is ",5,8,34
bipartite,"[(TXL, VZL), (TXL, ADB), (TXL, SCF), (XMZ, PCE), (XMZ, HJP), (CRN, QAV), (CRN, SCF), (CRN, HJP), (RZQ, VZL), (RZQ, PCE), (RZQ, SCF)]","{TXL: [VZL, ADB, SCF],
XMZ: [PCE, HJP],
CRN: [QAV, SCF, HJP],
RZQ: [VZL, PCE, SCF],
VZL: [TXL, RZQ],
ADB: [TXL],
PCE: [XMZ, RZQ],
QAV: [CRN],
SCF: [TXL, CRN, RZQ],
HJP: [XMZ, CRN]}","Node TXL is connected to nodes VZL, ADB, SCF.
Node XMZ is connected to nodes PCE, HJP.
Node CRN is connected to nodes QAV, SCF, HJP.
Node RZQ is connected to nodes VZL, PCE, SCF.
Node VZL is connected to nodes TXL, RZQ.
Node ADB is connected to node TXL.
Node PCE is connected to nodes XMZ, RZQ.
Node QAV is connected to node CRN.
Node SCF is connected to nodes TXL, CRN, RZQ.
Node HJP is connected to nodes XMZ, CRN.","[TXL, XMZ, CRN, RZQ, VZL, ADB, PCE, QAV, SCF, HJP]",10,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TXL XMZ CRN RZQ.
Nodes set 2 contains: VZL ADB PCE QAV SCF HJP.","[(TXL, ADB), (XMZ, PCE), (CRN, QAV), (RZQ, VZL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TXL. Updated matching: {VZL: TXL}.
Search from node XMZ. Updated matching: {VZL: TXL, PCE: XMZ}.
Search from node CRN. Updated matching: {VZL: TXL, PCE: XMZ, QAV: CRN}.
Search from node RZQ. Updated matching: {VZL: RZQ, PCE: XMZ, QAV: CRN, ADB: TXL}.
So the maximum matching is ",4,6,35
bipartite,"[(ATK, UDZ), (ATK, ILG), (TOK, XKV), (TOK, ILG), (TOK, WHG), (GEW, XKV), (AFV, UDZ), (SNK, CVF), (SNK, TYA), (SNK, USW), (RYK, CVF), (RYK, ILG), (RYK, WHG)]","{ATK: [UDZ, ILG],
TOK: [XKV, ILG, WHG],
GEW: [XKV],
AFV: [UDZ],
SNK: [CVF, TYA, USW],
RYK: [CVF, ILG, WHG],
CVF: [SNK, RYK],
TYA: [SNK],
UDZ: [ATK, AFV],
XKV: [TOK, GEW],
ILG: [ATK, TOK, RYK],
WHG: [TOK, RYK],
USW: [SNK]}","Node ATK is connected to nodes UDZ, ILG.
Node TOK is connected to nodes XKV, ILG, WHG.
Node GEW is connected to node XKV.
Node AFV is connected to node UDZ.
Node SNK is connected to nodes CVF, TYA, USW.
Node RYK is connected to nodes CVF, ILG, WHG.
Node CVF is connected to nodes SNK, RYK.
Node TYA is connected to node SNK.
Node UDZ is connected to nodes ATK, AFV.
Node XKV is connected to nodes TOK, GEW.
Node ILG is connected to nodes ATK, TOK, RYK.
Node WHG is connected to nodes TOK, RYK.
Node USW is connected to node SNK.","[ATK, TOK, GEW, AFV, SNK, RYK, CVF, TYA, UDZ, XKV, ILG, WHG, USW]",13,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ATK TOK GEW AFV SNK RYK.
Nodes set 2 contains: CVF TYA UDZ XKV ILG WHG USW.","[(ATK, ILG), (TOK, WHG), (GEW, XKV), (AFV, UDZ), (SNK, TYA), (RYK, CVF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ATK. Updated matching: {UDZ: ATK}.
Search from node TOK. Updated matching: {UDZ: ATK, XKV: TOK}.
Search from node GEW. Updated matching: {UDZ: ATK, XKV: GEW, ILG: TOK}.
Search from node AFV. Updated matching: {UDZ: AFV, XKV: GEW, ILG: ATK, WHG: TOK}.
Search from node SNK. Updated matching: {UDZ: AFV, XKV: GEW, ILG: ATK, WHG: TOK, CVF: SNK}.
Search from node RYK. Updated matching: {UDZ: AFV, XKV: GEW, ILG: ATK, WHG: TOK, CVF: RYK, TYA: SNK}.
So the maximum matching is ",6,7,36
bipartite,"[(IWK, XNC), (IWK, RMJ), (IWK, VJV), (IWK, MBI), (MRH, RMJ), (MRH, OFJ), (XZI, RMJ), (XZI, MBI), (XZI, OFJ)]","{IWK: [XNC, RMJ, VJV, MBI],
MRH: [RMJ, OFJ],
XZI: [RMJ, MBI, OFJ],
XNC: [IWK],
RMJ: [IWK, MRH, XZI],
VJV: [IWK],
MBI: [IWK, XZI],
OFJ: [MRH, XZI]}","Node IWK is connected to nodes XNC, RMJ, VJV, MBI.
Node MRH is connected to nodes RMJ, OFJ.
Node XZI is connected to nodes RMJ, MBI, OFJ.
Node XNC is connected to node IWK.
Node RMJ is connected to nodes IWK, MRH, XZI.
Node VJV is connected to node IWK.
Node MBI is connected to nodes IWK, XZI.
Node OFJ is connected to nodes MRH, XZI.","[IWK, MRH, XZI, XNC, RMJ, VJV, MBI, OFJ]",8,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IWK MRH XZI.
Nodes set 2 contains: XNC RMJ VJV MBI OFJ.","[(IWK, XNC), (MRH, OFJ), (XZI, RMJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IWK. Updated matching: {XNC: IWK}.
Search from node MRH. Updated matching: {XNC: IWK, RMJ: MRH}.
Search from node XZI. Updated matching: {XNC: IWK, RMJ: XZI, OFJ: MRH}.
So the maximum matching is ",3,5,37
bipartite,"[(TLH, FBH), (TLH, XQH), (TLH, PWZ), (KLV, URA), (KLV, PWZ), (KLV, LNO), (LOR, URA)]","{TLH: [FBH, XQH, PWZ],
KLV: [URA, PWZ, LNO],
LOR: [URA],
FBH: [TLH],
XQH: [TLH],
URA: [KLV, LOR],
PWZ: [TLH, KLV],
LNO: [KLV]}","Node TLH is connected to nodes FBH, XQH, PWZ.
Node KLV is connected to nodes URA, PWZ, LNO.
Node LOR is connected to node URA.
Node FBH is connected to node TLH.
Node XQH is connected to node TLH.
Node URA is connected to nodes KLV, LOR.
Node PWZ is connected to nodes TLH, KLV.
Node LNO is connected to node KLV.","[TLH, KLV, LOR, FBH, XQH, URA, PWZ, LNO]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TLH KLV LOR.
Nodes set 2 contains: FBH XQH URA PWZ LNO.","[(TLH, FBH), (KLV, PWZ), (LOR, URA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TLH. Updated matching: {FBH: TLH}.
Search from node KLV. Updated matching: {FBH: TLH, URA: KLV}.
Search from node LOR. Updated matching: {FBH: TLH, URA: LOR, PWZ: KLV}.
So the maximum matching is ",3,5,38
bipartite,"[(QJD, CGG), (QJD, HDF), (QJD, DYI), (CTX, ENF), (CTX, BEW), (CTX, QFL), (CTX, TFT), (IMW, ENF), (IMW, BEW), (IMW, QFL), (IMW, FJE), (IMW, TFT), (IMW, DYI), (XMC, HDF)]","{QJD: [CGG, HDF, DYI],
CTX: [ENF, BEW, QFL, TFT],
IMW: [ENF, BEW, QFL, FJE, TFT, DYI],
XMC: [HDF],
ENF: [CTX, IMW],
BEW: [CTX, IMW],
QFL: [CTX, IMW],
FJE: [IMW],
TFT: [CTX, IMW],
CGG: [QJD],
HDF: [QJD, XMC],
DYI: [QJD, IMW]}","Node QJD is connected to nodes CGG, HDF, DYI.
Node CTX is connected to nodes ENF, BEW, QFL, TFT.
Node IMW is connected to nodes ENF, BEW, QFL, FJE, TFT, DYI.
Node XMC is connected to node HDF.
Node ENF is connected to nodes CTX, IMW.
Node BEW is connected to nodes CTX, IMW.
Node QFL is connected to nodes CTX, IMW.
Node FJE is connected to node IMW.
Node TFT is connected to nodes CTX, IMW.
Node CGG is connected to node QJD.
Node HDF is connected to nodes QJD, XMC.
Node DYI is connected to nodes QJD, IMW.","[QJD, CTX, IMW, XMC, ENF, BEW, QFL, FJE, TFT, CGG, HDF, DYI]",12,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QJD CTX IMW XMC.
Nodes set 2 contains: ENF BEW QFL FJE TFT CGG HDF DYI.","[(QJD, CGG), (CTX, BEW), (IMW, ENF), (XMC, HDF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QJD. Updated matching: {CGG: QJD}.
Search from node CTX. Updated matching: {CGG: QJD, ENF: CTX}.
Search from node IMW. Updated matching: {CGG: QJD, ENF: IMW, BEW: CTX}.
Search from node XMC. Updated matching: {CGG: QJD, ENF: IMW, BEW: CTX, HDF: XMC}.
So the maximum matching is ",4,8,39
bipartite,"[(CJQ, STP), (CJQ, HFQ), (CJQ, DCQ), (CJQ, EQL), (ZTP, ZUR), (ZTP, HFQ), (ZTP, DCQ), (FMZ, HFQ), (FMZ, EQL), (HKE, STP), (HKE, ZUR), (HKE, VDK), (HKE, HFQ), (HKE, DCQ), (HKE, EQL), (HKE, MCY)]","{CJQ: [STP, HFQ, DCQ, EQL],
ZTP: [ZUR, HFQ, DCQ],
FMZ: [HFQ, EQL],
HKE: [STP, ZUR, VDK, HFQ, DCQ, EQL, MCY],
STP: [CJQ, HKE],
ZUR: [ZTP, HKE],
VDK: [HKE],
HFQ: [CJQ, ZTP, FMZ, HKE],
DCQ: [CJQ, ZTP, HKE],
EQL: [CJQ, FMZ, HKE],
MCY: [HKE]}","Node CJQ is connected to nodes STP, HFQ, DCQ, EQL.
Node ZTP is connected to nodes ZUR, HFQ, DCQ.
Node FMZ is connected to nodes HFQ, EQL.
Node HKE is connected to nodes STP, ZUR, VDK, HFQ, DCQ, EQL, MCY.
Node STP is connected to nodes CJQ, HKE.
Node ZUR is connected to nodes ZTP, HKE.
Node VDK is connected to node HKE.
Node HFQ is connected to nodes CJQ, ZTP, FMZ, HKE.
Node DCQ is connected to nodes CJQ, ZTP, HKE.
Node EQL is connected to nodes CJQ, FMZ, HKE.
Node MCY is connected to node HKE.","[CJQ, ZTP, FMZ, HKE, STP, ZUR, VDK, HFQ, DCQ, EQL, MCY]",11,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CJQ ZTP FMZ HKE.
Nodes set 2 contains: STP ZUR VDK HFQ DCQ EQL MCY.","[(CJQ, HFQ), (ZTP, ZUR), (FMZ, EQL), (HKE, STP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CJQ. Updated matching: {STP: CJQ}.
Search from node ZTP. Updated matching: {STP: CJQ, ZUR: ZTP}.
Search from node FMZ. Updated matching: {STP: CJQ, ZUR: ZTP, HFQ: FMZ}.
Search from node HKE. Updated matching: {STP: HKE, ZUR: ZTP, HFQ: CJQ, EQL: FMZ}.
So the maximum matching is ",4,7,40
bipartite,"[(OQG, KTK), (OQG, WYQ), (GMK, KOB), (GMK, WYQ), (TAB, HUQ), (TAB, KTK), (TAB, WYQ), (NZU, HUQ), (NZU, RNX), (NZU, FKM), (NZU, KTK), (NZU, WYQ)]","{OQG: [KTK, WYQ],
GMK: [KOB, WYQ],
TAB: [HUQ, KTK, WYQ],
NZU: [HUQ, RNX, FKM, KTK, WYQ],
HUQ: [TAB, NZU],
RNX: [NZU],
FKM: [NZU],
KOB: [GMK],
KTK: [OQG, TAB, NZU],
WYQ: [OQG, GMK, TAB, NZU]}","Node OQG is connected to nodes KTK, WYQ.
Node GMK is connected to nodes KOB, WYQ.
Node TAB is connected to nodes HUQ, KTK, WYQ.
Node NZU is connected to nodes HUQ, RNX, FKM, KTK, WYQ.
Node HUQ is connected to nodes TAB, NZU.
Node RNX is connected to node NZU.
Node FKM is connected to node NZU.
Node KOB is connected to node GMK.
Node KTK is connected to nodes OQG, TAB, NZU.
Node WYQ is connected to nodes OQG, GMK, TAB, NZU.","[OQG, GMK, TAB, NZU, HUQ, RNX, FKM, KOB, KTK, WYQ]",10,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OQG GMK TAB NZU.
Nodes set 2 contains: HUQ RNX FKM KOB KTK WYQ.","[(OQG, WYQ), (GMK, KOB), (TAB, KTK), (NZU, HUQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OQG. Updated matching: {KTK: OQG}.
Search from node GMK. Updated matching: {KTK: OQG, KOB: GMK}.
Search from node TAB. Updated matching: {KTK: OQG, KOB: GMK, HUQ: TAB}.
Search from node NZU. Updated matching: {KTK: TAB, KOB: GMK, HUQ: NZU, WYQ: OQG}.
So the maximum matching is ",4,6,41
bipartite,"[(UZJ, VMQ), (UZJ, CMV), (UZJ, UAS), (EHD, VMQ), (EHD, WZN), (APX, VMQ), (SVG, PEE), (SVG, CJK), (HMM, PEE), (HMM, WZN), (HMM, CJK)]","{UZJ: [VMQ, CMV, UAS],
EHD: [VMQ, WZN],
APX: [VMQ],
SVG: [PEE, CJK],
HMM: [PEE, WZN, CJK],
VMQ: [UZJ, EHD, APX],
CMV: [UZJ],
UAS: [UZJ],
PEE: [SVG, HMM],
WZN: [EHD, HMM],
CJK: [SVG, HMM]}","Node UZJ is connected to nodes VMQ, CMV, UAS.
Node EHD is connected to nodes VMQ, WZN.
Node APX is connected to node VMQ.
Node SVG is connected to nodes PEE, CJK.
Node HMM is connected to nodes PEE, WZN, CJK.
Node VMQ is connected to nodes UZJ, EHD, APX.
Node CMV is connected to node UZJ.
Node UAS is connected to node UZJ.
Node PEE is connected to nodes SVG, HMM.
Node WZN is connected to nodes EHD, HMM.
Node CJK is connected to nodes SVG, HMM.","[UZJ, EHD, APX, SVG, HMM, VMQ, CMV, UAS, PEE, WZN, CJK]",11,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UZJ EHD APX SVG HMM.
Nodes set 2 contains: VMQ CMV UAS PEE WZN CJK.","[(UZJ, CMV), (EHD, WZN), (APX, VMQ), (SVG, CJK), (HMM, PEE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UZJ. Updated matching: {VMQ: UZJ}.
Search from node EHD. Updated matching: {VMQ: EHD, CMV: UZJ}.
Search from node APX. Updated matching: {VMQ: APX, CMV: UZJ, WZN: EHD}.
Search from node SVG. Updated matching: {VMQ: APX, CMV: UZJ, WZN: EHD, PEE: SVG}.
Search from node HMM. Updated matching: {VMQ: APX, CMV: UZJ, WZN: EHD, PEE: HMM, CJK: SVG}.
So the maximum matching is ",5,6,42
bipartite,"[(LDM, UBM), (LDM, NPZ), (LDM, WCS), (CSN, BRW), (CSN, OYV), (CSN, WCS), (GWN, UBM), (GWN, BRW), (GWN, UQQ), (AWT, NPZ), (AWT, ZXQ), (AWT, UQQ), (SXD, BRW)]","{LDM: [UBM, NPZ, WCS],
CSN: [BRW, OYV, WCS],
GWN: [UBM, BRW, UQQ],
AWT: [NPZ, ZXQ, UQQ],
SXD: [BRW],
UBM: [LDM, GWN],
NPZ: [LDM, AWT],
BRW: [CSN, GWN, SXD],
ZXQ: [AWT],
OYV: [CSN],
WCS: [LDM, CSN],
UQQ: [GWN, AWT]}","Node LDM is connected to nodes UBM, NPZ, WCS.
Node CSN is connected to nodes BRW, OYV, WCS.
Node GWN is connected to nodes UBM, BRW, UQQ.
Node AWT is connected to nodes NPZ, ZXQ, UQQ.
Node SXD is connected to node BRW.
Node UBM is connected to nodes LDM, GWN.
Node NPZ is connected to nodes LDM, AWT.
Node BRW is connected to nodes CSN, GWN, SXD.
Node ZXQ is connected to node AWT.
Node OYV is connected to node CSN.
Node WCS is connected to nodes LDM, CSN.
Node UQQ is connected to nodes GWN, AWT.","[LDM, CSN, GWN, AWT, SXD, UBM, NPZ, BRW, ZXQ, OYV, WCS, UQQ]",12,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LDM CSN GWN AWT SXD.
Nodes set 2 contains: UBM NPZ BRW ZXQ OYV WCS UQQ.","[(LDM, NPZ), (CSN, OYV), (GWN, UBM), (AWT, ZXQ), (SXD, BRW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LDM. Updated matching: {UBM: LDM}.
Search from node CSN. Updated matching: {UBM: LDM, BRW: CSN}.
Search from node GWN. Updated matching: {UBM: GWN, BRW: CSN, NPZ: LDM}.
Search from node AWT. Updated matching: {UBM: LDM, BRW: GWN, NPZ: AWT, OYV: CSN}.
Search from node SXD. Updated matching: {UBM: GWN, BRW: SXD, NPZ: LDM, OYV: CSN, ZXQ: AWT}.
So the maximum matching is ",5,7,43
bipartite,"[(SGK, IDQ), (DXQ, WYN), (DXQ, LHH), (DXQ, VWL), (DXQ, EAB), (DXQ, AWR), (INU, RIL), (INU, XJN), (INU, EAB), (INU, AWR), (YMQ, LHH), (YMQ, RIL), (YMQ, IDQ), (LXB, EAB)]","{SGK: [IDQ],
DXQ: [WYN, LHH, VWL, EAB, AWR],
INU: [RIL, XJN, EAB, AWR],
YMQ: [LHH, RIL, IDQ],
LXB: [EAB],
WYN: [DXQ],
LHH: [DXQ, YMQ],
VWL: [DXQ],
RIL: [INU, YMQ],
XJN: [INU],
IDQ: [SGK, YMQ],
EAB: [DXQ, INU, LXB],
AWR: [DXQ, INU]}","Node SGK is connected to node IDQ.
Node DXQ is connected to nodes WYN, LHH, VWL, EAB, AWR.
Node INU is connected to nodes RIL, XJN, EAB, AWR.
Node YMQ is connected to nodes LHH, RIL, IDQ.
Node LXB is connected to node EAB.
Node WYN is connected to node DXQ.
Node LHH is connected to nodes DXQ, YMQ.
Node VWL is connected to node DXQ.
Node RIL is connected to nodes INU, YMQ.
Node XJN is connected to node INU.
Node IDQ is connected to nodes SGK, YMQ.
Node EAB is connected to nodes DXQ, INU, LXB.
Node AWR is connected to nodes DXQ, INU.","[SGK, DXQ, INU, YMQ, LXB, WYN, LHH, VWL, RIL, XJN, IDQ, EAB, AWR]",13,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SGK DXQ INU YMQ LXB.
Nodes set 2 contains: WYN LHH VWL RIL XJN IDQ EAB AWR.","[(SGK, IDQ), (DXQ, WYN), (INU, RIL), (YMQ, LHH), (LXB, EAB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SGK. Updated matching: {IDQ: SGK}.
Search from node DXQ. Updated matching: {IDQ: SGK, WYN: DXQ}.
Search from node INU. Updated matching: {IDQ: SGK, WYN: DXQ, RIL: INU}.
Search from node YMQ. Updated matching: {IDQ: SGK, WYN: DXQ, RIL: INU, LHH: YMQ}.
Search from node LXB. Updated matching: {IDQ: SGK, WYN: DXQ, RIL: INU, LHH: YMQ, EAB: LXB}.
So the maximum matching is ",5,8,44
bipartite,"[(AZR, ZMJ), (AZR, YEG), (AZR, BGW), (AZR, LJU), (DWH, ZMJ), (DWH, YEG), (DWH, DJA), (DWH, BGW), (HQL, YEG), (HQL, BGW), (HQL, XCF), (WNF, YEG), (ULJ, BGW), (ULJ, LJU)]","{AZR: [ZMJ, YEG, BGW, LJU],
DWH: [ZMJ, YEG, DJA, BGW],
HQL: [YEG, BGW, XCF],
WNF: [YEG],
ULJ: [BGW, LJU],
ZMJ: [AZR, DWH],
YEG: [AZR, DWH, HQL, WNF],
DJA: [DWH],
BGW: [AZR, DWH, HQL, ULJ],
XCF: [HQL],
LJU: [AZR, ULJ]}","Node AZR is connected to nodes ZMJ, YEG, BGW, LJU.
Node DWH is connected to nodes ZMJ, YEG, DJA, BGW.
Node HQL is connected to nodes YEG, BGW, XCF.
Node WNF is connected to node YEG.
Node ULJ is connected to nodes BGW, LJU.
Node ZMJ is connected to nodes AZR, DWH.
Node YEG is connected to nodes AZR, DWH, HQL, WNF.
Node DJA is connected to node DWH.
Node BGW is connected to nodes AZR, DWH, HQL, ULJ.
Node XCF is connected to node HQL.
Node LJU is connected to nodes AZR, ULJ.","[AZR, DWH, HQL, WNF, ULJ, ZMJ, YEG, DJA, BGW, XCF, LJU]",11,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: AZR DWH HQL WNF ULJ.
Nodes set 2 contains: ZMJ YEG DJA BGW XCF LJU.","[(AZR, ZMJ), (DWH, DJA), (HQL, XCF), (WNF, YEG), (ULJ, BGW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node AZR. Updated matching: {ZMJ: AZR}.
Search from node DWH. Updated matching: {ZMJ: DWH, YEG: AZR}.
Search from node HQL. Updated matching: {ZMJ: AZR, YEG: HQL, DJA: DWH}.
Search from node WNF. Updated matching: {ZMJ: AZR, YEG: WNF, DJA: DWH, BGW: HQL}.
Search from node ULJ. Updated matching: {ZMJ: AZR, YEG: WNF, DJA: DWH, BGW: ULJ, XCF: HQL}.
So the maximum matching is ",5,6,45
bipartite,"[(YFO, BCX), (YFO, SWA), (YFO, FGG), (OKE, GZN), (ZBU, GZN), (ZBU, GZO), (QHI, RFQ), (QHI, SWA), (QHI, GZO), (QHI, NTX)]","{YFO: [BCX, SWA, FGG],
OKE: [GZN],
ZBU: [GZN, GZO],
QHI: [RFQ, SWA, GZO, NTX],
GZN: [OKE, ZBU],
BCX: [YFO],
RFQ: [QHI],
SWA: [YFO, QHI],
GZO: [ZBU, QHI],
NTX: [QHI],
FGG: [YFO]}","Node YFO is connected to nodes BCX, SWA, FGG.
Node OKE is connected to node GZN.
Node ZBU is connected to nodes GZN, GZO.
Node QHI is connected to nodes RFQ, SWA, GZO, NTX.
Node GZN is connected to nodes OKE, ZBU.
Node BCX is connected to node YFO.
Node RFQ is connected to node QHI.
Node SWA is connected to nodes YFO, QHI.
Node GZO is connected to nodes ZBU, QHI.
Node NTX is connected to node QHI.
Node FGG is connected to node YFO.","[YFO, OKE, ZBU, QHI, GZN, BCX, RFQ, SWA, GZO, NTX, FGG]",11,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YFO OKE ZBU QHI.
Nodes set 2 contains: GZN BCX RFQ SWA GZO NTX FGG.","[(YFO, BCX), (OKE, GZN), (ZBU, GZO), (QHI, RFQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YFO. Updated matching: {BCX: YFO}.
Search from node OKE. Updated matching: {BCX: YFO, GZN: OKE}.
Search from node ZBU. Updated matching: {BCX: YFO, GZN: OKE, GZO: ZBU}.
Search from node QHI. Updated matching: {BCX: YFO, GZN: OKE, GZO: ZBU, RFQ: QHI}.
So the maximum matching is ",4,7,46
bipartite,"[(ZEB, ZHJ), (ZEB, DFD), (ZEB, YEZ), (ZEB, CLY), (ZEB, IRH), (AXJ, ZHJ), (AXJ, DFD), (AXJ, CLY), (AXJ, IRH), (KPE, ROG), (KPE, YEZ), (KPE, PDP), (KGE, DFD), (KGE, YEZ), (KGE, CLY), (TDG, ROG), (TDG, SPQ), (TDG, YEZ), (TDG, IRH)]","{ZEB: [ZHJ, DFD, YEZ, CLY, IRH],
AXJ: [ZHJ, DFD, CLY, IRH],
KPE: [ROG, YEZ, PDP],
KGE: [DFD, YEZ, CLY],
TDG: [ROG, SPQ, YEZ, IRH],
ZHJ: [ZEB, AXJ],
ROG: [KPE, TDG],
SPQ: [TDG],
DFD: [ZEB, AXJ, KGE],
YEZ: [ZEB, KPE, KGE, TDG],
CLY: [ZEB, AXJ, KGE],
PDP: [KPE],
IRH: [ZEB, AXJ, TDG]}","Node ZEB is connected to nodes ZHJ, DFD, YEZ, CLY, IRH.
Node AXJ is connected to nodes ZHJ, DFD, CLY, IRH.
Node KPE is connected to nodes ROG, YEZ, PDP.
Node KGE is connected to nodes DFD, YEZ, CLY.
Node TDG is connected to nodes ROG, SPQ, YEZ, IRH.
Node ZHJ is connected to nodes ZEB, AXJ.
Node ROG is connected to nodes KPE, TDG.
Node SPQ is connected to node TDG.
Node DFD is connected to nodes ZEB, AXJ, KGE.
Node YEZ is connected to nodes ZEB, KPE, KGE, TDG.
Node CLY is connected to nodes ZEB, AXJ, KGE.
Node PDP is connected to node KPE.
Node IRH is connected to nodes ZEB, AXJ, TDG.","[ZEB, AXJ, KPE, KGE, TDG, ZHJ, ROG, SPQ, DFD, YEZ, CLY, PDP, IRH]",13,19,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZEB AXJ KPE KGE TDG.
Nodes set 2 contains: ZHJ ROG SPQ DFD YEZ CLY PDP IRH.","[(ZEB, ZHJ), (AXJ, CLY), (KPE, YEZ), (KGE, DFD), (TDG, ROG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZEB. Updated matching: {ZHJ: ZEB}.
Search from node AXJ. Updated matching: {ZHJ: AXJ, DFD: ZEB}.
Search from node KPE. Updated matching: {ZHJ: AXJ, DFD: ZEB, ROG: KPE}.
Search from node KGE. Updated matching: {ZHJ: ZEB, DFD: KGE, ROG: KPE, CLY: AXJ}.
Search from node TDG. Updated matching: {ZHJ: ZEB, DFD: KGE, ROG: TDG, CLY: AXJ, YEZ: KPE}.
So the maximum matching is ",5,8,47
bipartite,"[(HMC, QVT), (HMC, KPY), (HMC, GQN), (HMC, YXF), (HMC, QJN), (HMC, KAH), (OLD, QVT), (OLD, KPY), (WFE, JPN), (WFE, KPY), (WFE, IBV), (RGJ, JPN), (RGJ, KAH), (RGJ, DJD), (BGP, QJN), (BGP, DJD)]","{HMC: [QVT, KPY, GQN, YXF, QJN, KAH],
OLD: [QVT, KPY],
WFE: [JPN, KPY, IBV],
RGJ: [JPN, KAH, DJD],
BGP: [QJN, DJD],
JPN: [WFE, RGJ],
QVT: [HMC, OLD],
KPY: [HMC, OLD, WFE],
GQN: [HMC],
YXF: [HMC],
QJN: [HMC, BGP],
IBV: [WFE],
KAH: [HMC, RGJ],
DJD: [RGJ, BGP]}","Node HMC is connected to nodes QVT, KPY, GQN, YXF, QJN, KAH.
Node OLD is connected to nodes QVT, KPY.
Node WFE is connected to nodes JPN, KPY, IBV.
Node RGJ is connected to nodes JPN, KAH, DJD.
Node BGP is connected to nodes QJN, DJD.
Node JPN is connected to nodes WFE, RGJ.
Node QVT is connected to nodes HMC, OLD.
Node KPY is connected to nodes HMC, OLD, WFE.
Node GQN is connected to node HMC.
Node YXF is connected to node HMC.
Node QJN is connected to nodes HMC, BGP.
Node IBV is connected to node WFE.
Node KAH is connected to nodes HMC, RGJ.
Node DJD is connected to nodes RGJ, BGP.","[HMC, OLD, WFE, RGJ, BGP, JPN, QVT, KPY, GQN, YXF, QJN, IBV, KAH, DJD]",14,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HMC OLD WFE RGJ BGP.
Nodes set 2 contains: JPN QVT KPY GQN YXF QJN IBV KAH DJD.","[(HMC, GQN), (OLD, QVT), (WFE, KPY), (RGJ, JPN), (BGP, QJN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HMC. Updated matching: {QVT: HMC}.
Search from node OLD. Updated matching: {QVT: OLD, KPY: HMC}.
Search from node WFE. Updated matching: {QVT: OLD, KPY: HMC, JPN: WFE}.
Search from node RGJ. Updated matching: {QVT: OLD, KPY: WFE, JPN: RGJ, GQN: HMC}.
Search from node BGP. Updated matching: {QVT: OLD, KPY: WFE, JPN: RGJ, GQN: HMC, QJN: BGP}.
So the maximum matching is ",5,9,48
bipartite,"[(YOG, ETE), (YOG, OAS), (YOG, GMV), (YLS, FHY), (YLS, TLY), (GRT, TLY), (GRT, VZU), (GRT, ETE), (GRT, OAS), (GRT, QJO), (WYH, MPH), (WYH, VZU), (WYH, JFD), (WYH, NDB), (WYH, OAS), (WYH, NPX), (WYH, QJO)]","{YOG: [ETE, OAS, GMV],
YLS: [FHY, TLY],
GRT: [TLY, VZU, ETE, OAS, QJO],
WYH: [MPH, VZU, JFD, NDB, OAS, NPX, QJO],
FHY: [YLS],
MPH: [WYH],
TLY: [YLS, GRT],
VZU: [GRT, WYH],
ETE: [YOG, GRT],
JFD: [WYH],
NDB: [WYH],
OAS: [YOG, GRT, WYH],
GMV: [YOG],
NPX: [WYH],
QJO: [GRT, WYH]}","Node YOG is connected to nodes ETE, OAS, GMV.
Node YLS is connected to nodes FHY, TLY.
Node GRT is connected to nodes TLY, VZU, ETE, OAS, QJO.
Node WYH is connected to nodes MPH, VZU, JFD, NDB, OAS, NPX, QJO.
Node FHY is connected to node YLS.
Node MPH is connected to node WYH.
Node TLY is connected to nodes YLS, GRT.
Node VZU is connected to nodes GRT, WYH.
Node ETE is connected to nodes YOG, GRT.
Node JFD is connected to node WYH.
Node NDB is connected to node WYH.
Node OAS is connected to nodes YOG, GRT, WYH.
Node GMV is connected to node YOG.
Node NPX is connected to node WYH.
Node QJO is connected to nodes GRT, WYH.","[YOG, YLS, GRT, WYH, FHY, MPH, TLY, VZU, ETE, JFD, NDB, OAS, GMV, NPX, QJO]",15,17,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YOG YLS GRT WYH.
Nodes set 2 contains: FHY MPH TLY VZU ETE JFD NDB OAS GMV NPX QJO.","[(YOG, ETE), (YLS, FHY), (GRT, TLY), (WYH, MPH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YOG. Updated matching: {ETE: YOG}.
Search from node YLS. Updated matching: {ETE: YOG, FHY: YLS}.
Search from node GRT. Updated matching: {ETE: YOG, FHY: YLS, TLY: GRT}.
Search from node WYH. Updated matching: {ETE: YOG, FHY: YLS, TLY: GRT, MPH: WYH}.
So the maximum matching is ",4,11,49
bipartite,"[(PHC, RKB), (PHC, QYC), (PHC, IHY), (AZZ, KVC), (AZZ, RKB), (AZZ, QYC), (AZZ, WQB), (AZZ, IHY), (ANR, BNI), (ANR, KVC), (ANR, QYC), (ANR, WQB), (EEU, RKB), (EEU, CZN), (EEU, WQB), (EEU, OXE), (EEU, IHY), (EEU, UZY), (EEU, NPI)]","{PHC: [RKB, QYC, IHY],
AZZ: [KVC, RKB, QYC, WQB, IHY],
ANR: [BNI, KVC, QYC, WQB],
EEU: [RKB, CZN, WQB, OXE, IHY, UZY, NPI],
BNI: [ANR],
KVC: [AZZ, ANR],
RKB: [PHC, AZZ, EEU],
QYC: [PHC, AZZ, ANR],
CZN: [EEU],
WQB: [AZZ, ANR, EEU],
OXE: [EEU],
IHY: [PHC, AZZ, EEU],
UZY: [EEU],
NPI: [EEU]}","Node PHC is connected to nodes RKB, QYC, IHY.
Node AZZ is connected to nodes KVC, RKB, QYC, WQB, IHY.
Node ANR is connected to nodes BNI, KVC, QYC, WQB.
Node EEU is connected to nodes RKB, CZN, WQB, OXE, IHY, UZY, NPI.
Node BNI is connected to node ANR.
Node KVC is connected to nodes AZZ, ANR.
Node RKB is connected to nodes PHC, AZZ, EEU.
Node QYC is connected to nodes PHC, AZZ, ANR.
Node CZN is connected to node EEU.
Node WQB is connected to nodes AZZ, ANR, EEU.
Node OXE is connected to node EEU.
Node IHY is connected to nodes PHC, AZZ, EEU.
Node UZY is connected to node EEU.
Node NPI is connected to node EEU.","[PHC, AZZ, ANR, EEU, BNI, KVC, RKB, QYC, CZN, WQB, OXE, IHY, UZY, NPI]",14,19,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PHC AZZ ANR EEU.
Nodes set 2 contains: BNI KVC RKB QYC CZN WQB OXE IHY UZY NPI.","[(PHC, QYC), (AZZ, KVC), (ANR, BNI), (EEU, RKB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PHC. Updated matching: {RKB: PHC}.
Search from node AZZ. Updated matching: {RKB: PHC, KVC: AZZ}.
Search from node ANR. Updated matching: {RKB: PHC, KVC: AZZ, BNI: ANR}.
Search from node EEU. Updated matching: {RKB: EEU, KVC: AZZ, BNI: ANR, QYC: PHC}.
So the maximum matching is ",4,10,50
bipartite,"[(TXO, OAE), (TXO, OSV), (TXO, NXR), (JPI, VUL), (JPI, RPS), (JPI, YFZ), (EIO, YUG), (DUM, VUL), (DUM, OAE), (DUM, XUP), (DUM, OSV), (DUM, YUG), (IJB, VUL), (IJB, XUP), (IJB, YFZ), (IJB, YUG), (IJB, NXR), (QII, RPS), (QII, OAE), (QII, XUP), (QII, OSV), (QII, YUG)]","{TXO: [OAE, OSV, NXR],
JPI: [VUL, RPS, YFZ],
EIO: [YUG],
DUM: [VUL, OAE, XUP, OSV, YUG],
IJB: [VUL, XUP, YFZ, YUG, NXR],
QII: [RPS, OAE, XUP, OSV, YUG],
VUL: [JPI, DUM, IJB],
RPS: [JPI, QII],
OAE: [TXO, DUM, QII],
XUP: [DUM, IJB, QII],
OSV: [TXO, DUM, QII],
YFZ: [JPI, IJB],
YUG: [EIO, DUM, IJB, QII],
NXR: [TXO, IJB]}","Node TXO is connected to nodes OAE, OSV, NXR.
Node JPI is connected to nodes VUL, RPS, YFZ.
Node EIO is connected to node YUG.
Node DUM is connected to nodes VUL, OAE, XUP, OSV, YUG.
Node IJB is connected to nodes VUL, XUP, YFZ, YUG, NXR.
Node QII is connected to nodes RPS, OAE, XUP, OSV, YUG.
Node VUL is connected to nodes JPI, DUM, IJB.
Node RPS is connected to nodes JPI, QII.
Node OAE is connected to nodes TXO, DUM, QII.
Node XUP is connected to nodes DUM, IJB, QII.
Node OSV is connected to nodes TXO, DUM, QII.
Node YFZ is connected to nodes JPI, IJB.
Node YUG is connected to nodes EIO, DUM, IJB, QII.
Node NXR is connected to nodes TXO, IJB.","[TXO, JPI, EIO, DUM, IJB, QII, VUL, RPS, OAE, XUP, OSV, YFZ, YUG, NXR]",14,22,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TXO JPI EIO DUM IJB QII.
Nodes set 2 contains: VUL RPS OAE XUP OSV YFZ YUG NXR.","[(TXO, OSV), (JPI, VUL), (EIO, YUG), (DUM, OAE), (IJB, XUP), (QII, RPS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TXO. Updated matching: {OAE: TXO}.
Search from node JPI. Updated matching: {OAE: TXO, VUL: JPI}.
Search from node EIO. Updated matching: {OAE: TXO, VUL: JPI, YUG: EIO}.
Search from node DUM. Updated matching: {OAE: TXO, VUL: DUM, YUG: EIO, RPS: JPI}.
Search from node IJB. Updated matching: {OAE: DUM, VUL: IJB, YUG: EIO, RPS: JPI, OSV: TXO}.
Search from node QII. Updated matching: {OAE: DUM, VUL: JPI, YUG: EIO, RPS: QII, OSV: TXO, XUP: IJB}.
So the maximum matching is ",6,8,51
bipartite,"[(LTI, SIF), (LTI, DUU), (LTI, TNB), (LTI, XRX), (LTI, CBM), (LTI, SHA), (ASW, TGF), (ASW, SHA), (VRQ, SIF), (VRQ, DUU), (BVR, DUU), (BVR, BPI), (BVR, CBM), (BVR, SHA), (FAA, SIF), (FAA, TNB), (FAA, SHA), (LGU, SIF), (LGU, TNB), (LGU, BIJ), (LGU, CBM)]","{LTI: [SIF, DUU, TNB, XRX, CBM, SHA],
ASW: [TGF, SHA],
VRQ: [SIF, DUU],
BVR: [DUU, BPI, CBM, SHA],
FAA: [SIF, TNB, SHA],
LGU: [SIF, TNB, BIJ, CBM],
SIF: [LTI, VRQ, FAA, LGU],
DUU: [LTI, VRQ, BVR],
TNB: [LTI, FAA, LGU],
BIJ: [LGU],
XRX: [LTI],
BPI: [BVR],
TGF: [ASW],
CBM: [LTI, BVR, LGU],
SHA: [LTI, ASW, BVR, FAA]}","Node LTI is connected to nodes SIF, DUU, TNB, XRX, CBM, SHA.
Node ASW is connected to nodes TGF, SHA.
Node VRQ is connected to nodes SIF, DUU.
Node BVR is connected to nodes DUU, BPI, CBM, SHA.
Node FAA is connected to nodes SIF, TNB, SHA.
Node LGU is connected to nodes SIF, TNB, BIJ, CBM.
Node SIF is connected to nodes LTI, VRQ, FAA, LGU.
Node DUU is connected to nodes LTI, VRQ, BVR.
Node TNB is connected to nodes LTI, FAA, LGU.
Node BIJ is connected to node LGU.
Node XRX is connected to node LTI.
Node BPI is connected to node BVR.
Node TGF is connected to node ASW.
Node CBM is connected to nodes LTI, BVR, LGU.
Node SHA is connected to nodes LTI, ASW, BVR, FAA.","[LTI, ASW, VRQ, BVR, FAA, LGU, SIF, DUU, TNB, BIJ, XRX, BPI, TGF, CBM, SHA]",15,21,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LTI ASW VRQ BVR FAA LGU.
Nodes set 2 contains: SIF DUU TNB BIJ XRX BPI TGF CBM SHA.","[(LTI, XRX), (ASW, TGF), (VRQ, DUU), (BVR, BPI), (FAA, TNB), (LGU, SIF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LTI. Updated matching: {SIF: LTI}.
Search from node ASW. Updated matching: {SIF: LTI, TGF: ASW}.
Search from node VRQ. Updated matching: {SIF: VRQ, TGF: ASW, DUU: LTI}.
Search from node BVR. Updated matching: {SIF: VRQ, TGF: ASW, DUU: BVR, TNB: LTI}.
Search from node FAA. Updated matching: {SIF: FAA, TGF: ASW, DUU: VRQ, TNB: LTI, BPI: BVR}.
Search from node LGU. Updated matching: {SIF: LGU, TGF: ASW, DUU: VRQ, TNB: FAA, BPI: BVR, XRX: LTI}.
So the maximum matching is ",6,9,52
bipartite,"[(OTL, LHF), (OTL, VII), (OTL, SZP), (OTL, JKN), (LQG, GPO), (MYZ, YVL), (MYZ, MLT), (ADZ, QHX), (ADZ, UGJ), (ADZ, JKN), (EDW, YVL), (EDW, QHX), (EDW, VII), (EDW, MLT), (EDW, SZP), (EDW, UGJ), (VBH, VII), (VBH, GPO)]","{OTL: [LHF, VII, SZP, JKN],
LQG: [GPO],
MYZ: [YVL, MLT],
ADZ: [QHX, UGJ, JKN],
EDW: [YVL, QHX, VII, MLT, SZP, UGJ],
VBH: [VII, GPO],
LHF: [OTL],
YVL: [MYZ, EDW],
QHX: [ADZ, EDW],
VII: [OTL, EDW, VBH],
MLT: [MYZ, EDW],
GPO: [LQG, VBH],
SZP: [OTL, EDW],
UGJ: [ADZ, EDW],
JKN: [OTL, ADZ]}","Node OTL is connected to nodes LHF, VII, SZP, JKN.
Node LQG is connected to node GPO.
Node MYZ is connected to nodes YVL, MLT.
Node ADZ is connected to nodes QHX, UGJ, JKN.
Node EDW is connected to nodes YVL, QHX, VII, MLT, SZP, UGJ.
Node VBH is connected to nodes VII, GPO.
Node LHF is connected to node OTL.
Node YVL is connected to nodes MYZ, EDW.
Node QHX is connected to nodes ADZ, EDW.
Node VII is connected to nodes OTL, EDW, VBH.
Node MLT is connected to nodes MYZ, EDW.
Node GPO is connected to nodes LQG, VBH.
Node SZP is connected to nodes OTL, EDW.
Node UGJ is connected to nodes ADZ, EDW.
Node JKN is connected to nodes OTL, ADZ.","[OTL, LQG, MYZ, ADZ, EDW, VBH, LHF, YVL, QHX, VII, MLT, GPO, SZP, UGJ, JKN]",15,18,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OTL LQG MYZ ADZ EDW VBH.
Nodes set 2 contains: LHF YVL QHX VII MLT GPO SZP UGJ JKN.","[(OTL, LHF), (LQG, GPO), (MYZ, MLT), (ADZ, QHX), (EDW, YVL), (VBH, VII)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OTL. Updated matching: {LHF: OTL}.
Search from node LQG. Updated matching: {LHF: OTL, GPO: LQG}.
Search from node MYZ. Updated matching: {LHF: OTL, GPO: LQG, YVL: MYZ}.
Search from node ADZ. Updated matching: {LHF: OTL, GPO: LQG, YVL: MYZ, QHX: ADZ}.
Search from node EDW. Updated matching: {LHF: OTL, GPO: LQG, YVL: EDW, QHX: ADZ, MLT: MYZ}.
Search from node VBH. Updated matching: {LHF: OTL, GPO: LQG, YVL: EDW, QHX: ADZ, MLT: MYZ, VII: VBH}.
So the maximum matching is ",6,9,53
bipartite,"[(GWN, OTA), (GWN, JPO), (GWN, VIL), (GWN, QQW), (GWN, SSX), (CZM, NFQ), (CZM, OSI), (UUL, TVD), (UUL, JPO), (UUL, SSX), (ACV, TVD), (ACV, DZC), (ACV, OTA), (ACV, NFQ), (ACV, SSX)]","{GWN: [OTA, JPO, VIL, QQW, SSX],
CZM: [NFQ, OSI],
UUL: [TVD, JPO, SSX],
ACV: [TVD, DZC, OTA, NFQ, SSX],
TVD: [UUL, ACV],
DZC: [ACV],
OTA: [GWN, ACV],
JPO: [GWN, UUL],
VIL: [GWN],
QQW: [GWN],
NFQ: [CZM, ACV],
SSX: [GWN, UUL, ACV],
OSI: [CZM]}","Node GWN is connected to nodes OTA, JPO, VIL, QQW, SSX.
Node CZM is connected to nodes NFQ, OSI.
Node UUL is connected to nodes TVD, JPO, SSX.
Node ACV is connected to nodes TVD, DZC, OTA, NFQ, SSX.
Node TVD is connected to nodes UUL, ACV.
Node DZC is connected to node ACV.
Node OTA is connected to nodes GWN, ACV.
Node JPO is connected to nodes GWN, UUL.
Node VIL is connected to node GWN.
Node QQW is connected to node GWN.
Node NFQ is connected to nodes CZM, ACV.
Node SSX is connected to nodes GWN, UUL, ACV.
Node OSI is connected to node CZM.","[GWN, CZM, UUL, ACV, TVD, DZC, OTA, JPO, VIL, QQW, NFQ, SSX, OSI]",13,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GWN CZM UUL ACV.
Nodes set 2 contains: TVD DZC OTA JPO VIL QQW NFQ SSX OSI.","[(GWN, OTA), (CZM, NFQ), (UUL, JPO), (ACV, TVD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GWN. Updated matching: {OTA: GWN}.
Search from node CZM. Updated matching: {OTA: GWN, NFQ: CZM}.
Search from node UUL. Updated matching: {OTA: GWN, NFQ: CZM, TVD: UUL}.
Search from node ACV. Updated matching: {OTA: GWN, NFQ: CZM, TVD: ACV, JPO: UUL}.
So the maximum matching is ",4,9,54
bipartite,"[(UCA, MSM), (UCA, ZJM), (CSO, UEK), (NBV, WDG), (NBV, VCG), (NBV, LCT), (NBV, VIA), (NBV, ZJM), (NBV, UEK), (QCT, VCG), (QCT, LCT), (QCT, ZGQ), (LSM, VIA), (LSM, MSM), (HWQ, LCT), (HWQ, VIA), (HWQ, MSM), (HWQ, LYQ)]","{UCA: [MSM, ZJM],
CSO: [UEK],
NBV: [WDG, VCG, LCT, VIA, ZJM, UEK],
QCT: [VCG, LCT, ZGQ],
LSM: [VIA, MSM],
HWQ: [LCT, VIA, MSM, LYQ],
WDG: [NBV],
VCG: [NBV, QCT],
LCT: [NBV, QCT, HWQ],
VIA: [NBV, LSM, HWQ],
MSM: [UCA, LSM, HWQ],
ZGQ: [QCT],
ZJM: [UCA, NBV],
LYQ: [HWQ],
UEK: [CSO, NBV]}","Node UCA is connected to nodes MSM, ZJM.
Node CSO is connected to node UEK.
Node NBV is connected to nodes WDG, VCG, LCT, VIA, ZJM, UEK.
Node QCT is connected to nodes VCG, LCT, ZGQ.
Node LSM is connected to nodes VIA, MSM.
Node HWQ is connected to nodes LCT, VIA, MSM, LYQ.
Node WDG is connected to node NBV.
Node VCG is connected to nodes NBV, QCT.
Node LCT is connected to nodes NBV, QCT, HWQ.
Node VIA is connected to nodes NBV, LSM, HWQ.
Node MSM is connected to nodes UCA, LSM, HWQ.
Node ZGQ is connected to node QCT.
Node ZJM is connected to nodes UCA, NBV.
Node LYQ is connected to node HWQ.
Node UEK is connected to nodes CSO, NBV.","[UCA, CSO, NBV, QCT, LSM, HWQ, WDG, VCG, LCT, VIA, MSM, ZGQ, ZJM, LYQ, UEK]",15,18,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UCA CSO NBV QCT LSM HWQ.
Nodes set 2 contains: WDG VCG LCT VIA MSM ZGQ ZJM LYQ UEK.","[(UCA, MSM), (CSO, UEK), (NBV, WDG), (QCT, VCG), (LSM, VIA), (HWQ, LCT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UCA. Updated matching: {MSM: UCA}.
Search from node CSO. Updated matching: {MSM: UCA, UEK: CSO}.
Search from node NBV. Updated matching: {MSM: UCA, UEK: CSO, WDG: NBV}.
Search from node QCT. Updated matching: {MSM: UCA, UEK: CSO, WDG: NBV, VCG: QCT}.
Search from node LSM. Updated matching: {MSM: UCA, UEK: CSO, WDG: NBV, VCG: QCT, VIA: LSM}.
Search from node HWQ. Updated matching: {MSM: UCA, UEK: CSO, WDG: NBV, VCG: QCT, VIA: LSM, LCT: HWQ}.
So the maximum matching is ",6,9,55
bipartite,"[(RFY, EEZ), (RFY, VXJ), (RFY, SNP), (RFY, JYD), (RFY, RXA), (PRN, SNP), (PRN, MYC), (PRN, JYD), (PRN, RXA), (PRN, GPB), (CHC, LUF), (CHC, MYC), (CHC, VSR), (CHC, RXA), (CHC, GPB), (DAQ, LUF), (DAQ, EEZ), (DAQ, MYC), (DAQ, VSR), (AFA, MYC), (AFA, GPB), (PLV, EEZ), (PLV, VXJ), (PLV, MYC), (PLV, RXA)]","{RFY: [EEZ, VXJ, SNP, JYD, RXA],
PRN: [SNP, MYC, JYD, RXA, GPB],
CHC: [LUF, MYC, VSR, RXA, GPB],
DAQ: [LUF, EEZ, MYC, VSR],
AFA: [MYC, GPB],
PLV: [EEZ, VXJ, MYC, RXA],
LUF: [CHC, DAQ],
EEZ: [RFY, DAQ, PLV],
VXJ: [RFY, PLV],
SNP: [RFY, PRN],
MYC: [PRN, CHC, DAQ, AFA, PLV],
JYD: [RFY, PRN],
VSR: [CHC, DAQ],
RXA: [RFY, PRN, CHC, PLV],
GPB: [PRN, CHC, AFA]}","Node RFY is connected to nodes EEZ, VXJ, SNP, JYD, RXA.
Node PRN is connected to nodes SNP, MYC, JYD, RXA, GPB.
Node CHC is connected to nodes LUF, MYC, VSR, RXA, GPB.
Node DAQ is connected to nodes LUF, EEZ, MYC, VSR.
Node AFA is connected to nodes MYC, GPB.
Node PLV is connected to nodes EEZ, VXJ, MYC, RXA.
Node LUF is connected to nodes CHC, DAQ.
Node EEZ is connected to nodes RFY, DAQ, PLV.
Node VXJ is connected to nodes RFY, PLV.
Node SNP is connected to nodes RFY, PRN.
Node MYC is connected to nodes PRN, CHC, DAQ, AFA, PLV.
Node JYD is connected to nodes RFY, PRN.
Node VSR is connected to nodes CHC, DAQ.
Node RXA is connected to nodes RFY, PRN, CHC, PLV.
Node GPB is connected to nodes PRN, CHC, AFA.","[RFY, PRN, CHC, DAQ, AFA, PLV, LUF, EEZ, VXJ, SNP, MYC, JYD, VSR, RXA, GPB]",15,25,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RFY PRN CHC DAQ AFA PLV.
Nodes set 2 contains: LUF EEZ VXJ SNP MYC JYD VSR RXA GPB.","[(RFY, VXJ), (PRN, SNP), (CHC, MYC), (DAQ, LUF), (AFA, GPB), (PLV, EEZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RFY. Updated matching: {EEZ: RFY}.
Search from node PRN. Updated matching: {EEZ: RFY, SNP: PRN}.
Search from node CHC. Updated matching: {EEZ: RFY, SNP: PRN, LUF: CHC}.
Search from node DAQ. Updated matching: {EEZ: RFY, SNP: PRN, LUF: DAQ, MYC: CHC}.
Search from node AFA. Updated matching: {EEZ: DAQ, SNP: PRN, LUF: CHC, MYC: AFA, VXJ: RFY}.
Search from node PLV. Updated matching: {EEZ: PLV, SNP: PRN, LUF: DAQ, MYC: CHC, VXJ: RFY, GPB: AFA}.
So the maximum matching is ",6,9,56
bipartite,"[(JVH, VLN), (JVH, KCZ), (JVH, JQB), (NSD, NLB), (NSD, JQB), (NSD, EIK), (QQI, KCZ)]","{JVH: [VLN, KCZ, JQB],
NSD: [NLB, JQB, EIK],
QQI: [KCZ],
VLN: [JVH],
KCZ: [JVH, QQI],
NLB: [NSD],
JQB: [JVH, NSD],
EIK: [NSD]}","Node JVH is connected to nodes VLN, KCZ, JQB.
Node NSD is connected to nodes NLB, JQB, EIK.
Node QQI is connected to node KCZ.
Node VLN is connected to node JVH.
Node KCZ is connected to nodes JVH, QQI.
Node NLB is connected to node NSD.
Node JQB is connected to nodes JVH, NSD.
Node EIK is connected to node NSD.","[JVH, NSD, QQI, VLN, KCZ, NLB, JQB, EIK]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JVH NSD QQI.
Nodes set 2 contains: VLN KCZ NLB JQB EIK.","[(JVH, VLN), (NSD, NLB), (QQI, KCZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JVH. Updated matching: {VLN: JVH}.
Search from node NSD. Updated matching: {VLN: JVH, NLB: NSD}.
Search from node QQI. Updated matching: {VLN: JVH, NLB: NSD, KCZ: QQI}.
So the maximum matching is ",3,5,57
bipartite,"[(XRA, UVQ), (LHN, UEI), (LHN, CSW), (OXB, HZE), (OXB, UVQ), (OXB, FSU), (TXG, UEI), (TXG, HZE)]","{XRA: [UVQ],
LHN: [UEI, CSW],
OXB: [HZE, UVQ, FSU],
TXG: [UEI, HZE],
UEI: [LHN, TXG],
CSW: [LHN],
HZE: [OXB, TXG],
UVQ: [XRA, OXB],
FSU: [OXB]}","Node XRA is connected to node UVQ.
Node LHN is connected to nodes UEI, CSW.
Node OXB is connected to nodes HZE, UVQ, FSU.
Node TXG is connected to nodes UEI, HZE.
Node UEI is connected to nodes LHN, TXG.
Node CSW is connected to node LHN.
Node HZE is connected to nodes OXB, TXG.
Node UVQ is connected to nodes XRA, OXB.
Node FSU is connected to node OXB.","[XRA, LHN, OXB, TXG, UEI, CSW, HZE, UVQ, FSU]",9,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XRA LHN OXB TXG.
Nodes set 2 contains: UEI CSW HZE UVQ FSU.","[(XRA, UVQ), (LHN, CSW), (OXB, HZE), (TXG, UEI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XRA. Updated matching: {UVQ: XRA}.
Search from node LHN. Updated matching: {UVQ: XRA, UEI: LHN}.
Search from node OXB. Updated matching: {UVQ: XRA, UEI: LHN, HZE: OXB}.
Search from node TXG. Updated matching: {UVQ: XRA, UEI: TXG, HZE: OXB, CSW: LHN}.
So the maximum matching is ",4,5,58
bipartite,"[(KTY, AHI), (KTY, LHX), (KTY, BKI), (KTY, NHE), (SFS, AHI), (SFS, GKT), (SFS, LHX), (CVO, PTM), (CVO, GKT), (CVO, BKI), (CVO, NBX), (CVO, NHE)]","{KTY: [AHI, LHX, BKI, NHE],
SFS: [AHI, GKT, LHX],
CVO: [PTM, GKT, BKI, NBX, NHE],
AHI: [KTY, SFS],
PTM: [CVO],
GKT: [SFS, CVO],
LHX: [KTY, SFS],
BKI: [KTY, CVO],
NBX: [CVO],
NHE: [KTY, CVO]}","Node KTY is connected to nodes AHI, LHX, BKI, NHE.
Node SFS is connected to nodes AHI, GKT, LHX.
Node CVO is connected to nodes PTM, GKT, BKI, NBX, NHE.
Node AHI is connected to nodes KTY, SFS.
Node PTM is connected to node CVO.
Node GKT is connected to nodes SFS, CVO.
Node LHX is connected to nodes KTY, SFS.
Node BKI is connected to nodes KTY, CVO.
Node NBX is connected to node CVO.
Node NHE is connected to nodes KTY, CVO.","[KTY, SFS, CVO, AHI, PTM, GKT, LHX, BKI, NBX, NHE]",10,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: KTY SFS CVO.
Nodes set 2 contains: AHI PTM GKT LHX BKI NBX NHE.","[(KTY, LHX), (SFS, AHI), (CVO, PTM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node KTY. Updated matching: {AHI: KTY}.
Search from node SFS. Updated matching: {AHI: SFS, LHX: KTY}.
Search from node CVO. Updated matching: {AHI: SFS, LHX: KTY, PTM: CVO}.
So the maximum matching is ",3,7,59
bipartite,"[(OKG, TSM), (OKG, BXX), (OKG, ORR), (OKG, TYA), (YXE, TSM), (YXE, ORR), (YXE, TYA), (YXE, YNI), (FQQ, TSM), (FQQ, TYA), (FQQ, NBX), (REC, TSM), (REC, BXX), (REC, YNI), (REC, VZL), (REC, NBX), (MYF, TSM), (MYF, TYA), (MYF, YNI), (MYF, VZL)]","{OKG: [TSM, BXX, ORR, TYA],
YXE: [TSM, ORR, TYA, YNI],
FQQ: [TSM, TYA, NBX],
REC: [TSM, BXX, YNI, VZL, NBX],
MYF: [TSM, TYA, YNI, VZL],
TSM: [OKG, YXE, FQQ, REC, MYF],
BXX: [OKG, REC],
ORR: [OKG, YXE],
TYA: [OKG, YXE, FQQ, MYF],
YNI: [YXE, REC, MYF],
VZL: [REC, MYF],
NBX: [FQQ, REC]}","Node OKG is connected to nodes TSM, BXX, ORR, TYA.
Node YXE is connected to nodes TSM, ORR, TYA, YNI.
Node FQQ is connected to nodes TSM, TYA, NBX.
Node REC is connected to nodes TSM, BXX, YNI, VZL, NBX.
Node MYF is connected to nodes TSM, TYA, YNI, VZL.
Node TSM is connected to nodes OKG, YXE, FQQ, REC, MYF.
Node BXX is connected to nodes OKG, REC.
Node ORR is connected to nodes OKG, YXE.
Node TYA is connected to nodes OKG, YXE, FQQ, MYF.
Node YNI is connected to nodes YXE, REC, MYF.
Node VZL is connected to nodes REC, MYF.
Node NBX is connected to nodes FQQ, REC.","[OKG, YXE, FQQ, REC, MYF, TSM, BXX, ORR, TYA, YNI, VZL, NBX]",12,20,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OKG YXE FQQ REC MYF.
Nodes set 2 contains: TSM BXX ORR TYA YNI VZL NBX.","[(OKG, ORR), (YXE, TYA), (FQQ, NBX), (REC, BXX), (MYF, TSM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OKG. Updated matching: {TSM: OKG}.
Search from node YXE. Updated matching: {TSM: YXE, BXX: OKG}.
Search from node FQQ. Updated matching: {TSM: FQQ, BXX: OKG, ORR: YXE}.
Search from node REC. Updated matching: {TSM: REC, BXX: OKG, ORR: YXE, TYA: FQQ}.
Search from node MYF. Updated matching: {TSM: MYF, BXX: REC, ORR: OKG, TYA: YXE, NBX: FQQ}.
So the maximum matching is ",5,7,60
bipartite,"[(OEH, KVI), (OEH, JMG), (OEH, XWO), (DVV, NTB), (DVV, FKD), (DVV, NJG), (DVV, FVN), (UMC, FKD), (UMC, AAI), (UMC, AMY), (WVK, GGJ), (WVK, JMG), (WVK, YEC), (WVK, NJG)]","{OEH: [KVI, JMG, XWO],
DVV: [NTB, FKD, NJG, FVN],
UMC: [FKD, AAI, AMY],
WVK: [GGJ, JMG, YEC, NJG],
NTB: [DVV],
FKD: [DVV, UMC],
AAI: [UMC],
KVI: [OEH],
AMY: [UMC],
GGJ: [WVK],
JMG: [OEH, WVK],
YEC: [WVK],
XWO: [OEH],
NJG: [DVV, WVK],
FVN: [DVV]}","Node OEH is connected to nodes KVI, JMG, XWO.
Node DVV is connected to nodes NTB, FKD, NJG, FVN.
Node UMC is connected to nodes FKD, AAI, AMY.
Node WVK is connected to nodes GGJ, JMG, YEC, NJG.
Node NTB is connected to node DVV.
Node FKD is connected to nodes DVV, UMC.
Node AAI is connected to node UMC.
Node KVI is connected to node OEH.
Node AMY is connected to node UMC.
Node GGJ is connected to node WVK.
Node JMG is connected to nodes OEH, WVK.
Node YEC is connected to node WVK.
Node XWO is connected to node OEH.
Node NJG is connected to nodes DVV, WVK.
Node FVN is connected to node DVV.","[OEH, DVV, UMC, WVK, NTB, FKD, AAI, KVI, AMY, GGJ, JMG, YEC, XWO, NJG, FVN]",15,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OEH DVV UMC WVK.
Nodes set 2 contains: NTB FKD AAI KVI AMY GGJ JMG YEC XWO NJG FVN.","[(OEH, KVI), (DVV, NTB), (UMC, FKD), (WVK, GGJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OEH. Updated matching: {KVI: OEH}.
Search from node DVV. Updated matching: {KVI: OEH, NTB: DVV}.
Search from node UMC. Updated matching: {KVI: OEH, NTB: DVV, FKD: UMC}.
Search from node WVK. Updated matching: {KVI: OEH, NTB: DVV, FKD: UMC, GGJ: WVK}.
So the maximum matching is ",4,11,61
bipartite,"[(ERI, OVS), (ERI, ZXY), (ERI, COJ), (ERI, HGF), (TZR, COJ), (LTG, HUP), (DTF, YBQ), (DTF, PWA), (DTF, ZXY), (DTF, HGF), (HHF, WLC), (HHF, HUP), (HHF, HGF)]","{ERI: [OVS, ZXY, COJ, HGF],
TZR: [COJ],
LTG: [HUP],
DTF: [YBQ, PWA, ZXY, HGF],
HHF: [WLC, HUP, HGF],
YBQ: [DTF],
OVS: [ERI],
WLC: [HHF],
PWA: [DTF],
HUP: [LTG, HHF],
ZXY: [ERI, DTF],
COJ: [ERI, TZR],
HGF: [ERI, DTF, HHF]}","Node ERI is connected to nodes OVS, ZXY, COJ, HGF.
Node TZR is connected to node COJ.
Node LTG is connected to node HUP.
Node DTF is connected to nodes YBQ, PWA, ZXY, HGF.
Node HHF is connected to nodes WLC, HUP, HGF.
Node YBQ is connected to node DTF.
Node OVS is connected to node ERI.
Node WLC is connected to node HHF.
Node PWA is connected to node DTF.
Node HUP is connected to nodes LTG, HHF.
Node ZXY is connected to nodes ERI, DTF.
Node COJ is connected to nodes ERI, TZR.
Node HGF is connected to nodes ERI, DTF, HHF.","[ERI, TZR, LTG, DTF, HHF, YBQ, OVS, WLC, PWA, HUP, ZXY, COJ, HGF]",13,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ERI TZR LTG DTF HHF.
Nodes set 2 contains: YBQ OVS WLC PWA HUP ZXY COJ HGF.","[(ERI, OVS), (TZR, COJ), (LTG, HUP), (DTF, YBQ), (HHF, WLC)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ERI. Updated matching: {OVS: ERI}.
Search from node TZR. Updated matching: {OVS: ERI, COJ: TZR}.
Search from node LTG. Updated matching: {OVS: ERI, COJ: TZR, HUP: LTG}.
Search from node DTF. Updated matching: {OVS: ERI, COJ: TZR, HUP: LTG, YBQ: DTF}.
Search from node HHF. Updated matching: {OVS: ERI, COJ: TZR, HUP: LTG, YBQ: DTF, WLC: HHF}.
So the maximum matching is ",5,8,62
bipartite,"[(GVL, UYX), (GVL, DSW), (GVL, VEL), (GVL, UQV), (HHD, UQV), (HHD, SWD), (ZTY, YBD), (ZTY, DSW), (ZTY, UQV), (ZCN, ZKQ), (BMM, YBD), (BMM, XCY), (BMM, DSW), (BMM, ZKQ), (BMM, SWD), (QRH, YBD), (QRH, XCY), (QRH, DSW)]","{GVL: [UYX, DSW, VEL, UQV],
HHD: [UQV, SWD],
ZTY: [YBD, DSW, UQV],
ZCN: [ZKQ],
BMM: [YBD, XCY, DSW, ZKQ, SWD],
QRH: [YBD, XCY, DSW],
YBD: [ZTY, BMM, QRH],
XCY: [BMM, QRH],
UYX: [GVL],
DSW: [GVL, ZTY, BMM, QRH],
VEL: [GVL],
UQV: [GVL, HHD, ZTY],
ZKQ: [ZCN, BMM],
SWD: [HHD, BMM]}","Node GVL is connected to nodes UYX, DSW, VEL, UQV.
Node HHD is connected to nodes UQV, SWD.
Node ZTY is connected to nodes YBD, DSW, UQV.
Node ZCN is connected to node ZKQ.
Node BMM is connected to nodes YBD, XCY, DSW, ZKQ, SWD.
Node QRH is connected to nodes YBD, XCY, DSW.
Node YBD is connected to nodes ZTY, BMM, QRH.
Node XCY is connected to nodes BMM, QRH.
Node UYX is connected to node GVL.
Node DSW is connected to nodes GVL, ZTY, BMM, QRH.
Node VEL is connected to node GVL.
Node UQV is connected to nodes GVL, HHD, ZTY.
Node ZKQ is connected to nodes ZCN, BMM.
Node SWD is connected to nodes HHD, BMM.","[GVL, HHD, ZTY, ZCN, BMM, QRH, YBD, XCY, UYX, DSW, VEL, UQV, ZKQ, SWD]",14,18,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GVL HHD ZTY ZCN BMM QRH.
Nodes set 2 contains: YBD XCY UYX DSW VEL UQV ZKQ SWD.","[(GVL, UYX), (HHD, UQV), (ZTY, DSW), (ZCN, ZKQ), (BMM, XCY), (QRH, YBD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GVL. Updated matching: {UYX: GVL}.
Search from node HHD. Updated matching: {UYX: GVL, UQV: HHD}.
Search from node ZTY. Updated matching: {UYX: GVL, UQV: HHD, YBD: ZTY}.
Search from node ZCN. Updated matching: {UYX: GVL, UQV: HHD, YBD: ZTY, ZKQ: ZCN}.
Search from node BMM. Updated matching: {UYX: GVL, UQV: HHD, YBD: BMM, ZKQ: ZCN, DSW: ZTY}.
Search from node QRH. Updated matching: {UYX: GVL, UQV: HHD, YBD: QRH, ZKQ: ZCN, DSW: ZTY, XCY: BMM}.
So the maximum matching is ",6,8,63
bipartite,"[(BRE, KUQ), (BRE, RCV), (SZA, KPW), (SZA, KUQ), (SZA, RCV), (CEI, RCV), (SBB, WXJ), (SBB, MCS), (SBB, RCV), (SBB, DWY), (SDT, JMF), (SDT, MCS)]","{BRE: [KUQ, RCV],
SZA: [KPW, KUQ, RCV],
CEI: [RCV],
SBB: [WXJ, MCS, RCV, DWY],
SDT: [JMF, MCS],
KPW: [SZA],
WXJ: [SBB],
JMF: [SDT],
KUQ: [BRE, SZA],
MCS: [SBB, SDT],
RCV: [BRE, SZA, CEI, SBB],
DWY: [SBB]}","Node BRE is connected to nodes KUQ, RCV.
Node SZA is connected to nodes KPW, KUQ, RCV.
Node CEI is connected to node RCV.
Node SBB is connected to nodes WXJ, MCS, RCV, DWY.
Node SDT is connected to nodes JMF, MCS.
Node KPW is connected to node SZA.
Node WXJ is connected to node SBB.
Node JMF is connected to node SDT.
Node KUQ is connected to nodes BRE, SZA.
Node MCS is connected to nodes SBB, SDT.
Node RCV is connected to nodes BRE, SZA, CEI, SBB.
Node DWY is connected to node SBB.","[BRE, SZA, CEI, SBB, SDT, KPW, WXJ, JMF, KUQ, MCS, RCV, DWY]",12,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BRE SZA CEI SBB SDT.
Nodes set 2 contains: KPW WXJ JMF KUQ MCS RCV DWY.","[(BRE, KUQ), (SZA, KPW), (CEI, RCV), (SBB, WXJ), (SDT, JMF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BRE. Updated matching: {KUQ: BRE}.
Search from node SZA. Updated matching: {KUQ: BRE, KPW: SZA}.
Search from node CEI. Updated matching: {KUQ: BRE, KPW: SZA, RCV: CEI}.
Search from node SBB. Updated matching: {KUQ: BRE, KPW: SZA, RCV: CEI, WXJ: SBB}.
Search from node SDT. Updated matching: {KUQ: BRE, KPW: SZA, RCV: CEI, WXJ: SBB, JMF: SDT}.
So the maximum matching is ",5,7,64
bipartite,"[(BHC, LVO), (BHC, HUT), (BHC, ZCY), (BHC, LXT), (BHC, YXI), (BHC, RRW), (CCE, LVO), (CCE, HUT), (NNH, LVO), (NNH, EJV), (PJV, LVO), (PJV, HUT), (PJV, RRW), (PJV, EJV), (BWR, LXT), (BWR, YXI), (BWR, EJV)]","{BHC: [LVO, HUT, ZCY, LXT, YXI, RRW],
CCE: [LVO, HUT],
NNH: [LVO, EJV],
PJV: [LVO, HUT, RRW, EJV],
BWR: [LXT, YXI, EJV],
LVO: [BHC, CCE, NNH, PJV],
HUT: [BHC, CCE, PJV],
ZCY: [BHC],
LXT: [BHC, BWR],
YXI: [BHC, BWR],
RRW: [BHC, PJV],
EJV: [NNH, PJV, BWR]}","Node BHC is connected to nodes LVO, HUT, ZCY, LXT, YXI, RRW.
Node CCE is connected to nodes LVO, HUT.
Node NNH is connected to nodes LVO, EJV.
Node PJV is connected to nodes LVO, HUT, RRW, EJV.
Node BWR is connected to nodes LXT, YXI, EJV.
Node LVO is connected to nodes BHC, CCE, NNH, PJV.
Node HUT is connected to nodes BHC, CCE, PJV.
Node ZCY is connected to node BHC.
Node LXT is connected to nodes BHC, BWR.
Node YXI is connected to nodes BHC, BWR.
Node RRW is connected to nodes BHC, PJV.
Node EJV is connected to nodes NNH, PJV, BWR.","[BHC, CCE, NNH, PJV, BWR, LVO, HUT, ZCY, LXT, YXI, RRW, EJV]",12,17,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BHC CCE NNH PJV BWR.
Nodes set 2 contains: LVO HUT ZCY LXT YXI RRW EJV.","[(BHC, ZCY), (CCE, HUT), (NNH, EJV), (PJV, LVO), (BWR, LXT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BHC. Updated matching: {LVO: BHC}.
Search from node CCE. Updated matching: {LVO: CCE, HUT: BHC}.
Search from node NNH. Updated matching: {LVO: NNH, HUT: CCE, ZCY: BHC}.
Search from node PJV. Updated matching: {LVO: PJV, HUT: CCE, ZCY: BHC, EJV: NNH}.
Search from node BWR. Updated matching: {LVO: PJV, HUT: CCE, ZCY: BHC, EJV: NNH, LXT: BWR}.
So the maximum matching is ",5,7,65
bipartite,"[(ZEI, SDF), (ZEI, LVF), (VRB, ZTH), (VRB, LVK), (VRB, SDF), (STN, GAJ), (STN, OTF), (STN, DKD), (STN, KHV), (STN, JYZ), (ANP, ZTH), (ANP, GAJ), (ANP, ZZR), (TXW, ZTH), (TXW, LVF), (TXW, DKD)]","{ZEI: [SDF, LVF],
VRB: [ZTH, LVK, SDF],
STN: [GAJ, OTF, DKD, KHV, JYZ],
ANP: [ZTH, GAJ, ZZR],
TXW: [ZTH, LVF, DKD],
ZTH: [VRB, ANP, TXW],
LVK: [VRB],
GAJ: [STN, ANP],
OTF: [STN],
SDF: [ZEI, VRB],
ZZR: [ANP],
LVF: [ZEI, TXW],
DKD: [STN, TXW],
KHV: [STN],
JYZ: [STN]}","Node ZEI is connected to nodes SDF, LVF.
Node VRB is connected to nodes ZTH, LVK, SDF.
Node STN is connected to nodes GAJ, OTF, DKD, KHV, JYZ.
Node ANP is connected to nodes ZTH, GAJ, ZZR.
Node TXW is connected to nodes ZTH, LVF, DKD.
Node ZTH is connected to nodes VRB, ANP, TXW.
Node LVK is connected to node VRB.
Node GAJ is connected to nodes STN, ANP.
Node OTF is connected to node STN.
Node SDF is connected to nodes ZEI, VRB.
Node ZZR is connected to node ANP.
Node LVF is connected to nodes ZEI, TXW.
Node DKD is connected to nodes STN, TXW.
Node KHV is connected to node STN.
Node JYZ is connected to node STN.","[ZEI, VRB, STN, ANP, TXW, ZTH, LVK, GAJ, OTF, SDF, ZZR, LVF, DKD, KHV, JYZ]",15,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZEI VRB STN ANP TXW.
Nodes set 2 contains: ZTH LVK GAJ OTF SDF ZZR LVF DKD KHV JYZ.","[(ZEI, SDF), (VRB, LVK), (STN, OTF), (ANP, GAJ), (TXW, ZTH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZEI. Updated matching: {SDF: ZEI}.
Search from node VRB. Updated matching: {SDF: ZEI, ZTH: VRB}.
Search from node STN. Updated matching: {SDF: ZEI, ZTH: VRB, GAJ: STN}.
Search from node ANP. Updated matching: {SDF: ZEI, ZTH: ANP, GAJ: STN, LVK: VRB}.
Search from node TXW. Updated matching: {SDF: ZEI, ZTH: TXW, GAJ: ANP, LVK: VRB, OTF: STN}.
So the maximum matching is ",5,10,66
bipartite,"[(LFZ, OXU), (LFZ, VEW), (MIL, FOA), (MIL, OXU), (MIL, SPL), (LLG, OXU), (LLG, VEW), (GAD, SID), (GAD, FOA), (GAD, RPI), (GAD, SPL), (GAD, VEW)]","{LFZ: [OXU, VEW],
MIL: [FOA, OXU, SPL],
LLG: [OXU, VEW],
GAD: [SID, FOA, RPI, SPL, VEW],
SID: [GAD],
FOA: [MIL, GAD],
RPI: [GAD],
OXU: [LFZ, MIL, LLG],
SPL: [MIL, GAD],
VEW: [LFZ, LLG, GAD]}","Node LFZ is connected to nodes OXU, VEW.
Node MIL is connected to nodes FOA, OXU, SPL.
Node LLG is connected to nodes OXU, VEW.
Node GAD is connected to nodes SID, FOA, RPI, SPL, VEW.
Node SID is connected to node GAD.
Node FOA is connected to nodes MIL, GAD.
Node RPI is connected to node GAD.
Node OXU is connected to nodes LFZ, MIL, LLG.
Node SPL is connected to nodes MIL, GAD.
Node VEW is connected to nodes LFZ, LLG, GAD.","[LFZ, MIL, LLG, GAD, SID, FOA, RPI, OXU, SPL, VEW]",10,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LFZ MIL LLG GAD.
Nodes set 2 contains: SID FOA RPI OXU SPL VEW.","[(LFZ, VEW), (MIL, FOA), (LLG, OXU), (GAD, SID)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LFZ. Updated matching: {OXU: LFZ}.
Search from node MIL. Updated matching: {OXU: LFZ, FOA: MIL}.
Search from node LLG. Updated matching: {OXU: LLG, FOA: MIL, VEW: LFZ}.
Search from node GAD. Updated matching: {OXU: LLG, FOA: MIL, VEW: LFZ, SID: GAD}.
So the maximum matching is ",4,6,67
bipartite,"[(DCC, HIY), (DCC, MDY), (UCB, HIY), (UCB, OJR), (QNP, HIY), (QNP, VZF), (QNP, OJR), (LUE, IAF), (LUE, OJR)]","{DCC: [HIY, MDY],
UCB: [HIY, OJR],
QNP: [HIY, VZF, OJR],
LUE: [IAF, OJR],
HIY: [DCC, UCB, QNP],
VZF: [QNP],
MDY: [DCC],
IAF: [LUE],
OJR: [UCB, QNP, LUE]}","Node DCC is connected to nodes HIY, MDY.
Node UCB is connected to nodes HIY, OJR.
Node QNP is connected to nodes HIY, VZF, OJR.
Node LUE is connected to nodes IAF, OJR.
Node HIY is connected to nodes DCC, UCB, QNP.
Node VZF is connected to node QNP.
Node MDY is connected to node DCC.
Node IAF is connected to node LUE.
Node OJR is connected to nodes UCB, QNP, LUE.","[DCC, UCB, QNP, LUE, HIY, VZF, MDY, IAF, OJR]",9,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DCC UCB QNP LUE.
Nodes set 2 contains: HIY VZF MDY IAF OJR.","[(DCC, MDY), (UCB, OJR), (QNP, HIY), (LUE, IAF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DCC. Updated matching: {HIY: DCC}.
Search from node UCB. Updated matching: {HIY: UCB, MDY: DCC}.
Search from node QNP. Updated matching: {HIY: QNP, MDY: DCC, OJR: UCB}.
Search from node LUE. Updated matching: {HIY: QNP, MDY: DCC, OJR: UCB, IAF: LUE}.
So the maximum matching is ",4,5,68
bipartite,"[(DJG, OCZ), (DJG, QCB), (DJG, FTZ), (DJG, GJT), (DJG, SMJ), (DJG, EVW), (AIW, QCB), (ZED, OCZ)]","{DJG: [OCZ, QCB, FTZ, GJT, SMJ, EVW],
AIW: [QCB],
ZED: [OCZ],
OCZ: [DJG, ZED],
QCB: [DJG, AIW],
FTZ: [DJG],
GJT: [DJG],
SMJ: [DJG],
EVW: [DJG]}","Node DJG is connected to nodes OCZ, QCB, FTZ, GJT, SMJ, EVW.
Node AIW is connected to node QCB.
Node ZED is connected to node OCZ.
Node OCZ is connected to nodes DJG, ZED.
Node QCB is connected to nodes DJG, AIW.
Node FTZ is connected to node DJG.
Node GJT is connected to node DJG.
Node SMJ is connected to node DJG.
Node EVW is connected to node DJG.","[DJG, AIW, ZED, OCZ, QCB, FTZ, GJT, SMJ, EVW]",9,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DJG AIW ZED.
Nodes set 2 contains: OCZ QCB FTZ GJT SMJ EVW.","[(DJG, FTZ), (AIW, QCB), (ZED, OCZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DJG. Updated matching: {OCZ: DJG}.
Search from node AIW. Updated matching: {OCZ: DJG, QCB: AIW}.
Search from node ZED. Updated matching: {OCZ: ZED, QCB: AIW, FTZ: DJG}.
So the maximum matching is ",3,6,69
bipartite,"[(CCD, EGO), (CCD, ZMR), (CCD, TPE), (EUB, TUE), (EUB, GPB), (YHR, EGO), (YHR, ISV), (YHR, GPB), (FNV, ZMR), (FNV, TPE), (FNV, TUE)]","{CCD: [EGO, ZMR, TPE],
EUB: [TUE, GPB],
YHR: [EGO, ISV, GPB],
FNV: [ZMR, TPE, TUE],
EGO: [CCD, YHR],
ZMR: [CCD, FNV],
ISV: [YHR],
TPE: [CCD, FNV],
TUE: [EUB, FNV],
GPB: [EUB, YHR]}","Node CCD is connected to nodes EGO, ZMR, TPE.
Node EUB is connected to nodes TUE, GPB.
Node YHR is connected to nodes EGO, ISV, GPB.
Node FNV is connected to nodes ZMR, TPE, TUE.
Node EGO is connected to nodes CCD, YHR.
Node ZMR is connected to nodes CCD, FNV.
Node ISV is connected to node YHR.
Node TPE is connected to nodes CCD, FNV.
Node TUE is connected to nodes EUB, FNV.
Node GPB is connected to nodes EUB, YHR.","[CCD, EUB, YHR, FNV, EGO, ZMR, ISV, TPE, TUE, GPB]",10,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CCD EUB YHR FNV.
Nodes set 2 contains: EGO ZMR ISV TPE TUE GPB.","[(CCD, EGO), (EUB, TUE), (YHR, ISV), (FNV, ZMR)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CCD. Updated matching: {EGO: CCD}.
Search from node EUB. Updated matching: {EGO: CCD, TUE: EUB}.
Search from node YHR. Updated matching: {EGO: YHR, TUE: EUB, ZMR: CCD}.
Search from node FNV. Updated matching: {EGO: CCD, TUE: EUB, ZMR: FNV, ISV: YHR}.
So the maximum matching is ",4,6,70
bipartite,"[(AIU, MDN), (AIU, TFB), (KMT, KNU), (KMT, MDN), (WGP, KNU), (WGP, MDN), (WGP, TFB), (WGP, YMA), (DQB, UUL), (DQB, KNU)]","{AIU: [MDN, TFB],
KMT: [KNU, MDN],
WGP: [KNU, MDN, TFB, YMA],
DQB: [UUL, KNU],
UUL: [DQB],
KNU: [KMT, WGP, DQB],
MDN: [AIU, KMT, WGP],
TFB: [AIU, WGP],
YMA: [WGP]}","Node AIU is connected to nodes MDN, TFB.
Node KMT is connected to nodes KNU, MDN.
Node WGP is connected to nodes KNU, MDN, TFB, YMA.
Node DQB is connected to nodes UUL, KNU.
Node UUL is connected to node DQB.
Node KNU is connected to nodes KMT, WGP, DQB.
Node MDN is connected to nodes AIU, KMT, WGP.
Node TFB is connected to nodes AIU, WGP.
Node YMA is connected to node WGP.","[AIU, KMT, WGP, DQB, UUL, KNU, MDN, TFB, YMA]",9,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: AIU KMT WGP DQB.
Nodes set 2 contains: UUL KNU MDN TFB YMA.","[(AIU, TFB), (KMT, MDN), (WGP, KNU), (DQB, UUL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node AIU. Updated matching: {MDN: AIU}.
Search from node KMT. Updated matching: {MDN: AIU, KNU: KMT}.
Search from node WGP. Updated matching: {MDN: KMT, KNU: WGP, TFB: AIU}.
Search from node DQB. Updated matching: {MDN: KMT, KNU: WGP, TFB: AIU, UUL: DQB}.
So the maximum matching is ",4,5,71
bipartite,"[(BGB, FJX), (BGB, WWV), (BGB, FIP), (AAD, PUY), (UCB, PUY), (UCB, FJX), (UCB, DJV), (UCB, WWV), (ERN, OFT), (ERN, DJV), (ERN, FIP), (AOP, BKF), (AOP, FJX), (AOP, WWV), (AOP, NMP)]","{BGB: [FJX, WWV, FIP],
AAD: [PUY],
UCB: [PUY, FJX, DJV, WWV],
ERN: [OFT, DJV, FIP],
AOP: [BKF, FJX, WWV, NMP],
BKF: [AOP],
PUY: [AAD, UCB],
FJX: [BGB, UCB, AOP],
OFT: [ERN],
DJV: [UCB, ERN],
WWV: [BGB, UCB, AOP],
NMP: [AOP],
FIP: [BGB, ERN]}","Node BGB is connected to nodes FJX, WWV, FIP.
Node AAD is connected to node PUY.
Node UCB is connected to nodes PUY, FJX, DJV, WWV.
Node ERN is connected to nodes OFT, DJV, FIP.
Node AOP is connected to nodes BKF, FJX, WWV, NMP.
Node BKF is connected to node AOP.
Node PUY is connected to nodes AAD, UCB.
Node FJX is connected to nodes BGB, UCB, AOP.
Node OFT is connected to node ERN.
Node DJV is connected to nodes UCB, ERN.
Node WWV is connected to nodes BGB, UCB, AOP.
Node NMP is connected to node AOP.
Node FIP is connected to nodes BGB, ERN.","[BGB, AAD, UCB, ERN, AOP, BKF, PUY, FJX, OFT, DJV, WWV, NMP, FIP]",13,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BGB AAD UCB ERN AOP.
Nodes set 2 contains: BKF PUY FJX OFT DJV WWV NMP FIP.","[(BGB, WWV), (AAD, PUY), (UCB, FJX), (ERN, OFT), (AOP, BKF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BGB. Updated matching: {FJX: BGB}.
Search from node AAD. Updated matching: {FJX: BGB, PUY: AAD}.
Search from node UCB. Updated matching: {FJX: UCB, PUY: AAD, WWV: BGB}.
Search from node ERN. Updated matching: {FJX: UCB, PUY: AAD, WWV: BGB, OFT: ERN}.
Search from node AOP. Updated matching: {FJX: UCB, PUY: AAD, WWV: BGB, OFT: ERN, BKF: AOP}.
So the maximum matching is ",5,8,72
bipartite,"[(KQU, SFJ), (KQU, VTE), (KQU, RKC), (KQU, ULH), (AQJ, QGG), (AQJ, VTE), (AQJ, ULH), (VRW, SFJ), (VRW, VPR), (VRW, VTE), (VRW, GUE), (VRW, RKC)]","{KQU: [SFJ, VTE, RKC, ULH],
AQJ: [QGG, VTE, ULH],
VRW: [SFJ, VPR, VTE, GUE, RKC],
SFJ: [KQU, VRW],
QGG: [AQJ],
VPR: [VRW],
VTE: [KQU, AQJ, VRW],
GUE: [VRW],
RKC: [KQU, VRW],
ULH: [KQU, AQJ]}","Node KQU is connected to nodes SFJ, VTE, RKC, ULH.
Node AQJ is connected to nodes QGG, VTE, ULH.
Node VRW is connected to nodes SFJ, VPR, VTE, GUE, RKC.
Node SFJ is connected to nodes KQU, VRW.
Node QGG is connected to node AQJ.
Node VPR is connected to node VRW.
Node VTE is connected to nodes KQU, AQJ, VRW.
Node GUE is connected to node VRW.
Node RKC is connected to nodes KQU, VRW.
Node ULH is connected to nodes KQU, AQJ.","[KQU, AQJ, VRW, SFJ, QGG, VPR, VTE, GUE, RKC, ULH]",10,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: KQU AQJ VRW.
Nodes set 2 contains: SFJ QGG VPR VTE GUE RKC ULH.","[(KQU, VTE), (AQJ, QGG), (VRW, SFJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node KQU. Updated matching: {SFJ: KQU}.
Search from node AQJ. Updated matching: {SFJ: KQU, QGG: AQJ}.
Search from node VRW. Updated matching: {SFJ: VRW, QGG: AQJ, VTE: KQU}.
So the maximum matching is ",3,7,73
bipartite,"[(BAV, LUQ), (BAV, PJK), (QXG, QBS), (QXG, IQK), (QXG, WBM), (REB, QBS), (REB, TBW), (TCH, QBS), (TCH, LUQ), (TCH, WBM)]","{BAV: [LUQ, PJK],
QXG: [QBS, IQK, WBM],
REB: [QBS, TBW],
TCH: [QBS, LUQ, WBM],
QBS: [QXG, REB, TCH],
LUQ: [BAV, TCH],
IQK: [QXG],
WBM: [QXG, TCH],
TBW: [REB],
PJK: [BAV]}","Node BAV is connected to nodes LUQ, PJK.
Node QXG is connected to nodes QBS, IQK, WBM.
Node REB is connected to nodes QBS, TBW.
Node TCH is connected to nodes QBS, LUQ, WBM.
Node QBS is connected to nodes QXG, REB, TCH.
Node LUQ is connected to nodes BAV, TCH.
Node IQK is connected to node QXG.
Node WBM is connected to nodes QXG, TCH.
Node TBW is connected to node REB.
Node PJK is connected to node BAV.","[BAV, QXG, REB, TCH, QBS, LUQ, IQK, WBM, TBW, PJK]",10,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BAV QXG REB TCH.
Nodes set 2 contains: QBS LUQ IQK WBM TBW PJK.","[(BAV, LUQ), (QXG, IQK), (REB, TBW), (TCH, QBS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BAV. Updated matching: {LUQ: BAV}.
Search from node QXG. Updated matching: {LUQ: BAV, QBS: QXG}.
Search from node REB. Updated matching: {LUQ: BAV, QBS: REB, IQK: QXG}.
Search from node TCH. Updated matching: {LUQ: BAV, QBS: TCH, IQK: QXG, TBW: REB}.
So the maximum matching is ",4,6,74
bipartite,"[(PLV, RBQ), (PLV, JOE), (PLV, CMS), (PLV, NAM), (DCR, YRK), (DCR, UTR), (DCR, ZST), (ODI, YRK), (ODI, HHN), (ODI, CMS), (JVX, DKL), (JVX, YRK), (JVX, UTR)]","{PLV: [RBQ, JOE, CMS, NAM],
DCR: [YRK, UTR, ZST],
ODI: [YRK, HHN, CMS],
JVX: [DKL, YRK, UTR],
RBQ: [PLV],
DKL: [JVX],
YRK: [DCR, ODI, JVX],
JOE: [PLV],
HHN: [ODI],
UTR: [DCR, JVX],
ZST: [DCR],
CMS: [PLV, ODI],
NAM: [PLV]}","Node PLV is connected to nodes RBQ, JOE, CMS, NAM.
Node DCR is connected to nodes YRK, UTR, ZST.
Node ODI is connected to nodes YRK, HHN, CMS.
Node JVX is connected to nodes DKL, YRK, UTR.
Node RBQ is connected to node PLV.
Node DKL is connected to node JVX.
Node YRK is connected to nodes DCR, ODI, JVX.
Node JOE is connected to node PLV.
Node HHN is connected to node ODI.
Node UTR is connected to nodes DCR, JVX.
Node ZST is connected to node DCR.
Node CMS is connected to nodes PLV, ODI.
Node NAM is connected to node PLV.","[PLV, DCR, ODI, JVX, RBQ, DKL, YRK, JOE, HHN, UTR, ZST, CMS, NAM]",13,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PLV DCR ODI JVX.
Nodes set 2 contains: RBQ DKL YRK JOE HHN UTR ZST CMS NAM.","[(PLV, RBQ), (DCR, UTR), (ODI, YRK), (JVX, DKL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PLV. Updated matching: {RBQ: PLV}.
Search from node DCR. Updated matching: {RBQ: PLV, YRK: DCR}.
Search from node ODI. Updated matching: {RBQ: PLV, YRK: ODI, UTR: DCR}.
Search from node JVX. Updated matching: {RBQ: PLV, YRK: ODI, UTR: DCR, DKL: JVX}.
So the maximum matching is ",4,9,75
bipartite,"[(DRY, IMY), (DRY, UFN), (DRY, UXE), (IYU, IMY), (IYU, CWJ), (IYU, WGA), (IYU, GBL), (IYU, RZK), (FPP, IMY), (FPP, CWJ), (FPP, UXE), (FPP, RZK)]","{DRY: [IMY, UFN, UXE],
IYU: [IMY, CWJ, WGA, GBL, RZK],
FPP: [IMY, CWJ, UXE, RZK],
IMY: [DRY, IYU, FPP],
CWJ: [IYU, FPP],
UFN: [DRY],
WGA: [IYU],
UXE: [DRY, FPP],
GBL: [IYU],
RZK: [IYU, FPP]}","Node DRY is connected to nodes IMY, UFN, UXE.
Node IYU is connected to nodes IMY, CWJ, WGA, GBL, RZK.
Node FPP is connected to nodes IMY, CWJ, UXE, RZK.
Node IMY is connected to nodes DRY, IYU, FPP.
Node CWJ is connected to nodes IYU, FPP.
Node UFN is connected to node DRY.
Node WGA is connected to node IYU.
Node UXE is connected to nodes DRY, FPP.
Node GBL is connected to node IYU.
Node RZK is connected to nodes IYU, FPP.","[DRY, IYU, FPP, IMY, CWJ, UFN, WGA, UXE, GBL, RZK]",10,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DRY IYU FPP.
Nodes set 2 contains: IMY CWJ UFN WGA UXE GBL RZK.","[(DRY, UFN), (IYU, CWJ), (FPP, IMY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DRY. Updated matching: {IMY: DRY}.
Search from node IYU. Updated matching: {IMY: IYU, UFN: DRY}.
Search from node FPP. Updated matching: {IMY: FPP, UFN: DRY, CWJ: IYU}.
So the maximum matching is ",3,7,76
bipartite,"[(UXI, JJD), (UXI, HEE), (SMY, JJD), (SMY, GVG), (GCZ, JJD), (GCZ, CCI), (GCZ, GVG), (GCZ, QUM), (HLL, GVG), (MHO, JJD), (MHO, GVG), (MHO, TGP)]","{UXI: [JJD, HEE],
SMY: [JJD, GVG],
GCZ: [JJD, CCI, GVG, QUM],
HLL: [GVG],
MHO: [JJD, GVG, TGP],
JJD: [UXI, SMY, GCZ, MHO],
CCI: [GCZ],
GVG: [SMY, GCZ, HLL, MHO],
QUM: [GCZ],
HEE: [UXI],
TGP: [MHO]}","Node UXI is connected to nodes JJD, HEE.
Node SMY is connected to nodes JJD, GVG.
Node GCZ is connected to nodes JJD, CCI, GVG, QUM.
Node HLL is connected to node GVG.
Node MHO is connected to nodes JJD, GVG, TGP.
Node JJD is connected to nodes UXI, SMY, GCZ, MHO.
Node CCI is connected to node GCZ.
Node GVG is connected to nodes SMY, GCZ, HLL, MHO.
Node QUM is connected to node GCZ.
Node HEE is connected to node UXI.
Node TGP is connected to node MHO.","[UXI, SMY, GCZ, HLL, MHO, JJD, CCI, GVG, QUM, HEE, TGP]",11,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UXI SMY GCZ HLL MHO.
Nodes set 2 contains: JJD CCI GVG QUM HEE TGP.","[(UXI, HEE), (SMY, JJD), (GCZ, CCI), (HLL, GVG), (MHO, TGP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UXI. Updated matching: {JJD: UXI}.
Search from node SMY. Updated matching: {JJD: SMY, HEE: UXI}.
Search from node GCZ. Updated matching: {JJD: GCZ, HEE: UXI, GVG: SMY}.
Search from node HLL. Updated matching: {JJD: SMY, HEE: UXI, GVG: HLL, CCI: GCZ}.
Search from node MHO. Updated matching: {JJD: SMY, HEE: UXI, GVG: HLL, CCI: GCZ, TGP: MHO}.
So the maximum matching is ",5,6,77
bipartite,"[(VBY, BAT), (VBY, JXZ), (VBY, BQN), (VBY, IJC), (VBY, ITD), (CMN, FTG), (CMN, BAT), (CMN, RIE), (CMN, SJR), (SCO, FTG), (SCO, BAT), (SCO, JXZ), (SCO, BQN), (SCO, RIE), (HSN, FTG), (HSN, JTX)]","{VBY: [BAT, JXZ, BQN, IJC, ITD],
CMN: [FTG, BAT, RIE, SJR],
SCO: [FTG, BAT, JXZ, BQN, RIE],
HSN: [FTG, JTX],
FTG: [CMN, SCO, HSN],
BAT: [VBY, CMN, SCO],
JXZ: [VBY, SCO],
BQN: [VBY, SCO],
IJC: [VBY],
RIE: [CMN, SCO],
SJR: [CMN],
JTX: [HSN],
ITD: [VBY]}","Node VBY is connected to nodes BAT, JXZ, BQN, IJC, ITD.
Node CMN is connected to nodes FTG, BAT, RIE, SJR.
Node SCO is connected to nodes FTG, BAT, JXZ, BQN, RIE.
Node HSN is connected to nodes FTG, JTX.
Node FTG is connected to nodes CMN, SCO, HSN.
Node BAT is connected to nodes VBY, CMN, SCO.
Node JXZ is connected to nodes VBY, SCO.
Node BQN is connected to nodes VBY, SCO.
Node IJC is connected to node VBY.
Node RIE is connected to nodes CMN, SCO.
Node SJR is connected to node CMN.
Node JTX is connected to node HSN.
Node ITD is connected to node VBY.","[VBY, CMN, SCO, HSN, FTG, BAT, JXZ, BQN, IJC, RIE, SJR, JTX, ITD]",13,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VBY CMN SCO HSN.
Nodes set 2 contains: FTG BAT JXZ BQN IJC RIE SJR JTX ITD.","[(VBY, JXZ), (CMN, RIE), (SCO, BAT), (HSN, FTG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VBY. Updated matching: {BAT: VBY}.
Search from node CMN. Updated matching: {BAT: VBY, FTG: CMN}.
Search from node SCO. Updated matching: {BAT: CMN, FTG: SCO, JXZ: VBY}.
Search from node HSN. Updated matching: {BAT: SCO, FTG: HSN, JXZ: VBY, RIE: CMN}.
So the maximum matching is ",4,9,78
bipartite,"[(LYS, WYR), (LYS, IUT), (LPA, QHS), (LPA, WYR), (LPA, FIM), (JYJ, QHS), (JYJ, AXI), (JYJ, FNA), (FUE, AXI), (LWI, AXI), (LWI, WYR), (LWI, FNA), (LWI, PKS), (MJF, IUT)]","{LYS: [WYR, IUT],
LPA: [QHS, WYR, FIM],
JYJ: [QHS, AXI, FNA],
FUE: [AXI],
LWI: [AXI, WYR, FNA, PKS],
MJF: [IUT],
QHS: [LPA, JYJ],
AXI: [JYJ, FUE, LWI],
WYR: [LYS, LPA, LWI],
IUT: [LYS, MJF],
FNA: [JYJ, LWI],
FIM: [LPA],
PKS: [LWI]}","Node LYS is connected to nodes WYR, IUT.
Node LPA is connected to nodes QHS, WYR, FIM.
Node JYJ is connected to nodes QHS, AXI, FNA.
Node FUE is connected to node AXI.
Node LWI is connected to nodes AXI, WYR, FNA, PKS.
Node MJF is connected to node IUT.
Node QHS is connected to nodes LPA, JYJ.
Node AXI is connected to nodes JYJ, FUE, LWI.
Node WYR is connected to nodes LYS, LPA, LWI.
Node IUT is connected to nodes LYS, MJF.
Node FNA is connected to nodes JYJ, LWI.
Node FIM is connected to node LPA.
Node PKS is connected to node LWI.","[LYS, LPA, JYJ, FUE, LWI, MJF, QHS, AXI, WYR, IUT, FNA, FIM, PKS]",13,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LYS LPA JYJ FUE LWI MJF.
Nodes set 2 contains: QHS AXI WYR IUT FNA FIM PKS.","[(LYS, WYR), (LPA, FIM), (JYJ, QHS), (FUE, AXI), (LWI, FNA), (MJF, IUT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LYS. Updated matching: {WYR: LYS}.
Search from node LPA. Updated matching: {WYR: LYS, QHS: LPA}.
Search from node JYJ. Updated matching: {WYR: LPA, QHS: JYJ, IUT: LYS}.
Search from node FUE. Updated matching: {WYR: LPA, QHS: JYJ, IUT: LYS, AXI: FUE}.
Search from node LWI. Updated matching: {WYR: LWI, QHS: LPA, IUT: LYS, AXI: FUE, FNA: JYJ}.
Search from node MJF. Updated matching: {WYR: LYS, QHS: JYJ, IUT: MJF, AXI: FUE, FNA: LWI, FIM: LPA}.
So the maximum matching is ",6,7,79
bipartite,"[(GBK, KIQ), (GBK, CAY), (GBK, JKG), (GBK, HPT), (GBK, OJO), (GBK, YFV), (GBK, NRW), (KWG, KIQ), (KWG, CAY), (KWG, JKG), (KWG, OJO), (UPX, LNA), (UPX, OJO), (UPX, EJL), (TUY, JKG), (TUY, LNA), (TUY, OJO)]","{GBK: [KIQ, CAY, JKG, HPT, OJO, YFV, NRW],
KWG: [KIQ, CAY, JKG, OJO],
UPX: [LNA, OJO, EJL],
TUY: [JKG, LNA, OJO],
KIQ: [GBK, KWG],
CAY: [GBK, KWG],
JKG: [GBK, KWG, TUY],
HPT: [GBK],
LNA: [UPX, TUY],
OJO: [GBK, KWG, UPX, TUY],
EJL: [UPX],
YFV: [GBK],
NRW: [GBK]}","Node GBK is connected to nodes KIQ, CAY, JKG, HPT, OJO, YFV, NRW.
Node KWG is connected to nodes KIQ, CAY, JKG, OJO.
Node UPX is connected to nodes LNA, OJO, EJL.
Node TUY is connected to nodes JKG, LNA, OJO.
Node KIQ is connected to nodes GBK, KWG.
Node CAY is connected to nodes GBK, KWG.
Node JKG is connected to nodes GBK, KWG, TUY.
Node HPT is connected to node GBK.
Node LNA is connected to nodes UPX, TUY.
Node OJO is connected to nodes GBK, KWG, UPX, TUY.
Node EJL is connected to node UPX.
Node YFV is connected to node GBK.
Node NRW is connected to node GBK.","[GBK, KWG, UPX, TUY, KIQ, CAY, JKG, HPT, LNA, OJO, EJL, YFV, NRW]",13,17,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GBK KWG UPX TUY.
Nodes set 2 contains: KIQ CAY JKG HPT LNA OJO EJL YFV NRW.","[(GBK, CAY), (KWG, KIQ), (UPX, LNA), (TUY, JKG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GBK. Updated matching: {KIQ: GBK}.
Search from node KWG. Updated matching: {KIQ: KWG, CAY: GBK}.
Search from node UPX. Updated matching: {KIQ: KWG, CAY: GBK, LNA: UPX}.
Search from node TUY. Updated matching: {KIQ: KWG, CAY: GBK, LNA: UPX, JKG: TUY}.
So the maximum matching is ",4,9,80
bipartite,"[(ZQX, EQE), (ZQX, JYL), (TNC, HIO), (TNC, JYL), (TNC, TAV), (EDQ, EQE), (EDQ, HIO), (EDQ, CQD), (FPE, EQE), (FPE, FAI), (FPE, TAV)]","{ZQX: [EQE, JYL],
TNC: [HIO, JYL, TAV],
EDQ: [EQE, HIO, CQD],
FPE: [EQE, FAI, TAV],
EQE: [ZQX, EDQ, FPE],
HIO: [TNC, EDQ],
CQD: [EDQ],
JYL: [ZQX, TNC],
FAI: [FPE],
TAV: [TNC, FPE]}","Node ZQX is connected to nodes EQE, JYL.
Node TNC is connected to nodes HIO, JYL, TAV.
Node EDQ is connected to nodes EQE, HIO, CQD.
Node FPE is connected to nodes EQE, FAI, TAV.
Node EQE is connected to nodes ZQX, EDQ, FPE.
Node HIO is connected to nodes TNC, EDQ.
Node CQD is connected to node EDQ.
Node JYL is connected to nodes ZQX, TNC.
Node FAI is connected to node FPE.
Node TAV is connected to nodes TNC, FPE.","[ZQX, TNC, EDQ, FPE, EQE, HIO, CQD, JYL, FAI, TAV]",10,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZQX TNC EDQ FPE.
Nodes set 2 contains: EQE HIO CQD JYL FAI TAV.","[(ZQX, JYL), (TNC, TAV), (EDQ, HIO), (FPE, EQE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZQX. Updated matching: {EQE: ZQX}.
Search from node TNC. Updated matching: {EQE: ZQX, HIO: TNC}.
Search from node EDQ. Updated matching: {EQE: EDQ, HIO: TNC, JYL: ZQX}.
Search from node FPE. Updated matching: {EQE: FPE, HIO: EDQ, JYL: ZQX, TAV: TNC}.
So the maximum matching is ",4,6,81
bipartite,"[(GEC, VZX), (XZE, VZX), (XZE, RYZ), (XZE, FIY), (GKI, IDO), (GKI, VZX), (GKI, RYZ), (GKI, DJC), (TSR, FNC), (TSR, IDO), (TSR, FIY)]","{GEC: [VZX],
XZE: [VZX, RYZ, FIY],
GKI: [IDO, VZX, RYZ, DJC],
TSR: [FNC, IDO, FIY],
FNC: [TSR],
IDO: [GKI, TSR],
VZX: [GEC, XZE, GKI],
RYZ: [XZE, GKI],
DJC: [GKI],
FIY: [XZE, TSR]}","Node GEC is connected to node VZX.
Node XZE is connected to nodes VZX, RYZ, FIY.
Node GKI is connected to nodes IDO, VZX, RYZ, DJC.
Node TSR is connected to nodes FNC, IDO, FIY.
Node FNC is connected to node TSR.
Node IDO is connected to nodes GKI, TSR.
Node VZX is connected to nodes GEC, XZE, GKI.
Node RYZ is connected to nodes XZE, GKI.
Node DJC is connected to node GKI.
Node FIY is connected to nodes XZE, TSR.","[GEC, XZE, GKI, TSR, FNC, IDO, VZX, RYZ, DJC, FIY]",10,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GEC XZE GKI TSR.
Nodes set 2 contains: FNC IDO VZX RYZ DJC FIY.","[(GEC, VZX), (XZE, RYZ), (GKI, IDO), (TSR, FNC)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GEC. Updated matching: {VZX: GEC}.
Search from node XZE. Updated matching: {VZX: GEC, RYZ: XZE}.
Search from node GKI. Updated matching: {VZX: GEC, RYZ: XZE, IDO: GKI}.
Search from node TSR. Updated matching: {VZX: GEC, RYZ: XZE, IDO: GKI, FNC: TSR}.
So the maximum matching is ",4,6,82
bipartite,"[(EDL, TBT), (EDL, QIX), (EDL, YOZ), (EDL, TZT), (EDL, OWC), (TLI, TBT), (TLI, ZVY), (TLI, CNW), (WNH, TBT), (WNH, ZVY), (WNH, QIX), (WNH, CNW), (OUY, TZT), (OUY, OWC), (OUY, AUX), (XNR, ZVY), (XNR, QIX), (XNR, VDQ), (XNR, TZT), (XNR, OWC)]","{EDL: [TBT, QIX, YOZ, TZT, OWC],
TLI: [TBT, ZVY, CNW],
WNH: [TBT, ZVY, QIX, CNW],
OUY: [TZT, OWC, AUX],
XNR: [ZVY, QIX, VDQ, TZT, OWC],
TBT: [EDL, TLI, WNH],
ZVY: [TLI, WNH, XNR],
QIX: [EDL, WNH, XNR],
VDQ: [XNR],
CNW: [TLI, WNH],
YOZ: [EDL],
TZT: [EDL, OUY, XNR],
OWC: [EDL, OUY, XNR],
AUX: [OUY]}","Node EDL is connected to nodes TBT, QIX, YOZ, TZT, OWC.
Node TLI is connected to nodes TBT, ZVY, CNW.
Node WNH is connected to nodes TBT, ZVY, QIX, CNW.
Node OUY is connected to nodes TZT, OWC, AUX.
Node XNR is connected to nodes ZVY, QIX, VDQ, TZT, OWC.
Node TBT is connected to nodes EDL, TLI, WNH.
Node ZVY is connected to nodes TLI, WNH, XNR.
Node QIX is connected to nodes EDL, WNH, XNR.
Node VDQ is connected to node XNR.
Node CNW is connected to nodes TLI, WNH.
Node YOZ is connected to node EDL.
Node TZT is connected to nodes EDL, OUY, XNR.
Node OWC is connected to nodes EDL, OUY, XNR.
Node AUX is connected to node OUY.","[EDL, TLI, WNH, OUY, XNR, TBT, ZVY, QIX, VDQ, CNW, YOZ, TZT, OWC, AUX]",14,20,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: EDL TLI WNH OUY XNR.
Nodes set 2 contains: TBT ZVY QIX VDQ CNW YOZ TZT OWC AUX.","[(EDL, YOZ), (TLI, TBT), (WNH, QIX), (OUY, TZT), (XNR, ZVY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node EDL. Updated matching: {TBT: EDL}.
Search from node TLI. Updated matching: {TBT: TLI, QIX: EDL}.
Search from node WNH. Updated matching: {TBT: WNH, QIX: EDL, ZVY: TLI}.
Search from node OUY. Updated matching: {TBT: WNH, QIX: EDL, ZVY: TLI, TZT: OUY}.
Search from node XNR. Updated matching: {TBT: TLI, QIX: WNH, ZVY: XNR, TZT: OUY, YOZ: EDL}.
So the maximum matching is ",5,9,83
bipartite,"[(YKH, TBJ), (OIA, OLI), (OIA, QKU), (OVK, OLI), (OVK, VWK), (OVK, NVT), (OVK, KOP), (OVK, TBJ)]","{YKH: [TBJ],
OIA: [OLI, QKU],
OVK: [OLI, VWK, NVT, KOP, TBJ],
OLI: [OIA, OVK],
VWK: [OVK],
NVT: [OVK],
KOP: [OVK],
TBJ: [YKH, OVK],
QKU: [OIA]}","Node YKH is connected to node TBJ.
Node OIA is connected to nodes OLI, QKU.
Node OVK is connected to nodes OLI, VWK, NVT, KOP, TBJ.
Node OLI is connected to nodes OIA, OVK.
Node VWK is connected to node OVK.
Node NVT is connected to node OVK.
Node KOP is connected to node OVK.
Node TBJ is connected to nodes YKH, OVK.
Node QKU is connected to node OIA.","[YKH, OIA, OVK, OLI, VWK, NVT, KOP, TBJ, QKU]",9,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YKH OIA OVK.
Nodes set 2 contains: OLI VWK NVT KOP TBJ QKU.","[(YKH, TBJ), (OIA, QKU), (OVK, OLI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YKH. Updated matching: {TBJ: YKH}.
Search from node OIA. Updated matching: {TBJ: YKH, OLI: OIA}.
Search from node OVK. Updated matching: {TBJ: YKH, OLI: OVK, QKU: OIA}.
So the maximum matching is ",3,6,84
bipartite,"[(ZCV, CGF), (CKM, LUL), (CKM, XMP), (CKM, AXA), (CKM, XKW), (IWX, LUL), (IWX, CGF), (IWX, BSZ), (IWX, AXA), (IWX, CIL), (IWX, CQO), (NUE, BSZ), (NUE, XMP), (NUE, XKW), (NUE, CIL), (NUE, ZOA), (NUE, HUJ)]","{ZCV: [CGF],
CKM: [LUL, XMP, AXA, XKW],
IWX: [LUL, CGF, BSZ, AXA, CIL, CQO],
NUE: [BSZ, XMP, XKW, CIL, ZOA, HUJ],
LUL: [CKM, IWX],
CGF: [ZCV, IWX],
BSZ: [IWX, NUE],
XMP: [CKM, NUE],
AXA: [CKM, IWX],
XKW: [CKM, NUE],
CIL: [IWX, NUE],
ZOA: [NUE],
CQO: [IWX],
HUJ: [NUE]}","Node ZCV is connected to node CGF.
Node CKM is connected to nodes LUL, XMP, AXA, XKW.
Node IWX is connected to nodes LUL, CGF, BSZ, AXA, CIL, CQO.
Node NUE is connected to nodes BSZ, XMP, XKW, CIL, ZOA, HUJ.
Node LUL is connected to nodes CKM, IWX.
Node CGF is connected to nodes ZCV, IWX.
Node BSZ is connected to nodes IWX, NUE.
Node XMP is connected to nodes CKM, NUE.
Node AXA is connected to nodes CKM, IWX.
Node XKW is connected to nodes CKM, NUE.
Node CIL is connected to nodes IWX, NUE.
Node ZOA is connected to node NUE.
Node CQO is connected to node IWX.
Node HUJ is connected to node NUE.","[ZCV, CKM, IWX, NUE, LUL, CGF, BSZ, XMP, AXA, XKW, CIL, ZOA, CQO, HUJ]",14,17,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZCV CKM IWX NUE.
Nodes set 2 contains: LUL CGF BSZ XMP AXA XKW CIL ZOA CQO HUJ.","[(ZCV, CGF), (CKM, XMP), (IWX, LUL), (NUE, BSZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZCV. Updated matching: {CGF: ZCV}.
Search from node CKM. Updated matching: {CGF: ZCV, LUL: CKM}.
Search from node IWX. Updated matching: {CGF: ZCV, LUL: IWX, XMP: CKM}.
Search from node NUE. Updated matching: {CGF: ZCV, LUL: IWX, XMP: CKM, BSZ: NUE}.
So the maximum matching is ",4,10,85
bipartite,"[(RUV, AVQ), (RUV, DGN), (RUV, GKF), (FHM, IKU), (FHM, AVQ), (FHM, DGN), (GYA, IKU), (UNQ, AVQ), (UNQ, DGN), (UNQ, WTL)]","{RUV: [AVQ, DGN, GKF],
FHM: [IKU, AVQ, DGN],
GYA: [IKU],
UNQ: [AVQ, DGN, WTL],
IKU: [FHM, GYA],
AVQ: [RUV, FHM, UNQ],
DGN: [RUV, FHM, UNQ],
GKF: [RUV],
WTL: [UNQ]}","Node RUV is connected to nodes AVQ, DGN, GKF.
Node FHM is connected to nodes IKU, AVQ, DGN.
Node GYA is connected to node IKU.
Node UNQ is connected to nodes AVQ, DGN, WTL.
Node IKU is connected to nodes FHM, GYA.
Node AVQ is connected to nodes RUV, FHM, UNQ.
Node DGN is connected to nodes RUV, FHM, UNQ.
Node GKF is connected to node RUV.
Node WTL is connected to node UNQ.","[RUV, FHM, GYA, UNQ, IKU, AVQ, DGN, GKF, WTL]",9,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RUV FHM GYA UNQ.
Nodes set 2 contains: IKU AVQ DGN GKF WTL.","[(RUV, GKF), (FHM, DGN), (GYA, IKU), (UNQ, AVQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RUV. Updated matching: {AVQ: RUV}.
Search from node FHM. Updated matching: {AVQ: RUV, IKU: FHM}.
Search from node GYA. Updated matching: {AVQ: FHM, IKU: GYA, DGN: RUV}.
Search from node UNQ. Updated matching: {AVQ: UNQ, IKU: GYA, DGN: FHM, GKF: RUV}.
So the maximum matching is ",4,5,86
bipartite,"[(ADS, TDW), (ADS, HZH), (ADS, BEA), (ADS, QRL), (SLD, TDW), (SLD, BEA), (SLD, IDO), (SLD, JBN), (SLD, JTN), (PKZ, WLZ), (PKZ, HZH), (PKZ, YSW), (PKZ, IDO), (PKZ, ZSW), (PKZ, RPD), (KNE, WLZ), (KNE, YSW), (KNE, IDO), (KNE, QRL), (KNE, JBN)]","{ADS: [TDW, HZH, BEA, QRL],
SLD: [TDW, BEA, IDO, JBN, JTN],
PKZ: [WLZ, HZH, YSW, IDO, ZSW, RPD],
KNE: [WLZ, YSW, IDO, QRL, JBN],
WLZ: [PKZ, KNE],
TDW: [ADS, SLD],
HZH: [ADS, PKZ],
YSW: [PKZ, KNE],
BEA: [ADS, SLD],
IDO: [SLD, PKZ, KNE],
ZSW: [PKZ],
RPD: [PKZ],
QRL: [ADS, KNE],
JBN: [SLD, KNE],
JTN: [SLD]}","Node ADS is connected to nodes TDW, HZH, BEA, QRL.
Node SLD is connected to nodes TDW, BEA, IDO, JBN, JTN.
Node PKZ is connected to nodes WLZ, HZH, YSW, IDO, ZSW, RPD.
Node KNE is connected to nodes WLZ, YSW, IDO, QRL, JBN.
Node WLZ is connected to nodes PKZ, KNE.
Node TDW is connected to nodes ADS, SLD.
Node HZH is connected to nodes ADS, PKZ.
Node YSW is connected to nodes PKZ, KNE.
Node BEA is connected to nodes ADS, SLD.
Node IDO is connected to nodes SLD, PKZ, KNE.
Node ZSW is connected to node PKZ.
Node RPD is connected to node PKZ.
Node QRL is connected to nodes ADS, KNE.
Node JBN is connected to nodes SLD, KNE.
Node JTN is connected to node SLD.","[ADS, SLD, PKZ, KNE, WLZ, TDW, HZH, YSW, BEA, IDO, ZSW, RPD, QRL, JBN, JTN]",15,20,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ADS SLD PKZ KNE.
Nodes set 2 contains: WLZ TDW HZH YSW BEA IDO ZSW RPD QRL JBN JTN.","[(ADS, TDW), (SLD, BEA), (PKZ, HZH), (KNE, WLZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ADS. Updated matching: {TDW: ADS}.
Search from node SLD. Updated matching: {TDW: SLD, HZH: ADS}.
Search from node PKZ. Updated matching: {TDW: SLD, HZH: ADS, WLZ: PKZ}.
Search from node KNE. Updated matching: {TDW: ADS, HZH: PKZ, WLZ: KNE, BEA: SLD}.
So the maximum matching is ",4,11,87
bipartite,"[(SYS, TGI), (UMD, BJK), (UMD, LBV), (UMD, LWM), (KYC, IAM), (KYC, TGI), (KYC, LBV), (KYC, HQY)]","{SYS: [TGI],
UMD: [BJK, LBV, LWM],
KYC: [IAM, TGI, LBV, HQY],
BJK: [UMD],
IAM: [KYC],
TGI: [SYS, KYC],
LBV: [UMD, KYC],
HQY: [KYC],
LWM: [UMD]}","Node SYS is connected to node TGI.
Node UMD is connected to nodes BJK, LBV, LWM.
Node KYC is connected to nodes IAM, TGI, LBV, HQY.
Node BJK is connected to node UMD.
Node IAM is connected to node KYC.
Node TGI is connected to nodes SYS, KYC.
Node LBV is connected to nodes UMD, KYC.
Node HQY is connected to node KYC.
Node LWM is connected to node UMD.","[SYS, UMD, KYC, BJK, IAM, TGI, LBV, HQY, LWM]",9,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SYS UMD KYC.
Nodes set 2 contains: BJK IAM TGI LBV HQY LWM.","[(SYS, TGI), (UMD, BJK), (KYC, IAM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SYS. Updated matching: {TGI: SYS}.
Search from node UMD. Updated matching: {TGI: SYS, BJK: UMD}.
Search from node KYC. Updated matching: {TGI: SYS, BJK: UMD, IAM: KYC}.
So the maximum matching is ",3,6,88
bipartite,"[(SPB, UPF), (SPB, QZN), (DHC, YBC), (DHC, RIZ), (DHC, UPF), (FWW, EYP), (FWW, UWJ), (IPO, UPF), (IPO, UWJ), (IPO, QZN), (ERN, THR), (ERN, EYP), (ERN, RIZ), (ERN, RCL), (ERN, VVE), (ERN, UWJ), (XGA, THR), (XGA, EYP), (XGA, YBC), (XGA, RIZ), (XGA, VVE), (XGA, QZN)]","{SPB: [UPF, QZN],
DHC: [YBC, RIZ, UPF],
FWW: [EYP, UWJ],
IPO: [UPF, UWJ, QZN],
ERN: [THR, EYP, RIZ, RCL, VVE, UWJ],
XGA: [THR, EYP, YBC, RIZ, VVE, QZN],
THR: [ERN, XGA],
EYP: [FWW, ERN, XGA],
YBC: [DHC, XGA],
RIZ: [DHC, ERN, XGA],
RCL: [ERN],
UPF: [SPB, DHC, IPO],
VVE: [ERN, XGA],
UWJ: [FWW, IPO, ERN],
QZN: [SPB, IPO, XGA]}","Node SPB is connected to nodes UPF, QZN.
Node DHC is connected to nodes YBC, RIZ, UPF.
Node FWW is connected to nodes EYP, UWJ.
Node IPO is connected to nodes UPF, UWJ, QZN.
Node ERN is connected to nodes THR, EYP, RIZ, RCL, VVE, UWJ.
Node XGA is connected to nodes THR, EYP, YBC, RIZ, VVE, QZN.
Node THR is connected to nodes ERN, XGA.
Node EYP is connected to nodes FWW, ERN, XGA.
Node YBC is connected to nodes DHC, XGA.
Node RIZ is connected to nodes DHC, ERN, XGA.
Node RCL is connected to node ERN.
Node UPF is connected to nodes SPB, DHC, IPO.
Node VVE is connected to nodes ERN, XGA.
Node UWJ is connected to nodes FWW, IPO, ERN.
Node QZN is connected to nodes SPB, IPO, XGA.","[SPB, DHC, FWW, IPO, ERN, XGA, THR, EYP, YBC, RIZ, RCL, UPF, VVE, UWJ, QZN]",15,22,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SPB DHC FWW IPO ERN XGA.
Nodes set 2 contains: THR EYP YBC RIZ RCL UPF VVE UWJ QZN.","[(SPB, QZN), (DHC, YBC), (FWW, UWJ), (IPO, UPF), (ERN, EYP), (XGA, THR)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SPB. Updated matching: {UPF: SPB}.
Search from node DHC. Updated matching: {UPF: SPB, YBC: DHC}.
Search from node FWW. Updated matching: {UPF: SPB, YBC: DHC, EYP: FWW}.
Search from node IPO. Updated matching: {UPF: IPO, YBC: DHC, EYP: FWW, QZN: SPB}.
Search from node ERN. Updated matching: {UPF: IPO, YBC: DHC, EYP: FWW, QZN: SPB, THR: ERN}.
Search from node XGA. Updated matching: {UPF: IPO, YBC: DHC, EYP: ERN, QZN: SPB, THR: XGA, UWJ: FWW}.
So the maximum matching is ",6,9,89
bipartite,"[(TVZ, KOM), (TVZ, BIH), (QBS, GOZ), (QBS, KOM), (QBS, WCU), (QBS, ULO), (PMC, BIH), (KDY, KOM), (KDY, ZXD), (KDY, WCU), (KDY, ULO)]","{TVZ: [KOM, BIH],
QBS: [GOZ, KOM, WCU, ULO],
PMC: [BIH],
KDY: [KOM, ZXD, WCU, ULO],
GOZ: [QBS],
KOM: [TVZ, QBS, KDY],
ZXD: [KDY],
BIH: [TVZ, PMC],
WCU: [QBS, KDY],
ULO: [QBS, KDY]}","Node TVZ is connected to nodes KOM, BIH.
Node QBS is connected to nodes GOZ, KOM, WCU, ULO.
Node PMC is connected to node BIH.
Node KDY is connected to nodes KOM, ZXD, WCU, ULO.
Node GOZ is connected to node QBS.
Node KOM is connected to nodes TVZ, QBS, KDY.
Node ZXD is connected to node KDY.
Node BIH is connected to nodes TVZ, PMC.
Node WCU is connected to nodes QBS, KDY.
Node ULO is connected to nodes QBS, KDY.","[TVZ, QBS, PMC, KDY, GOZ, KOM, ZXD, BIH, WCU, ULO]",10,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TVZ QBS PMC KDY.
Nodes set 2 contains: GOZ KOM ZXD BIH WCU ULO.","[(TVZ, KOM), (QBS, GOZ), (PMC, BIH), (KDY, ZXD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TVZ. Updated matching: {KOM: TVZ}.
Search from node QBS. Updated matching: {KOM: TVZ, GOZ: QBS}.
Search from node PMC. Updated matching: {KOM: TVZ, GOZ: QBS, BIH: PMC}.
Search from node KDY. Updated matching: {KOM: TVZ, GOZ: QBS, BIH: PMC, ZXD: KDY}.
So the maximum matching is ",4,6,90
bipartite,"[(TOE, EEQ), (TOE, STG), (TOE, ADE), (TOE, CGJ), (KEF, LSW), (KEF, CGJ), (GAG, EEQ)]","{TOE: [EEQ, STG, ADE, CGJ],
KEF: [LSW, CGJ],
GAG: [EEQ],
EEQ: [TOE, GAG],
STG: [TOE],
LSW: [KEF],
ADE: [TOE],
CGJ: [TOE, KEF]}","Node TOE is connected to nodes EEQ, STG, ADE, CGJ.
Node KEF is connected to nodes LSW, CGJ.
Node GAG is connected to node EEQ.
Node EEQ is connected to nodes TOE, GAG.
Node STG is connected to node TOE.
Node LSW is connected to node KEF.
Node ADE is connected to node TOE.
Node CGJ is connected to nodes TOE, KEF.","[TOE, KEF, GAG, EEQ, STG, LSW, ADE, CGJ]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TOE KEF GAG.
Nodes set 2 contains: EEQ STG LSW ADE CGJ.","[(TOE, STG), (KEF, LSW), (GAG, EEQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TOE. Updated matching: {EEQ: TOE}.
Search from node KEF. Updated matching: {EEQ: TOE, LSW: KEF}.
Search from node GAG. Updated matching: {EEQ: GAG, LSW: KEF, STG: TOE}.
So the maximum matching is ",3,5,91
bipartite,"[(TBU, SPG), (QHL, PNR), (QHL, HTK), (QHL, SPG), (QHL, ZBM), (DDM, SPG), (ZID, INM), (ZID, PNR), (ZID, OJG), (ZID, SPG)]","{TBU: [SPG],
QHL: [PNR, HTK, SPG, ZBM],
DDM: [SPG],
ZID: [INM, PNR, OJG, SPG],
INM: [ZID],
PNR: [QHL, ZID],
OJG: [ZID],
HTK: [QHL],
SPG: [TBU, QHL, DDM, ZID],
ZBM: [QHL]}","Node TBU is connected to node SPG.
Node QHL is connected to nodes PNR, HTK, SPG, ZBM.
Node DDM is connected to node SPG.
Node ZID is connected to nodes INM, PNR, OJG, SPG.
Node INM is connected to node ZID.
Node PNR is connected to nodes QHL, ZID.
Node OJG is connected to node ZID.
Node HTK is connected to node QHL.
Node SPG is connected to nodes TBU, QHL, DDM, ZID.
Node ZBM is connected to node QHL.","[TBU, QHL, DDM, ZID, INM, PNR, OJG, HTK, SPG, ZBM]",10,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TBU QHL DDM ZID.
Nodes set 2 contains: INM PNR OJG HTK SPG ZBM.","[(TBU, SPG), (QHL, PNR), (ZID, INM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TBU. Updated matching: {SPG: TBU}.
Search from node QHL. Updated matching: {SPG: TBU, PNR: QHL}.
Search from node DDM. Updated matching: {SPG: TBU, PNR: QHL}.
Search from node ZID. Updated matching: {SPG: TBU, PNR: QHL, INM: ZID}.
So the maximum matching is ",4,6,92
bipartite,"[(PQT, NAG), (PQT, HUU), (WZJ, SXF), (WZJ, MFX), (RGV, AZW), (RGV, NAG), (RGV, MFX), (RGV, HUU)]","{PQT: [NAG, HUU],
WZJ: [SXF, MFX],
RGV: [AZW, NAG, MFX, HUU],
AZW: [RGV],
SXF: [WZJ],
NAG: [PQT, RGV],
MFX: [WZJ, RGV],
HUU: [PQT, RGV]}","Node PQT is connected to nodes NAG, HUU.
Node WZJ is connected to nodes SXF, MFX.
Node RGV is connected to nodes AZW, NAG, MFX, HUU.
Node AZW is connected to node RGV.
Node SXF is connected to node WZJ.
Node NAG is connected to nodes PQT, RGV.
Node MFX is connected to nodes WZJ, RGV.
Node HUU is connected to nodes PQT, RGV.","[PQT, WZJ, RGV, AZW, SXF, NAG, MFX, HUU]",8,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PQT WZJ RGV.
Nodes set 2 contains: AZW SXF NAG MFX HUU.","[(PQT, NAG), (WZJ, SXF), (RGV, AZW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PQT. Updated matching: {NAG: PQT}.
Search from node WZJ. Updated matching: {NAG: PQT, SXF: WZJ}.
Search from node RGV. Updated matching: {NAG: PQT, SXF: WZJ, AZW: RGV}.
So the maximum matching is ",3,5,93
bipartite,"[(SSC, USC), (SSC, MDE), (HYZ, QOX), (HYZ, VWD), (HYZ, FGW), (HYZ, ZSH), (HYZ, USC), (HYZ, MDE)]","{SSC: [USC, MDE],
HYZ: [QOX, VWD, FGW, ZSH, USC, MDE],
QOX: [HYZ],
VWD: [HYZ],
FGW: [HYZ],
ZSH: [HYZ],
USC: [SSC, HYZ],
MDE: [SSC, HYZ]}","Node SSC is connected to nodes USC, MDE.
Node HYZ is connected to nodes QOX, VWD, FGW, ZSH, USC, MDE.
Node QOX is connected to node HYZ.
Node VWD is connected to node HYZ.
Node FGW is connected to node HYZ.
Node ZSH is connected to node HYZ.
Node USC is connected to nodes SSC, HYZ.
Node MDE is connected to nodes SSC, HYZ.","[SSC, HYZ, QOX, VWD, FGW, ZSH, USC, MDE]",8,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SSC HYZ.
Nodes set 2 contains: QOX VWD FGW ZSH USC MDE.","[(SSC, USC), (HYZ, QOX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SSC. Updated matching: {USC: SSC}.
Search from node HYZ. Updated matching: {USC: SSC, QOX: HYZ}.
So the maximum matching is ",2,6,94
bipartite,"[(DVS, DNF), (ITN, DNF), (ITN, VEE), (ITN, YWU), (AZL, QVF), (AZL, DNF), (AZL, EVW)]","{DVS: [DNF],
ITN: [DNF, VEE, YWU],
AZL: [QVF, DNF, EVW],
QVF: [AZL],
DNF: [DVS, ITN, AZL],
VEE: [ITN],
YWU: [ITN],
EVW: [AZL]}","Node DVS is connected to node DNF.
Node ITN is connected to nodes DNF, VEE, YWU.
Node AZL is connected to nodes QVF, DNF, EVW.
Node QVF is connected to node AZL.
Node DNF is connected to nodes DVS, ITN, AZL.
Node VEE is connected to node ITN.
Node YWU is connected to node ITN.
Node EVW is connected to node AZL.","[DVS, ITN, AZL, QVF, DNF, VEE, YWU, EVW]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DVS ITN AZL.
Nodes set 2 contains: QVF DNF VEE YWU EVW.","[(DVS, DNF), (ITN, VEE), (AZL, QVF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DVS. Updated matching: {DNF: DVS}.
Search from node ITN. Updated matching: {DNF: DVS, VEE: ITN}.
Search from node AZL. Updated matching: {DNF: DVS, VEE: ITN, QVF: AZL}.
So the maximum matching is ",3,5,95
bipartite,"[(PSU, XOO), (PSU, DEU), (BOW, KJV), (UDL, FWL), (UDL, VYX), (UDL, SYJ), (HDO, DEU), (HDO, QEH), (HDO, VYX), (WQC, XOO), (TPA, DEU), (TPA, LSP), (DTZ, KJV), (DTZ, DEU), (DTZ, QEH), (DTZ, VYX)]","{PSU: [XOO, DEU],
BOW: [KJV],
UDL: [FWL, VYX, SYJ],
HDO: [DEU, QEH, VYX],
WQC: [XOO],
TPA: [DEU, LSP],
DTZ: [KJV, DEU, QEH, VYX],
KJV: [BOW, DTZ],
XOO: [PSU, WQC],
DEU: [PSU, HDO, TPA, DTZ],
LSP: [TPA],
FWL: [UDL],
QEH: [HDO, DTZ],
VYX: [UDL, HDO, DTZ],
SYJ: [UDL]}","Node PSU is connected to nodes XOO, DEU.
Node BOW is connected to node KJV.
Node UDL is connected to nodes FWL, VYX, SYJ.
Node HDO is connected to nodes DEU, QEH, VYX.
Node WQC is connected to node XOO.
Node TPA is connected to nodes DEU, LSP.
Node DTZ is connected to nodes KJV, DEU, QEH, VYX.
Node KJV is connected to nodes BOW, DTZ.
Node XOO is connected to nodes PSU, WQC.
Node DEU is connected to nodes PSU, HDO, TPA, DTZ.
Node LSP is connected to node TPA.
Node FWL is connected to node UDL.
Node QEH is connected to nodes HDO, DTZ.
Node VYX is connected to nodes UDL, HDO, DTZ.
Node SYJ is connected to node UDL.","[PSU, BOW, UDL, HDO, WQC, TPA, DTZ, KJV, XOO, DEU, LSP, FWL, QEH, VYX, SYJ]",15,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PSU BOW UDL HDO WQC TPA DTZ.
Nodes set 2 contains: KJV XOO DEU LSP FWL QEH VYX SYJ.","[(PSU, DEU), (BOW, KJV), (UDL, FWL), (HDO, VYX), (WQC, XOO), (TPA, LSP), (DTZ, QEH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PSU. Updated matching: {XOO: PSU}.
Search from node BOW. Updated matching: {XOO: PSU, KJV: BOW}.
Search from node UDL. Updated matching: {XOO: PSU, KJV: BOW, FWL: UDL}.
Search from node HDO. Updated matching: {XOO: PSU, KJV: BOW, FWL: UDL, DEU: HDO}.
Search from node WQC. Updated matching: {XOO: WQC, KJV: BOW, FWL: UDL, DEU: PSU, QEH: HDO}.
Search from node TPA. Updated matching: {XOO: WQC, KJV: BOW, FWL: UDL, DEU: PSU, QEH: HDO, LSP: TPA}.
Search from node DTZ. Updated matching: {XOO: WQC, KJV: BOW, FWL: UDL, DEU: PSU, QEH: DTZ, LSP: TPA, VYX: HDO}.
So the maximum matching is ",7,8,96
bipartite,"[(DCC, GYI), (DCC, TAW), (KDX, XBR), (KDX, TAW), (VAF, VDK), (VAF, ZIQ), (VAF, MXG), (FPS, XBR), (FPS, MXG), (UNJ, VDK), (UNJ, XBR), (UNJ, SDC), (UNJ, ZIQ), (UNJ, MXG)]","{DCC: [GYI, TAW],
KDX: [XBR, TAW],
VAF: [VDK, ZIQ, MXG],
FPS: [XBR, MXG],
UNJ: [VDK, XBR, SDC, ZIQ, MXG],
GYI: [DCC],
VDK: [VAF, UNJ],
XBR: [KDX, FPS, UNJ],
SDC: [UNJ],
ZIQ: [VAF, UNJ],
TAW: [DCC, KDX],
MXG: [VAF, FPS, UNJ]}","Node DCC is connected to nodes GYI, TAW.
Node KDX is connected to nodes XBR, TAW.
Node VAF is connected to nodes VDK, ZIQ, MXG.
Node FPS is connected to nodes XBR, MXG.
Node UNJ is connected to nodes VDK, XBR, SDC, ZIQ, MXG.
Node GYI is connected to node DCC.
Node VDK is connected to nodes VAF, UNJ.
Node XBR is connected to nodes KDX, FPS, UNJ.
Node SDC is connected to node UNJ.
Node ZIQ is connected to nodes VAF, UNJ.
Node TAW is connected to nodes DCC, KDX.
Node MXG is connected to nodes VAF, FPS, UNJ.","[DCC, KDX, VAF, FPS, UNJ, GYI, VDK, XBR, SDC, ZIQ, TAW, MXG]",12,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DCC KDX VAF FPS UNJ.
Nodes set 2 contains: GYI VDK XBR SDC ZIQ TAW MXG.","[(DCC, GYI), (KDX, TAW), (VAF, ZIQ), (FPS, XBR), (UNJ, VDK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DCC. Updated matching: {GYI: DCC}.
Search from node KDX. Updated matching: {GYI: DCC, XBR: KDX}.
Search from node VAF. Updated matching: {GYI: DCC, XBR: KDX, VDK: VAF}.
Search from node FPS. Updated matching: {GYI: DCC, XBR: FPS, VDK: VAF, TAW: KDX}.
Search from node UNJ. Updated matching: {GYI: DCC, XBR: FPS, VDK: UNJ, TAW: KDX, ZIQ: VAF}.
So the maximum matching is ",5,7,97
bipartite,"[(VGO, SHN), (VGO, PHQ), (VGO, JJS), (VGO, VWC), (AXT, VTJ), (RVD, SHN), (RVD, VTJ), (RVD, ZMW)]","{VGO: [SHN, PHQ, JJS, VWC],
AXT: [VTJ],
RVD: [SHN, VTJ, ZMW],
SHN: [VGO, RVD],
VTJ: [AXT, RVD],
PHQ: [VGO],
JJS: [VGO],
VWC: [VGO],
ZMW: [RVD]}","Node VGO is connected to nodes SHN, PHQ, JJS, VWC.
Node AXT is connected to node VTJ.
Node RVD is connected to nodes SHN, VTJ, ZMW.
Node SHN is connected to nodes VGO, RVD.
Node VTJ is connected to nodes AXT, RVD.
Node PHQ is connected to node VGO.
Node JJS is connected to node VGO.
Node VWC is connected to node VGO.
Node ZMW is connected to node RVD.","[VGO, AXT, RVD, SHN, VTJ, PHQ, JJS, VWC, ZMW]",9,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VGO AXT RVD.
Nodes set 2 contains: SHN VTJ PHQ JJS VWC ZMW.","[(VGO, PHQ), (AXT, VTJ), (RVD, SHN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VGO. Updated matching: {SHN: VGO}.
Search from node AXT. Updated matching: {SHN: VGO, VTJ: AXT}.
Search from node RVD. Updated matching: {SHN: RVD, VTJ: AXT, PHQ: VGO}.
So the maximum matching is ",3,6,98
bipartite,"[(PHC, BTE), (PHC, FFD), (PHC, TOM), (JTM, QAP), (JTM, TOM), (RVF, BTE), (RVF, TOM), (CSZ, BTE), (CSZ, UPO), (CSZ, TOM)]","{PHC: [BTE, FFD, TOM],
JTM: [QAP, TOM],
RVF: [BTE, TOM],
CSZ: [BTE, UPO, TOM],
BTE: [PHC, RVF, CSZ],
FFD: [PHC],
UPO: [CSZ],
QAP: [JTM],
TOM: [PHC, JTM, RVF, CSZ]}","Node PHC is connected to nodes BTE, FFD, TOM.
Node JTM is connected to nodes QAP, TOM.
Node RVF is connected to nodes BTE, TOM.
Node CSZ is connected to nodes BTE, UPO, TOM.
Node BTE is connected to nodes PHC, RVF, CSZ.
Node FFD is connected to node PHC.
Node UPO is connected to node CSZ.
Node QAP is connected to node JTM.
Node TOM is connected to nodes PHC, JTM, RVF, CSZ.","[PHC, JTM, RVF, CSZ, BTE, FFD, UPO, QAP, TOM]",9,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PHC JTM RVF CSZ.
Nodes set 2 contains: BTE FFD UPO QAP TOM.","[(PHC, FFD), (JTM, QAP), (RVF, TOM), (CSZ, BTE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PHC. Updated matching: {BTE: PHC}.
Search from node JTM. Updated matching: {BTE: PHC, QAP: JTM}.
Search from node RVF. Updated matching: {BTE: RVF, QAP: JTM, FFD: PHC}.
Search from node CSZ. Updated matching: {BTE: CSZ, QAP: JTM, FFD: PHC, TOM: RVF}.
So the maximum matching is ",4,5,99
bipartite,"[(WDY, URR), (WDY, IJC), (WDY, GLD), (ERP, FSE), (ERP, DUB), (ESY, URR), (ESY, SXQ), (ESY, NEE), (ESY, FSE), (ESY, DUB), (ESY, GLD), (CVL, SXQ), (CVL, FSE), (LGB, IJC), (LGB, ONK), (LGB, FSE), (LGB, DBW), (XEE, NEE), (XEE, DUB)]","{WDY: [URR, IJC, GLD],
ERP: [FSE, DUB],
ESY: [URR, SXQ, NEE, FSE, DUB, GLD],
CVL: [SXQ, FSE],
LGB: [IJC, ONK, FSE, DBW],
XEE: [NEE, DUB],
URR: [WDY, ESY],
SXQ: [ESY, CVL],
NEE: [ESY, XEE],
IJC: [WDY, LGB],
ONK: [LGB],
FSE: [ERP, ESY, CVL, LGB],
DUB: [ERP, ESY, XEE],
DBW: [LGB],
GLD: [WDY, ESY]}","Node WDY is connected to nodes URR, IJC, GLD.
Node ERP is connected to nodes FSE, DUB.
Node ESY is connected to nodes URR, SXQ, NEE, FSE, DUB, GLD.
Node CVL is connected to nodes SXQ, FSE.
Node LGB is connected to nodes IJC, ONK, FSE, DBW.
Node XEE is connected to nodes NEE, DUB.
Node URR is connected to nodes WDY, ESY.
Node SXQ is connected to nodes ESY, CVL.
Node NEE is connected to nodes ESY, XEE.
Node IJC is connected to nodes WDY, LGB.
Node ONK is connected to node LGB.
Node FSE is connected to nodes ERP, ESY, CVL, LGB.
Node DUB is connected to nodes ERP, ESY, XEE.
Node DBW is connected to node LGB.
Node GLD is connected to nodes WDY, ESY.","[WDY, ERP, ESY, CVL, LGB, XEE, URR, SXQ, NEE, IJC, ONK, FSE, DUB, DBW, GLD]",15,19,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WDY ERP ESY CVL LGB XEE.
Nodes set 2 contains: URR SXQ NEE IJC ONK FSE DUB DBW GLD.","[(WDY, URR), (ERP, DUB), (ESY, SXQ), (CVL, FSE), (LGB, IJC), (XEE, NEE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WDY. Updated matching: {URR: WDY}.
Search from node ERP. Updated matching: {URR: WDY, FSE: ERP}.
Search from node ESY. Updated matching: {URR: ESY, FSE: ERP, IJC: WDY}.
Search from node CVL. Updated matching: {URR: ESY, FSE: ERP, IJC: WDY, SXQ: CVL}.
Search from node LGB. Updated matching: {URR: WDY, FSE: CVL, IJC: LGB, SXQ: ESY, DUB: ERP}.
Search from node XEE. Updated matching: {URR: WDY, FSE: CVL, IJC: LGB, SXQ: ESY, DUB: ERP, NEE: XEE}.
So the maximum matching is ",6,9,100
bipartite,"[(PNZ, HGE), (PNZ, ORV), (PNZ, RHM), (KPI, VTE), (KPI, WWI), (MXJ, FSY), (MXJ, ORV), (CWQ, DRN), (CWQ, FSY), (CWQ, HGE), (XYD, VTE), (XYD, FSY), (XYD, HGE), (XYD, RHM)]","{PNZ: [HGE, ORV, RHM],
KPI: [VTE, WWI],
MXJ: [FSY, ORV],
CWQ: [DRN, FSY, HGE],
XYD: [VTE, FSY, HGE, RHM],
DRN: [CWQ],
VTE: [KPI, XYD],
FSY: [MXJ, CWQ, XYD],
HGE: [PNZ, CWQ, XYD],
ORV: [PNZ, MXJ],
RHM: [PNZ, XYD],
WWI: [KPI]}","Node PNZ is connected to nodes HGE, ORV, RHM.
Node KPI is connected to nodes VTE, WWI.
Node MXJ is connected to nodes FSY, ORV.
Node CWQ is connected to nodes DRN, FSY, HGE.
Node XYD is connected to nodes VTE, FSY, HGE, RHM.
Node DRN is connected to node CWQ.
Node VTE is connected to nodes KPI, XYD.
Node FSY is connected to nodes MXJ, CWQ, XYD.
Node HGE is connected to nodes PNZ, CWQ, XYD.
Node ORV is connected to nodes PNZ, MXJ.
Node RHM is connected to nodes PNZ, XYD.
Node WWI is connected to node KPI.","[PNZ, KPI, MXJ, CWQ, XYD, DRN, VTE, FSY, HGE, ORV, RHM, WWI]",12,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PNZ KPI MXJ CWQ XYD.
Nodes set 2 contains: DRN VTE FSY HGE ORV RHM WWI.","[(PNZ, HGE), (KPI, WWI), (MXJ, FSY), (CWQ, DRN), (XYD, VTE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PNZ. Updated matching: {HGE: PNZ}.
Search from node KPI. Updated matching: {HGE: PNZ, VTE: KPI}.
Search from node MXJ. Updated matching: {HGE: PNZ, VTE: KPI, FSY: MXJ}.
Search from node CWQ. Updated matching: {HGE: PNZ, VTE: KPI, FSY: MXJ, DRN: CWQ}.
Search from node XYD. Updated matching: {HGE: PNZ, VTE: XYD, FSY: MXJ, DRN: CWQ, WWI: KPI}.
So the maximum matching is ",5,7,101
bipartite,"[(AVO, IZW), (AVO, ZID), (AVO, HNL), (AVO, LTW), (AVO, BUC), (XXY, BUO), (XXY, PFF), (ZOV, IZW), (ZOV, ZID), (ZOV, PFF)]","{AVO: [IZW, ZID, HNL, LTW, BUC],
XXY: [BUO, PFF],
ZOV: [IZW, ZID, PFF],
IZW: [AVO, ZOV],
ZID: [AVO, ZOV],
HNL: [AVO],
LTW: [AVO],
BUO: [XXY],
PFF: [XXY, ZOV],
BUC: [AVO]}","Node AVO is connected to nodes IZW, ZID, HNL, LTW, BUC.
Node XXY is connected to nodes BUO, PFF.
Node ZOV is connected to nodes IZW, ZID, PFF.
Node IZW is connected to nodes AVO, ZOV.
Node ZID is connected to nodes AVO, ZOV.
Node HNL is connected to node AVO.
Node LTW is connected to node AVO.
Node BUO is connected to node XXY.
Node PFF is connected to nodes XXY, ZOV.
Node BUC is connected to node AVO.","[AVO, XXY, ZOV, IZW, ZID, HNL, LTW, BUO, PFF, BUC]",10,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: AVO XXY ZOV.
Nodes set 2 contains: IZW ZID HNL LTW BUO PFF BUC.","[(AVO, ZID), (XXY, BUO), (ZOV, IZW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node AVO. Updated matching: {IZW: AVO}.
Search from node XXY. Updated matching: {IZW: AVO, BUO: XXY}.
Search from node ZOV. Updated matching: {IZW: ZOV, BUO: XXY, ZID: AVO}.
So the maximum matching is ",3,7,102
bipartite,"[(NNM, IWG), (NNM, DUH), (NNM, RMW), (NNM, XCV), (NNM, ODX), (DZB, RTG), (DZB, UGK), (FBH, IWG), (FBH, UGK), (FBH, RMW), (FBH, GRU), (WUI, IWG), (WUI, DUH), (WUI, GRU), (QEE, DUH), (PIJ, RMW), (PIJ, OWM)]","{NNM: [IWG, DUH, RMW, XCV, ODX],
DZB: [RTG, UGK],
FBH: [IWG, UGK, RMW, GRU],
WUI: [IWG, DUH, GRU],
QEE: [DUH],
PIJ: [RMW, OWM],
RTG: [DZB],
IWG: [NNM, FBH, WUI],
DUH: [NNM, WUI, QEE],
UGK: [DZB, FBH],
RMW: [NNM, FBH, PIJ],
OWM: [PIJ],
GRU: [FBH, WUI],
XCV: [NNM],
ODX: [NNM]}","Node NNM is connected to nodes IWG, DUH, RMW, XCV, ODX.
Node DZB is connected to nodes RTG, UGK.
Node FBH is connected to nodes IWG, UGK, RMW, GRU.
Node WUI is connected to nodes IWG, DUH, GRU.
Node QEE is connected to node DUH.
Node PIJ is connected to nodes RMW, OWM.
Node RTG is connected to node DZB.
Node IWG is connected to nodes NNM, FBH, WUI.
Node DUH is connected to nodes NNM, WUI, QEE.
Node UGK is connected to nodes DZB, FBH.
Node RMW is connected to nodes NNM, FBH, PIJ.
Node OWM is connected to node PIJ.
Node GRU is connected to nodes FBH, WUI.
Node XCV is connected to node NNM.
Node ODX is connected to node NNM.","[NNM, DZB, FBH, WUI, QEE, PIJ, RTG, IWG, DUH, UGK, RMW, OWM, GRU, XCV, ODX]",15,17,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NNM DZB FBH WUI QEE PIJ.
Nodes set 2 contains: RTG IWG DUH UGK RMW OWM GRU XCV ODX.","[(NNM, IWG), (DZB, RTG), (FBH, UGK), (WUI, GRU), (QEE, DUH), (PIJ, RMW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NNM. Updated matching: {IWG: NNM}.
Search from node DZB. Updated matching: {IWG: NNM, RTG: DZB}.
Search from node FBH. Updated matching: {IWG: FBH, RTG: DZB, DUH: NNM}.
Search from node WUI. Updated matching: {IWG: WUI, RTG: DZB, DUH: NNM, UGK: FBH}.
Search from node QEE. Updated matching: {IWG: NNM, RTG: DZB, DUH: QEE, UGK: FBH, GRU: WUI}.
Search from node PIJ. Updated matching: {IWG: NNM, RTG: DZB, DUH: QEE, UGK: FBH, GRU: WUI, RMW: PIJ}.
So the maximum matching is ",6,9,103
bipartite,"[(MLC, SDO), (MLC, LFV), (MLC, FSM), (CWF, LFV), (EXC, BFK), (EXC, NAS), (EXC, FSM)]","{MLC: [SDO, LFV, FSM],
CWF: [LFV],
EXC: [BFK, NAS, FSM],
SDO: [MLC],
LFV: [MLC, CWF],
BFK: [EXC],
NAS: [EXC],
FSM: [MLC, EXC]}","Node MLC is connected to nodes SDO, LFV, FSM.
Node CWF is connected to node LFV.
Node EXC is connected to nodes BFK, NAS, FSM.
Node SDO is connected to node MLC.
Node LFV is connected to nodes MLC, CWF.
Node BFK is connected to node EXC.
Node NAS is connected to node EXC.
Node FSM is connected to nodes MLC, EXC.","[MLC, CWF, EXC, SDO, LFV, BFK, NAS, FSM]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MLC CWF EXC.
Nodes set 2 contains: SDO LFV BFK NAS FSM.","[(MLC, SDO), (CWF, LFV), (EXC, BFK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MLC. Updated matching: {SDO: MLC}.
Search from node CWF. Updated matching: {SDO: MLC, LFV: CWF}.
Search from node EXC. Updated matching: {SDO: MLC, LFV: CWF, BFK: EXC}.
So the maximum matching is ",3,5,104
bipartite,"[(YAB, ABI), (YAB, ZOE), (YAB, YAO), (YAB, PKF), (NRT, YON), (NRT, FXG), (NRT, YAO), (NRT, WME), (GVB, ABI), (GVB, ZOE), (GVB, YAO), (GVB, PKF), (RZR, FXG), (RZR, ZOE), (RZR, YAO), (XWQ, FXG), (XWQ, ABI), (XWQ, PKF), (XWQ, WME)]","{YAB: [ABI, ZOE, YAO, PKF],
NRT: [YON, FXG, YAO, WME],
GVB: [ABI, ZOE, YAO, PKF],
RZR: [FXG, ZOE, YAO],
XWQ: [FXG, ABI, PKF, WME],
YON: [NRT],
FXG: [NRT, RZR, XWQ],
ABI: [YAB, GVB, XWQ],
ZOE: [YAB, GVB, RZR],
YAO: [YAB, NRT, GVB, RZR],
PKF: [YAB, GVB, XWQ],
WME: [NRT, XWQ]}","Node YAB is connected to nodes ABI, ZOE, YAO, PKF.
Node NRT is connected to nodes YON, FXG, YAO, WME.
Node GVB is connected to nodes ABI, ZOE, YAO, PKF.
Node RZR is connected to nodes FXG, ZOE, YAO.
Node XWQ is connected to nodes FXG, ABI, PKF, WME.
Node YON is connected to node NRT.
Node FXG is connected to nodes NRT, RZR, XWQ.
Node ABI is connected to nodes YAB, GVB, XWQ.
Node ZOE is connected to nodes YAB, GVB, RZR.
Node YAO is connected to nodes YAB, NRT, GVB, RZR.
Node PKF is connected to nodes YAB, GVB, XWQ.
Node WME is connected to nodes NRT, XWQ.","[YAB, NRT, GVB, RZR, XWQ, YON, FXG, ABI, ZOE, YAO, PKF, WME]",12,19,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YAB NRT GVB RZR XWQ.
Nodes set 2 contains: YON FXG ABI ZOE YAO PKF WME.","[(YAB, ABI), (NRT, YON), (GVB, YAO), (RZR, ZOE), (XWQ, FXG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YAB. Updated matching: {ABI: YAB}.
Search from node NRT. Updated matching: {ABI: YAB, YON: NRT}.
Search from node GVB. Updated matching: {ABI: GVB, YON: NRT, ZOE: YAB}.
Search from node RZR. Updated matching: {ABI: GVB, YON: NRT, ZOE: YAB, FXG: RZR}.
Search from node XWQ. Updated matching: {ABI: YAB, YON: NRT, ZOE: RZR, FXG: XWQ, YAO: GVB}.
So the maximum matching is ",5,7,105
bipartite,"[(RJY, EVS), (RJY, MJH), (RJY, TXA), (IGF, EVS), (IGF, MJH), (ERZ, XXZ), (ERZ, CXL), (ERZ, HOK), (FTK, CXL), (FTK, MJH), (FTK, TXA), (GHA, MJH), (ZVT, HOK), (ZVT, NUX)]","{RJY: [EVS, MJH, TXA],
IGF: [EVS, MJH],
ERZ: [XXZ, CXL, HOK],
FTK: [CXL, MJH, TXA],
GHA: [MJH],
ZVT: [HOK, NUX],
XXZ: [ERZ],
CXL: [ERZ, FTK],
EVS: [RJY, IGF],
HOK: [ERZ, ZVT],
MJH: [RJY, IGF, FTK, GHA],
NUX: [ZVT],
TXA: [RJY, FTK]}","Node RJY is connected to nodes EVS, MJH, TXA.
Node IGF is connected to nodes EVS, MJH.
Node ERZ is connected to nodes XXZ, CXL, HOK.
Node FTK is connected to nodes CXL, MJH, TXA.
Node GHA is connected to node MJH.
Node ZVT is connected to nodes HOK, NUX.
Node XXZ is connected to node ERZ.
Node CXL is connected to nodes ERZ, FTK.
Node EVS is connected to nodes RJY, IGF.
Node HOK is connected to nodes ERZ, ZVT.
Node MJH is connected to nodes RJY, IGF, FTK, GHA.
Node NUX is connected to node ZVT.
Node TXA is connected to nodes RJY, FTK.","[RJY, IGF, ERZ, FTK, GHA, ZVT, XXZ, CXL, EVS, HOK, MJH, NUX, TXA]",13,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RJY IGF ERZ FTK GHA ZVT.
Nodes set 2 contains: XXZ CXL EVS HOK MJH NUX TXA.","[(RJY, TXA), (IGF, EVS), (ERZ, XXZ), (FTK, CXL), (GHA, MJH), (ZVT, HOK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RJY. Updated matching: {EVS: RJY}.
Search from node IGF. Updated matching: {EVS: IGF, MJH: RJY}.
Search from node ERZ. Updated matching: {EVS: IGF, MJH: RJY, XXZ: ERZ}.
Search from node FTK. Updated matching: {EVS: IGF, MJH: RJY, XXZ: ERZ, CXL: FTK}.
Search from node GHA. Updated matching: {EVS: IGF, MJH: GHA, XXZ: ERZ, CXL: FTK, TXA: RJY}.
Search from node ZVT. Updated matching: {EVS: IGF, MJH: GHA, XXZ: ERZ, CXL: FTK, TXA: RJY, HOK: ZVT}.
So the maximum matching is ",6,7,106
bipartite,"[(UNB, RDK), (UNB, ERU), (UNB, FKQ), (WLP, TYS), (WLP, FKQ), (ONC, DKE), (ONC, ESZ), (KHT, FKQ), (ZTT, RDK), (ZTT, ESZ), (ZTT, SFW), (KFU, ERU)]","{UNB: [RDK, ERU, FKQ],
WLP: [TYS, FKQ],
ONC: [DKE, ESZ],
KHT: [FKQ],
ZTT: [RDK, ESZ, SFW],
KFU: [ERU],
DKE: [ONC],
TYS: [WLP],
RDK: [UNB, ZTT],
ESZ: [ONC, ZTT],
SFW: [ZTT],
ERU: [UNB, KFU],
FKQ: [UNB, WLP, KHT]}","Node UNB is connected to nodes RDK, ERU, FKQ.
Node WLP is connected to nodes TYS, FKQ.
Node ONC is connected to nodes DKE, ESZ.
Node KHT is connected to node FKQ.
Node ZTT is connected to nodes RDK, ESZ, SFW.
Node KFU is connected to node ERU.
Node DKE is connected to node ONC.
Node TYS is connected to node WLP.
Node RDK is connected to nodes UNB, ZTT.
Node ESZ is connected to nodes ONC, ZTT.
Node SFW is connected to node ZTT.
Node ERU is connected to nodes UNB, KFU.
Node FKQ is connected to nodes UNB, WLP, KHT.","[UNB, WLP, ONC, KHT, ZTT, KFU, DKE, TYS, RDK, ESZ, SFW, ERU, FKQ]",13,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UNB WLP ONC KHT ZTT KFU.
Nodes set 2 contains: DKE TYS RDK ESZ SFW ERU FKQ.","[(UNB, RDK), (WLP, TYS), (ONC, DKE), (KHT, FKQ), (ZTT, ESZ), (KFU, ERU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UNB. Updated matching: {RDK: UNB}.
Search from node WLP. Updated matching: {RDK: UNB, TYS: WLP}.
Search from node ONC. Updated matching: {RDK: UNB, TYS: WLP, DKE: ONC}.
Search from node KHT. Updated matching: {RDK: UNB, TYS: WLP, DKE: ONC, FKQ: KHT}.
Search from node ZTT. Updated matching: {RDK: ZTT, TYS: WLP, DKE: ONC, FKQ: KHT, ERU: UNB}.
Search from node KFU. Updated matching: {RDK: UNB, TYS: WLP, DKE: ONC, FKQ: KHT, ERU: KFU, ESZ: ZTT}.
So the maximum matching is ",6,7,107
bipartite,"[(XHA, WTI), (XHA, PAP), (XHA, UJF), (XHA, PUQ), (NNW, PAP), (NNW, UJF), (NNW, PUQ), (UOC, UJF), (UOC, IYG), (XKH, UJF)]","{XHA: [WTI, PAP, UJF, PUQ],
NNW: [PAP, UJF, PUQ],
UOC: [UJF, IYG],
XKH: [UJF],
WTI: [XHA],
PAP: [XHA, NNW],
UJF: [XHA, NNW, UOC, XKH],
PUQ: [XHA, NNW],
IYG: [UOC]}","Node XHA is connected to nodes WTI, PAP, UJF, PUQ.
Node NNW is connected to nodes PAP, UJF, PUQ.
Node UOC is connected to nodes UJF, IYG.
Node XKH is connected to node UJF.
Node WTI is connected to node XHA.
Node PAP is connected to nodes XHA, NNW.
Node UJF is connected to nodes XHA, NNW, UOC, XKH.
Node PUQ is connected to nodes XHA, NNW.
Node IYG is connected to node UOC.","[XHA, NNW, UOC, XKH, WTI, PAP, UJF, PUQ, IYG]",9,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XHA NNW UOC XKH.
Nodes set 2 contains: WTI PAP UJF PUQ IYG.","[(XHA, WTI), (NNW, PAP), (UOC, IYG), (XKH, UJF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XHA. Updated matching: {WTI: XHA}.
Search from node NNW. Updated matching: {WTI: XHA, PAP: NNW}.
Search from node UOC. Updated matching: {WTI: XHA, PAP: NNW, UJF: UOC}.
Search from node XKH. Updated matching: {WTI: XHA, PAP: NNW, UJF: XKH, IYG: UOC}.
So the maximum matching is ",4,5,108
bipartite,"[(FCV, AGM), (FCV, EIH), (FCV, CBD), (PZR, GNQ), (PZR, EIH), (FXM, AGM), (FXM, EIH), (FXM, CBD), (FXM, IJW)]","{FCV: [AGM, EIH, CBD],
PZR: [GNQ, EIH],
FXM: [AGM, EIH, CBD, IJW],
GNQ: [PZR],
AGM: [FCV, FXM],
EIH: [FCV, PZR, FXM],
CBD: [FCV, FXM],
IJW: [FXM]}","Node FCV is connected to nodes AGM, EIH, CBD.
Node PZR is connected to nodes GNQ, EIH.
Node FXM is connected to nodes AGM, EIH, CBD, IJW.
Node GNQ is connected to node PZR.
Node AGM is connected to nodes FCV, FXM.
Node EIH is connected to nodes FCV, PZR, FXM.
Node CBD is connected to nodes FCV, FXM.
Node IJW is connected to node FXM.","[FCV, PZR, FXM, GNQ, AGM, EIH, CBD, IJW]",8,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FCV PZR FXM.
Nodes set 2 contains: GNQ AGM EIH CBD IJW.","[(FCV, EIH), (PZR, GNQ), (FXM, AGM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FCV. Updated matching: {AGM: FCV}.
Search from node PZR. Updated matching: {AGM: FCV, GNQ: PZR}.
Search from node FXM. Updated matching: {AGM: FXM, GNQ: PZR, EIH: FCV}.
So the maximum matching is ",3,5,109
bipartite,"[(IOW, ROV), (IOW, SAY), (VVX, BPX), (VVX, SAY), (VVX, EYB), (VVX, AWU), (QLO, ROV), (QLO, EYB), (QLO, ODU), (QLO, ZBY)]","{IOW: [ROV, SAY],
VVX: [BPX, SAY, EYB, AWU],
QLO: [ROV, EYB, ODU, ZBY],
BPX: [VVX],
ROV: [IOW, QLO],
SAY: [IOW, VVX],
EYB: [VVX, QLO],
AWU: [VVX],
ODU: [QLO],
ZBY: [QLO]}","Node IOW is connected to nodes ROV, SAY.
Node VVX is connected to nodes BPX, SAY, EYB, AWU.
Node QLO is connected to nodes ROV, EYB, ODU, ZBY.
Node BPX is connected to node VVX.
Node ROV is connected to nodes IOW, QLO.
Node SAY is connected to nodes IOW, VVX.
Node EYB is connected to nodes VVX, QLO.
Node AWU is connected to node VVX.
Node ODU is connected to node QLO.
Node ZBY is connected to node QLO.","[IOW, VVX, QLO, BPX, ROV, SAY, EYB, AWU, ODU, ZBY]",10,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IOW VVX QLO.
Nodes set 2 contains: BPX ROV SAY EYB AWU ODU ZBY.","[(IOW, SAY), (VVX, BPX), (QLO, ROV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IOW. Updated matching: {ROV: IOW}.
Search from node VVX. Updated matching: {ROV: IOW, BPX: VVX}.
Search from node QLO. Updated matching: {ROV: QLO, BPX: VVX, SAY: IOW}.
So the maximum matching is ",3,7,110
bipartite,"[(PHM, OTZ), (PHM, KLK), (PHM, PCW), (IYU, OTZ), (IYU, FIK), (IYU, YBG), (FKA, YNS), (FKA, BFM), (FKA, YBG), (FKA, KLK), (FKA, PCW), (FKA, SKX), (EPB, OTZ), (EPB, FIK), (EPB, YNS), (EPB, BFM), (EPB, YBG), (EPB, PCW), (EPB, SKX), (WGR, DEW), (WGR, OTZ), (WGR, FIK), (WGR, KLK), (WGR, IGZ)]","{PHM: [OTZ, KLK, PCW],
IYU: [OTZ, FIK, YBG],
FKA: [YNS, BFM, YBG, KLK, PCW, SKX],
EPB: [OTZ, FIK, YNS, BFM, YBG, PCW, SKX],
WGR: [DEW, OTZ, FIK, KLK, IGZ],
DEW: [WGR],
OTZ: [PHM, IYU, EPB, WGR],
FIK: [IYU, EPB, WGR],
YNS: [FKA, EPB],
BFM: [FKA, EPB],
YBG: [IYU, FKA, EPB],
KLK: [PHM, FKA, WGR],
PCW: [PHM, FKA, EPB],
SKX: [FKA, EPB],
IGZ: [WGR]}","Node PHM is connected to nodes OTZ, KLK, PCW.
Node IYU is connected to nodes OTZ, FIK, YBG.
Node FKA is connected to nodes YNS, BFM, YBG, KLK, PCW, SKX.
Node EPB is connected to nodes OTZ, FIK, YNS, BFM, YBG, PCW, SKX.
Node WGR is connected to nodes DEW, OTZ, FIK, KLK, IGZ.
Node DEW is connected to node WGR.
Node OTZ is connected to nodes PHM, IYU, EPB, WGR.
Node FIK is connected to nodes IYU, EPB, WGR.
Node YNS is connected to nodes FKA, EPB.
Node BFM is connected to nodes FKA, EPB.
Node YBG is connected to nodes IYU, FKA, EPB.
Node KLK is connected to nodes PHM, FKA, WGR.
Node PCW is connected to nodes PHM, FKA, EPB.
Node SKX is connected to nodes FKA, EPB.
Node IGZ is connected to node WGR.","[PHM, IYU, FKA, EPB, WGR, DEW, OTZ, FIK, YNS, BFM, YBG, KLK, PCW, SKX, IGZ]",15,24,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PHM IYU FKA EPB WGR.
Nodes set 2 contains: DEW OTZ FIK YNS BFM YBG KLK PCW SKX IGZ.","[(PHM, KLK), (IYU, FIK), (FKA, YNS), (EPB, OTZ), (WGR, DEW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PHM. Updated matching: {OTZ: PHM}.
Search from node IYU. Updated matching: {OTZ: IYU, KLK: PHM}.
Search from node FKA. Updated matching: {OTZ: IYU, KLK: PHM, YNS: FKA}.
Search from node EPB. Updated matching: {OTZ: EPB, KLK: PHM, YNS: FKA, FIK: IYU}.
Search from node WGR. Updated matching: {OTZ: EPB, KLK: PHM, YNS: FKA, FIK: IYU, DEW: WGR}.
So the maximum matching is ",5,10,111
bipartite,"[(TPS, PUC), (TPS, XFX), (TPS, TIF), (TPS, PGY), (TPS, BTD), (IOK, HPS), (IOK, NVL), (IOK, TIF), (IOK, KYV), (DAS, NVL), (DAS, TIF), (DAS, PGY), (DAS, PIX), (DAS, YMB), (FTB, NVL), (FTB, TIF), (FTB, PGY), (FTB, PIX), (FTB, YMB), (IVX, KYV)]","{TPS: [PUC, XFX, TIF, PGY, BTD],
IOK: [HPS, NVL, TIF, KYV],
DAS: [NVL, TIF, PGY, PIX, YMB],
FTB: [NVL, TIF, PGY, PIX, YMB],
IVX: [KYV],
HPS: [IOK],
PUC: [TPS],
NVL: [IOK, DAS, FTB],
XFX: [TPS],
TIF: [TPS, IOK, DAS, FTB],
KYV: [IOK, IVX],
PGY: [TPS, DAS, FTB],
BTD: [TPS],
PIX: [DAS, FTB],
YMB: [DAS, FTB]}","Node TPS is connected to nodes PUC, XFX, TIF, PGY, BTD.
Node IOK is connected to nodes HPS, NVL, TIF, KYV.
Node DAS is connected to nodes NVL, TIF, PGY, PIX, YMB.
Node FTB is connected to nodes NVL, TIF, PGY, PIX, YMB.
Node IVX is connected to node KYV.
Node HPS is connected to node IOK.
Node PUC is connected to node TPS.
Node NVL is connected to nodes IOK, DAS, FTB.
Node XFX is connected to node TPS.
Node TIF is connected to nodes TPS, IOK, DAS, FTB.
Node KYV is connected to nodes IOK, IVX.
Node PGY is connected to nodes TPS, DAS, FTB.
Node BTD is connected to node TPS.
Node PIX is connected to nodes DAS, FTB.
Node YMB is connected to nodes DAS, FTB.","[TPS, IOK, DAS, FTB, IVX, HPS, PUC, NVL, XFX, TIF, KYV, PGY, BTD, PIX, YMB]",15,20,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TPS IOK DAS FTB IVX.
Nodes set 2 contains: HPS PUC NVL XFX TIF KYV PGY BTD PIX YMB.","[(TPS, PUC), (IOK, HPS), (DAS, TIF), (FTB, NVL), (IVX, KYV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TPS. Updated matching: {PUC: TPS}.
Search from node IOK. Updated matching: {PUC: TPS, HPS: IOK}.
Search from node DAS. Updated matching: {PUC: TPS, HPS: IOK, NVL: DAS}.
Search from node FTB. Updated matching: {PUC: TPS, HPS: IOK, NVL: FTB, TIF: DAS}.
Search from node IVX. Updated matching: {PUC: TPS, HPS: IOK, NVL: FTB, TIF: DAS, KYV: IVX}.
So the maximum matching is ",5,10,112
bipartite,"[(SXX, MQM), (SXX, XKB), (TQE, IUX), (TQE, HIC), (TQE, HDL), (TQE, NQX), (ASI, MQM), (ASI, IUX), (ASI, HIC), (ASI, XKB), (SXE, MQM), (SXE, HIC), (DBL, HIC), (DBL, FDF), (DBL, NQX)]","{SXX: [MQM, XKB],
TQE: [IUX, HIC, HDL, NQX],
ASI: [MQM, IUX, HIC, XKB],
SXE: [MQM, HIC],
DBL: [HIC, FDF, NQX],
MQM: [SXX, ASI, SXE],
IUX: [TQE, ASI],
HIC: [TQE, ASI, SXE, DBL],
HDL: [TQE],
FDF: [DBL],
NQX: [TQE, DBL],
XKB: [SXX, ASI]}","Node SXX is connected to nodes MQM, XKB.
Node TQE is connected to nodes IUX, HIC, HDL, NQX.
Node ASI is connected to nodes MQM, IUX, HIC, XKB.
Node SXE is connected to nodes MQM, HIC.
Node DBL is connected to nodes HIC, FDF, NQX.
Node MQM is connected to nodes SXX, ASI, SXE.
Node IUX is connected to nodes TQE, ASI.
Node HIC is connected to nodes TQE, ASI, SXE, DBL.
Node HDL is connected to node TQE.
Node FDF is connected to node DBL.
Node NQX is connected to nodes TQE, DBL.
Node XKB is connected to nodes SXX, ASI.","[SXX, TQE, ASI, SXE, DBL, MQM, IUX, HIC, HDL, FDF, NQX, XKB]",12,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SXX TQE ASI SXE DBL.
Nodes set 2 contains: MQM IUX HIC HDL FDF NQX XKB.","[(SXX, XKB), (TQE, HDL), (ASI, IUX), (SXE, MQM), (DBL, HIC)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SXX. Updated matching: {MQM: SXX}.
Search from node TQE. Updated matching: {MQM: SXX, IUX: TQE}.
Search from node ASI. Updated matching: {MQM: ASI, IUX: TQE, XKB: SXX}.
Search from node SXE. Updated matching: {MQM: SXE, IUX: ASI, XKB: SXX, HIC: TQE}.
Search from node DBL. Updated matching: {MQM: SXE, IUX: ASI, XKB: SXX, HIC: DBL, HDL: TQE}.
So the maximum matching is ",5,7,113
bipartite,"[(CSN, AWR), (CSN, BBB), (CSN, ABG), (OCY, XBC), (OCY, OTF), (OCY, QUD), (ZVF, OTF), (ZVF, QUD), (ZVF, ABG), (GMO, OTF), (GMO, ABG), (BEZ, BBB), (BEZ, ABG)]","{CSN: [AWR, BBB, ABG],
OCY: [XBC, OTF, QUD],
ZVF: [OTF, QUD, ABG],
GMO: [OTF, ABG],
BEZ: [BBB, ABG],
XBC: [OCY],
OTF: [OCY, ZVF, GMO],
QUD: [OCY, ZVF],
AWR: [CSN],
BBB: [CSN, BEZ],
ABG: [CSN, ZVF, GMO, BEZ]}","Node CSN is connected to nodes AWR, BBB, ABG.
Node OCY is connected to nodes XBC, OTF, QUD.
Node ZVF is connected to nodes OTF, QUD, ABG.
Node GMO is connected to nodes OTF, ABG.
Node BEZ is connected to nodes BBB, ABG.
Node XBC is connected to node OCY.
Node OTF is connected to nodes OCY, ZVF, GMO.
Node QUD is connected to nodes OCY, ZVF.
Node AWR is connected to node CSN.
Node BBB is connected to nodes CSN, BEZ.
Node ABG is connected to nodes CSN, ZVF, GMO, BEZ.","[CSN, OCY, ZVF, GMO, BEZ, XBC, OTF, QUD, AWR, BBB, ABG]",11,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CSN OCY ZVF GMO BEZ.
Nodes set 2 contains: XBC OTF QUD AWR BBB ABG.","[(CSN, AWR), (OCY, XBC), (ZVF, QUD), (GMO, OTF), (BEZ, BBB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CSN. Updated matching: {AWR: CSN}.
Search from node OCY. Updated matching: {AWR: CSN, XBC: OCY}.
Search from node ZVF. Updated matching: {AWR: CSN, XBC: OCY, OTF: ZVF}.
Search from node GMO. Updated matching: {AWR: CSN, XBC: OCY, OTF: GMO, QUD: ZVF}.
Search from node BEZ. Updated matching: {AWR: CSN, XBC: OCY, OTF: GMO, QUD: ZVF, BBB: BEZ}.
So the maximum matching is ",5,6,114
bipartite,"[(ZOQ, AYK), (ZOQ, PWU), (ZOQ, ENS), (ZOQ, WBM), (ZOQ, FJG), (ZOQ, PKV), (IUU, AYK), (IUU, PWU), (IUU, HKL), (IUU, FIL), (IUU, ENS), (IUU, FJG), (MBU, AYK), (MBU, HKL), (MBU, FJG), (WPN, PWU), (WPN, ZPY), (FCB, AYK), (FCB, PWU), (FCB, FIL), (FCB, ZPY), (FCB, ENS), (FCB, WBM), (TLC, AYK), (TLC, FIL), (TLC, ZPY), (TLC, WBM)]","{ZOQ: [AYK, PWU, ENS, WBM, FJG, PKV],
IUU: [AYK, PWU, HKL, FIL, ENS, FJG],
MBU: [AYK, HKL, FJG],
WPN: [PWU, ZPY],
FCB: [AYK, PWU, FIL, ZPY, ENS, WBM],
TLC: [AYK, FIL, ZPY, WBM],
AYK: [ZOQ, IUU, MBU, FCB, TLC],
PWU: [ZOQ, IUU, WPN, FCB],
HKL: [IUU, MBU],
FIL: [IUU, FCB, TLC],
ZPY: [WPN, FCB, TLC],
ENS: [ZOQ, IUU, FCB],
WBM: [ZOQ, FCB, TLC],
FJG: [ZOQ, IUU, MBU],
PKV: [ZOQ]}","Node ZOQ is connected to nodes AYK, PWU, ENS, WBM, FJG, PKV.
Node IUU is connected to nodes AYK, PWU, HKL, FIL, ENS, FJG.
Node MBU is connected to nodes AYK, HKL, FJG.
Node WPN is connected to nodes PWU, ZPY.
Node FCB is connected to nodes AYK, PWU, FIL, ZPY, ENS, WBM.
Node TLC is connected to nodes AYK, FIL, ZPY, WBM.
Node AYK is connected to nodes ZOQ, IUU, MBU, FCB, TLC.
Node PWU is connected to nodes ZOQ, IUU, WPN, FCB.
Node HKL is connected to nodes IUU, MBU.
Node FIL is connected to nodes IUU, FCB, TLC.
Node ZPY is connected to nodes WPN, FCB, TLC.
Node ENS is connected to nodes ZOQ, IUU, FCB.
Node WBM is connected to nodes ZOQ, FCB, TLC.
Node FJG is connected to nodes ZOQ, IUU, MBU.
Node PKV is connected to node ZOQ.","[ZOQ, IUU, MBU, WPN, FCB, TLC, AYK, PWU, HKL, FIL, ZPY, ENS, WBM, FJG, PKV]",15,27,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZOQ IUU MBU WPN FCB TLC.
Nodes set 2 contains: AYK PWU HKL FIL ZPY ENS WBM FJG PKV.","[(ZOQ, ENS), (IUU, HKL), (MBU, FJG), (WPN, ZPY), (FCB, PWU), (TLC, AYK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZOQ. Updated matching: {AYK: ZOQ}.
Search from node IUU. Updated matching: {AYK: IUU, PWU: ZOQ}.
Search from node MBU. Updated matching: {AYK: MBU, PWU: IUU, ENS: ZOQ}.
Search from node WPN. Updated matching: {AYK: IUU, PWU: WPN, ENS: ZOQ, HKL: MBU}.
Search from node FCB. Updated matching: {AYK: FCB, PWU: IUU, ENS: ZOQ, HKL: MBU, ZPY: WPN}.
Search from node TLC. Updated matching: {AYK: TLC, PWU: FCB, ENS: ZOQ, HKL: IUU, ZPY: WPN, FJG: MBU}.
So the maximum matching is ",6,9,115
bipartite,"[(WOA, DGA), (WOA, QMF), (WOA, MWM), (NWQ, DGA), (NWQ, QMF), (NWQ, WZP), (NWQ, MSK), (TAN, HTS), (TAN, RJF), (PYK, DGA), (PYK, RJF), (PYK, MWM)]","{WOA: [DGA, QMF, MWM],
NWQ: [DGA, QMF, WZP, MSK],
TAN: [HTS, RJF],
PYK: [DGA, RJF, MWM],
DGA: [WOA, NWQ, PYK],
HTS: [TAN],
QMF: [WOA, NWQ],
WZP: [NWQ],
MSK: [NWQ],
RJF: [TAN, PYK],
MWM: [WOA, PYK]}","Node WOA is connected to nodes DGA, QMF, MWM.
Node NWQ is connected to nodes DGA, QMF, WZP, MSK.
Node TAN is connected to nodes HTS, RJF.
Node PYK is connected to nodes DGA, RJF, MWM.
Node DGA is connected to nodes WOA, NWQ, PYK.
Node HTS is connected to node TAN.
Node QMF is connected to nodes WOA, NWQ.
Node WZP is connected to node NWQ.
Node MSK is connected to node NWQ.
Node RJF is connected to nodes TAN, PYK.
Node MWM is connected to nodes WOA, PYK.","[WOA, NWQ, TAN, PYK, DGA, HTS, QMF, WZP, MSK, RJF, MWM]",11,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WOA NWQ TAN PYK.
Nodes set 2 contains: DGA HTS QMF WZP MSK RJF MWM.","[(WOA, MWM), (NWQ, QMF), (TAN, HTS), (PYK, DGA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WOA. Updated matching: {DGA: WOA}.
Search from node NWQ. Updated matching: {DGA: NWQ, QMF: WOA}.
Search from node TAN. Updated matching: {DGA: NWQ, QMF: WOA, HTS: TAN}.
Search from node PYK. Updated matching: {DGA: PYK, QMF: NWQ, HTS: TAN, MWM: WOA}.
So the maximum matching is ",4,7,116
bipartite,"[(OYL, JCU), (OYL, JGR), (BHM, IQQ), (BHM, BWE), (BHM, JGR), (VIT, XDI), (VIT, IQQ), (VIT, BWE), (NAT, IQQ)]","{OYL: [JCU, JGR],
BHM: [IQQ, BWE, JGR],
VIT: [XDI, IQQ, BWE],
NAT: [IQQ],
JCU: [OYL],
XDI: [VIT],
IQQ: [BHM, VIT, NAT],
BWE: [BHM, VIT],
JGR: [OYL, BHM]}","Node OYL is connected to nodes JCU, JGR.
Node BHM is connected to nodes IQQ, BWE, JGR.
Node VIT is connected to nodes XDI, IQQ, BWE.
Node NAT is connected to node IQQ.
Node JCU is connected to node OYL.
Node XDI is connected to node VIT.
Node IQQ is connected to nodes BHM, VIT, NAT.
Node BWE is connected to nodes BHM, VIT.
Node JGR is connected to nodes OYL, BHM.","[OYL, BHM, VIT, NAT, JCU, XDI, IQQ, BWE, JGR]",9,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OYL BHM VIT NAT.
Nodes set 2 contains: JCU XDI IQQ BWE JGR.","[(OYL, JCU), (BHM, BWE), (VIT, XDI), (NAT, IQQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OYL. Updated matching: {JCU: OYL}.
Search from node BHM. Updated matching: {JCU: OYL, IQQ: BHM}.
Search from node VIT. Updated matching: {JCU: OYL, IQQ: BHM, XDI: VIT}.
Search from node NAT. Updated matching: {JCU: OYL, IQQ: NAT, XDI: VIT, BWE: BHM}.
So the maximum matching is ",4,5,117
bipartite,"[(IER, MGU), (IER, VLX), (IER, XEX), (YTD, MGU), (YTD, EBM), (YTD, IKQ), (YTD, RAF), (GXC, EBM), (RLH, NNQ), (RLH, XEX), (RLH, RAF), (RLH, DPN), (AYC, VLX), (HCT, VLX), (UPD, IKQ)]","{IER: [MGU, VLX, XEX],
YTD: [MGU, EBM, IKQ, RAF],
GXC: [EBM],
RLH: [NNQ, XEX, RAF, DPN],
AYC: [VLX],
HCT: [VLX],
UPD: [IKQ],
MGU: [IER, YTD],
EBM: [YTD, GXC],
IKQ: [YTD, UPD],
VLX: [IER, AYC, HCT],
NNQ: [RLH],
XEX: [IER, RLH],
RAF: [YTD, RLH],
DPN: [RLH]}","Node IER is connected to nodes MGU, VLX, XEX.
Node YTD is connected to nodes MGU, EBM, IKQ, RAF.
Node GXC is connected to node EBM.
Node RLH is connected to nodes NNQ, XEX, RAF, DPN.
Node AYC is connected to node VLX.
Node HCT is connected to node VLX.
Node UPD is connected to node IKQ.
Node MGU is connected to nodes IER, YTD.
Node EBM is connected to nodes YTD, GXC.
Node IKQ is connected to nodes YTD, UPD.
Node VLX is connected to nodes IER, AYC, HCT.
Node NNQ is connected to node RLH.
Node XEX is connected to nodes IER, RLH.
Node RAF is connected to nodes YTD, RLH.
Node DPN is connected to node RLH.","[IER, YTD, GXC, RLH, AYC, HCT, UPD, MGU, EBM, IKQ, VLX, NNQ, XEX, RAF, DPN]",15,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IER YTD GXC RLH AYC HCT UPD.
Nodes set 2 contains: MGU EBM IKQ VLX NNQ XEX RAF DPN.","[(IER, XEX), (YTD, MGU), (GXC, EBM), (RLH, NNQ), (AYC, VLX), (UPD, IKQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IER. Updated matching: {MGU: IER}.
Search from node YTD. Updated matching: {MGU: YTD, VLX: IER}.
Search from node GXC. Updated matching: {MGU: YTD, VLX: IER, EBM: GXC}.
Search from node RLH. Updated matching: {MGU: YTD, VLX: IER, EBM: GXC, NNQ: RLH}.
Search from node AYC. Updated matching: {MGU: IER, VLX: AYC, EBM: GXC, NNQ: RLH, IKQ: YTD}.
Search from node HCT. Updated matching: {MGU: IER, VLX: AYC, EBM: GXC, NNQ: RLH, IKQ: YTD}.
Search from node UPD. Updated matching: {MGU: YTD, VLX: AYC, EBM: GXC, NNQ: RLH, IKQ: UPD, XEX: IER}.
So the maximum matching is ",7,8,118
bipartite,"[(WTG, DAO), (WTG, APH), (BVD, QJZ), (BVD, DRL), (BVD, KXT), (BVD, DAO), (LTU, QJZ), (LTU, KXT), (LTU, DAO), (LTU, APH), (GBC, DAO)]","{WTG: [DAO, APH],
BVD: [QJZ, DRL, KXT, DAO],
LTU: [QJZ, KXT, DAO, APH],
GBC: [DAO],
QJZ: [BVD, LTU],
DRL: [BVD],
KXT: [BVD, LTU],
DAO: [WTG, BVD, LTU, GBC],
APH: [WTG, LTU]}","Node WTG is connected to nodes DAO, APH.
Node BVD is connected to nodes QJZ, DRL, KXT, DAO.
Node LTU is connected to nodes QJZ, KXT, DAO, APH.
Node GBC is connected to node DAO.
Node QJZ is connected to nodes BVD, LTU.
Node DRL is connected to node BVD.
Node KXT is connected to nodes BVD, LTU.
Node DAO is connected to nodes WTG, BVD, LTU, GBC.
Node APH is connected to nodes WTG, LTU.","[WTG, BVD, LTU, GBC, QJZ, DRL, KXT, DAO, APH]",9,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WTG BVD LTU GBC.
Nodes set 2 contains: QJZ DRL KXT DAO APH.","[(WTG, APH), (BVD, DRL), (LTU, QJZ), (GBC, DAO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WTG. Updated matching: {DAO: WTG}.
Search from node BVD. Updated matching: {DAO: WTG, QJZ: BVD}.
Search from node LTU. Updated matching: {DAO: WTG, QJZ: LTU, DRL: BVD}.
Search from node GBC. Updated matching: {DAO: GBC, QJZ: LTU, DRL: BVD, APH: WTG}.
So the maximum matching is ",4,5,119
bipartite,"[(KHC, QTK), (KHC, YUU), (KHC, JDC), (UKT, QTK), (UKT, YUU), (WOC, FFY), (WOC, QTK), (WOC, ACP), (WQZ, LUI), (WQZ, ZMS), (WQZ, FFY), (WQZ, QTK), (WQZ, YUU), (WQZ, JDC), (QXR, SDP), (QXR, ZYT), (QXR, ACP), (QXR, KPP), (QXR, YUU)]","{KHC: [QTK, YUU, JDC],
UKT: [QTK, YUU],
WOC: [FFY, QTK, ACP],
WQZ: [LUI, ZMS, FFY, QTK, YUU, JDC],
QXR: [SDP, ZYT, ACP, KPP, YUU],
LUI: [WQZ],
ZMS: [WQZ],
SDP: [QXR],
ZYT: [QXR],
FFY: [WOC, WQZ],
QTK: [KHC, UKT, WOC, WQZ],
ACP: [WOC, QXR],
KPP: [QXR],
YUU: [KHC, UKT, WQZ, QXR],
JDC: [KHC, WQZ]}","Node KHC is connected to nodes QTK, YUU, JDC.
Node UKT is connected to nodes QTK, YUU.
Node WOC is connected to nodes FFY, QTK, ACP.
Node WQZ is connected to nodes LUI, ZMS, FFY, QTK, YUU, JDC.
Node QXR is connected to nodes SDP, ZYT, ACP, KPP, YUU.
Node LUI is connected to node WQZ.
Node ZMS is connected to node WQZ.
Node SDP is connected to node QXR.
Node ZYT is connected to node QXR.
Node FFY is connected to nodes WOC, WQZ.
Node QTK is connected to nodes KHC, UKT, WOC, WQZ.
Node ACP is connected to nodes WOC, QXR.
Node KPP is connected to node QXR.
Node YUU is connected to nodes KHC, UKT, WQZ, QXR.
Node JDC is connected to nodes KHC, WQZ.","[KHC, UKT, WOC, WQZ, QXR, LUI, ZMS, SDP, ZYT, FFY, QTK, ACP, KPP, YUU, JDC]",15,19,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: KHC UKT WOC WQZ QXR.
Nodes set 2 contains: LUI ZMS SDP ZYT FFY QTK ACP KPP YUU JDC.","[(KHC, YUU), (UKT, QTK), (WOC, FFY), (WQZ, LUI), (QXR, SDP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node KHC. Updated matching: {QTK: KHC}.
Search from node UKT. Updated matching: {QTK: UKT, YUU: KHC}.
Search from node WOC. Updated matching: {QTK: UKT, YUU: KHC, FFY: WOC}.
Search from node WQZ. Updated matching: {QTK: UKT, YUU: KHC, FFY: WOC, LUI: WQZ}.
Search from node QXR. Updated matching: {QTK: UKT, YUU: KHC, FFY: WOC, LUI: WQZ, SDP: QXR}.
So the maximum matching is ",5,10,120
bipartite,"[(NSY, LYI), (NSY, VNU), (YBA, LYI), (YBA, RHL), (YBA, OPX), (OQM, LYI), (OQM, AHK), (OQM, TTB), (VXT, TTB), (LHL, RHL), (LHL, TTB), (PKD, LYI), (PKD, YIQ)]","{NSY: [LYI, VNU],
YBA: [LYI, RHL, OPX],
OQM: [LYI, AHK, TTB],
VXT: [TTB],
LHL: [RHL, TTB],
PKD: [LYI, YIQ],
LYI: [NSY, YBA, OQM, PKD],
YIQ: [PKD],
AHK: [OQM],
RHL: [YBA, LHL],
TTB: [OQM, VXT, LHL],
OPX: [YBA],
VNU: [NSY]}","Node NSY is connected to nodes LYI, VNU.
Node YBA is connected to nodes LYI, RHL, OPX.
Node OQM is connected to nodes LYI, AHK, TTB.
Node VXT is connected to node TTB.
Node LHL is connected to nodes RHL, TTB.
Node PKD is connected to nodes LYI, YIQ.
Node LYI is connected to nodes NSY, YBA, OQM, PKD.
Node YIQ is connected to node PKD.
Node AHK is connected to node OQM.
Node RHL is connected to nodes YBA, LHL.
Node TTB is connected to nodes OQM, VXT, LHL.
Node OPX is connected to node YBA.
Node VNU is connected to node NSY.","[NSY, YBA, OQM, VXT, LHL, PKD, LYI, YIQ, AHK, RHL, TTB, OPX, VNU]",13,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NSY YBA OQM VXT LHL PKD.
Nodes set 2 contains: LYI YIQ AHK RHL TTB OPX VNU.","[(NSY, VNU), (YBA, OPX), (OQM, AHK), (VXT, TTB), (LHL, RHL), (PKD, LYI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NSY. Updated matching: {LYI: NSY}.
Search from node YBA. Updated matching: {LYI: YBA, VNU: NSY}.
Search from node OQM. Updated matching: {LYI: OQM, VNU: NSY, RHL: YBA}.
Search from node VXT. Updated matching: {LYI: OQM, VNU: NSY, RHL: YBA, TTB: VXT}.
Search from node LHL. Updated matching: {LYI: YBA, VNU: NSY, RHL: LHL, TTB: VXT, AHK: OQM}.
Search from node PKD. Updated matching: {LYI: PKD, VNU: NSY, RHL: LHL, TTB: VXT, AHK: OQM, OPX: YBA}.
So the maximum matching is ",6,7,121
bipartite,"[(WWJ, VVH), (WWJ, PWQ), (UAP, FIC), (UAP, ZWM), (UAP, PWQ), (ESY, HEV), (ESY, ZWM), (ESY, VVH), (ESY, QAL), (OQZ, HEV), (OQZ, VVH)]","{WWJ: [VVH, PWQ],
UAP: [FIC, ZWM, PWQ],
ESY: [HEV, ZWM, VVH, QAL],
OQZ: [HEV, VVH],
HEV: [ESY, OQZ],
FIC: [UAP],
ZWM: [UAP, ESY],
VVH: [WWJ, ESY, OQZ],
PWQ: [WWJ, UAP],
QAL: [ESY]}","Node WWJ is connected to nodes VVH, PWQ.
Node UAP is connected to nodes FIC, ZWM, PWQ.
Node ESY is connected to nodes HEV, ZWM, VVH, QAL.
Node OQZ is connected to nodes HEV, VVH.
Node HEV is connected to nodes ESY, OQZ.
Node FIC is connected to node UAP.
Node ZWM is connected to nodes UAP, ESY.
Node VVH is connected to nodes WWJ, ESY, OQZ.
Node PWQ is connected to nodes WWJ, UAP.
Node QAL is connected to node ESY.","[WWJ, UAP, ESY, OQZ, HEV, FIC, ZWM, VVH, PWQ, QAL]",10,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WWJ UAP ESY OQZ.
Nodes set 2 contains: HEV FIC ZWM VVH PWQ QAL.","[(WWJ, VVH), (UAP, FIC), (ESY, ZWM), (OQZ, HEV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WWJ. Updated matching: {VVH: WWJ}.
Search from node UAP. Updated matching: {VVH: WWJ, FIC: UAP}.
Search from node ESY. Updated matching: {VVH: WWJ, FIC: UAP, HEV: ESY}.
Search from node OQZ. Updated matching: {VVH: WWJ, FIC: UAP, HEV: OQZ, ZWM: ESY}.
So the maximum matching is ",4,6,122
bipartite,"[(LEQ, TFS), (LEQ, GEP), (VOQ, EOP), (VOQ, GEP), (VOQ, WYR), (VOQ, WWO), (RAI, TFS), (RAI, WWO), (FBG, TFS), (FBG, EOP), (FBG, WYR)]","{LEQ: [TFS, GEP],
VOQ: [EOP, GEP, WYR, WWO],
RAI: [TFS, WWO],
FBG: [TFS, EOP, WYR],
TFS: [LEQ, RAI, FBG],
EOP: [VOQ, FBG],
GEP: [LEQ, VOQ],
WYR: [VOQ, FBG],
WWO: [VOQ, RAI]}","Node LEQ is connected to nodes TFS, GEP.
Node VOQ is connected to nodes EOP, GEP, WYR, WWO.
Node RAI is connected to nodes TFS, WWO.
Node FBG is connected to nodes TFS, EOP, WYR.
Node TFS is connected to nodes LEQ, RAI, FBG.
Node EOP is connected to nodes VOQ, FBG.
Node GEP is connected to nodes LEQ, VOQ.
Node WYR is connected to nodes VOQ, FBG.
Node WWO is connected to nodes VOQ, RAI.","[LEQ, VOQ, RAI, FBG, TFS, EOP, GEP, WYR, WWO]",9,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LEQ VOQ RAI FBG.
Nodes set 2 contains: TFS EOP GEP WYR WWO.","[(LEQ, GEP), (VOQ, EOP), (RAI, WWO), (FBG, TFS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LEQ. Updated matching: {TFS: LEQ}.
Search from node VOQ. Updated matching: {TFS: LEQ, EOP: VOQ}.
Search from node RAI. Updated matching: {TFS: RAI, EOP: VOQ, GEP: LEQ}.
Search from node FBG. Updated matching: {TFS: FBG, EOP: VOQ, GEP: LEQ, WWO: RAI}.
So the maximum matching is ",4,5,123
bipartite,"[(DJX, VOF), (FFU, WHJ), (FFU, SES), (FFU, IPJ), (FFU, VOF), (FXL, WHJ), (FXL, SES), (FXL, APF), (FXL, VOF), (FXL, XCT)]","{DJX: [VOF],
FFU: [WHJ, SES, IPJ, VOF],
FXL: [WHJ, SES, APF, VOF, XCT],
WHJ: [FFU, FXL],
SES: [FFU, FXL],
IPJ: [FFU],
APF: [FXL],
VOF: [DJX, FFU, FXL],
XCT: [FXL]}","Node DJX is connected to node VOF.
Node FFU is connected to nodes WHJ, SES, IPJ, VOF.
Node FXL is connected to nodes WHJ, SES, APF, VOF, XCT.
Node WHJ is connected to nodes FFU, FXL.
Node SES is connected to nodes FFU, FXL.
Node IPJ is connected to node FFU.
Node APF is connected to node FXL.
Node VOF is connected to nodes DJX, FFU, FXL.
Node XCT is connected to node FXL.","[DJX, FFU, FXL, WHJ, SES, IPJ, APF, VOF, XCT]",9,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DJX FFU FXL.
Nodes set 2 contains: WHJ SES IPJ APF VOF XCT.","[(DJX, VOF), (FFU, SES), (FXL, WHJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DJX. Updated matching: {VOF: DJX}.
Search from node FFU. Updated matching: {VOF: DJX, WHJ: FFU}.
Search from node FXL. Updated matching: {VOF: DJX, WHJ: FXL, SES: FFU}.
So the maximum matching is ",3,6,124
bipartite,"[(RZG, KLY), (RZG, ISI), (RZG, DPR), (RZG, JCI), (EUY, DPR), (EUY, JCI), (NSC, KLY), (NSC, WVI), (NSC, WVA), (NSC, ISI), (NSC, JCI)]","{RZG: [KLY, ISI, DPR, JCI],
EUY: [DPR, JCI],
NSC: [KLY, WVI, WVA, ISI, JCI],
KLY: [RZG, NSC],
WVI: [NSC],
WVA: [NSC],
ISI: [RZG, NSC],
DPR: [RZG, EUY],
JCI: [RZG, EUY, NSC]}","Node RZG is connected to nodes KLY, ISI, DPR, JCI.
Node EUY is connected to nodes DPR, JCI.
Node NSC is connected to nodes KLY, WVI, WVA, ISI, JCI.
Node KLY is connected to nodes RZG, NSC.
Node WVI is connected to node NSC.
Node WVA is connected to node NSC.
Node ISI is connected to nodes RZG, NSC.
Node DPR is connected to nodes RZG, EUY.
Node JCI is connected to nodes RZG, EUY, NSC.","[RZG, EUY, NSC, KLY, WVI, WVA, ISI, DPR, JCI]",9,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RZG EUY NSC.
Nodes set 2 contains: KLY WVI WVA ISI DPR JCI.","[(RZG, ISI), (EUY, DPR), (NSC, KLY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RZG. Updated matching: {KLY: RZG}.
Search from node EUY. Updated matching: {KLY: RZG, DPR: EUY}.
Search from node NSC. Updated matching: {KLY: NSC, DPR: EUY, ISI: RZG}.
So the maximum matching is ",3,6,125
bipartite,"[(ZEE, OLY), (ZEE, SGN), (ZEE, YEW), (XIC, OLY), (XIC, YEW), (NXV, ZTT), (NXV, HFU), (NXV, OLY), (NXV, SGN), (NXV, YEW)]","{ZEE: [OLY, SGN, YEW],
XIC: [OLY, YEW],
NXV: [ZTT, HFU, OLY, SGN, YEW],
ZTT: [NXV],
HFU: [NXV],
OLY: [ZEE, XIC, NXV],
SGN: [ZEE, NXV],
YEW: [ZEE, XIC, NXV]}","Node ZEE is connected to nodes OLY, SGN, YEW.
Node XIC is connected to nodes OLY, YEW.
Node NXV is connected to nodes ZTT, HFU, OLY, SGN, YEW.
Node ZTT is connected to node NXV.
Node HFU is connected to node NXV.
Node OLY is connected to nodes ZEE, XIC, NXV.
Node SGN is connected to nodes ZEE, NXV.
Node YEW is connected to nodes ZEE, XIC, NXV.","[ZEE, XIC, NXV, ZTT, HFU, OLY, SGN, YEW]",8,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZEE XIC NXV.
Nodes set 2 contains: ZTT HFU OLY SGN YEW.","[(ZEE, SGN), (XIC, OLY), (NXV, ZTT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZEE. Updated matching: {OLY: ZEE}.
Search from node XIC. Updated matching: {OLY: XIC, SGN: ZEE}.
Search from node NXV. Updated matching: {OLY: XIC, SGN: ZEE, ZTT: NXV}.
So the maximum matching is ",3,5,126
bipartite,"[(WMI, KKT), (WMI, CQY), (WMI, KBP), (WMI, UVN), (HZF, MWL), (HZF, KKT), (HZF, OKF), (HZF, UVN), (XQQ, KBP), (JHL, MWL), (JHL, CQY), (JHL, OKF)]","{WMI: [KKT, CQY, KBP, UVN],
HZF: [MWL, KKT, OKF, UVN],
XQQ: [KBP],
JHL: [MWL, CQY, OKF],
MWL: [HZF, JHL],
KKT: [WMI, HZF],
CQY: [WMI, JHL],
OKF: [HZF, JHL],
KBP: [WMI, XQQ],
UVN: [WMI, HZF]}","Node WMI is connected to nodes KKT, CQY, KBP, UVN.
Node HZF is connected to nodes MWL, KKT, OKF, UVN.
Node XQQ is connected to node KBP.
Node JHL is connected to nodes MWL, CQY, OKF.
Node MWL is connected to nodes HZF, JHL.
Node KKT is connected to nodes WMI, HZF.
Node CQY is connected to nodes WMI, JHL.
Node OKF is connected to nodes HZF, JHL.
Node KBP is connected to nodes WMI, XQQ.
Node UVN is connected to nodes WMI, HZF.","[WMI, HZF, XQQ, JHL, MWL, KKT, CQY, OKF, KBP, UVN]",10,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WMI HZF XQQ JHL.
Nodes set 2 contains: MWL KKT CQY OKF KBP UVN.","[(WMI, CQY), (HZF, KKT), (XQQ, KBP), (JHL, MWL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WMI. Updated matching: {KKT: WMI}.
Search from node HZF. Updated matching: {KKT: WMI, MWL: HZF}.
Search from node XQQ. Updated matching: {KKT: WMI, MWL: HZF, KBP: XQQ}.
Search from node JHL. Updated matching: {KKT: HZF, MWL: JHL, KBP: XQQ, CQY: WMI}.
So the maximum matching is ",4,6,127
bipartite,"[(JBQ, RIJ), (JBQ, TON), (JBQ, XKH), (JBQ, YYJ), (JBQ, PIQ), (DWL, RIJ), (DWL, TON), (DWL, YHY), (DWL, YYJ), (QPD, RIJ), (QPD, TON), (QPD, YHY), (QPD, YYJ), (JAW, RIJ), (JAW, YHY), (JAW, YYJ), (JAW, PIQ), (JAW, FCJ), (RTL, RIJ), (RTL, TON), (RTL, TNY), (LAT, XKH), (LAT, YYJ), (LAT, PIQ)]","{JBQ: [RIJ, TON, XKH, YYJ, PIQ],
DWL: [RIJ, TON, YHY, YYJ],
QPD: [RIJ, TON, YHY, YYJ],
JAW: [RIJ, YHY, YYJ, PIQ, FCJ],
RTL: [RIJ, TON, TNY],
LAT: [XKH, YYJ, PIQ],
RIJ: [JBQ, DWL, QPD, JAW, RTL],
TON: [JBQ, DWL, QPD, RTL],
XKH: [JBQ, LAT],
YHY: [DWL, QPD, JAW],
YYJ: [JBQ, DWL, QPD, JAW, LAT],
PIQ: [JBQ, JAW, LAT],
TNY: [RTL],
FCJ: [JAW]}","Node JBQ is connected to nodes RIJ, TON, XKH, YYJ, PIQ.
Node DWL is connected to nodes RIJ, TON, YHY, YYJ.
Node QPD is connected to nodes RIJ, TON, YHY, YYJ.
Node JAW is connected to nodes RIJ, YHY, YYJ, PIQ, FCJ.
Node RTL is connected to nodes RIJ, TON, TNY.
Node LAT is connected to nodes XKH, YYJ, PIQ.
Node RIJ is connected to nodes JBQ, DWL, QPD, JAW, RTL.
Node TON is connected to nodes JBQ, DWL, QPD, RTL.
Node XKH is connected to nodes JBQ, LAT.
Node YHY is connected to nodes DWL, QPD, JAW.
Node YYJ is connected to nodes JBQ, DWL, QPD, JAW, LAT.
Node PIQ is connected to nodes JBQ, JAW, LAT.
Node TNY is connected to node RTL.
Node FCJ is connected to node JAW.","[JBQ, DWL, QPD, JAW, RTL, LAT, RIJ, TON, XKH, YHY, YYJ, PIQ, TNY, FCJ]",14,24,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JBQ DWL QPD JAW RTL LAT.
Nodes set 2 contains: RIJ TON XKH YHY YYJ PIQ TNY FCJ.","[(JBQ, RIJ), (DWL, YHY), (QPD, YYJ), (JAW, PIQ), (RTL, TON), (LAT, XKH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JBQ. Updated matching: {RIJ: JBQ}.
Search from node DWL. Updated matching: {RIJ: DWL, TON: JBQ}.
Search from node QPD. Updated matching: {RIJ: QPD, TON: DWL, XKH: JBQ}.
Search from node JAW. Updated matching: {RIJ: JAW, TON: QPD, XKH: JBQ, YHY: DWL}.
Search from node RTL. Updated matching: {RIJ: RTL, TON: DWL, XKH: JBQ, YHY: JAW, YYJ: QPD}.
Search from node LAT. Updated matching: {RIJ: JBQ, TON: RTL, XKH: LAT, YHY: DWL, YYJ: QPD, PIQ: JAW}.
So the maximum matching is ",6,8,128
bipartite,"[(FVW, ZGF), (FVW, PSM), (NCN, ZGF), (NCN, PSM), (NCN, MRJ), (PHS, OAF), (PHS, TTW), (PHS, MRJ), (MQF, TTW)]","{FVW: [ZGF, PSM],
NCN: [ZGF, PSM, MRJ],
PHS: [OAF, TTW, MRJ],
MQF: [TTW],
OAF: [PHS],
ZGF: [FVW, NCN],
PSM: [FVW, NCN],
TTW: [PHS, MQF],
MRJ: [NCN, PHS]}","Node FVW is connected to nodes ZGF, PSM.
Node NCN is connected to nodes ZGF, PSM, MRJ.
Node PHS is connected to nodes OAF, TTW, MRJ.
Node MQF is connected to node TTW.
Node OAF is connected to node PHS.
Node ZGF is connected to nodes FVW, NCN.
Node PSM is connected to nodes FVW, NCN.
Node TTW is connected to nodes PHS, MQF.
Node MRJ is connected to nodes NCN, PHS.","[FVW, NCN, PHS, MQF, OAF, ZGF, PSM, TTW, MRJ]",9,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FVW NCN PHS MQF.
Nodes set 2 contains: OAF ZGF PSM TTW MRJ.","[(FVW, PSM), (NCN, ZGF), (PHS, OAF), (MQF, TTW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FVW. Updated matching: {ZGF: FVW}.
Search from node NCN. Updated matching: {ZGF: NCN, PSM: FVW}.
Search from node PHS. Updated matching: {ZGF: NCN, PSM: FVW, OAF: PHS}.
Search from node MQF. Updated matching: {ZGF: NCN, PSM: FVW, OAF: PHS, TTW: MQF}.
So the maximum matching is ",4,5,129
bipartite,"[(CDR, HOC), (CDR, FDD), (RNE, JMB), (RNE, CGS), (RNE, ELU), (RNE, FDD), (WSP, HOC), (WSP, JMB), (WSP, CGS), (WSP, ELU), (ZFK, NHC), (ZFK, FDD), (BJO, CGS)]","{CDR: [HOC, FDD],
RNE: [JMB, CGS, ELU, FDD],
WSP: [HOC, JMB, CGS, ELU],
ZFK: [NHC, FDD],
BJO: [CGS],
HOC: [CDR, WSP],
NHC: [ZFK],
JMB: [RNE, WSP],
CGS: [RNE, WSP, BJO],
ELU: [RNE, WSP],
FDD: [CDR, RNE, ZFK]}","Node CDR is connected to nodes HOC, FDD.
Node RNE is connected to nodes JMB, CGS, ELU, FDD.
Node WSP is connected to nodes HOC, JMB, CGS, ELU.
Node ZFK is connected to nodes NHC, FDD.
Node BJO is connected to node CGS.
Node HOC is connected to nodes CDR, WSP.
Node NHC is connected to node ZFK.
Node JMB is connected to nodes RNE, WSP.
Node CGS is connected to nodes RNE, WSP, BJO.
Node ELU is connected to nodes RNE, WSP.
Node FDD is connected to nodes CDR, RNE, ZFK.","[CDR, RNE, WSP, ZFK, BJO, HOC, NHC, JMB, CGS, ELU, FDD]",11,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CDR RNE WSP ZFK BJO.
Nodes set 2 contains: HOC NHC JMB CGS ELU FDD.","[(CDR, FDD), (RNE, JMB), (WSP, HOC), (ZFK, NHC), (BJO, CGS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CDR. Updated matching: {HOC: CDR}.
Search from node RNE. Updated matching: {HOC: CDR, JMB: RNE}.
Search from node WSP. Updated matching: {HOC: WSP, JMB: RNE, FDD: CDR}.
Search from node ZFK. Updated matching: {HOC: WSP, JMB: RNE, FDD: CDR, NHC: ZFK}.
Search from node BJO. Updated matching: {HOC: WSP, JMB: RNE, FDD: CDR, NHC: ZFK, CGS: BJO}.
So the maximum matching is ",5,6,130
bipartite,"[(BDX, UGW), (BDX, JWT), (BDX, AYL), (PTY, PLF), (PTY, MNS), (PTY, MXS), (PTY, UGW), (PTY, TOI), (PTY, DYB), (PTY, DQY), (UEG, UGW), (UEG, JWT), (PAW, MNS), (PAW, UGW), (VLG, PLF), (VLG, MXS)]","{BDX: [UGW, JWT, AYL],
PTY: [PLF, MNS, MXS, UGW, TOI, DYB, DQY],
UEG: [UGW, JWT],
PAW: [MNS, UGW],
VLG: [PLF, MXS],
PLF: [PTY, VLG],
MNS: [PTY, PAW],
MXS: [PTY, VLG],
UGW: [BDX, PTY, UEG, PAW],
TOI: [PTY],
JWT: [BDX, UEG],
AYL: [BDX],
DYB: [PTY],
DQY: [PTY]}","Node BDX is connected to nodes UGW, JWT, AYL.
Node PTY is connected to nodes PLF, MNS, MXS, UGW, TOI, DYB, DQY.
Node UEG is connected to nodes UGW, JWT.
Node PAW is connected to nodes MNS, UGW.
Node VLG is connected to nodes PLF, MXS.
Node PLF is connected to nodes PTY, VLG.
Node MNS is connected to nodes PTY, PAW.
Node MXS is connected to nodes PTY, VLG.
Node UGW is connected to nodes BDX, PTY, UEG, PAW.
Node TOI is connected to node PTY.
Node JWT is connected to nodes BDX, UEG.
Node AYL is connected to node BDX.
Node DYB is connected to node PTY.
Node DQY is connected to node PTY.","[BDX, PTY, UEG, PAW, VLG, PLF, MNS, MXS, UGW, TOI, JWT, AYL, DYB, DQY]",14,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BDX PTY UEG PAW VLG.
Nodes set 2 contains: PLF MNS MXS UGW TOI JWT AYL DYB DQY.","[(BDX, AYL), (PTY, MNS), (UEG, JWT), (PAW, UGW), (VLG, PLF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BDX. Updated matching: {UGW: BDX}.
Search from node PTY. Updated matching: {UGW: BDX, PLF: PTY}.
Search from node UEG. Updated matching: {UGW: UEG, PLF: PTY, JWT: BDX}.
Search from node PAW. Updated matching: {UGW: UEG, PLF: PTY, JWT: BDX, MNS: PAW}.
Search from node VLG. Updated matching: {UGW: PAW, PLF: VLG, JWT: UEG, MNS: PTY, AYL: BDX}.
So the maximum matching is ",5,9,131
bipartite,"[(IWK, GZI), (QYQ, FWL), (WXY, NNL), (WXY, WFB), (ZST, DUE), (ZST, NNL), (ZST, WFB), (KHX, BXS), (KHX, NNL), (JGW, BXS), (JGW, GZI), (JGW, FWL), (JGW, NNL), (JGW, WFB), (JGW, CIR)]","{IWK: [GZI],
QYQ: [FWL],
WXY: [NNL, WFB],
ZST: [DUE, NNL, WFB],
KHX: [BXS, NNL],
JGW: [BXS, GZI, FWL, NNL, WFB, CIR],
BXS: [KHX, JGW],
GZI: [IWK, JGW],
DUE: [ZST],
FWL: [QYQ, JGW],
NNL: [WXY, ZST, KHX, JGW],
WFB: [WXY, ZST, JGW],
CIR: [JGW]}","Node IWK is connected to node GZI.
Node QYQ is connected to node FWL.
Node WXY is connected to nodes NNL, WFB.
Node ZST is connected to nodes DUE, NNL, WFB.
Node KHX is connected to nodes BXS, NNL.
Node JGW is connected to nodes BXS, GZI, FWL, NNL, WFB, CIR.
Node BXS is connected to nodes KHX, JGW.
Node GZI is connected to nodes IWK, JGW.
Node DUE is connected to node ZST.
Node FWL is connected to nodes QYQ, JGW.
Node NNL is connected to nodes WXY, ZST, KHX, JGW.
Node WFB is connected to nodes WXY, ZST, JGW.
Node CIR is connected to node JGW.","[IWK, QYQ, WXY, ZST, KHX, JGW, BXS, GZI, DUE, FWL, NNL, WFB, CIR]",13,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IWK QYQ WXY ZST KHX JGW.
Nodes set 2 contains: BXS GZI DUE FWL NNL WFB CIR.","[(IWK, GZI), (QYQ, FWL), (WXY, WFB), (ZST, DUE), (KHX, NNL), (JGW, BXS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IWK. Updated matching: {GZI: IWK}.
Search from node QYQ. Updated matching: {GZI: IWK, FWL: QYQ}.
Search from node WXY. Updated matching: {GZI: IWK, FWL: QYQ, NNL: WXY}.
Search from node ZST. Updated matching: {GZI: IWK, FWL: QYQ, NNL: WXY, DUE: ZST}.
Search from node KHX. Updated matching: {GZI: IWK, FWL: QYQ, NNL: WXY, DUE: ZST, BXS: KHX}.
Search from node JGW. Updated matching: {GZI: IWK, FWL: QYQ, NNL: KHX, DUE: ZST, BXS: JGW, WFB: WXY}.
So the maximum matching is ",6,7,132
bipartite,"[(HYL, RJC), (HYL, NWP), (HYL, SHV), (XLU, RJC), (XLU, QME), (OTY, NKN), (OTY, NWP), (RDD, NWP), (DAV, RJC), (DAV, IFJ), (DAV, GTU), (AGL, GOR), (AGL, NWP), (AGL, SHV)]","{HYL: [RJC, NWP, SHV],
XLU: [RJC, QME],
OTY: [NKN, NWP],
RDD: [NWP],
DAV: [RJC, IFJ, GTU],
AGL: [GOR, NWP, SHV],
NKN: [OTY],
RJC: [HYL, XLU, DAV],
QME: [XLU],
GOR: [AGL],
NWP: [HYL, OTY, RDD, AGL],
IFJ: [DAV],
GTU: [DAV],
SHV: [HYL, AGL]}","Node HYL is connected to nodes RJC, NWP, SHV.
Node XLU is connected to nodes RJC, QME.
Node OTY is connected to nodes NKN, NWP.
Node RDD is connected to node NWP.
Node DAV is connected to nodes RJC, IFJ, GTU.
Node AGL is connected to nodes GOR, NWP, SHV.
Node NKN is connected to node OTY.
Node RJC is connected to nodes HYL, XLU, DAV.
Node QME is connected to node XLU.
Node GOR is connected to node AGL.
Node NWP is connected to nodes HYL, OTY, RDD, AGL.
Node IFJ is connected to node DAV.
Node GTU is connected to node DAV.
Node SHV is connected to nodes HYL, AGL.","[HYL, XLU, OTY, RDD, DAV, AGL, NKN, RJC, QME, GOR, NWP, IFJ, GTU, SHV]",14,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HYL XLU OTY RDD DAV AGL.
Nodes set 2 contains: NKN RJC QME GOR NWP IFJ GTU SHV.","[(HYL, SHV), (XLU, QME), (OTY, NKN), (RDD, NWP), (DAV, RJC), (AGL, GOR)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HYL. Updated matching: {RJC: HYL}.
Search from node XLU. Updated matching: {RJC: XLU, NWP: HYL}.
Search from node OTY. Updated matching: {RJC: XLU, NWP: HYL, NKN: OTY}.
Search from node RDD. Updated matching: {RJC: HYL, NWP: RDD, NKN: OTY, QME: XLU}.
Search from node DAV. Updated matching: {RJC: DAV, NWP: RDD, NKN: OTY, QME: XLU, SHV: HYL}.
Search from node AGL. Updated matching: {RJC: DAV, NWP: RDD, NKN: OTY, QME: XLU, SHV: HYL, GOR: AGL}.
So the maximum matching is ",6,8,133
bipartite,"[(TCM, OEK), (TCM, ULX), (TCM, CBT), (TCM, PWS), (TCM, QSH), (JIS, BSJ), (JIS, LUU), (JIS, CHM), (JIS, QSH), (CAD, OEK), (CAD, ULX), (CAD, CBT), (CAD, NWG), (CAD, LUU), (CAD, QSH), (CAD, CHK), (IOJ, CBT), (IOJ, NWG), (IOJ, LUU), (IOJ, CHM)]","{TCM: [OEK, ULX, CBT, PWS, QSH],
JIS: [BSJ, LUU, CHM, QSH],
CAD: [OEK, ULX, CBT, NWG, LUU, QSH, CHK],
IOJ: [CBT, NWG, LUU, CHM],
BSJ: [JIS],
OEK: [TCM, CAD],
ULX: [TCM, CAD],
CBT: [TCM, CAD, IOJ],
PWS: [TCM],
NWG: [CAD, IOJ],
LUU: [JIS, CAD, IOJ],
CHM: [JIS, IOJ],
QSH: [TCM, JIS, CAD],
CHK: [CAD]}","Node TCM is connected to nodes OEK, ULX, CBT, PWS, QSH.
Node JIS is connected to nodes BSJ, LUU, CHM, QSH.
Node CAD is connected to nodes OEK, ULX, CBT, NWG, LUU, QSH, CHK.
Node IOJ is connected to nodes CBT, NWG, LUU, CHM.
Node BSJ is connected to node JIS.
Node OEK is connected to nodes TCM, CAD.
Node ULX is connected to nodes TCM, CAD.
Node CBT is connected to nodes TCM, CAD, IOJ.
Node PWS is connected to node TCM.
Node NWG is connected to nodes CAD, IOJ.
Node LUU is connected to nodes JIS, CAD, IOJ.
Node CHM is connected to nodes JIS, IOJ.
Node QSH is connected to nodes TCM, JIS, CAD.
Node CHK is connected to node CAD.","[TCM, JIS, CAD, IOJ, BSJ, OEK, ULX, CBT, PWS, NWG, LUU, CHM, QSH, CHK]",14,20,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TCM JIS CAD IOJ.
Nodes set 2 contains: BSJ OEK ULX CBT PWS NWG LUU CHM QSH CHK.","[(TCM, ULX), (JIS, BSJ), (CAD, OEK), (IOJ, CBT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TCM. Updated matching: {OEK: TCM}.
Search from node JIS. Updated matching: {OEK: TCM, BSJ: JIS}.
Search from node CAD. Updated matching: {OEK: CAD, BSJ: JIS, ULX: TCM}.
Search from node IOJ. Updated matching: {OEK: CAD, BSJ: JIS, ULX: TCM, CBT: IOJ}.
So the maximum matching is ",4,10,134
bipartite,"[(OAR, QZC), (OAR, UHR), (OAR, HYV), (OAR, OWX), (OAR, GEY), (SAW, EEJ), (SAW, UHR), (SAW, HYV), (SAW, JMX), (JTD, EEJ), (JTD, HYV), (JTD, JMX), (YNK, EEJ), (YNK, QZC), (YNK, UHR), (YNK, HYV), (YNK, OWX), (NHN, QZC), (NHN, UHR), (NHN, JMX), (NHN, EKK), (NHN, GEY), (NHN, EYV)]","{OAR: [QZC, UHR, HYV, OWX, GEY],
SAW: [EEJ, UHR, HYV, JMX],
JTD: [EEJ, HYV, JMX],
YNK: [EEJ, QZC, UHR, HYV, OWX],
NHN: [QZC, UHR, JMX, EKK, GEY, EYV],
EEJ: [SAW, JTD, YNK],
QZC: [OAR, YNK, NHN],
UHR: [OAR, SAW, YNK, NHN],
HYV: [OAR, SAW, JTD, YNK],
OWX: [OAR, YNK],
JMX: [SAW, JTD, NHN],
EKK: [NHN],
GEY: [OAR, NHN],
EYV: [NHN]}","Node OAR is connected to nodes QZC, UHR, HYV, OWX, GEY.
Node SAW is connected to nodes EEJ, UHR, HYV, JMX.
Node JTD is connected to nodes EEJ, HYV, JMX.
Node YNK is connected to nodes EEJ, QZC, UHR, HYV, OWX.
Node NHN is connected to nodes QZC, UHR, JMX, EKK, GEY, EYV.
Node EEJ is connected to nodes SAW, JTD, YNK.
Node QZC is connected to nodes OAR, YNK, NHN.
Node UHR is connected to nodes OAR, SAW, YNK, NHN.
Node HYV is connected to nodes OAR, SAW, JTD, YNK.
Node OWX is connected to nodes OAR, YNK.
Node JMX is connected to nodes SAW, JTD, NHN.
Node EKK is connected to node NHN.
Node GEY is connected to nodes OAR, NHN.
Node EYV is connected to node NHN.","[OAR, SAW, JTD, YNK, NHN, EEJ, QZC, UHR, HYV, OWX, JMX, EKK, GEY, EYV]",14,23,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OAR SAW JTD YNK NHN.
Nodes set 2 contains: EEJ QZC UHR HYV OWX JMX EKK GEY EYV.","[(OAR, UHR), (SAW, EEJ), (JTD, JMX), (YNK, HYV), (NHN, QZC)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OAR. Updated matching: {QZC: OAR}.
Search from node SAW. Updated matching: {QZC: OAR, EEJ: SAW}.
Search from node JTD. Updated matching: {QZC: OAR, EEJ: JTD, UHR: SAW}.
Search from node YNK. Updated matching: {QZC: OAR, EEJ: YNK, UHR: SAW, HYV: JTD}.
Search from node NHN. Updated matching: {QZC: NHN, EEJ: SAW, UHR: OAR, HYV: YNK, JMX: JTD}.
So the maximum matching is ",5,9,135
bipartite,"[(UOH, ZJN), (LEY, YKA), (LEY, XKH), (LEY, MBX), (UKT, ECT), (UKT, MBX), (UKT, ZJN), (UKT, LNK)]","{UOH: [ZJN],
LEY: [YKA, XKH, MBX],
UKT: [ECT, MBX, ZJN, LNK],
ECT: [UKT],
YKA: [LEY],
XKH: [LEY],
MBX: [LEY, UKT],
ZJN: [UOH, UKT],
LNK: [UKT]}","Node UOH is connected to node ZJN.
Node LEY is connected to nodes YKA, XKH, MBX.
Node UKT is connected to nodes ECT, MBX, ZJN, LNK.
Node ECT is connected to node UKT.
Node YKA is connected to node LEY.
Node XKH is connected to node LEY.
Node MBX is connected to nodes LEY, UKT.
Node ZJN is connected to nodes UOH, UKT.
Node LNK is connected to node UKT.","[UOH, LEY, UKT, ECT, YKA, XKH, MBX, ZJN, LNK]",9,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UOH LEY UKT.
Nodes set 2 contains: ECT YKA XKH MBX ZJN LNK.","[(UOH, ZJN), (LEY, YKA), (UKT, ECT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UOH. Updated matching: {ZJN: UOH}.
Search from node LEY. Updated matching: {ZJN: UOH, YKA: LEY}.
Search from node UKT. Updated matching: {ZJN: UOH, YKA: LEY, ECT: UKT}.
So the maximum matching is ",3,6,136
bipartite,"[(ZNJ, VBO), (ZNJ, KZK), (ZNJ, TFT), (ZNJ, DAO), (WXA, KZK), (WXA, TFT), (NKI, VBO), (NKI, TFT), (NKI, CHP)]","{ZNJ: [VBO, KZK, TFT, DAO],
WXA: [KZK, TFT],
NKI: [VBO, TFT, CHP],
VBO: [ZNJ, NKI],
KZK: [ZNJ, WXA],
TFT: [ZNJ, WXA, NKI],
DAO: [ZNJ],
CHP: [NKI]}","Node ZNJ is connected to nodes VBO, KZK, TFT, DAO.
Node WXA is connected to nodes KZK, TFT.
Node NKI is connected to nodes VBO, TFT, CHP.
Node VBO is connected to nodes ZNJ, NKI.
Node KZK is connected to nodes ZNJ, WXA.
Node TFT is connected to nodes ZNJ, WXA, NKI.
Node DAO is connected to node ZNJ.
Node CHP is connected to node NKI.","[ZNJ, WXA, NKI, VBO, KZK, TFT, DAO, CHP]",8,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZNJ WXA NKI.
Nodes set 2 contains: VBO KZK TFT DAO CHP.","[(ZNJ, KZK), (WXA, TFT), (NKI, VBO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZNJ. Updated matching: {VBO: ZNJ}.
Search from node WXA. Updated matching: {VBO: ZNJ, KZK: WXA}.
Search from node NKI. Updated matching: {VBO: NKI, KZK: ZNJ, TFT: WXA}.
So the maximum matching is ",3,5,137
bipartite,"[(APR, IPY), (APR, CAB), (APR, YTF), (OEJ, FGP), (OEJ, GMT), (OEJ, XMJ), (IXY, DEO), (IXY, XMJ), (KTD, CAB), (KTD, VDH), (KTD, GMT)]","{APR: [IPY, CAB, YTF],
OEJ: [FGP, GMT, XMJ],
IXY: [DEO, XMJ],
KTD: [CAB, VDH, GMT],
IPY: [APR],
CAB: [APR, KTD],
FGP: [OEJ],
DEO: [IXY],
VDH: [KTD],
GMT: [OEJ, KTD],
XMJ: [OEJ, IXY],
YTF: [APR]}","Node APR is connected to nodes IPY, CAB, YTF.
Node OEJ is connected to nodes FGP, GMT, XMJ.
Node IXY is connected to nodes DEO, XMJ.
Node KTD is connected to nodes CAB, VDH, GMT.
Node IPY is connected to node APR.
Node CAB is connected to nodes APR, KTD.
Node FGP is connected to node OEJ.
Node DEO is connected to node IXY.
Node VDH is connected to node KTD.
Node GMT is connected to nodes OEJ, KTD.
Node XMJ is connected to nodes OEJ, IXY.
Node YTF is connected to node APR.","[APR, OEJ, IXY, KTD, IPY, CAB, FGP, DEO, VDH, GMT, XMJ, YTF]",12,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: APR OEJ IXY KTD.
Nodes set 2 contains: IPY CAB FGP DEO VDH GMT XMJ YTF.","[(APR, IPY), (OEJ, FGP), (IXY, DEO), (KTD, CAB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node APR. Updated matching: {IPY: APR}.
Search from node OEJ. Updated matching: {IPY: APR, FGP: OEJ}.
Search from node IXY. Updated matching: {IPY: APR, FGP: OEJ, DEO: IXY}.
Search from node KTD. Updated matching: {IPY: APR, FGP: OEJ, DEO: IXY, CAB: KTD}.
So the maximum matching is ",4,8,138
bipartite,"[(XLZ, TLC), (XLZ, OCN), (XLZ, HMW), (ZKK, SLJ), (ZKK, HMW), (ZKK, RZE), (HHH, TLC), (HHH, IUX), (HHH, OCN)]","{XLZ: [TLC, OCN, HMW],
ZKK: [SLJ, HMW, RZE],
HHH: [TLC, IUX, OCN],
TLC: [XLZ, HHH],
SLJ: [ZKK],
IUX: [HHH],
OCN: [XLZ, HHH],
HMW: [XLZ, ZKK],
RZE: [ZKK]}","Node XLZ is connected to nodes TLC, OCN, HMW.
Node ZKK is connected to nodes SLJ, HMW, RZE.
Node HHH is connected to nodes TLC, IUX, OCN.
Node TLC is connected to nodes XLZ, HHH.
Node SLJ is connected to node ZKK.
Node IUX is connected to node HHH.
Node OCN is connected to nodes XLZ, HHH.
Node HMW is connected to nodes XLZ, ZKK.
Node RZE is connected to node ZKK.","[XLZ, ZKK, HHH, TLC, SLJ, IUX, OCN, HMW, RZE]",9,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XLZ ZKK HHH.
Nodes set 2 contains: TLC SLJ IUX OCN HMW RZE.","[(XLZ, OCN), (ZKK, SLJ), (HHH, TLC)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XLZ. Updated matching: {TLC: XLZ}.
Search from node ZKK. Updated matching: {TLC: XLZ, SLJ: ZKK}.
Search from node HHH. Updated matching: {TLC: HHH, SLJ: ZKK, OCN: XLZ}.
So the maximum matching is ",3,6,139
bipartite,"[(ZKR, XUH), (ZKR, PWW), (ZKR, RGK), (ZKR, EZG), (ZKR, AAG), (FJO, BSG), (FJO, RGK), (FJO, KKF), (FJO, RNU), (LAT, XUH), (LAT, RGK), (LAT, KKF), (BVJ, EZL), (BVJ, RGK), (BVJ, AAG), (BVJ, RNU), (BVJ, OSH)]","{ZKR: [XUH, PWW, RGK, EZG, AAG],
FJO: [BSG, RGK, KKF, RNU],
LAT: [XUH, RGK, KKF],
BVJ: [EZL, RGK, AAG, RNU, OSH],
EZL: [BVJ],
BSG: [FJO],
XUH: [ZKR, LAT],
PWW: [ZKR],
RGK: [ZKR, FJO, LAT, BVJ],
EZG: [ZKR],
KKF: [FJO, LAT],
AAG: [ZKR, BVJ],
RNU: [FJO, BVJ],
OSH: [BVJ]}","Node ZKR is connected to nodes XUH, PWW, RGK, EZG, AAG.
Node FJO is connected to nodes BSG, RGK, KKF, RNU.
Node LAT is connected to nodes XUH, RGK, KKF.
Node BVJ is connected to nodes EZL, RGK, AAG, RNU, OSH.
Node EZL is connected to node BVJ.
Node BSG is connected to node FJO.
Node XUH is connected to nodes ZKR, LAT.
Node PWW is connected to node ZKR.
Node RGK is connected to nodes ZKR, FJO, LAT, BVJ.
Node EZG is connected to node ZKR.
Node KKF is connected to nodes FJO, LAT.
Node AAG is connected to nodes ZKR, BVJ.
Node RNU is connected to nodes FJO, BVJ.
Node OSH is connected to node BVJ.","[ZKR, FJO, LAT, BVJ, EZL, BSG, XUH, PWW, RGK, EZG, KKF, AAG, RNU, OSH]",14,17,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZKR FJO LAT BVJ.
Nodes set 2 contains: EZL BSG XUH PWW RGK EZG KKF AAG RNU OSH.","[(ZKR, PWW), (FJO, BSG), (LAT, XUH), (BVJ, EZL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZKR. Updated matching: {XUH: ZKR}.
Search from node FJO. Updated matching: {XUH: ZKR, BSG: FJO}.
Search from node LAT. Updated matching: {XUH: LAT, BSG: FJO, PWW: ZKR}.
Search from node BVJ. Updated matching: {XUH: LAT, BSG: FJO, PWW: ZKR, EZL: BVJ}.
So the maximum matching is ",4,10,140
bipartite,"[(HMJ, PYT), (HMJ, NFM), (HMJ, BZW), (BCV, BZW), (BCV, KTU), (BCV, GCV), (BBX, VEK), (BBX, PYT), (BBX, GCV)]","{HMJ: [PYT, NFM, BZW],
BCV: [BZW, KTU, GCV],
BBX: [VEK, PYT, GCV],
VEK: [BBX],
PYT: [HMJ, BBX],
NFM: [HMJ],
BZW: [HMJ, BCV],
KTU: [BCV],
GCV: [BCV, BBX]}","Node HMJ is connected to nodes PYT, NFM, BZW.
Node BCV is connected to nodes BZW, KTU, GCV.
Node BBX is connected to nodes VEK, PYT, GCV.
Node VEK is connected to node BBX.
Node PYT is connected to nodes HMJ, BBX.
Node NFM is connected to node HMJ.
Node BZW is connected to nodes HMJ, BCV.
Node KTU is connected to node BCV.
Node GCV is connected to nodes BCV, BBX.","[HMJ, BCV, BBX, VEK, PYT, NFM, BZW, KTU, GCV]",9,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HMJ BCV BBX.
Nodes set 2 contains: VEK PYT NFM BZW KTU GCV.","[(HMJ, PYT), (BCV, BZW), (BBX, VEK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HMJ. Updated matching: {PYT: HMJ}.
Search from node BCV. Updated matching: {PYT: HMJ, BZW: BCV}.
Search from node BBX. Updated matching: {PYT: HMJ, BZW: BCV, VEK: BBX}.
So the maximum matching is ",3,6,141
bipartite,"[(CRD, AXT), (CRD, UBP), (CRD, JEW), (STF, AXT), (STF, UBP), (STF, LJV), (STF, ENE), (STF, RAO), (STF, ENY), (EWI, UZM), (EWI, LJV), (EWI, ENE)]","{CRD: [AXT, UBP, JEW],
STF: [AXT, UBP, LJV, ENE, RAO, ENY],
EWI: [UZM, LJV, ENE],
AXT: [CRD, STF],
UBP: [CRD, STF],
UZM: [EWI],
LJV: [STF, EWI],
ENE: [STF, EWI],
RAO: [STF],
JEW: [CRD],
ENY: [STF]}","Node CRD is connected to nodes AXT, UBP, JEW.
Node STF is connected to nodes AXT, UBP, LJV, ENE, RAO, ENY.
Node EWI is connected to nodes UZM, LJV, ENE.
Node AXT is connected to nodes CRD, STF.
Node UBP is connected to nodes CRD, STF.
Node UZM is connected to node EWI.
Node LJV is connected to nodes STF, EWI.
Node ENE is connected to nodes STF, EWI.
Node RAO is connected to node STF.
Node JEW is connected to node CRD.
Node ENY is connected to node STF.","[CRD, STF, EWI, AXT, UBP, UZM, LJV, ENE, RAO, JEW, ENY]",11,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CRD STF EWI.
Nodes set 2 contains: AXT UBP UZM LJV ENE RAO JEW ENY.","[(CRD, UBP), (STF, AXT), (EWI, UZM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CRD. Updated matching: {AXT: CRD}.
Search from node STF. Updated matching: {AXT: STF, UBP: CRD}.
Search from node EWI. Updated matching: {AXT: STF, UBP: CRD, UZM: EWI}.
So the maximum matching is ",3,8,142
bipartite,"[(IGC, ULJ), (PIR, ULJ), (PIR, ZWV), (PIR, VWX), (PIR, CDX), (PIR, WKL), (PIR, IKX), (PIR, FDF), (PIR, YSB), (LBE, VWX), (LBE, IKX)]","{IGC: [ULJ],
PIR: [ULJ, ZWV, VWX, CDX, WKL, IKX, FDF, YSB],
LBE: [VWX, IKX],
ULJ: [IGC, PIR],
ZWV: [PIR],
VWX: [PIR, LBE],
CDX: [PIR],
WKL: [PIR],
IKX: [PIR, LBE],
FDF: [PIR],
YSB: [PIR]}","Node IGC is connected to node ULJ.
Node PIR is connected to nodes ULJ, ZWV, VWX, CDX, WKL, IKX, FDF, YSB.
Node LBE is connected to nodes VWX, IKX.
Node ULJ is connected to nodes IGC, PIR.
Node ZWV is connected to node PIR.
Node VWX is connected to nodes PIR, LBE.
Node CDX is connected to node PIR.
Node WKL is connected to node PIR.
Node IKX is connected to nodes PIR, LBE.
Node FDF is connected to node PIR.
Node YSB is connected to node PIR.","[IGC, PIR, LBE, ULJ, ZWV, VWX, CDX, WKL, IKX, FDF, YSB]",11,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IGC PIR LBE.
Nodes set 2 contains: ULJ ZWV VWX CDX WKL IKX FDF YSB.","[(IGC, ULJ), (PIR, ZWV), (LBE, VWX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IGC. Updated matching: {ULJ: IGC}.
Search from node PIR. Updated matching: {ULJ: IGC, ZWV: PIR}.
Search from node LBE. Updated matching: {ULJ: IGC, ZWV: PIR, VWX: LBE}.
So the maximum matching is ",3,8,143
bipartite,"[(HZC, JJK), (HZC, AWZ), (HZC, MNW), (HZC, YFZ), (HZC, RGY), (HZC, GWG), (URK, RVR), (URK, QUJ), (URK, YFZ), (WSA, YFZ), (WSA, RGY), (WSA, GWG), (WSA, BJP), (SZS, MNW), (SZS, YFZ), (SZS, RGY), (SZS, GWG)]","{HZC: [JJK, AWZ, MNW, YFZ, RGY, GWG],
URK: [RVR, QUJ, YFZ],
WSA: [YFZ, RGY, GWG, BJP],
SZS: [MNW, YFZ, RGY, GWG],
JJK: [HZC],
RVR: [URK],
AWZ: [HZC],
MNW: [HZC, SZS],
QUJ: [URK],
YFZ: [HZC, URK, WSA, SZS],
RGY: [HZC, WSA, SZS],
GWG: [HZC, WSA, SZS],
BJP: [WSA]}","Node HZC is connected to nodes JJK, AWZ, MNW, YFZ, RGY, GWG.
Node URK is connected to nodes RVR, QUJ, YFZ.
Node WSA is connected to nodes YFZ, RGY, GWG, BJP.
Node SZS is connected to nodes MNW, YFZ, RGY, GWG.
Node JJK is connected to node HZC.
Node RVR is connected to node URK.
Node AWZ is connected to node HZC.
Node MNW is connected to nodes HZC, SZS.
Node QUJ is connected to node URK.
Node YFZ is connected to nodes HZC, URK, WSA, SZS.
Node RGY is connected to nodes HZC, WSA, SZS.
Node GWG is connected to nodes HZC, WSA, SZS.
Node BJP is connected to node WSA.","[HZC, URK, WSA, SZS, JJK, RVR, AWZ, MNW, QUJ, YFZ, RGY, GWG, BJP]",13,17,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HZC URK WSA SZS.
Nodes set 2 contains: JJK RVR AWZ MNW QUJ YFZ RGY GWG BJP.","[(HZC, JJK), (URK, RVR), (WSA, YFZ), (SZS, MNW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HZC. Updated matching: {JJK: HZC}.
Search from node URK. Updated matching: {JJK: HZC, RVR: URK}.
Search from node WSA. Updated matching: {JJK: HZC, RVR: URK, YFZ: WSA}.
Search from node SZS. Updated matching: {JJK: HZC, RVR: URK, YFZ: WSA, MNW: SZS}.
So the maximum matching is ",4,9,144
bipartite,"[(SMI, JQL), (WPN, ZOB), (WPN, CAS), (WPN, YCZ), (XNI, ZOB), (XNI, HNI), (TGM, ZOB), (TDY, KQP), (TDY, HNI), (TDY, BBS), (TDY, RKP), (AFV, KQP), (BMP, CAS), (BMP, JQL)]","{SMI: [JQL],
WPN: [ZOB, CAS, YCZ],
XNI: [ZOB, HNI],
TGM: [ZOB],
TDY: [KQP, HNI, BBS, RKP],
AFV: [KQP],
BMP: [CAS, JQL],
ZOB: [WPN, XNI, TGM],
KQP: [TDY, AFV],
HNI: [XNI, TDY],
BBS: [TDY],
CAS: [WPN, BMP],
JQL: [SMI, BMP],
RKP: [TDY],
YCZ: [WPN]}","Node SMI is connected to node JQL.
Node WPN is connected to nodes ZOB, CAS, YCZ.
Node XNI is connected to nodes ZOB, HNI.
Node TGM is connected to node ZOB.
Node TDY is connected to nodes KQP, HNI, BBS, RKP.
Node AFV is connected to node KQP.
Node BMP is connected to nodes CAS, JQL.
Node ZOB is connected to nodes WPN, XNI, TGM.
Node KQP is connected to nodes TDY, AFV.
Node HNI is connected to nodes XNI, TDY.
Node BBS is connected to node TDY.
Node CAS is connected to nodes WPN, BMP.
Node JQL is connected to nodes SMI, BMP.
Node RKP is connected to node TDY.
Node YCZ is connected to node WPN.","[SMI, WPN, XNI, TGM, TDY, AFV, BMP, ZOB, KQP, HNI, BBS, CAS, JQL, RKP, YCZ]",15,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SMI WPN XNI TGM TDY AFV BMP.
Nodes set 2 contains: ZOB KQP HNI BBS CAS JQL RKP YCZ.","[(SMI, JQL), (WPN, YCZ), (XNI, HNI), (TGM, ZOB), (TDY, BBS), (AFV, KQP), (BMP, CAS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SMI. Updated matching: {JQL: SMI}.
Search from node WPN. Updated matching: {JQL: SMI, ZOB: WPN}.
Search from node XNI. Updated matching: {JQL: SMI, ZOB: XNI, CAS: WPN}.
Search from node TGM. Updated matching: {JQL: SMI, ZOB: TGM, CAS: WPN, HNI: XNI}.
Search from node TDY. Updated matching: {JQL: SMI, ZOB: TGM, CAS: WPN, HNI: XNI, KQP: TDY}.
Search from node AFV. Updated matching: {JQL: SMI, ZOB: TGM, CAS: WPN, HNI: XNI, KQP: AFV, BBS: TDY}.
Search from node BMP. Updated matching: {JQL: SMI, ZOB: TGM, CAS: BMP, HNI: XNI, KQP: AFV, BBS: TDY, YCZ: WPN}.
So the maximum matching is ",7,8,145
bipartite,"[(SHS, CBN), (SHS, BHI), (SHS, VVI), (GCC, CBN), (GCC, BHI), (GCC, VVI), (FRC, LHU), (FRC, QDV), (FRC, JFN), (FRC, MLZ), (WLS, CBN), (WLS, UZZ), (WLS, QDV), (WLS, JFN), (WLS, MLZ)]","{SHS: [CBN, BHI, VVI],
GCC: [CBN, BHI, VVI],
FRC: [LHU, QDV, JFN, MLZ],
WLS: [CBN, UZZ, QDV, JFN, MLZ],
CBN: [SHS, GCC, WLS],
BHI: [SHS, GCC],
VVI: [SHS, GCC],
UZZ: [WLS],
LHU: [FRC],
QDV: [FRC, WLS],
JFN: [FRC, WLS],
MLZ: [FRC, WLS]}","Node SHS is connected to nodes CBN, BHI, VVI.
Node GCC is connected to nodes CBN, BHI, VVI.
Node FRC is connected to nodes LHU, QDV, JFN, MLZ.
Node WLS is connected to nodes CBN, UZZ, QDV, JFN, MLZ.
Node CBN is connected to nodes SHS, GCC, WLS.
Node BHI is connected to nodes SHS, GCC.
Node VVI is connected to nodes SHS, GCC.
Node UZZ is connected to node WLS.
Node LHU is connected to node FRC.
Node QDV is connected to nodes FRC, WLS.
Node JFN is connected to nodes FRC, WLS.
Node MLZ is connected to nodes FRC, WLS.","[SHS, GCC, FRC, WLS, CBN, BHI, VVI, UZZ, LHU, QDV, JFN, MLZ]",12,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SHS GCC FRC WLS.
Nodes set 2 contains: CBN BHI VVI UZZ LHU QDV JFN MLZ.","[(SHS, VVI), (GCC, BHI), (FRC, LHU), (WLS, CBN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SHS. Updated matching: {CBN: SHS}.
Search from node GCC. Updated matching: {CBN: GCC, BHI: SHS}.
Search from node FRC. Updated matching: {CBN: GCC, BHI: SHS, LHU: FRC}.
Search from node WLS. Updated matching: {CBN: WLS, BHI: GCC, LHU: FRC, VVI: SHS}.
So the maximum matching is ",4,8,146
bipartite,"[(EAN, MDG), (EAN, PFU), (EAN, ZXQ), (EAN, LWF), (EAN, DVL), (ZEC, BMA), (ZEC, PFU), (ZEC, ZXQ), (ZEC, LWF), (ZEC, DVL)]","{EAN: [MDG, PFU, ZXQ, LWF, DVL],
ZEC: [BMA, PFU, ZXQ, LWF, DVL],
MDG: [EAN],
BMA: [ZEC],
PFU: [EAN, ZEC],
ZXQ: [EAN, ZEC],
LWF: [EAN, ZEC],
DVL: [EAN, ZEC]}","Node EAN is connected to nodes MDG, PFU, ZXQ, LWF, DVL.
Node ZEC is connected to nodes BMA, PFU, ZXQ, LWF, DVL.
Node MDG is connected to node EAN.
Node BMA is connected to node ZEC.
Node PFU is connected to nodes EAN, ZEC.
Node ZXQ is connected to nodes EAN, ZEC.
Node LWF is connected to nodes EAN, ZEC.
Node DVL is connected to nodes EAN, ZEC.","[EAN, ZEC, MDG, BMA, PFU, ZXQ, LWF, DVL]",8,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: EAN ZEC.
Nodes set 2 contains: MDG BMA PFU ZXQ LWF DVL.","[(EAN, MDG), (ZEC, BMA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node EAN. Updated matching: {MDG: EAN}.
Search from node ZEC. Updated matching: {MDG: EAN, BMA: ZEC}.
So the maximum matching is ",2,6,147
bipartite,"[(JIN, AAJ), (JIN, UPI), (JIN, XQX), (JIN, ESE), (RAW, AAJ), (ZHQ, RXB), (ZHQ, DZZ), (ZHQ, YUG), (CEV, DZZ), (CEV, ESE), (CEV, YUG), (RYR, UPI), (RYR, XLV), (RYR, YUG)]","{JIN: [AAJ, UPI, XQX, ESE],
RAW: [AAJ],
ZHQ: [RXB, DZZ, YUG],
CEV: [DZZ, ESE, YUG],
RYR: [UPI, XLV, YUG],
AAJ: [JIN, RAW],
RXB: [ZHQ],
UPI: [JIN, RYR],
XQX: [JIN],
DZZ: [ZHQ, CEV],
ESE: [JIN, CEV],
XLV: [RYR],
YUG: [ZHQ, CEV, RYR]}","Node JIN is connected to nodes AAJ, UPI, XQX, ESE.
Node RAW is connected to node AAJ.
Node ZHQ is connected to nodes RXB, DZZ, YUG.
Node CEV is connected to nodes DZZ, ESE, YUG.
Node RYR is connected to nodes UPI, XLV, YUG.
Node AAJ is connected to nodes JIN, RAW.
Node RXB is connected to node ZHQ.
Node UPI is connected to nodes JIN, RYR.
Node XQX is connected to node JIN.
Node DZZ is connected to nodes ZHQ, CEV.
Node ESE is connected to nodes JIN, CEV.
Node XLV is connected to node RYR.
Node YUG is connected to nodes ZHQ, CEV, RYR.","[JIN, RAW, ZHQ, CEV, RYR, AAJ, RXB, UPI, XQX, DZZ, ESE, XLV, YUG]",13,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JIN RAW ZHQ CEV RYR.
Nodes set 2 contains: AAJ RXB UPI XQX DZZ ESE XLV YUG.","[(JIN, XQX), (RAW, AAJ), (ZHQ, RXB), (CEV, DZZ), (RYR, UPI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JIN. Updated matching: {AAJ: JIN}.
Search from node RAW. Updated matching: {AAJ: RAW, UPI: JIN}.
Search from node ZHQ. Updated matching: {AAJ: RAW, UPI: JIN, RXB: ZHQ}.
Search from node CEV. Updated matching: {AAJ: RAW, UPI: JIN, RXB: ZHQ, DZZ: CEV}.
Search from node RYR. Updated matching: {AAJ: RAW, UPI: RYR, RXB: ZHQ, DZZ: CEV, XQX: JIN}.
So the maximum matching is ",5,8,148
bipartite,"[(GKU, YOE), (GKU, XYL), (GKU, QEA), (GKU, BCE), (APJ, QEA), (APJ, RGT), (SVV, RGT)]","{GKU: [YOE, XYL, QEA, BCE],
APJ: [QEA, RGT],
SVV: [RGT],
YOE: [GKU],
XYL: [GKU],
QEA: [GKU, APJ],
RGT: [APJ, SVV],
BCE: [GKU]}","Node GKU is connected to nodes YOE, XYL, QEA, BCE.
Node APJ is connected to nodes QEA, RGT.
Node SVV is connected to node RGT.
Node YOE is connected to node GKU.
Node XYL is connected to node GKU.
Node QEA is connected to nodes GKU, APJ.
Node RGT is connected to nodes APJ, SVV.
Node BCE is connected to node GKU.","[GKU, APJ, SVV, YOE, XYL, QEA, RGT, BCE]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GKU APJ SVV.
Nodes set 2 contains: YOE XYL QEA RGT BCE.","[(GKU, YOE), (APJ, QEA), (SVV, RGT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GKU. Updated matching: {YOE: GKU}.
Search from node APJ. Updated matching: {YOE: GKU, QEA: APJ}.
Search from node SVV. Updated matching: {YOE: GKU, QEA: APJ, RGT: SVV}.
So the maximum matching is ",3,5,149
bipartite,"[(UAT, UTQ), (UAT, MWH), (UAT, IHE), (KDX, ZWS), (ZJY, ZIY), (ZJY, VJT), (ZJY, IHE), (ZJY, ZWS)]","{UAT: [UTQ, MWH, IHE],
KDX: [ZWS],
ZJY: [ZIY, VJT, IHE, ZWS],
UTQ: [UAT],
ZIY: [ZJY],
MWH: [UAT],
VJT: [ZJY],
IHE: [UAT, ZJY],
ZWS: [KDX, ZJY]}","Node UAT is connected to nodes UTQ, MWH, IHE.
Node KDX is connected to node ZWS.
Node ZJY is connected to nodes ZIY, VJT, IHE, ZWS.
Node UTQ is connected to node UAT.
Node ZIY is connected to node ZJY.
Node MWH is connected to node UAT.
Node VJT is connected to node ZJY.
Node IHE is connected to nodes UAT, ZJY.
Node ZWS is connected to nodes KDX, ZJY.","[UAT, KDX, ZJY, UTQ, ZIY, MWH, VJT, IHE, ZWS]",9,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UAT KDX ZJY.
Nodes set 2 contains: UTQ ZIY MWH VJT IHE ZWS.","[(UAT, UTQ), (KDX, ZWS), (ZJY, ZIY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UAT. Updated matching: {UTQ: UAT}.
Search from node KDX. Updated matching: {UTQ: UAT, ZWS: KDX}.
Search from node ZJY. Updated matching: {UTQ: UAT, ZWS: KDX, ZIY: ZJY}.
So the maximum matching is ",3,6,150
bipartite,"[(CZK, GSO), (CZK, CHS), (CZK, YLW), (GBT, GSO), (GBT, EZP), (LKJ, CHO), (VLC, CHO), (VLC, CHS), (VLC, EZP), (VLC, IRI)]","{CZK: [GSO, CHS, YLW],
GBT: [GSO, EZP],
LKJ: [CHO],
VLC: [CHO, CHS, EZP, IRI],
CHO: [LKJ, VLC],
GSO: [CZK, GBT],
CHS: [CZK, VLC],
EZP: [GBT, VLC],
YLW: [CZK],
IRI: [VLC]}","Node CZK is connected to nodes GSO, CHS, YLW.
Node GBT is connected to nodes GSO, EZP.
Node LKJ is connected to node CHO.
Node VLC is connected to nodes CHO, CHS, EZP, IRI.
Node CHO is connected to nodes LKJ, VLC.
Node GSO is connected to nodes CZK, GBT.
Node CHS is connected to nodes CZK, VLC.
Node EZP is connected to nodes GBT, VLC.
Node YLW is connected to node CZK.
Node IRI is connected to node VLC.","[CZK, GBT, LKJ, VLC, CHO, GSO, CHS, EZP, YLW, IRI]",10,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CZK GBT LKJ VLC.
Nodes set 2 contains: CHO GSO CHS EZP YLW IRI.","[(CZK, GSO), (GBT, EZP), (LKJ, CHO), (VLC, CHS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CZK. Updated matching: {GSO: CZK}.
Search from node GBT. Updated matching: {GSO: GBT, CHS: CZK}.
Search from node LKJ. Updated matching: {GSO: GBT, CHS: CZK, CHO: LKJ}.
Search from node VLC. Updated matching: {GSO: CZK, CHS: VLC, CHO: LKJ, EZP: GBT}.
So the maximum matching is ",4,6,151
bipartite,"[(BPB, MYO), (BPB, UKL), (BPB, NUR), (BPB, SQK), (BPB, BII), (UAW, QYB), (UAW, NUR), (UAW, SQK)]","{BPB: [MYO, UKL, NUR, SQK, BII],
UAW: [QYB, NUR, SQK],
MYO: [BPB],
QYB: [UAW],
UKL: [BPB],
NUR: [BPB, UAW],
SQK: [BPB, UAW],
BII: [BPB]}","Node BPB is connected to nodes MYO, UKL, NUR, SQK, BII.
Node UAW is connected to nodes QYB, NUR, SQK.
Node MYO is connected to node BPB.
Node QYB is connected to node UAW.
Node UKL is connected to node BPB.
Node NUR is connected to nodes BPB, UAW.
Node SQK is connected to nodes BPB, UAW.
Node BII is connected to node BPB.","[BPB, UAW, MYO, QYB, UKL, NUR, SQK, BII]",8,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BPB UAW.
Nodes set 2 contains: MYO QYB UKL NUR SQK BII.","[(BPB, MYO), (UAW, QYB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BPB. Updated matching: {MYO: BPB}.
Search from node UAW. Updated matching: {MYO: BPB, QYB: UAW}.
So the maximum matching is ",2,6,152
bipartite,"[(DFB, HAS), (DFB, FOB), (DFB, CRU), (DFB, RLZ), (DFB, CCX), (DFB, PNX), (DFB, QYS), (GYE, HAS), (GYE, CRU), (GYE, PNX), (YEI, ZGY), (YEI, NGE), (MCJ, ZGY), (MCJ, CRU), (MCJ, RLZ), (MCJ, NGE), (MCJ, QYS), (WSK, ZGY), (WSK, CCX), (WSK, PNX), (WKL, ZGY), (WKL, CCX), (WKL, PNX), (WKL, NGE)]","{DFB: [HAS, FOB, CRU, RLZ, CCX, PNX, QYS],
GYE: [HAS, CRU, PNX],
YEI: [ZGY, NGE],
MCJ: [ZGY, CRU, RLZ, NGE, QYS],
WSK: [ZGY, CCX, PNX],
WKL: [ZGY, CCX, PNX, NGE],
HAS: [DFB, GYE],
FOB: [DFB],
ZGY: [YEI, MCJ, WSK, WKL],
CRU: [DFB, GYE, MCJ],
RLZ: [DFB, MCJ],
CCX: [DFB, WSK, WKL],
PNX: [DFB, GYE, WSK, WKL],
NGE: [YEI, MCJ, WKL],
QYS: [DFB, MCJ]}","Node DFB is connected to nodes HAS, FOB, CRU, RLZ, CCX, PNX, QYS.
Node GYE is connected to nodes HAS, CRU, PNX.
Node YEI is connected to nodes ZGY, NGE.
Node MCJ is connected to nodes ZGY, CRU, RLZ, NGE, QYS.
Node WSK is connected to nodes ZGY, CCX, PNX.
Node WKL is connected to nodes ZGY, CCX, PNX, NGE.
Node HAS is connected to nodes DFB, GYE.
Node FOB is connected to node DFB.
Node ZGY is connected to nodes YEI, MCJ, WSK, WKL.
Node CRU is connected to nodes DFB, GYE, MCJ.
Node RLZ is connected to nodes DFB, MCJ.
Node CCX is connected to nodes DFB, WSK, WKL.
Node PNX is connected to nodes DFB, GYE, WSK, WKL.
Node NGE is connected to nodes YEI, MCJ, WKL.
Node QYS is connected to nodes DFB, MCJ.","[DFB, GYE, YEI, MCJ, WSK, WKL, HAS, FOB, ZGY, CRU, RLZ, CCX, PNX, NGE, QYS]",15,24,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DFB GYE YEI MCJ WSK WKL.
Nodes set 2 contains: HAS FOB ZGY CRU RLZ CCX PNX NGE QYS.","[(DFB, FOB), (GYE, HAS), (YEI, NGE), (MCJ, CRU), (WSK, CCX), (WKL, ZGY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DFB. Updated matching: {HAS: DFB}.
Search from node GYE. Updated matching: {HAS: GYE, FOB: DFB}.
Search from node YEI. Updated matching: {HAS: GYE, FOB: DFB, ZGY: YEI}.
Search from node MCJ. Updated matching: {HAS: GYE, FOB: DFB, ZGY: MCJ, NGE: YEI}.
Search from node WSK. Updated matching: {HAS: GYE, FOB: DFB, ZGY: WSK, NGE: YEI, CRU: MCJ}.
Search from node WKL. Updated matching: {HAS: GYE, FOB: DFB, ZGY: WKL, NGE: YEI, CRU: MCJ, CCX: WSK}.
So the maximum matching is ",6,9,153
bipartite,"[(KSJ, RAO), (KSJ, JJT), (KSJ, SHF), (ZGJ, LZC), (ZGJ, JJT), (ZGJ, NHB), (ZGJ, SHF), (XOB, KJI), (XOB, HWI), (XOB, SHF), (XOB, BZN), (HIA, RAO), (HIA, JJT), (HIA, KJI), (HIA, HWI), (HIA, SHF), (AFY, NHB), (AFY, HWI), (AFY, SHF)]","{KSJ: [RAO, JJT, SHF],
ZGJ: [LZC, JJT, NHB, SHF],
XOB: [KJI, HWI, SHF, BZN],
HIA: [RAO, JJT, KJI, HWI, SHF],
AFY: [NHB, HWI, SHF],
LZC: [ZGJ],
RAO: [KSJ, HIA],
JJT: [KSJ, ZGJ, HIA],
NHB: [ZGJ, AFY],
KJI: [XOB, HIA],
HWI: [XOB, HIA, AFY],
SHF: [KSJ, ZGJ, XOB, HIA, AFY],
BZN: [XOB]}","Node KSJ is connected to nodes RAO, JJT, SHF.
Node ZGJ is connected to nodes LZC, JJT, NHB, SHF.
Node XOB is connected to nodes KJI, HWI, SHF, BZN.
Node HIA is connected to nodes RAO, JJT, KJI, HWI, SHF.
Node AFY is connected to nodes NHB, HWI, SHF.
Node LZC is connected to node ZGJ.
Node RAO is connected to nodes KSJ, HIA.
Node JJT is connected to nodes KSJ, ZGJ, HIA.
Node NHB is connected to nodes ZGJ, AFY.
Node KJI is connected to nodes XOB, HIA.
Node HWI is connected to nodes XOB, HIA, AFY.
Node SHF is connected to nodes KSJ, ZGJ, XOB, HIA, AFY.
Node BZN is connected to node XOB.","[KSJ, ZGJ, XOB, HIA, AFY, LZC, RAO, JJT, NHB, KJI, HWI, SHF, BZN]",13,19,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: KSJ ZGJ XOB HIA AFY.
Nodes set 2 contains: LZC RAO JJT NHB KJI HWI SHF BZN.","[(KSJ, JJT), (ZGJ, LZC), (XOB, KJI), (HIA, RAO), (AFY, NHB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node KSJ. Updated matching: {RAO: KSJ}.
Search from node ZGJ. Updated matching: {RAO: KSJ, LZC: ZGJ}.
Search from node XOB. Updated matching: {RAO: KSJ, LZC: ZGJ, KJI: XOB}.
Search from node HIA. Updated matching: {RAO: HIA, LZC: ZGJ, KJI: XOB, JJT: KSJ}.
Search from node AFY. Updated matching: {RAO: HIA, LZC: ZGJ, KJI: XOB, JJT: KSJ, NHB: AFY}.
So the maximum matching is ",5,8,154
bipartite,"[(GHF, QKP), (GHF, RPM), (MSD, CGZ), (MSD, VJV), (MSD, QKP), (YGM, YAD), (YGM, QKP), (YGM, VWB), (LIT, CGZ), (LIT, VJV), (LIT, OUW), (LIT, QKP), (LIT, RPM), (JXD, YAD), (JXD, QKP), (JXD, RPM), (JXD, VWB)]","{GHF: [QKP, RPM],
MSD: [CGZ, VJV, QKP],
YGM: [YAD, QKP, VWB],
LIT: [CGZ, VJV, OUW, QKP, RPM],
JXD: [YAD, QKP, RPM, VWB],
CGZ: [MSD, LIT],
VJV: [MSD, LIT],
YAD: [YGM, JXD],
OUW: [LIT],
QKP: [GHF, MSD, YGM, LIT, JXD],
RPM: [GHF, LIT, JXD],
VWB: [YGM, JXD]}","Node GHF is connected to nodes QKP, RPM.
Node MSD is connected to nodes CGZ, VJV, QKP.
Node YGM is connected to nodes YAD, QKP, VWB.
Node LIT is connected to nodes CGZ, VJV, OUW, QKP, RPM.
Node JXD is connected to nodes YAD, QKP, RPM, VWB.
Node CGZ is connected to nodes MSD, LIT.
Node VJV is connected to nodes MSD, LIT.
Node YAD is connected to nodes YGM, JXD.
Node OUW is connected to node LIT.
Node QKP is connected to nodes GHF, MSD, YGM, LIT, JXD.
Node RPM is connected to nodes GHF, LIT, JXD.
Node VWB is connected to nodes YGM, JXD.","[GHF, MSD, YGM, LIT, JXD, CGZ, VJV, YAD, OUW, QKP, RPM, VWB]",12,17,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GHF MSD YGM LIT JXD.
Nodes set 2 contains: CGZ VJV YAD OUW QKP RPM VWB.","[(GHF, RPM), (MSD, VJV), (YGM, QKP), (LIT, CGZ), (JXD, YAD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GHF. Updated matching: {QKP: GHF}.
Search from node MSD. Updated matching: {QKP: GHF, CGZ: MSD}.
Search from node YGM. Updated matching: {QKP: GHF, CGZ: MSD, YAD: YGM}.
Search from node LIT. Updated matching: {QKP: GHF, CGZ: LIT, YAD: YGM, VJV: MSD}.
Search from node JXD. Updated matching: {QKP: YGM, CGZ: LIT, YAD: JXD, VJV: MSD, RPM: GHF}.
So the maximum matching is ",5,7,155
bipartite,"[(YUH, FUS), (YUH, LXT), (EGA, RHD), (EGA, FZU), (EGA, GIS), (EGA, HBU), (EGA, ADY), (HRR, FZU), (HRR, GIS), (HRR, LXT), (NKI, RHD), (NKI, FUS), (NKI, GIS), (NKI, HBU)]","{YUH: [FUS, LXT],
EGA: [RHD, FZU, GIS, HBU, ADY],
HRR: [FZU, GIS, LXT],
NKI: [RHD, FUS, GIS, HBU],
RHD: [EGA, NKI],
FUS: [YUH, NKI],
FZU: [EGA, HRR],
GIS: [EGA, HRR, NKI],
HBU: [EGA, NKI],
ADY: [EGA],
LXT: [YUH, HRR]}","Node YUH is connected to nodes FUS, LXT.
Node EGA is connected to nodes RHD, FZU, GIS, HBU, ADY.
Node HRR is connected to nodes FZU, GIS, LXT.
Node NKI is connected to nodes RHD, FUS, GIS, HBU.
Node RHD is connected to nodes EGA, NKI.
Node FUS is connected to nodes YUH, NKI.
Node FZU is connected to nodes EGA, HRR.
Node GIS is connected to nodes EGA, HRR, NKI.
Node HBU is connected to nodes EGA, NKI.
Node ADY is connected to node EGA.
Node LXT is connected to nodes YUH, HRR.","[YUH, EGA, HRR, NKI, RHD, FUS, FZU, GIS, HBU, ADY, LXT]",11,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YUH EGA HRR NKI.
Nodes set 2 contains: RHD FUS FZU GIS HBU ADY LXT.","[(YUH, FUS), (EGA, FZU), (HRR, GIS), (NKI, RHD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YUH. Updated matching: {FUS: YUH}.
Search from node EGA. Updated matching: {FUS: YUH, RHD: EGA}.
Search from node HRR. Updated matching: {FUS: YUH, RHD: EGA, FZU: HRR}.
Search from node NKI. Updated matching: {FUS: YUH, RHD: NKI, FZU: EGA, GIS: HRR}.
So the maximum matching is ",4,7,156
bipartite,"[(QBV, RQU), (QBV, ANV), (QBV, PQS), (JPL, QLZ), (JPL, SNP), (JPL, ANV), (IPA, KVL), (IPA, SNP), (IPA, RQU)]","{QBV: [RQU, ANV, PQS],
JPL: [QLZ, SNP, ANV],
IPA: [KVL, SNP, RQU],
QLZ: [JPL],
KVL: [IPA],
SNP: [JPL, IPA],
RQU: [QBV, IPA],
ANV: [QBV, JPL],
PQS: [QBV]}","Node QBV is connected to nodes RQU, ANV, PQS.
Node JPL is connected to nodes QLZ, SNP, ANV.
Node IPA is connected to nodes KVL, SNP, RQU.
Node QLZ is connected to node JPL.
Node KVL is connected to node IPA.
Node SNP is connected to nodes JPL, IPA.
Node RQU is connected to nodes QBV, IPA.
Node ANV is connected to nodes QBV, JPL.
Node PQS is connected to node QBV.","[QBV, JPL, IPA, QLZ, KVL, SNP, RQU, ANV, PQS]",9,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QBV JPL IPA.
Nodes set 2 contains: QLZ KVL SNP RQU ANV PQS.","[(QBV, RQU), (JPL, QLZ), (IPA, KVL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QBV. Updated matching: {RQU: QBV}.
Search from node JPL. Updated matching: {RQU: QBV, QLZ: JPL}.
Search from node IPA. Updated matching: {RQU: QBV, QLZ: JPL, KVL: IPA}.
So the maximum matching is ",3,6,157
bipartite,"[(DVE, ETJ), (DVE, DDQ), (DVE, UBN), (DVE, MQO), (DVE, UHV), (CYD, RZJ), (CYD, MQO), (JDD, ETJ), (JDD, GOC), (CNK, DDQ), (CNK, RZJ), (CNK, UBN), (CNK, GOC), (FYA, MQO), (FYA, UHV)]","{DVE: [ETJ, DDQ, UBN, MQO, UHV],
CYD: [RZJ, MQO],
JDD: [ETJ, GOC],
CNK: [DDQ, RZJ, UBN, GOC],
FYA: [MQO, UHV],
ETJ: [DVE, JDD],
DDQ: [DVE, CNK],
RZJ: [CYD, CNK],
UBN: [DVE, CNK],
MQO: [DVE, CYD, FYA],
GOC: [JDD, CNK],
UHV: [DVE, FYA]}","Node DVE is connected to nodes ETJ, DDQ, UBN, MQO, UHV.
Node CYD is connected to nodes RZJ, MQO.
Node JDD is connected to nodes ETJ, GOC.
Node CNK is connected to nodes DDQ, RZJ, UBN, GOC.
Node FYA is connected to nodes MQO, UHV.
Node ETJ is connected to nodes DVE, JDD.
Node DDQ is connected to nodes DVE, CNK.
Node RZJ is connected to nodes CYD, CNK.
Node UBN is connected to nodes DVE, CNK.
Node MQO is connected to nodes DVE, CYD, FYA.
Node GOC is connected to nodes JDD, CNK.
Node UHV is connected to nodes DVE, FYA.","[DVE, CYD, JDD, CNK, FYA, ETJ, DDQ, RZJ, UBN, MQO, GOC, UHV]",12,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DVE CYD JDD CNK FYA.
Nodes set 2 contains: ETJ DDQ RZJ UBN MQO GOC UHV.","[(DVE, ETJ), (CYD, RZJ), (JDD, GOC), (CNK, DDQ), (FYA, MQO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DVE. Updated matching: {ETJ: DVE}.
Search from node CYD. Updated matching: {ETJ: DVE, RZJ: CYD}.
Search from node JDD. Updated matching: {ETJ: JDD, RZJ: CYD, DDQ: DVE}.
Search from node CNK. Updated matching: {ETJ: DVE, RZJ: CYD, DDQ: CNK, GOC: JDD}.
Search from node FYA. Updated matching: {ETJ: DVE, RZJ: CYD, DDQ: CNK, GOC: JDD, MQO: FYA}.
So the maximum matching is ",5,7,158
bipartite,"[(CTD, DEA), (CTD, CNU), (CTD, RUO), (CTD, XYZ), (CTD, JCQ), (WYP, RUO), (WYP, XYZ), (QPX, CNU), (QPX, RUO), (QPX, CNG), (FCN, CNU), (FCN, RUO), (FCN, BGQ), (FCN, CNG)]","{CTD: [DEA, CNU, RUO, XYZ, JCQ],
WYP: [RUO, XYZ],
QPX: [CNU, RUO, CNG],
FCN: [CNU, RUO, BGQ, CNG],
DEA: [CTD],
CNU: [CTD, QPX, FCN],
RUO: [CTD, WYP, QPX, FCN],
XYZ: [CTD, WYP],
BGQ: [FCN],
JCQ: [CTD],
CNG: [QPX, FCN]}","Node CTD is connected to nodes DEA, CNU, RUO, XYZ, JCQ.
Node WYP is connected to nodes RUO, XYZ.
Node QPX is connected to nodes CNU, RUO, CNG.
Node FCN is connected to nodes CNU, RUO, BGQ, CNG.
Node DEA is connected to node CTD.
Node CNU is connected to nodes CTD, QPX, FCN.
Node RUO is connected to nodes CTD, WYP, QPX, FCN.
Node XYZ is connected to nodes CTD, WYP.
Node BGQ is connected to node FCN.
Node JCQ is connected to node CTD.
Node CNG is connected to nodes QPX, FCN.","[CTD, WYP, QPX, FCN, DEA, CNU, RUO, XYZ, BGQ, JCQ, CNG]",11,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CTD WYP QPX FCN.
Nodes set 2 contains: DEA CNU RUO XYZ BGQ JCQ CNG.","[(CTD, DEA), (WYP, XYZ), (QPX, RUO), (FCN, CNU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CTD. Updated matching: {DEA: CTD}.
Search from node WYP. Updated matching: {DEA: CTD, RUO: WYP}.
Search from node QPX. Updated matching: {DEA: CTD, RUO: WYP, CNU: QPX}.
Search from node FCN. Updated matching: {DEA: CTD, RUO: QPX, CNU: FCN, XYZ: WYP}.
So the maximum matching is ",4,7,159
bipartite,"[(UOH, LJH), (UOH, UYF), (UOH, JHN), (UOH, XZT), (ZZW, LJH), (ZZW, SPO), (ZZW, EKA), (ZZW, WQD), (KJY, FPP), (KJY, YNB), (KJY, UIZ), (KJY, CXU), (KJY, UYF), (KJY, JHN), (KJY, XZT)]","{UOH: [LJH, UYF, JHN, XZT],
ZZW: [LJH, SPO, EKA, WQD],
KJY: [FPP, YNB, UIZ, CXU, UYF, JHN, XZT],
FPP: [KJY],
YNB: [KJY],
LJH: [UOH, ZZW],
UIZ: [KJY],
SPO: [ZZW],
CXU: [KJY],
EKA: [ZZW],
UYF: [UOH, KJY],
JHN: [UOH, KJY],
WQD: [ZZW],
XZT: [UOH, KJY]}","Node UOH is connected to nodes LJH, UYF, JHN, XZT.
Node ZZW is connected to nodes LJH, SPO, EKA, WQD.
Node KJY is connected to nodes FPP, YNB, UIZ, CXU, UYF, JHN, XZT.
Node FPP is connected to node KJY.
Node YNB is connected to node KJY.
Node LJH is connected to nodes UOH, ZZW.
Node UIZ is connected to node KJY.
Node SPO is connected to node ZZW.
Node CXU is connected to node KJY.
Node EKA is connected to node ZZW.
Node UYF is connected to nodes UOH, KJY.
Node JHN is connected to nodes UOH, KJY.
Node WQD is connected to node ZZW.
Node XZT is connected to nodes UOH, KJY.","[UOH, ZZW, KJY, FPP, YNB, LJH, UIZ, SPO, CXU, EKA, UYF, JHN, WQD, XZT]",14,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UOH ZZW KJY.
Nodes set 2 contains: FPP YNB LJH UIZ SPO CXU EKA UYF JHN WQD XZT.","[(UOH, UYF), (ZZW, LJH), (KJY, FPP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UOH. Updated matching: {LJH: UOH}.
Search from node ZZW. Updated matching: {LJH: ZZW, UYF: UOH}.
Search from node KJY. Updated matching: {LJH: ZZW, UYF: UOH, FPP: KJY}.
So the maximum matching is ",3,11,160
bipartite,"[(NAT, WGK), (NAT, QPY), (NAT, VPG), (NAT, BII), (KJY, WGK), (KJY, GEG), (XRW, VPG), (XRW, QLU), (LOI, QQX), (LOI, WGK), (LOI, QPY), (LOI, YNY), (LOI, GEP), (LOI, VPG), (LOI, BII), (LOI, QLU), (WZT, YBT), (WZT, VPG), (WZT, QLU)]","{NAT: [WGK, QPY, VPG, BII],
KJY: [WGK, GEG],
XRW: [VPG, QLU],
LOI: [QQX, WGK, QPY, YNY, GEP, VPG, BII, QLU],
WZT: [YBT, VPG, QLU],
QQX: [LOI],
WGK: [NAT, KJY, LOI],
YBT: [WZT],
QPY: [NAT, LOI],
YNY: [LOI],
GEG: [KJY],
GEP: [LOI],
VPG: [NAT, XRW, LOI, WZT],
BII: [NAT, LOI],
QLU: [XRW, LOI, WZT]}","Node NAT is connected to nodes WGK, QPY, VPG, BII.
Node KJY is connected to nodes WGK, GEG.
Node XRW is connected to nodes VPG, QLU.
Node LOI is connected to nodes QQX, WGK, QPY, YNY, GEP, VPG, BII, QLU.
Node WZT is connected to nodes YBT, VPG, QLU.
Node QQX is connected to node LOI.
Node WGK is connected to nodes NAT, KJY, LOI.
Node YBT is connected to node WZT.
Node QPY is connected to nodes NAT, LOI.
Node YNY is connected to node LOI.
Node GEG is connected to node KJY.
Node GEP is connected to node LOI.
Node VPG is connected to nodes NAT, XRW, LOI, WZT.
Node BII is connected to nodes NAT, LOI.
Node QLU is connected to nodes XRW, LOI, WZT.","[NAT, KJY, XRW, LOI, WZT, QQX, WGK, YBT, QPY, YNY, GEG, GEP, VPG, BII, QLU]",15,19,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NAT KJY XRW LOI WZT.
Nodes set 2 contains: QQX WGK YBT QPY YNY GEG GEP VPG BII QLU.","[(NAT, QPY), (KJY, WGK), (XRW, VPG), (LOI, QQX), (WZT, YBT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NAT. Updated matching: {WGK: NAT}.
Search from node KJY. Updated matching: {WGK: KJY, QPY: NAT}.
Search from node XRW. Updated matching: {WGK: KJY, QPY: NAT, VPG: XRW}.
Search from node LOI. Updated matching: {WGK: KJY, QPY: NAT, VPG: XRW, QQX: LOI}.
Search from node WZT. Updated matching: {WGK: KJY, QPY: NAT, VPG: XRW, QQX: LOI, YBT: WZT}.
So the maximum matching is ",5,10,161
bipartite,"[(CRD, ZQM), (CRD, ZKP), (KQW, JXK), (KQW, IAH), (SKD, HYV), (SKD, ZQM), (SKD, JXK), (SKD, IAH), (SKD, ZKP)]","{CRD: [ZQM, ZKP],
KQW: [JXK, IAH],
SKD: [HYV, ZQM, JXK, IAH, ZKP],
HYV: [SKD],
ZQM: [CRD, SKD],
JXK: [KQW, SKD],
IAH: [KQW, SKD],
ZKP: [CRD, SKD]}","Node CRD is connected to nodes ZQM, ZKP.
Node KQW is connected to nodes JXK, IAH.
Node SKD is connected to nodes HYV, ZQM, JXK, IAH, ZKP.
Node HYV is connected to node SKD.
Node ZQM is connected to nodes CRD, SKD.
Node JXK is connected to nodes KQW, SKD.
Node IAH is connected to nodes KQW, SKD.
Node ZKP is connected to nodes CRD, SKD.","[CRD, KQW, SKD, HYV, ZQM, JXK, IAH, ZKP]",8,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CRD KQW SKD.
Nodes set 2 contains: HYV ZQM JXK IAH ZKP.","[(CRD, ZQM), (KQW, JXK), (SKD, HYV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CRD. Updated matching: {ZQM: CRD}.
Search from node KQW. Updated matching: {ZQM: CRD, JXK: KQW}.
Search from node SKD. Updated matching: {ZQM: CRD, JXK: KQW, HYV: SKD}.
So the maximum matching is ",3,5,162
bipartite,"[(LZA, KZM), (LZA, AKJ), (LZA, ISH), (LZA, ZMG), (AWC, KZM), (AWC, DAY), (BHM, AKJ), (BHM, ZMG), (ZZL, DAY), (ZZL, RNW), (WAP, KZM), (WAP, AKJ)]","{LZA: [KZM, AKJ, ISH, ZMG],
AWC: [KZM, DAY],
BHM: [AKJ, ZMG],
ZZL: [DAY, RNW],
WAP: [KZM, AKJ],
KZM: [LZA, AWC, WAP],
AKJ: [LZA, BHM, WAP],
DAY: [AWC, ZZL],
ISH: [LZA],
RNW: [ZZL],
ZMG: [LZA, BHM]}","Node LZA is connected to nodes KZM, AKJ, ISH, ZMG.
Node AWC is connected to nodes KZM, DAY.
Node BHM is connected to nodes AKJ, ZMG.
Node ZZL is connected to nodes DAY, RNW.
Node WAP is connected to nodes KZM, AKJ.
Node KZM is connected to nodes LZA, AWC, WAP.
Node AKJ is connected to nodes LZA, BHM, WAP.
Node DAY is connected to nodes AWC, ZZL.
Node ISH is connected to node LZA.
Node RNW is connected to node ZZL.
Node ZMG is connected to nodes LZA, BHM.","[LZA, AWC, BHM, ZZL, WAP, KZM, AKJ, DAY, ISH, RNW, ZMG]",11,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LZA AWC BHM ZZL WAP.
Nodes set 2 contains: KZM AKJ DAY ISH RNW ZMG.","[(LZA, AKJ), (AWC, DAY), (BHM, ZMG), (ZZL, RNW), (WAP, KZM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LZA. Updated matching: {KZM: LZA}.
Search from node AWC. Updated matching: {KZM: AWC, AKJ: LZA}.
Search from node BHM. Updated matching: {KZM: LZA, AKJ: BHM, DAY: AWC}.
Search from node ZZL. Updated matching: {KZM: AWC, AKJ: LZA, DAY: ZZL, ZMG: BHM}.
Search from node WAP. Updated matching: {KZM: WAP, AKJ: LZA, DAY: AWC, ZMG: BHM, RNW: ZZL}.
So the maximum matching is ",5,6,163
bipartite,"[(GTZ, CWF), (GTZ, GYO), (GTZ, EBJ), (GTZ, PTA), (WAE, QKL), (WAE, CWF), (WAE, MPH), (WAE, WFZ), (WAE, AEB), (VPZ, QNJ), (VPZ, WUD), (VPZ, GYO), (VPZ, EBJ), (VPZ, PTA), (TJU, QKL), (TJU, QNJ), (TJU, MPH), (TJU, WFZ), (TJU, GYO), (TJU, AEB), (TJU, QYI), (TJU, PTA)]","{GTZ: [CWF, GYO, EBJ, PTA],
WAE: [QKL, CWF, MPH, WFZ, AEB],
VPZ: [QNJ, WUD, GYO, EBJ, PTA],
TJU: [QKL, QNJ, MPH, WFZ, GYO, AEB, QYI, PTA],
QKL: [WAE, TJU],
CWF: [GTZ, WAE],
QNJ: [VPZ, TJU],
WUD: [VPZ],
MPH: [WAE, TJU],
WFZ: [WAE, TJU],
GYO: [GTZ, VPZ, TJU],
AEB: [WAE, TJU],
EBJ: [GTZ, VPZ],
QYI: [TJU],
PTA: [GTZ, VPZ, TJU]}","Node GTZ is connected to nodes CWF, GYO, EBJ, PTA.
Node WAE is connected to nodes QKL, CWF, MPH, WFZ, AEB.
Node VPZ is connected to nodes QNJ, WUD, GYO, EBJ, PTA.
Node TJU is connected to nodes QKL, QNJ, MPH, WFZ, GYO, AEB, QYI, PTA.
Node QKL is connected to nodes WAE, TJU.
Node CWF is connected to nodes GTZ, WAE.
Node QNJ is connected to nodes VPZ, TJU.
Node WUD is connected to node VPZ.
Node MPH is connected to nodes WAE, TJU.
Node WFZ is connected to nodes WAE, TJU.
Node GYO is connected to nodes GTZ, VPZ, TJU.
Node AEB is connected to nodes WAE, TJU.
Node EBJ is connected to nodes GTZ, VPZ.
Node QYI is connected to node TJU.
Node PTA is connected to nodes GTZ, VPZ, TJU.","[GTZ, WAE, VPZ, TJU, QKL, CWF, QNJ, WUD, MPH, WFZ, GYO, AEB, EBJ, QYI, PTA]",15,22,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GTZ WAE VPZ TJU.
Nodes set 2 contains: QKL CWF QNJ WUD MPH WFZ GYO AEB EBJ QYI PTA.","[(GTZ, GYO), (WAE, CWF), (VPZ, QNJ), (TJU, QKL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GTZ. Updated matching: {CWF: GTZ}.
Search from node WAE. Updated matching: {CWF: GTZ, QKL: WAE}.
Search from node VPZ. Updated matching: {CWF: GTZ, QKL: WAE, QNJ: VPZ}.
Search from node TJU. Updated matching: {CWF: WAE, QKL: TJU, QNJ: VPZ, GYO: GTZ}.
So the maximum matching is ",4,11,164
bipartite,"[(VQR, XPR), (VQR, FSM), (KMK, BYJ), (KMK, VQA), (KMK, FSM), (MYJ, HHR), (MYJ, FSM)]","{VQR: [XPR, FSM],
KMK: [BYJ, VQA, FSM],
MYJ: [HHR, FSM],
HHR: [MYJ],
BYJ: [KMK],
XPR: [VQR],
VQA: [KMK],
FSM: [VQR, KMK, MYJ]}","Node VQR is connected to nodes XPR, FSM.
Node KMK is connected to nodes BYJ, VQA, FSM.
Node MYJ is connected to nodes HHR, FSM.
Node HHR is connected to node MYJ.
Node BYJ is connected to node KMK.
Node XPR is connected to node VQR.
Node VQA is connected to node KMK.
Node FSM is connected to nodes VQR, KMK, MYJ.","[VQR, KMK, MYJ, HHR, BYJ, XPR, VQA, FSM]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VQR KMK MYJ.
Nodes set 2 contains: HHR BYJ XPR VQA FSM.","[(VQR, XPR), (KMK, BYJ), (MYJ, HHR)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VQR. Updated matching: {XPR: VQR}.
Search from node KMK. Updated matching: {XPR: VQR, BYJ: KMK}.
Search from node MYJ. Updated matching: {XPR: VQR, BYJ: KMK, HHR: MYJ}.
So the maximum matching is ",3,5,165
bipartite,"[(IVZ, GLZ), (IVZ, OUI), (IVZ, NHQ), (PCX, BZM), (PCX, BRG), (PCX, PIZ), (PCX, CKP), (PCX, CWN), (UQG, BZM), (UQG, BRG), (SGJ, OUI), (SGJ, BZM), (IDN, BRG), (IDN, RME), (RMH, GLZ), (RMH, OUI), (RMH, CKP), (RMH, CWN)]","{IVZ: [GLZ, OUI, NHQ],
PCX: [BZM, BRG, PIZ, CKP, CWN],
UQG: [BZM, BRG],
SGJ: [OUI, BZM],
IDN: [BRG, RME],
RMH: [GLZ, OUI, CKP, CWN],
GLZ: [IVZ, RMH],
OUI: [IVZ, SGJ, RMH],
BZM: [PCX, UQG, SGJ],
BRG: [PCX, UQG, IDN],
PIZ: [PCX],
NHQ: [IVZ],
CKP: [PCX, RMH],
CWN: [PCX, RMH],
RME: [IDN]}","Node IVZ is connected to nodes GLZ, OUI, NHQ.
Node PCX is connected to nodes BZM, BRG, PIZ, CKP, CWN.
Node UQG is connected to nodes BZM, BRG.
Node SGJ is connected to nodes OUI, BZM.
Node IDN is connected to nodes BRG, RME.
Node RMH is connected to nodes GLZ, OUI, CKP, CWN.
Node GLZ is connected to nodes IVZ, RMH.
Node OUI is connected to nodes IVZ, SGJ, RMH.
Node BZM is connected to nodes PCX, UQG, SGJ.
Node BRG is connected to nodes PCX, UQG, IDN.
Node PIZ is connected to node PCX.
Node NHQ is connected to node IVZ.
Node CKP is connected to nodes PCX, RMH.
Node CWN is connected to nodes PCX, RMH.
Node RME is connected to node IDN.","[IVZ, PCX, UQG, SGJ, IDN, RMH, GLZ, OUI, BZM, BRG, PIZ, NHQ, CKP, CWN, RME]",15,18,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IVZ PCX UQG SGJ IDN RMH.
Nodes set 2 contains: GLZ OUI BZM BRG PIZ NHQ CKP CWN RME.","[(IVZ, OUI), (PCX, PIZ), (UQG, BRG), (SGJ, BZM), (IDN, RME), (RMH, GLZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IVZ. Updated matching: {GLZ: IVZ}.
Search from node PCX. Updated matching: {GLZ: IVZ, BZM: PCX}.
Search from node UQG. Updated matching: {GLZ: IVZ, BZM: UQG, BRG: PCX}.
Search from node SGJ. Updated matching: {GLZ: IVZ, BZM: UQG, BRG: PCX, OUI: SGJ}.
Search from node IDN. Updated matching: {GLZ: IVZ, BZM: UQG, BRG: IDN, OUI: SGJ, PIZ: PCX}.
Search from node RMH. Updated matching: {GLZ: RMH, BZM: SGJ, BRG: UQG, OUI: IVZ, PIZ: PCX, RME: IDN}.
So the maximum matching is ",6,9,166
bipartite,"[(ROS, UXB), (DAQ, AFS), (DAQ, TOV), (DAQ, UZC), (DAQ, UXB), (ODO, UZC), (PNE, AFS), (PNE, TOV), (PNE, POT), (PNE, UZC), (PNE, UXB)]","{ROS: [UXB],
DAQ: [AFS, TOV, UZC, UXB],
ODO: [UZC],
PNE: [AFS, TOV, POT, UZC, UXB],
AFS: [DAQ, PNE],
TOV: [DAQ, PNE],
POT: [PNE],
UZC: [DAQ, ODO, PNE],
UXB: [ROS, DAQ, PNE]}","Node ROS is connected to node UXB.
Node DAQ is connected to nodes AFS, TOV, UZC, UXB.
Node ODO is connected to node UZC.
Node PNE is connected to nodes AFS, TOV, POT, UZC, UXB.
Node AFS is connected to nodes DAQ, PNE.
Node TOV is connected to nodes DAQ, PNE.
Node POT is connected to node PNE.
Node UZC is connected to nodes DAQ, ODO, PNE.
Node UXB is connected to nodes ROS, DAQ, PNE.","[ROS, DAQ, ODO, PNE, AFS, TOV, POT, UZC, UXB]",9,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ROS DAQ ODO PNE.
Nodes set 2 contains: AFS TOV POT UZC UXB.","[(ROS, UXB), (DAQ, TOV), (ODO, UZC), (PNE, AFS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ROS. Updated matching: {UXB: ROS}.
Search from node DAQ. Updated matching: {UXB: ROS, AFS: DAQ}.
Search from node ODO. Updated matching: {UXB: ROS, AFS: DAQ, UZC: ODO}.
Search from node PNE. Updated matching: {UXB: ROS, AFS: PNE, UZC: ODO, TOV: DAQ}.
So the maximum matching is ",4,5,167
bipartite,"[(VWJ, TOJ), (VWJ, LJP), (OIH, PCG), (JSD, LJP), (ZAP, PCG), (ZAP, PTG), (ZAP, KQE), (ZAP, USY), (ZAP, LJP)]","{VWJ: [TOJ, LJP],
OIH: [PCG],
JSD: [LJP],
ZAP: [PCG, PTG, KQE, USY, LJP],
PCG: [OIH, ZAP],
PTG: [ZAP],
KQE: [ZAP],
USY: [ZAP],
TOJ: [VWJ],
LJP: [VWJ, JSD, ZAP]}","Node VWJ is connected to nodes TOJ, LJP.
Node OIH is connected to node PCG.
Node JSD is connected to node LJP.
Node ZAP is connected to nodes PCG, PTG, KQE, USY, LJP.
Node PCG is connected to nodes OIH, ZAP.
Node PTG is connected to node ZAP.
Node KQE is connected to node ZAP.
Node USY is connected to node ZAP.
Node TOJ is connected to node VWJ.
Node LJP is connected to nodes VWJ, JSD, ZAP.","[VWJ, OIH, JSD, ZAP, PCG, PTG, KQE, USY, TOJ, LJP]",10,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VWJ OIH JSD ZAP.
Nodes set 2 contains: PCG PTG KQE USY TOJ LJP.","[(VWJ, TOJ), (OIH, PCG), (JSD, LJP), (ZAP, PTG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VWJ. Updated matching: {TOJ: VWJ}.
Search from node OIH. Updated matching: {TOJ: VWJ, PCG: OIH}.
Search from node JSD. Updated matching: {TOJ: VWJ, PCG: OIH, LJP: JSD}.
Search from node ZAP. Updated matching: {TOJ: VWJ, PCG: OIH, LJP: JSD, PTG: ZAP}.
So the maximum matching is ",4,6,168
bipartite,"[(VQC, AGL), (VQC, TAL), (VQC, ZAO), (VQC, WVR), (VQC, ICJ), (VQC, SKR), (VQC, HPE), (RTE, TAL), (RTE, GQK), (OZS, TAL), (OZS, WVR), (OZS, VVE)]","{VQC: [AGL, TAL, ZAO, WVR, ICJ, SKR, HPE],
RTE: [TAL, GQK],
OZS: [TAL, WVR, VVE],
AGL: [VQC],
TAL: [VQC, RTE, OZS],
ZAO: [VQC],
WVR: [VQC, OZS],
GQK: [RTE],
VVE: [OZS],
ICJ: [VQC],
SKR: [VQC],
HPE: [VQC]}","Node VQC is connected to nodes AGL, TAL, ZAO, WVR, ICJ, SKR, HPE.
Node RTE is connected to nodes TAL, GQK.
Node OZS is connected to nodes TAL, WVR, VVE.
Node AGL is connected to node VQC.
Node TAL is connected to nodes VQC, RTE, OZS.
Node ZAO is connected to node VQC.
Node WVR is connected to nodes VQC, OZS.
Node GQK is connected to node RTE.
Node VVE is connected to node OZS.
Node ICJ is connected to node VQC.
Node SKR is connected to node VQC.
Node HPE is connected to node VQC.","[VQC, RTE, OZS, AGL, TAL, ZAO, WVR, GQK, VVE, ICJ, SKR, HPE]",12,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VQC RTE OZS.
Nodes set 2 contains: AGL TAL ZAO WVR GQK VVE ICJ SKR HPE.","[(VQC, AGL), (RTE, GQK), (OZS, TAL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VQC. Updated matching: {AGL: VQC}.
Search from node RTE. Updated matching: {AGL: VQC, TAL: RTE}.
Search from node OZS. Updated matching: {AGL: VQC, TAL: OZS, GQK: RTE}.
So the maximum matching is ",3,9,169
bipartite,"[(YZH, XJV), (YZH, IVQ), (WFS, IVQ), (WFS, EYZ), (KXX, IWW), (KXX, XJV), (LTE, IWW), (LTE, JYP)]","{YZH: [XJV, IVQ],
WFS: [IVQ, EYZ],
KXX: [IWW, XJV],
LTE: [IWW, JYP],
IWW: [KXX, LTE],
JYP: [LTE],
XJV: [YZH, KXX],
IVQ: [YZH, WFS],
EYZ: [WFS]}","Node YZH is connected to nodes XJV, IVQ.
Node WFS is connected to nodes IVQ, EYZ.
Node KXX is connected to nodes IWW, XJV.
Node LTE is connected to nodes IWW, JYP.
Node IWW is connected to nodes KXX, LTE.
Node JYP is connected to node LTE.
Node XJV is connected to nodes YZH, KXX.
Node IVQ is connected to nodes YZH, WFS.
Node EYZ is connected to node WFS.","[YZH, WFS, KXX, LTE, IWW, JYP, XJV, IVQ, EYZ]",9,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YZH WFS KXX LTE.
Nodes set 2 contains: IWW JYP XJV IVQ EYZ.","[(YZH, IVQ), (WFS, EYZ), (KXX, XJV), (LTE, IWW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YZH. Updated matching: {XJV: YZH}.
Search from node WFS. Updated matching: {XJV: YZH, IVQ: WFS}.
Search from node KXX. Updated matching: {XJV: YZH, IVQ: WFS, IWW: KXX}.
Search from node LTE. Updated matching: {XJV: KXX, IVQ: YZH, IWW: LTE, EYZ: WFS}.
So the maximum matching is ",4,5,170
bipartite,"[(QYR, IPV), (QYR, ONF), (QYR, RTD), (POB, ZLX), (POB, ONF), (POB, RTD), (HFM, ZLX), (HFM, PZW), (HFM, EOJ), (YBC, ZLX), (QRA, ZLX), (QRA, HSF), (QRA, RTD)]","{QYR: [IPV, ONF, RTD],
POB: [ZLX, ONF, RTD],
HFM: [ZLX, PZW, EOJ],
YBC: [ZLX],
QRA: [ZLX, HSF, RTD],
IPV: [QYR],
ZLX: [POB, HFM, YBC, QRA],
PZW: [HFM],
HSF: [QRA],
ONF: [QYR, POB],
EOJ: [HFM],
RTD: [QYR, POB, QRA]}","Node QYR is connected to nodes IPV, ONF, RTD.
Node POB is connected to nodes ZLX, ONF, RTD.
Node HFM is connected to nodes ZLX, PZW, EOJ.
Node YBC is connected to node ZLX.
Node QRA is connected to nodes ZLX, HSF, RTD.
Node IPV is connected to node QYR.
Node ZLX is connected to nodes POB, HFM, YBC, QRA.
Node PZW is connected to node HFM.
Node HSF is connected to node QRA.
Node ONF is connected to nodes QYR, POB.
Node EOJ is connected to node HFM.
Node RTD is connected to nodes QYR, POB, QRA.","[QYR, POB, HFM, YBC, QRA, IPV, ZLX, PZW, HSF, ONF, EOJ, RTD]",12,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QYR POB HFM YBC QRA.
Nodes set 2 contains: IPV ZLX PZW HSF ONF EOJ RTD.","[(QYR, IPV), (POB, ONF), (HFM, PZW), (YBC, ZLX), (QRA, HSF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QYR. Updated matching: {IPV: QYR}.
Search from node POB. Updated matching: {IPV: QYR, ZLX: POB}.
Search from node HFM. Updated matching: {IPV: QYR, ZLX: HFM, ONF: POB}.
Search from node YBC. Updated matching: {IPV: QYR, ZLX: YBC, ONF: POB, PZW: HFM}.
Search from node QRA. Updated matching: {IPV: QYR, ZLX: YBC, ONF: POB, PZW: HFM, HSF: QRA}.
So the maximum matching is ",5,7,171
bipartite,"[(UYU, CJY), (UYU, MEC), (ITV, CJY), (UKF, ZXE), (UKF, FMO), (UKF, BSJ), (UKF, WWC), (LMN, FMO), (LMN, OUQ), (LMN, MEC), (LMN, XYO)]","{UYU: [CJY, MEC],
ITV: [CJY],
UKF: [ZXE, FMO, BSJ, WWC],
LMN: [FMO, OUQ, MEC, XYO],
ZXE: [UKF],
FMO: [UKF, LMN],
CJY: [UYU, ITV],
BSJ: [UKF],
OUQ: [LMN],
MEC: [UYU, LMN],
XYO: [LMN],
WWC: [UKF]}","Node UYU is connected to nodes CJY, MEC.
Node ITV is connected to node CJY.
Node UKF is connected to nodes ZXE, FMO, BSJ, WWC.
Node LMN is connected to nodes FMO, OUQ, MEC, XYO.
Node ZXE is connected to node UKF.
Node FMO is connected to nodes UKF, LMN.
Node CJY is connected to nodes UYU, ITV.
Node BSJ is connected to node UKF.
Node OUQ is connected to node LMN.
Node MEC is connected to nodes UYU, LMN.
Node XYO is connected to node LMN.
Node WWC is connected to node UKF.","[UYU, ITV, UKF, LMN, ZXE, FMO, CJY, BSJ, OUQ, MEC, XYO, WWC]",12,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UYU ITV UKF LMN.
Nodes set 2 contains: ZXE FMO CJY BSJ OUQ MEC XYO WWC.","[(UYU, MEC), (ITV, CJY), (UKF, ZXE), (LMN, FMO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UYU. Updated matching: {CJY: UYU}.
Search from node ITV. Updated matching: {CJY: ITV, MEC: UYU}.
Search from node UKF. Updated matching: {CJY: ITV, MEC: UYU, ZXE: UKF}.
Search from node LMN. Updated matching: {CJY: ITV, MEC: UYU, ZXE: UKF, FMO: LMN}.
So the maximum matching is ",4,8,172
bipartite,"[(YSY, VUF), (YSY, BTK), (YSY, VBZ), (SNQ, VUF), (SNQ, PAN), (SNQ, JLQ), (SNQ, MIP), (SNQ, EKW), (DQW, JLQ), (DQW, EKW), (DQW, VBZ), (DQW, FXP), (WCY, EKW)]","{YSY: [VUF, BTK, VBZ],
SNQ: [VUF, PAN, JLQ, MIP, EKW],
DQW: [JLQ, EKW, VBZ, FXP],
WCY: [EKW],
VUF: [YSY, SNQ],
PAN: [SNQ],
BTK: [YSY],
JLQ: [SNQ, DQW],
MIP: [SNQ],
EKW: [SNQ, DQW, WCY],
VBZ: [YSY, DQW],
FXP: [DQW]}","Node YSY is connected to nodes VUF, BTK, VBZ.
Node SNQ is connected to nodes VUF, PAN, JLQ, MIP, EKW.
Node DQW is connected to nodes JLQ, EKW, VBZ, FXP.
Node WCY is connected to node EKW.
Node VUF is connected to nodes YSY, SNQ.
Node PAN is connected to node SNQ.
Node BTK is connected to node YSY.
Node JLQ is connected to nodes SNQ, DQW.
Node MIP is connected to node SNQ.
Node EKW is connected to nodes SNQ, DQW, WCY.
Node VBZ is connected to nodes YSY, DQW.
Node FXP is connected to node DQW.","[YSY, SNQ, DQW, WCY, VUF, PAN, BTK, JLQ, MIP, EKW, VBZ, FXP]",12,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YSY SNQ DQW WCY.
Nodes set 2 contains: VUF PAN BTK JLQ MIP EKW VBZ FXP.","[(YSY, BTK), (SNQ, VUF), (DQW, JLQ), (WCY, EKW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YSY. Updated matching: {VUF: YSY}.
Search from node SNQ. Updated matching: {VUF: SNQ, BTK: YSY}.
Search from node DQW. Updated matching: {VUF: SNQ, BTK: YSY, JLQ: DQW}.
Search from node WCY. Updated matching: {VUF: SNQ, BTK: YSY, JLQ: DQW, EKW: WCY}.
So the maximum matching is ",4,8,173
bipartite,"[(JNW, UBB), (JNW, BXB), (JNW, ZCI), (TOJ, MQD), (TOJ, URU), (EXX, UBB), (EXX, ELR), (EXX, BXB), (EXX, QDJ), (EXX, ZCI), (MWK, MQD), (MWK, UBB), (MWK, URU), (MWK, ELR), (MWK, BXB), (MWK, ZCI), (MWK, BSL)]","{JNW: [UBB, BXB, ZCI],
TOJ: [MQD, URU],
EXX: [UBB, ELR, BXB, QDJ, ZCI],
MWK: [MQD, UBB, URU, ELR, BXB, ZCI, BSL],
MQD: [TOJ, MWK],
UBB: [JNW, EXX, MWK],
URU: [TOJ, MWK],
ELR: [EXX, MWK],
BXB: [JNW, EXX, MWK],
QDJ: [EXX],
ZCI: [JNW, EXX, MWK],
BSL: [MWK]}","Node JNW is connected to nodes UBB, BXB, ZCI.
Node TOJ is connected to nodes MQD, URU.
Node EXX is connected to nodes UBB, ELR, BXB, QDJ, ZCI.
Node MWK is connected to nodes MQD, UBB, URU, ELR, BXB, ZCI, BSL.
Node MQD is connected to nodes TOJ, MWK.
Node UBB is connected to nodes JNW, EXX, MWK.
Node URU is connected to nodes TOJ, MWK.
Node ELR is connected to nodes EXX, MWK.
Node BXB is connected to nodes JNW, EXX, MWK.
Node QDJ is connected to node EXX.
Node ZCI is connected to nodes JNW, EXX, MWK.
Node BSL is connected to node MWK.","[JNW, TOJ, EXX, MWK, MQD, UBB, URU, ELR, BXB, QDJ, ZCI, BSL]",12,17,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JNW TOJ EXX MWK.
Nodes set 2 contains: MQD UBB URU ELR BXB QDJ ZCI BSL.","[(JNW, BXB), (TOJ, URU), (EXX, UBB), (MWK, MQD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JNW. Updated matching: {UBB: JNW}.
Search from node TOJ. Updated matching: {UBB: JNW, MQD: TOJ}.
Search from node EXX. Updated matching: {UBB: EXX, MQD: TOJ, BXB: JNW}.
Search from node MWK. Updated matching: {UBB: EXX, MQD: MWK, BXB: JNW, URU: TOJ}.
So the maximum matching is ",4,8,174
bipartite,"[(SEO, RYE), (SEO, UZU), (SEO, ABW), (YDH, YSO), (YDH, RYE), (YDH, UZU), (XOR, YSO), (XOR, RYE), (XOR, SJF)]","{SEO: [RYE, UZU, ABW],
YDH: [YSO, RYE, UZU],
XOR: [YSO, RYE, SJF],
YSO: [YDH, XOR],
RYE: [SEO, YDH, XOR],
UZU: [SEO, YDH],
SJF: [XOR],
ABW: [SEO]}","Node SEO is connected to nodes RYE, UZU, ABW.
Node YDH is connected to nodes YSO, RYE, UZU.
Node XOR is connected to nodes YSO, RYE, SJF.
Node YSO is connected to nodes YDH, XOR.
Node RYE is connected to nodes SEO, YDH, XOR.
Node UZU is connected to nodes SEO, YDH.
Node SJF is connected to node XOR.
Node ABW is connected to node SEO.","[SEO, YDH, XOR, YSO, RYE, UZU, SJF, ABW]",8,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SEO YDH XOR.
Nodes set 2 contains: YSO RYE UZU SJF ABW.","[(SEO, UZU), (YDH, RYE), (XOR, YSO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SEO. Updated matching: {RYE: SEO}.
Search from node YDH. Updated matching: {RYE: SEO, YSO: YDH}.
Search from node XOR. Updated matching: {RYE: YDH, YSO: XOR, UZU: SEO}.
So the maximum matching is ",3,5,175
bipartite,"[(FYH, HQU), (FYH, JCS), (BWA, RGM), (BWA, OJI), (WOP, OBQ), (WOP, NTE), (USJ, NTE), (USJ, QXK), (WMX, HQU), (WMX, RGM), (AMU, NTE), (AMU, JCS), (AMU, KHV), (AMU, QXK)]","{FYH: [HQU, JCS],
BWA: [RGM, OJI],
WOP: [OBQ, NTE],
USJ: [NTE, QXK],
WMX: [HQU, RGM],
AMU: [NTE, JCS, KHV, QXK],
OBQ: [WOP],
HQU: [FYH, WMX],
RGM: [BWA, WMX],
NTE: [WOP, USJ, AMU],
JCS: [FYH, AMU],
KHV: [AMU],
OJI: [BWA],
QXK: [USJ, AMU]}","Node FYH is connected to nodes HQU, JCS.
Node BWA is connected to nodes RGM, OJI.
Node WOP is connected to nodes OBQ, NTE.
Node USJ is connected to nodes NTE, QXK.
Node WMX is connected to nodes HQU, RGM.
Node AMU is connected to nodes NTE, JCS, KHV, QXK.
Node OBQ is connected to node WOP.
Node HQU is connected to nodes FYH, WMX.
Node RGM is connected to nodes BWA, WMX.
Node NTE is connected to nodes WOP, USJ, AMU.
Node JCS is connected to nodes FYH, AMU.
Node KHV is connected to node AMU.
Node OJI is connected to node BWA.
Node QXK is connected to nodes USJ, AMU.","[FYH, BWA, WOP, USJ, WMX, AMU, OBQ, HQU, RGM, NTE, JCS, KHV, OJI, QXK]",14,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FYH BWA WOP USJ WMX AMU.
Nodes set 2 contains: OBQ HQU RGM NTE JCS KHV OJI QXK.","[(FYH, JCS), (BWA, RGM), (WOP, OBQ), (USJ, QXK), (WMX, HQU), (AMU, NTE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FYH. Updated matching: {HQU: FYH}.
Search from node BWA. Updated matching: {HQU: FYH, RGM: BWA}.
Search from node WOP. Updated matching: {HQU: FYH, RGM: BWA, OBQ: WOP}.
Search from node USJ. Updated matching: {HQU: FYH, RGM: BWA, OBQ: WOP, NTE: USJ}.
Search from node WMX. Updated matching: {HQU: WMX, RGM: BWA, OBQ: WOP, NTE: USJ, JCS: FYH}.
Search from node AMU. Updated matching: {HQU: WMX, RGM: BWA, OBQ: WOP, NTE: AMU, JCS: FYH, QXK: USJ}.
So the maximum matching is ",6,8,176
bipartite,"[(JUX, NWD), (JUX, MZM), (JUX, NWP), (JUX, VSP), (JUX, HQJ), (JUX, MKG), (EHQ, ZVO), (EHQ, NWP), (EHQ, NGJ), (EHQ, QOG), (EHQ, MKG), (DQM, ZVO), (DQM, NWP), (DQM, NGJ)]","{JUX: [NWD, MZM, NWP, VSP, HQJ, MKG],
EHQ: [ZVO, NWP, NGJ, QOG, MKG],
DQM: [ZVO, NWP, NGJ],
NWD: [JUX],
MZM: [JUX],
ZVO: [EHQ, DQM],
NWP: [JUX, EHQ, DQM],
VSP: [JUX],
HQJ: [JUX],
NGJ: [EHQ, DQM],
QOG: [EHQ],
MKG: [JUX, EHQ]}","Node JUX is connected to nodes NWD, MZM, NWP, VSP, HQJ, MKG.
Node EHQ is connected to nodes ZVO, NWP, NGJ, QOG, MKG.
Node DQM is connected to nodes ZVO, NWP, NGJ.
Node NWD is connected to node JUX.
Node MZM is connected to node JUX.
Node ZVO is connected to nodes EHQ, DQM.
Node NWP is connected to nodes JUX, EHQ, DQM.
Node VSP is connected to node JUX.
Node HQJ is connected to node JUX.
Node NGJ is connected to nodes EHQ, DQM.
Node QOG is connected to node EHQ.
Node MKG is connected to nodes JUX, EHQ.","[JUX, EHQ, DQM, NWD, MZM, ZVO, NWP, VSP, HQJ, NGJ, QOG, MKG]",12,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JUX EHQ DQM.
Nodes set 2 contains: NWD MZM ZVO NWP VSP HQJ NGJ QOG MKG.","[(JUX, NWD), (EHQ, NWP), (DQM, ZVO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JUX. Updated matching: {NWD: JUX}.
Search from node EHQ. Updated matching: {NWD: JUX, ZVO: EHQ}.
Search from node DQM. Updated matching: {NWD: JUX, ZVO: DQM, NWP: EHQ}.
So the maximum matching is ",3,9,177
bipartite,"[(YAA, IKJ), (YAA, FMP), (YAA, BBW), (JZE, LZW), (JZE, BBW), (JZE, ZJU), (ZRE, LZW), (ZRE, FMP), (ZAT, JAD), (ZAT, LZW)]","{YAA: [IKJ, FMP, BBW],
JZE: [LZW, BBW, ZJU],
ZRE: [LZW, FMP],
ZAT: [JAD, LZW],
IKJ: [YAA],
JAD: [ZAT],
LZW: [JZE, ZRE, ZAT],
FMP: [YAA, ZRE],
BBW: [YAA, JZE],
ZJU: [JZE]}","Node YAA is connected to nodes IKJ, FMP, BBW.
Node JZE is connected to nodes LZW, BBW, ZJU.
Node ZRE is connected to nodes LZW, FMP.
Node ZAT is connected to nodes JAD, LZW.
Node IKJ is connected to node YAA.
Node JAD is connected to node ZAT.
Node LZW is connected to nodes JZE, ZRE, ZAT.
Node FMP is connected to nodes YAA, ZRE.
Node BBW is connected to nodes YAA, JZE.
Node ZJU is connected to node JZE.","[YAA, JZE, ZRE, ZAT, IKJ, JAD, LZW, FMP, BBW, ZJU]",10,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YAA JZE ZRE ZAT.
Nodes set 2 contains: IKJ JAD LZW FMP BBW ZJU.","[(YAA, IKJ), (JZE, BBW), (ZRE, LZW), (ZAT, JAD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YAA. Updated matching: {IKJ: YAA}.
Search from node JZE. Updated matching: {IKJ: YAA, LZW: JZE}.
Search from node ZRE. Updated matching: {IKJ: YAA, LZW: ZRE, BBW: JZE}.
Search from node ZAT. Updated matching: {IKJ: YAA, LZW: ZRE, BBW: JZE, JAD: ZAT}.
So the maximum matching is ",4,6,178
bipartite,"[(USR, HRW), (USR, RTV), (USR, UBY), (GSU, GBW), (GSU, KDY), (GSU, DTW), (GSU, YQM), (GSU, RTV), (QII, GBW), (QII, HBY), (QII, HRW), (QII, YQM)]","{USR: [HRW, RTV, UBY],
GSU: [GBW, KDY, DTW, YQM, RTV],
QII: [GBW, HBY, HRW, YQM],
GBW: [GSU, QII],
KDY: [GSU],
HBY: [QII],
HRW: [USR, QII],
DTW: [GSU],
YQM: [GSU, QII],
RTV: [USR, GSU],
UBY: [USR]}","Node USR is connected to nodes HRW, RTV, UBY.
Node GSU is connected to nodes GBW, KDY, DTW, YQM, RTV.
Node QII is connected to nodes GBW, HBY, HRW, YQM.
Node GBW is connected to nodes GSU, QII.
Node KDY is connected to node GSU.
Node HBY is connected to node QII.
Node HRW is connected to nodes USR, QII.
Node DTW is connected to node GSU.
Node YQM is connected to nodes GSU, QII.
Node RTV is connected to nodes USR, GSU.
Node UBY is connected to node USR.","[USR, GSU, QII, GBW, KDY, HBY, HRW, DTW, YQM, RTV, UBY]",11,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: USR GSU QII.
Nodes set 2 contains: GBW KDY HBY HRW DTW YQM RTV UBY.","[(USR, HRW), (GSU, KDY), (QII, GBW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node USR. Updated matching: {HRW: USR}.
Search from node GSU. Updated matching: {HRW: USR, GBW: GSU}.
Search from node QII. Updated matching: {HRW: USR, GBW: QII, KDY: GSU}.
So the maximum matching is ",3,8,179
bipartite,"[(DWL, OGS), (DWL, AVL), (DWL, SCF), (CBI, OGS), (CBI, EGX), (CBI, OXC), (LBQ, OGS), (LBQ, EGX), (LUX, EGX), (LUX, CUB), (LUX, VUS), (LUX, OXC), (ZFJ, CUB), (ZFJ, AVL), (ZFJ, DUO), (ZFJ, OXC), (SPW, CUB), (SPW, VUS), (SPW, AVL), (SPW, DUO), (SZU, VUS), (SZU, SCF)]","{DWL: [OGS, AVL, SCF],
CBI: [OGS, EGX, OXC],
LBQ: [OGS, EGX],
LUX: [EGX, CUB, VUS, OXC],
ZFJ: [CUB, AVL, DUO, OXC],
SPW: [CUB, VUS, AVL, DUO],
SZU: [VUS, SCF],
OGS: [DWL, CBI, LBQ],
EGX: [CBI, LBQ, LUX],
CUB: [LUX, ZFJ, SPW],
VUS: [LUX, SPW, SZU],
AVL: [DWL, ZFJ, SPW],
SCF: [DWL, SZU],
DUO: [ZFJ, SPW],
OXC: [CBI, LUX, ZFJ]}","Node DWL is connected to nodes OGS, AVL, SCF.
Node CBI is connected to nodes OGS, EGX, OXC.
Node LBQ is connected to nodes OGS, EGX.
Node LUX is connected to nodes EGX, CUB, VUS, OXC.
Node ZFJ is connected to nodes CUB, AVL, DUO, OXC.
Node SPW is connected to nodes CUB, VUS, AVL, DUO.
Node SZU is connected to nodes VUS, SCF.
Node OGS is connected to nodes DWL, CBI, LBQ.
Node EGX is connected to nodes CBI, LBQ, LUX.
Node CUB is connected to nodes LUX, ZFJ, SPW.
Node VUS is connected to nodes LUX, SPW, SZU.
Node AVL is connected to nodes DWL, ZFJ, SPW.
Node SCF is connected to nodes DWL, SZU.
Node DUO is connected to nodes ZFJ, SPW.
Node OXC is connected to nodes CBI, LUX, ZFJ.","[DWL, CBI, LBQ, LUX, ZFJ, SPW, SZU, OGS, EGX, CUB, VUS, AVL, SCF, DUO, OXC]",15,22,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DWL CBI LBQ LUX ZFJ SPW SZU.
Nodes set 2 contains: OGS EGX CUB VUS AVL SCF DUO OXC.","[(DWL, AVL), (CBI, OXC), (LBQ, OGS), (LUX, EGX), (ZFJ, CUB), (SPW, DUO), (SZU, VUS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DWL. Updated matching: {OGS: DWL}.
Search from node CBI. Updated matching: {OGS: CBI, AVL: DWL}.
Search from node LBQ. Updated matching: {OGS: LBQ, AVL: DWL, EGX: CBI}.
Search from node LUX. Updated matching: {OGS: LBQ, AVL: DWL, EGX: LUX, OXC: CBI}.
Search from node ZFJ. Updated matching: {OGS: LBQ, AVL: DWL, EGX: LUX, OXC: CBI, CUB: ZFJ}.
Search from node SPW. Updated matching: {OGS: DWL, AVL: ZFJ, EGX: LBQ, OXC: CBI, CUB: SPW, VUS: LUX}.
Search from node SZU. Updated matching: {OGS: LBQ, AVL: DWL, EGX: LUX, OXC: CBI, CUB: ZFJ, VUS: SZU, DUO: SPW}.
So the maximum matching is ",7,8,180
bipartite,"[(UNB, RPW), (UNB, TSV), (NXO, HUV), (NXO, VBC), (NXO, YYP), (NXO, OGM), (NXO, TSV), (NXO, YPH), (ATK, HUV), (ATK, WLN), (ATK, VBC), (ATK, OGM), (ATK, YPH), (GWN, HUV), (GWN, WLN), (GWN, YYP), (GWN, TSV), (GWN, YPH), (GWN, KKA), (YQR, YPH), (YQR, KKA)]","{UNB: [RPW, TSV],
NXO: [HUV, VBC, YYP, OGM, TSV, YPH],
ATK: [HUV, WLN, VBC, OGM, YPH],
GWN: [HUV, WLN, YYP, TSV, YPH, KKA],
YQR: [YPH, KKA],
HUV: [NXO, ATK, GWN],
WLN: [ATK, GWN],
RPW: [UNB],
VBC: [NXO, ATK],
YYP: [NXO, GWN],
OGM: [NXO, ATK],
TSV: [UNB, NXO, GWN],
YPH: [NXO, ATK, GWN, YQR],
KKA: [GWN, YQR]}","Node UNB is connected to nodes RPW, TSV.
Node NXO is connected to nodes HUV, VBC, YYP, OGM, TSV, YPH.
Node ATK is connected to nodes HUV, WLN, VBC, OGM, YPH.
Node GWN is connected to nodes HUV, WLN, YYP, TSV, YPH, KKA.
Node YQR is connected to nodes YPH, KKA.
Node HUV is connected to nodes NXO, ATK, GWN.
Node WLN is connected to nodes ATK, GWN.
Node RPW is connected to node UNB.
Node VBC is connected to nodes NXO, ATK.
Node YYP is connected to nodes NXO, GWN.
Node OGM is connected to nodes NXO, ATK.
Node TSV is connected to nodes UNB, NXO, GWN.
Node YPH is connected to nodes NXO, ATK, GWN, YQR.
Node KKA is connected to nodes GWN, YQR.","[UNB, NXO, ATK, GWN, YQR, HUV, WLN, RPW, VBC, YYP, OGM, TSV, YPH, KKA]",14,21,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UNB NXO ATK GWN YQR.
Nodes set 2 contains: HUV WLN RPW VBC YYP OGM TSV YPH KKA.","[(UNB, RPW), (NXO, VBC), (ATK, WLN), (GWN, HUV), (YQR, YPH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UNB. Updated matching: {RPW: UNB}.
Search from node NXO. Updated matching: {RPW: UNB, HUV: NXO}.
Search from node ATK. Updated matching: {RPW: UNB, HUV: ATK, VBC: NXO}.
Search from node GWN. Updated matching: {RPW: UNB, HUV: GWN, VBC: NXO, WLN: ATK}.
Search from node YQR. Updated matching: {RPW: UNB, HUV: GWN, VBC: NXO, WLN: ATK, YPH: YQR}.
So the maximum matching is ",5,9,181
bipartite,"[(JME, LOP), (JME, AZW), (JME, KWH), (JME, PHJ), (JME, JPK), (BAA, AZW), (UTN, PHJ)]","{JME: [LOP, AZW, KWH, PHJ, JPK],
BAA: [AZW],
UTN: [PHJ],
LOP: [JME],
AZW: [JME, BAA],
KWH: [JME],
PHJ: [JME, UTN],
JPK: [JME]}","Node JME is connected to nodes LOP, AZW, KWH, PHJ, JPK.
Node BAA is connected to node AZW.
Node UTN is connected to node PHJ.
Node LOP is connected to node JME.
Node AZW is connected to nodes JME, BAA.
Node KWH is connected to node JME.
Node PHJ is connected to nodes JME, UTN.
Node JPK is connected to node JME.","[JME, BAA, UTN, LOP, AZW, KWH, PHJ, JPK]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JME BAA UTN.
Nodes set 2 contains: LOP AZW KWH PHJ JPK.","[(JME, LOP), (BAA, AZW), (UTN, PHJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JME. Updated matching: {LOP: JME}.
Search from node BAA. Updated matching: {LOP: JME, AZW: BAA}.
Search from node UTN. Updated matching: {LOP: JME, AZW: BAA, PHJ: UTN}.
So the maximum matching is ",3,5,182
bipartite,"[(JTE, GZK), (JTE, XIS), (JTE, DNG), (JTE, UFE), (DIY, CBB), (DIY, XIS), (AUU, OMK), (AUU, GZK), (AUU, IMZ), (NTY, GZK), (GJO, XIS), (GJO, UFE), (GJO, YQH)]","{JTE: [GZK, XIS, DNG, UFE],
DIY: [CBB, XIS],
AUU: [OMK, GZK, IMZ],
NTY: [GZK],
GJO: [XIS, UFE, YQH],
OMK: [AUU],
CBB: [DIY],
GZK: [JTE, AUU, NTY],
IMZ: [AUU],
XIS: [JTE, DIY, GJO],
DNG: [JTE],
UFE: [JTE, GJO],
YQH: [GJO]}","Node JTE is connected to nodes GZK, XIS, DNG, UFE.
Node DIY is connected to nodes CBB, XIS.
Node AUU is connected to nodes OMK, GZK, IMZ.
Node NTY is connected to node GZK.
Node GJO is connected to nodes XIS, UFE, YQH.
Node OMK is connected to node AUU.
Node CBB is connected to node DIY.
Node GZK is connected to nodes JTE, AUU, NTY.
Node IMZ is connected to node AUU.
Node XIS is connected to nodes JTE, DIY, GJO.
Node DNG is connected to node JTE.
Node UFE is connected to nodes JTE, GJO.
Node YQH is connected to node GJO.","[JTE, DIY, AUU, NTY, GJO, OMK, CBB, GZK, IMZ, XIS, DNG, UFE, YQH]",13,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JTE DIY AUU NTY GJO.
Nodes set 2 contains: OMK CBB GZK IMZ XIS DNG UFE YQH.","[(JTE, DNG), (DIY, CBB), (AUU, OMK), (NTY, GZK), (GJO, XIS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JTE. Updated matching: {GZK: JTE}.
Search from node DIY. Updated matching: {GZK: JTE, CBB: DIY}.
Search from node AUU. Updated matching: {GZK: JTE, CBB: DIY, OMK: AUU}.
Search from node NTY. Updated matching: {GZK: NTY, CBB: DIY, OMK: AUU, XIS: JTE}.
Search from node GJO. Updated matching: {GZK: NTY, CBB: DIY, OMK: AUU, XIS: GJO, DNG: JTE}.
So the maximum matching is ",5,8,183
bipartite,"[(GKD, AVP), (GKD, YFU), (GKD, VQV), (GKD, IYJ), (YMS, HQR), (YMS, YFU), (YMS, IYJ), (YMS, COD), (WLW, YFU), (WLW, COD)]","{GKD: [AVP, YFU, VQV, IYJ],
YMS: [HQR, YFU, IYJ, COD],
WLW: [YFU, COD],
AVP: [GKD],
HQR: [YMS],
YFU: [GKD, YMS, WLW],
VQV: [GKD],
IYJ: [GKD, YMS],
COD: [YMS, WLW]}","Node GKD is connected to nodes AVP, YFU, VQV, IYJ.
Node YMS is connected to nodes HQR, YFU, IYJ, COD.
Node WLW is connected to nodes YFU, COD.
Node AVP is connected to node GKD.
Node HQR is connected to node YMS.
Node YFU is connected to nodes GKD, YMS, WLW.
Node VQV is connected to node GKD.
Node IYJ is connected to nodes GKD, YMS.
Node COD is connected to nodes YMS, WLW.","[GKD, YMS, WLW, AVP, HQR, YFU, VQV, IYJ, COD]",9,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GKD YMS WLW.
Nodes set 2 contains: AVP HQR YFU VQV IYJ COD.","[(GKD, AVP), (YMS, HQR), (WLW, YFU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GKD. Updated matching: {AVP: GKD}.
Search from node YMS. Updated matching: {AVP: GKD, HQR: YMS}.
Search from node WLW. Updated matching: {AVP: GKD, HQR: YMS, YFU: WLW}.
So the maximum matching is ",3,6,184
bipartite,"[(FVM, NGW), (FVM, OCT), (FVM, WZY), (GAX, OCT), (GAX, ITX), (GAX, JWA), (ILL, WZY)]","{FVM: [NGW, OCT, WZY],
GAX: [OCT, ITX, JWA],
ILL: [WZY],
NGW: [FVM],
OCT: [FVM, GAX],
ITX: [GAX],
JWA: [GAX],
WZY: [FVM, ILL]}","Node FVM is connected to nodes NGW, OCT, WZY.
Node GAX is connected to nodes OCT, ITX, JWA.
Node ILL is connected to node WZY.
Node NGW is connected to node FVM.
Node OCT is connected to nodes FVM, GAX.
Node ITX is connected to node GAX.
Node JWA is connected to node GAX.
Node WZY is connected to nodes FVM, ILL.","[FVM, GAX, ILL, NGW, OCT, ITX, JWA, WZY]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FVM GAX ILL.
Nodes set 2 contains: NGW OCT ITX JWA WZY.","[(FVM, NGW), (GAX, OCT), (ILL, WZY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FVM. Updated matching: {NGW: FVM}.
Search from node GAX. Updated matching: {NGW: FVM, OCT: GAX}.
Search from node ILL. Updated matching: {NGW: FVM, OCT: GAX, WZY: ILL}.
So the maximum matching is ",3,5,185
bipartite,"[(FVP, SOS), (FVP, IVP), (NNO, IVP), (NNO, ERW), (DEE, SOS), (DEE, XJN), (DEE, DAA), (DRZ, DAA), (DRZ, PCK)]","{FVP: [SOS, IVP],
NNO: [IVP, ERW],
DEE: [SOS, XJN, DAA],
DRZ: [DAA, PCK],
SOS: [FVP, DEE],
IVP: [FVP, NNO],
ERW: [NNO],
XJN: [DEE],
DAA: [DEE, DRZ],
PCK: [DRZ]}","Node FVP is connected to nodes SOS, IVP.
Node NNO is connected to nodes IVP, ERW.
Node DEE is connected to nodes SOS, XJN, DAA.
Node DRZ is connected to nodes DAA, PCK.
Node SOS is connected to nodes FVP, DEE.
Node IVP is connected to nodes FVP, NNO.
Node ERW is connected to node NNO.
Node XJN is connected to node DEE.
Node DAA is connected to nodes DEE, DRZ.
Node PCK is connected to node DRZ.","[FVP, NNO, DEE, DRZ, SOS, IVP, ERW, XJN, DAA, PCK]",10,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FVP NNO DEE DRZ.
Nodes set 2 contains: SOS IVP ERW XJN DAA PCK.","[(FVP, IVP), (NNO, ERW), (DEE, SOS), (DRZ, DAA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FVP. Updated matching: {SOS: FVP}.
Search from node NNO. Updated matching: {SOS: FVP, IVP: NNO}.
Search from node DEE. Updated matching: {SOS: DEE, IVP: FVP, ERW: NNO}.
Search from node DRZ. Updated matching: {SOS: DEE, IVP: FVP, ERW: NNO, DAA: DRZ}.
So the maximum matching is ",4,6,186
bipartite,"[(WLD, AFH), (WLD, WBS), (WLD, RJB), (WLD, ESP), (OIW, RJB), (OIW, DTK), (JYK, RJB), (JYK, ESP), (MGQ, ESP), (MGQ, LYF), (MOR, SOF), (MOR, BUV), (MOR, RJB), (MOR, DTK)]","{WLD: [AFH, WBS, RJB, ESP],
OIW: [RJB, DTK],
JYK: [RJB, ESP],
MGQ: [ESP, LYF],
MOR: [SOF, BUV, RJB, DTK],
SOF: [MOR],
AFH: [WLD],
BUV: [MOR],
WBS: [WLD],
RJB: [WLD, OIW, JYK, MOR],
ESP: [WLD, JYK, MGQ],
DTK: [OIW, MOR],
LYF: [MGQ]}","Node WLD is connected to nodes AFH, WBS, RJB, ESP.
Node OIW is connected to nodes RJB, DTK.
Node JYK is connected to nodes RJB, ESP.
Node MGQ is connected to nodes ESP, LYF.
Node MOR is connected to nodes SOF, BUV, RJB, DTK.
Node SOF is connected to node MOR.
Node AFH is connected to node WLD.
Node BUV is connected to node MOR.
Node WBS is connected to node WLD.
Node RJB is connected to nodes WLD, OIW, JYK, MOR.
Node ESP is connected to nodes WLD, JYK, MGQ.
Node DTK is connected to nodes OIW, MOR.
Node LYF is connected to node MGQ.","[WLD, OIW, JYK, MGQ, MOR, SOF, AFH, BUV, WBS, RJB, ESP, DTK, LYF]",13,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WLD OIW JYK MGQ MOR.
Nodes set 2 contains: SOF AFH BUV WBS RJB ESP DTK LYF.","[(WLD, AFH), (OIW, DTK), (JYK, RJB), (MGQ, ESP), (MOR, SOF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WLD. Updated matching: {AFH: WLD}.
Search from node OIW. Updated matching: {AFH: WLD, RJB: OIW}.
Search from node JYK. Updated matching: {AFH: WLD, RJB: JYK, DTK: OIW}.
Search from node MGQ. Updated matching: {AFH: WLD, RJB: JYK, DTK: OIW, ESP: MGQ}.
Search from node MOR. Updated matching: {AFH: WLD, RJB: JYK, DTK: OIW, ESP: MGQ, SOF: MOR}.
So the maximum matching is ",5,8,187
bipartite,"[(MTT, GRS), (MTT, VEN), (MTT, DMO), (XGB, WHY), (XGB, JOQ), (XGB, VEN), (XGB, CBP)]","{MTT: [GRS, VEN, DMO],
XGB: [WHY, JOQ, VEN, CBP],
GRS: [MTT],
WHY: [XGB],
JOQ: [XGB],
VEN: [MTT, XGB],
DMO: [MTT],
CBP: [XGB]}","Node MTT is connected to nodes GRS, VEN, DMO.
Node XGB is connected to nodes WHY, JOQ, VEN, CBP.
Node GRS is connected to node MTT.
Node WHY is connected to node XGB.
Node JOQ is connected to node XGB.
Node VEN is connected to nodes MTT, XGB.
Node DMO is connected to node MTT.
Node CBP is connected to node XGB.","[MTT, XGB, GRS, WHY, JOQ, VEN, DMO, CBP]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MTT XGB.
Nodes set 2 contains: GRS WHY JOQ VEN DMO CBP.","[(MTT, GRS), (XGB, WHY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MTT. Updated matching: {GRS: MTT}.
Search from node XGB. Updated matching: {GRS: MTT, WHY: XGB}.
So the maximum matching is ",2,6,188
bipartite,"[(MLR, TCX), (MLR, FIY), (MLR, PIN), (TWF, ZCI), (TWF, OCL), (PBW, TCX), (PBW, OCL)]","{MLR: [TCX, FIY, PIN],
TWF: [ZCI, OCL],
PBW: [TCX, OCL],
TCX: [MLR, PBW],
FIY: [MLR],
PIN: [MLR],
ZCI: [TWF],
OCL: [TWF, PBW]}","Node MLR is connected to nodes TCX, FIY, PIN.
Node TWF is connected to nodes ZCI, OCL.
Node PBW is connected to nodes TCX, OCL.
Node TCX is connected to nodes MLR, PBW.
Node FIY is connected to node MLR.
Node PIN is connected to node MLR.
Node ZCI is connected to node TWF.
Node OCL is connected to nodes TWF, PBW.","[MLR, TWF, PBW, TCX, FIY, PIN, ZCI, OCL]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MLR TWF PBW.
Nodes set 2 contains: TCX FIY PIN ZCI OCL.","[(MLR, FIY), (TWF, ZCI), (PBW, TCX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MLR. Updated matching: {TCX: MLR}.
Search from node TWF. Updated matching: {TCX: MLR, ZCI: TWF}.
Search from node PBW. Updated matching: {TCX: PBW, ZCI: TWF, FIY: MLR}.
So the maximum matching is ",3,5,189
bipartite,"[(XJI, WHD), (XJI, HXW), (ETU, HXW), (ETU, VPB), (UQK, WHD), (UQK, OWZ), (UQK, CRG), (XLC, OWZ), (XLC, DSS), (XLC, IQS)]","{XJI: [WHD, HXW],
ETU: [HXW, VPB],
UQK: [WHD, OWZ, CRG],
XLC: [OWZ, DSS, IQS],
WHD: [XJI, UQK],
OWZ: [UQK, XLC],
HXW: [XJI, ETU],
VPB: [ETU],
DSS: [XLC],
IQS: [XLC],
CRG: [UQK]}","Node XJI is connected to nodes WHD, HXW.
Node ETU is connected to nodes HXW, VPB.
Node UQK is connected to nodes WHD, OWZ, CRG.
Node XLC is connected to nodes OWZ, DSS, IQS.
Node WHD is connected to nodes XJI, UQK.
Node OWZ is connected to nodes UQK, XLC.
Node HXW is connected to nodes XJI, ETU.
Node VPB is connected to node ETU.
Node DSS is connected to node XLC.
Node IQS is connected to node XLC.
Node CRG is connected to node UQK.","[XJI, ETU, UQK, XLC, WHD, OWZ, HXW, VPB, DSS, IQS, CRG]",11,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XJI ETU UQK XLC.
Nodes set 2 contains: WHD OWZ HXW VPB DSS IQS CRG.","[(XJI, HXW), (ETU, VPB), (UQK, WHD), (XLC, OWZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XJI. Updated matching: {WHD: XJI}.
Search from node ETU. Updated matching: {WHD: XJI, HXW: ETU}.
Search from node UQK. Updated matching: {WHD: UQK, HXW: XJI, VPB: ETU}.
Search from node XLC. Updated matching: {WHD: UQK, HXW: XJI, VPB: ETU, OWZ: XLC}.
So the maximum matching is ",4,7,190
bipartite,"[(KYL, AAE), (KYL, TMT), (HKS, ZVL), (HKS, ERK), (HKS, IHR), (HKS, MZC), (HKS, IUO), (PMG, ZVL), (PMG, MZC), (PMG, AAE), (PMG, RSX), (QST, ERK), (QST, IHR), (QST, IUO), (QST, RSX), (QST, TMT), (JMY, ZVL), (JMY, PEW), (JMY, TMT), (HTQ, ZVL), (HTQ, IHR), (HTQ, MZC), (HTQ, TMT)]","{KYL: [AAE, TMT],
HKS: [ZVL, ERK, IHR, MZC, IUO],
PMG: [ZVL, MZC, AAE, RSX],
QST: [ERK, IHR, IUO, RSX, TMT],
JMY: [ZVL, PEW, TMT],
HTQ: [ZVL, IHR, MZC, TMT],
ZVL: [HKS, PMG, JMY, HTQ],
ERK: [HKS, QST],
IHR: [HKS, QST, HTQ],
MZC: [HKS, PMG, HTQ],
IUO: [HKS, QST],
AAE: [KYL, PMG],
RSX: [PMG, QST],
PEW: [JMY],
TMT: [KYL, QST, JMY, HTQ]}","Node KYL is connected to nodes AAE, TMT.
Node HKS is connected to nodes ZVL, ERK, IHR, MZC, IUO.
Node PMG is connected to nodes ZVL, MZC, AAE, RSX.
Node QST is connected to nodes ERK, IHR, IUO, RSX, TMT.
Node JMY is connected to nodes ZVL, PEW, TMT.
Node HTQ is connected to nodes ZVL, IHR, MZC, TMT.
Node ZVL is connected to nodes HKS, PMG, JMY, HTQ.
Node ERK is connected to nodes HKS, QST.
Node IHR is connected to nodes HKS, QST, HTQ.
Node MZC is connected to nodes HKS, PMG, HTQ.
Node IUO is connected to nodes HKS, QST.
Node AAE is connected to nodes KYL, PMG.
Node RSX is connected to nodes PMG, QST.
Node PEW is connected to node JMY.
Node TMT is connected to nodes KYL, QST, JMY, HTQ.","[KYL, HKS, PMG, QST, JMY, HTQ, ZVL, ERK, IHR, MZC, IUO, AAE, RSX, PEW, TMT]",15,23,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: KYL HKS PMG QST JMY HTQ.
Nodes set 2 contains: ZVL ERK IHR MZC IUO AAE RSX PEW TMT.","[(KYL, AAE), (HKS, ERK), (PMG, MZC), (QST, IHR), (JMY, PEW), (HTQ, ZVL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node KYL. Updated matching: {AAE: KYL}.
Search from node HKS. Updated matching: {AAE: KYL, ZVL: HKS}.
Search from node PMG. Updated matching: {AAE: KYL, ZVL: PMG, ERK: HKS}.
Search from node QST. Updated matching: {AAE: KYL, ZVL: HKS, ERK: QST, MZC: PMG}.
Search from node JMY. Updated matching: {AAE: KYL, ZVL: JMY, ERK: HKS, MZC: PMG, IHR: QST}.
Search from node HTQ. Updated matching: {AAE: KYL, ZVL: HTQ, ERK: HKS, MZC: PMG, IHR: QST, PEW: JMY}.
So the maximum matching is ",6,9,191
bipartite,"[(GAI, JQN), (GAI, BTM), (GAI, OFR), (GAI, KKA), (PHR, BJS), (PHR, BTM), (PHR, OFR), (UHU, RWI), (UHU, SIV), (UHU, BTM), (UHU, KKA)]","{GAI: [JQN, BTM, OFR, KKA],
PHR: [BJS, BTM, OFR],
UHU: [RWI, SIV, BTM, KKA],
RWI: [UHU],
JQN: [GAI],
SIV: [UHU],
BJS: [PHR],
BTM: [GAI, PHR, UHU],
OFR: [GAI, PHR],
KKA: [GAI, UHU]}","Node GAI is connected to nodes JQN, BTM, OFR, KKA.
Node PHR is connected to nodes BJS, BTM, OFR.
Node UHU is connected to nodes RWI, SIV, BTM, KKA.
Node RWI is connected to node UHU.
Node JQN is connected to node GAI.
Node SIV is connected to node UHU.
Node BJS is connected to node PHR.
Node BTM is connected to nodes GAI, PHR, UHU.
Node OFR is connected to nodes GAI, PHR.
Node KKA is connected to nodes GAI, UHU.","[GAI, PHR, UHU, RWI, JQN, SIV, BJS, BTM, OFR, KKA]",10,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GAI PHR UHU.
Nodes set 2 contains: RWI JQN SIV BJS BTM OFR KKA.","[(GAI, JQN), (PHR, BJS), (UHU, RWI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GAI. Updated matching: {JQN: GAI}.
Search from node PHR. Updated matching: {JQN: GAI, BJS: PHR}.
Search from node UHU. Updated matching: {JQN: GAI, BJS: PHR, RWI: UHU}.
So the maximum matching is ",3,7,192
bipartite,"[(FNJ, UUF), (FNJ, FIJ), (FNJ, NAY), (FNJ, QJJ), (EGY, GQL), (EGY, KKP), (EGY, LQI), (LWI, GDQ), (LWI, FIJ), (LWI, NAY), (PNC, GQL), (PNC, UUF), (PNC, QJJ), (PNC, KKP)]","{FNJ: [UUF, FIJ, NAY, QJJ],
EGY: [GQL, KKP, LQI],
LWI: [GDQ, FIJ, NAY],
PNC: [GQL, UUF, QJJ, KKP],
GDQ: [LWI],
GQL: [EGY, PNC],
UUF: [FNJ, PNC],
FIJ: [FNJ, LWI],
NAY: [FNJ, LWI],
QJJ: [FNJ, PNC],
KKP: [EGY, PNC],
LQI: [EGY]}","Node FNJ is connected to nodes UUF, FIJ, NAY, QJJ.
Node EGY is connected to nodes GQL, KKP, LQI.
Node LWI is connected to nodes GDQ, FIJ, NAY.
Node PNC is connected to nodes GQL, UUF, QJJ, KKP.
Node GDQ is connected to node LWI.
Node GQL is connected to nodes EGY, PNC.
Node UUF is connected to nodes FNJ, PNC.
Node FIJ is connected to nodes FNJ, LWI.
Node NAY is connected to nodes FNJ, LWI.
Node QJJ is connected to nodes FNJ, PNC.
Node KKP is connected to nodes EGY, PNC.
Node LQI is connected to node EGY.","[FNJ, EGY, LWI, PNC, GDQ, GQL, UUF, FIJ, NAY, QJJ, KKP, LQI]",12,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FNJ EGY LWI PNC.
Nodes set 2 contains: GDQ GQL UUF FIJ NAY QJJ KKP LQI.","[(FNJ, UUF), (EGY, KKP), (LWI, GDQ), (PNC, GQL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FNJ. Updated matching: {UUF: FNJ}.
Search from node EGY. Updated matching: {UUF: FNJ, GQL: EGY}.
Search from node LWI. Updated matching: {UUF: FNJ, GQL: EGY, GDQ: LWI}.
Search from node PNC. Updated matching: {UUF: FNJ, GQL: PNC, GDQ: LWI, KKP: EGY}.
So the maximum matching is ",4,8,193
bipartite,"[(FFK, XZA), (FFK, VQQ), (FFK, QPS), (BNW, YXL), (BNW, XZA), (BNW, QPS), (BNW, WNZ), (GXW, FYO), (GXW, IEA), (GXW, QPS), (GXW, PWO), (DQD, IEA), (QQX, FYO), (QQX, IEA), (QQX, FXC), (CFZ, YXL), (CFZ, IEA), (CFZ, QPS)]","{FFK: [XZA, VQQ, QPS],
BNW: [YXL, XZA, QPS, WNZ],
GXW: [FYO, IEA, QPS, PWO],
DQD: [IEA],
QQX: [FYO, IEA, FXC],
CFZ: [YXL, IEA, QPS],
FYO: [GXW, QQX],
YXL: [BNW, CFZ],
XZA: [FFK, BNW],
VQQ: [FFK],
IEA: [GXW, DQD, QQX, CFZ],
QPS: [FFK, BNW, GXW, CFZ],
FXC: [QQX],
WNZ: [BNW],
PWO: [GXW]}","Node FFK is connected to nodes XZA, VQQ, QPS.
Node BNW is connected to nodes YXL, XZA, QPS, WNZ.
Node GXW is connected to nodes FYO, IEA, QPS, PWO.
Node DQD is connected to node IEA.
Node QQX is connected to nodes FYO, IEA, FXC.
Node CFZ is connected to nodes YXL, IEA, QPS.
Node FYO is connected to nodes GXW, QQX.
Node YXL is connected to nodes BNW, CFZ.
Node XZA is connected to nodes FFK, BNW.
Node VQQ is connected to node FFK.
Node IEA is connected to nodes GXW, DQD, QQX, CFZ.
Node QPS is connected to nodes FFK, BNW, GXW, CFZ.
Node FXC is connected to node QQX.
Node WNZ is connected to node BNW.
Node PWO is connected to node GXW.","[FFK, BNW, GXW, DQD, QQX, CFZ, FYO, YXL, XZA, VQQ, IEA, QPS, FXC, WNZ, PWO]",15,18,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FFK BNW GXW DQD QQX CFZ.
Nodes set 2 contains: FYO YXL XZA VQQ IEA QPS FXC WNZ PWO.","[(FFK, VQQ), (BNW, XZA), (GXW, QPS), (DQD, IEA), (QQX, FYO), (CFZ, YXL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FFK. Updated matching: {XZA: FFK}.
Search from node BNW. Updated matching: {XZA: FFK, YXL: BNW}.
Search from node GXW. Updated matching: {XZA: FFK, YXL: BNW, FYO: GXW}.
Search from node DQD. Updated matching: {XZA: FFK, YXL: BNW, FYO: GXW, IEA: DQD}.
Search from node QQX. Updated matching: {XZA: FFK, YXL: BNW, FYO: QQX, IEA: DQD, QPS: GXW}.
Search from node CFZ. Updated matching: {XZA: BNW, YXL: CFZ, FYO: QQX, IEA: DQD, QPS: GXW, VQQ: FFK}.
So the maximum matching is ",6,9,194
bipartite,"[(DZT, GLW), (DZT, FRB), (DZT, FQU), (DZT, UZY), (DZT, DOR), (LTY, VGS), (LTY, VFO), (LTY, GLW), (LTY, FRB), (LTY, UXE), (LTY, ZUT), (LTY, DOR), (QWO, VGS), (QWO, VCU), (DHP, VCU), (DHP, VFO), (DHP, BZR), (DHP, ZUT), (DHP, DOR)]","{DZT: [GLW, FRB, FQU, UZY, DOR],
LTY: [VGS, VFO, GLW, FRB, UXE, ZUT, DOR],
QWO: [VGS, VCU],
DHP: [VCU, VFO, BZR, ZUT, DOR],
VGS: [LTY, QWO],
VCU: [QWO, DHP],
VFO: [LTY, DHP],
BZR: [DHP],
GLW: [DZT, LTY],
FRB: [DZT, LTY],
UXE: [LTY],
FQU: [DZT],
ZUT: [LTY, DHP],
UZY: [DZT],
DOR: [DZT, LTY, DHP]}","Node DZT is connected to nodes GLW, FRB, FQU, UZY, DOR.
Node LTY is connected to nodes VGS, VFO, GLW, FRB, UXE, ZUT, DOR.
Node QWO is connected to nodes VGS, VCU.
Node DHP is connected to nodes VCU, VFO, BZR, ZUT, DOR.
Node VGS is connected to nodes LTY, QWO.
Node VCU is connected to nodes QWO, DHP.
Node VFO is connected to nodes LTY, DHP.
Node BZR is connected to node DHP.
Node GLW is connected to nodes DZT, LTY.
Node FRB is connected to nodes DZT, LTY.
Node UXE is connected to node LTY.
Node FQU is connected to node DZT.
Node ZUT is connected to nodes LTY, DHP.
Node UZY is connected to node DZT.
Node DOR is connected to nodes DZT, LTY, DHP.","[DZT, LTY, QWO, DHP, VGS, VCU, VFO, BZR, GLW, FRB, UXE, FQU, ZUT, UZY, DOR]",15,19,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DZT LTY QWO DHP.
Nodes set 2 contains: VGS VCU VFO BZR GLW FRB UXE FQU ZUT UZY DOR.","[(DZT, GLW), (LTY, VFO), (QWO, VGS), (DHP, VCU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DZT. Updated matching: {GLW: DZT}.
Search from node LTY. Updated matching: {GLW: DZT, VGS: LTY}.
Search from node QWO. Updated matching: {GLW: DZT, VGS: QWO, VFO: LTY}.
Search from node DHP. Updated matching: {GLW: DZT, VGS: QWO, VFO: LTY, VCU: DHP}.
So the maximum matching is ",4,11,195
bipartite,"[(OOB, CUR), (OOB, VAT), (OOB, VZT), (WZH, CUR), (WZH, GIH), (WZH, QUO), (WZH, VZT), (KYX, MVR), (KYX, VAT), (JTH, VAT), (JTH, QUO)]","{OOB: [CUR, VAT, VZT],
WZH: [CUR, GIH, QUO, VZT],
KYX: [MVR, VAT],
JTH: [VAT, QUO],
CUR: [OOB, WZH],
MVR: [KYX],
VAT: [OOB, KYX, JTH],
GIH: [WZH],
QUO: [WZH, JTH],
VZT: [OOB, WZH]}","Node OOB is connected to nodes CUR, VAT, VZT.
Node WZH is connected to nodes CUR, GIH, QUO, VZT.
Node KYX is connected to nodes MVR, VAT.
Node JTH is connected to nodes VAT, QUO.
Node CUR is connected to nodes OOB, WZH.
Node MVR is connected to node KYX.
Node VAT is connected to nodes OOB, KYX, JTH.
Node GIH is connected to node WZH.
Node QUO is connected to nodes WZH, JTH.
Node VZT is connected to nodes OOB, WZH.","[OOB, WZH, KYX, JTH, CUR, MVR, VAT, GIH, QUO, VZT]",10,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OOB WZH KYX JTH.
Nodes set 2 contains: CUR MVR VAT GIH QUO VZT.","[(OOB, CUR), (WZH, GIH), (KYX, MVR), (JTH, VAT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OOB. Updated matching: {CUR: OOB}.
Search from node WZH. Updated matching: {CUR: WZH, VAT: OOB}.
Search from node KYX. Updated matching: {CUR: WZH, VAT: OOB, MVR: KYX}.
Search from node JTH. Updated matching: {CUR: OOB, VAT: JTH, MVR: KYX, GIH: WZH}.
So the maximum matching is ",4,6,196
bipartite,"[(TYK, WAK), (TYK, OOU), (TYK, TSV), (TYK, ZPK), (TYK, KWL), (BDU, OOU), (BDU, ZPK), (GFW, WAK), (GFW, CYA), (GFW, TSV), (GFW, ZPK), (GFW, KWL)]","{TYK: [WAK, OOU, TSV, ZPK, KWL],
BDU: [OOU, ZPK],
GFW: [WAK, CYA, TSV, ZPK, KWL],
WAK: [TYK, GFW],
OOU: [TYK, BDU],
CYA: [GFW],
TSV: [TYK, GFW],
ZPK: [TYK, BDU, GFW],
KWL: [TYK, GFW]}","Node TYK is connected to nodes WAK, OOU, TSV, ZPK, KWL.
Node BDU is connected to nodes OOU, ZPK.
Node GFW is connected to nodes WAK, CYA, TSV, ZPK, KWL.
Node WAK is connected to nodes TYK, GFW.
Node OOU is connected to nodes TYK, BDU.
Node CYA is connected to node GFW.
Node TSV is connected to nodes TYK, GFW.
Node ZPK is connected to nodes TYK, BDU, GFW.
Node KWL is connected to nodes TYK, GFW.","[TYK, BDU, GFW, WAK, OOU, CYA, TSV, ZPK, KWL]",9,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TYK BDU GFW.
Nodes set 2 contains: WAK OOU CYA TSV ZPK KWL.","[(TYK, OOU), (BDU, ZPK), (GFW, WAK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TYK. Updated matching: {WAK: TYK}.
Search from node BDU. Updated matching: {WAK: TYK, OOU: BDU}.
Search from node GFW. Updated matching: {WAK: GFW, OOU: TYK, ZPK: BDU}.
So the maximum matching is ",3,6,197
bipartite,"[(NWM, WOI), (NWM, QNH), (KMY, EZV), (KMY, QNH), (KMY, VWU), (TBU, WOI), (TBU, EZV), (TBU, QNH), (TBU, VWU), (WYM, WOI), (WYM, QNH), (SYF, VAT), (SYF, EZV), (SYF, MML), (SYF, VWU), (WJV, VAT), (WJV, WOI), (WJV, JWD), (WJV, VWU), (OQA, PHL), (OQA, JWD), (OQA, QNH)]","{NWM: [WOI, QNH],
KMY: [EZV, QNH, VWU],
TBU: [WOI, EZV, QNH, VWU],
WYM: [WOI, QNH],
SYF: [VAT, EZV, MML, VWU],
WJV: [VAT, WOI, JWD, VWU],
OQA: [PHL, JWD, QNH],
PHL: [OQA],
VAT: [SYF, WJV],
WOI: [NWM, TBU, WYM, WJV],
EZV: [KMY, TBU, SYF],
JWD: [WJV, OQA],
QNH: [NWM, KMY, TBU, WYM, OQA],
MML: [SYF],
VWU: [KMY, TBU, SYF, WJV]}","Node NWM is connected to nodes WOI, QNH.
Node KMY is connected to nodes EZV, QNH, VWU.
Node TBU is connected to nodes WOI, EZV, QNH, VWU.
Node WYM is connected to nodes WOI, QNH.
Node SYF is connected to nodes VAT, EZV, MML, VWU.
Node WJV is connected to nodes VAT, WOI, JWD, VWU.
Node OQA is connected to nodes PHL, JWD, QNH.
Node PHL is connected to node OQA.
Node VAT is connected to nodes SYF, WJV.
Node WOI is connected to nodes NWM, TBU, WYM, WJV.
Node EZV is connected to nodes KMY, TBU, SYF.
Node JWD is connected to nodes WJV, OQA.
Node QNH is connected to nodes NWM, KMY, TBU, WYM, OQA.
Node MML is connected to node SYF.
Node VWU is connected to nodes KMY, TBU, SYF, WJV.","[NWM, KMY, TBU, WYM, SYF, WJV, OQA, PHL, VAT, WOI, EZV, JWD, QNH, MML, VWU]",15,22,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NWM KMY TBU WYM SYF WJV OQA.
Nodes set 2 contains: PHL VAT WOI EZV JWD QNH MML VWU.","[(NWM, QNH), (KMY, VWU), (TBU, EZV), (WYM, WOI), (SYF, MML), (WJV, VAT), (OQA, PHL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NWM. Updated matching: {WOI: NWM}.
Search from node KMY. Updated matching: {WOI: NWM, EZV: KMY}.
Search from node TBU. Updated matching: {WOI: TBU, EZV: KMY, QNH: NWM}.
Search from node WYM. Updated matching: {WOI: WYM, EZV: TBU, QNH: NWM, VWU: KMY}.
Search from node SYF. Updated matching: {WOI: WYM, EZV: TBU, QNH: NWM, VWU: KMY, VAT: SYF}.
Search from node WJV. Updated matching: {WOI: WYM, EZV: TBU, QNH: NWM, VWU: KMY, VAT: WJV, MML: SYF}.
Search from node OQA. Updated matching: {WOI: WYM, EZV: TBU, QNH: NWM, VWU: KMY, VAT: WJV, MML: SYF, PHL: OQA}.
So the maximum matching is ",7,8,198
bipartite,"[(YWH, IJX), (OZE, UAR), (OZE, BYZ), (YDR, UAR), (YDR, IJX), (YDR, LWT), (YDR, VAU), (HMM, XMD), (HMM, BYZ), (HMM, LWT), (HMM, VAU)]","{YWH: [IJX],
OZE: [UAR, BYZ],
YDR: [UAR, IJX, LWT, VAU],
HMM: [XMD, BYZ, LWT, VAU],
UAR: [OZE, YDR],
XMD: [HMM],
BYZ: [OZE, HMM],
IJX: [YWH, YDR],
LWT: [YDR, HMM],
VAU: [YDR, HMM]}","Node YWH is connected to node IJX.
Node OZE is connected to nodes UAR, BYZ.
Node YDR is connected to nodes UAR, IJX, LWT, VAU.
Node HMM is connected to nodes XMD, BYZ, LWT, VAU.
Node UAR is connected to nodes OZE, YDR.
Node XMD is connected to node HMM.
Node BYZ is connected to nodes OZE, HMM.
Node IJX is connected to nodes YWH, YDR.
Node LWT is connected to nodes YDR, HMM.
Node VAU is connected to nodes YDR, HMM.","[YWH, OZE, YDR, HMM, UAR, XMD, BYZ, IJX, LWT, VAU]",10,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YWH OZE YDR HMM.
Nodes set 2 contains: UAR XMD BYZ IJX LWT VAU.","[(YWH, IJX), (OZE, BYZ), (YDR, UAR), (HMM, XMD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YWH. Updated matching: {IJX: YWH}.
Search from node OZE. Updated matching: {IJX: YWH, UAR: OZE}.
Search from node YDR. Updated matching: {IJX: YWH, UAR: YDR, BYZ: OZE}.
Search from node HMM. Updated matching: {IJX: YWH, UAR: YDR, BYZ: OZE, XMD: HMM}.
So the maximum matching is ",4,6,199
bipartite,"[(APK, LNP), (APK, JSS), (LHP, QLE), (LHP, GGE), (LHP, LNP), (LHP, XAZ), (ZIC, XAZ), (VPJ, LNP), (VPJ, JSS)]","{APK: [LNP, JSS],
LHP: [QLE, GGE, LNP, XAZ],
ZIC: [XAZ],
VPJ: [LNP, JSS],
QLE: [LHP],
GGE: [LHP],
LNP: [APK, LHP, VPJ],
XAZ: [LHP, ZIC],
JSS: [APK, VPJ]}","Node APK is connected to nodes LNP, JSS.
Node LHP is connected to nodes QLE, GGE, LNP, XAZ.
Node ZIC is connected to node XAZ.
Node VPJ is connected to nodes LNP, JSS.
Node QLE is connected to node LHP.
Node GGE is connected to node LHP.
Node LNP is connected to nodes APK, LHP, VPJ.
Node XAZ is connected to nodes LHP, ZIC.
Node JSS is connected to nodes APK, VPJ.","[APK, LHP, ZIC, VPJ, QLE, GGE, LNP, XAZ, JSS]",9,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: APK LHP ZIC VPJ.
Nodes set 2 contains: QLE GGE LNP XAZ JSS.","[(APK, JSS), (LHP, QLE), (ZIC, XAZ), (VPJ, LNP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node APK. Updated matching: {LNP: APK}.
Search from node LHP. Updated matching: {LNP: APK, QLE: LHP}.
Search from node ZIC. Updated matching: {LNP: APK, QLE: LHP, XAZ: ZIC}.
Search from node VPJ. Updated matching: {LNP: VPJ, QLE: LHP, XAZ: ZIC, JSS: APK}.
So the maximum matching is ",4,5,200
bipartite,"[(UYK, YPM), (UYK, ZJI), (UYK, KCZ), (UYK, HLN), (UYK, WRE), (QQT, HLN), (QQT, GIB)]","{UYK: [YPM, ZJI, KCZ, HLN, WRE],
QQT: [HLN, GIB],
YPM: [UYK],
ZJI: [UYK],
KCZ: [UYK],
HLN: [UYK, QQT],
WRE: [UYK],
GIB: [QQT]}","Node UYK is connected to nodes YPM, ZJI, KCZ, HLN, WRE.
Node QQT is connected to nodes HLN, GIB.
Node YPM is connected to node UYK.
Node ZJI is connected to node UYK.
Node KCZ is connected to node UYK.
Node HLN is connected to nodes UYK, QQT.
Node WRE is connected to node UYK.
Node GIB is connected to node QQT.","[UYK, QQT, YPM, ZJI, KCZ, HLN, WRE, GIB]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UYK QQT.
Nodes set 2 contains: YPM ZJI KCZ HLN WRE GIB.","[(UYK, YPM), (QQT, HLN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UYK. Updated matching: {YPM: UYK}.
Search from node QQT. Updated matching: {YPM: UYK, HLN: QQT}.
So the maximum matching is ",2,6,201
bipartite,"[(LQG, PYX), (MMZ, GCR), (MMZ, ZZZ), (SMF, OMD), (SMF, EEX), (SMF, XIB), (NTY, XIB), (NTY, ZUL), (DTC, XIB), (RQJ, SEX), (RQJ, ZZZ), (RQJ, PYX), (RQJ, ZUL)]","{LQG: [PYX],
MMZ: [GCR, ZZZ],
SMF: [OMD, EEX, XIB],
NTY: [XIB, ZUL],
DTC: [XIB],
RQJ: [SEX, ZZZ, PYX, ZUL],
OMD: [SMF],
SEX: [RQJ],
GCR: [MMZ],
ZZZ: [MMZ, RQJ],
EEX: [SMF],
PYX: [LQG, RQJ],
XIB: [SMF, NTY, DTC],
ZUL: [NTY, RQJ]}","Node LQG is connected to node PYX.
Node MMZ is connected to nodes GCR, ZZZ.
Node SMF is connected to nodes OMD, EEX, XIB.
Node NTY is connected to nodes XIB, ZUL.
Node DTC is connected to node XIB.
Node RQJ is connected to nodes SEX, ZZZ, PYX, ZUL.
Node OMD is connected to node SMF.
Node SEX is connected to node RQJ.
Node GCR is connected to node MMZ.
Node ZZZ is connected to nodes MMZ, RQJ.
Node EEX is connected to node SMF.
Node PYX is connected to nodes LQG, RQJ.
Node XIB is connected to nodes SMF, NTY, DTC.
Node ZUL is connected to nodes NTY, RQJ.","[LQG, MMZ, SMF, NTY, DTC, RQJ, OMD, SEX, GCR, ZZZ, EEX, PYX, XIB, ZUL]",14,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LQG MMZ SMF NTY DTC RQJ.
Nodes set 2 contains: OMD SEX GCR ZZZ EEX PYX XIB ZUL.","[(LQG, PYX), (MMZ, GCR), (SMF, OMD), (NTY, ZUL), (DTC, XIB), (RQJ, SEX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LQG. Updated matching: {PYX: LQG}.
Search from node MMZ. Updated matching: {PYX: LQG, GCR: MMZ}.
Search from node SMF. Updated matching: {PYX: LQG, GCR: MMZ, OMD: SMF}.
Search from node NTY. Updated matching: {PYX: LQG, GCR: MMZ, OMD: SMF, XIB: NTY}.
Search from node DTC. Updated matching: {PYX: LQG, GCR: MMZ, OMD: SMF, XIB: DTC, ZUL: NTY}.
Search from node RQJ. Updated matching: {PYX: LQG, GCR: MMZ, OMD: SMF, XIB: DTC, ZUL: NTY, SEX: RQJ}.
So the maximum matching is ",6,8,202
bipartite,"[(VSF, BVF), (PBX, RGQ), (PBX, XSA), (PBX, JXL), (AMO, XSA), (QDG, XSA), (QDG, BVF), (QDG, SHD)]","{VSF: [BVF],
PBX: [RGQ, XSA, JXL],
AMO: [XSA],
QDG: [XSA, BVF, SHD],
RGQ: [PBX],
XSA: [PBX, AMO, QDG],
JXL: [PBX],
BVF: [VSF, QDG],
SHD: [QDG]}","Node VSF is connected to node BVF.
Node PBX is connected to nodes RGQ, XSA, JXL.
Node AMO is connected to node XSA.
Node QDG is connected to nodes XSA, BVF, SHD.
Node RGQ is connected to node PBX.
Node XSA is connected to nodes PBX, AMO, QDG.
Node JXL is connected to node PBX.
Node BVF is connected to nodes VSF, QDG.
Node SHD is connected to node QDG.","[VSF, PBX, AMO, QDG, RGQ, XSA, JXL, BVF, SHD]",9,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VSF PBX AMO QDG.
Nodes set 2 contains: RGQ XSA JXL BVF SHD.","[(VSF, BVF), (PBX, RGQ), (AMO, XSA), (QDG, SHD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VSF. Updated matching: {BVF: VSF}.
Search from node PBX. Updated matching: {BVF: VSF, RGQ: PBX}.
Search from node AMO. Updated matching: {BVF: VSF, RGQ: PBX, XSA: AMO}.
Search from node QDG. Updated matching: {BVF: VSF, RGQ: PBX, XSA: AMO, SHD: QDG}.
So the maximum matching is ",4,5,203
bipartite,"[(OKW, UUD), (OKW, OCG), (OKW, WBD), (ONJ, IDB), (ONJ, WBD), (FRA, OCT), (FRA, UUD), (FRA, ODS), (FRA, OCG), (FRA, WBD), (TMW, CES), (TMW, VSL), (TMW, ODS), (TMW, YJS), (TMW, OCG), (TMW, WBD), (YZD, IDB), (YZD, UUD), (YZD, VSL), (YZD, OCG)]","{OKW: [UUD, OCG, WBD],
ONJ: [IDB, WBD],
FRA: [OCT, UUD, ODS, OCG, WBD],
TMW: [CES, VSL, ODS, YJS, OCG, WBD],
YZD: [IDB, UUD, VSL, OCG],
OCT: [FRA],
IDB: [ONJ, YZD],
UUD: [OKW, FRA, YZD],
CES: [TMW],
VSL: [TMW, YZD],
ODS: [FRA, TMW],
YJS: [TMW],
OCG: [OKW, FRA, TMW, YZD],
WBD: [OKW, ONJ, FRA, TMW]}","Node OKW is connected to nodes UUD, OCG, WBD.
Node ONJ is connected to nodes IDB, WBD.
Node FRA is connected to nodes OCT, UUD, ODS, OCG, WBD.
Node TMW is connected to nodes CES, VSL, ODS, YJS, OCG, WBD.
Node YZD is connected to nodes IDB, UUD, VSL, OCG.
Node OCT is connected to node FRA.
Node IDB is connected to nodes ONJ, YZD.
Node UUD is connected to nodes OKW, FRA, YZD.
Node CES is connected to node TMW.
Node VSL is connected to nodes TMW, YZD.
Node ODS is connected to nodes FRA, TMW.
Node YJS is connected to node TMW.
Node OCG is connected to nodes OKW, FRA, TMW, YZD.
Node WBD is connected to nodes OKW, ONJ, FRA, TMW.","[OKW, ONJ, FRA, TMW, YZD, OCT, IDB, UUD, CES, VSL, ODS, YJS, OCG, WBD]",14,20,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OKW ONJ FRA TMW YZD.
Nodes set 2 contains: OCT IDB UUD CES VSL ODS YJS OCG WBD.","[(OKW, UUD), (ONJ, WBD), (FRA, OCT), (TMW, CES), (YZD, IDB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OKW. Updated matching: {UUD: OKW}.
Search from node ONJ. Updated matching: {UUD: OKW, IDB: ONJ}.
Search from node FRA. Updated matching: {UUD: OKW, IDB: ONJ, OCT: FRA}.
Search from node TMW. Updated matching: {UUD: OKW, IDB: ONJ, OCT: FRA, CES: TMW}.
Search from node YZD. Updated matching: {UUD: OKW, IDB: YZD, OCT: FRA, CES: TMW, WBD: ONJ}.
So the maximum matching is ",5,9,204
bipartite,"[(TUZ, ENL), (TUZ, GYL), (TUZ, YVQ), (TDX, ULJ), (TDX, HYB), (TDX, CQY), (TDX, WCJ), (SGK, MZN), (SGK, CQY), (SGK, WCJ), (YCH, ENL), (YCH, ULJ), (YCH, YVQ), (YCH, WCJ)]","{TUZ: [ENL, GYL, YVQ],
TDX: [ULJ, HYB, CQY, WCJ],
SGK: [MZN, CQY, WCJ],
YCH: [ENL, ULJ, YVQ, WCJ],
MZN: [SGK],
ENL: [TUZ, YCH],
GYL: [TUZ],
ULJ: [TDX, YCH],
HYB: [TDX],
YVQ: [TUZ, YCH],
CQY: [TDX, SGK],
WCJ: [TDX, SGK, YCH]}","Node TUZ is connected to nodes ENL, GYL, YVQ.
Node TDX is connected to nodes ULJ, HYB, CQY, WCJ.
Node SGK is connected to nodes MZN, CQY, WCJ.
Node YCH is connected to nodes ENL, ULJ, YVQ, WCJ.
Node MZN is connected to node SGK.
Node ENL is connected to nodes TUZ, YCH.
Node GYL is connected to node TUZ.
Node ULJ is connected to nodes TDX, YCH.
Node HYB is connected to node TDX.
Node YVQ is connected to nodes TUZ, YCH.
Node CQY is connected to nodes TDX, SGK.
Node WCJ is connected to nodes TDX, SGK, YCH.","[TUZ, TDX, SGK, YCH, MZN, ENL, GYL, ULJ, HYB, YVQ, CQY, WCJ]",12,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TUZ TDX SGK YCH.
Nodes set 2 contains: MZN ENL GYL ULJ HYB YVQ CQY WCJ.","[(TUZ, GYL), (TDX, ULJ), (SGK, MZN), (YCH, ENL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TUZ. Updated matching: {ENL: TUZ}.
Search from node TDX. Updated matching: {ENL: TUZ, ULJ: TDX}.
Search from node SGK. Updated matching: {ENL: TUZ, ULJ: TDX, MZN: SGK}.
Search from node YCH. Updated matching: {ENL: YCH, ULJ: TDX, MZN: SGK, GYL: TUZ}.
So the maximum matching is ",4,8,205
bipartite,"[(ZHS, LJZ), (ZHS, DNQ), (ZHS, XUP), (ZHS, FMJ), (ZHS, KRK), (EMU, BYM), (EMU, FKO), (JIR, BYM), (JIR, LJZ), (JIR, KRK), (FFS, BYM), (FFS, INO), (FFS, ZNT), (FFS, FKO), (FFS, DNQ), (FFS, XUP), (CYI, BYM), (CYI, INO), (CYI, EAI), (CYI, XUP)]","{ZHS: [LJZ, DNQ, XUP, FMJ, KRK],
EMU: [BYM, FKO],
JIR: [BYM, LJZ, KRK],
FFS: [BYM, INO, ZNT, FKO, DNQ, XUP],
CYI: [BYM, INO, EAI, XUP],
BYM: [EMU, JIR, FFS, CYI],
INO: [FFS, CYI],
ZNT: [FFS],
LJZ: [ZHS, JIR],
FKO: [EMU, FFS],
DNQ: [ZHS, FFS],
EAI: [CYI],
XUP: [ZHS, FFS, CYI],
FMJ: [ZHS],
KRK: [ZHS, JIR]}","Node ZHS is connected to nodes LJZ, DNQ, XUP, FMJ, KRK.
Node EMU is connected to nodes BYM, FKO.
Node JIR is connected to nodes BYM, LJZ, KRK.
Node FFS is connected to nodes BYM, INO, ZNT, FKO, DNQ, XUP.
Node CYI is connected to nodes BYM, INO, EAI, XUP.
Node BYM is connected to nodes EMU, JIR, FFS, CYI.
Node INO is connected to nodes FFS, CYI.
Node ZNT is connected to node FFS.
Node LJZ is connected to nodes ZHS, JIR.
Node FKO is connected to nodes EMU, FFS.
Node DNQ is connected to nodes ZHS, FFS.
Node EAI is connected to node CYI.
Node XUP is connected to nodes ZHS, FFS, CYI.
Node FMJ is connected to node ZHS.
Node KRK is connected to nodes ZHS, JIR.","[ZHS, EMU, JIR, FFS, CYI, BYM, INO, ZNT, LJZ, FKO, DNQ, EAI, XUP, FMJ, KRK]",15,20,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZHS EMU JIR FFS CYI.
Nodes set 2 contains: BYM INO ZNT LJZ FKO DNQ EAI XUP FMJ KRK.","[(ZHS, DNQ), (EMU, FKO), (JIR, LJZ), (FFS, INO), (CYI, BYM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZHS. Updated matching: {LJZ: ZHS}.
Search from node EMU. Updated matching: {LJZ: ZHS, BYM: EMU}.
Search from node JIR. Updated matching: {LJZ: ZHS, BYM: JIR, FKO: EMU}.
Search from node FFS. Updated matching: {LJZ: JIR, BYM: FFS, FKO: EMU, DNQ: ZHS}.
Search from node CYI. Updated matching: {LJZ: JIR, BYM: CYI, FKO: EMU, DNQ: ZHS, INO: FFS}.
So the maximum matching is ",5,10,206
bipartite,"[(EIO, ZNN), (EIO, LLN), (EIO, GMH), (EIO, CLK), (EIO, LOC), (YBR, DDH), (YBR, LOC), (QBJ, ZNN), (QBJ, LLN), (QBJ, LJL), (QBJ, SCP)]","{EIO: [ZNN, LLN, GMH, CLK, LOC],
YBR: [DDH, LOC],
QBJ: [ZNN, LLN, LJL, SCP],
ZNN: [EIO, QBJ],
LLN: [EIO, QBJ],
LJL: [QBJ],
SCP: [QBJ],
GMH: [EIO],
DDH: [YBR],
CLK: [EIO],
LOC: [EIO, YBR]}","Node EIO is connected to nodes ZNN, LLN, GMH, CLK, LOC.
Node YBR is connected to nodes DDH, LOC.
Node QBJ is connected to nodes ZNN, LLN, LJL, SCP.
Node ZNN is connected to nodes EIO, QBJ.
Node LLN is connected to nodes EIO, QBJ.
Node LJL is connected to node QBJ.
Node SCP is connected to node QBJ.
Node GMH is connected to node EIO.
Node DDH is connected to node YBR.
Node CLK is connected to node EIO.
Node LOC is connected to nodes EIO, YBR.","[EIO, YBR, QBJ, ZNN, LLN, LJL, SCP, GMH, DDH, CLK, LOC]",11,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: EIO YBR QBJ.
Nodes set 2 contains: ZNN LLN LJL SCP GMH DDH CLK LOC.","[(EIO, LLN), (YBR, DDH), (QBJ, ZNN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node EIO. Updated matching: {ZNN: EIO}.
Search from node YBR. Updated matching: {ZNN: EIO, DDH: YBR}.
Search from node QBJ. Updated matching: {ZNN: QBJ, DDH: YBR, LLN: EIO}.
So the maximum matching is ",3,8,207
bipartite,"[(ICL, LAU), (ICL, YNE), (ICL, GLN), (ARK, LAU), (ARK, YNE), (ARK, JFD), (ARK, KXX), (ARK, FJA), (MUE, LAU), (MUE, YNE), (MUE, JFD), (MUE, GLN), (MUE, KXX), (MUE, NWL), (MUE, ODV), (IQR, LAU), (IQR, GLN), (IQR, KXX), (IQR, ODV), (UKZ, KXX), (UKZ, NWL)]","{ICL: [LAU, YNE, GLN],
ARK: [LAU, YNE, JFD, KXX, FJA],
MUE: [LAU, YNE, JFD, GLN, KXX, NWL, ODV],
IQR: [LAU, GLN, KXX, ODV],
UKZ: [KXX, NWL],
LAU: [ICL, ARK, MUE, IQR],
YNE: [ICL, ARK, MUE],
JFD: [ARK, MUE],
GLN: [ICL, MUE, IQR],
KXX: [ARK, MUE, IQR, UKZ],
NWL: [MUE, UKZ],
FJA: [ARK],
ODV: [MUE, IQR]}","Node ICL is connected to nodes LAU, YNE, GLN.
Node ARK is connected to nodes LAU, YNE, JFD, KXX, FJA.
Node MUE is connected to nodes LAU, YNE, JFD, GLN, KXX, NWL, ODV.
Node IQR is connected to nodes LAU, GLN, KXX, ODV.
Node UKZ is connected to nodes KXX, NWL.
Node LAU is connected to nodes ICL, ARK, MUE, IQR.
Node YNE is connected to nodes ICL, ARK, MUE.
Node JFD is connected to nodes ARK, MUE.
Node GLN is connected to nodes ICL, MUE, IQR.
Node KXX is connected to nodes ARK, MUE, IQR, UKZ.
Node NWL is connected to nodes MUE, UKZ.
Node FJA is connected to node ARK.
Node ODV is connected to nodes MUE, IQR.","[ICL, ARK, MUE, IQR, UKZ, LAU, YNE, JFD, GLN, KXX, NWL, FJA, ODV]",13,21,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ICL ARK MUE IQR UKZ.
Nodes set 2 contains: LAU YNE JFD GLN KXX NWL FJA ODV.","[(ICL, GLN), (ARK, JFD), (MUE, YNE), (IQR, LAU), (UKZ, KXX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ICL. Updated matching: {LAU: ICL}.
Search from node ARK. Updated matching: {LAU: ARK, YNE: ICL}.
Search from node MUE. Updated matching: {LAU: MUE, YNE: ARK, GLN: ICL}.
Search from node IQR. Updated matching: {LAU: IQR, YNE: MUE, GLN: ICL, JFD: ARK}.
Search from node UKZ. Updated matching: {LAU: IQR, YNE: MUE, GLN: ICL, JFD: ARK, KXX: UKZ}.
So the maximum matching is ",5,8,208
bipartite,"[(ZOU, NSJ), (ZOU, QKQ), (ZOU, JZO), (ZOU, UEF), (CDR, VQS), (CDR, QKQ), (CDR, JZO), (CDR, DRG), (OAV, VQS), (OAV, QKQ), (OAV, AOR), (OAV, UEF), (GQW, DRG), (NLG, NSJ), (NLG, VQS), (NLG, QKQ), (NLG, JZO)]","{ZOU: [NSJ, QKQ, JZO, UEF],
CDR: [VQS, QKQ, JZO, DRG],
OAV: [VQS, QKQ, AOR, UEF],
GQW: [DRG],
NLG: [NSJ, VQS, QKQ, JZO],
NSJ: [ZOU, NLG],
VQS: [CDR, OAV, NLG],
QKQ: [ZOU, CDR, OAV, NLG],
JZO: [ZOU, CDR, NLG],
DRG: [CDR, GQW],
AOR: [OAV],
UEF: [ZOU, OAV]}","Node ZOU is connected to nodes NSJ, QKQ, JZO, UEF.
Node CDR is connected to nodes VQS, QKQ, JZO, DRG.
Node OAV is connected to nodes VQS, QKQ, AOR, UEF.
Node GQW is connected to node DRG.
Node NLG is connected to nodes NSJ, VQS, QKQ, JZO.
Node NSJ is connected to nodes ZOU, NLG.
Node VQS is connected to nodes CDR, OAV, NLG.
Node QKQ is connected to nodes ZOU, CDR, OAV, NLG.
Node JZO is connected to nodes ZOU, CDR, NLG.
Node DRG is connected to nodes CDR, GQW.
Node AOR is connected to node OAV.
Node UEF is connected to nodes ZOU, OAV.","[ZOU, CDR, OAV, GQW, NLG, NSJ, VQS, QKQ, JZO, DRG, AOR, UEF]",12,17,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZOU CDR OAV GQW NLG.
Nodes set 2 contains: NSJ VQS QKQ JZO DRG AOR UEF.","[(ZOU, QKQ), (CDR, VQS), (OAV, AOR), (GQW, DRG), (NLG, NSJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZOU. Updated matching: {NSJ: ZOU}.
Search from node CDR. Updated matching: {NSJ: ZOU, VQS: CDR}.
Search from node OAV. Updated matching: {NSJ: ZOU, VQS: OAV, QKQ: CDR}.
Search from node GQW. Updated matching: {NSJ: ZOU, VQS: OAV, QKQ: CDR, DRG: GQW}.
Search from node NLG. Updated matching: {NSJ: NLG, VQS: CDR, QKQ: ZOU, DRG: GQW, AOR: OAV}.
So the maximum matching is ",5,7,209
bipartite,"[(XQN, FJC), (XQN, OTD), (KRJ, FJE), (KRJ, FZE), (SMZ, XNR), (SMZ, FJC), (SMZ, IKU), (SMZ, FZE), (SMZ, HJP)]","{XQN: [FJC, OTD],
KRJ: [FJE, FZE],
SMZ: [XNR, FJC, IKU, FZE, HJP],
XNR: [SMZ],
FJC: [XQN, SMZ],
IKU: [SMZ],
FJE: [KRJ],
OTD: [XQN],
FZE: [KRJ, SMZ],
HJP: [SMZ]}","Node XQN is connected to nodes FJC, OTD.
Node KRJ is connected to nodes FJE, FZE.
Node SMZ is connected to nodes XNR, FJC, IKU, FZE, HJP.
Node XNR is connected to node SMZ.
Node FJC is connected to nodes XQN, SMZ.
Node IKU is connected to node SMZ.
Node FJE is connected to node KRJ.
Node OTD is connected to node XQN.
Node FZE is connected to nodes KRJ, SMZ.
Node HJP is connected to node SMZ.","[XQN, KRJ, SMZ, XNR, FJC, IKU, FJE, OTD, FZE, HJP]",10,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XQN KRJ SMZ.
Nodes set 2 contains: XNR FJC IKU FJE OTD FZE HJP.","[(XQN, FJC), (KRJ, FJE), (SMZ, XNR)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XQN. Updated matching: {FJC: XQN}.
Search from node KRJ. Updated matching: {FJC: XQN, FJE: KRJ}.
Search from node SMZ. Updated matching: {FJC: XQN, FJE: KRJ, XNR: SMZ}.
So the maximum matching is ",3,7,210
bipartite,"[(PAB, IND), (PAB, ODU), (DAT, KJU), (DAT, UUR), (DAT, IND), (DAT, SIB), (BIR, KJU), (BIR, IND), (LNX, KJU), (LNX, IND), (LNX, ODU), (LNX, SIB)]","{PAB: [IND, ODU],
DAT: [KJU, UUR, IND, SIB],
BIR: [KJU, IND],
LNX: [KJU, IND, ODU, SIB],
KJU: [DAT, BIR, LNX],
UUR: [DAT],
IND: [PAB, DAT, BIR, LNX],
ODU: [PAB, LNX],
SIB: [DAT, LNX]}","Node PAB is connected to nodes IND, ODU.
Node DAT is connected to nodes KJU, UUR, IND, SIB.
Node BIR is connected to nodes KJU, IND.
Node LNX is connected to nodes KJU, IND, ODU, SIB.
Node KJU is connected to nodes DAT, BIR, LNX.
Node UUR is connected to node DAT.
Node IND is connected to nodes PAB, DAT, BIR, LNX.
Node ODU is connected to nodes PAB, LNX.
Node SIB is connected to nodes DAT, LNX.","[PAB, DAT, BIR, LNX, KJU, UUR, IND, ODU, SIB]",9,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: PAB DAT BIR LNX.
Nodes set 2 contains: KJU UUR IND ODU SIB.","[(PAB, ODU), (DAT, UUR), (BIR, IND), (LNX, KJU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node PAB. Updated matching: {IND: PAB}.
Search from node DAT. Updated matching: {IND: PAB, KJU: DAT}.
Search from node BIR. Updated matching: {IND: PAB, KJU: BIR, UUR: DAT}.
Search from node LNX. Updated matching: {IND: BIR, KJU: LNX, UUR: DAT, ODU: PAB}.
So the maximum matching is ",4,5,211
bipartite,"[(YWT, OBV), (YWT, JLB), (YWT, PXS), (YWT, OGI), (XBE, YVI), (XBE, KAT), (XBE, PXS), (XBE, OGI), (DMM, YVI), (DMM, JOZ), (DMM, OBV), (DMM, PXS)]","{YWT: [OBV, JLB, PXS, OGI],
XBE: [YVI, KAT, PXS, OGI],
DMM: [YVI, JOZ, OBV, PXS],
YVI: [XBE, DMM],
KAT: [XBE],
JOZ: [DMM],
OBV: [YWT, DMM],
JLB: [YWT],
PXS: [YWT, XBE, DMM],
OGI: [YWT, XBE]}","Node YWT is connected to nodes OBV, JLB, PXS, OGI.
Node XBE is connected to nodes YVI, KAT, PXS, OGI.
Node DMM is connected to nodes YVI, JOZ, OBV, PXS.
Node YVI is connected to nodes XBE, DMM.
Node KAT is connected to node XBE.
Node JOZ is connected to node DMM.
Node OBV is connected to nodes YWT, DMM.
Node JLB is connected to node YWT.
Node PXS is connected to nodes YWT, XBE, DMM.
Node OGI is connected to nodes YWT, XBE.","[YWT, XBE, DMM, YVI, KAT, JOZ, OBV, JLB, PXS, OGI]",10,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YWT XBE DMM.
Nodes set 2 contains: YVI KAT JOZ OBV JLB PXS OGI.","[(YWT, OBV), (XBE, KAT), (DMM, YVI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YWT. Updated matching: {OBV: YWT}.
Search from node XBE. Updated matching: {OBV: YWT, YVI: XBE}.
Search from node DMM. Updated matching: {OBV: YWT, YVI: DMM, KAT: XBE}.
So the maximum matching is ",3,7,212
bipartite,"[(IOE, IQR), (IOE, ZPC), (IOE, XBB), (IOE, QTA), (IOE, ZOF), (IOE, WJT), (ZCK, ZPC), (ZCK, KRN), (ZCK, RKO), (ZCK, QTA), (ZCK, TFM), (ZCK, ZOF), (ZCK, WJT), (NCW, IQR), (NCW, ZPC), (NCW, QTA), (NCW, TFM), (IXP, IQR), (IXP, KRN), (IXP, RKO), (IXP, QTA), (IXP, TFM), (IXP, ZOF), (IXP, WJT), (IXP, HTG)]","{IOE: [IQR, ZPC, XBB, QTA, ZOF, WJT],
ZCK: [ZPC, KRN, RKO, QTA, TFM, ZOF, WJT],
NCW: [IQR, ZPC, QTA, TFM],
IXP: [IQR, KRN, RKO, QTA, TFM, ZOF, WJT, HTG],
IQR: [IOE, NCW, IXP],
ZPC: [IOE, ZCK, NCW],
KRN: [ZCK, IXP],
RKO: [ZCK, IXP],
XBB: [IOE],
QTA: [IOE, ZCK, NCW, IXP],
TFM: [ZCK, NCW, IXP],
ZOF: [IOE, ZCK, IXP],
WJT: [IOE, ZCK, IXP],
HTG: [IXP]}","Node IOE is connected to nodes IQR, ZPC, XBB, QTA, ZOF, WJT.
Node ZCK is connected to nodes ZPC, KRN, RKO, QTA, TFM, ZOF, WJT.
Node NCW is connected to nodes IQR, ZPC, QTA, TFM.
Node IXP is connected to nodes IQR, KRN, RKO, QTA, TFM, ZOF, WJT, HTG.
Node IQR is connected to nodes IOE, NCW, IXP.
Node ZPC is connected to nodes IOE, ZCK, NCW.
Node KRN is connected to nodes ZCK, IXP.
Node RKO is connected to nodes ZCK, IXP.
Node XBB is connected to node IOE.
Node QTA is connected to nodes IOE, ZCK, NCW, IXP.
Node TFM is connected to nodes ZCK, NCW, IXP.
Node ZOF is connected to nodes IOE, ZCK, IXP.
Node WJT is connected to nodes IOE, ZCK, IXP.
Node HTG is connected to node IXP.","[IOE, ZCK, NCW, IXP, IQR, ZPC, KRN, RKO, XBB, QTA, TFM, ZOF, WJT, HTG]",14,25,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IOE ZCK NCW IXP.
Nodes set 2 contains: IQR ZPC KRN RKO XBB QTA TFM ZOF WJT HTG.","[(IOE, XBB), (ZCK, KRN), (NCW, ZPC), (IXP, IQR)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IOE. Updated matching: {IQR: IOE}.
Search from node ZCK. Updated matching: {IQR: IOE, ZPC: ZCK}.
Search from node NCW. Updated matching: {IQR: NCW, ZPC: IOE, KRN: ZCK}.
Search from node IXP. Updated matching: {IQR: IXP, ZPC: NCW, KRN: ZCK, XBB: IOE}.
So the maximum matching is ",4,10,213
bipartite,"[(SFX, BXJ), (SFX, KXQ), (SFX, YTP), (SFX, DFK), (ZFF, BXJ), (ZFF, YTP), (PRA, BXJ), (PRA, DYP), (PRA, KZW), (PRA, YTP), (PRA, DFK), (EMI, BXJ), (EMI, DYP), (JND, BXJ), (JND, DYP), (JND, KXQ), (JND, KZW)]","{SFX: [BXJ, KXQ, YTP, DFK],
ZFF: [BXJ, YTP],
PRA: [BXJ, DYP, KZW, YTP, DFK],
EMI: [BXJ, DYP],
JND: [BXJ, DYP, KXQ, KZW],
BXJ: [SFX, ZFF, PRA, EMI, JND],
DYP: [PRA, EMI, JND],
KXQ: [SFX, JND],
KZW: [PRA, JND],
YTP: [SFX, ZFF, PRA],
DFK: [SFX, PRA]}","Node SFX is connected to nodes BXJ, KXQ, YTP, DFK.
Node ZFF is connected to nodes BXJ, YTP.
Node PRA is connected to nodes BXJ, DYP, KZW, YTP, DFK.
Node EMI is connected to nodes BXJ, DYP.
Node JND is connected to nodes BXJ, DYP, KXQ, KZW.
Node BXJ is connected to nodes SFX, ZFF, PRA, EMI, JND.
Node DYP is connected to nodes PRA, EMI, JND.
Node KXQ is connected to nodes SFX, JND.
Node KZW is connected to nodes PRA, JND.
Node YTP is connected to nodes SFX, ZFF, PRA.
Node DFK is connected to nodes SFX, PRA.","[SFX, ZFF, PRA, EMI, JND, BXJ, DYP, KXQ, KZW, YTP, DFK]",11,17,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SFX ZFF PRA EMI JND.
Nodes set 2 contains: BXJ DYP KXQ KZW YTP DFK.","[(SFX, KXQ), (ZFF, YTP), (PRA, KZW), (EMI, DYP), (JND, BXJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SFX. Updated matching: {BXJ: SFX}.
Search from node ZFF. Updated matching: {BXJ: ZFF, KXQ: SFX}.
Search from node PRA. Updated matching: {BXJ: PRA, KXQ: SFX, YTP: ZFF}.
Search from node EMI. Updated matching: {BXJ: EMI, KXQ: SFX, YTP: ZFF, DYP: PRA}.
Search from node JND. Updated matching: {BXJ: JND, KXQ: SFX, YTP: ZFF, DYP: EMI, KZW: PRA}.
So the maximum matching is ",5,6,214
bipartite,"[(GPE, JAD), (GPE, RHZ), (GPE, UHI), (EQE, RHZ), (EQE, ZHO), (EQE, ESC), (EQE, QUP), (EQE, IWX)]","{GPE: [JAD, RHZ, UHI],
EQE: [RHZ, ZHO, ESC, QUP, IWX],
JAD: [GPE],
RHZ: [GPE, EQE],
ZHO: [EQE],
UHI: [GPE],
ESC: [EQE],
QUP: [EQE],
IWX: [EQE]}","Node GPE is connected to nodes JAD, RHZ, UHI.
Node EQE is connected to nodes RHZ, ZHO, ESC, QUP, IWX.
Node JAD is connected to node GPE.
Node RHZ is connected to nodes GPE, EQE.
Node ZHO is connected to node EQE.
Node UHI is connected to node GPE.
Node ESC is connected to node EQE.
Node QUP is connected to node EQE.
Node IWX is connected to node EQE.","[GPE, EQE, JAD, RHZ, ZHO, UHI, ESC, QUP, IWX]",9,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GPE EQE.
Nodes set 2 contains: JAD RHZ ZHO UHI ESC QUP IWX.","[(GPE, JAD), (EQE, RHZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GPE. Updated matching: {JAD: GPE}.
Search from node EQE. Updated matching: {JAD: GPE, RHZ: EQE}.
So the maximum matching is ",2,7,215
bipartite,"[(NMJ, MHD), (NMJ, KQC), (NMJ, ZER), (NMJ, TOL), (FLF, KQC), (FLF, MXM), (FLF, HGF), (OIZ, DCD), (OIZ, MHD), (OIZ, KMA), (OIZ, KQC), (HHU, DCD), (HHU, VJB), (HHU, KMA), (HHU, HXD), (HHU, HGF), (YWM, DCD), (YWM, MHD), (YWM, KMA), (YWM, MXM), (YWM, TOL), (YWM, HGF)]","{NMJ: [MHD, KQC, ZER, TOL],
FLF: [KQC, MXM, HGF],
OIZ: [DCD, MHD, KMA, KQC],
HHU: [DCD, VJB, KMA, HXD, HGF],
YWM: [DCD, MHD, KMA, MXM, TOL, HGF],
DCD: [OIZ, HHU, YWM],
VJB: [HHU],
MHD: [NMJ, OIZ, YWM],
KMA: [OIZ, HHU, YWM],
KQC: [NMJ, FLF, OIZ],
MXM: [FLF, YWM],
HXD: [HHU],
ZER: [NMJ],
TOL: [NMJ, YWM],
HGF: [FLF, HHU, YWM]}","Node NMJ is connected to nodes MHD, KQC, ZER, TOL.
Node FLF is connected to nodes KQC, MXM, HGF.
Node OIZ is connected to nodes DCD, MHD, KMA, KQC.
Node HHU is connected to nodes DCD, VJB, KMA, HXD, HGF.
Node YWM is connected to nodes DCD, MHD, KMA, MXM, TOL, HGF.
Node DCD is connected to nodes OIZ, HHU, YWM.
Node VJB is connected to node HHU.
Node MHD is connected to nodes NMJ, OIZ, YWM.
Node KMA is connected to nodes OIZ, HHU, YWM.
Node KQC is connected to nodes NMJ, FLF, OIZ.
Node MXM is connected to nodes FLF, YWM.
Node HXD is connected to node HHU.
Node ZER is connected to node NMJ.
Node TOL is connected to nodes NMJ, YWM.
Node HGF is connected to nodes FLF, HHU, YWM.","[NMJ, FLF, OIZ, HHU, YWM, DCD, VJB, MHD, KMA, KQC, MXM, HXD, ZER, TOL, HGF]",15,22,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NMJ FLF OIZ HHU YWM.
Nodes set 2 contains: DCD VJB MHD KMA KQC MXM HXD ZER TOL HGF.","[(NMJ, KQC), (FLF, MXM), (OIZ, MHD), (HHU, VJB), (YWM, DCD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NMJ. Updated matching: {MHD: NMJ}.
Search from node FLF. Updated matching: {MHD: NMJ, KQC: FLF}.
Search from node OIZ. Updated matching: {MHD: NMJ, KQC: FLF, DCD: OIZ}.
Search from node HHU. Updated matching: {MHD: OIZ, KQC: NMJ, DCD: HHU, MXM: FLF}.
Search from node YWM. Updated matching: {MHD: OIZ, KQC: NMJ, DCD: YWM, MXM: FLF, VJB: HHU}.
So the maximum matching is ",5,10,216
bipartite,"[(VEJ, RVV), (VEJ, DFA), (DRA, DFA), (DRA, RRT), (PKT, URF), (PKT, AVK), (PKT, IEL), (PKT, SHA), (WYV, DFA), (WYV, URF), (WYV, SHA), (BCO, URF), (BCO, AVK), (BCO, IEL), (BCO, SHA), (YSA, DFA), (YSA, AVK), (YSA, RRT), (YSA, COG)]","{VEJ: [RVV, DFA],
DRA: [DFA, RRT],
PKT: [URF, AVK, IEL, SHA],
WYV: [DFA, URF, SHA],
BCO: [URF, AVK, IEL, SHA],
YSA: [DFA, AVK, RRT, COG],
RVV: [VEJ],
DFA: [VEJ, DRA, WYV, YSA],
URF: [PKT, WYV, BCO],
AVK: [PKT, BCO, YSA],
RRT: [DRA, YSA],
IEL: [PKT, BCO],
COG: [YSA],
SHA: [PKT, WYV, BCO]}","Node VEJ is connected to nodes RVV, DFA.
Node DRA is connected to nodes DFA, RRT.
Node PKT is connected to nodes URF, AVK, IEL, SHA.
Node WYV is connected to nodes DFA, URF, SHA.
Node BCO is connected to nodes URF, AVK, IEL, SHA.
Node YSA is connected to nodes DFA, AVK, RRT, COG.
Node RVV is connected to node VEJ.
Node DFA is connected to nodes VEJ, DRA, WYV, YSA.
Node URF is connected to nodes PKT, WYV, BCO.
Node AVK is connected to nodes PKT, BCO, YSA.
Node RRT is connected to nodes DRA, YSA.
Node IEL is connected to nodes PKT, BCO.
Node COG is connected to node YSA.
Node SHA is connected to nodes PKT, WYV, BCO.","[VEJ, DRA, PKT, WYV, BCO, YSA, RVV, DFA, URF, AVK, RRT, IEL, COG, SHA]",14,19,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VEJ DRA PKT WYV BCO YSA.
Nodes set 2 contains: RVV DFA URF AVK RRT IEL COG SHA.","[(VEJ, RVV), (DRA, RRT), (PKT, IEL), (WYV, URF), (BCO, AVK), (YSA, DFA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VEJ. Updated matching: {RVV: VEJ}.
Search from node DRA. Updated matching: {RVV: VEJ, DFA: DRA}.
Search from node PKT. Updated matching: {RVV: VEJ, DFA: DRA, URF: PKT}.
Search from node WYV. Updated matching: {RVV: VEJ, DFA: WYV, URF: PKT, RRT: DRA}.
Search from node BCO. Updated matching: {RVV: VEJ, DFA: WYV, URF: BCO, RRT: DRA, AVK: PKT}.
Search from node YSA. Updated matching: {RVV: VEJ, DFA: YSA, URF: WYV, RRT: DRA, AVK: BCO, IEL: PKT}.
So the maximum matching is ",6,8,217
bipartite,"[(GDS, NZS), (GDS, WVQ), (IOF, EHR), (IOF, DUB), (JZL, WVQ), (IEW, AYT), (IEW, WIC), (EMX, OXU), (EMX, HZL), (EMX, WIC), (HHM, EHR), (HHM, OXU), (HHM, HZL), (GUG, NZS), (GUG, EHR), (GUG, DUB)]","{GDS: [NZS, WVQ],
IOF: [EHR, DUB],
JZL: [WVQ],
IEW: [AYT, WIC],
EMX: [OXU, HZL, WIC],
HHM: [EHR, OXU, HZL],
GUG: [NZS, EHR, DUB],
NZS: [GDS, GUG],
EHR: [IOF, HHM, GUG],
AYT: [IEW],
WVQ: [GDS, JZL],
DUB: [IOF, GUG],
OXU: [EMX, HHM],
HZL: [EMX, HHM],
WIC: [IEW, EMX]}","Node GDS is connected to nodes NZS, WVQ.
Node IOF is connected to nodes EHR, DUB.
Node JZL is connected to node WVQ.
Node IEW is connected to nodes AYT, WIC.
Node EMX is connected to nodes OXU, HZL, WIC.
Node HHM is connected to nodes EHR, OXU, HZL.
Node GUG is connected to nodes NZS, EHR, DUB.
Node NZS is connected to nodes GDS, GUG.
Node EHR is connected to nodes IOF, HHM, GUG.
Node AYT is connected to node IEW.
Node WVQ is connected to nodes GDS, JZL.
Node DUB is connected to nodes IOF, GUG.
Node OXU is connected to nodes EMX, HHM.
Node HZL is connected to nodes EMX, HHM.
Node WIC is connected to nodes IEW, EMX.","[GDS, IOF, JZL, IEW, EMX, HHM, GUG, NZS, EHR, AYT, WVQ, DUB, OXU, HZL, WIC]",15,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GDS IOF JZL IEW EMX HHM GUG.
Nodes set 2 contains: NZS EHR AYT WVQ DUB OXU HZL WIC.","[(GDS, NZS), (IOF, DUB), (JZL, WVQ), (IEW, AYT), (EMX, HZL), (HHM, OXU), (GUG, EHR)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GDS. Updated matching: {NZS: GDS}.
Search from node IOF. Updated matching: {NZS: GDS, EHR: IOF}.
Search from node JZL. Updated matching: {NZS: GDS, EHR: IOF, WVQ: JZL}.
Search from node IEW. Updated matching: {NZS: GDS, EHR: IOF, WVQ: JZL, AYT: IEW}.
Search from node EMX. Updated matching: {NZS: GDS, EHR: IOF, WVQ: JZL, AYT: IEW, OXU: EMX}.
Search from node HHM. Updated matching: {NZS: GDS, EHR: HHM, WVQ: JZL, AYT: IEW, OXU: EMX, DUB: IOF}.
Search from node GUG. Updated matching: {NZS: GDS, EHR: GUG, WVQ: JZL, AYT: IEW, OXU: HHM, DUB: IOF, HZL: EMX}.
So the maximum matching is ",7,8,218
bipartite,"[(ETR, FKR), (ETR, KCQ), (ETR, QHY), (ETR, CDZ), (ETR, NEV), (ETR, QSK), (UAM, KCQ), (UAM, QHY), (UAM, CDZ), (UAM, NEV), (BFQ, FKR), (BFQ, KCQ), (BFQ, QHY), (BFQ, CDZ), (SFM, FKR), (SFM, QHY), (SFM, TPH), (FKB, CDZ), (FKB, QSK), (MPA, QHY), (MPA, QSK)]","{ETR: [FKR, KCQ, QHY, CDZ, NEV, QSK],
UAM: [KCQ, QHY, CDZ, NEV],
BFQ: [FKR, KCQ, QHY, CDZ],
SFM: [FKR, QHY, TPH],
FKB: [CDZ, QSK],
MPA: [QHY, QSK],
FKR: [ETR, BFQ, SFM],
KCQ: [ETR, UAM, BFQ],
QHY: [ETR, UAM, BFQ, SFM, MPA],
CDZ: [ETR, UAM, BFQ, FKB],
NEV: [ETR, UAM],
QSK: [ETR, FKB, MPA],
TPH: [SFM]}","Node ETR is connected to nodes FKR, KCQ, QHY, CDZ, NEV, QSK.
Node UAM is connected to nodes KCQ, QHY, CDZ, NEV.
Node BFQ is connected to nodes FKR, KCQ, QHY, CDZ.
Node SFM is connected to nodes FKR, QHY, TPH.
Node FKB is connected to nodes CDZ, QSK.
Node MPA is connected to nodes QHY, QSK.
Node FKR is connected to nodes ETR, BFQ, SFM.
Node KCQ is connected to nodes ETR, UAM, BFQ.
Node QHY is connected to nodes ETR, UAM, BFQ, SFM, MPA.
Node CDZ is connected to nodes ETR, UAM, BFQ, FKB.
Node NEV is connected to nodes ETR, UAM.
Node QSK is connected to nodes ETR, FKB, MPA.
Node TPH is connected to node SFM.","[ETR, UAM, BFQ, SFM, FKB, MPA, FKR, KCQ, QHY, CDZ, NEV, QSK, TPH]",13,21,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ETR UAM BFQ SFM FKB MPA.
Nodes set 2 contains: FKR KCQ QHY CDZ NEV QSK TPH.","[(ETR, NEV), (UAM, CDZ), (BFQ, KCQ), (SFM, FKR), (FKB, QSK), (MPA, QHY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ETR. Updated matching: {FKR: ETR}.
Search from node UAM. Updated matching: {FKR: ETR, KCQ: UAM}.
Search from node BFQ. Updated matching: {FKR: BFQ, KCQ: ETR, QHY: UAM}.
Search from node SFM. Updated matching: {FKR: SFM, KCQ: BFQ, QHY: ETR, CDZ: UAM}.
Search from node FKB. Updated matching: {FKR: BFQ, KCQ: UAM, QHY: SFM, CDZ: FKB, NEV: ETR}.
Search from node MPA. Updated matching: {FKR: SFM, KCQ: BFQ, QHY: MPA, CDZ: UAM, NEV: ETR, QSK: FKB}.
So the maximum matching is ",6,7,219
bipartite,"[(ZWN, UTN), (ZWN, SNZ), (JSY, HXG), (JSY, OMZ), (JSY, CZT), (JUB, UTN), (JUB, HXG), (JUB, OMZ), (JUB, AWR)]","{ZWN: [UTN, SNZ],
JSY: [HXG, OMZ, CZT],
JUB: [UTN, HXG, OMZ, AWR],
UTN: [ZWN, JUB],
HXG: [JSY, JUB],
OMZ: [JSY, JUB],
AWR: [JUB],
CZT: [JSY],
SNZ: [ZWN]}","Node ZWN is connected to nodes UTN, SNZ.
Node JSY is connected to nodes HXG, OMZ, CZT.
Node JUB is connected to nodes UTN, HXG, OMZ, AWR.
Node UTN is connected to nodes ZWN, JUB.
Node HXG is connected to nodes JSY, JUB.
Node OMZ is connected to nodes JSY, JUB.
Node AWR is connected to node JUB.
Node CZT is connected to node JSY.
Node SNZ is connected to node ZWN.","[ZWN, JSY, JUB, UTN, HXG, OMZ, AWR, CZT, SNZ]",9,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZWN JSY JUB.
Nodes set 2 contains: UTN HXG OMZ AWR CZT SNZ.","[(ZWN, SNZ), (JSY, HXG), (JUB, UTN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZWN. Updated matching: {UTN: ZWN}.
Search from node JSY. Updated matching: {UTN: ZWN, HXG: JSY}.
Search from node JUB. Updated matching: {UTN: JUB, HXG: JSY, SNZ: ZWN}.
So the maximum matching is ",3,6,220
bipartite,"[(VBQ, FRZ), (VBQ, IPI), (VBQ, EEV), (VBQ, UFX), (JYR, CFG), (JYR, DUX), (JYR, WSH), (ZJK, CFG), (ZJK, DUX), (ZJK, EEV), (ZJK, UFX), (UOK, SFN), (UOK, WSH), (UOK, UFX), (QGJ, FRZ), (QGJ, SFN), (GJK, CFG), (GJK, IPI), (GJK, WSH)]","{VBQ: [FRZ, IPI, EEV, UFX],
JYR: [CFG, DUX, WSH],
ZJK: [CFG, DUX, EEV, UFX],
UOK: [SFN, WSH, UFX],
QGJ: [FRZ, SFN],
GJK: [CFG, IPI, WSH],
CFG: [JYR, ZJK, GJK],
FRZ: [VBQ, QGJ],
DUX: [JYR, ZJK],
IPI: [VBQ, GJK],
SFN: [UOK, QGJ],
WSH: [JYR, UOK, GJK],
EEV: [VBQ, ZJK],
UFX: [VBQ, ZJK, UOK]}","Node VBQ is connected to nodes FRZ, IPI, EEV, UFX.
Node JYR is connected to nodes CFG, DUX, WSH.
Node ZJK is connected to nodes CFG, DUX, EEV, UFX.
Node UOK is connected to nodes SFN, WSH, UFX.
Node QGJ is connected to nodes FRZ, SFN.
Node GJK is connected to nodes CFG, IPI, WSH.
Node CFG is connected to nodes JYR, ZJK, GJK.
Node FRZ is connected to nodes VBQ, QGJ.
Node DUX is connected to nodes JYR, ZJK.
Node IPI is connected to nodes VBQ, GJK.
Node SFN is connected to nodes UOK, QGJ.
Node WSH is connected to nodes JYR, UOK, GJK.
Node EEV is connected to nodes VBQ, ZJK.
Node UFX is connected to nodes VBQ, ZJK, UOK.","[VBQ, JYR, ZJK, UOK, QGJ, GJK, CFG, FRZ, DUX, IPI, SFN, WSH, EEV, UFX]",14,19,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VBQ JYR ZJK UOK QGJ GJK.
Nodes set 2 contains: CFG FRZ DUX IPI SFN WSH EEV UFX.","[(VBQ, IPI), (JYR, WSH), (ZJK, DUX), (UOK, SFN), (QGJ, FRZ), (GJK, CFG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VBQ. Updated matching: {FRZ: VBQ}.
Search from node JYR. Updated matching: {FRZ: VBQ, CFG: JYR}.
Search from node ZJK. Updated matching: {FRZ: VBQ, CFG: ZJK, DUX: JYR}.
Search from node UOK. Updated matching: {FRZ: VBQ, CFG: ZJK, DUX: JYR, SFN: UOK}.
Search from node QGJ. Updated matching: {FRZ: QGJ, CFG: ZJK, DUX: JYR, SFN: UOK, IPI: VBQ}.
Search from node GJK. Updated matching: {FRZ: QGJ, CFG: GJK, DUX: ZJK, SFN: UOK, IPI: VBQ, WSH: JYR}.
So the maximum matching is ",6,8,221
bipartite,"[(SGP, RDI), (THJ, RDI), (THJ, HAP), (THJ, VCZ), (THJ, XXI), (THJ, CLK), (EEI, HAP), (EEI, XXI), (EEI, MJB), (EEI, TPH)]","{SGP: [RDI],
THJ: [RDI, HAP, VCZ, XXI, CLK],
EEI: [HAP, XXI, MJB, TPH],
RDI: [SGP, THJ],
HAP: [THJ, EEI],
VCZ: [THJ],
XXI: [THJ, EEI],
CLK: [THJ],
MJB: [EEI],
TPH: [EEI]}","Node SGP is connected to node RDI.
Node THJ is connected to nodes RDI, HAP, VCZ, XXI, CLK.
Node EEI is connected to nodes HAP, XXI, MJB, TPH.
Node RDI is connected to nodes SGP, THJ.
Node HAP is connected to nodes THJ, EEI.
Node VCZ is connected to node THJ.
Node XXI is connected to nodes THJ, EEI.
Node CLK is connected to node THJ.
Node MJB is connected to node EEI.
Node TPH is connected to node EEI.","[SGP, THJ, EEI, RDI, HAP, VCZ, XXI, CLK, MJB, TPH]",10,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SGP THJ EEI.
Nodes set 2 contains: RDI HAP VCZ XXI CLK MJB TPH.","[(SGP, RDI), (THJ, VCZ), (EEI, HAP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SGP. Updated matching: {RDI: SGP}.
Search from node THJ. Updated matching: {RDI: SGP, HAP: THJ}.
Search from node EEI. Updated matching: {RDI: SGP, HAP: EEI, VCZ: THJ}.
So the maximum matching is ",3,7,222
bipartite,"[(YNJ, LEI), (YNJ, RLD), (ALU, DBB), (ALU, WLO), (TNZ, ZQV), (TNZ, RLD), (TWH, DBB), (TWH, WWY), (TWH, OKH), (TWH, ZQV), (TWH, RLD), (TWH, BQO)]","{YNJ: [LEI, RLD],
ALU: [DBB, WLO],
TNZ: [ZQV, RLD],
TWH: [DBB, WWY, OKH, ZQV, RLD, BQO],
DBB: [ALU, TWH],
WWY: [TWH],
LEI: [YNJ],
OKH: [TWH],
WLO: [ALU],
ZQV: [TNZ, TWH],
RLD: [YNJ, TNZ, TWH],
BQO: [TWH]}","Node YNJ is connected to nodes LEI, RLD.
Node ALU is connected to nodes DBB, WLO.
Node TNZ is connected to nodes ZQV, RLD.
Node TWH is connected to nodes DBB, WWY, OKH, ZQV, RLD, BQO.
Node DBB is connected to nodes ALU, TWH.
Node WWY is connected to node TWH.
Node LEI is connected to node YNJ.
Node OKH is connected to node TWH.
Node WLO is connected to node ALU.
Node ZQV is connected to nodes TNZ, TWH.
Node RLD is connected to nodes YNJ, TNZ, TWH.
Node BQO is connected to node TWH.","[YNJ, ALU, TNZ, TWH, DBB, WWY, LEI, OKH, WLO, ZQV, RLD, BQO]",12,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YNJ ALU TNZ TWH.
Nodes set 2 contains: DBB WWY LEI OKH WLO ZQV RLD BQO.","[(YNJ, LEI), (ALU, WLO), (TNZ, ZQV), (TWH, DBB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YNJ. Updated matching: {LEI: YNJ}.
Search from node ALU. Updated matching: {LEI: YNJ, DBB: ALU}.
Search from node TNZ. Updated matching: {LEI: YNJ, DBB: ALU, ZQV: TNZ}.
Search from node TWH. Updated matching: {LEI: YNJ, DBB: TWH, ZQV: TNZ, WLO: ALU}.
So the maximum matching is ",4,8,223
bipartite,"[(TNC, YJF), (TNC, TSE), (TNC, RVC), (PSO, ZQG), (PSO, YJF), (PSO, INT), (PSO, JWR), (PSO, TSE), (PSO, WKJ), (KGX, ZQG), (KGX, INT), (KGX, TXS), (KGX, WKJ)]","{TNC: [YJF, TSE, RVC],
PSO: [ZQG, YJF, INT, JWR, TSE, WKJ],
KGX: [ZQG, INT, TXS, WKJ],
ZQG: [PSO, KGX],
YJF: [TNC, PSO],
INT: [PSO, KGX],
JWR: [PSO],
TSE: [TNC, PSO],
RVC: [TNC],
TXS: [KGX],
WKJ: [PSO, KGX]}","Node TNC is connected to nodes YJF, TSE, RVC.
Node PSO is connected to nodes ZQG, YJF, INT, JWR, TSE, WKJ.
Node KGX is connected to nodes ZQG, INT, TXS, WKJ.
Node ZQG is connected to nodes PSO, KGX.
Node YJF is connected to nodes TNC, PSO.
Node INT is connected to nodes PSO, KGX.
Node JWR is connected to node PSO.
Node TSE is connected to nodes TNC, PSO.
Node RVC is connected to node TNC.
Node TXS is connected to node KGX.
Node WKJ is connected to nodes PSO, KGX.","[TNC, PSO, KGX, ZQG, YJF, INT, JWR, TSE, RVC, TXS, WKJ]",11,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TNC PSO KGX.
Nodes set 2 contains: ZQG YJF INT JWR TSE RVC TXS WKJ.","[(TNC, TSE), (PSO, YJF), (KGX, ZQG)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TNC. Updated matching: {YJF: TNC}.
Search from node PSO. Updated matching: {YJF: TNC, ZQG: PSO}.
Search from node KGX. Updated matching: {YJF: PSO, ZQG: KGX, TSE: TNC}.
So the maximum matching is ",3,8,224
bipartite,"[(DFM, OEC), (DFM, FGH), (XVO, IRR), (XVO, QXM), (ZED, OEC), (ZED, BEO), (ZED, NMR), (ZED, QXM)]","{DFM: [OEC, FGH],
XVO: [IRR, QXM],
ZED: [OEC, BEO, NMR, QXM],
OEC: [DFM, ZED],
BEO: [ZED],
FGH: [DFM],
IRR: [XVO],
NMR: [ZED],
QXM: [XVO, ZED]}","Node DFM is connected to nodes OEC, FGH.
Node XVO is connected to nodes IRR, QXM.
Node ZED is connected to nodes OEC, BEO, NMR, QXM.
Node OEC is connected to nodes DFM, ZED.
Node BEO is connected to node ZED.
Node FGH is connected to node DFM.
Node IRR is connected to node XVO.
Node NMR is connected to node ZED.
Node QXM is connected to nodes XVO, ZED.","[DFM, XVO, ZED, OEC, BEO, FGH, IRR, NMR, QXM]",9,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DFM XVO ZED.
Nodes set 2 contains: OEC BEO FGH IRR NMR QXM.","[(DFM, FGH), (XVO, IRR), (ZED, OEC)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DFM. Updated matching: {OEC: DFM}.
Search from node XVO. Updated matching: {OEC: DFM, IRR: XVO}.
Search from node ZED. Updated matching: {OEC: ZED, IRR: XVO, FGH: DFM}.
So the maximum matching is ",3,6,225
bipartite,"[(CZW, ORL), (CZW, IKY), (CZW, LYL), (CZW, RUM), (LEL, ORL), (LEL, FCG), (LEL, RUM), (DDJ, OLU), (DDJ, XWF), (MTI, QKH), (MTI, OLU), (JKZ, IKY), (JKZ, OLU), (LSW, RUM)]","{CZW: [ORL, IKY, LYL, RUM],
LEL: [ORL, FCG, RUM],
DDJ: [OLU, XWF],
MTI: [QKH, OLU],
JKZ: [IKY, OLU],
LSW: [RUM],
QKH: [MTI],
ORL: [CZW, LEL],
IKY: [CZW, JKZ],
LYL: [CZW],
OLU: [DDJ, MTI, JKZ],
FCG: [LEL],
XWF: [DDJ],
RUM: [CZW, LEL, LSW]}","Node CZW is connected to nodes ORL, IKY, LYL, RUM.
Node LEL is connected to nodes ORL, FCG, RUM.
Node DDJ is connected to nodes OLU, XWF.
Node MTI is connected to nodes QKH, OLU.
Node JKZ is connected to nodes IKY, OLU.
Node LSW is connected to node RUM.
Node QKH is connected to node MTI.
Node ORL is connected to nodes CZW, LEL.
Node IKY is connected to nodes CZW, JKZ.
Node LYL is connected to node CZW.
Node OLU is connected to nodes DDJ, MTI, JKZ.
Node FCG is connected to node LEL.
Node XWF is connected to node DDJ.
Node RUM is connected to nodes CZW, LEL, LSW.","[CZW, LEL, DDJ, MTI, JKZ, LSW, QKH, ORL, IKY, LYL, OLU, FCG, XWF, RUM]",14,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CZW LEL DDJ MTI JKZ LSW.
Nodes set 2 contains: QKH ORL IKY LYL OLU FCG XWF RUM.","[(CZW, ORL), (LEL, FCG), (DDJ, OLU), (MTI, QKH), (JKZ, IKY), (LSW, RUM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CZW. Updated matching: {ORL: CZW}.
Search from node LEL. Updated matching: {ORL: LEL, IKY: CZW}.
Search from node DDJ. Updated matching: {ORL: LEL, IKY: CZW, OLU: DDJ}.
Search from node MTI. Updated matching: {ORL: LEL, IKY: CZW, OLU: DDJ, QKH: MTI}.
Search from node JKZ. Updated matching: {ORL: CZW, IKY: JKZ, OLU: DDJ, QKH: MTI, FCG: LEL}.
Search from node LSW. Updated matching: {ORL: CZW, IKY: JKZ, OLU: DDJ, QKH: MTI, FCG: LEL, RUM: LSW}.
So the maximum matching is ",6,8,226
bipartite,"[(OLD, CBL), (OLD, ESE), (ZQA, BKO), (ZQA, CBL), (ZQA, ESE), (KDG, HBR), (KDG, ESE), (KDG, GCN), (AVZ, OHS), (AVZ, QOV), (WOS, WKP), (WOS, OHS), (WOS, CBL), (WOS, ESE), (WOS, GCN), (ATM, BKO), (ATM, HBR), (ATM, ESE), (ATM, QOV)]","{OLD: [CBL, ESE],
ZQA: [BKO, CBL, ESE],
KDG: [HBR, ESE, GCN],
AVZ: [OHS, QOV],
WOS: [WKP, OHS, CBL, ESE, GCN],
ATM: [BKO, HBR, ESE, QOV],
WKP: [WOS],
OHS: [AVZ, WOS],
BKO: [ZQA, ATM],
HBR: [KDG, ATM],
CBL: [OLD, ZQA, WOS],
ESE: [OLD, ZQA, KDG, WOS, ATM],
GCN: [KDG, WOS],
QOV: [AVZ, ATM]}","Node OLD is connected to nodes CBL, ESE.
Node ZQA is connected to nodes BKO, CBL, ESE.
Node KDG is connected to nodes HBR, ESE, GCN.
Node AVZ is connected to nodes OHS, QOV.
Node WOS is connected to nodes WKP, OHS, CBL, ESE, GCN.
Node ATM is connected to nodes BKO, HBR, ESE, QOV.
Node WKP is connected to node WOS.
Node OHS is connected to nodes AVZ, WOS.
Node BKO is connected to nodes ZQA, ATM.
Node HBR is connected to nodes KDG, ATM.
Node CBL is connected to nodes OLD, ZQA, WOS.
Node ESE is connected to nodes OLD, ZQA, KDG, WOS, ATM.
Node GCN is connected to nodes KDG, WOS.
Node QOV is connected to nodes AVZ, ATM.","[OLD, ZQA, KDG, AVZ, WOS, ATM, WKP, OHS, BKO, HBR, CBL, ESE, GCN, QOV]",14,19,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OLD ZQA KDG AVZ WOS ATM.
Nodes set 2 contains: WKP OHS BKO HBR CBL ESE GCN QOV.","[(OLD, ESE), (ZQA, CBL), (KDG, HBR), (AVZ, OHS), (WOS, WKP), (ATM, BKO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OLD. Updated matching: {CBL: OLD}.
Search from node ZQA. Updated matching: {CBL: OLD, BKO: ZQA}.
Search from node KDG. Updated matching: {CBL: OLD, BKO: ZQA, HBR: KDG}.
Search from node AVZ. Updated matching: {CBL: OLD, BKO: ZQA, HBR: KDG, OHS: AVZ}.
Search from node WOS. Updated matching: {CBL: OLD, BKO: ZQA, HBR: KDG, OHS: AVZ, WKP: WOS}.
Search from node ATM. Updated matching: {CBL: ZQA, BKO: ATM, HBR: KDG, OHS: AVZ, WKP: WOS, ESE: OLD}.
So the maximum matching is ",6,8,227
bipartite,"[(IQD, DIM), (OHL, ABV), (OHL, SCA), (ETY, BBK), (ETY, IOZ), (ETY, ABV), (ETY, DIM), (ETY, FTN)]","{IQD: [DIM],
OHL: [ABV, SCA],
ETY: [BBK, IOZ, ABV, DIM, FTN],
BBK: [ETY],
IOZ: [ETY],
ABV: [OHL, ETY],
DIM: [IQD, ETY],
FTN: [ETY],
SCA: [OHL]}","Node IQD is connected to node DIM.
Node OHL is connected to nodes ABV, SCA.
Node ETY is connected to nodes BBK, IOZ, ABV, DIM, FTN.
Node BBK is connected to node ETY.
Node IOZ is connected to node ETY.
Node ABV is connected to nodes OHL, ETY.
Node DIM is connected to nodes IQD, ETY.
Node FTN is connected to node ETY.
Node SCA is connected to node OHL.","[IQD, OHL, ETY, BBK, IOZ, ABV, DIM, FTN, SCA]",9,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IQD OHL ETY.
Nodes set 2 contains: BBK IOZ ABV DIM FTN SCA.","[(IQD, DIM), (OHL, ABV), (ETY, BBK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IQD. Updated matching: {DIM: IQD}.
Search from node OHL. Updated matching: {DIM: IQD, ABV: OHL}.
Search from node ETY. Updated matching: {DIM: IQD, ABV: OHL, BBK: ETY}.
So the maximum matching is ",3,6,228
bipartite,"[(EXL, GUR), (EXL, PQB), (EKU, IXS), (EKU, ALY), (DPS, PQB), (DPS, DBS), (DPS, ALY), (LJT, IXS), (LJT, DBS), (LJT, ALY)]","{EXL: [GUR, PQB],
EKU: [IXS, ALY],
DPS: [PQB, DBS, ALY],
LJT: [IXS, DBS, ALY],
GUR: [EXL],
IXS: [EKU, LJT],
PQB: [EXL, DPS],
DBS: [DPS, LJT],
ALY: [EKU, DPS, LJT]}","Node EXL is connected to nodes GUR, PQB.
Node EKU is connected to nodes IXS, ALY.
Node DPS is connected to nodes PQB, DBS, ALY.
Node LJT is connected to nodes IXS, DBS, ALY.
Node GUR is connected to node EXL.
Node IXS is connected to nodes EKU, LJT.
Node PQB is connected to nodes EXL, DPS.
Node DBS is connected to nodes DPS, LJT.
Node ALY is connected to nodes EKU, DPS, LJT.","[EXL, EKU, DPS, LJT, GUR, IXS, PQB, DBS, ALY]",9,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: EXL EKU DPS LJT.
Nodes set 2 contains: GUR IXS PQB DBS ALY.","[(EXL, GUR), (EKU, ALY), (DPS, PQB), (LJT, IXS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node EXL. Updated matching: {GUR: EXL}.
Search from node EKU. Updated matching: {GUR: EXL, IXS: EKU}.
Search from node DPS. Updated matching: {GUR: EXL, IXS: EKU, PQB: DPS}.
Search from node LJT. Updated matching: {GUR: EXL, IXS: LJT, PQB: DPS, ALY: EKU}.
So the maximum matching is ",4,5,229
bipartite,"[(KHQ, OMA), (KHQ, IMF), (YLP, ZQV), (YLP, IMF), (RYJ, MCM), (RYJ, GQL), (RYJ, IMF), (RBI, GQL), (RBI, XIK)]","{KHQ: [OMA, IMF],
YLP: [ZQV, IMF],
RYJ: [MCM, GQL, IMF],
RBI: [GQL, XIK],
MCM: [RYJ],
GQL: [RYJ, RBI],
XIK: [RBI],
ZQV: [YLP],
OMA: [KHQ],
IMF: [KHQ, YLP, RYJ]}","Node KHQ is connected to nodes OMA, IMF.
Node YLP is connected to nodes ZQV, IMF.
Node RYJ is connected to nodes MCM, GQL, IMF.
Node RBI is connected to nodes GQL, XIK.
Node MCM is connected to node RYJ.
Node GQL is connected to nodes RYJ, RBI.
Node XIK is connected to node RBI.
Node ZQV is connected to node YLP.
Node OMA is connected to node KHQ.
Node IMF is connected to nodes KHQ, YLP, RYJ.","[KHQ, YLP, RYJ, RBI, MCM, GQL, XIK, ZQV, OMA, IMF]",10,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: KHQ YLP RYJ RBI.
Nodes set 2 contains: MCM GQL XIK ZQV OMA IMF.","[(KHQ, OMA), (YLP, ZQV), (RYJ, MCM), (RBI, GQL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node KHQ. Updated matching: {OMA: KHQ}.
Search from node YLP. Updated matching: {OMA: KHQ, ZQV: YLP}.
Search from node RYJ. Updated matching: {OMA: KHQ, ZQV: YLP, MCM: RYJ}.
Search from node RBI. Updated matching: {OMA: KHQ, ZQV: YLP, MCM: RYJ, GQL: RBI}.
So the maximum matching is ",4,6,230
bipartite,"[(NXJ, ACO), (NXJ, ZMP), (NXJ, PAB), (ORW, ZMP), (UCB, ACO), (UCB, QOY), (UCB, VAY), (UCB, ZMP), (UCB, HHL)]","{NXJ: [ACO, ZMP, PAB],
ORW: [ZMP],
UCB: [ACO, QOY, VAY, ZMP, HHL],
ACO: [NXJ, UCB],
QOY: [UCB],
VAY: [UCB],
ZMP: [NXJ, ORW, UCB],
PAB: [NXJ],
HHL: [UCB]}","Node NXJ is connected to nodes ACO, ZMP, PAB.
Node ORW is connected to node ZMP.
Node UCB is connected to nodes ACO, QOY, VAY, ZMP, HHL.
Node ACO is connected to nodes NXJ, UCB.
Node QOY is connected to node UCB.
Node VAY is connected to node UCB.
Node ZMP is connected to nodes NXJ, ORW, UCB.
Node PAB is connected to node NXJ.
Node HHL is connected to node UCB.","[NXJ, ORW, UCB, ACO, QOY, VAY, ZMP, PAB, HHL]",9,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NXJ ORW UCB.
Nodes set 2 contains: ACO QOY VAY ZMP PAB HHL.","[(NXJ, PAB), (ORW, ZMP), (UCB, ACO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NXJ. Updated matching: {ACO: NXJ}.
Search from node ORW. Updated matching: {ACO: NXJ, ZMP: ORW}.
Search from node UCB. Updated matching: {ACO: UCB, ZMP: ORW, PAB: NXJ}.
So the maximum matching is ",3,6,231
bipartite,"[(LIO, ZOI), (LIO, UEV), (LIO, STL), (LIO, CDW), (LIO, WQV), (LIO, NOU), (BPW, UEV), (SVR, ZCL), (SVR, STL), (SVR, CVP), (ZAJ, DPF), (ZAJ, STL), (ZAJ, CDW), (UKB, ZCL), (NUF, ZCL)]","{LIO: [ZOI, UEV, STL, CDW, WQV, NOU],
BPW: [UEV],
SVR: [ZCL, STL, CVP],
ZAJ: [DPF, STL, CDW],
UKB: [ZCL],
NUF: [ZCL],
ZCL: [SVR, UKB, NUF],
ZOI: [LIO],
UEV: [LIO, BPW],
DPF: [ZAJ],
STL: [LIO, SVR, ZAJ],
CVP: [SVR],
CDW: [LIO, ZAJ],
WQV: [LIO],
NOU: [LIO]}","Node LIO is connected to nodes ZOI, UEV, STL, CDW, WQV, NOU.
Node BPW is connected to node UEV.
Node SVR is connected to nodes ZCL, STL, CVP.
Node ZAJ is connected to nodes DPF, STL, CDW.
Node UKB is connected to node ZCL.
Node NUF is connected to node ZCL.
Node ZCL is connected to nodes SVR, UKB, NUF.
Node ZOI is connected to node LIO.
Node UEV is connected to nodes LIO, BPW.
Node DPF is connected to node ZAJ.
Node STL is connected to nodes LIO, SVR, ZAJ.
Node CVP is connected to node SVR.
Node CDW is connected to nodes LIO, ZAJ.
Node WQV is connected to node LIO.
Node NOU is connected to node LIO.","[LIO, BPW, SVR, ZAJ, UKB, NUF, ZCL, ZOI, UEV, DPF, STL, CVP, CDW, WQV, NOU]",15,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: LIO BPW SVR ZAJ UKB NUF.
Nodes set 2 contains: ZCL ZOI UEV DPF STL CVP CDW WQV NOU.","[(LIO, ZOI), (BPW, UEV), (SVR, STL), (ZAJ, DPF), (UKB, ZCL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node LIO. Updated matching: {ZOI: LIO}.
Search from node BPW. Updated matching: {ZOI: LIO, UEV: BPW}.
Search from node SVR. Updated matching: {ZOI: LIO, UEV: BPW, ZCL: SVR}.
Search from node ZAJ. Updated matching: {ZOI: LIO, UEV: BPW, ZCL: SVR, DPF: ZAJ}.
Search from node UKB. Updated matching: {ZOI: LIO, UEV: BPW, ZCL: UKB, DPF: ZAJ, STL: SVR}.
Search from node NUF. Updated matching: {ZOI: LIO, UEV: BPW, ZCL: UKB, DPF: ZAJ, STL: SVR}.
So the maximum matching is ",6,9,232
bipartite,"[(GRD, JWU), (SLG, JJK), (SLG, JWU), (SLG, ZES), (NIL, JWU), (NIL, VDK), (NFB, JJK), (NFB, YMI), (NFB, ZCP)]","{GRD: [JWU],
SLG: [JJK, JWU, ZES],
NIL: [JWU, VDK],
NFB: [JJK, YMI, ZCP],
JJK: [SLG, NFB],
JWU: [GRD, SLG, NIL],
ZES: [SLG],
VDK: [NIL],
YMI: [NFB],
ZCP: [NFB]}","Node GRD is connected to node JWU.
Node SLG is connected to nodes JJK, JWU, ZES.
Node NIL is connected to nodes JWU, VDK.
Node NFB is connected to nodes JJK, YMI, ZCP.
Node JJK is connected to nodes SLG, NFB.
Node JWU is connected to nodes GRD, SLG, NIL.
Node ZES is connected to node SLG.
Node VDK is connected to node NIL.
Node YMI is connected to node NFB.
Node ZCP is connected to node NFB.","[GRD, SLG, NIL, NFB, JJK, JWU, ZES, VDK, YMI, ZCP]",10,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GRD SLG NIL NFB.
Nodes set 2 contains: JJK JWU ZES VDK YMI ZCP.","[(GRD, JWU), (SLG, ZES), (NIL, VDK), (NFB, JJK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GRD. Updated matching: {JWU: GRD}.
Search from node SLG. Updated matching: {JWU: GRD, JJK: SLG}.
Search from node NIL. Updated matching: {JWU: GRD, JJK: SLG, VDK: NIL}.
Search from node NFB. Updated matching: {JWU: GRD, JJK: NFB, VDK: NIL, ZES: SLG}.
So the maximum matching is ",4,6,233
bipartite,"[(GYA, FGF), (GYA, TNU), (GYA, LTP), (GYA, ARS), (YPU, FGF), (YPU, STO), (YPU, DAN), (PNU, DAN), (QSD, STO)]","{GYA: [FGF, TNU, LTP, ARS],
YPU: [FGF, STO, DAN],
PNU: [DAN],
QSD: [STO],
FGF: [GYA, YPU],
TNU: [GYA],
LTP: [GYA],
STO: [YPU, QSD],
DAN: [YPU, PNU],
ARS: [GYA]}","Node GYA is connected to nodes FGF, TNU, LTP, ARS.
Node YPU is connected to nodes FGF, STO, DAN.
Node PNU is connected to node DAN.
Node QSD is connected to node STO.
Node FGF is connected to nodes GYA, YPU.
Node TNU is connected to node GYA.
Node LTP is connected to node GYA.
Node STO is connected to nodes YPU, QSD.
Node DAN is connected to nodes YPU, PNU.
Node ARS is connected to node GYA.","[GYA, YPU, PNU, QSD, FGF, TNU, LTP, STO, DAN, ARS]",10,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GYA YPU PNU QSD.
Nodes set 2 contains: FGF TNU LTP STO DAN ARS.","[(GYA, TNU), (YPU, FGF), (PNU, DAN), (QSD, STO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GYA. Updated matching: {FGF: GYA}.
Search from node YPU. Updated matching: {FGF: YPU, TNU: GYA}.
Search from node PNU. Updated matching: {FGF: YPU, TNU: GYA, DAN: PNU}.
Search from node QSD. Updated matching: {FGF: YPU, TNU: GYA, DAN: PNU, STO: QSD}.
So the maximum matching is ",4,6,234
bipartite,"[(YBV, VIO), (YBV, XNP), (YBV, ECJ), (YBV, RBO), (YBV, QQJ), (BLO, AWV), (BLO, AWX), (BLO, VIO), (BLO, XNP), (BLO, QQJ), (BLO, IWT), (BLO, JBJ), (NRV, AWX), (NRV, XNP), (NRV, IWT), (RHF, AWV), (RHF, QQJ), (RHF, IWT), (RHF, JBJ), (IDL, XNP), (IDL, ECJ)]","{YBV: [VIO, XNP, ECJ, RBO, QQJ],
BLO: [AWV, AWX, VIO, XNP, QQJ, IWT, JBJ],
NRV: [AWX, XNP, IWT],
RHF: [AWV, QQJ, IWT, JBJ],
IDL: [XNP, ECJ],
AWV: [BLO, RHF],
AWX: [BLO, NRV],
VIO: [YBV, BLO],
XNP: [YBV, BLO, NRV, IDL],
ECJ: [YBV, IDL],
RBO: [YBV],
QQJ: [YBV, BLO, RHF],
IWT: [BLO, NRV, RHF],
JBJ: [BLO, RHF]}","Node YBV is connected to nodes VIO, XNP, ECJ, RBO, QQJ.
Node BLO is connected to nodes AWV, AWX, VIO, XNP, QQJ, IWT, JBJ.
Node NRV is connected to nodes AWX, XNP, IWT.
Node RHF is connected to nodes AWV, QQJ, IWT, JBJ.
Node IDL is connected to nodes XNP, ECJ.
Node AWV is connected to nodes BLO, RHF.
Node AWX is connected to nodes BLO, NRV.
Node VIO is connected to nodes YBV, BLO.
Node XNP is connected to nodes YBV, BLO, NRV, IDL.
Node ECJ is connected to nodes YBV, IDL.
Node RBO is connected to node YBV.
Node QQJ is connected to nodes YBV, BLO, RHF.
Node IWT is connected to nodes BLO, NRV, RHF.
Node JBJ is connected to nodes BLO, RHF.","[YBV, BLO, NRV, RHF, IDL, AWV, AWX, VIO, XNP, ECJ, RBO, QQJ, IWT, JBJ]",14,21,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YBV BLO NRV RHF IDL.
Nodes set 2 contains: AWV AWX VIO XNP ECJ RBO QQJ IWT JBJ.","[(YBV, VIO), (BLO, AWV), (NRV, AWX), (RHF, QQJ), (IDL, XNP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YBV. Updated matching: {VIO: YBV}.
Search from node BLO. Updated matching: {VIO: YBV, AWV: BLO}.
Search from node NRV. Updated matching: {VIO: YBV, AWV: BLO, AWX: NRV}.
Search from node RHF. Updated matching: {VIO: YBV, AWV: RHF, AWX: BLO, XNP: NRV}.
Search from node IDL. Updated matching: {VIO: YBV, AWV: BLO, AWX: NRV, XNP: IDL, QQJ: RHF}.
So the maximum matching is ",5,9,235
bipartite,"[(HCR, WGM), (HCR, TOV), (HCR, IVW), (HCR, XMF), (MWV, QZS), (MWV, TOV), (MWV, XMF), (QBX, XMF), (AUC, QZS), (AUC, FXZ), (AUC, TOV), (VTP, WGM)]","{HCR: [WGM, TOV, IVW, XMF],
MWV: [QZS, TOV, XMF],
QBX: [XMF],
AUC: [QZS, FXZ, TOV],
VTP: [WGM],
QZS: [MWV, AUC],
WGM: [HCR, VTP],
FXZ: [AUC],
TOV: [HCR, MWV, AUC],
IVW: [HCR],
XMF: [HCR, MWV, QBX]}","Node HCR is connected to nodes WGM, TOV, IVW, XMF.
Node MWV is connected to nodes QZS, TOV, XMF.
Node QBX is connected to node XMF.
Node AUC is connected to nodes QZS, FXZ, TOV.
Node VTP is connected to node WGM.
Node QZS is connected to nodes MWV, AUC.
Node WGM is connected to nodes HCR, VTP.
Node FXZ is connected to node AUC.
Node TOV is connected to nodes HCR, MWV, AUC.
Node IVW is connected to node HCR.
Node XMF is connected to nodes HCR, MWV, QBX.","[HCR, MWV, QBX, AUC, VTP, QZS, WGM, FXZ, TOV, IVW, XMF]",11,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HCR MWV QBX AUC VTP.
Nodes set 2 contains: QZS WGM FXZ TOV IVW XMF.","[(HCR, TOV), (MWV, QZS), (QBX, XMF), (AUC, FXZ), (VTP, WGM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HCR. Updated matching: {WGM: HCR}.
Search from node MWV. Updated matching: {WGM: HCR, QZS: MWV}.
Search from node QBX. Updated matching: {WGM: HCR, QZS: MWV, XMF: QBX}.
Search from node AUC. Updated matching: {WGM: HCR, QZS: AUC, XMF: QBX, TOV: MWV}.
Search from node VTP. Updated matching: {WGM: VTP, QZS: MWV, XMF: QBX, TOV: HCR, FXZ: AUC}.
So the maximum matching is ",5,6,236
bipartite,"[(GZT, QXO), (GZT, NQF), (GZT, WBQ), (GZT, XSD), (GZT, AXV), (FOI, WBQ), (FOI, XSD), (SSM, QXO), (SSM, NQF), (SSM, YPS), (SSM, XSD), (QGU, WBQ), (QGU, YPS), (RXB, YPS), (RXB, AXV)]","{GZT: [QXO, NQF, WBQ, XSD, AXV],
FOI: [WBQ, XSD],
SSM: [QXO, NQF, YPS, XSD],
QGU: [WBQ, YPS],
RXB: [YPS, AXV],
QXO: [GZT, SSM],
NQF: [GZT, SSM],
WBQ: [GZT, FOI, QGU],
YPS: [SSM, QGU, RXB],
XSD: [GZT, FOI, SSM],
AXV: [GZT, RXB]}","Node GZT is connected to nodes QXO, NQF, WBQ, XSD, AXV.
Node FOI is connected to nodes WBQ, XSD.
Node SSM is connected to nodes QXO, NQF, YPS, XSD.
Node QGU is connected to nodes WBQ, YPS.
Node RXB is connected to nodes YPS, AXV.
Node QXO is connected to nodes GZT, SSM.
Node NQF is connected to nodes GZT, SSM.
Node WBQ is connected to nodes GZT, FOI, QGU.
Node YPS is connected to nodes SSM, QGU, RXB.
Node XSD is connected to nodes GZT, FOI, SSM.
Node AXV is connected to nodes GZT, RXB.","[GZT, FOI, SSM, QGU, RXB, QXO, NQF, WBQ, YPS, XSD, AXV]",11,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GZT FOI SSM QGU RXB.
Nodes set 2 contains: QXO NQF WBQ YPS XSD AXV.","[(GZT, NQF), (FOI, XSD), (SSM, QXO), (QGU, WBQ), (RXB, YPS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GZT. Updated matching: {QXO: GZT}.
Search from node FOI. Updated matching: {QXO: GZT, WBQ: FOI}.
Search from node SSM. Updated matching: {QXO: SSM, WBQ: FOI, NQF: GZT}.
Search from node QGU. Updated matching: {QXO: SSM, WBQ: QGU, NQF: GZT, XSD: FOI}.
Search from node RXB. Updated matching: {QXO: SSM, WBQ: QGU, NQF: GZT, XSD: FOI, YPS: RXB}.
So the maximum matching is ",5,6,237
bipartite,"[(POL, LCX), (POL, QFS), (POL, NUU), (VGC, NNQ), (VGC, OEN), (VGC, OSZ), (VGC, XYV), (KVH, NNQ), (KVH, QFS), (KVH, XYV), (ZBT, LCX), (ZBT, MYI), (ZBT, NUU)]","{POL: [LCX, QFS, NUU],
VGC: [NNQ, OEN, OSZ, XYV],
KVH: [NNQ, QFS, XYV],
ZBT: [LCX, MYI, NUU],
LCX: [POL, ZBT],
MYI: [ZBT],
NNQ: [VGC, KVH],
OEN: [VGC],
OSZ: [VGC],
QFS: [POL, KVH],
NUU: [POL, ZBT],
XYV: [VGC, KVH]}","Node POL is connected to nodes LCX, QFS, NUU.
Node VGC is connected to nodes NNQ, OEN, OSZ, XYV.
Node KVH is connected to nodes NNQ, QFS, XYV.
Node ZBT is connected to nodes LCX, MYI, NUU.
Node LCX is connected to nodes POL, ZBT.
Node MYI is connected to node ZBT.
Node NNQ is connected to nodes VGC, KVH.
Node OEN is connected to node VGC.
Node OSZ is connected to node VGC.
Node QFS is connected to nodes POL, KVH.
Node NUU is connected to nodes POL, ZBT.
Node XYV is connected to nodes VGC, KVH.","[POL, VGC, KVH, ZBT, LCX, MYI, NNQ, OEN, OSZ, QFS, NUU, XYV]",12,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: POL VGC KVH ZBT.
Nodes set 2 contains: LCX MYI NNQ OEN OSZ QFS NUU XYV.","[(POL, QFS), (VGC, OEN), (KVH, NNQ), (ZBT, LCX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node POL. Updated matching: {LCX: POL}.
Search from node VGC. Updated matching: {LCX: POL, NNQ: VGC}.
Search from node KVH. Updated matching: {LCX: POL, NNQ: KVH, OEN: VGC}.
Search from node ZBT. Updated matching: {LCX: ZBT, NNQ: KVH, OEN: VGC, QFS: POL}.
So the maximum matching is ",4,8,238
bipartite,"[(AWW, TSZ), (AWW, DBR), (RJV, SJS), (RJV, FCJ), (RJV, JMD), (OHB, SJS), (OHB, TSZ), (OHB, JMD), (URU, TSZ), (URU, DBR)]","{AWW: [TSZ, DBR],
RJV: [SJS, FCJ, JMD],
OHB: [SJS, TSZ, JMD],
URU: [TSZ, DBR],
SJS: [RJV, OHB],
FCJ: [RJV],
TSZ: [AWW, OHB, URU],
JMD: [RJV, OHB],
DBR: [AWW, URU]}","Node AWW is connected to nodes TSZ, DBR.
Node RJV is connected to nodes SJS, FCJ, JMD.
Node OHB is connected to nodes SJS, TSZ, JMD.
Node URU is connected to nodes TSZ, DBR.
Node SJS is connected to nodes RJV, OHB.
Node FCJ is connected to node RJV.
Node TSZ is connected to nodes AWW, OHB, URU.
Node JMD is connected to nodes RJV, OHB.
Node DBR is connected to nodes AWW, URU.","[AWW, RJV, OHB, URU, SJS, FCJ, TSZ, JMD, DBR]",9,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: AWW RJV OHB URU.
Nodes set 2 contains: SJS FCJ TSZ JMD DBR.","[(AWW, DBR), (RJV, FCJ), (OHB, SJS), (URU, TSZ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node AWW. Updated matching: {TSZ: AWW}.
Search from node RJV. Updated matching: {TSZ: AWW, SJS: RJV}.
Search from node OHB. Updated matching: {TSZ: AWW, SJS: OHB, FCJ: RJV}.
Search from node URU. Updated matching: {TSZ: URU, SJS: OHB, FCJ: RJV, DBR: AWW}.
So the maximum matching is ",4,5,239
bipartite,"[(EHQ, DVM), (EHQ, TDL), (AXL, DVM), (AXL, NCV), (AXL, TDL), (AXL, QUE), (AXL, CLV), (VRB, EVU), (VRB, TDL), (VRB, HNU), (CCD, DVM), (CCD, NCV), (CCD, JWC), (CCD, HNU), (CCD, CLV), (CCD, UTL)]","{EHQ: [DVM, TDL],
AXL: [DVM, NCV, TDL, QUE, CLV],
VRB: [EVU, TDL, HNU],
CCD: [DVM, NCV, JWC, HNU, CLV, UTL],
DVM: [EHQ, AXL, CCD],
EVU: [VRB],
NCV: [AXL, CCD],
TDL: [EHQ, AXL, VRB],
JWC: [CCD],
HNU: [VRB, CCD],
QUE: [AXL],
CLV: [AXL, CCD],
UTL: [CCD]}","Node EHQ is connected to nodes DVM, TDL.
Node AXL is connected to nodes DVM, NCV, TDL, QUE, CLV.
Node VRB is connected to nodes EVU, TDL, HNU.
Node CCD is connected to nodes DVM, NCV, JWC, HNU, CLV, UTL.
Node DVM is connected to nodes EHQ, AXL, CCD.
Node EVU is connected to node VRB.
Node NCV is connected to nodes AXL, CCD.
Node TDL is connected to nodes EHQ, AXL, VRB.
Node JWC is connected to node CCD.
Node HNU is connected to nodes VRB, CCD.
Node QUE is connected to node AXL.
Node CLV is connected to nodes AXL, CCD.
Node UTL is connected to node CCD.","[EHQ, AXL, VRB, CCD, DVM, EVU, NCV, TDL, JWC, HNU, QUE, CLV, UTL]",13,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: EHQ AXL VRB CCD.
Nodes set 2 contains: DVM EVU NCV TDL JWC HNU QUE CLV UTL.","[(EHQ, TDL), (AXL, NCV), (VRB, EVU), (CCD, DVM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node EHQ. Updated matching: {DVM: EHQ}.
Search from node AXL. Updated matching: {DVM: AXL, TDL: EHQ}.
Search from node VRB. Updated matching: {DVM: AXL, TDL: EHQ, EVU: VRB}.
Search from node CCD. Updated matching: {DVM: CCD, TDL: EHQ, EVU: VRB, NCV: AXL}.
So the maximum matching is ",4,9,240
bipartite,"[(SDZ, XFG), (SDZ, LHA), (LIZ, LHA), (LIZ, KHJ), (BGR, MUB), (BGR, ITX), (BGR, KHJ), (DTN, OOS), (DTN, ITX), (KGR, ITX), (KGR, XFG)]","{SDZ: [XFG, LHA],
LIZ: [LHA, KHJ],
BGR: [MUB, ITX, KHJ],
DTN: [OOS, ITX],
KGR: [ITX, XFG],
MUB: [BGR],
OOS: [DTN],
ITX: [BGR, DTN, KGR],
XFG: [SDZ, KGR],
LHA: [SDZ, LIZ],
KHJ: [LIZ, BGR]}","Node SDZ is connected to nodes XFG, LHA.
Node LIZ is connected to nodes LHA, KHJ.
Node BGR is connected to nodes MUB, ITX, KHJ.
Node DTN is connected to nodes OOS, ITX.
Node KGR is connected to nodes ITX, XFG.
Node MUB is connected to node BGR.
Node OOS is connected to node DTN.
Node ITX is connected to nodes BGR, DTN, KGR.
Node XFG is connected to nodes SDZ, KGR.
Node LHA is connected to nodes SDZ, LIZ.
Node KHJ is connected to nodes LIZ, BGR.","[SDZ, LIZ, BGR, DTN, KGR, MUB, OOS, ITX, XFG, LHA, KHJ]",11,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SDZ LIZ BGR DTN KGR.
Nodes set 2 contains: MUB OOS ITX XFG LHA KHJ.","[(SDZ, XFG), (LIZ, LHA), (BGR, MUB), (DTN, OOS), (KGR, ITX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SDZ. Updated matching: {XFG: SDZ}.
Search from node LIZ. Updated matching: {XFG: SDZ, LHA: LIZ}.
Search from node BGR. Updated matching: {XFG: SDZ, LHA: LIZ, MUB: BGR}.
Search from node DTN. Updated matching: {XFG: SDZ, LHA: LIZ, MUB: BGR, OOS: DTN}.
Search from node KGR. Updated matching: {XFG: SDZ, LHA: LIZ, MUB: BGR, OOS: DTN, ITX: KGR}.
So the maximum matching is ",5,6,241
bipartite,"[(ZCR, AKU), (ZCR, IGD), (ZCR, ZTH), (ZCR, GWI), (ZCR, JMH), (BLY, AKU), (BLY, GWI), (BLY, JMH), (ANN, PYM), (ANN, GWI), (ANN, JMH), (BBK, AKU), (BBK, IGD), (BBK, TFB), (BBK, AMB), (TRP, AKU), (TRP, PYM), (TRP, ZTH), (TRP, JMH), (TRP, AMB)]","{ZCR: [AKU, IGD, ZTH, GWI, JMH],
BLY: [AKU, GWI, JMH],
ANN: [PYM, GWI, JMH],
BBK: [AKU, IGD, TFB, AMB],
TRP: [AKU, PYM, ZTH, JMH, AMB],
AKU: [ZCR, BLY, BBK, TRP],
IGD: [ZCR, BBK],
PYM: [ANN, TRP],
ZTH: [ZCR, TRP],
GWI: [ZCR, BLY, ANN],
JMH: [ZCR, BLY, ANN, TRP],
TFB: [BBK],
AMB: [BBK, TRP]}","Node ZCR is connected to nodes AKU, IGD, ZTH, GWI, JMH.
Node BLY is connected to nodes AKU, GWI, JMH.
Node ANN is connected to nodes PYM, GWI, JMH.
Node BBK is connected to nodes AKU, IGD, TFB, AMB.
Node TRP is connected to nodes AKU, PYM, ZTH, JMH, AMB.
Node AKU is connected to nodes ZCR, BLY, BBK, TRP.
Node IGD is connected to nodes ZCR, BBK.
Node PYM is connected to nodes ANN, TRP.
Node ZTH is connected to nodes ZCR, TRP.
Node GWI is connected to nodes ZCR, BLY, ANN.
Node JMH is connected to nodes ZCR, BLY, ANN, TRP.
Node TFB is connected to node BBK.
Node AMB is connected to nodes BBK, TRP.","[ZCR, BLY, ANN, BBK, TRP, AKU, IGD, PYM, ZTH, GWI, JMH, TFB, AMB]",13,20,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZCR BLY ANN BBK TRP.
Nodes set 2 contains: AKU IGD PYM ZTH GWI JMH TFB AMB.","[(ZCR, ZTH), (BLY, GWI), (ANN, PYM), (BBK, IGD), (TRP, AKU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZCR. Updated matching: {AKU: ZCR}.
Search from node BLY. Updated matching: {AKU: BLY, IGD: ZCR}.
Search from node ANN. Updated matching: {AKU: BLY, IGD: ZCR, PYM: ANN}.
Search from node BBK. Updated matching: {AKU: BBK, IGD: ZCR, PYM: ANN, GWI: BLY}.
Search from node TRP. Updated matching: {AKU: TRP, IGD: BBK, PYM: ANN, GWI: BLY, ZTH: ZCR}.
So the maximum matching is ",5,8,242
bipartite,"[(TWE, OZA), (TWE, HYQ), (TWE, CNY), (ORG, HYQ), (ORG, TEM), (ORG, CNY), (PWW, HGR), (PWW, HYQ), (PWW, EAG), (UBB, HYQ), (UBB, TEM), (UBB, EAG)]","{TWE: [OZA, HYQ, CNY],
ORG: [HYQ, TEM, CNY],
PWW: [HGR, HYQ, EAG],
UBB: [HYQ, TEM, EAG],
HGR: [PWW],
OZA: [TWE],
HYQ: [TWE, ORG, PWW, UBB],
TEM: [ORG, UBB],
CNY: [TWE, ORG],
EAG: [PWW, UBB]}","Node TWE is connected to nodes OZA, HYQ, CNY.
Node ORG is connected to nodes HYQ, TEM, CNY.
Node PWW is connected to nodes HGR, HYQ, EAG.
Node UBB is connected to nodes HYQ, TEM, EAG.
Node HGR is connected to node PWW.
Node OZA is connected to node TWE.
Node HYQ is connected to nodes TWE, ORG, PWW, UBB.
Node TEM is connected to nodes ORG, UBB.
Node CNY is connected to nodes TWE, ORG.
Node EAG is connected to nodes PWW, UBB.","[TWE, ORG, PWW, UBB, HGR, OZA, HYQ, TEM, CNY, EAG]",10,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TWE ORG PWW UBB.
Nodes set 2 contains: HGR OZA HYQ TEM CNY EAG.","[(TWE, OZA), (ORG, TEM), (PWW, HGR), (UBB, HYQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TWE. Updated matching: {OZA: TWE}.
Search from node ORG. Updated matching: {OZA: TWE, HYQ: ORG}.
Search from node PWW. Updated matching: {OZA: TWE, HYQ: ORG, HGR: PWW}.
Search from node UBB. Updated matching: {OZA: TWE, HYQ: UBB, HGR: PWW, TEM: ORG}.
So the maximum matching is ",4,6,243
bipartite,"[(IJI, ZCI), (FZN, HKW), (WSD, PEH), (WSD, QWY), (KYX, YUN), (KYX, HKW), (KYX, WCT), (ARV, PEH), (ARV, TUB), (ARV, HKW), (ARV, ZCI), (PKD, TUB), (PKD, QWY), (PKD, WCT)]","{IJI: [ZCI],
FZN: [HKW],
WSD: [PEH, QWY],
KYX: [YUN, HKW, WCT],
ARV: [PEH, TUB, HKW, ZCI],
PKD: [TUB, QWY, WCT],
PEH: [WSD, ARV],
YUN: [KYX],
TUB: [ARV, PKD],
HKW: [FZN, KYX, ARV],
QWY: [WSD, PKD],
WCT: [KYX, PKD],
ZCI: [IJI, ARV]}","Node IJI is connected to node ZCI.
Node FZN is connected to node HKW.
Node WSD is connected to nodes PEH, QWY.
Node KYX is connected to nodes YUN, HKW, WCT.
Node ARV is connected to nodes PEH, TUB, HKW, ZCI.
Node PKD is connected to nodes TUB, QWY, WCT.
Node PEH is connected to nodes WSD, ARV.
Node YUN is connected to node KYX.
Node TUB is connected to nodes ARV, PKD.
Node HKW is connected to nodes FZN, KYX, ARV.
Node QWY is connected to nodes WSD, PKD.
Node WCT is connected to nodes KYX, PKD.
Node ZCI is connected to nodes IJI, ARV.","[IJI, FZN, WSD, KYX, ARV, PKD, PEH, YUN, TUB, HKW, QWY, WCT, ZCI]",13,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IJI FZN WSD KYX ARV PKD.
Nodes set 2 contains: PEH YUN TUB HKW QWY WCT ZCI.","[(IJI, ZCI), (FZN, HKW), (WSD, QWY), (KYX, YUN), (ARV, PEH), (PKD, TUB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IJI. Updated matching: {ZCI: IJI}.
Search from node FZN. Updated matching: {ZCI: IJI, HKW: FZN}.
Search from node WSD. Updated matching: {ZCI: IJI, HKW: FZN, PEH: WSD}.
Search from node KYX. Updated matching: {ZCI: IJI, HKW: FZN, PEH: WSD, YUN: KYX}.
Search from node ARV. Updated matching: {ZCI: IJI, HKW: FZN, PEH: ARV, YUN: KYX, QWY: WSD}.
Search from node PKD. Updated matching: {ZCI: IJI, HKW: FZN, PEH: ARV, YUN: KYX, QWY: WSD, TUB: PKD}.
So the maximum matching is ",6,7,244
bipartite,"[(ESM, ULU), (ESM, RSA), (ESM, GUF), (ICB, EIN), (ICB, VKT), (ICB, RSA), (VRY, EIN), (MGX, YIU), (MGX, EIN)]","{ESM: [ULU, RSA, GUF],
ICB: [EIN, VKT, RSA],
VRY: [EIN],
MGX: [YIU, EIN],
YIU: [MGX],
EIN: [ICB, VRY, MGX],
VKT: [ICB],
ULU: [ESM],
RSA: [ESM, ICB],
GUF: [ESM]}","Node ESM is connected to nodes ULU, RSA, GUF.
Node ICB is connected to nodes EIN, VKT, RSA.
Node VRY is connected to node EIN.
Node MGX is connected to nodes YIU, EIN.
Node YIU is connected to node MGX.
Node EIN is connected to nodes ICB, VRY, MGX.
Node VKT is connected to node ICB.
Node ULU is connected to node ESM.
Node RSA is connected to nodes ESM, ICB.
Node GUF is connected to node ESM.","[ESM, ICB, VRY, MGX, YIU, EIN, VKT, ULU, RSA, GUF]",10,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ESM ICB VRY MGX.
Nodes set 2 contains: YIU EIN VKT ULU RSA GUF.","[(ESM, ULU), (ICB, VKT), (VRY, EIN), (MGX, YIU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ESM. Updated matching: {ULU: ESM}.
Search from node ICB. Updated matching: {ULU: ESM, EIN: ICB}.
Search from node VRY. Updated matching: {ULU: ESM, EIN: VRY, VKT: ICB}.
Search from node MGX. Updated matching: {ULU: ESM, EIN: VRY, VKT: ICB, YIU: MGX}.
So the maximum matching is ",4,6,245
bipartite,"[(XJI, AMI), (XJI, RAK), (XJI, SUL), (XJI, LMT), (CSN, AMI), (CSN, VFC), (CPR, AMI), (CPR, SUL), (CPR, LMT)]","{XJI: [AMI, RAK, SUL, LMT],
CSN: [AMI, VFC],
CPR: [AMI, SUL, LMT],
AMI: [XJI, CSN, CPR],
VFC: [CSN],
RAK: [XJI],
SUL: [XJI, CPR],
LMT: [XJI, CPR]}","Node XJI is connected to nodes AMI, RAK, SUL, LMT.
Node CSN is connected to nodes AMI, VFC.
Node CPR is connected to nodes AMI, SUL, LMT.
Node AMI is connected to nodes XJI, CSN, CPR.
Node VFC is connected to node CSN.
Node RAK is connected to node XJI.
Node SUL is connected to nodes XJI, CPR.
Node LMT is connected to nodes XJI, CPR.","[XJI, CSN, CPR, AMI, VFC, RAK, SUL, LMT]",8,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XJI CSN CPR.
Nodes set 2 contains: AMI VFC RAK SUL LMT.","[(XJI, RAK), (CSN, VFC), (CPR, AMI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XJI. Updated matching: {AMI: XJI}.
Search from node CSN. Updated matching: {AMI: CSN, RAK: XJI}.
Search from node CPR. Updated matching: {AMI: CPR, RAK: XJI, VFC: CSN}.
So the maximum matching is ",3,5,246
bipartite,"[(YIA, KSS), (YIA, YVY), (YIA, IYE), (YIA, MTW), (YIA, ZBY), (CMC, ZBY), (BJK, PMM), (BJK, IYE), (BJK, ZBY)]","{YIA: [KSS, YVY, IYE, MTW, ZBY],
CMC: [ZBY],
BJK: [PMM, IYE, ZBY],
PMM: [BJK],
KSS: [YIA],
YVY: [YIA],
IYE: [YIA, BJK],
MTW: [YIA],
ZBY: [YIA, CMC, BJK]}","Node YIA is connected to nodes KSS, YVY, IYE, MTW, ZBY.
Node CMC is connected to node ZBY.
Node BJK is connected to nodes PMM, IYE, ZBY.
Node PMM is connected to node BJK.
Node KSS is connected to node YIA.
Node YVY is connected to node YIA.
Node IYE is connected to nodes YIA, BJK.
Node MTW is connected to node YIA.
Node ZBY is connected to nodes YIA, CMC, BJK.","[YIA, CMC, BJK, PMM, KSS, YVY, IYE, MTW, ZBY]",9,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YIA CMC BJK.
Nodes set 2 contains: PMM KSS YVY IYE MTW ZBY.","[(YIA, KSS), (CMC, ZBY), (BJK, PMM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YIA. Updated matching: {KSS: YIA}.
Search from node CMC. Updated matching: {KSS: YIA, ZBY: CMC}.
Search from node BJK. Updated matching: {KSS: YIA, ZBY: CMC, PMM: BJK}.
So the maximum matching is ",3,6,247
bipartite,"[(DWT, VKE), (DWT, QNJ), (DWT, XSK), (DWT, DCD), (DWT, OEW), (DWT, ZNS), (JEQ, VKE), (JEQ, CUR), (WIE, CPT), (WIE, VKE), (WIE, QNJ), (WIE, ZSE), (WIE, ZNS), (RGU, CPT), (RGU, VKE), (RGU, XYG), (RGU, ZSE), (RGU, OEW), (RGU, ZNS)]","{DWT: [VKE, QNJ, XSK, DCD, OEW, ZNS],
JEQ: [VKE, CUR],
WIE: [CPT, VKE, QNJ, ZSE, ZNS],
RGU: [CPT, VKE, XYG, ZSE, OEW, ZNS],
CPT: [WIE, RGU],
VKE: [DWT, JEQ, WIE, RGU],
QNJ: [DWT, WIE],
XSK: [DWT],
CUR: [JEQ],
DCD: [DWT],
XYG: [RGU],
ZSE: [WIE, RGU],
OEW: [DWT, RGU],
ZNS: [DWT, WIE, RGU]}","Node DWT is connected to nodes VKE, QNJ, XSK, DCD, OEW, ZNS.
Node JEQ is connected to nodes VKE, CUR.
Node WIE is connected to nodes CPT, VKE, QNJ, ZSE, ZNS.
Node RGU is connected to nodes CPT, VKE, XYG, ZSE, OEW, ZNS.
Node CPT is connected to nodes WIE, RGU.
Node VKE is connected to nodes DWT, JEQ, WIE, RGU.
Node QNJ is connected to nodes DWT, WIE.
Node XSK is connected to node DWT.
Node CUR is connected to node JEQ.
Node DCD is connected to node DWT.
Node XYG is connected to node RGU.
Node ZSE is connected to nodes WIE, RGU.
Node OEW is connected to nodes DWT, RGU.
Node ZNS is connected to nodes DWT, WIE, RGU.","[DWT, JEQ, WIE, RGU, CPT, VKE, QNJ, XSK, CUR, DCD, XYG, ZSE, OEW, ZNS]",14,19,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DWT JEQ WIE RGU.
Nodes set 2 contains: CPT VKE QNJ XSK CUR DCD XYG ZSE OEW ZNS.","[(DWT, QNJ), (JEQ, CUR), (WIE, VKE), (RGU, CPT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DWT. Updated matching: {VKE: DWT}.
Search from node JEQ. Updated matching: {VKE: JEQ, QNJ: DWT}.
Search from node WIE. Updated matching: {VKE: JEQ, QNJ: DWT, CPT: WIE}.
Search from node RGU. Updated matching: {VKE: WIE, QNJ: DWT, CPT: RGU, CUR: JEQ}.
So the maximum matching is ",4,10,248
bipartite,"[(UDO, PDZ), (UDO, ECF), (GIN, WFF), (GIN, ECF), (EGB, RWI), (EGB, WFF), (EGB, XWG)]","{UDO: [PDZ, ECF],
GIN: [WFF, ECF],
EGB: [RWI, WFF, XWG],
PDZ: [UDO],
RWI: [EGB],
WFF: [GIN, EGB],
ECF: [UDO, GIN],
XWG: [EGB]}","Node UDO is connected to nodes PDZ, ECF.
Node GIN is connected to nodes WFF, ECF.
Node EGB is connected to nodes RWI, WFF, XWG.
Node PDZ is connected to node UDO.
Node RWI is connected to node EGB.
Node WFF is connected to nodes GIN, EGB.
Node ECF is connected to nodes UDO, GIN.
Node XWG is connected to node EGB.","[UDO, GIN, EGB, PDZ, RWI, WFF, ECF, XWG]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UDO GIN EGB.
Nodes set 2 contains: PDZ RWI WFF ECF XWG.","[(UDO, PDZ), (GIN, WFF), (EGB, RWI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UDO. Updated matching: {PDZ: UDO}.
Search from node GIN. Updated matching: {PDZ: UDO, WFF: GIN}.
Search from node EGB. Updated matching: {PDZ: UDO, WFF: GIN, RWI: EGB}.
So the maximum matching is ",3,5,249
bipartite,"[(REF, PWY), (REF, DXG), (REF, PFA), (REF, MRL), (WVC, JTQ), (WVC, DXG), (WVC, PFA), (WVC, KNS), (WVC, RNU), (WVC, GXY), (WVC, MZU), (KPG, JTQ), (KPG, PFA), (KPG, GXY), (XKO, JTQ), (XKO, DXG), (XKO, KNS), (XKO, RNU), (WSA, KHU), (WSA, DXG), (WSA, PFA), (WSA, KNS), (WSA, MRL)]","{REF: [PWY, DXG, PFA, MRL],
WVC: [JTQ, DXG, PFA, KNS, RNU, GXY, MZU],
KPG: [JTQ, PFA, GXY],
XKO: [JTQ, DXG, KNS, RNU],
WSA: [KHU, DXG, PFA, KNS, MRL],
JTQ: [WVC, KPG, XKO],
PWY: [REF],
KHU: [WSA],
DXG: [REF, WVC, XKO, WSA],
PFA: [REF, WVC, KPG, WSA],
KNS: [WVC, XKO, WSA],
RNU: [WVC, XKO],
GXY: [WVC, KPG],
MZU: [WVC],
MRL: [REF, WSA]}","Node REF is connected to nodes PWY, DXG, PFA, MRL.
Node WVC is connected to nodes JTQ, DXG, PFA, KNS, RNU, GXY, MZU.
Node KPG is connected to nodes JTQ, PFA, GXY.
Node XKO is connected to nodes JTQ, DXG, KNS, RNU.
Node WSA is connected to nodes KHU, DXG, PFA, KNS, MRL.
Node JTQ is connected to nodes WVC, KPG, XKO.
Node PWY is connected to node REF.
Node KHU is connected to node WSA.
Node DXG is connected to nodes REF, WVC, XKO, WSA.
Node PFA is connected to nodes REF, WVC, KPG, WSA.
Node KNS is connected to nodes WVC, XKO, WSA.
Node RNU is connected to nodes WVC, XKO.
Node GXY is connected to nodes WVC, KPG.
Node MZU is connected to node WVC.
Node MRL is connected to nodes REF, WSA.","[REF, WVC, KPG, XKO, WSA, JTQ, PWY, KHU, DXG, PFA, KNS, RNU, GXY, MZU, MRL]",15,23,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: REF WVC KPG XKO WSA.
Nodes set 2 contains: JTQ PWY KHU DXG PFA KNS RNU GXY MZU MRL.","[(REF, PWY), (WVC, DXG), (KPG, PFA), (XKO, JTQ), (WSA, KHU)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node REF. Updated matching: {PWY: REF}.
Search from node WVC. Updated matching: {PWY: REF, JTQ: WVC}.
Search from node KPG. Updated matching: {PWY: REF, JTQ: KPG, DXG: WVC}.
Search from node XKO. Updated matching: {PWY: REF, JTQ: XKO, DXG: WVC, PFA: KPG}.
Search from node WSA. Updated matching: {PWY: REF, JTQ: XKO, DXG: WVC, PFA: KPG, KHU: WSA}.
So the maximum matching is ",5,10,250
bipartite,"[(AOY, ECM), (AOY, OSF), (QXQ, NXI), (WQG, ECM), (WQG, NXI), (WQG, ENJ), (BUJ, OSF), (BUJ, ENJ), (BUJ, ELI), (BUJ, AYX), (QJZ, ENJ), (QJZ, ELI), (QJZ, AYX), (XDP, ECM), (XDP, OSF), (XDP, SHM), (XDP, ELI)]","{AOY: [ECM, OSF],
QXQ: [NXI],
WQG: [ECM, NXI, ENJ],
BUJ: [OSF, ENJ, ELI, AYX],
QJZ: [ENJ, ELI, AYX],
XDP: [ECM, OSF, SHM, ELI],
ECM: [AOY, WQG, XDP],
OSF: [AOY, BUJ, XDP],
NXI: [QXQ, WQG],
ENJ: [WQG, BUJ, QJZ],
SHM: [XDP],
ELI: [BUJ, QJZ, XDP],
AYX: [BUJ, QJZ]}","Node AOY is connected to nodes ECM, OSF.
Node QXQ is connected to node NXI.
Node WQG is connected to nodes ECM, NXI, ENJ.
Node BUJ is connected to nodes OSF, ENJ, ELI, AYX.
Node QJZ is connected to nodes ENJ, ELI, AYX.
Node XDP is connected to nodes ECM, OSF, SHM, ELI.
Node ECM is connected to nodes AOY, WQG, XDP.
Node OSF is connected to nodes AOY, BUJ, XDP.
Node NXI is connected to nodes QXQ, WQG.
Node ENJ is connected to nodes WQG, BUJ, QJZ.
Node SHM is connected to node XDP.
Node ELI is connected to nodes BUJ, QJZ, XDP.
Node AYX is connected to nodes BUJ, QJZ.","[AOY, QXQ, WQG, BUJ, QJZ, XDP, ECM, OSF, NXI, ENJ, SHM, ELI, AYX]",13,17,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: AOY QXQ WQG BUJ QJZ XDP.
Nodes set 2 contains: ECM OSF NXI ENJ SHM ELI AYX.","[(AOY, OSF), (QXQ, NXI), (WQG, ENJ), (BUJ, AYX), (QJZ, ELI), (XDP, ECM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node AOY. Updated matching: {ECM: AOY}.
Search from node QXQ. Updated matching: {ECM: AOY, NXI: QXQ}.
Search from node WQG. Updated matching: {ECM: WQG, NXI: QXQ, OSF: AOY}.
Search from node BUJ. Updated matching: {ECM: AOY, NXI: QXQ, OSF: BUJ, ENJ: WQG}.
Search from node QJZ. Updated matching: {ECM: WQG, NXI: QXQ, OSF: AOY, ENJ: QJZ, ELI: BUJ}.
Search from node XDP. Updated matching: {ECM: XDP, NXI: QXQ, OSF: AOY, ENJ: WQG, ELI: QJZ, AYX: BUJ}.
So the maximum matching is ",6,7,251
bipartite,"[(BKS, QHD), (BKS, HSW), (BKS, ZQM), (BKS, FIL), (BKS, KHS), (MVF, QHD), (MVF, LVF), (MVF, FIL), (MVF, KHS), (MVF, VFJ), (MVF, UVU), (ZGN, QHD), (ZGN, LVF), (ZGN, VFJ), (YRJ, QHD), (YRJ, ZQM), (YRJ, LVF)]","{BKS: [QHD, HSW, ZQM, FIL, KHS],
MVF: [QHD, LVF, FIL, KHS, VFJ, UVU],
ZGN: [QHD, LVF, VFJ],
YRJ: [QHD, ZQM, LVF],
QHD: [BKS, MVF, ZGN, YRJ],
HSW: [BKS],
ZQM: [BKS, YRJ],
LVF: [MVF, ZGN, YRJ],
FIL: [BKS, MVF],
KHS: [BKS, MVF],
VFJ: [MVF, ZGN],
UVU: [MVF]}","Node BKS is connected to nodes QHD, HSW, ZQM, FIL, KHS.
Node MVF is connected to nodes QHD, LVF, FIL, KHS, VFJ, UVU.
Node ZGN is connected to nodes QHD, LVF, VFJ.
Node YRJ is connected to nodes QHD, ZQM, LVF.
Node QHD is connected to nodes BKS, MVF, ZGN, YRJ.
Node HSW is connected to node BKS.
Node ZQM is connected to nodes BKS, YRJ.
Node LVF is connected to nodes MVF, ZGN, YRJ.
Node FIL is connected to nodes BKS, MVF.
Node KHS is connected to nodes BKS, MVF.
Node VFJ is connected to nodes MVF, ZGN.
Node UVU is connected to node MVF.","[BKS, MVF, ZGN, YRJ, QHD, HSW, ZQM, LVF, FIL, KHS, VFJ, UVU]",12,17,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BKS MVF ZGN YRJ.
Nodes set 2 contains: QHD HSW ZQM LVF FIL KHS VFJ UVU.","[(BKS, HSW), (MVF, FIL), (ZGN, LVF), (YRJ, QHD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BKS. Updated matching: {QHD: BKS}.
Search from node MVF. Updated matching: {QHD: MVF, HSW: BKS}.
Search from node ZGN. Updated matching: {QHD: ZGN, HSW: BKS, LVF: MVF}.
Search from node YRJ. Updated matching: {QHD: YRJ, HSW: BKS, LVF: ZGN, FIL: MVF}.
So the maximum matching is ",4,8,252
bipartite,"[(UPS, KPU), (UPS, EHS), (RXZ, VYM), (RXZ, MDD), (DTB, VYM), (DTB, KPU), (DTB, GEX), (DTB, MDD), (JZB, RAU), (JZB, WDZ), (JZB, KPU), (JZB, EHS), (JZB, GEX), (JZB, MDD), (HHD, VYM), (HHD, WDZ), (HHD, EHS), (HHD, GEX), (HHD, MDD)]","{UPS: [KPU, EHS],
RXZ: [VYM, MDD],
DTB: [VYM, KPU, GEX, MDD],
JZB: [RAU, WDZ, KPU, EHS, GEX, MDD],
HHD: [VYM, WDZ, EHS, GEX, MDD],
RAU: [JZB],
VYM: [RXZ, DTB, HHD],
WDZ: [JZB, HHD],
KPU: [UPS, DTB, JZB],
EHS: [UPS, JZB, HHD],
GEX: [DTB, JZB, HHD],
MDD: [RXZ, DTB, JZB, HHD]}","Node UPS is connected to nodes KPU, EHS.
Node RXZ is connected to nodes VYM, MDD.
Node DTB is connected to nodes VYM, KPU, GEX, MDD.
Node JZB is connected to nodes RAU, WDZ, KPU, EHS, GEX, MDD.
Node HHD is connected to nodes VYM, WDZ, EHS, GEX, MDD.
Node RAU is connected to node JZB.
Node VYM is connected to nodes RXZ, DTB, HHD.
Node WDZ is connected to nodes JZB, HHD.
Node KPU is connected to nodes UPS, DTB, JZB.
Node EHS is connected to nodes UPS, JZB, HHD.
Node GEX is connected to nodes DTB, JZB, HHD.
Node MDD is connected to nodes RXZ, DTB, JZB, HHD.","[UPS, RXZ, DTB, JZB, HHD, RAU, VYM, WDZ, KPU, EHS, GEX, MDD]",12,19,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: UPS RXZ DTB JZB HHD.
Nodes set 2 contains: RAU VYM WDZ KPU EHS GEX MDD.","[(UPS, EHS), (RXZ, MDD), (DTB, KPU), (JZB, RAU), (HHD, VYM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node UPS. Updated matching: {KPU: UPS}.
Search from node RXZ. Updated matching: {KPU: UPS, VYM: RXZ}.
Search from node DTB. Updated matching: {KPU: UPS, VYM: DTB, MDD: RXZ}.
Search from node JZB. Updated matching: {KPU: UPS, VYM: DTB, MDD: RXZ, RAU: JZB}.
Search from node HHD. Updated matching: {KPU: DTB, VYM: HHD, MDD: RXZ, RAU: JZB, EHS: UPS}.
So the maximum matching is ",5,7,253
bipartite,"[(ADV, XOB), (ADV, PQI), (ADV, QNH), (WCH, XOB), (WCH, AQQ), (WCH, PQI), (WCH, PMN), (YIF, PQI)]","{ADV: [XOB, PQI, QNH],
WCH: [XOB, AQQ, PQI, PMN],
YIF: [PQI],
XOB: [ADV, WCH],
AQQ: [WCH],
PQI: [ADV, WCH, YIF],
PMN: [WCH],
QNH: [ADV]}","Node ADV is connected to nodes XOB, PQI, QNH.
Node WCH is connected to nodes XOB, AQQ, PQI, PMN.
Node YIF is connected to node PQI.
Node XOB is connected to nodes ADV, WCH.
Node AQQ is connected to node WCH.
Node PQI is connected to nodes ADV, WCH, YIF.
Node PMN is connected to node WCH.
Node QNH is connected to node ADV.","[ADV, WCH, YIF, XOB, AQQ, PQI, PMN, QNH]",8,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ADV WCH YIF.
Nodes set 2 contains: XOB AQQ PQI PMN QNH.","[(ADV, XOB), (WCH, AQQ), (YIF, PQI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ADV. Updated matching: {XOB: ADV}.
Search from node WCH. Updated matching: {XOB: WCH, PQI: ADV}.
Search from node YIF. Updated matching: {XOB: ADV, PQI: YIF, AQQ: WCH}.
So the maximum matching is ",3,5,254
bipartite,"[(NJS, EMQ), (NJS, WVJ), (HCO, GTL), (HCO, LOC), (PGV, EMQ), (PGV, WVJ), (PGV, GTL), (IXN, EMQ), (EKH, EMQ), (EKH, JIL), (EKH, BNZ), (EKH, LOC)]","{NJS: [EMQ, WVJ],
HCO: [GTL, LOC],
PGV: [EMQ, WVJ, GTL],
IXN: [EMQ],
EKH: [EMQ, JIL, BNZ, LOC],
EMQ: [NJS, PGV, IXN, EKH],
WVJ: [NJS, PGV],
JIL: [EKH],
GTL: [HCO, PGV],
BNZ: [EKH],
LOC: [HCO, EKH]}","Node NJS is connected to nodes EMQ, WVJ.
Node HCO is connected to nodes GTL, LOC.
Node PGV is connected to nodes EMQ, WVJ, GTL.
Node IXN is connected to node EMQ.
Node EKH is connected to nodes EMQ, JIL, BNZ, LOC.
Node EMQ is connected to nodes NJS, PGV, IXN, EKH.
Node WVJ is connected to nodes NJS, PGV.
Node JIL is connected to node EKH.
Node GTL is connected to nodes HCO, PGV.
Node BNZ is connected to node EKH.
Node LOC is connected to nodes HCO, EKH.","[NJS, HCO, PGV, IXN, EKH, EMQ, WVJ, JIL, GTL, BNZ, LOC]",11,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NJS HCO PGV IXN EKH.
Nodes set 2 contains: EMQ WVJ JIL GTL BNZ LOC.","[(NJS, WVJ), (HCO, LOC), (PGV, GTL), (IXN, EMQ), (EKH, JIL)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NJS. Updated matching: {EMQ: NJS}.
Search from node HCO. Updated matching: {EMQ: NJS, GTL: HCO}.
Search from node PGV. Updated matching: {EMQ: PGV, GTL: HCO, WVJ: NJS}.
Search from node IXN. Updated matching: {EMQ: IXN, GTL: PGV, WVJ: NJS, LOC: HCO}.
Search from node EKH. Updated matching: {EMQ: IXN, GTL: PGV, WVJ: NJS, LOC: HCO, JIL: EKH}.
So the maximum matching is ",5,6,255
bipartite,"[(DGF, AXQ), (DGF, FMH), (DGF, ASJ), (DGF, YKC), (EFY, OPC), (EFY, COE), (EFY, AXQ), (EFY, ASJ), (NDD, FMH)]","{DGF: [AXQ, FMH, ASJ, YKC],
EFY: [OPC, COE, AXQ, ASJ],
NDD: [FMH],
OPC: [EFY],
COE: [EFY],
AXQ: [DGF, EFY],
FMH: [DGF, NDD],
ASJ: [DGF, EFY],
YKC: [DGF]}","Node DGF is connected to nodes AXQ, FMH, ASJ, YKC.
Node EFY is connected to nodes OPC, COE, AXQ, ASJ.
Node NDD is connected to node FMH.
Node OPC is connected to node EFY.
Node COE is connected to node EFY.
Node AXQ is connected to nodes DGF, EFY.
Node FMH is connected to nodes DGF, NDD.
Node ASJ is connected to nodes DGF, EFY.
Node YKC is connected to node DGF.","[DGF, EFY, NDD, OPC, COE, AXQ, FMH, ASJ, YKC]",9,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DGF EFY NDD.
Nodes set 2 contains: OPC COE AXQ FMH ASJ YKC.","[(DGF, AXQ), (EFY, OPC), (NDD, FMH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DGF. Updated matching: {AXQ: DGF}.
Search from node EFY. Updated matching: {AXQ: DGF, OPC: EFY}.
Search from node NDD. Updated matching: {AXQ: DGF, OPC: EFY, FMH: NDD}.
So the maximum matching is ",3,6,256
bipartite,"[(JNW, FAG), (JNW, QXN), (JNW, KSD), (YLQ, XAP), (YLQ, LXP), (DTQ, FAG), (DTQ, QXN), (DTQ, XAP), (WFX, FAG), (WFX, SNC), (WFX, QXN), (WFX, OLM), (XZS, XAP), (XZS, LXP), (XZS, OLM)]","{JNW: [FAG, QXN, KSD],
YLQ: [XAP, LXP],
DTQ: [FAG, QXN, XAP],
WFX: [FAG, SNC, QXN, OLM],
XZS: [XAP, LXP, OLM],
FAG: [JNW, DTQ, WFX],
SNC: [WFX],
QXN: [JNW, DTQ, WFX],
XAP: [YLQ, DTQ, XZS],
LXP: [YLQ, XZS],
OLM: [WFX, XZS],
KSD: [JNW]}","Node JNW is connected to nodes FAG, QXN, KSD.
Node YLQ is connected to nodes XAP, LXP.
Node DTQ is connected to nodes FAG, QXN, XAP.
Node WFX is connected to nodes FAG, SNC, QXN, OLM.
Node XZS is connected to nodes XAP, LXP, OLM.
Node FAG is connected to nodes JNW, DTQ, WFX.
Node SNC is connected to node WFX.
Node QXN is connected to nodes JNW, DTQ, WFX.
Node XAP is connected to nodes YLQ, DTQ, XZS.
Node LXP is connected to nodes YLQ, XZS.
Node OLM is connected to nodes WFX, XZS.
Node KSD is connected to node JNW.","[JNW, YLQ, DTQ, WFX, XZS, FAG, SNC, QXN, XAP, LXP, OLM, KSD]",12,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JNW YLQ DTQ WFX XZS.
Nodes set 2 contains: FAG SNC QXN XAP LXP OLM KSD.","[(JNW, KSD), (YLQ, LXP), (DTQ, QXN), (WFX, FAG), (XZS, XAP)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JNW. Updated matching: {FAG: JNW}.
Search from node YLQ. Updated matching: {FAG: JNW, XAP: YLQ}.
Search from node DTQ. Updated matching: {FAG: DTQ, XAP: YLQ, QXN: JNW}.
Search from node WFX. Updated matching: {FAG: WFX, XAP: YLQ, QXN: DTQ, KSD: JNW}.
Search from node XZS. Updated matching: {FAG: WFX, XAP: XZS, QXN: DTQ, KSD: JNW, LXP: YLQ}.
So the maximum matching is ",5,7,257
bipartite,"[(BEN, WEZ), (BEN, CCN), (BEN, FFF), (BEN, KDE), (EQF, WEZ), (EQF, FFF), (EQF, PTF), (EQF, KDE), (HSH, KDE)]","{BEN: [WEZ, CCN, FFF, KDE],
EQF: [WEZ, FFF, PTF, KDE],
HSH: [KDE],
WEZ: [BEN, EQF],
CCN: [BEN],
FFF: [BEN, EQF],
PTF: [EQF],
KDE: [BEN, EQF, HSH]}","Node BEN is connected to nodes WEZ, CCN, FFF, KDE.
Node EQF is connected to nodes WEZ, FFF, PTF, KDE.
Node HSH is connected to node KDE.
Node WEZ is connected to nodes BEN, EQF.
Node CCN is connected to node BEN.
Node FFF is connected to nodes BEN, EQF.
Node PTF is connected to node EQF.
Node KDE is connected to nodes BEN, EQF, HSH.","[BEN, EQF, HSH, WEZ, CCN, FFF, PTF, KDE]",8,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: BEN EQF HSH.
Nodes set 2 contains: WEZ CCN FFF PTF KDE.","[(BEN, CCN), (EQF, WEZ), (HSH, KDE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node BEN. Updated matching: {WEZ: BEN}.
Search from node EQF. Updated matching: {WEZ: EQF, CCN: BEN}.
Search from node HSH. Updated matching: {WEZ: EQF, CCN: BEN, KDE: HSH}.
So the maximum matching is ",3,5,258
bipartite,"[(ZCE, QRJ), (ZCE, OOG), (ZCE, MJO), (ZCE, OCU), (TVV, BCR), (LEA, OCU), (LEA, BCR), (FGA, PGD), (FGA, OCU)]","{ZCE: [QRJ, OOG, MJO, OCU],
TVV: [BCR],
LEA: [OCU, BCR],
FGA: [PGD, OCU],
PGD: [FGA],
QRJ: [ZCE],
OOG: [ZCE],
MJO: [ZCE],
OCU: [ZCE, LEA, FGA],
BCR: [TVV, LEA]}","Node ZCE is connected to nodes QRJ, OOG, MJO, OCU.
Node TVV is connected to node BCR.
Node LEA is connected to nodes OCU, BCR.
Node FGA is connected to nodes PGD, OCU.
Node PGD is connected to node FGA.
Node QRJ is connected to node ZCE.
Node OOG is connected to node ZCE.
Node MJO is connected to node ZCE.
Node OCU is connected to nodes ZCE, LEA, FGA.
Node BCR is connected to nodes TVV, LEA.","[ZCE, TVV, LEA, FGA, PGD, QRJ, OOG, MJO, OCU, BCR]",10,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZCE TVV LEA FGA.
Nodes set 2 contains: PGD QRJ OOG MJO OCU BCR.","[(ZCE, QRJ), (TVV, BCR), (LEA, OCU), (FGA, PGD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZCE. Updated matching: {QRJ: ZCE}.
Search from node TVV. Updated matching: {QRJ: ZCE, BCR: TVV}.
Search from node LEA. Updated matching: {QRJ: ZCE, BCR: TVV, OCU: LEA}.
Search from node FGA. Updated matching: {QRJ: ZCE, BCR: TVV, OCU: LEA, PGD: FGA}.
So the maximum matching is ",4,6,259
bipartite,"[(JSJ, TSN), (JSJ, YRF), (JSJ, LIJ), (JSJ, YYC), (WMF, TSN), (WMF, QQL), (SMX, PYS), (SMX, TSN), (SMX, QQL), (AJR, TSN), (AJR, YRF), (AJR, YYC), (SCJ, YRF), (SCJ, PFA), (SCJ, YYC), (NYO, TSN), (NYO, PFA), (NYO, QQL), (HRH, YRF), (HRH, ONF), (HRH, YYC)]","{JSJ: [TSN, YRF, LIJ, YYC],
WMF: [TSN, QQL],
SMX: [PYS, TSN, QQL],
AJR: [TSN, YRF, YYC],
SCJ: [YRF, PFA, YYC],
NYO: [TSN, PFA, QQL],
HRH: [YRF, ONF, YYC],
PYS: [SMX],
TSN: [JSJ, WMF, SMX, AJR, NYO],
YRF: [JSJ, AJR, SCJ, HRH],
PFA: [SCJ, NYO],
QQL: [WMF, SMX, NYO],
ONF: [HRH],
LIJ: [JSJ],
YYC: [JSJ, AJR, SCJ, HRH]}","Node JSJ is connected to nodes TSN, YRF, LIJ, YYC.
Node WMF is connected to nodes TSN, QQL.
Node SMX is connected to nodes PYS, TSN, QQL.
Node AJR is connected to nodes TSN, YRF, YYC.
Node SCJ is connected to nodes YRF, PFA, YYC.
Node NYO is connected to nodes TSN, PFA, QQL.
Node HRH is connected to nodes YRF, ONF, YYC.
Node PYS is connected to node SMX.
Node TSN is connected to nodes JSJ, WMF, SMX, AJR, NYO.
Node YRF is connected to nodes JSJ, AJR, SCJ, HRH.
Node PFA is connected to nodes SCJ, NYO.
Node QQL is connected to nodes WMF, SMX, NYO.
Node ONF is connected to node HRH.
Node LIJ is connected to node JSJ.
Node YYC is connected to nodes JSJ, AJR, SCJ, HRH.","[JSJ, WMF, SMX, AJR, SCJ, NYO, HRH, PYS, TSN, YRF, PFA, QQL, ONF, LIJ, YYC]",15,21,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JSJ WMF SMX AJR SCJ NYO HRH.
Nodes set 2 contains: PYS TSN YRF PFA QQL ONF LIJ YYC.","[(JSJ, LIJ), (WMF, QQL), (SMX, PYS), (AJR, YYC), (SCJ, PFA), (NYO, TSN), (HRH, YRF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JSJ. Updated matching: {TSN: JSJ}.
Search from node WMF. Updated matching: {TSN: WMF, YRF: JSJ}.
Search from node SMX. Updated matching: {TSN: WMF, YRF: JSJ, PYS: SMX}.
Search from node AJR. Updated matching: {TSN: AJR, YRF: JSJ, PYS: SMX, QQL: WMF}.
Search from node SCJ. Updated matching: {TSN: JSJ, YRF: SCJ, PYS: SMX, QQL: WMF, YYC: AJR}.
Search from node NYO. Updated matching: {TSN: NYO, YRF: JSJ, PYS: SMX, QQL: WMF, YYC: AJR, PFA: SCJ}.
Search from node HRH. Updated matching: {TSN: NYO, YRF: HRH, PYS: SMX, QQL: WMF, YYC: AJR, PFA: SCJ, LIJ: JSJ}.
So the maximum matching is ",7,8,260
bipartite,"[(NGL, XUP), (NGL, CGR), (NGL, YDD), (NGL, GPB), (QLJ, XUP), (QLJ, XLD), (QLJ, CGR), (FDP, YDD), (FDP, GPB), (ODL, XLD), (ODL, FSQ), (ODL, YDD), (RMO, XLD), (RMO, FSQ)]","{NGL: [XUP, CGR, YDD, GPB],
QLJ: [XUP, XLD, CGR],
FDP: [YDD, GPB],
ODL: [XLD, FSQ, YDD],
RMO: [XLD, FSQ],
XUP: [NGL, QLJ],
XLD: [QLJ, ODL, RMO],
FSQ: [ODL, RMO],
CGR: [NGL, QLJ],
YDD: [NGL, FDP, ODL],
GPB: [NGL, FDP]}","Node NGL is connected to nodes XUP, CGR, YDD, GPB.
Node QLJ is connected to nodes XUP, XLD, CGR.
Node FDP is connected to nodes YDD, GPB.
Node ODL is connected to nodes XLD, FSQ, YDD.
Node RMO is connected to nodes XLD, FSQ.
Node XUP is connected to nodes NGL, QLJ.
Node XLD is connected to nodes QLJ, ODL, RMO.
Node FSQ is connected to nodes ODL, RMO.
Node CGR is connected to nodes NGL, QLJ.
Node YDD is connected to nodes NGL, FDP, ODL.
Node GPB is connected to nodes NGL, FDP.","[NGL, QLJ, FDP, ODL, RMO, XUP, XLD, FSQ, CGR, YDD, GPB]",11,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NGL QLJ FDP ODL RMO.
Nodes set 2 contains: XUP XLD FSQ CGR YDD GPB.","[(NGL, CGR), (QLJ, XUP), (FDP, YDD), (ODL, FSQ), (RMO, XLD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NGL. Updated matching: {XUP: NGL}.
Search from node QLJ. Updated matching: {XUP: QLJ, CGR: NGL}.
Search from node FDP. Updated matching: {XUP: QLJ, CGR: NGL, YDD: FDP}.
Search from node ODL. Updated matching: {XUP: QLJ, CGR: NGL, YDD: FDP, XLD: ODL}.
Search from node RMO. Updated matching: {XUP: QLJ, CGR: NGL, YDD: FDP, XLD: RMO, FSQ: ODL}.
So the maximum matching is ",5,6,261
bipartite,"[(THN, DCX), (THN, WVB), (YKO, WVB), (YKO, MIO), (LAT, FQQ), (LAT, WVB), (LAT, MIO), (QVW, TXI), (QVW, DCX)]","{THN: [DCX, WVB],
YKO: [WVB, MIO],
LAT: [FQQ, WVB, MIO],
QVW: [TXI, DCX],
TXI: [QVW],
FQQ: [LAT],
DCX: [THN, QVW],
WVB: [THN, YKO, LAT],
MIO: [YKO, LAT]}","Node THN is connected to nodes DCX, WVB.
Node YKO is connected to nodes WVB, MIO.
Node LAT is connected to nodes FQQ, WVB, MIO.
Node QVW is connected to nodes TXI, DCX.
Node TXI is connected to node QVW.
Node FQQ is connected to node LAT.
Node DCX is connected to nodes THN, QVW.
Node WVB is connected to nodes THN, YKO, LAT.
Node MIO is connected to nodes YKO, LAT.","[THN, YKO, LAT, QVW, TXI, FQQ, DCX, WVB, MIO]",9,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: THN YKO LAT QVW.
Nodes set 2 contains: TXI FQQ DCX WVB MIO.","[(THN, DCX), (YKO, WVB), (LAT, FQQ), (QVW, TXI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node THN. Updated matching: {DCX: THN}.
Search from node YKO. Updated matching: {DCX: THN, WVB: YKO}.
Search from node LAT. Updated matching: {DCX: THN, WVB: YKO, FQQ: LAT}.
Search from node QVW. Updated matching: {DCX: THN, WVB: YKO, FQQ: LAT, TXI: QVW}.
So the maximum matching is ",4,5,262
bipartite,"[(ZBO, KNZ), (ZBO, NZJ), (ZBO, GXG), (ZBO, CBB), (ZBO, LNW), (ZBO, CTY), (HLS, GXG), (HLS, TBM), (HLS, KSF), (WSP, IAB), (WSP, TBM), (WSP, CBB), (WSP, TRK), (QSN, NZJ), (QSN, TBM), (QSN, CTY), (BXB, IAB), (BXB, NZJ), (BXB, KSF)]","{ZBO: [KNZ, NZJ, GXG, CBB, LNW, CTY],
HLS: [GXG, TBM, KSF],
WSP: [IAB, TBM, CBB, TRK],
QSN: [NZJ, TBM, CTY],
BXB: [IAB, NZJ, KSF],
KNZ: [ZBO],
IAB: [WSP, BXB],
NZJ: [ZBO, QSN, BXB],
GXG: [ZBO, HLS],
TBM: [HLS, WSP, QSN],
CBB: [ZBO, WSP],
KSF: [HLS, BXB],
LNW: [ZBO],
TRK: [WSP],
CTY: [ZBO, QSN]}","Node ZBO is connected to nodes KNZ, NZJ, GXG, CBB, LNW, CTY.
Node HLS is connected to nodes GXG, TBM, KSF.
Node WSP is connected to nodes IAB, TBM, CBB, TRK.
Node QSN is connected to nodes NZJ, TBM, CTY.
Node BXB is connected to nodes IAB, NZJ, KSF.
Node KNZ is connected to node ZBO.
Node IAB is connected to nodes WSP, BXB.
Node NZJ is connected to nodes ZBO, QSN, BXB.
Node GXG is connected to nodes ZBO, HLS.
Node TBM is connected to nodes HLS, WSP, QSN.
Node CBB is connected to nodes ZBO, WSP.
Node KSF is connected to nodes HLS, BXB.
Node LNW is connected to node ZBO.
Node TRK is connected to node WSP.
Node CTY is connected to nodes ZBO, QSN.","[ZBO, HLS, WSP, QSN, BXB, KNZ, IAB, NZJ, GXG, TBM, CBB, KSF, LNW, TRK, CTY]",15,19,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZBO HLS WSP QSN BXB.
Nodes set 2 contains: KNZ IAB NZJ GXG TBM CBB KSF LNW TRK CTY.","[(ZBO, KNZ), (HLS, GXG), (WSP, TBM), (QSN, NZJ), (BXB, IAB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZBO. Updated matching: {KNZ: ZBO}.
Search from node HLS. Updated matching: {KNZ: ZBO, GXG: HLS}.
Search from node WSP. Updated matching: {KNZ: ZBO, GXG: HLS, IAB: WSP}.
Search from node QSN. Updated matching: {KNZ: ZBO, GXG: HLS, IAB: WSP, NZJ: QSN}.
Search from node BXB. Updated matching: {KNZ: ZBO, GXG: HLS, IAB: BXB, NZJ: QSN, TBM: WSP}.
So the maximum matching is ",5,10,263
bipartite,"[(MBK, WAT), (MBK, GGD), (MBK, BAE), (GJY, BAE), (GJY, LDY), (FZO, CKZ), (FZO, GGD), (FZO, FMJ), (FZO, BAE), (FZO, LDY), (MZV, CKZ), (MZV, GGD), (MZV, LDY), (QZD, WAT), (QZD, CKZ), (QZD, BAE), (QZD, YMA)]","{MBK: [WAT, GGD, BAE],
GJY: [BAE, LDY],
FZO: [CKZ, GGD, FMJ, BAE, LDY],
MZV: [CKZ, GGD, LDY],
QZD: [WAT, CKZ, BAE, YMA],
WAT: [MBK, QZD],
CKZ: [FZO, MZV, QZD],
GGD: [MBK, FZO, MZV],
FMJ: [FZO],
BAE: [MBK, GJY, FZO, QZD],
YMA: [QZD],
LDY: [GJY, FZO, MZV]}","Node MBK is connected to nodes WAT, GGD, BAE.
Node GJY is connected to nodes BAE, LDY.
Node FZO is connected to nodes CKZ, GGD, FMJ, BAE, LDY.
Node MZV is connected to nodes CKZ, GGD, LDY.
Node QZD is connected to nodes WAT, CKZ, BAE, YMA.
Node WAT is connected to nodes MBK, QZD.
Node CKZ is connected to nodes FZO, MZV, QZD.
Node GGD is connected to nodes MBK, FZO, MZV.
Node FMJ is connected to node FZO.
Node BAE is connected to nodes MBK, GJY, FZO, QZD.
Node YMA is connected to node QZD.
Node LDY is connected to nodes GJY, FZO, MZV.","[MBK, GJY, FZO, MZV, QZD, WAT, CKZ, GGD, FMJ, BAE, YMA, LDY]",12,17,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MBK GJY FZO MZV QZD.
Nodes set 2 contains: WAT CKZ GGD FMJ BAE YMA LDY.","[(MBK, GGD), (GJY, BAE), (FZO, CKZ), (MZV, LDY), (QZD, WAT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MBK. Updated matching: {WAT: MBK}.
Search from node GJY. Updated matching: {WAT: MBK, BAE: GJY}.
Search from node FZO. Updated matching: {WAT: MBK, BAE: GJY, CKZ: FZO}.
Search from node MZV. Updated matching: {WAT: MBK, BAE: GJY, CKZ: MZV, GGD: FZO}.
Search from node QZD. Updated matching: {WAT: QZD, BAE: GJY, CKZ: FZO, GGD: MBK, LDY: MZV}.
So the maximum matching is ",5,7,264
bipartite,"[(FAZ, BKM), (FAZ, UJN), (MJJ, CXJ), (MJJ, IOB), (MJJ, MOE), (MJJ, UJN), (DLH, CXJ), (DLH, UUG), (DLH, BKM), (QXL, CXJ), (QXL, UUG), (QXL, BKM), (QXL, ZXK)]","{FAZ: [BKM, UJN],
MJJ: [CXJ, IOB, MOE, UJN],
DLH: [CXJ, UUG, BKM],
QXL: [CXJ, UUG, BKM, ZXK],
CXJ: [MJJ, DLH, QXL],
IOB: [MJJ],
MOE: [MJJ],
UUG: [DLH, QXL],
BKM: [FAZ, DLH, QXL],
UJN: [FAZ, MJJ],
ZXK: [QXL]}","Node FAZ is connected to nodes BKM, UJN.
Node MJJ is connected to nodes CXJ, IOB, MOE, UJN.
Node DLH is connected to nodes CXJ, UUG, BKM.
Node QXL is connected to nodes CXJ, UUG, BKM, ZXK.
Node CXJ is connected to nodes MJJ, DLH, QXL.
Node IOB is connected to node MJJ.
Node MOE is connected to node MJJ.
Node UUG is connected to nodes DLH, QXL.
Node BKM is connected to nodes FAZ, DLH, QXL.
Node UJN is connected to nodes FAZ, MJJ.
Node ZXK is connected to node QXL.","[FAZ, MJJ, DLH, QXL, CXJ, IOB, MOE, UUG, BKM, UJN, ZXK]",11,13,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FAZ MJJ DLH QXL.
Nodes set 2 contains: CXJ IOB MOE UUG BKM UJN ZXK.","[(FAZ, BKM), (MJJ, IOB), (DLH, UUG), (QXL, CXJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FAZ. Updated matching: {BKM: FAZ}.
Search from node MJJ. Updated matching: {BKM: FAZ, CXJ: MJJ}.
Search from node DLH. Updated matching: {BKM: FAZ, CXJ: DLH, IOB: MJJ}.
Search from node QXL. Updated matching: {BKM: FAZ, CXJ: QXL, IOB: MJJ, UUG: DLH}.
So the maximum matching is ",4,7,265
bipartite,"[(WRA, DYT), (WRA, VLM), (SIS, YXJ), (SIS, RAJ), (SIS, VLM), (SIS, GEQ), (CLW, GEQ), (XUZ, DYT), (XUZ, RAJ), (XUZ, GEQ), (XUZ, EVN), (XUZ, TVK), (MFU, RAJ), (MFU, VLM), (MFU, EVN)]","{WRA: [DYT, VLM],
SIS: [YXJ, RAJ, VLM, GEQ],
CLW: [GEQ],
XUZ: [DYT, RAJ, GEQ, EVN, TVK],
MFU: [RAJ, VLM, EVN],
YXJ: [SIS],
DYT: [WRA, XUZ],
RAJ: [SIS, XUZ, MFU],
VLM: [WRA, SIS, MFU],
GEQ: [SIS, CLW, XUZ],
EVN: [XUZ, MFU],
TVK: [XUZ]}","Node WRA is connected to nodes DYT, VLM.
Node SIS is connected to nodes YXJ, RAJ, VLM, GEQ.
Node CLW is connected to node GEQ.
Node XUZ is connected to nodes DYT, RAJ, GEQ, EVN, TVK.
Node MFU is connected to nodes RAJ, VLM, EVN.
Node YXJ is connected to node SIS.
Node DYT is connected to nodes WRA, XUZ.
Node RAJ is connected to nodes SIS, XUZ, MFU.
Node VLM is connected to nodes WRA, SIS, MFU.
Node GEQ is connected to nodes SIS, CLW, XUZ.
Node EVN is connected to nodes XUZ, MFU.
Node TVK is connected to node XUZ.","[WRA, SIS, CLW, XUZ, MFU, YXJ, DYT, RAJ, VLM, GEQ, EVN, TVK]",12,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WRA SIS CLW XUZ MFU.
Nodes set 2 contains: YXJ DYT RAJ VLM GEQ EVN TVK.","[(WRA, VLM), (SIS, YXJ), (CLW, GEQ), (XUZ, DYT), (MFU, RAJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WRA. Updated matching: {DYT: WRA}.
Search from node SIS. Updated matching: {DYT: WRA, YXJ: SIS}.
Search from node CLW. Updated matching: {DYT: WRA, YXJ: SIS, GEQ: CLW}.
Search from node XUZ. Updated matching: {DYT: XUZ, YXJ: SIS, GEQ: CLW, VLM: WRA}.
Search from node MFU. Updated matching: {DYT: XUZ, YXJ: SIS, GEQ: CLW, VLM: WRA, RAJ: MFU}.
So the maximum matching is ",5,7,266
bipartite,"[(HYL, SDA), (QMT, KCV), (QMT, SDA), (QMT, RMY), (LBB, KCV), (LBB, AVU), (LBB, OLO)]","{HYL: [SDA],
QMT: [KCV, SDA, RMY],
LBB: [KCV, AVU, OLO],
KCV: [QMT, LBB],
AVU: [LBB],
OLO: [LBB],
SDA: [HYL, QMT],
RMY: [QMT]}","Node HYL is connected to node SDA.
Node QMT is connected to nodes KCV, SDA, RMY.
Node LBB is connected to nodes KCV, AVU, OLO.
Node KCV is connected to nodes QMT, LBB.
Node AVU is connected to node LBB.
Node OLO is connected to node LBB.
Node SDA is connected to nodes HYL, QMT.
Node RMY is connected to node QMT.","[HYL, QMT, LBB, KCV, AVU, OLO, SDA, RMY]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: HYL QMT LBB.
Nodes set 2 contains: KCV AVU OLO SDA RMY.","[(HYL, SDA), (QMT, RMY), (LBB, KCV)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node HYL. Updated matching: {SDA: HYL}.
Search from node QMT. Updated matching: {SDA: HYL, KCV: QMT}.
Search from node LBB. Updated matching: {SDA: HYL, KCV: LBB, RMY: QMT}.
So the maximum matching is ",3,5,267
bipartite,"[(GDG, GTT), (GDG, SPD), (GDG, PQP), (GDG, XST), (LZO, UHH), (LZO, PQP), (USQ, GTT), (USQ, UHH), (NLN, GTT), (NLN, PQP)]","{GDG: [GTT, SPD, PQP, XST],
LZO: [UHH, PQP],
USQ: [GTT, UHH],
NLN: [GTT, PQP],
GTT: [GDG, USQ, NLN],
UHH: [LZO, USQ],
SPD: [GDG],
PQP: [GDG, LZO, NLN],
XST: [GDG]}","Node GDG is connected to nodes GTT, SPD, PQP, XST.
Node LZO is connected to nodes UHH, PQP.
Node USQ is connected to nodes GTT, UHH.
Node NLN is connected to nodes GTT, PQP.
Node GTT is connected to nodes GDG, USQ, NLN.
Node UHH is connected to nodes LZO, USQ.
Node SPD is connected to node GDG.
Node PQP is connected to nodes GDG, LZO, NLN.
Node XST is connected to node GDG.","[GDG, LZO, USQ, NLN, GTT, UHH, SPD, PQP, XST]",9,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: GDG LZO USQ NLN.
Nodes set 2 contains: GTT UHH SPD PQP XST.","[(GDG, SPD), (LZO, PQP), (USQ, UHH), (NLN, GTT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node GDG. Updated matching: {GTT: GDG}.
Search from node LZO. Updated matching: {GTT: GDG, UHH: LZO}.
Search from node USQ. Updated matching: {GTT: USQ, UHH: LZO, SPD: GDG}.
Search from node NLN. Updated matching: {GTT: NLN, UHH: USQ, SPD: GDG, PQP: LZO}.
So the maximum matching is ",4,5,268
bipartite,"[(RXO, NVX), (RXO, EXK), (QDG, ZTH), (QDG, QYS), (MPW, ZTH), (MPW, EOH), (MPW, NVX), (MPW, QYS)]","{RXO: [NVX, EXK],
QDG: [ZTH, QYS],
MPW: [ZTH, EOH, NVX, QYS],
ZTH: [QDG, MPW],
EOH: [MPW],
NVX: [RXO, MPW],
EXK: [RXO],
QYS: [QDG, MPW]}","Node RXO is connected to nodes NVX, EXK.
Node QDG is connected to nodes ZTH, QYS.
Node MPW is connected to nodes ZTH, EOH, NVX, QYS.
Node ZTH is connected to nodes QDG, MPW.
Node EOH is connected to node MPW.
Node NVX is connected to nodes RXO, MPW.
Node EXK is connected to node RXO.
Node QYS is connected to nodes QDG, MPW.","[RXO, QDG, MPW, ZTH, EOH, NVX, EXK, QYS]",8,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RXO QDG MPW.
Nodes set 2 contains: ZTH EOH NVX EXK QYS.","[(RXO, NVX), (QDG, QYS), (MPW, ZTH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RXO. Updated matching: {NVX: RXO}.
Search from node QDG. Updated matching: {NVX: RXO, ZTH: QDG}.
Search from node MPW. Updated matching: {NVX: RXO, ZTH: MPW, QYS: QDG}.
So the maximum matching is ",3,5,269
bipartite,"[(QLY, RSZ), (UKS, QEZ), (IWE, QEZ), (IWE, FPN), (IWE, RSZ), (VJL, QEZ), (VJL, QPG), (VJL, FPN), (VJL, EGP), (YYD, GVF), (YYD, FPN), (YYD, EGP)]","{QLY: [RSZ],
UKS: [QEZ],
IWE: [QEZ, FPN, RSZ],
VJL: [QEZ, QPG, FPN, EGP],
YYD: [GVF, FPN, EGP],
QEZ: [UKS, IWE, VJL],
GVF: [YYD],
QPG: [VJL],
FPN: [IWE, VJL, YYD],
EGP: [VJL, YYD],
RSZ: [QLY, IWE]}","Node QLY is connected to node RSZ.
Node UKS is connected to node QEZ.
Node IWE is connected to nodes QEZ, FPN, RSZ.
Node VJL is connected to nodes QEZ, QPG, FPN, EGP.
Node YYD is connected to nodes GVF, FPN, EGP.
Node QEZ is connected to nodes UKS, IWE, VJL.
Node GVF is connected to node YYD.
Node QPG is connected to node VJL.
Node FPN is connected to nodes IWE, VJL, YYD.
Node EGP is connected to nodes VJL, YYD.
Node RSZ is connected to nodes QLY, IWE.","[QLY, UKS, IWE, VJL, YYD, QEZ, GVF, QPG, FPN, EGP, RSZ]",11,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QLY UKS IWE VJL YYD.
Nodes set 2 contains: QEZ GVF QPG FPN EGP RSZ.","[(QLY, RSZ), (UKS, QEZ), (IWE, FPN), (VJL, QPG), (YYD, GVF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QLY. Updated matching: {RSZ: QLY}.
Search from node UKS. Updated matching: {RSZ: QLY, QEZ: UKS}.
Search from node IWE. Updated matching: {RSZ: QLY, QEZ: UKS, FPN: IWE}.
Search from node VJL. Updated matching: {RSZ: QLY, QEZ: UKS, FPN: IWE, QPG: VJL}.
Search from node YYD. Updated matching: {RSZ: QLY, QEZ: UKS, FPN: IWE, QPG: VJL, GVF: YYD}.
So the maximum matching is ",5,6,270
bipartite,"[(ADT, BYM), (ADT, YQG), (ADT, APS), (XVA, SWX), (XVA, DGP), (SRE, RAK), (SRE, DGP), (HVF, YQG), (HVF, RAK), (HVF, PCK), (OIR, BYM), (OIR, ZND), (OIR, APS), (OIR, EXB), (OIR, PCK)]","{ADT: [BYM, YQG, APS],
XVA: [SWX, DGP],
SRE: [RAK, DGP],
HVF: [YQG, RAK, PCK],
OIR: [BYM, ZND, APS, EXB, PCK],
BYM: [ADT, OIR],
ZND: [OIR],
YQG: [ADT, HVF],
SWX: [XVA],
APS: [ADT, OIR],
EXB: [OIR],
RAK: [SRE, HVF],
PCK: [HVF, OIR],
DGP: [XVA, SRE]}","Node ADT is connected to nodes BYM, YQG, APS.
Node XVA is connected to nodes SWX, DGP.
Node SRE is connected to nodes RAK, DGP.
Node HVF is connected to nodes YQG, RAK, PCK.
Node OIR is connected to nodes BYM, ZND, APS, EXB, PCK.
Node BYM is connected to nodes ADT, OIR.
Node ZND is connected to node OIR.
Node YQG is connected to nodes ADT, HVF.
Node SWX is connected to node XVA.
Node APS is connected to nodes ADT, OIR.
Node EXB is connected to node OIR.
Node RAK is connected to nodes SRE, HVF.
Node PCK is connected to nodes HVF, OIR.
Node DGP is connected to nodes XVA, SRE.","[ADT, XVA, SRE, HVF, OIR, BYM, ZND, YQG, SWX, APS, EXB, RAK, PCK, DGP]",14,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ADT XVA SRE HVF OIR.
Nodes set 2 contains: BYM ZND YQG SWX APS EXB RAK PCK DGP.","[(ADT, YQG), (XVA, SWX), (SRE, DGP), (HVF, RAK), (OIR, BYM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ADT. Updated matching: {BYM: ADT}.
Search from node XVA. Updated matching: {BYM: ADT, SWX: XVA}.
Search from node SRE. Updated matching: {BYM: ADT, SWX: XVA, RAK: SRE}.
Search from node HVF. Updated matching: {BYM: ADT, SWX: XVA, RAK: SRE, YQG: HVF}.
Search from node OIR. Updated matching: {BYM: OIR, SWX: XVA, RAK: HVF, YQG: ADT, DGP: SRE}.
So the maximum matching is ",5,9,271
bipartite,"[(JSD, ZFW), (JSD, ZBV), (JSD, EOG), (JSD, HQO), (BMT, ZFW), (BMT, VMC), (BMT, PUT), (BMT, HQO), (DLN, VMC), (DLN, ZNF), (DLN, EOG)]","{JSD: [ZFW, ZBV, EOG, HQO],
BMT: [ZFW, VMC, PUT, HQO],
DLN: [VMC, ZNF, EOG],
ZFW: [JSD, BMT],
ZBV: [JSD],
VMC: [BMT, DLN],
ZNF: [DLN],
PUT: [BMT],
EOG: [JSD, DLN],
HQO: [JSD, BMT]}","Node JSD is connected to nodes ZFW, ZBV, EOG, HQO.
Node BMT is connected to nodes ZFW, VMC, PUT, HQO.
Node DLN is connected to nodes VMC, ZNF, EOG.
Node ZFW is connected to nodes JSD, BMT.
Node ZBV is connected to node JSD.
Node VMC is connected to nodes BMT, DLN.
Node ZNF is connected to node DLN.
Node PUT is connected to node BMT.
Node EOG is connected to nodes JSD, DLN.
Node HQO is connected to nodes JSD, BMT.","[JSD, BMT, DLN, ZFW, ZBV, VMC, ZNF, PUT, EOG, HQO]",10,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JSD BMT DLN.
Nodes set 2 contains: ZFW ZBV VMC ZNF PUT EOG HQO.","[(JSD, ZBV), (BMT, ZFW), (DLN, VMC)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JSD. Updated matching: {ZFW: JSD}.
Search from node BMT. Updated matching: {ZFW: BMT, ZBV: JSD}.
Search from node DLN. Updated matching: {ZFW: BMT, ZBV: JSD, VMC: DLN}.
So the maximum matching is ",3,7,272
bipartite,"[(ICD, YRW), (ICD, QNQ), (ICD, IUQ), (IDA, LCU), (UFD, UGH), (UFD, QNQ), (UFD, IUQ), (FXS, LCU), (FXS, QNQ)]","{ICD: [YRW, QNQ, IUQ],
IDA: [LCU],
UFD: [UGH, QNQ, IUQ],
FXS: [LCU, QNQ],
YRW: [ICD],
LCU: [IDA, FXS],
UGH: [UFD],
QNQ: [ICD, UFD, FXS],
IUQ: [ICD, UFD]}","Node ICD is connected to nodes YRW, QNQ, IUQ.
Node IDA is connected to node LCU.
Node UFD is connected to nodes UGH, QNQ, IUQ.
Node FXS is connected to nodes LCU, QNQ.
Node YRW is connected to node ICD.
Node LCU is connected to nodes IDA, FXS.
Node UGH is connected to node UFD.
Node QNQ is connected to nodes ICD, UFD, FXS.
Node IUQ is connected to nodes ICD, UFD.","[ICD, IDA, UFD, FXS, YRW, LCU, UGH, QNQ, IUQ]",9,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ICD IDA UFD FXS.
Nodes set 2 contains: YRW LCU UGH QNQ IUQ.","[(ICD, YRW), (IDA, LCU), (UFD, UGH), (FXS, QNQ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ICD. Updated matching: {YRW: ICD}.
Search from node IDA. Updated matching: {YRW: ICD, LCU: IDA}.
Search from node UFD. Updated matching: {YRW: ICD, LCU: IDA, UGH: UFD}.
Search from node FXS. Updated matching: {YRW: ICD, LCU: IDA, UGH: UFD, QNQ: FXS}.
So the maximum matching is ",4,5,273
bipartite,"[(TFA, BNK), (TFA, BRK), (FOQ, WVU), (FOQ, BRK), (FOQ, FIP), (CWY, BNK), (CWY, TIT), (CWY, JAO), (CWY, RIH), (SLC, BRK), (SLC, FIP), (LNS, TIT), (LNS, JAO), (LNS, RIH)]","{TFA: [BNK, BRK],
FOQ: [WVU, BRK, FIP],
CWY: [BNK, TIT, JAO, RIH],
SLC: [BRK, FIP],
LNS: [TIT, JAO, RIH],
BNK: [TFA, CWY],
TIT: [CWY, LNS],
JAO: [CWY, LNS],
RIH: [CWY, LNS],
WVU: [FOQ],
BRK: [TFA, FOQ, SLC],
FIP: [FOQ, SLC]}","Node TFA is connected to nodes BNK, BRK.
Node FOQ is connected to nodes WVU, BRK, FIP.
Node CWY is connected to nodes BNK, TIT, JAO, RIH.
Node SLC is connected to nodes BRK, FIP.
Node LNS is connected to nodes TIT, JAO, RIH.
Node BNK is connected to nodes TFA, CWY.
Node TIT is connected to nodes CWY, LNS.
Node JAO is connected to nodes CWY, LNS.
Node RIH is connected to nodes CWY, LNS.
Node WVU is connected to node FOQ.
Node BRK is connected to nodes TFA, FOQ, SLC.
Node FIP is connected to nodes FOQ, SLC.","[TFA, FOQ, CWY, SLC, LNS, BNK, TIT, JAO, RIH, WVU, BRK, FIP]",12,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: TFA FOQ CWY SLC LNS.
Nodes set 2 contains: BNK TIT JAO RIH WVU BRK FIP.","[(TFA, BRK), (FOQ, WVU), (CWY, BNK), (SLC, FIP), (LNS, TIT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node TFA. Updated matching: {BNK: TFA}.
Search from node FOQ. Updated matching: {BNK: TFA, WVU: FOQ}.
Search from node CWY. Updated matching: {BNK: CWY, WVU: FOQ, BRK: TFA}.
Search from node SLC. Updated matching: {BNK: TFA, WVU: FOQ, BRK: SLC, TIT: CWY}.
Search from node LNS. Updated matching: {BNK: CWY, WVU: FOQ, BRK: TFA, TIT: LNS, FIP: SLC}.
So the maximum matching is ",5,7,274
bipartite,"[(NNP, FUG), (NNP, YVB), (NNP, BGW), (NNP, QWY), (VNO, SPF), (VNO, QWY), (VNO, CYH)]","{NNP: [FUG, YVB, BGW, QWY],
VNO: [SPF, QWY, CYH],
SPF: [VNO],
FUG: [NNP],
YVB: [NNP],
BGW: [NNP],
QWY: [NNP, VNO],
CYH: [VNO]}","Node NNP is connected to nodes FUG, YVB, BGW, QWY.
Node VNO is connected to nodes SPF, QWY, CYH.
Node SPF is connected to node VNO.
Node FUG is connected to node NNP.
Node YVB is connected to node NNP.
Node BGW is connected to node NNP.
Node QWY is connected to nodes NNP, VNO.
Node CYH is connected to node VNO.","[NNP, VNO, SPF, FUG, YVB, BGW, QWY, CYH]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NNP VNO.
Nodes set 2 contains: SPF FUG YVB BGW QWY CYH.","[(NNP, FUG), (VNO, SPF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NNP. Updated matching: {FUG: NNP}.
Search from node VNO. Updated matching: {FUG: NNP, SPF: VNO}.
So the maximum matching is ",2,6,275
bipartite,"[(YYG, ZQJ), (YYG, HVJ), (YYG, SMT), (UIN, DBL), (UIN, HVJ), (UIN, TJH), (UIN, UHO), (ZQX, ZQJ), (ZQX, TJH), (ZQX, NDN)]","{YYG: [ZQJ, HVJ, SMT],
UIN: [DBL, HVJ, TJH, UHO],
ZQX: [ZQJ, TJH, NDN],
DBL: [UIN],
ZQJ: [YYG, ZQX],
HVJ: [YYG, UIN],
TJH: [UIN, ZQX],
NDN: [ZQX],
UHO: [UIN],
SMT: [YYG]}","Node YYG is connected to nodes ZQJ, HVJ, SMT.
Node UIN is connected to nodes DBL, HVJ, TJH, UHO.
Node ZQX is connected to nodes ZQJ, TJH, NDN.
Node DBL is connected to node UIN.
Node ZQJ is connected to nodes YYG, ZQX.
Node HVJ is connected to nodes YYG, UIN.
Node TJH is connected to nodes UIN, ZQX.
Node NDN is connected to node ZQX.
Node UHO is connected to node UIN.
Node SMT is connected to node YYG.","[YYG, UIN, ZQX, DBL, ZQJ, HVJ, TJH, NDN, UHO, SMT]",10,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: YYG UIN ZQX.
Nodes set 2 contains: DBL ZQJ HVJ TJH NDN UHO SMT.","[(YYG, HVJ), (UIN, DBL), (ZQX, ZQJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node YYG. Updated matching: {ZQJ: YYG}.
Search from node UIN. Updated matching: {ZQJ: YYG, DBL: UIN}.
Search from node ZQX. Updated matching: {ZQJ: ZQX, DBL: UIN, HVJ: YYG}.
So the maximum matching is ",3,7,276
bipartite,"[(IFP, PQC), (IFP, FEE), (IFP, EGN), (BVE, PQC), (BVE, FEE), (BVE, AZE), (BVE, EGN), (LJF, UHO), (LJF, EGN)]","{IFP: [PQC, FEE, EGN],
BVE: [PQC, FEE, AZE, EGN],
LJF: [UHO, EGN],
PQC: [IFP, BVE],
FEE: [IFP, BVE],
UHO: [LJF],
AZE: [BVE],
EGN: [IFP, BVE, LJF]}","Node IFP is connected to nodes PQC, FEE, EGN.
Node BVE is connected to nodes PQC, FEE, AZE, EGN.
Node LJF is connected to nodes UHO, EGN.
Node PQC is connected to nodes IFP, BVE.
Node FEE is connected to nodes IFP, BVE.
Node UHO is connected to node LJF.
Node AZE is connected to node BVE.
Node EGN is connected to nodes IFP, BVE, LJF.","[IFP, BVE, LJF, PQC, FEE, UHO, AZE, EGN]",8,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IFP BVE LJF.
Nodes set 2 contains: PQC FEE UHO AZE EGN.","[(IFP, FEE), (BVE, PQC), (LJF, UHO)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IFP. Updated matching: {PQC: IFP}.
Search from node BVE. Updated matching: {PQC: BVE, FEE: IFP}.
Search from node LJF. Updated matching: {PQC: BVE, FEE: IFP, UHO: LJF}.
So the maximum matching is ",3,5,277
bipartite,"[(SZV, MCA), (SZV, DWC), (SZV, NWJ), (PHE, MCA), (PHE, UOT), (PHE, ODQ), (ODE, UOT), (ODE, NWJ), (ODE, ODQ)]","{SZV: [MCA, DWC, NWJ],
PHE: [MCA, UOT, ODQ],
ODE: [UOT, NWJ, ODQ],
MCA: [SZV, PHE],
DWC: [SZV],
UOT: [PHE, ODE],
NWJ: [SZV, ODE],
ODQ: [PHE, ODE]}","Node SZV is connected to nodes MCA, DWC, NWJ.
Node PHE is connected to nodes MCA, UOT, ODQ.
Node ODE is connected to nodes UOT, NWJ, ODQ.
Node MCA is connected to nodes SZV, PHE.
Node DWC is connected to node SZV.
Node UOT is connected to nodes PHE, ODE.
Node NWJ is connected to nodes SZV, ODE.
Node ODQ is connected to nodes PHE, ODE.","[SZV, PHE, ODE, MCA, DWC, UOT, NWJ, ODQ]",8,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: SZV PHE ODE.
Nodes set 2 contains: MCA DWC UOT NWJ ODQ.","[(SZV, DWC), (PHE, MCA), (ODE, UOT)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node SZV. Updated matching: {MCA: SZV}.
Search from node PHE. Updated matching: {MCA: PHE, DWC: SZV}.
Search from node ODE. Updated matching: {MCA: PHE, DWC: SZV, UOT: ODE}.
So the maximum matching is ",3,5,278
bipartite,"[(JUS, VGV), (JUS, HBX), (JUS, FVR), (CRZ, VGV), (CRZ, DON), (OFN, HTH), (OFN, LPT), (OFN, DON), (OFN, HBX), (PGD, YAF), (FME, HTH), (FME, LPT), (FME, YAF), (FME, DON), (FME, RMF)]","{JUS: [VGV, HBX, FVR],
CRZ: [VGV, DON],
OFN: [HTH, LPT, DON, HBX],
PGD: [YAF],
FME: [HTH, LPT, YAF, DON, RMF],
VGV: [JUS, CRZ],
HTH: [OFN, FME],
LPT: [OFN, FME],
YAF: [PGD, FME],
DON: [CRZ, OFN, FME],
RMF: [FME],
HBX: [JUS, OFN],
FVR: [JUS]}","Node JUS is connected to nodes VGV, HBX, FVR.
Node CRZ is connected to nodes VGV, DON.
Node OFN is connected to nodes HTH, LPT, DON, HBX.
Node PGD is connected to node YAF.
Node FME is connected to nodes HTH, LPT, YAF, DON, RMF.
Node VGV is connected to nodes JUS, CRZ.
Node HTH is connected to nodes OFN, FME.
Node LPT is connected to nodes OFN, FME.
Node YAF is connected to nodes PGD, FME.
Node DON is connected to nodes CRZ, OFN, FME.
Node RMF is connected to node FME.
Node HBX is connected to nodes JUS, OFN.
Node FVR is connected to node JUS.","[JUS, CRZ, OFN, PGD, FME, VGV, HTH, LPT, YAF, DON, RMF, HBX, FVR]",13,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JUS CRZ OFN PGD FME.
Nodes set 2 contains: VGV HTH LPT YAF DON RMF HBX FVR.","[(JUS, HBX), (CRZ, VGV), (OFN, LPT), (PGD, YAF), (FME, HTH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JUS. Updated matching: {VGV: JUS}.
Search from node CRZ. Updated matching: {VGV: CRZ, HBX: JUS}.
Search from node OFN. Updated matching: {VGV: CRZ, HBX: JUS, HTH: OFN}.
Search from node PGD. Updated matching: {VGV: CRZ, HBX: JUS, HTH: OFN, YAF: PGD}.
Search from node FME. Updated matching: {VGV: CRZ, HBX: JUS, HTH: FME, YAF: PGD, LPT: OFN}.
So the maximum matching is ",5,8,279
bipartite,"[(OTJ, HWK), (OTJ, ZUW), (OTJ, PSJ), (OTJ, QRZ), (OTJ, NHW), (MVF, SFH), (MVF, NBW), (MVF, QRZ), (MVF, NHW), (BEL, SFH), (BEL, FSQ), (BEL, HWK), (QWF, WWY), (QWF, SFH), (QWF, NBW), (QWF, PSJ), (QWF, QRZ), (LOJ, WWY), (LOJ, HWK), (LOJ, NHW)]","{OTJ: [HWK, ZUW, PSJ, QRZ, NHW],
MVF: [SFH, NBW, QRZ, NHW],
BEL: [SFH, FSQ, HWK],
QWF: [WWY, SFH, NBW, PSJ, QRZ],
LOJ: [WWY, HWK, NHW],
WWY: [QWF, LOJ],
SFH: [MVF, BEL, QWF],
FSQ: [BEL],
HWK: [OTJ, BEL, LOJ],
NBW: [MVF, QWF],
ZUW: [OTJ],
PSJ: [OTJ, QWF],
QRZ: [OTJ, MVF, QWF],
NHW: [OTJ, MVF, LOJ]}","Node OTJ is connected to nodes HWK, ZUW, PSJ, QRZ, NHW.
Node MVF is connected to nodes SFH, NBW, QRZ, NHW.
Node BEL is connected to nodes SFH, FSQ, HWK.
Node QWF is connected to nodes WWY, SFH, NBW, PSJ, QRZ.
Node LOJ is connected to nodes WWY, HWK, NHW.
Node WWY is connected to nodes QWF, LOJ.
Node SFH is connected to nodes MVF, BEL, QWF.
Node FSQ is connected to node BEL.
Node HWK is connected to nodes OTJ, BEL, LOJ.
Node NBW is connected to nodes MVF, QWF.
Node ZUW is connected to node OTJ.
Node PSJ is connected to nodes OTJ, QWF.
Node QRZ is connected to nodes OTJ, MVF, QWF.
Node NHW is connected to nodes OTJ, MVF, LOJ.","[OTJ, MVF, BEL, QWF, LOJ, WWY, SFH, FSQ, HWK, NBW, ZUW, PSJ, QRZ, NHW]",14,20,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OTJ MVF BEL QWF LOJ.
Nodes set 2 contains: WWY SFH FSQ HWK NBW ZUW PSJ QRZ NHW.","[(OTJ, HWK), (MVF, NBW), (BEL, FSQ), (QWF, SFH), (LOJ, WWY)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OTJ. Updated matching: {HWK: OTJ}.
Search from node MVF. Updated matching: {HWK: OTJ, SFH: MVF}.
Search from node BEL. Updated matching: {HWK: OTJ, SFH: BEL, NBW: MVF}.
Search from node QWF. Updated matching: {HWK: OTJ, SFH: BEL, NBW: MVF, WWY: QWF}.
Search from node LOJ. Updated matching: {HWK: OTJ, SFH: QWF, NBW: MVF, WWY: LOJ, FSQ: BEL}.
So the maximum matching is ",5,9,280
bipartite,"[(MXO, OKX), (MXO, MCB), (MXO, LLG), (MXO, GJM), (SOO, EQI), (SOO, OKX), (OTG, OKX), (OTG, MCB), (OTG, LLG), (LJV, TTX), (LJV, LLG), (LJV, GJM), (KFQ, TTX), (KFQ, KER)]","{MXO: [OKX, MCB, LLG, GJM],
SOO: [EQI, OKX],
OTG: [OKX, MCB, LLG],
LJV: [TTX, LLG, GJM],
KFQ: [TTX, KER],
EQI: [SOO],
OKX: [MXO, SOO, OTG],
TTX: [LJV, KFQ],
MCB: [MXO, OTG],
KER: [KFQ],
LLG: [MXO, OTG, LJV],
GJM: [MXO, LJV]}","Node MXO is connected to nodes OKX, MCB, LLG, GJM.
Node SOO is connected to nodes EQI, OKX.
Node OTG is connected to nodes OKX, MCB, LLG.
Node LJV is connected to nodes TTX, LLG, GJM.
Node KFQ is connected to nodes TTX, KER.
Node EQI is connected to node SOO.
Node OKX is connected to nodes MXO, SOO, OTG.
Node TTX is connected to nodes LJV, KFQ.
Node MCB is connected to nodes MXO, OTG.
Node KER is connected to node KFQ.
Node LLG is connected to nodes MXO, OTG, LJV.
Node GJM is connected to nodes MXO, LJV.","[MXO, SOO, OTG, LJV, KFQ, EQI, OKX, TTX, MCB, KER, LLG, GJM]",12,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: MXO SOO OTG LJV KFQ.
Nodes set 2 contains: EQI OKX TTX MCB KER LLG GJM.","[(MXO, MCB), (SOO, EQI), (OTG, OKX), (LJV, LLG), (KFQ, TTX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node MXO. Updated matching: {OKX: MXO}.
Search from node SOO. Updated matching: {OKX: MXO, EQI: SOO}.
Search from node OTG. Updated matching: {OKX: OTG, EQI: SOO, MCB: MXO}.
Search from node LJV. Updated matching: {OKX: OTG, EQI: SOO, MCB: MXO, TTX: LJV}.
Search from node KFQ. Updated matching: {OKX: OTG, EQI: SOO, MCB: MXO, TTX: KFQ, LLG: LJV}.
So the maximum matching is ",5,7,281
bipartite,"[(FGE, QDO), (FGE, NAQ), (FGE, SDR), (FHB, SDR), (QQR, ZLY), (QQR, QDI), (QQR, QDO), (GCE, ZLY), (GCE, QDO), (GCE, SPG), (GCE, SDR), (NYL, ADF), (NYL, QDI), (NYL, SCA), (GVR, ZLY), (GVR, ADF), (GVR, NAQ), (TFN, SCA)]","{FGE: [QDO, NAQ, SDR],
FHB: [SDR],
QQR: [ZLY, QDI, QDO],
GCE: [ZLY, QDO, SPG, SDR],
NYL: [ADF, QDI, SCA],
GVR: [ZLY, ADF, NAQ],
TFN: [SCA],
ZLY: [QQR, GCE, GVR],
ADF: [NYL, GVR],
QDI: [QQR, NYL],
QDO: [FGE, QQR, GCE],
NAQ: [FGE, GVR],
SPG: [GCE],
SDR: [FGE, FHB, GCE],
SCA: [NYL, TFN]}","Node FGE is connected to nodes QDO, NAQ, SDR.
Node FHB is connected to node SDR.
Node QQR is connected to nodes ZLY, QDI, QDO.
Node GCE is connected to nodes ZLY, QDO, SPG, SDR.
Node NYL is connected to nodes ADF, QDI, SCA.
Node GVR is connected to nodes ZLY, ADF, NAQ.
Node TFN is connected to node SCA.
Node ZLY is connected to nodes QQR, GCE, GVR.
Node ADF is connected to nodes NYL, GVR.
Node QDI is connected to nodes QQR, NYL.
Node QDO is connected to nodes FGE, QQR, GCE.
Node NAQ is connected to nodes FGE, GVR.
Node SPG is connected to node GCE.
Node SDR is connected to nodes FGE, FHB, GCE.
Node SCA is connected to nodes NYL, TFN.","[FGE, FHB, QQR, GCE, NYL, GVR, TFN, ZLY, ADF, QDI, QDO, NAQ, SPG, SDR, SCA]",15,18,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: FGE FHB QQR GCE NYL GVR TFN.
Nodes set 2 contains: ZLY ADF QDI QDO NAQ SPG SDR SCA.","[(FGE, NAQ), (FHB, SDR), (QQR, QDI), (GCE, QDO), (NYL, ADF), (GVR, ZLY), (TFN, SCA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node FGE. Updated matching: {QDO: FGE}.
Search from node FHB. Updated matching: {QDO: FGE, SDR: FHB}.
Search from node QQR. Updated matching: {QDO: FGE, SDR: FHB, ZLY: QQR}.
Search from node GCE. Updated matching: {QDO: FGE, SDR: FHB, ZLY: GCE, QDI: QQR}.
Search from node NYL. Updated matching: {QDO: FGE, SDR: FHB, ZLY: GCE, QDI: QQR, ADF: NYL}.
Search from node GVR. Updated matching: {QDO: GCE, SDR: FHB, ZLY: GVR, QDI: QQR, ADF: NYL, NAQ: FGE}.
Search from node TFN. Updated matching: {QDO: GCE, SDR: FHB, ZLY: GVR, QDI: QQR, ADF: NYL, NAQ: FGE, SCA: TFN}.
So the maximum matching is ",7,8,282
bipartite,"[(CLA, IFY), (ERX, PXN), (ERX, YFJ), (ERX, IFY), (ERX, DTS), (KMP, DTS), (KMP, TPQ), (MJR, PXN), (MJR, NQY), (MJR, DTS), (MJR, TPQ), (RNH, YFJ), (RNH, CEY), (RNH, IFY)]","{CLA: [IFY],
ERX: [PXN, YFJ, IFY, DTS],
KMP: [DTS, TPQ],
MJR: [PXN, NQY, DTS, TPQ],
RNH: [YFJ, CEY, IFY],
PXN: [ERX, MJR],
NQY: [MJR],
YFJ: [ERX, RNH],
CEY: [RNH],
IFY: [CLA, ERX, RNH],
DTS: [ERX, KMP, MJR],
TPQ: [KMP, MJR]}","Node CLA is connected to node IFY.
Node ERX is connected to nodes PXN, YFJ, IFY, DTS.
Node KMP is connected to nodes DTS, TPQ.
Node MJR is connected to nodes PXN, NQY, DTS, TPQ.
Node RNH is connected to nodes YFJ, CEY, IFY.
Node PXN is connected to nodes ERX, MJR.
Node NQY is connected to node MJR.
Node YFJ is connected to nodes ERX, RNH.
Node CEY is connected to node RNH.
Node IFY is connected to nodes CLA, ERX, RNH.
Node DTS is connected to nodes ERX, KMP, MJR.
Node TPQ is connected to nodes KMP, MJR.","[CLA, ERX, KMP, MJR, RNH, PXN, NQY, YFJ, CEY, IFY, DTS, TPQ]",12,14,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: CLA ERX KMP MJR RNH.
Nodes set 2 contains: PXN NQY YFJ CEY IFY DTS TPQ.","[(CLA, IFY), (ERX, PXN), (KMP, DTS), (MJR, NQY), (RNH, YFJ)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node CLA. Updated matching: {IFY: CLA}.
Search from node ERX. Updated matching: {IFY: CLA, PXN: ERX}.
Search from node KMP. Updated matching: {IFY: CLA, PXN: ERX, DTS: KMP}.
Search from node MJR. Updated matching: {IFY: CLA, PXN: MJR, DTS: KMP, YFJ: ERX}.
Search from node RNH. Updated matching: {IFY: CLA, PXN: ERX, DTS: KMP, YFJ: RNH, NQY: MJR}.
So the maximum matching is ",5,7,283
bipartite,"[(ETU, WLB), (ETU, KFF), (JVT, WLB), (JVT, XXV), (NSW, XXV), (KYX, WLB), (KYX, JKI), (KYX, QID), (KYX, XXV)]","{ETU: [WLB, KFF],
JVT: [WLB, XXV],
NSW: [XXV],
KYX: [WLB, JKI, QID, XXV],
WLB: [ETU, JVT, KYX],
JKI: [KYX],
QID: [KYX],
XXV: [JVT, NSW, KYX],
KFF: [ETU]}","Node ETU is connected to nodes WLB, KFF.
Node JVT is connected to nodes WLB, XXV.
Node NSW is connected to node XXV.
Node KYX is connected to nodes WLB, JKI, QID, XXV.
Node WLB is connected to nodes ETU, JVT, KYX.
Node JKI is connected to node KYX.
Node QID is connected to node KYX.
Node XXV is connected to nodes JVT, NSW, KYX.
Node KFF is connected to node ETU.","[ETU, JVT, NSW, KYX, WLB, JKI, QID, XXV, KFF]",9,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ETU JVT NSW KYX.
Nodes set 2 contains: WLB JKI QID XXV KFF.","[(ETU, KFF), (JVT, WLB), (NSW, XXV), (KYX, JKI)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ETU. Updated matching: {WLB: ETU}.
Search from node JVT. Updated matching: {WLB: JVT, KFF: ETU}.
Search from node NSW. Updated matching: {WLB: JVT, KFF: ETU, XXV: NSW}.
Search from node KYX. Updated matching: {WLB: JVT, KFF: ETU, XXV: NSW, JKI: KYX}.
So the maximum matching is ",4,5,284
bipartite,"[(OUP, UFH), (SWL, ATM), (SWL, AWZ), (SWL, QEP), (LTV, CBJ), (LTV, AWZ), (LTV, QEP), (PMX, NBA), (PMX, AWZ), (PMX, QEP), (PMX, GXR), (WOP, ATM), (WOP, UFH), (WOP, QEP), (SLV, ATM), (SLV, QEP)]","{OUP: [UFH],
SWL: [ATM, AWZ, QEP],
LTV: [CBJ, AWZ, QEP],
PMX: [NBA, AWZ, QEP, GXR],
WOP: [ATM, UFH, QEP],
SLV: [ATM, QEP],
ATM: [SWL, WOP, SLV],
NBA: [PMX],
CBJ: [LTV],
UFH: [OUP, WOP],
AWZ: [SWL, LTV, PMX],
QEP: [SWL, LTV, PMX, WOP, SLV],
GXR: [PMX]}","Node OUP is connected to node UFH.
Node SWL is connected to nodes ATM, AWZ, QEP.
Node LTV is connected to nodes CBJ, AWZ, QEP.
Node PMX is connected to nodes NBA, AWZ, QEP, GXR.
Node WOP is connected to nodes ATM, UFH, QEP.
Node SLV is connected to nodes ATM, QEP.
Node ATM is connected to nodes SWL, WOP, SLV.
Node NBA is connected to node PMX.
Node CBJ is connected to node LTV.
Node UFH is connected to nodes OUP, WOP.
Node AWZ is connected to nodes SWL, LTV, PMX.
Node QEP is connected to nodes SWL, LTV, PMX, WOP, SLV.
Node GXR is connected to node PMX.","[OUP, SWL, LTV, PMX, WOP, SLV, ATM, NBA, CBJ, UFH, AWZ, QEP, GXR]",13,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: OUP SWL LTV PMX WOP SLV.
Nodes set 2 contains: ATM NBA CBJ UFH AWZ QEP GXR.","[(OUP, UFH), (SWL, AWZ), (LTV, CBJ), (PMX, NBA), (WOP, QEP), (SLV, ATM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node OUP. Updated matching: {UFH: OUP}.
Search from node SWL. Updated matching: {UFH: OUP, ATM: SWL}.
Search from node LTV. Updated matching: {UFH: OUP, ATM: SWL, CBJ: LTV}.
Search from node PMX. Updated matching: {UFH: OUP, ATM: SWL, CBJ: LTV, NBA: PMX}.
Search from node WOP. Updated matching: {UFH: OUP, ATM: WOP, CBJ: LTV, NBA: PMX, AWZ: SWL}.
Search from node SLV. Updated matching: {UFH: OUP, ATM: SLV, CBJ: LTV, NBA: PMX, AWZ: SWL, QEP: WOP}.
So the maximum matching is ",6,7,285
bipartite,"[(XWD, IBU), (XWD, PPD), (XWD, IFF), (OCR, PPD), (OCR, BKU), (MTC, PPD), (MTC, SLS)]","{XWD: [IBU, PPD, IFF],
OCR: [PPD, BKU],
MTC: [PPD, SLS],
IBU: [XWD],
PPD: [XWD, OCR, MTC],
BKU: [OCR],
SLS: [MTC],
IFF: [XWD]}","Node XWD is connected to nodes IBU, PPD, IFF.
Node OCR is connected to nodes PPD, BKU.
Node MTC is connected to nodes PPD, SLS.
Node IBU is connected to node XWD.
Node PPD is connected to nodes XWD, OCR, MTC.
Node BKU is connected to node OCR.
Node SLS is connected to node MTC.
Node IFF is connected to node XWD.","[XWD, OCR, MTC, IBU, PPD, BKU, SLS, IFF]",8,7,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: XWD OCR MTC.
Nodes set 2 contains: IBU PPD BKU SLS IFF.","[(XWD, IBU), (OCR, BKU), (MTC, PPD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node XWD. Updated matching: {IBU: XWD}.
Search from node OCR. Updated matching: {IBU: XWD, PPD: OCR}.
Search from node MTC. Updated matching: {IBU: XWD, PPD: MTC, BKU: OCR}.
So the maximum matching is ",3,5,286
bipartite,"[(ACE, NZK), (ACE, SDL), (ACE, LQX), (ACE, VBJ), (ACE, QUD), (ACE, GRY), (ACE, MPZ), (ACE, ZBJ), (EQP, NZK), (EQP, YDV), (EQP, LQX), (EQP, MPZ), (POG, NZK), (POG, SDL), (POG, YDV), (POG, ZBJ)]","{ACE: [NZK, SDL, LQX, VBJ, QUD, GRY, MPZ, ZBJ],
EQP: [NZK, YDV, LQX, MPZ],
POG: [NZK, SDL, YDV, ZBJ],
NZK: [ACE, EQP, POG],
SDL: [ACE, POG],
YDV: [EQP, POG],
LQX: [ACE, EQP],
VBJ: [ACE],
QUD: [ACE],
GRY: [ACE],
MPZ: [ACE, EQP],
ZBJ: [ACE, POG]}","Node ACE is connected to nodes NZK, SDL, LQX, VBJ, QUD, GRY, MPZ, ZBJ.
Node EQP is connected to nodes NZK, YDV, LQX, MPZ.
Node POG is connected to nodes NZK, SDL, YDV, ZBJ.
Node NZK is connected to nodes ACE, EQP, POG.
Node SDL is connected to nodes ACE, POG.
Node YDV is connected to nodes EQP, POG.
Node LQX is connected to nodes ACE, EQP.
Node VBJ is connected to node ACE.
Node QUD is connected to node ACE.
Node GRY is connected to node ACE.
Node MPZ is connected to nodes ACE, EQP.
Node ZBJ is connected to nodes ACE, POG.","[ACE, EQP, POG, NZK, SDL, YDV, LQX, VBJ, QUD, GRY, MPZ, ZBJ]",12,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ACE EQP POG.
Nodes set 2 contains: NZK SDL YDV LQX VBJ QUD GRY MPZ ZBJ.","[(ACE, SDL), (EQP, YDV), (POG, NZK)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ACE. Updated matching: {NZK: ACE}.
Search from node EQP. Updated matching: {NZK: EQP, SDL: ACE}.
Search from node POG. Updated matching: {NZK: POG, SDL: ACE, YDV: EQP}.
So the maximum matching is ",3,9,287
bipartite,"[(WAB, DSZ), (AMZ, MQC), (AMZ, EMF), (AMZ, KHS), (ZTA, WSO), (ZTA, MQC), (ZTA, QBW), (ZTA, QJY), (ZTA, DLX), (REG, DSZ), (REG, EMF), (REG, KHS)]","{WAB: [DSZ],
AMZ: [MQC, EMF, KHS],
ZTA: [WSO, MQC, QBW, QJY, DLX],
REG: [DSZ, EMF, KHS],
WSO: [ZTA],
DSZ: [WAB, REG],
MQC: [AMZ, ZTA],
QBW: [ZTA],
EMF: [AMZ, REG],
QJY: [ZTA],
DLX: [ZTA],
KHS: [AMZ, REG]}","Node WAB is connected to node DSZ.
Node AMZ is connected to nodes MQC, EMF, KHS.
Node ZTA is connected to nodes WSO, MQC, QBW, QJY, DLX.
Node REG is connected to nodes DSZ, EMF, KHS.
Node WSO is connected to node ZTA.
Node DSZ is connected to nodes WAB, REG.
Node MQC is connected to nodes AMZ, ZTA.
Node QBW is connected to node ZTA.
Node EMF is connected to nodes AMZ, REG.
Node QJY is connected to node ZTA.
Node DLX is connected to node ZTA.
Node KHS is connected to nodes AMZ, REG.","[WAB, AMZ, ZTA, REG, WSO, DSZ, MQC, QBW, EMF, QJY, DLX, KHS]",12,12,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: WAB AMZ ZTA REG.
Nodes set 2 contains: WSO DSZ MQC QBW EMF QJY DLX KHS.","[(WAB, DSZ), (AMZ, MQC), (ZTA, WSO), (REG, EMF)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node WAB. Updated matching: {DSZ: WAB}.
Search from node AMZ. Updated matching: {DSZ: WAB, MQC: AMZ}.
Search from node ZTA. Updated matching: {DSZ: WAB, MQC: AMZ, WSO: ZTA}.
Search from node REG. Updated matching: {DSZ: WAB, MQC: AMZ, WSO: ZTA, EMF: REG}.
So the maximum matching is ",4,8,288
bipartite,"[(NJP, LOZ), (NJP, DVF), (BVZ, KYI), (BVZ, DVF), (BVZ, UOB), (BVZ, DDP), (PJJ, UOB), (NZH, IBE), (NZH, DVF), (UEG, GRX), (UEG, UOB)]","{NJP: [LOZ, DVF],
BVZ: [KYI, DVF, UOB, DDP],
PJJ: [UOB],
NZH: [IBE, DVF],
UEG: [GRX, UOB],
GRX: [UEG],
IBE: [NZH],
LOZ: [NJP],
KYI: [BVZ],
DVF: [NJP, BVZ, NZH],
UOB: [BVZ, PJJ, UEG],
DDP: [BVZ]}","Node NJP is connected to nodes LOZ, DVF.
Node BVZ is connected to nodes KYI, DVF, UOB, DDP.
Node PJJ is connected to node UOB.
Node NZH is connected to nodes IBE, DVF.
Node UEG is connected to nodes GRX, UOB.
Node GRX is connected to node UEG.
Node IBE is connected to node NZH.
Node LOZ is connected to node NJP.
Node KYI is connected to node BVZ.
Node DVF is connected to nodes NJP, BVZ, NZH.
Node UOB is connected to nodes BVZ, PJJ, UEG.
Node DDP is connected to node BVZ.","[NJP, BVZ, PJJ, NZH, UEG, GRX, IBE, LOZ, KYI, DVF, UOB, DDP]",12,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NJP BVZ PJJ NZH UEG.
Nodes set 2 contains: GRX IBE LOZ KYI DVF UOB DDP.","[(NJP, LOZ), (BVZ, KYI), (PJJ, UOB), (NZH, IBE), (UEG, GRX)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NJP. Updated matching: {LOZ: NJP}.
Search from node BVZ. Updated matching: {LOZ: NJP, KYI: BVZ}.
Search from node PJJ. Updated matching: {LOZ: NJP, KYI: BVZ, UOB: PJJ}.
Search from node NZH. Updated matching: {LOZ: NJP, KYI: BVZ, UOB: PJJ, IBE: NZH}.
Search from node UEG. Updated matching: {LOZ: NJP, KYI: BVZ, UOB: PJJ, IBE: NZH, GRX: UEG}.
So the maximum matching is ",5,7,289
bipartite,"[(JML, OVS), (JML, WAR), (JML, NAP), (BQE, WAR), (BQE, NAP), (PEX, GSH), (PEX, GNS), (PEX, WHN), (PEX, WAR), (PPI, ZMZ), (PPI, GNS), (PPI, NYK), (LTJ, OVS), (LTJ, ZMZ), (LTJ, WHN), (LTJ, WAR)]","{JML: [OVS, WAR, NAP],
BQE: [WAR, NAP],
PEX: [GSH, GNS, WHN, WAR],
PPI: [ZMZ, GNS, NYK],
LTJ: [OVS, ZMZ, WHN, WAR],
OVS: [JML, LTJ],
GSH: [PEX],
ZMZ: [PPI, LTJ],
GNS: [PEX, PPI],
WHN: [PEX, LTJ],
WAR: [JML, BQE, PEX, LTJ],
NAP: [JML, BQE],
NYK: [PPI]}","Node JML is connected to nodes OVS, WAR, NAP.
Node BQE is connected to nodes WAR, NAP.
Node PEX is connected to nodes GSH, GNS, WHN, WAR.
Node PPI is connected to nodes ZMZ, GNS, NYK.
Node LTJ is connected to nodes OVS, ZMZ, WHN, WAR.
Node OVS is connected to nodes JML, LTJ.
Node GSH is connected to node PEX.
Node ZMZ is connected to nodes PPI, LTJ.
Node GNS is connected to nodes PEX, PPI.
Node WHN is connected to nodes PEX, LTJ.
Node WAR is connected to nodes JML, BQE, PEX, LTJ.
Node NAP is connected to nodes JML, BQE.
Node NYK is connected to node PPI.","[JML, BQE, PEX, PPI, LTJ, OVS, GSH, ZMZ, GNS, WHN, WAR, NAP, NYK]",13,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: JML BQE PEX PPI LTJ.
Nodes set 2 contains: OVS GSH ZMZ GNS WHN WAR NAP NYK.","[(JML, WAR), (BQE, NAP), (PEX, GSH), (PPI, ZMZ), (LTJ, OVS)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node JML. Updated matching: {OVS: JML}.
Search from node BQE. Updated matching: {OVS: JML, WAR: BQE}.
Search from node PEX. Updated matching: {OVS: JML, WAR: BQE, GSH: PEX}.
Search from node PPI. Updated matching: {OVS: JML, WAR: BQE, GSH: PEX, ZMZ: PPI}.
Search from node LTJ. Updated matching: {OVS: LTJ, WAR: JML, GSH: PEX, ZMZ: PPI, NAP: BQE}.
So the maximum matching is ",5,8,290
bipartite,"[(ZRT, KXN), (ZRT, FSO), (ZRT, WQS), (ZRT, VBI), (ZRT, UBU), (FSX, ZVO), (FSX, VBI), (ITZ, QRW), (ITZ, ZVO), (ITZ, UBU), (ITZ, QKM)]","{ZRT: [KXN, FSO, WQS, VBI, UBU],
FSX: [ZVO, VBI],
ITZ: [QRW, ZVO, UBU, QKM],
QRW: [ITZ],
ZVO: [FSX, ITZ],
KXN: [ZRT],
FSO: [ZRT],
WQS: [ZRT],
VBI: [ZRT, FSX],
UBU: [ZRT, ITZ],
QKM: [ITZ]}","Node ZRT is connected to nodes KXN, FSO, WQS, VBI, UBU.
Node FSX is connected to nodes ZVO, VBI.
Node ITZ is connected to nodes QRW, ZVO, UBU, QKM.
Node QRW is connected to node ITZ.
Node ZVO is connected to nodes FSX, ITZ.
Node KXN is connected to node ZRT.
Node FSO is connected to node ZRT.
Node WQS is connected to node ZRT.
Node VBI is connected to nodes ZRT, FSX.
Node UBU is connected to nodes ZRT, ITZ.
Node QKM is connected to node ITZ.","[ZRT, FSX, ITZ, QRW, ZVO, KXN, FSO, WQS, VBI, UBU, QKM]",11,11,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: ZRT FSX ITZ.
Nodes set 2 contains: QRW ZVO KXN FSO WQS VBI UBU QKM.","[(ZRT, KXN), (FSX, ZVO), (ITZ, QRW)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node ZRT. Updated matching: {KXN: ZRT}.
Search from node FSX. Updated matching: {KXN: ZRT, ZVO: FSX}.
Search from node ITZ. Updated matching: {KXN: ZRT, ZVO: FSX, QRW: ITZ}.
So the maximum matching is ",3,8,291
bipartite,"[(VAO, WLF), (VAO, MEZ), (VAO, CFI), (VAO, IAR), (AFJ, WLF), (AFJ, GZX), (AFJ, FLZ), (AFJ, LXO), (AFJ, JLQ), (AFJ, IAR), (EMQ, XFM), (EMQ, GZX), (EMQ, FLZ), (EMQ, CFI), (EMQ, JLQ)]","{VAO: [WLF, MEZ, CFI, IAR],
AFJ: [WLF, GZX, FLZ, LXO, JLQ, IAR],
EMQ: [XFM, GZX, FLZ, CFI, JLQ],
XFM: [EMQ],
WLF: [VAO, AFJ],
GZX: [AFJ, EMQ],
FLZ: [AFJ, EMQ],
LXO: [AFJ],
MEZ: [VAO],
CFI: [VAO, EMQ],
JLQ: [AFJ, EMQ],
IAR: [VAO, AFJ]}","Node VAO is connected to nodes WLF, MEZ, CFI, IAR.
Node AFJ is connected to nodes WLF, GZX, FLZ, LXO, JLQ, IAR.
Node EMQ is connected to nodes XFM, GZX, FLZ, CFI, JLQ.
Node XFM is connected to node EMQ.
Node WLF is connected to nodes VAO, AFJ.
Node GZX is connected to nodes AFJ, EMQ.
Node FLZ is connected to nodes AFJ, EMQ.
Node LXO is connected to node AFJ.
Node MEZ is connected to node VAO.
Node CFI is connected to nodes VAO, EMQ.
Node JLQ is connected to nodes AFJ, EMQ.
Node IAR is connected to nodes VAO, AFJ.","[VAO, AFJ, EMQ, XFM, WLF, GZX, FLZ, LXO, MEZ, CFI, JLQ, IAR]",12,15,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: VAO AFJ EMQ.
Nodes set 2 contains: XFM WLF GZX FLZ LXO MEZ CFI JLQ IAR.","[(VAO, MEZ), (AFJ, WLF), (EMQ, XFM)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node VAO. Updated matching: {WLF: VAO}.
Search from node AFJ. Updated matching: {WLF: AFJ, MEZ: VAO}.
Search from node EMQ. Updated matching: {WLF: AFJ, MEZ: VAO, XFM: EMQ}.
So the maximum matching is ",3,9,292
bipartite,"[(QHN, CBX), (QHN, VZR), (QHN, JNA), (QHN, XXV), (LJX, JNA), (LJX, XXV), (RLE, JNA), (RLE, SSS)]","{QHN: [CBX, VZR, JNA, XXV],
LJX: [JNA, XXV],
RLE: [JNA, SSS],
CBX: [QHN],
VZR: [QHN],
JNA: [QHN, LJX, RLE],
SSS: [RLE],
XXV: [QHN, LJX]}","Node QHN is connected to nodes CBX, VZR, JNA, XXV.
Node LJX is connected to nodes JNA, XXV.
Node RLE is connected to nodes JNA, SSS.
Node CBX is connected to node QHN.
Node VZR is connected to node QHN.
Node JNA is connected to nodes QHN, LJX, RLE.
Node SSS is connected to node RLE.
Node XXV is connected to nodes QHN, LJX.","[QHN, LJX, RLE, CBX, VZR, JNA, SSS, XXV]",8,8,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: QHN LJX RLE.
Nodes set 2 contains: CBX VZR JNA SSS XXV.","[(QHN, CBX), (LJX, XXV), (RLE, JNA)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node QHN. Updated matching: {CBX: QHN}.
Search from node LJX. Updated matching: {CBX: QHN, JNA: LJX}.
Search from node RLE. Updated matching: {CBX: QHN, JNA: RLE, XXV: LJX}.
So the maximum matching is ",3,5,293
bipartite,"[(IWV, ZJS), (IWV, YGW), (IWV, OJL), (IWV, YED), (RNJ, SAP), (RNJ, DGN), (RNJ, YED), (LGM, YGW), (LGM, BXD), (LGM, KMD), (LGM, OJL), (VAB, ZJS), (VAB, YGW), (VAB, BXD), (VAB, SAP), (TZC, DGN)]","{IWV: [ZJS, YGW, OJL, YED],
RNJ: [SAP, DGN, YED],
LGM: [YGW, BXD, KMD, OJL],
VAB: [ZJS, YGW, BXD, SAP],
TZC: [DGN],
ZJS: [IWV, VAB],
YGW: [IWV, LGM, VAB],
BXD: [LGM, VAB],
SAP: [RNJ, VAB],
DGN: [RNJ, TZC],
KMD: [LGM],
OJL: [IWV, LGM],
YED: [IWV, RNJ]}","Node IWV is connected to nodes ZJS, YGW, OJL, YED.
Node RNJ is connected to nodes SAP, DGN, YED.
Node LGM is connected to nodes YGW, BXD, KMD, OJL.
Node VAB is connected to nodes ZJS, YGW, BXD, SAP.
Node TZC is connected to node DGN.
Node ZJS is connected to nodes IWV, VAB.
Node YGW is connected to nodes IWV, LGM, VAB.
Node BXD is connected to nodes LGM, VAB.
Node SAP is connected to nodes RNJ, VAB.
Node DGN is connected to nodes RNJ, TZC.
Node KMD is connected to node LGM.
Node OJL is connected to nodes IWV, LGM.
Node YED is connected to nodes IWV, RNJ.","[IWV, RNJ, LGM, VAB, TZC, ZJS, YGW, BXD, SAP, DGN, KMD, OJL, YED]",13,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: IWV RNJ LGM VAB TZC.
Nodes set 2 contains: ZJS YGW BXD SAP DGN KMD OJL YED.","[(IWV, YGW), (RNJ, SAP), (LGM, BXD), (VAB, ZJS), (TZC, DGN)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node IWV. Updated matching: {ZJS: IWV}.
Search from node RNJ. Updated matching: {ZJS: IWV, SAP: RNJ}.
Search from node LGM. Updated matching: {ZJS: IWV, SAP: RNJ, YGW: LGM}.
Search from node VAB. Updated matching: {ZJS: VAB, SAP: RNJ, YGW: IWV, BXD: LGM}.
Search from node TZC. Updated matching: {ZJS: VAB, SAP: RNJ, YGW: IWV, BXD: LGM, DGN: TZC}.
So the maximum matching is ",5,8,294
bipartite,"[(DLH, WVE), (DLH, NEB), (DLH, RFD), (DLH, GDP), (DLH, TLK), (MNN, WVE), (MNN, CPX), (MNN, NEB), (MNN, GDP)]","{DLH: [WVE, NEB, RFD, GDP, TLK],
MNN: [WVE, CPX, NEB, GDP],
WVE: [DLH, MNN],
CPX: [MNN],
NEB: [DLH, MNN],
RFD: [DLH],
GDP: [DLH, MNN],
TLK: [DLH]}","Node DLH is connected to nodes WVE, NEB, RFD, GDP, TLK.
Node MNN is connected to nodes WVE, CPX, NEB, GDP.
Node WVE is connected to nodes DLH, MNN.
Node CPX is connected to node MNN.
Node NEB is connected to nodes DLH, MNN.
Node RFD is connected to node DLH.
Node GDP is connected to nodes DLH, MNN.
Node TLK is connected to node DLH.","[DLH, MNN, WVE, CPX, NEB, RFD, GDP, TLK]",8,9,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: DLH MNN.
Nodes set 2 contains: WVE CPX NEB RFD GDP TLK.","[(DLH, NEB), (MNN, WVE)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node DLH. Updated matching: {WVE: DLH}.
Search from node MNN. Updated matching: {WVE: MNN, NEB: DLH}.
So the maximum matching is ",2,6,295
bipartite,"[(NVQ, IUI), (NVQ, EMG), (NVQ, NFD), (SDU, RWU), (SDU, OWB), (SDU, EMG), (SDU, NFD), (AKY, OWB), (AKY, PEE), (AKY, EMG)]","{NVQ: [IUI, EMG, NFD],
SDU: [RWU, OWB, EMG, NFD],
AKY: [OWB, PEE, EMG],
IUI: [NVQ],
RWU: [SDU],
OWB: [SDU, AKY],
PEE: [AKY],
EMG: [NVQ, SDU, AKY],
NFD: [NVQ, SDU]}","Node NVQ is connected to nodes IUI, EMG, NFD.
Node SDU is connected to nodes RWU, OWB, EMG, NFD.
Node AKY is connected to nodes OWB, PEE, EMG.
Node IUI is connected to node NVQ.
Node RWU is connected to node SDU.
Node OWB is connected to nodes SDU, AKY.
Node PEE is connected to node AKY.
Node EMG is connected to nodes NVQ, SDU, AKY.
Node NFD is connected to nodes NVQ, SDU.","[NVQ, SDU, AKY, IUI, RWU, OWB, PEE, EMG, NFD]",9,10,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: NVQ SDU AKY.
Nodes set 2 contains: IUI RWU OWB PEE EMG NFD.","[(NVQ, IUI), (SDU, RWU), (AKY, OWB)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node NVQ. Updated matching: {IUI: NVQ}.
Search from node SDU. Updated matching: {IUI: NVQ, RWU: SDU}.
Search from node AKY. Updated matching: {IUI: NVQ, RWU: SDU, OWB: AKY}.
So the maximum matching is ",3,6,296
bipartite,"[(KHC, TAL), (KHC, GYK), (KHC, MWW), (KHC, DND), (DSY, TAL), (DSY, GYK), (DSY, MWW), (DSY, JTU), (BNX, UBV), (BNX, JTU), (MAU, JDS), (MAU, GYK), (MAU, EZU), (AVT, ZAD), (AVT, GYK), (AVT, JTU)]","{KHC: [TAL, GYK, MWW, DND],
DSY: [TAL, GYK, MWW, JTU],
BNX: [UBV, JTU],
MAU: [JDS, GYK, EZU],
AVT: [ZAD, GYK, JTU],
TAL: [KHC, DSY],
JDS: [MAU],
ZAD: [AVT],
GYK: [KHC, DSY, MAU, AVT],
UBV: [BNX],
MWW: [KHC, DSY],
EZU: [MAU],
DND: [KHC],
JTU: [DSY, BNX, AVT]}","Node KHC is connected to nodes TAL, GYK, MWW, DND.
Node DSY is connected to nodes TAL, GYK, MWW, JTU.
Node BNX is connected to nodes UBV, JTU.
Node MAU is connected to nodes JDS, GYK, EZU.
Node AVT is connected to nodes ZAD, GYK, JTU.
Node TAL is connected to nodes KHC, DSY.
Node JDS is connected to node MAU.
Node ZAD is connected to node AVT.
Node GYK is connected to nodes KHC, DSY, MAU, AVT.
Node UBV is connected to node BNX.
Node MWW is connected to nodes KHC, DSY.
Node EZU is connected to node MAU.
Node DND is connected to node KHC.
Node JTU is connected to nodes DSY, BNX, AVT.","[KHC, DSY, BNX, MAU, AVT, TAL, JDS, ZAD, GYK, UBV, MWW, EZU, DND, JTU]",14,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: KHC DSY BNX MAU AVT.
Nodes set 2 contains: TAL JDS ZAD GYK UBV MWW EZU DND JTU.","[(KHC, GYK), (DSY, TAL), (BNX, UBV), (MAU, JDS), (AVT, ZAD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node KHC. Updated matching: {TAL: KHC}.
Search from node DSY. Updated matching: {TAL: DSY, GYK: KHC}.
Search from node BNX. Updated matching: {TAL: DSY, GYK: KHC, UBV: BNX}.
Search from node MAU. Updated matching: {TAL: DSY, GYK: KHC, UBV: BNX, JDS: MAU}.
Search from node AVT. Updated matching: {TAL: DSY, GYK: KHC, UBV: BNX, JDS: MAU, ZAD: AVT}.
So the maximum matching is ",5,9,297
bipartite,"[(KHI, VGO), (KHI, UYO), (KHI, CNU), (KHI, FUO), (KHI, YJM), (ICN, LDH), (ICN, CNU), (ICN, QRH), (ICN, FUO), (ICN, QXU), (ICN, MFR), (PKT, QRH), (PKT, FUO), (PKT, QXU), (PKT, MFR), (PKT, YJM)]","{KHI: [VGO, UYO, CNU, FUO, YJM],
ICN: [LDH, CNU, QRH, FUO, QXU, MFR],
PKT: [QRH, FUO, QXU, MFR, YJM],
LDH: [ICN],
VGO: [KHI],
UYO: [KHI],
CNU: [KHI, ICN],
QRH: [ICN, PKT],
FUO: [KHI, ICN, PKT],
QXU: [ICN, PKT],
MFR: [ICN, PKT],
YJM: [KHI, PKT]}","Node KHI is connected to nodes VGO, UYO, CNU, FUO, YJM.
Node ICN is connected to nodes LDH, CNU, QRH, FUO, QXU, MFR.
Node PKT is connected to nodes QRH, FUO, QXU, MFR, YJM.
Node LDH is connected to node ICN.
Node VGO is connected to node KHI.
Node UYO is connected to node KHI.
Node CNU is connected to nodes KHI, ICN.
Node QRH is connected to nodes ICN, PKT.
Node FUO is connected to nodes KHI, ICN, PKT.
Node QXU is connected to nodes ICN, PKT.
Node MFR is connected to nodes ICN, PKT.
Node YJM is connected to nodes KHI, PKT.","[KHI, ICN, PKT, LDH, VGO, UYO, CNU, QRH, FUO, QXU, MFR, YJM]",12,16,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: KHI ICN PKT.
Nodes set 2 contains: LDH VGO UYO CNU QRH FUO QXU MFR YJM.","[(KHI, VGO), (ICN, LDH), (PKT, QRH)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node KHI. Updated matching: {VGO: KHI}.
Search from node ICN. Updated matching: {VGO: KHI, LDH: ICN}.
Search from node PKT. Updated matching: {VGO: KHI, LDH: ICN, QRH: PKT}.
So the maximum matching is ",3,9,298
bipartite,"[(RET, XFD), (RET, OQS), (RET, ZHP), (RET, FSZ), (RET, COO), (RET, XTL), (WQL, XFD), (WQL, PZV), (WQL, JSO), (WQL, LIU), (WQL, OQS), (WQL, FSZ), (JPE, XFD), (JPE, JSO), (JPE, LIU), (JPE, OQS), (JPE, ZHP), (ADZ, XFD), (ADZ, PZV), (ADZ, OQS)]","{RET: [XFD, OQS, ZHP, FSZ, COO, XTL],
WQL: [XFD, PZV, JSO, LIU, OQS, FSZ],
JPE: [XFD, JSO, LIU, OQS, ZHP],
ADZ: [XFD, PZV, OQS],
XFD: [RET, WQL, JPE, ADZ],
PZV: [WQL, ADZ],
JSO: [WQL, JPE],
LIU: [WQL, JPE],
OQS: [RET, WQL, JPE, ADZ],
ZHP: [RET, JPE],
FSZ: [RET, WQL],
COO: [RET],
XTL: [RET]}","Node RET is connected to nodes XFD, OQS, ZHP, FSZ, COO, XTL.
Node WQL is connected to nodes XFD, PZV, JSO, LIU, OQS, FSZ.
Node JPE is connected to nodes XFD, JSO, LIU, OQS, ZHP.
Node ADZ is connected to nodes XFD, PZV, OQS.
Node XFD is connected to nodes RET, WQL, JPE, ADZ.
Node PZV is connected to nodes WQL, ADZ.
Node JSO is connected to nodes WQL, JPE.
Node LIU is connected to nodes WQL, JPE.
Node OQS is connected to nodes RET, WQL, JPE, ADZ.
Node ZHP is connected to nodes RET, JPE.
Node FSZ is connected to nodes RET, WQL.
Node COO is connected to node RET.
Node XTL is connected to node RET.","[RET, WQL, JPE, ADZ, XFD, PZV, JSO, LIU, OQS, ZHP, FSZ, COO, XTL]",13,20,False,"Find a maximum matching in the bipartite graph.
Nodes set 1 contains: RET WQL JPE ADZ.
Nodes set 2 contains: XFD PZV JSO LIU OQS ZHP FSZ COO XTL.","[(RET, OQS), (WQL, PZV), (JPE, JSO), (ADZ, XFD)]","To find a maximum matching in the bipartite graph, let's run the Hungarian algorithm step by step.
Firstly, initialize an empty matching {}.
Iterate over nodes in set 1:
Search from node RET. Updated matching: {XFD: RET}.
Search from node WQL. Updated matching: {XFD: WQL, OQS: RET}.
Search from node JPE. Updated matching: {XFD: JPE, OQS: RET, PZV: WQL}.
Search from node ADZ. Updated matching: {XFD: ADZ, OQS: RET, PZV: WQL, JSO: JPE}.
So the maximum matching is ",4,9,299
