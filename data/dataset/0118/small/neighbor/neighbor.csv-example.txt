####### sample 1 #######

>> task:

neighbor

>> graph:

[(<4>, <7>), (<4>, <3>), (<4>, <0>), (<7>, <1>), (<7>, <3>), (<7>, <5>), (<7>, <6>), (<7>, <4>), (<3>, <1>), (<0>, <6>), (<0>, <2>), (<1>, <2>), (<1>, <3>), (<1>, <0>), (<1>, <8>), (<1>, <4>), (<5>, <8>), (<5>, <6>), (<5>, <2>), (<5>, <3>), (<6>, <3>), (<6>, <5>), (<2>, <3>), (<2>, <1>), (<8>, <6>), (<8>, <3>), (<8>, <0>)]

>> graph_adj:

{<4>: [<7>, <3>, <0>],
<7>: [<1>, <3>, <5>, <6>, <4>],
<3>: [<1>],
<0>: [<6>, <2>],
<1>: [<2>, <3>, <0>, <8>, <4>],
<5>: [<8>, <6>, <2>, <3>],
<6>: [<3>, <5>],
<2>: [<3>, <1>],
<8>: [<6>, <3>, <0>]}

>> graph_nl:

Node <4> is connected to nodes <7>, <3>, <0>.
Node <7> is connected to nodes <1>, <3>, <5>, <6>, <4>.
Node <3> is connected to node <1>.
Node <0> is connected to nodes <6>, <2>.
Node <1> is connected to nodes <2>, <3>, <0>, <8>, <4>.
Node <5> is connected to nodes <8>, <6>, <2>, <3>.
Node <6> is connected to nodes <3>, <5>.
Node <2> is connected to nodes <3>, <1>.
Node <8> is connected to nodes <6>, <3>, <0>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]

>> num_nodes:

9

>> num_edges:

27

>> directed:

True

>> question:

Which are the neighbor nodes of node <6>? In the context of a directed graph, we consider a node's successors as its neighbors. 

>> answer:

[<3>, <5>]

>> steps:

Let's solve it step by step.
Node <6> connects to nodes [<3>, <5>], so the neighbors of node <6> are 

>> choices:

('[[], [<3>, <2>, <4>, <7>, <8>], [<3>, <5>], [<5>, <8>, <1>]]',)

>> label:

2

####### sample 2 #######

>> task:

neighbor

>> graph:

[(<3>, <1>), (<1>, <6>), (<6>, <4>), (<6>, <1>), (<8>, <2>), (<0>, <4>), (<0>, <2>), (<0>, <7>), (<0>, <1>), (<0>, <5>), (<7>, <6>), (<7>, <5>), (<7>, <2>)]

>> graph_adj:

{<3>: [<1>],
<1>: [<6>],
<6>: [<4>, <1>],
<4>: [],
<8>: [<2>],
<2>: [],
<0>: [<4>, <2>, <7>, <1>, <5>],
<7>: [<6>, <5>, <2>],
<5>: []}

>> graph_nl:

Node <3> is connected to node <1>.
Node <1> is connected to node <6>.
Node <6> is connected to nodes <4>, <1>.
Node <8> is connected to node <2>.
Node <0> is connected to nodes <4>, <2>, <7>, <1>, <5>.
Node <7> is connected to nodes <6>, <5>, <2>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]

>> num_nodes:

9

>> num_edges:

13

>> directed:

True

>> question:

Which are the neighbor nodes of node <5>? In the context of a directed graph, we consider a node's successors as its neighbors. 

>> answer:

[]

>> steps:

Let's solve it step by step.
Node <5> connects to nodes [], so the neighbors of node <5> are 

>> choices:

('[[<0>, <6>, <2>, <5>, <3>, <8>], [<6>, <4>, <3>, <8>, <7>, <1>, <5>], [], [<6>, <0>]]',)

>> label:

2

####### sample 3 #######

>> task:

neighbor

>> graph:

[(<1>, <4>), (<1>, <6>), (<1>, <2>), (<4>, <5>), (<6>, <0>), (<6>, <7>), (<5>, <3>), (<5>, <0>)]

>> graph_adj:

{<1>: [<4>, <6>, <2>],
<4>: [<1>, <5>],
<6>: [<1>, <0>, <7>],
<2>: [<1>],
<5>: [<4>, <3>, <0>],
<3>: [<5>],
<0>: [<5>, <6>],
<7>: [<6>]}

>> graph_nl:

Node <1> is connected to nodes <4>, <6>, <2>.
Node <4> is connected to nodes <1>, <5>.
Node <6> is connected to nodes <1>, <0>, <7>.
Node <2> is connected to node <1>.
Node <5> is connected to nodes <4>, <3>, <0>.
Node <3> is connected to node <5>.
Node <0> is connected to nodes <5>, <6>.
Node <7> is connected to node <6>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]

>> num_nodes:

8

>> num_edges:

8

>> directed:

False

>> question:

Which are the neighbor nodes of node <5>? 

>> answer:

[<4>, <3>, <0>]

>> steps:

Let's solve it step by step.
Node <5> connects to nodes [<4>, <3>, <0>], so the neighbors of node <5> are 

>> choices:

('[[<2>, <5>], [<4>, <3>, <0>], [<7>, <3>, <1>, <0>, <4>, <2>, <6>], [<6>, <4>, <7>, <1>]]',)

>> label:

1

####### sample 4 #######

>> task:

neighbor

>> graph:

[(<3>, <4>), (<3>, <6>), (<3>, <7>), (<4>, <6>), (<6>, <2>), (<0>, <1>), (<1>, <2>), (<1>, <5>)]

>> graph_adj:

{<3>: [<4>, <6>, <7>],
<4>: [<3>, <6>],
<6>: [<3>, <4>, <2>],
<7>: [<3>],
<0>: [<1>],
<1>: [<0>, <2>, <5>],
<2>: [<1>, <6>],
<5>: [<1>]}

>> graph_nl:

Node <3> is connected to nodes <4>, <6>, <7>.
Node <4> is connected to nodes <3>, <6>.
Node <6> is connected to nodes <3>, <4>, <2>.
Node <7> is connected to node <3>.
Node <0> is connected to node <1>.
Node <1> is connected to nodes <0>, <2>, <5>.
Node <2> is connected to nodes <1>, <6>.
Node <5> is connected to node <1>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>]

>> num_nodes:

8

>> num_edges:

8

>> directed:

False

>> question:

Which are the neighbor nodes of node <3>? 

>> answer:

[<4>, <6>, <7>]

>> steps:

Let's solve it step by step.
Node <3> connects to nodes [<4>, <6>, <7>], so the neighbors of node <3> are 

>> choices:

('[[<5>, <3>, <7>, <0>, <6>], [<1>, <6>, <0>, <4>, <7>, <2>, <5>], [<2>], [<4>, <6>, <7>]]',)

>> label:

3

####### sample 5 #######

>> task:

neighbor

>> graph:

[(<1>, <7>), (<1>, <2>), (<1>, <4>), (<7>, <5>), (<7>, <2>), (<2>, <3>), (<4>, <8>), (<6>, <8>), (<6>, <0>)]

>> graph_adj:

{<1>: [<7>, <2>, <4>],
<7>: [<1>, <5>, <2>],
<2>: [<1>, <7>, <3>],
<4>: [<1>, <8>],
<5>: [<7>],
<6>: [<8>, <0>],
<8>: [<6>, <4>],
<0>: [<6>],
<3>: [<2>]}

>> graph_nl:

Node <1> is connected to nodes <7>, <2>, <4>.
Node <7> is connected to nodes <1>, <5>, <2>.
Node <2> is connected to nodes <1>, <7>, <3>.
Node <4> is connected to nodes <1>, <8>.
Node <5> is connected to node <7>.
Node <6> is connected to nodes <8>, <0>.
Node <8> is connected to nodes <6>, <4>.
Node <0> is connected to node <6>.
Node <3> is connected to node <2>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]

>> num_nodes:

9

>> num_edges:

9

>> directed:

False

>> question:

Which are the neighbor nodes of node <3>? 

>> answer:

[<2>]

>> steps:

Let's solve it step by step.
Node <3> connects to nodes [<2>], so the neighbors of node <3> are 

>> choices:

('[[<4>, <7>, <6>, <5>, <2>, <1>], [<4>, <2>, <1>, <5>, <8>, <0>, <3>], [<6>, <1>, <0>, <7>, <3>], [<2>]]',)

>> label:

3

####### sample 6 #######

>> task:

neighbor

>> graph:

[(<8>, <4>), (<8>, <1>), (<8>, <9>), (<8>, <7>), (<8>, <0>), (<4>, <6>), (<4>, <9>), (<4>, <7>), (<4>, <2>), (<4>, <3>), (<4>, <8>), (<1>, <6>), (<1>, <9>), (<1>, <7>), (<9>, <5>), (<9>, <7>), (<9>, <0>), (<9>, <3>), (<9>, <8>), (<9>, <1>), (<7>, <8>), (<7>, <4>), (<7>, <1>), (<7>, <9>), (<0>, <5>), (<0>, <7>), (<6>, <0>), (<6>, <3>), (<2>, <4>), (<2>, <5>), (<2>, <7>), (<5>, <2>)]

>> graph_adj:

{<8>: [<4>, <1>, <9>, <7>, <0>],
<4>: [<6>, <9>, <7>, <2>, <3>, <8>],
<1>: [<6>, <9>, <7>],
<9>: [<5>, <7>, <0>, <3>, <8>, <1>],
<7>: [<8>, <4>, <1>, <9>],
<0>: [<5>, <7>],
<6>: [<0>, <3>],
<2>: [<4>, <5>, <7>],
<3>: [],
<5>: [<2>]}

>> graph_nl:

Node <8> is connected to nodes <4>, <1>, <9>, <7>, <0>.
Node <4> is connected to nodes <6>, <9>, <7>, <2>, <3>, <8>.
Node <1> is connected to nodes <6>, <9>, <7>.
Node <9> is connected to nodes <5>, <7>, <0>, <3>, <8>, <1>.
Node <7> is connected to nodes <8>, <4>, <1>, <9>.
Node <0> is connected to nodes <5>, <7>.
Node <6> is connected to nodes <0>, <3>.
Node <2> is connected to nodes <4>, <5>, <7>.
Node <5> is connected to node <2>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>]

>> num_nodes:

10

>> num_edges:

32

>> directed:

True

>> question:

Which are the neighbor nodes of node <1>? In the context of a directed graph, we consider a node's successors as its neighbors. 

>> answer:

[<6>, <9>, <7>]

>> steps:

Let's solve it step by step.
Node <1> connects to nodes [<6>, <9>, <7>], so the neighbors of node <1> are 

>> choices:

('[[<6>, <9>, <7>], [<0>, <3>, <7>, <4>, <6>, <5>, <1>, <8>, <2>], [<4>, <6>, <3>, <9>, <5>, <0>, <8>, <2>, <1>], []]',)

>> label:

0

####### sample 7 #######

>> task:

neighbor

>> graph:

[(<3>, <12>), (<3>, <6>), (<12>, <5>), (<12>, <3>), (<12>, <0>), (<12>, <9>), (<12>, <11>), (<0>, <12>), (<7>, <8>), (<7>, <4>), (<8>, <10>), (<8>, <13>), (<9>, <8>), (<9>, <12>), (<10>, <4>), (<10>, <13>), (<10>, <14>), (<10>, <9>), (<13>, <7>), (<13>, <2>), (<14>, <7>), (<14>, <11>), (<14>, <6>), (<11>, <12>), (<11>, <10>), (<5>, <0>), (<5>, <6>), (<1>, <5>), (<1>, <14>), (<1>, <2>), (<1>, <12>)]

>> graph_adj:

{<3>: [<12>, <6>],
<12>: [<5>, <3>, <0>, <9>, <11>],
<6>: [],
<0>: [<12>],
<7>: [<8>, <4>],
<8>: [<10>, <13>],
<4>: [],
<9>: [<8>, <12>],
<10>: [<4>, <13>, <14>, <9>],
<13>: [<7>, <2>],
<14>: [<7>, <11>, <6>],
<11>: [<12>, <10>],
<5>: [<0>, <6>],
<2>: [],
<1>: [<5>, <14>, <2>, <12>]}

>> graph_nl:

Node <3> is connected to nodes <12>, <6>.
Node <12> is connected to nodes <5>, <3>, <0>, <9>, <11>.
Node <0> is connected to node <12>.
Node <7> is connected to nodes <8>, <4>.
Node <8> is connected to nodes <10>, <13>.
Node <9> is connected to nodes <8>, <12>.
Node <10> is connected to nodes <4>, <13>, <14>, <9>.
Node <13> is connected to nodes <7>, <2>.
Node <14> is connected to nodes <7>, <11>, <6>.
Node <11> is connected to nodes <12>, <10>.
Node <5> is connected to nodes <0>, <6>.
Node <1> is connected to nodes <5>, <14>, <2>, <12>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>, <11>, <12>, <13>, <14>]

>> num_nodes:

15

>> num_edges:

31

>> directed:

True

>> question:

Which are the neighbor nodes of node <14>? In the context of a directed graph, we consider a node's successors as its neighbors. 

>> answer:

[<7>, <11>, <6>]

>> steps:

Let's solve it step by step.
Node <14> connects to nodes [<7>, <11>, <6>], so the neighbors of node <14> are 

>> choices:

('[[<7>, <11>, <6>], [<3>, <13>], [<11>, <12>, <5>, <9>, <4>, <1>, <13>, <14>], [<11>, <9>, <1>, <13>, <4>]]',)

>> label:

0

####### sample 8 #######

>> task:

neighbor

>> graph:

[(<5>, <2>), (<5>, <9>), (<2>, <9>), (<9>, <4>), (<6>, <3>), (<6>, <10>), (<3>, <7>), (<7>, <4>), (<4>, <1>), (<1>, <8>), (<0>, <8>)]

>> graph_adj:

{<5>: [<2>, <9>],
<2>: [<5>, <9>],
<9>: [<5>, <2>, <4>],
<6>: [<3>, <10>],
<3>: [<6>, <7>],
<10>: [<6>],
<7>: [<3>, <4>],
<4>: [<7>, <9>, <1>],
<1>: [<4>, <8>],
<0>: [<8>],
<8>: [<0>, <1>]}

>> graph_nl:

Node <5> is connected to nodes <2>, <9>.
Node <2> is connected to nodes <5>, <9>.
Node <9> is connected to nodes <5>, <2>, <4>.
Node <6> is connected to nodes <3>, <10>.
Node <3> is connected to nodes <6>, <7>.
Node <10> is connected to node <6>.
Node <7> is connected to nodes <3>, <4>.
Node <4> is connected to nodes <7>, <9>, <1>.
Node <1> is connected to nodes <4>, <8>.
Node <0> is connected to node <8>.
Node <8> is connected to nodes <0>, <1>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>, <9>, <10>]

>> num_nodes:

11

>> num_edges:

11

>> directed:

False

>> question:

Which are the neighbor nodes of node <5>? 

>> answer:

[<2>, <9>]

>> steps:

Let's solve it step by step.
Node <5> connects to nodes [<2>, <9>], so the neighbors of node <5> are 

>> choices:

('[[<2>, <8>, <9>, <3>, <5>], [<2>, <5>, <8>, <1>], [<3>], [<2>, <9>]]',)

>> label:

3

####### sample 9 #######

>> task:

neighbor

>> graph:

[(<4>, <8>), (<4>, <2>), (<4>, <7>), (<8>, <5>), (<8>, <7>), (<8>, <6>), (<2>, <5>), (<2>, <7>), (<2>, <3>), (<2>, <4>), (<2>, <0>), (<2>, <8>), (<7>, <0>), (<7>, <8>), (<7>, <2>), (<0>, <2>), (<0>, <5>), (<0>, <4>), (<5>, <6>), (<5>, <0>), (<5>, <1>), (<5>, <2>), (<1>, <2>), (<1>, <5>), (<1>, <7>), (<1>, <3>), (<1>, <4>), (<1>, <0>), (<3>, <0>), (<3>, <6>)]

>> graph_adj:

{<4>: [<8>, <2>, <7>],
<8>: [<5>, <7>, <6>],
<2>: [<5>, <7>, <3>, <4>, <0>, <8>],
<7>: [<0>, <8>, <2>],
<0>: [<2>, <5>, <4>],
<5>: [<6>, <0>, <1>, <2>],
<6>: [],
<1>: [<2>, <5>, <7>, <3>, <4>, <0>],
<3>: [<0>, <6>]}

>> graph_nl:

Node <4> is connected to nodes <8>, <2>, <7>.
Node <8> is connected to nodes <5>, <7>, <6>.
Node <2> is connected to nodes <5>, <7>, <3>, <4>, <0>, <8>.
Node <7> is connected to nodes <0>, <8>, <2>.
Node <0> is connected to nodes <2>, <5>, <4>.
Node <5> is connected to nodes <6>, <0>, <1>, <2>.
Node <1> is connected to nodes <2>, <5>, <7>, <3>, <4>, <0>.
Node <3> is connected to nodes <0>, <6>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]

>> num_nodes:

9

>> num_edges:

30

>> directed:

True

>> question:

Which are the neighbor nodes of node <7>? In the context of a directed graph, we consider a node's successors as its neighbors. 

>> answer:

[<0>, <8>, <2>]

>> steps:

Let's solve it step by step.
Node <7> connects to nodes [<0>, <8>, <2>], so the neighbors of node <7> are 

>> choices:

('[[<0>, <8>, <2>], [<6>, <0>, <3>, <1>], [<5>, <3>, <8>, <2>, <7>, <6>, <0>], [<3>, <0>, <4>, <5>]]',)

>> label:

0

####### sample 10 #######

>> task:

neighbor

>> graph:

[(<6>, <8>), (<6>, <3>), (<6>, <0>), (<6>, <4>), (<6>, <1>), (<6>, <5>), (<6>, <7>), (<8>, <3>), (<8>, <0>), (<8>, <4>), (<8>, <1>), (<3>, <0>), (<3>, <1>), (<3>, <5>), (<3>, <7>), (<3>, <2>), (<0>, <1>), (<0>, <2>), (<4>, <1>), (<4>, <5>), (<4>, <2>), (<1>, <5>), (<1>, <7>), (<5>, <7>), (<7>, <2>)]

>> graph_adj:

{<6>: [<8>, <3>, <0>, <4>, <1>, <5>, <7>],
<8>: [<6>, <3>, <0>, <4>, <1>],
<3>: [<6>, <8>, <0>, <1>, <5>, <7>, <2>],
<0>: [<6>, <8>, <3>, <1>, <2>],
<4>: [<6>, <8>, <1>, <5>, <2>],
<1>: [<6>, <8>, <3>, <0>, <4>, <5>, <7>],
<5>: [<6>, <3>, <4>, <1>, <7>],
<7>: [<6>, <3>, <1>, <5>, <2>],
<2>: [<3>, <0>, <4>, <7>]}

>> graph_nl:

Node <6> is connected to nodes <8>, <3>, <0>, <4>, <1>, <5>, <7>.
Node <8> is connected to nodes <6>, <3>, <0>, <4>, <1>.
Node <3> is connected to nodes <6>, <8>, <0>, <1>, <5>, <7>, <2>.
Node <0> is connected to nodes <6>, <8>, <3>, <1>, <2>.
Node <4> is connected to nodes <6>, <8>, <1>, <5>, <2>.
Node <1> is connected to nodes <6>, <8>, <3>, <0>, <4>, <5>, <7>.
Node <5> is connected to nodes <6>, <3>, <4>, <1>, <7>.
Node <7> is connected to nodes <6>, <3>, <1>, <5>, <2>.
Node <2> is connected to nodes <3>, <0>, <4>, <7>.

>> nodes:

[<0>, <1>, <2>, <3>, <4>, <5>, <6>, <7>, <8>]

>> num_nodes:

9

>> num_edges:

25

>> directed:

False

>> question:

Which are the neighbor nodes of node <5>? 

>> answer:

[<6>, <3>, <4>, <1>, <7>]

>> steps:

Let's solve it step by step.
Node <5> connects to nodes [<6>, <3>, <4>, <1>, <7>], so the neighbors of node <5> are 

>> choices:

('[[<6>, <3>, <4>, <1>, <7>], [<1>, <0>], [<4>, <6>], []]',)

>> label:

0

